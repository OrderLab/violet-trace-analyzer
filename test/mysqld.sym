
/home/ryan/project/violet/projects/mysqld/mysqld:     file format elf64-x86-64

SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .gnu.hash	0000000000000000              .gnu.hash
0000000000426c78 l    d  .dynsym	0000000000000000              .dynsym
0000000000497f40 l    d  .dynstr	0000000000000000              .dynstr
000000000053b4fa l    d  .gnu.version	0000000000000000              .gnu.version
0000000000544be0 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000544d50 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000547708 l    d  .rela.plt	0000000000000000              .rela.plt
00000000005490a0 l    d  .init	0000000000000000              .init
00000000005490c0 l    d  .plt	0000000000000000              .plt
000000000054a1e0 l    d  .plt.got	0000000000000000              .plt.got
000000000054a1f0 l    d  .text	0000000000000000              .text
0000000000c00bf0 l    d  .fini	0000000000000000              .fini
0000000000c00c00 l    d  .rodata	0000000000000000              .rodata
0000000000d54e08 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000d880c8 l    d  .eh_frame	0000000000000000              .eh_frame
000000000105c268 l    d  .init_array	0000000000000000              .init_array
000000000105c350 l    d  .fini_array	0000000000000000              .fini_array
000000000105c358 l    d  .jcr	0000000000000000              .jcr
000000000105c360 l    d  .data.rel.ro	0000000000000000              .data.rel.ro
00000000010ccd80 l    d  .dynamic	0000000000000000              .dynamic
00000000010ccfc0 l    d  .got	0000000000000000              .got
00000000010cd000 l    d  .got.plt	0000000000000000              .got.plt
00000000010cd8a0 l    d  .data	0000000000000000              .data
000000000136cb80 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_ranges	0000000000000000              .debug_ranges
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
000000000105c358 l     O .jcr	0000000000000000              __JCR_LIST__
000000000054a220 l     F .text	0000000000000000              deregister_tm_clones
000000000054a260 l     F .text	0000000000000000              register_tm_clones
000000000054a2a0 l     F .text	0000000000000000              __do_global_dtors_aux
000000000136cb80 l     O .bss	0000000000000001              completed.7594
000000000105c350 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
000000000054a2c0 l     F .text	0000000000000000              frame_dummy
000000000105c268 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              main.cc
0000000000000000 l    df *ABS*	0000000000000000              mysqld.cc
000000000054a308 l     F .text	0000000000000071              inline_mysql_mutex_init
000000000054a379 l     F .text	0000000000000080              inline_mysql_mutex_destroy
000000000054a3f9 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000054a510 l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000054a58d l     F .text	000000000000005f              inline_mysql_rwlock_init
000000000054a5ec l     F .text	000000000000006f              inline_mysql_rwlock_destroy
000000000054a65b l     F .text	0000000000000065              inline_mysql_cond_init
000000000054a6c0 l     F .text	000000000000006f              inline_mysql_cond_destroy
000000000054a72f l     F .text	0000000000000133              inline_mysql_cond_wait
000000000054a862 l     F .text	0000000000000143              inline_mysql_cond_timedwait
000000000054a9a5 l     F .text	000000000000006c              inline_mysql_cond_signal
000000000054aa11 l     F .text	000000000000006c              inline_mysql_cond_broadcast
000000000054aa7d l     F .text	000000000000007e              inline_mysql_thread_create
0000000000c083a0 l     O .rodata	000000000000002f              base_ilist::move_elements_to(base_ilist*)::__PRETTY_FUNCTION__
0000000000c083e0 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
000000000054aafb l     F .text	000000000000012e              inline_mysql_file_stat(unsigned int, char const*, unsigned int, char const*, stat*, int)
000000000054ac29 l     F .text	000000000000018f              inline_mysql_file_fopen(unsigned int, char const*, unsigned int, char const*, int, int)
000000000054adb8 l     F .text	000000000000017d              inline_mysql_file_fclose(char const*, unsigned int, st_mysql_file*, int)
0000000000c082c0 l     O .rodata	0000000000000042              inline_mysql_file_fclose(char const*, unsigned int, st_mysql_file*, int)::__PRETTY_FUNCTION__
000000000054af35 l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
000000000054b060 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
000000000054b18a l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
000000000054b28a l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
000000000054b406 l     F .text	0000000000000174              inline_mysql_file_write(char const*, unsigned int, int, unsigned char const*, unsigned long, int)
000000000054b57a l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
0000000000c00d90 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
000000000054b699 l     F .text	0000000000000034              ha_storage_engine_is_enabled(handlerton const*)
0000000000c00d98 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c00d9c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c00da0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c00da4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c00da8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105c360 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c00de4 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
000000000054b6cd l     F .text	0000000000000121              make_user_name(THD*, char*)
000000000054b7ee l     F .text	00000000000003c8              mysql_audit_general(THD*, unsigned int, int, char const*)
00000000010ce780 l     O .data	0000000000000010              mysql_audit_general(THD*, unsigned int, int, char const*)::empty
000000000054bbb6 l     F .text	0000000000000022              __s2e_touch_string
000000000054bbd8 l     F .text	000000000000003d              __s2e_touch_buffer
000000000054bc15 l     F .text	0000000000000029              s2e_message
000000000054bc3e l     F .text	00000000000000ee              s2e_printf
000000000054bd2c l     F .text	000000000000004d              s2e_make_symbolic
00000000010cd900 l     O .data	0000000000000018              bool_values
00000000010cd940 l     O .data	0000000000000018              tc_heuristic_recover_names
00000000010cd960 l     O .data	0000000000000020              tc_heuristic_recover_typelib
0000000001370908 l     O .bss	0000000000000001              opt_autocommit
0000000001370909 l     O .bss	0000000000000001              opt_help
000000000137090a l     O .bss	0000000000000001              opt_verbose
000000000137090b l     O .bss	0000000000000001              lower_case_table_names_used
000000000137090c l     O .bss	0000000000000001              max_long_data_size_used
000000000137090d l     O .bss	0000000000000001              select_thread_in_use
000000000137090e l     O .bss	0000000000000001              signal_thread_in_use
000000000137090f l     O .bss	0000000000000001              opt_debugging
0000000001370910 l     O .bss	0000000000000001              opt_external_locking
0000000001370911 l     O .bss	0000000000000001              opt_console
0000000001370912 l     O .bss	0000000000000001              opt_short_log_format
0000000001370914 l     O .bss	0000000000000004              kill_cached_threads
0000000001370918 l     O .bss	0000000000000004              wake_thread
0000000001370920 l     O .bss	0000000000000008              killed_threads
0000000001370928 l     O .bss	0000000000000008              cached_thread_count
0000000001370930 l     O .bss	0000000000000008              mysqld_user
0000000001370938 l     O .bss	0000000000000008              mysqld_chroot
0000000001370940 l     O .bss	0000000000000008              default_character_set_name
0000000001370948 l     O .bss	0000000000000008              character_set_filesystem_name
0000000001370950 l     O .bss	0000000000000008              lc_messages
0000000001370958 l     O .bss	0000000000000008              lc_time_names_name
0000000001370960 l     O .bss	0000000000000008              my_bind_addr_str
0000000001370968 l     O .bss	0000000000000008              default_collation_name
00000000010cd8c0 l     O .data	0000000000000012              compiled_default_collation_name
0000000001370980 l     O .bss	0000000000000020              thread_cache
00000000013709a0 l     O .bss	0000000000000001              binlog_format_used
00000000013709c0 l     O .bss	0000000000000038              COND_thread_cache
0000000001370a00 l     O .bss	0000000000000038              COND_flush_thread_cache
0000000001370a38 l     O .bss	0000000000000004              kill_in_progress
0000000001370a3c l     O .bss	0000000000000001              opt_bootstrap
0000000001370a3d l     O .bss	0000000000000001              opt_myisam_log
0000000001370a40 l     O .bss	0000000000000004              cleanup_done
0000000001370a48 l     O .bss	0000000000000008              opt_specialflag
0000000001370a50 l     O .bss	0000000000000008              opt_update_logname
0000000001370a58 l     O .bss	0000000000000008              opt_binlog_index_name
0000000001370a60 l     O .bss	0000000000000004              defaults_argc
0000000001370a68 l     O .bss	0000000000000008              defaults_argv
0000000001370a70 l     O .bss	0000000000000004              remaining_argc
0000000001370a78 l     O .bss	0000000000000008              remaining_argv
0000000001370a80 l     O .bss	0000000000000050              buffered_logs
000000000054c006 l     F .text	00000000000000ee              buffered_option_error_reporter
0000000001370ad0 l     O .bss	0000000000000004              unix_sock
0000000001370ad4 l     O .bss	0000000000000004              ip_sock
0000000001370ad8 l     O .bss	0000000000000008              select_thread
0000000001370ae0 l     O .bss	0000000000000004              thr_kill_signal
0000000001370ae4 l     O .bss	0000000000000001              plugins_are_initialized
0000000001370ae8 l     O .bss	0000000000000008              default_dbug_option
0000000001370af0 l     O .bss	0000000000000001              pid_file_created
000000000054c0f4 l     F .text	0000000000000791              close_connections()
000000000054c885 l     F .text	0000000000000007              close_server_sock()
000000000054c961 l     F .text	0000000000000280              kill_server(void*)
0000000000c08100 l     O .rodata	0000000000000019              kill_server(void*)::__PRETTY_FUNCTION__
000000000054cc57 l     F .text	0000000000000032              init_error_log_mutex()
000000000054cc89 l     F .text	0000000000000022              clean_up_error_log_mutex()
000000000054cdd0 l     F .text	00000000000003ad              clean_up(bool)
0000000000554eea l     F .text	0000000000000166              usage()
000000000054cd86 l     F .text	000000000000004a              mysqld_exit(int)
000000000054d17d l     F .text	0000000000000065              wait_for_signal_thread_to_end()
000000000054d1e2 l     F .text	000000000000026e              clean_up_mutexes()
0000000000551157 l     F .text	0000000000000036              end_ssl()
00000000005580de l     F .text	000000000000015c              delete_pid_file(int)
000000000054d450 l     F .text	00000000000000fb              set_ports()
000000000054d54b l     F .text	0000000000000185              check_user(char const*)
000000000054d6d0 l     F .text	00000000000000c4              set_user(char const*, passwd*)
0000000000c08120 l     O .rodata	0000000000000024              set_user(char const*, passwd*)::__PRETTY_FUNCTION__
000000000054d794 l     F .text	000000000000009b              set_effective_user(passwd*)
0000000000c08160 l     O .rodata	0000000000000021              set_effective_user(passwd*)::__PRETTY_FUNCTION__
000000000054d82f l     F .text	000000000000004c              set_root(char const*)
000000000054d87b l     F .text	000000000000012e              create_socket(addrinfo const*, int, addrinfo**)
000000000054d9a9 l     F .text	00000000000007c5              network_init()
0000000000c08190 l     O .rodata	0000000000000014              network_init()::__PRETTY_FUNCTION__
0000000000c081b0 l     O .rodata	0000000000000016              delete_thd(THD*)::__PRETTY_FUNCTION__
000000000054e5c2 l     F .text	00000000000002bd              cache_thread()
0000000000c081d0 l     O .rodata	0000000000000014              cache_thread()::__PRETTY_FUNCTION__
000000000054ea2f l     F .text	000000000000065e              init_signals()
0000000000c081f0 l     O .rodata	0000000000000014              init_signals()::__PRETTY_FUNCTION__
000000000054f08d l     F .text	0000000000000169              start_signal_handler()
0000000000557f9e l     F .text	0000000000000140              create_pid_file()
000000000054f6df l     F .text	000000000000000b              check_data_home(char const*)
0000000000c08220 l     O .rodata	000000000000002c              my_message_sql::__PRETTY_FUNCTION__
000000000054f959 l     F .text	0000000000000073              init_global_datetime_format(enum_mysql_timestamp_type, st_date_time_format*)
00000000010ce790 l     O .data	0000000000000010              init_sql_statement_names()::empty
0000000000c08260 l     O .rodata	0000000000000020              init_sql_statement_names()::__PRETTY_FUNCTION__
000000000054fb8b l     F .text	000000000000002c              make_default_log_name(char*, char const*)
000000000054fbb7 l     F .text	0000000000000f65              init_common_variables()
0000000000550b1c l     F .text	00000000000004ef              init_thread_environment()
0000000000555050 l     F .text	00000000000007a1              mysql_init_variables()
000000000055680f l     F .text	0000000000000657              get_options(int*, char***)
0000000000556e66 l     F .text	000000000000009f              set_server_version()
0000000000557d5b l     F .text	0000000000000243              test_if_case_insensitive(char const*)
000000000055100b l     F .text	000000000000014c              init_ssl()
000000000055118d l     F .text	0000000000000d10              init_server_components()
0000000000c08280 l     O .rodata	000000000000001d              init_server_components()::__PRETTY_FUNCTION__
000000000055674e l     F .text	00000000000000c1              violet_make_plugin_options_symbolic(st_plugin_int**)
0000000000551e9d l     F .text	0000000000000007              create_shutdown_thread()
0000000000551ea4 l     F .text	000000000000024e              test_lc_time_sz()
0000000000c082a0 l     O .rodata	0000000000000017              test_lc_time_sz()::__PRETTY_FUNCTION__
0000000000554c4f l     F .text	000000000000006e              add_terminator(st_dynamic_array*)
0000000000552aad l     F .text	0000000000000254              bootstrap(st_mysql_file*)
0000000000552d01 l     F .text	000000000000010f              read_init_file(char*)
0000000000c08320 l     O .rodata	000000000000002c              handle_connection_in_main_thread(THD*)::__PRETTY_FUNCTION__
00000000005532a3 l     F .text	0000000000000240              create_new_thread(THD*)
0000000000553b23 l     F .text	0000000000000035              show_queries(THD*, st_mysql_show_var*, char*)
0000000000553b58 l     F .text	0000000000000035              show_net_compression(THD*, st_mysql_show_var*, char*)
0000000000553b8d l     F .text	0000000000000055              show_starttime(THD*, st_mysql_show_var*, char*)
0000000000553be2 l     F .text	0000000000000055              show_flushstatustime(THD*, st_mysql_show_var*, char*)
0000000000553c37 l     F .text	0000000000000044              show_rpl_status(THD*, st_mysql_show_var*, char*)
0000000000553c7b l     F .text	00000000000000b4              show_slave_running(THD*, st_mysql_show_var*, char*)
0000000000553d2f l     F .text	00000000000000e7              show_slave_retried_trans(THD*, st_mysql_show_var*, char*)
0000000000553e16 l     F .text	00000000000000e7              show_slave_received_heartbeats(THD*, st_mysql_show_var*, char*)
0000000000553efd l     F .text	00000000000000b2              show_heartbeat_period(THD*, st_mysql_show_var*, char*)
0000000000553faf l     F .text	0000000000000040              show_open_tables(THD*, st_mysql_show_var*, char*)
0000000000553fef l     F .text	000000000000007c              show_prepared_stmt_count(THD*, st_mysql_show_var*, char*)
000000000055406b l     F .text	0000000000000040              show_table_definitions(THD*, st_mysql_show_var*, char*)
00000000005540ab l     F .text	0000000000000067              show_ssl_ctx_sess_accept(THD*, st_mysql_show_var*, char*)
0000000000554112 l     F .text	0000000000000067              show_ssl_ctx_sess_accept_good(THD*, st_mysql_show_var*, char*)
0000000000554179 l     F .text	0000000000000067              show_ssl_ctx_sess_connect_good(THD*, st_mysql_show_var*, char*)
00000000005541e0 l     F .text	0000000000000067              show_ssl_ctx_sess_accept_renegotiate(THD*, st_mysql_show_var*, char*)
0000000000554247 l     F .text	0000000000000067              show_ssl_ctx_sess_connect_renegotiate(THD*, st_mysql_show_var*, char*)
00000000005542ae l     F .text	0000000000000067              show_ssl_ctx_sess_cb_hits(THD*, st_mysql_show_var*, char*)
0000000000554315 l     F .text	0000000000000067              show_ssl_ctx_sess_hits(THD*, st_mysql_show_var*, char*)
000000000055437c l     F .text	0000000000000067              show_ssl_ctx_sess_cache_full(THD*, st_mysql_show_var*, char*)
00000000005543e3 l     F .text	0000000000000067              show_ssl_ctx_sess_misses(THD*, st_mysql_show_var*, char*)
000000000055444a l     F .text	0000000000000067              show_ssl_ctx_sess_timeouts(THD*, st_mysql_show_var*, char*)
00000000005544b1 l     F .text	0000000000000067              show_ssl_ctx_sess_number(THD*, st_mysql_show_var*, char*)
0000000000554518 l     F .text	0000000000000067              show_ssl_ctx_sess_connect(THD*, st_mysql_show_var*, char*)
000000000055457f l     F .text	0000000000000067              show_ssl_ctx_sess_get_cache_size(THD*, st_mysql_show_var*, char*)
00000000005545e6 l     F .text	0000000000000066              show_ssl_ctx_get_verify_mode(THD*, st_mysql_show_var*, char*)
000000000055464c l     F .text	0000000000000066              show_ssl_ctx_get_verify_depth(THD*, st_mysql_show_var*, char*)
00000000005546b2 l     F .text	0000000000000103              show_ssl_ctx_get_session_cache_mode(THD*, st_mysql_show_var*, char*)
00000000005547b5 l     F .text	0000000000000093              show_ssl_get_version(THD*, st_mysql_show_var*, char*)
0000000000554848 l     F .text	000000000000009a              show_ssl_session_reused(THD*, st_mysql_show_var*, char*)
00000000005548e2 l     F .text	000000000000009a              show_ssl_get_default_timeout(THD*, st_mysql_show_var*, char*)
000000000055497c l     F .text	000000000000008a              show_ssl_get_verify_mode(THD*, st_mysql_show_var*, char*)
0000000000554a06 l     F .text	000000000000009a              show_ssl_get_verify_depth(THD*, st_mysql_show_var*, char*)
0000000000554aa0 l     F .text	0000000000000093              show_ssl_get_cipher(THD*, st_mysql_show_var*, char*)
0000000000554b33 l     F .text	000000000000011c              show_ssl_get_cipher_list(THD*, st_mysql_show_var*, char*)
0000000000554cbd l     F .text	0000000000000046              print_version()
0000000000554d03 l     F .text	00000000000000e6              option_cmp(my_option*, my_option*)
0000000000c08360 l     O .rodata	0000000000000027              option_cmp(my_option*, my_option*)::__PRETTY_FUNCTION__
0000000000554de9 l     F .text	0000000000000101              print_help()
0000000000556f05 l     F .text	000000000000006b              get_relative_path(char const*)
0000000000556086 l     F .text	00000000000000de              mysql_getopt_value
0000000000556164 l     F .text	00000000000000f6              option_error_reporter
0000000001370af8 l     O .bss	0000000000000008              sym_config_targets
0000000001370b00 l     O .bss	0000000000000008              sym_config_targets_len
0000000001370b08 l     O .bss	0000000000000001              sym_config_targets_all
000000000055646b l     F .text	00000000000000dc              is_config_in_targets(char const*)
0000000000556547 l     F .text	00000000000000a0              s2e_make_symbolic_wrapper(void*, unsigned long, char const*)
00000000005565e7 l     F .text	0000000000000167              violet_make_options_symbolic()
0000000000557779 l     F .text	00000000000005e2              fix_paths()
00000000010d14e0 l     O .data	0000000000000450              all_server_mutexes
00000000010d1940 l     O .data	0000000000000090              all_server_rwlocks
00000000010d19e0 l     O .data	0000000000000288              all_server_conds
00000000010d1c80 l     O .data	0000000000000090              all_server_threads
00000000010d1d20 l     O .data	00000000000002b8              all_server_files
0000000000558431 l     F .text	0000000000000275              __static_initialization_and_destruction_0(int, int)
00000000005586a6 l     F .text	0000000000000015              _GLOBAL__sub_I_mysqld.cc
0000000000000000 l    df *ABS*	0000000000000000              net_serv.cc
000000000055a1c7 l     F .text	0000000000000085              net_data_is_ready(int)
000000000055a8d5 l     F .text	00000000000001f6              net_write_buff(st_net*, unsigned char const*, unsigned long)
000000000055af7f l     F .text	0000000000000686              my_real_read(st_net*, unsigned long*)
0000000000c086c0 l     O .rodata	0000000000000022              my_real_read(st_net*, unsigned long*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              keycaches.cc
000000000055c06a l     F .text	000000000000004f              __static_initialization_and_destruction_0(int, int)
000000000055c0b9 l     F .text	0000000000000015              _GLOBAL__sub_I_keycaches.cc
0000000000000000 l    df *ABS*	0000000000000000              client_plugin.c
00000000013714e0 l     O .bss	0000000000000001              initialized
0000000001371500 l     O .bss	0000000000000038              mem_root
00000000010d2000 l     O .data	0000000000000008              plugin_declarations_sym
00000000010d1ff0 l     O .data	000000000000000c              plugin_version
0000000001371540 l     O .bss	0000000000000068              LOCK_load_client_plugin
000000000055c31d l     F .text	0000000000000065              is_not_initialized
000000000055c382 l     F .text	00000000000000d0              find_plugin
0000000000c08a90 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.10845
000000000055c452 l     F .text	00000000000002e8              add_plugin
0000000000c08aa0 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.10860
000000000055c73a l     F .text	00000000000000e8              load_env_plugins
0000000000000000 l    df *ABS*	0000000000000000              parse_file.cc
000000000055d31c l     F .text	000000000000012e              inline_mysql_file_stat(unsigned int, char const*, unsigned int, char const*, stat*, int)
000000000055d44a l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
000000000055d575 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
000000000055d69f l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
000000000055d79f l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
000000000055d91b l     F .text	000000000000012e              inline_mysql_file_rename(unsigned int, char const*, unsigned int, char const*, char const*, int)
000000000055da49 l     F .text	0000000000000107              inline_mysql_file_sync(char const*, unsigned int, int, int)
0000000000c08ac0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
000000000055db50 l     F .text	000000000000019a              write_escaped_string(st_io_cache*, st_mysql_lex_string*)
000000000055dcea l     F .text	0000000000000542              write_parameter(st_io_cache*, unsigned char*, File_option*)
0000000000c08c40 l     O .rodata	0000000000000039              write_parameter(st_io_cache*, unsigned char*, File_option*)::__PRETTY_FUNCTION__
000000000055ee01 l     F .text	000000000000009e              parse_string(char*, char*, st_mem_root*, st_mysql_lex_string*)
000000000055f056 l     F .text	000000000000011b              parse_quoted_escaped_string(char*, char*, st_mem_root*, st_mysql_lex_string*)
0000000000c08c80 l     O .rodata	0000000000000055              File_parser::parse(unsigned char*, st_mem_root*, File_option*, unsigned int, Unknown_key_hook*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              password.c
000000000056033e l     F .text	000000000000003c              char_val
0000000000560556 l     F .text	000000000000008a              hex2octet
00000000005605e0 l     F .text	000000000000005e              my_crypt
0000000000000000 l    df *ABS*	0000000000000000              protocol.cc
0000000000c08d20 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000560a56 l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
0000000000560a88 l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000560aa2 l     F .text	0000000000000025              dbug_tmp_use_all_columns(TABLE*, st_bitmap*)
0000000000560ac7 l     F .text	0000000000000026              dbug_tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000c09780 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c09740 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000c09700 l     O .rodata	0000000000000033              Diagnostics_area::get_sqlstate() const::__PRETTY_FUNCTION__
0000000000c09800 l     O .rodata	0000000000000032              Diagnostics_area::affected_rows() const::__PRETTY_FUNCTION__
0000000000c097c0 l     O .rodata	0000000000000033              Diagnostics_area::last_insert_id() const::__PRETTY_FUNCTION__
0000000000c09840 l     O .rodata	0000000000000034              Diagnostics_area::statement_warn_count() const::__PRETTY_FUNCTION__
0000000000560aed l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000c08de8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c08dec l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c08df0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c08df4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c08df8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105c3c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c08e34 l     O .rodata	0000000000000004              PACKET_BUFFER_EXTRA_ALLOC
0000000000c096a0 l     O .rodata	000000000000003a              net_send_error(THD*, unsigned int, char const*, char const*)::__PRETTY_FUNCTION__
00000000010d2008 l     O .data	0000000000000001              eof_buff
0000000000561462 l     F .text	00000000000000ea              write_eof_packet(THD*, st_net*, unsigned int, unsigned int)
000000000056179c l     F .text	0000000000000063              net_store_length_fast(unsigned char*, unsigned int)
0000000000c096e0 l     O .rodata	000000000000001f              Protocol::end_statement()::__PRETTY_FUNCTION__
0000000000c09880 l     O .rodata	0000000000000055              Protocol_text::store(char const*, unsigned long, charset_info_st*, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c098e0 l     O .rodata	0000000000000046              Protocol_text::store(char const*, unsigned long, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c09940 l     O .rodata	0000000000000031              Protocol_text::store_tiny(long long)::__PRETTY_FUNCTION__
0000000000c09980 l     O .rodata	0000000000000032              Protocol_text::store_short(long long)::__PRETTY_FUNCTION__
0000000000c099c0 l     O .rodata	0000000000000031              Protocol_text::store_long(long long)::__PRETTY_FUNCTION__
0000000000c09a00 l     O .rodata	000000000000003b              Protocol_text::store_longlong(long long, bool)::__PRETTY_FUNCTION__
0000000000c09a40 l     O .rodata	000000000000003d              Protocol_text::store_decimal(my_decimal const*)::__PRETTY_FUNCTION__
0000000000c09a80 l     O .rodata	000000000000003a              Protocol_text::store(float, unsigned int, String*)::__PRETTY_FUNCTION__
0000000000c09ac0 l     O .rodata	000000000000003b              Protocol_text::store(double, unsigned int, String*)::__PRETTY_FUNCTION__
0000000000c09b00 l     O .rodata	000000000000002f              Protocol_text::store(st_mysql_time*)::__PRETTY_FUNCTION__
0000000000c09b40 l     O .rodata	0000000000000034              Protocol_text::store_date(st_mysql_time*)::__PRETTY_FUNCTION__
0000000000c09b80 l     O .rodata	0000000000000034              Protocol_text::store_time(st_mysql_time*)::__PRETTY_FUNCTION__
0000000000c09bc0 l     O .rodata	0000000000000043              Protocol_text::send_out_parameters(List<Item_param>*)::__PRETTY_FUNCTION__
0000000000c09c20 l     O .rodata	000000000000003f              Protocol_binary::store_decimal(my_decimal const*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              repl_failsafe.cc
00000000005658ea l     F .text	0000000000000071              inline_mysql_mutex_init
000000000056595b l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000005659db l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000565af2 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000565b6f l     F .text	000000000000006c              inline_mysql_cond_signal
0000000000c09c60 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c09f60 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c09ee0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c09fa0 l     O .rodata	0000000000000025              Item_int::val_int()::__PRETTY_FUNCTION__
0000000000c09fe0 l     O .rodata	0000000000000024              Item_int::val_real()::__PRETTY_FUNCTION__
0000000000c09f20 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000c09cbc l     O .rodata	0000000000000004              SRID_SIZE
0000000000c09cc0 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c09cc4 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c09cc8 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c09ccc l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105c420 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000013716d8 l     O .bss	0000000000000004              key_LOCK_slave_list
00000000010d2080 l     O .data	0000000000000018              all_slave_list_mutexes
00000000005660e9 l     F .text	000000000000004f              init_all_slave_list_mutexes()
0000000000000000 l    df *ABS*	0000000000000000              rpl_filter.cc
0000000000c0a008 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000000000 l    df *ABS*	0000000000000000              set_var.cc
00000000005691e4 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000005692fb l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000c0a180 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c0a188 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c0a18c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c0a190 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c0a194 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c0a198 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105c480 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c0a21c l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
0000000001371700 l     O .bss	0000000000000058              system_variable_hash
0000000001371760 l     O .bss	0000000000000010              PLock_global_system_variables
0000000000569378 l     F .text	000000000000002a              get_sys_var_length(sys_var const*, unsigned long*, char)
0000000000c0a570 l     O .rodata	0000000000000013              sys_var_init()::__PRETTY_FUNCTION__
0000000000c0a5a0 l     O .rodata	00000000000000ea              sys_var::sys_var(sys_var_chain*, char const*, char const*, int, long, int, get_opt_arg_type, enum_mysql_show_type, long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c0a6a0 l     O .rodata	000000000000003c              sys_var::value_ptr(THD*, enum_var_type, st_mysql_lex_string*)::__PRETTY_FUNCTION__
00000000010d20c0 l     O .data	00000000000000b0              old_conv
000000000056a3b2 l     F .text	000000000000002b              show_cmp(st_mysql_show_var*, st_mysql_show_var*)
0000000000c0a6e0 l     O .rodata	000000000000002a              set_var_password::check(THD*)::__PRETTY_FUNCTION__
000000000056aeb4 l     F .text	0000000000000053              __static_initialization_and_destruction_0(int, int)
000000000056af07 l     F .text	0000000000000015              _GLOBAL__sub_I_set_var.cc
0000000000000000 l    df *ABS*	0000000000000000              slave.cc
000000000056b6b0 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000056b7c7 l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000056b844 l     F .text	0000000000000133              inline_mysql_cond_wait
000000000056b977 l     F .text	0000000000000143              inline_mysql_cond_timedwait
000000000056baba l     F .text	000000000000006c              inline_mysql_cond_broadcast
000000000056bb26 l     F .text	000000000000007e              inline_mysql_thread_create
000000000056bba4 l     F .text	0000000000000077              bitmap_set_bit
0000000000c0e860 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
000000000056bc1b l     F .text	0000000000000067              bitmap_is_set
0000000000c0e820 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
000000000056bc82 l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
000000000056bdad l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
000000000056bead l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
0000000000c0a7c8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c0edc0 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c0ec40 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000c0eb60 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c0eae0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c0eba0 l     O .rodata	0000000000000025              Item_int::val_int()::__PRETTY_FUNCTION__
0000000000c0ebe0 l     O .rodata	0000000000000024              Item_int::val_real()::__PRETTY_FUNCTION__
0000000000c0eb20 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000c0a91c l     O .rodata	0000000000000004              SRID_SIZE
0000000000c0a920 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c0a924 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c0a928 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c0a92c l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105c4e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c0e9c0 l     O .rodata	0000000000000048              THD::enter_cond(st_mysql_cond*, st_mysql_mutex*, char const*)::__PRETTY_FUNCTION__
0000000000c0aa5c l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
0000000001371be8 l     O .bss	0000000000000004              RPL_MASTER_INFO
00000000010d21c0 l     O .data	0000000000000090              reconnect_messages
000000000056bfcc l     F .text	00000000000000f6              set_slave_max_allowed_packet(THD*, st_mysql*)
0000000000c0e7e0 l     O .rodata	0000000000000030              set_slave_max_allowed_packet(THD*, st_mysql*)::__PRETTY_FUNCTION__
0000000001371bec l     O .bss	0000000000000004              key_thread_slave_io
0000000001371bf0 l     O .bss	0000000000000004              key_thread_slave_sql
00000000010d2260 l     O .data	0000000000000030              all_slave_threads
000000000056c2b9 l     F .text	0000000000000050              init_slave_psi_keys()
000000000056c6b5 l     F .text	00000000000001ed              print_slave_skip_errors()
000000000056cadd l     F .text	0000000000000042              set_thd_in_use_temporary_tables(Relay_log_info*)
000000000056cf97 l     F .text	0000000000000393              terminate_slave_thread(THD*, st_mysql_mutex*, st_mysql_cond*, unsigned int volatile*, bool)
0000000000c0e890 l     O .rodata	0000000000000018              terminate_slave_threads(Master_info*, int, bool)::__FUNCTION__
0000000000c0e8c0 l     O .rodata	0000000000000056              terminate_slave_thread(THD*, st_mysql_mutex*, st_mysql_cond*, unsigned int volatile*, bool)::__PRETTY_FUNCTION__
0000000000c0e920 l     O .rodata	0000000000000096              start_slave_thread(unsigned int, void* (*)(void*), st_mysql_mutex*, st_mysql_mutex*, st_mysql_cond*, unsigned int volatile*, unsigned long volatile*, Master_info*)::__PRETTY_FUNCTION__
000000000056da56 l     F .text	00000000000000f9              io_slave_killed(THD*, Master_info*)
0000000000c0ea60 l     O .rodata	0000000000000029              io_slave_killed(THD*, Master_info*)::__PRETTY_FUNCTION__
000000000056db4f l     F .text	0000000000000396              sql_slave_killed(THD*, Relay_log_info*)
0000000000c0ed20 l     O .rodata	000000000000002d              sql_slave_killed(THD*, Relay_log_info*)::__PRETTY_FUNCTION__
000000000056e797 l     F .text	000000000000124c              get_master_version_and_clock(st_mysql*, Master_info*)
0000000000c0ea20 l     O .rodata	0000000000000037              get_master_version_and_clock(st_mysql*, Master_info*)::__PRETTY_FUNCTION__
0000000000573189 l     F .text	000000000000006b              check_io_slave_killed(THD*, Master_info*, char const*)
000000000056f9e3 l     F .text	00000000000002b7              wait_for_relay_log_space(Relay_log_info*)
000000000056fc9a l     F .text	00000000000002c1              write_ignored_events_info_to_relay_log(THD*, Master_info*)
0000000000c0eaa0 l     O .rodata	0000000000000040              write_ignored_events_info_to_relay_log(THD*, Master_info*)::__PRETTY_FUNCTION__
0000000000571d4a l     F .text	000000000000026f              init_slave_thread(THD*, SLAVE_THD_TYPE)
0000000000c0ec10 l     O .rodata	0000000000000012              init_slave_thread(THD*, SLAVE_THD_TYPE)::__FUNCTION__
0000000000571fb9 l     F .text	0000000000000342              request_dump(THD*, st_mysql*, Master_info*, bool*)
00000000005722fb l     F .text	00000000000001ec              read_event(st_mysql*, Master_info*, bool*)
00000000005724e7 l     F .text	0000000000000143              has_temporary_error(THD*)
000000000105c530 l     O .data.rel.ro	0000000000000018              apply_event_and_update_pos(Log_event*, THD*, Relay_log_info*)::explain
0000000000572a85 l     F .text	0000000000000704              exec_relay_log_event(THD*, Relay_log_info*)
0000000000578b3c l     F .text	0000000000000d20              next_event(Relay_log_info*)
0000000000c0ece0 l     O .rodata	0000000000000030              exec_relay_log_event(THD*, Relay_log_info*)::__PRETTY_FUNCTION__
0000000000579bd4 l     F .text	00000000000001d8              bool slave_sleep<bool (*)(THD*, Relay_log_info*), Relay_log_info*>(THD*, long, bool (*)(THD*, Relay_log_info*), Relay_log_info*)
00000000005731f4 l     F .text	0000000000000314              try_to_reconnect(THD*, st_mysql*, Master_info*, unsigned int*, bool, char const**)
0000000000579dac l     F .text	00000000000001d8              bool slave_sleep<bool (*)(THD*, Master_info*), Master_info*>(THD*, long, bool (*)(THD*, Master_info*), Master_info*)
00000000005782cf l     F .text	000000000000008e              safe_reconnect(THD*, st_mysql*, Master_info*, bool)
0000000000c0ed50 l     O .rodata	000000000000001d              handle_slave_io::__PRETTY_FUNCTION__
0000000000c0ed70 l     O .rodata	0000000000000010              handle_slave_io::__FUNCTION__
0000000000577c0a l     F .text	0000000000000088              safe_connect(THD*, st_mysql*, Master_info*)
0000000000576f3c l     F .text	0000000000000b15              queue_event(Master_info*, char const*, unsigned long)
0000000000574984 l     F .text	000000000000019d              check_temp_dir(char*)
0000000000c0ed80 l     O .rodata	000000000000001e              handle_slave_sql::__PRETTY_FUNCTION__
0000000000c0eda0 l     O .rodata	0000000000000011              handle_slave_sql::__FUNCTION__
0000000000575da9 l     F .text	00000000000005ea              process_io_create_file(Master_info*, Create_file_log_event*)
0000000000c0ee00 l     O .rodata	0000000000000041              process_io_create_file(Master_info*, Create_file_log_event*)::__PRETTY_FUNCTION__
0000000000576393 l     F .text	000000000000021b              process_io_rotate(Master_info*, Rotate_log_event*)
0000000000c0ee60 l     O .rodata	0000000000000037              process_io_rotate(Master_info*, Rotate_log_event*)::__PRETTY_FUNCTION__
00000000005765ae l     F .text	000000000000057e              queue_binlog_ver_1_event(Master_info*, char const*, unsigned long)
0000000000c0eea0 l     O .rodata	000000000000003f              queue_binlog_ver_1_event(Master_info*, char const*, unsigned long)::__PRETTY_FUNCTION__
0000000000576b2c l     F .text	00000000000002fa              queue_binlog_ver_3_event(Master_info*, char const*, unsigned long)
0000000000576e26 l     F .text	0000000000000116              queue_old_event(Master_info*, char const*, unsigned long)
0000000000c0eee0 l     O .rodata	0000000000000032              queue_event(Master_info*, char const*, unsigned long)::__PRETTY_FUNCTION__
0000000000577c92 l     F .text	000000000000063d              connect_to_master(THD*, st_mysql*, Master_info*, bool, bool)
00000000005789b6 l     F .text	0000000000000186              reopen_relay_log(Relay_log_info*, char const**)
0000000000c0ef20 l     O .rodata	000000000000003a              reopen_relay_log(Relay_log_info*, char const**)::__PRETTY_FUNCTION__
0000000000c0ef60 l     O .rodata	0000000000000027              next_event(Relay_log_info*)::__PRETTY_FUNCTION__
00000000010d2180 l     O .data	000000000000003c              rpl_master_has_bug(Relay_log_info const*, unsigned int, bool, bool (*)(void const*), void const*)::versions_for_all_bugs
0000000000000000 l    df *ABS*	0000000000000000              sp_cache.cc
000000000057acd0 l     F .text	0000000000000071              inline_mysql_mutex_init
000000000057ad41 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000057ae58 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000c0ef98 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c0efa0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c0efa4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c0efa8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c0efac l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c0efb0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105c560 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001371c00 l     O .bss	0000000000000070              Cversion_lock
0000000001371c70 l     O .bss	0000000000000008              Cversion
0000000001371c78 l     O .bss	0000000000000004              key_Cversion_lock
00000000010d2290 l     O .data	0000000000000018              all_sp_cache_mutexes
000000000057aed5 l     F .text	000000000000004f              init_sp_cache_psi_keys()
0000000000000000 l    df *ABS*	0000000000000000              sql_acl.cc
000000000057b3e8 l     F .text	0000000000000071              inline_mysql_mutex_init
000000000057b459 l     F .text	0000000000000080              inline_mysql_mutex_destroy
000000000057b4d9 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000057b5f0 l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000057b66d l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
000000000057b778 l     F .text	000000000000010b              inline_mysql_rwlock_wrlock
000000000057b883 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
000000000057b8ef l     F .text	0000000000000033              safe_strdup_root
0000000000c12000 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
0000000000c11ba0 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000c0f160 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c11ae0 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c11b10 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000c11e10 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000c11e30 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000c116a0 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c11d60 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c11d20 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c0f308 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c0f30c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c0f310 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c0f314 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c0f318 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105c5c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c11980 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
000000000105c620 l     O .data.rel.ro	0000000000000420              mysql_db_table_fields
000000000105ca40 l     O .data.rel.ro	00000000000007e0              mysql_user_table_fields
000000000105d220 l     O .data.rel.ro	0000000000000150              mysql_proxies_priv_table_fields
000000000105d380 l     O .data.rel.ro	0000000000000180              mysql_procs_priv_table_fields
000000000105d500 l     O .data.rel.ro	0000000000000150              mysql_columns_priv_table_fields
000000000105d660 l     O .data.rel.ro	0000000000000180              mysql_tables_priv_table_fields
000000000105d7f0 l     O .data.rel.ro	0000000000000010              mysql_user_table_def
000000000105d800 l     O .data.rel.ro	0000000000000010              mysql_proxies_priv_table_def
000000000105d810 l     O .data.rel.ro	0000000000000010              mysql_procs_priv_table_def
000000000105d820 l     O .data.rel.ro	0000000000000010              mysql_columns_priv_table_def
000000000105d830 l     O .data.rel.ro	0000000000000010              mysql_tables_priv_table_def
00000000010d2360 l     O .data	0000000000000010              native_password_plugin_name
00000000010d2370 l     O .data	0000000000000010              old_password_plugin_name
0000000001371c88 l     O .bss	0000000000000008              old_password_plugin
0000000001371c90 l     O .bss	0000000000000008              native_password_plugin
000000000058059a l     F .text	00000000000000a3              update_hostname(acl_host_and_ip*, char const*)
000000000057dc36 l     F .text	00000000000002c6              get_sort(unsigned int, ...)
000000000058063d l     F .text	0000000000000103              compare_hostname(acl_host_and_ip const*, char const*, char const*)
000000000057b922 l     F .text	000000000000002d              acl_entry_get_key(acl_entry*, unsigned long*, char)
0000000001371ca0 l     O .bss	0000000000000018              acl_hosts
0000000001371cc0 l     O .bss	0000000000000018              acl_users
0000000001371ce0 l     O .bss	0000000000000018              acl_dbs
0000000001371d00 l     O .bss	0000000000000018              acl_proxy_users
0000000001371d20 l     O .bss	0000000000000038              mem
0000000001371d60 l     O .bss	0000000000000038              memex
0000000001371d98 l     O .bss	0000000000000001              initialized
00000000010d22c0 l     O .data	0000000000000001              allow_all_hosts
0000000001371da0 l     O .bss	0000000000000058              acl_check_hosts
0000000001371e00 l     O .bss	0000000000000058              column_priv_hash
0000000001371e60 l     O .bss	0000000000000058              proc_priv_hash
0000000001371ec0 l     O .bss	0000000000000058              func_priv_hash
0000000001371f20 l     O .bss	0000000000000018              acl_wild_hosts
0000000001371f38 l     O .bss	0000000000000008              acl_cache
0000000001371f40 l     O .bss	0000000000000004              grant_version
000000000057b94f l     F .text	000000000000006c              set_user_salt(ACL_USER*, char const*, unsigned int)
000000000057bbab l     F .text	0000000000000136              set_user_plugin(ACL_USER*, int)
000000000057bce1 l     F .text	0000000000001652              acl_load(THD*, TABLE_LIST*)
000000000057dad6 l     F .text	0000000000000160              get_access(TABLE*, unsigned int, unsigned int*)
000000000057defc l     F .text	0000000000000047              acl_compare(ACL_ACCESS*, ACL_ACCESS*)
000000000057f3e7 l     F .text	0000000000000296              init_check_host()
0000000000c116d0 l     O .rodata	000000000000001a              get_sort(unsigned int, ...)::__PRETTY_FUNCTION__
000000000057e380 l     F .text	000000000000002b              check_get_key(ACL_USER*, unsigned long*, char)
000000000057e3ab l     F .text	0000000000000346              acl_update_user(char const*, char const*, char const*, unsigned int, SSL_type, char const*, char const*, char const*, user_resources*, unsigned long, st_mysql_lex_string const*, st_mysql_lex_string const*)
0000000000c11700 l     O .rodata	00000000000000b1              acl_update_user(char const*, char const*, char const*, unsigned int, SSL_type, char const*, char const*, char const*, user_resources*, unsigned long, st_mysql_lex_string const*, st_mysql_lex_string const*)::__PRETTY_FUNCTION__
000000000057e6f1 l     F .text	00000000000003d8              acl_insert_user(char const*, char const*, char const*, unsigned int, SSL_type, char const*, char const*, char const*, user_resources*, unsigned long, st_mysql_lex_string const*, st_mysql_lex_string const*)
0000000000c117c0 l     O .rodata	00000000000000b1              acl_insert_user(char const*, char const*, char const*, unsigned int, SSL_type, char const*, char const*, char const*, user_resources*, unsigned long, st_mysql_lex_string const*, st_mysql_lex_string const*)::__PRETTY_FUNCTION__
000000000057f67d l     F .text	0000000000000024              rebuild_check_host()
000000000057eac9 l     F .text	00000000000001a7              acl_update_db(char const*, char const*, char const*, unsigned long)
0000000000c11880 l     O .rodata	0000000000000041              acl_update_db(char const*, char const*, char const*, unsigned long)::__PRETTY_FUNCTION__
000000000057ec70 l     F .text	000000000000015f              acl_insert_db(char const*, char const*, char const*, unsigned long)
0000000000c118e0 l     O .rodata	0000000000000041              acl_insert_db(char const*, char const*, char const*, unsigned long)::__PRETTY_FUNCTION__
0000000000c11940 l     O .rodata	000000000000003c              change_password(THD*, char const*, char const*, char*)::__PRETTY_FUNCTION__
000000000058014a l     F .text	0000000000000276              find_acl_user(char const*, char const*, char)
00000000005808b7 l     F .text	0000000000000380              update_user_table(THD*, TABLE*, char const*, char const*, char const*, unsigned int)
0000000000c119c0 l     O .rodata	000000000000003b              find_acl_user(char const*, char const*, char)::__PRETTY_FUNCTION__
00000000005803c0 l     F .text	00000000000001da              calc_ip(char const*, long*, char)
0000000000580c37 l     F .text	00000000000001b9              test_if_create_new_users(THD*)
0000000000580df0 l     F .text	0000000000001769              replace_user_table(THD*, TABLE*, st_lex_user const&, unsigned long, bool, bool, bool)
0000000000c11a00 l     O .rodata	000000000000004f              replace_user_table(THD*, TABLE*, st_lex_user const&, unsigned long, bool, bool, bool)::__PRETTY_FUNCTION__
0000000000582559 l     F .text	00000000000008f1              replace_db_table(TABLE*, char const*, st_lex_user const&, unsigned long, bool)
0000000000582e4a l     F .text	000000000000018c              acl_update_proxy_user(ACL_PROXY_USER*, bool)
0000000000c11a60 l     O .rodata	0000000000000032              acl_update_proxy_user(ACL_PROXY_USER*, bool)::__PRETTY_FUNCTION__
0000000000582fd6 l     F .text	00000000000000f0              acl_insert_proxy_user(ACL_PROXY_USER*)
0000000000c11aa0 l     O .rodata	000000000000002c              acl_insert_proxy_user(ACL_PROXY_USER*)::__PRETTY_FUNCTION__
00000000005830c6 l     F .text	000000000000078d              replace_proxies_priv_table(THD*, TABLE*, st_lex_user const*, st_lex_user const*, bool, bool)
00000000005856e8 l     F .text	00000000000000b4              get_grantor(THD*, char*)
0000000000583853 l     F .text	000000000000002a              get_key_column(GRANT_COLUMN*, unsigned long*, char)
000000000058463f l     F .text	000000000000002a              get_grant_table(GRANT_NAME*, unsigned long*, char)
0000000000584688 l     F .text	000000000000029b              name_hash_search(st_hash*, char const*, char const*, char const*, char const*, char const*, bool, bool)
0000000000584923 l     F .text	0000000000000dc5              replace_column_table(GRANT_TABLE*, TABLE*, st_lex_user const&, List<LEX_COLUMN>&, char const*, char const*, unsigned long, bool)
000000000058579c l     F .text	00000000000008eb              replace_table_table(THD*, GRANT_TABLE*, TABLE*, st_lex_user const&, char const*, char const*, unsigned long, unsigned long, bool)
0000000000586087 l     F .text	00000000000007eb              replace_routine_table(THD*, GRANT_NAME*, TABLE*, st_lex_user const&, char const*, char const*, bool, unsigned long, bool)
0000000000c11b40 l     O .rodata	000000000000005d              mysql_table_grant(THD*, TABLE_LIST*, List<st_lex_user>&, List<LEX_COLUMN>&, unsigned long, bool)::__PRETTY_FUNCTION__
0000000000c11bc0 l     O .rodata	0000000000000059              mysql_routine_grant(THD*, TABLE_LIST*, bool, List<st_lex_user>&, unsigned long, bool, bool)::__PRETTY_FUNCTION__
0000000000c11c20 l     O .rodata	000000000000004b              mysql_grant(THD*, char const*, List<st_lex_user>&, unsigned long, bool, bool)::__PRETTY_FUNCTION__
00000000005889fe l     F .text	000000000000043b              grant_load_procs_priv(TABLE*)
0000000000588e39 l     F .text	00000000000003b3              grant_load(THD*, TABLE_LIST*)
00000000005891ec l     F .text	000000000000041e              grant_reload_procs_priv(THD*)
0000000000c11c80 l     O .rodata	000000000000003d              check_grant(THD*, unsigned long, TABLE_LIST*, bool, unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c11cc0 l     O .rodata	0000000000000045              check_grant_all_columns(THD*, unsigned long, Field_iterator_table_ref*)::__PRETTY_FUNCTION__
000000000058a9ee l     F .text	0000000000000103              check_grant_db_routine(THD*, char const*, st_hash*)
000000000058b4a6 l     F .text	00000000000000c7              add_user_option(String*, unsigned long, char const*)
00000000010d23a0 l     O .data	00000000000000e8              command_array
00000000010d22e0 l     O .data	0000000000000074              command_lengths
000000000058cd65 l     F .text	0000000000000503              show_routine_grants(THD*, st_lex_user*, st_hash*, char const*, int, char*, int)
000000000059181a l     F .text	00000000000001ca              show_proxy_grants(THD*, st_lex_user*, char*, unsigned long)
0000000000c11da0 l     O .rodata	000000000000002c              get_privilege_desc(char*, unsigned int, unsigned long)::__PRETTY_FUNCTION__
0000000000c11de0 l     O .rodata	000000000000002b              check_acl_user(st_lex_user*, unsigned int*)::__PRETTY_FUNCTION__
000000000058da66 l     F .text	00000000000001d8              modify_grant_table(TABLE*, Field*, Field*, st_lex_user*)
000000000058dc3e l     F .text	0000000000000659              handle_grant_table(TABLE_LIST*, unsigned int, bool, st_lex_user*, st_lex_user*)
000000000058e297 l     F .text	00000000000007d3              handle_grant_struct(enum_acl_lists, bool, st_lex_user*, st_lex_user*)
0000000000c11e60 l     O .rodata	0000000000000044              handle_grant_struct(enum_acl_lists, bool, st_lex_user*, st_lex_user*)::__PRETTY_FUNCTION__
000000000058ea6a l     F .text	000000000000060e              handle_grant_data(TABLE_LIST*, bool, st_lex_user*, st_lex_user*)
000000000058f078 l     F .text	00000000000000a3              append_user(String*, st_lex_user*)
0000000000c11ec0 l     O .rodata	0000000000000031              mysql_create_user(THD*, List<st_lex_user>&)::__PRETTY_FUNCTION__
0000000000c11f00 l     O .rodata	000000000000002f              mysql_drop_user(THD*, List<st_lex_user>&)::__PRETTY_FUNCTION__
0000000000c11f40 l     O .rodata	0000000000000031              mysql_rename_user(THD*, List<st_lex_user>&)::__PRETTY_FUNCTION__
0000000000c11f80 l     O .rodata	0000000000000030              mysql_revoke_all(THD*, List<st_lex_user>&)::__PRETTY_FUNCTION__
0000000000c11fc0 l     O .rodata	0000000000000040              sp_revoke_privileges(THD*, char const*, char const*, bool)::__PRETTY_FUNCTION__
00000000005912b4 l     F .text	0000000000000180              acl_find_proxy_user(char const*, char const*, char const*, char const*, bool*)
0000000000591d80 l     F .text	000000000000027d              update_schema_privilege(THD*, TABLE*, char*, char const*, char const*, char const*, unsigned int, char const*, unsigned int, char const*)
0000000001371f60 l     O .bss	0000000000000020              registry_array
0000000001371f80 l     O .bss	0000000000000004              m_registry_array_size
0000000000c12040 l     O .rodata	0000000000000070              ACL_internal_schema_registry::register_schema(st_mysql_lex_string const*, ACL_internal_schema_access const*)::__PRETTY_FUNCTION__
0000000000c120c0 l     O .rodata	000000000000005b              ACL_internal_schema_registry::lookup(char const*)::__PRETTY_FUNCTION__
0000000000c12120 l     O .rodata	0000000000000069              get_cached_table_access(st_grant_internal_info*, char const*, char const*)::__PRETTY_FUNCTION__
000000000059372a l     F .text	0000000000000287              login_failed_error(MPVIO_EXT*, int)
00000000005939b1 l     F .text	00000000000004e9              send_server_handshake_packet(MPVIO_EXT*, char const*, unsigned int)
0000000000c121a0 l     O .rodata	0000000000000041              send_server_handshake_packet(MPVIO_EXT*, char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000593e9a l     F .text	0000000000000115              secure_auth(MPVIO_EXT*)
0000000000593faf l     F .text	0000000000000355              send_plugin_request_packet(MPVIO_EXT*, unsigned char const*, unsigned int)
0000000000c12200 l     O .rodata	0000000000000040              send_plugin_request_packet(MPVIO_EXT*, unsigned char const*, unsigned int)::__PRETTY_FUNCTION__
00000000010d235c l     O .data	0000000000000001              send_plugin_request_packet(MPVIO_EXT*, unsigned char const*, unsigned int)::switch_plugin_request_buf
00000000005943db l     F .text	000000000000053b              find_mpvio_user(MPVIO_EXT*)
0000000000c12240 l     O .rodata	0000000000000021              find_mpvio_user(MPVIO_EXT*)::__PRETTY_FUNCTION__
0000000000594916 l     F .text	000000000000064f              parse_com_change_user_packet(MPVIO_EXT*, unsigned int)
0000000000594f65 l     F .text	00000000000000a8              get_41_protocol_string(char**, unsigned long*, unsigned long*)
000000000059500d l     F .text	00000000000000dd              get_40_protocol_string(char**, unsigned long*, unsigned long*)
00000000005950ea l     F .text	00000000000000d7              get_length_encoded_string(char**, unsigned long*, unsigned long*)
00000000005951c1 l     F .text	0000000000000f00              parse_client_handshake_packet(MPVIO_EXT*, unsigned char**, unsigned long)
0000000000c12280 l     O .rodata	0000000000000040              parse_client_handshake_packet(MPVIO_EXT*, unsigned char**, unsigned long)::__PRETTY_FUNCTION__
00000000005960c1 l     F .text	0000000000000045              wrap_plguin_data_into_proper_command(st_net*, unsigned char const*, int)
0000000000596106 l     F .text	0000000000000160              server_mpvio_write_packet(st_plugin_vio*, unsigned char const*, int)
0000000000596266 l     F .text	0000000000000351              server_mpvio_read_packet(st_plugin_vio*, unsigned char**)
0000000000c122c0 l     O .rodata	0000000000000039              server_mpvio_read_packet(st_plugin_vio*, unsigned char**)::__PRETTY_FUNCTION__
00000000005965b7 l     F .text	0000000000000038              server_mpvio_info(st_plugin_vio*, st_plugin_vio_info*)
00000000005965ef l     F .text	00000000000003e7              acl_check_ssl(THD*, ACL_USER const*)
00000000005969d6 l     F .text	0000000000000159              do_auth_once(THD*, st_mysql_lex_string const*, MPVIO_EXT*)
0000000000596b2f l     F .text	00000000000001c9              server_mpvio_initialize(THD*, MPVIO_EXT*, unsigned int, Thd_charset_adapter*)
0000000000596cf8 l     F .text	00000000000000af              server_mpvio_update_thd(THD*, MPVIO_EXT*)
0000000000c12300 l     O .rodata	0000000000000028              acl_authenticate(THD*, unsigned int, unsigned int)::__PRETTY_FUNCTION__
0000000000597a94 l     F .text	0000000000000249              native_password_authenticate(st_plugin_vio*, st_mysql_server_auth_info*)
0000000000597cdd l     F .text	00000000000001d2              old_password_authenticate(st_plugin_vio*, st_mysql_server_auth_info*)
00000000010d2490 l     O .data	0000000000000018              native_password_handler
00000000010d24b0 l     O .data	0000000000000018              old_password_handler
0000000000597eaf l     F .text	000000000000005c              __static_initialization_and_destruction_0(int, int)
0000000000597f0b l     F .text	0000000000000015              _GLOBAL__sub_I_sql_acl.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_base.cc
000000000059b848 l     F .text	0000000000000071              inline_mysql_mutex_init
000000000059b8b9 l     F .text	0000000000000080              inline_mysql_mutex_destroy
000000000059b939 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000059ba50 l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000059bacd l     F .text	000000000000006c              inline_mysql_cond_broadcast
0000000000c157e0 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
000000000059bb39 l     F .text	0000000000000077              bitmap_set_bit
0000000000c154e0 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
0000000000c15670 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
000000000059bbb0 l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
0000000000c14dc0 l     O .rodata	000000000000002a              MDL_request::set_type(enum_mdl_type)::__PRETTY_FUNCTION__
0000000000c124c8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c145e0 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
000000000059bccf l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000c15740 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c15700 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c12578 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c1257c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c12580 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c12584 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c12588 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105d840 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c15080 l     O .rodata	0000000000000036              Query_tables_list::set_stmt_unsafe_flags(unsigned int)::__PRETTY_FUNCTION__
0000000000c14ac0 l     O .rodata	000000000000003c              THD::enter_locked_tables_mode(enum_locked_tables_mode)::__PRETTY_FUNCTION__
0000000001372078 l     O .bss	0000000000000004              key_LOCK_open
00000000010d2640 l     O .data	0000000000000018              all_tdc_mutexes
000000000059bde2 l     F .text	000000000000004f              init_tdc_psi_keys()
0000000001372080 l     O .bss	0000000000000008              oldest_unused_share
00000000013720a0 l     O .bss	0000000000000378              end_of_unused_share
0000000001372418 l     O .bss	0000000000000001              table_def_inited
0000000001372419 l     O .bss	0000000000000001              table_def_shutdown_in_progress
000000000059bfab l     F .text	0000000000000106              table_def_free_entry(TABLE_SHARE*)
0000000000c14480 l     O .rodata	0000000000000028              table_def_free_entry(TABLE_SHARE*)::__PRETTY_FUNCTION__
000000000059c270 l     F .text	0000000000000072              table_def_add_used_table(THD*, TABLE*)
0000000000c144c0 l     O .rodata	000000000000002c              table_def_add_used_table(THD*, TABLE*)::__PRETTY_FUNCTION__
000000000059c2e2 l     F .text	00000000000000de              table_def_remove_table(TABLE*)
000000000059c3c0 l     F .text	0000000000000176              table_def_use_table(THD*, TABLE*)
0000000000c14500 l     O .rodata	0000000000000027              table_def_use_table(THD*, TABLE*)::__PRETTY_FUNCTION__
000000000059c536 l     F .text	000000000000013c              table_def_unuse_table(TABLE*)
0000000000c14540 l     O .rodata	0000000000000023              table_def_unuse_table(TABLE*)::__PRETTY_FUNCTION__
0000000000c14580 l     O .rodata	000000000000005d              get_table_share(THD*, TABLE_LIST*, char*, unsigned int, unsigned int, int*, unsigned int)::__PRETTY_FUNCTION__
000000000059caaa l     F .text	000000000000021e              get_table_share_with_discover(THD*, TABLE_LIST*, char*, unsigned int, unsigned int, int*, unsigned int)
0000000000c14620 l     O .rodata	0000000000000027              release_table_share(TABLE_SHARE*)::__PRETTY_FUNCTION__
0000000000c14660 l     O .rodata	000000000000003e              get_cached_table_share(char const*, char const*)::__PRETTY_FUNCTION__
000000000059d503 l     F .text	0000000000000086              free_cache_entry(TABLE*)
000000000059d630 l     F .text	00000000000001d9              kill_delayed_threads_for_table(TABLE_SHARE*)
0000000000c146a0 l     O .rodata	0000000000000032              kill_delayed_threads_for_table(TABLE_SHARE*)::__PRETTY_FUNCTION__
0000000000c146e0 l     O .rodata	0000000000000039              close_cached_tables(THD*, TABLE_LIST*, bool, unsigned long)::__PRETTY_FUNCTION__
0000000000c14720 l     O .rodata	0000000000000037              close_cached_connection_tables(THD*, st_mysql_lex_string*)::__PRETTY_FUNCTION__
000000000059e1cc l     F .text	0000000000000069              mark_temp_tables_as_free_for_reuse(THD*)
0000000000c14760 l     O .rodata	0000000000000026              mark_tmp_table_for_reuse(TABLE*)::__PRETTY_FUNCTION__
000000000059e2f3 l     F .text	00000000000000b0              mark_used_tables_as_free_for_reuse(THD*, TABLE*)
0000000000c147a0 l     O .rodata	0000000000000036              mark_used_tables_as_free_for_reuse(THD*, TABLE*)::__PRETTY_FUNCTION__
000000000059e3a3 l     F .text	00000000000000bd              close_open_tables(THD*)
0000000000c147e0 l     O .rodata	000000000000001d              close_open_tables(THD*)::__PRETTY_FUNCTION__
0000000000c14800 l     O .rodata	0000000000000039              close_all_tables_for_name(THD*, TABLE_SHARE*, bool)::__PRETTY_FUNCTION__
0000000000c14840 l     O .rodata	000000000000001f              close_thread_tables(THD*)::__PRETTY_FUNCTION__
0000000000c14860 l     O .rodata	0000000000000027              close_thread_table(THD*, TABLE**)::__PRETTY_FUNCTION__
000000000059ed68 l     F .text	00000000000000c2              tmpkeyval(THD*, TABLE*)
000000000059f7ac l     F .text	0000000000000301              find_dup_table(THD*, TABLE_LIST*, TABLE_LIST*, bool)
0000000000c148a0 l     O .rodata	0000000000000041              find_dup_table(THD*, TABLE_LIST*, TABLE_LIST*, bool)::__PRETTY_FUNCTION__
0000000000c14900 l     O .rodata	0000000000000035              close_temporary_table(THD*, TABLE*, bool, bool)::__PRETTY_FUNCTION__
0000000000c14940 l     O .rodata	000000000000003d              drop_open_table(THD*, TABLE*, char const*, char const*)::__PRETTY_FUNCTION__
0000000000c14980 l     O .rodata	0000000000000035              check_if_table_exists(THD*, TABLE_LIST*, bool*)::__PRETTY_FUNCTION__
00000000005a0ae4 l     F .text	0000000000000295              open_table_get_mdl_lock(THD*, Open_table_context*, MDL_request*, unsigned int, MDL_ticket**)
0000000000c149c0 l     O .rodata	000000000000005a              open_table_get_mdl_lock(THD*, Open_table_context*, MDL_request*, unsigned int, MDL_ticket**)::__PRETTY_FUNCTION__
00000000005a0d79 l     F .text	00000000000001b4              tdc_wait_for_old_version(THD*, char const*, char const*, unsigned long, unsigned int)
0000000000c14a20 l     O .rodata	0000000000000043              open_table(THD*, TABLE_LIST*, st_mem_root*, Open_table_context*)::__PRETTY_FUNCTION__
00000000005a2ece l     F .text	00000000000000ed              check_and_update_table_version(THD*, TABLE_LIST*, TABLE_SHARE*)
00000000005a32e6 l     F .text	0000000000000252              open_table_entry_fini(THD*, TABLE_SHARE*, TABLE*)
0000000000c14a80 l     O .rodata	0000000000000032              Locked_tables_list::init_locked_tables(THD*)::__PRETTY_FUNCTION__
0000000000c14b00 l     O .rodata	0000000000000034              Locked_tables_list::unlock_locked_tables(THD*)::__PRETTY_FUNCTION__
0000000000c14b40 l     O .rodata	0000000000000043              Locked_tables_list::unlink_from_list(THD*, TABLE_LIST*, bool)::__PRETTY_FUNCTION__
0000000000c14ba0 l     O .rodata	000000000000004d              Locked_tables_list::unlink_all_closed_tables(THD*, st_mysql_lock*, unsigned long)::__PRETTY_FUNCTION__
0000000000c14c00 l     O .rodata	000000000000002d              Locked_tables_list::reopen_tables(THD*)::__PRETTY_FUNCTION__
00000000010d2618 l     O .data	0000000000000008              last_table_id
0000000000c14c40 l     O .rodata	0000000000000027              assign_new_table_id(TABLE_SHARE*)::__PRETTY_FUNCTION__
00000000005a2e74 l     F .text	000000000000005a              inject_reprepare(THD*)
0000000000c14c80 l     O .rodata	0000000000000045              check_and_update_table_version(THD*, TABLE_LIST*, TABLE_SHARE*)::__PRETTY_FUNCTION__
00000000005a2fbb l     F .text	0000000000000106              check_and_update_routine_version(THD*, Sroutine_hash_entry*, sp_head*)
0000000000c14ce0 l     O .rodata	000000000000004c              check_and_update_routine_version(THD*, Sroutine_hash_entry*, sp_head*)::__PRETTY_FUNCTION__
00000000005a3538 l     F .text	0000000000000391              auto_repair_table(THD*, TABLE_LIST*)
0000000000c14d40 l     O .rodata	0000000000000069              Open_table_context::request_backoff_action(Open_table_context::enum_open_table_action, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c14e00 l     O .rodata	0000000000000034              Open_table_context::recover_from_failed_open()::__PRETTY_FUNCTION__
00000000005a3e57 l     F .text	000000000000032c              open_and_process_routine(THD*, Query_tables_list*, Sroutine_hash_entry*, Prelocking_strategy*, bool, Open_table_context*, bool*)
0000000000c14e40 l     O .rodata	0000000000000086              open_and_process_routine(THD*, Query_tables_list*, Sroutine_hash_entry*, Prelocking_strategy*, bool, Open_table_context*, bool*)::__PRETTY_FUNCTION__
00000000005a4183 l     F .text	00000000000009da              open_and_process_table(THD*, LEX*, TABLE_LIST*, unsigned int*, unsigned int, Prelocking_strategy*, bool, Open_table_context*, st_mem_root*)
0000000000c14ee0 l     O .rodata	000000000000007e              open_and_process_table(THD*, LEX*, TABLE_LIST*, unsigned int*, unsigned int, Prelocking_strategy*, bool, Open_table_context*, st_mem_root*)::__PRETTY_FUNCTION__
0000000000c14f60 l     O .rodata	0000000000000043              lock_table_names(THD*, TABLE_LIST*, TABLE_LIST*, unsigned long, unsigned int)::__PRETTY_FUNCTION__
00000000005a4f42 l     F .text	000000000000011a              open_tables_check_upgradable_mdl(THD*, TABLE_LIST*, TABLE_LIST*, unsigned int)
0000000000c14fc0 l     O .rodata	000000000000004c              open_tables_check_upgradable_mdl(THD*, TABLE_LIST*, TABLE_LIST*, unsigned int)::__PRETTY_FUNCTION__
0000000000c15010 l     O .rodata	000000000000000c              open_tables(THD*, TABLE_LIST**, unsigned int*, unsigned int, Prelocking_strategy*)::__FUNCTION__
0000000000c15020 l     O .rodata	0000000000000048              open_tables(THD*, TABLE_LIST**, unsigned int*, unsigned int, Prelocking_strategy*)::__PRETTY_FUNCTION__
0000000000c150c0 l     O .rodata	0000000000000061              DML_prelocking_strategy::handle_table(THD*, Query_tables_list*, TABLE_LIST*, bool*)::__PRETTY_FUNCTION__
0000000000c15140 l     O .rodata	0000000000000069              Lock_tables_prelocking_strategy::handle_table(THD*, Query_tables_list*, TABLE_LIST*, bool*)::__PRETTY_FUNCTION__
00000000005a5b93 l     F .text	00000000000001d9              check_lock_and_start_stmt(THD*, Query_tables_list*, TABLE_LIST*)
0000000000c151c0 l     O .rodata	0000000000000046              check_lock_and_start_stmt(THD*, Query_tables_list*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c15220 l     O .rodata	000000000000003b              open_ltable(THD*, TABLE_LIST*, thr_lock_type, unsigned int)::__PRETTY_FUNCTION__
0000000000c15260 l     O .rodata	000000000000000c              open_ltable(THD*, TABLE_LIST*, thr_lock_type, unsigned int)::__FUNCTION__
0000000000c15280 l     O .rodata	000000000000003d              open_normal_and_derived_tables(THD*, TABLE_LIST*, unsigned int)::__PRETTY_FUNCTION__
00000000005a66cf l     F .text	00000000000000b9              mark_real_tables_as_free_for_reuse(TABLE_LIST*)
0000000000c152c0 l     O .rodata	0000000000000030              lock_tables(THD*, TABLE_LIST*, unsigned int, unsigned int)::__PRETTY_FUNCTION__
0000000000c15300 l     O .rodata	0000000000000047              close_tables_for_reopen(THD*, TABLE_LIST**, MDL_savepoint const&)::__PRETTY_FUNCTION__
00000000005a74fb l     F .text	00000000000001d2              update_field_dependencies(THD*, Field*, TABLE*)
00000000005a76cd l     F .text	00000000000003d8              find_field_in_view(THD*, TABLE_LIST*, char const*, unsigned int, char const*, Item**, bool)
0000000000c15360 l     O .rodata	000000000000005b              find_field_in_view(THD*, TABLE_LIST*, char const*, unsigned int, char const*, Item**, bool)::__PRETTY_FUNCTION__
00000000005a7aa5 l     F .text	0000000000000672              find_field_in_natural_join(THD*, TABLE_LIST*, char const*, unsigned int, Item**, bool, TABLE_LIST**)
0000000000c153c0 l     O .rodata	0000000000000064              find_field_in_natural_join(THD*, TABLE_LIST*, char const*, unsigned int, Item**, bool, TABLE_LIST**)::__PRETTY_FUNCTION__
0000000000c15440 l     O .rodata	000000000000009b              find_field_in_table_ref(THD*, TABLE_LIST*, char const*, unsigned int, char const*, char const*, char const*, Item**, bool, bool, unsigned int*, bool, TABLE_LIST**)::__PRETTY_FUNCTION__
0000000000c15520 l     O .rodata	000000000000007a              find_field_in_tables(THD*, Item_ident*, TABLE_LIST*, TABLE_LIST*, Item**, find_item_error_report_type, bool, bool)::__PRETTY_FUNCTION__
00000000005a9e10 l     F .text	00000000000000ed              test_if_string_in_list(char const*, List<String>*)
00000000005a9efd l     F .text	000000000000009c              set_new_item_local_context(THD*, Item_ident*, TABLE_LIST*)
00000000005a9f99 l     F .text	0000000000000a35              mark_common_columns(THD*, TABLE_LIST*, TABLE_LIST*, List<String>*, unsigned int*)
0000000000c155a0 l     O .rodata	000000000000004f              mark_common_columns(THD*, TABLE_LIST*, TABLE_LIST*, List<String>*, unsigned int*)::__PRETTY_FUNCTION__
00000000005aa9ce l     F .text	00000000000004c7              store_natural_using_join_columns(THD*, TABLE_LIST*, TABLE_LIST*, TABLE_LIST*, List<String>*, unsigned int)
0000000000c15600 l     O .rodata	0000000000000068              store_natural_using_join_columns(THD*, TABLE_LIST*, TABLE_LIST*, TABLE_LIST*, List<String>*, unsigned int)::__PRETTY_FUNCTION__
00000000005aae95 l     F .text	000000000000056a              store_top_level_join_columns(THD*, TABLE_LIST*, TABLE_LIST*, TABLE_LIST*)
0000000000c156a0 l     O .rodata	000000000000004f              store_top_level_join_columns(THD*, TABLE_LIST*, TABLE_LIST*, TABLE_LIST*)::__PRETTY_FUNCTION__
00000000005ab3ff l     F .text	00000000000001d6              setup_natural_join_row_types(THD*, List<TABLE_LIST>*, Name_resolution_context*)
0000000000c15780 l     O .rodata	0000000000000055              setup_natural_join_row_types(THD*, List<TABLE_LIST>*, Name_resolution_context*)::__PRETTY_FUNCTION__
0000000000c15820 l     O .rodata	0000000000000039              make_leaves_list(TABLE_LIST**, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c15860 l     O .rodata	0000000000000066              setup_tables(THD*, Name_resolution_context*, List<TABLE_LIST>*, TABLE_LIST*, TABLE_LIST**, bool)::__PRETTY_FUNCTION__
0000000000c158e0 l     O .rodata	0000000000000069              insert_fields(THD*, Name_resolution_context*, char const*, char const*, List_iterator<Item>*, bool)::__PRETTY_FUNCTION__
00000000005ad46f l     F .text	0000000000000302              fill_record(THD*, List<Item>&, List<Item>&, bool)
0000000000c15960 l     O .rodata	0000000000000058              tdc_remove_table(THD*, enum_tdc_remove_table_type, char const*, char const*, bool)::__PRETTY_FUNCTION__
0000000000c159b8 l     O .rodata	000000000000000d              init_ftfuncs(THD*, st_select_lex*, bool)::__FUNCTION__
0000000000c159e0 l     O .rodata	0000000000000049              open_system_tables_for_read(THD*, TABLE_LIST*, Open_tables_backup*)::__PRETTY_FUNCTION__
0000000000c15a30 l     O .rodata	000000000000001e              close_mysql_tables(THD*)::__PRETTY_FUNCTION__
0000000000c15a60 l     O .rodata	0000000000000037              open_system_table_for_update(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c15aa0 l     O .rodata	000000000000003e              open_log_table(THD*, TABLE_LIST*, Open_tables_backup*)::__PRETTY_FUNCTION__
00000000005aecf9 l     F .text	000000000000002c              __static_initialization_and_destruction_0(int, int)
00000000005aed25 l     F .text	0000000000000015              _GLOBAL__sub_I_sql_base.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_cache.cc
00000000005b1530 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000005b15a1 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000005b1621 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000005b1738 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000005b17b5 l     F .text	000000000000005f              inline_mysql_rwlock_init
00000000005b1814 l     F .text	000000000000006f              inline_mysql_rwlock_destroy
00000000005b1883 l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
00000000005b198e l     F .text	000000000000010b              inline_mysql_rwlock_wrlock
00000000005b1a99 l     F .text	000000000000010b              inline_mysql_rwlock_trywrlock
00000000005b1ba4 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
00000000005b1c10 l     F .text	0000000000000065              inline_mysql_cond_init
00000000005b1c75 l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000005b1ce4 l     F .text	0000000000000133              inline_mysql_cond_wait
00000000005b1e17 l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000005b1f5a l     F .text	000000000000006c              inline_mysql_cond_signal
00000000005b1fc6 l     F .text	000000000000006c              inline_mysql_cond_broadcast
0000000000c15b30 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c15b38 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c15b3c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c15b40 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c15b44 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c15b48 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105d8a0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c15b84 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
0000000000c15b88 l     O .rodata	0000000000000008              max_aligned_min_res_unit_size
0000000000c18178 l     O .rodata	0000000000000009              Query_cache::try_lock(bool)::__FUNCTION__
0000000000c181a0 l     O .rodata	0000000000000021              Query_cache::try_lock(bool)::__PRETTY_FUNCTION__
0000000000c181d0 l     O .rodata	0000000000000011              Query_cache::lock_and_suspend()::__FUNCTION__
0000000000c181e1 l     O .rodata	0000000000000005              Query_cache::lock()::__FUNCTION__
0000000000c181f0 l     O .rodata	000000000000001b              Query_cache::unlock()::__PRETTY_FUNCTION__
00000000005b2698 l     F .text	00000000000002b2              has_no_cache_directive(char*)
0000000000c1820b l     O .rodata	0000000000000006              Query_cache::abort(Query_cache_tls*)::__FUNCTION__
0000000000c18220 l     O .rodata	0000000000000026              Query_cache::end_of_result(THD*)::__PRETTY_FUNCTION__
0000000000c18248 l     O .rodata	000000000000000e              Query_cache::end_of_result(THD*)::__FUNCTION__
0000000000c18260 l     O .rodata	0000000000000021              Query_cache::resize(unsigned long)::__PRETTY_FUNCTION__
0000000000c182a0 l     O .rodata	0000000000000031              Query_cache::store_query(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
00000000005b4862 l     F .text	000000000000009e              send_data_in_chunks(st_net*, unsigned char const*, unsigned long)
0000000000c182d8 l     O .rodata	0000000000000008              send_data_in_chunks(st_net*, unsigned char const*, unsigned long)::MAX_CHUNK_LENGTH
0000000000c182e0 l     O .rodata	0000000000000016              Query_cache::send_result_to_client(THD*, char*, unsigned int)::__FUNCTION__
0000000000c18300 l     O .rodata	000000000000003a              Query_cache::send_result_to_client(THD*, char*, unsigned int)::__PRETTY_FUNCTION__
0000000000c18340 l     O .rodata	0000000000000039              Query_cache::invalidate(THD*, TABLE_LIST*, char)::__PRETTY_FUNCTION__
0000000000c18380 l     O .rodata	000000000000000b              Query_cache::invalidate(st_changed_table_list*)::__FUNCTION__
0000000000c18390 l     O .rodata	000000000000001c              Query_cache::invalidate_locked_for_write(TABLE_LIST*)::__FUNCTION__
0000000000c183c0 l     O .rodata	0000000000000039              Query_cache::unlink_table(Query_cache_block_table*)::__PRETTY_FUNCTION__
0000000000c18400 l     O .rodata	0000000000000029              Query_cache::join_results(unsigned long)::__PRETTY_FUNCTION__
0000000000c18440 l     O .rodata	000000000000002b              Query_cache::check_integrity(bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_class.cc
00000000005bfcf8 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000005bfd69 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000005bfde9 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000005bff00 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000005bff7d l     F .text	000000000000006c              inline_mysql_cond_broadcast
0000000000c19f80 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
00000000005bffe9 l     F .text	000000000000007a              bitmap_cmp
0000000000c1a980 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000c1a440 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
00000000005c0063 l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
00000000005c018e l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
00000000005c028e l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
0000000000c18608 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c1a7a0 l     O .rodata	0000000000000037              CSET_STRING::CSET_STRING(char*, unsigned long, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c1a300 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c1a240 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c1a280 l     O .rodata	0000000000000025              Item_int::val_int()::__PRETTY_FUNCTION__
0000000000c1a2c0 l     O .rodata	0000000000000024              Item_int::val_real()::__PRETTY_FUNCTION__
0000000000c1a340 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000c186b4 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c186b8 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c186bc l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c186c0 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c186c4 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105d900 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c1a920 l     O .rodata	0000000000000054              Query_tables_list::set_stmt_unsafe(Query_tables_list::enum_binlog_stmt_unsafe)::__PRETTY_FUNCTION__
0000000000c1a840 l     O .rodata	000000000000006e              Query_tables_list::stmt_accessed_table_string(Query_tables_list::enum_stmt_accessed_table)::__PRETTY_FUNCTION__
0000000000c1a7e0 l     O .rodata	000000000000005d              Query_tables_list::set_stmt_accessed_table(Query_tables_list::enum_stmt_accessed_table)::__PRETTY_FUNCTION__
0000000000c1a8c0 l     O .rodata	0000000000000059              Query_tables_list::stmt_accessed_table(Query_tables_list::enum_stmt_accessed_table)::__PRETTY_FUNCTION__
0000000000c1a720 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000c19fc0 l     O .rodata	0000000000000048              THD::enter_cond(st_mysql_cond*, st_mysql_mutex*, char const*)::__PRETTY_FUNCTION__
0000000000c1a020 l     O .rodata	0000000000000044              thd_security_context::__PRETTY_FUNCTION__
0000000000c1a080 l     O .rodata	0000000000000034              THD::pop_internal_handler()::__PRETTY_FUNCTION__
0000000000c1a0c0 l     O .rodata	0000000000000063              THD::raise_condition(unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*)::__PRETTY_FUNCTION__
0000000000c1a130 l     O .rodata	0000000000000014              THD::cleanup()::__PRETTY_FUNCTION__
0000000000c1a150 l     O .rodata	0000000000000014              THD::~THD()::__PRETTY_FUNCTION__
0000000000c1a180 l     O .rodata	0000000000000023              THD::awake(THD::killed_state)::__PRETTY_FUNCTION__
0000000000c1a1b0 l     O .rodata	000000000000001a              THD::store_globals()::__PRETTY_FUNCTION__
0000000000c1a1d0 l     O .rodata	000000000000001c              THD::restore_globals()::__PRETTY_FUNCTION__
00000000005c41c1 l     F .text	0000000000000033              list_include(st_changed_table_list**, st_changed_table_list*, st_changed_table_list*)
0000000000c1a200 l     O .rodata	0000000000000024              THD::add_changed_table(TABLE*)::__PRETTY_FUNCTION__
0000000000c1a370 l     O .rodata	000000000000001d              THD::close_active_vio()::__PRETTY_FUNCTION__
0000000001372520 l     O .bss	0000000000000020              default_line_term
0000000001372540 l     O .bss	0000000000000020              default_escaped
0000000001372560 l     O .bss	0000000000000020              default_field_term
0000000001372580 l     O .bss	0000000000000020              default_xml_row_term
00000000005c5545 l     F .text	000000000000022c              create_file(THD*, char*, sql_exchange*, st_io_cache*)
0000000000c1a3a0 l     O .rodata	0000000000000033              select_export::send_data(List<Item>&)::__PRETTY_FUNCTION__
0000000000c1a3e0 l     O .rodata	0000000000000045              select_max_min_finder_subselect::send_data(List<Item>&)::__PRETTY_FUNCTION__
0000000000c1a460 l     O .rodata	0000000000000034              Query_arena::type() const::__PRETTY_FUNCTION__
0000000000c1a4a0 l     O .rodata	0000000000000029              Query_arena::cleanup_stmt()::__PRETTY_FUNCTION__
0000000000c1a4e0 l     O .rodata	0000000000000040              THD::set_n_backup_active_arena(Query_arena*, Query_arena*)::__PRETTY_FUNCTION__
0000000000c1a520 l     O .rodata	000000000000003b              THD::restore_active_arena(Query_arena*, Query_arena*)::__PRETTY_FUNCTION__
00000000005c8d6b l     F .text	000000000000002e              get_statement_id_as_hash_key
00000000005c8d99 l     F .text	000000000000002d              delete_statement_as_hash_key
00000000005c8dc6 l     F .text	000000000000002a              get_stmt_name_hash_key
0000000000c1a560 l     O .rodata	0000000000000026              Statement_map::erase(Statement*)::__PRETTY_FUNCTION__
0000000000c1a590 l     O .rodata	000000000000001c              Statement_map::reset()::__PRETTY_FUNCTION__
0000000000c1a5c0 l     O .rodata	0000000000000020              Statement_map::~Statement_map()::__PRETTY_FUNCTION__
0000000000c1a5e0 l     O .rodata	0000000000000070              Security_context::change_security_context(THD*, st_mysql_lex_string*, st_mysql_lex_string*, st_mysql_lex_string*, Security_context**)::__PRETTY_FUNCTION__
0000000000c1a660 l     O .rodata	0000000000000040              THD::restore_backup_open_tables_state(Open_tables_backup*)::__PRETTY_FUNCTION__
0000000000c1a6a0 l     O .rodata	0000000000000032              thd_mark_transaction_to_rollback::__PRETTY_FUNCTION__
0000000000c1a6e0 l     O .rodata	0000000000000040              THD::reset_sub_statement_state(Sub_statement_state*, unsigned int)::__PRETTY_FUNCTION__
0000000000c1a760 l     O .rodata	000000000000003c              THD::restore_sub_statement_state(Sub_statement_state*)::__PRETTY_FUNCTION__
00000000013725a0 l     O .bss	0000000000000004              key_LOCK_xid_cache
00000000010d2670 l     O .data	0000000000000018              all_xid_mutexes
00000000005cad05 l     F .text	000000000000004f              init_xid_psi_keys()
00000000005cb0d7 l     F .text	0000000000000080              has_write_table_with_auto_increment(TABLE_LIST*)
00000000005cb157 l     F .text	000000000000008e              has_write_table_with_auto_increment_and_select(TABLE_LIST*)
00000000005cb1e5 l     F .text	0000000000000098              has_write_table_auto_increment_not_first_in_pk(TABLE_LIST*)
0000000000c1a9a0 l     O .rodata	00000000000000ef              Rows_log_event* THD::binlog_prepare_pending_rows_event<Write_rows_log_event>(TABLE*, unsigned int, st_bitmap const*, unsigned long, unsigned long, bool, Write_rows_log_event*)::__PRETTY_FUNCTION__
0000000000c1aaa0 l     O .rodata	00000000000000f0              Rows_log_event* THD::binlog_prepare_pending_rows_event<Delete_rows_log_event>(TABLE*, unsigned int, st_bitmap const*, unsigned long, unsigned long, bool, Delete_rows_log_event*)::__PRETTY_FUNCTION__
0000000000c1aba0 l     O .rodata	00000000000000f0              Rows_log_event* THD::binlog_prepare_pending_rows_event<Update_rows_log_event>(TABLE*, unsigned int, st_bitmap const*, unsigned long, unsigned long, bool, Update_rows_log_event*)::__PRETTY_FUNCTION__
00000000005cc360 l     F .text	0000000000000074              (anonymous namespace)::Row_data_memory::Row_data_memory(TABLE*, unsigned long)
00000000005cc578 l     F .text	00000000000000c1              (anonymous namespace)::Row_data_memory::allocate_memory(TABLE*, unsigned long)
00000000005cc4ae l     F .text	000000000000001f              (anonymous namespace)::Row_data_memory::has_memory() const
00000000005cc360 l     F .text	0000000000000074              (anonymous namespace)::Row_data_memory::Row_data_memory(TABLE*, unsigned long)
00000000005cc3d4 l     F .text	00000000000000a1              (anonymous namespace)::Row_data_memory::Row_data_memory(TABLE*, unsigned long, unsigned long)
00000000005cc3d4 l     F .text	00000000000000a1              (anonymous namespace)::Row_data_memory::Row_data_memory(TABLE*, unsigned long, unsigned long)
00000000005cc476 l     F .text	0000000000000038              (anonymous namespace)::Row_data_memory::~Row_data_memory()
00000000005cc476 l     F .text	0000000000000038              (anonymous namespace)::Row_data_memory::~Row_data_memory()
00000000005cc4ce l     F .text	00000000000000a9              (anonymous namespace)::Row_data_memory::slot(unsigned int)
0000000000c1ad00 l     O .rodata	0000000000000030              (anonymous namespace)::Row_data_memory::slot(unsigned int)::__PRETTY_FUNCTION__
0000000000c1aca0 l     O .rodata	0000000000000050              THD::binlog_write_row(TABLE*, bool, st_bitmap const*, unsigned long, unsigned char const*)::__PRETTY_FUNCTION__
0000000000c1ad40 l     O .rodata	000000000000005f              THD::binlog_update_row(TABLE*, bool, st_bitmap const*, unsigned long, unsigned char const*, unsigned char const*)::__PRETTY_FUNCTION__
0000000000c1ada0 l     O .rodata	0000000000000051              THD::binlog_delete_row(TABLE*, bool, st_bitmap const*, unsigned long, unsigned char const*)::__PRETTY_FUNCTION__
00000000005cce29 l     F .text	000000000000007f              show_query_type(THD::enum_binlog_query_type)
0000000000c1ae00 l     O .rodata	0000000000000039              show_query_type(THD::enum_binlog_query_type)::__PRETTY_FUNCTION__
00000000013725c0 l     O .bss	0000000000000040              show_query_type(THD::enum_binlog_query_type)::buf
00000000013725a8 l     O .bss	0000000000000008              limit_unsafe_suppression_start_time
00000000013725b0 l     O .bss	0000000000000001              unsafe_warning_suppression_is_activated
00000000013725b4 l     O .bss	0000000000000004              limit_unsafe_warning_count
00000000005ccea8 l     F .text	000000000000008f              reset_binlog_unsafe_suppression()
00000000005ccf37 l     F .text	000000000000010e              print_unsafe_warning_to_log(int, char*, char*)
00000000005cd045 l     F .text	0000000000000242              do_unsafe_limit_checkout(char*, int, char*)
0000000000c1ae40 l     O .rodata	0000000000000031              do_unsafe_limit_checkout(char*, int, char*)::__PRETTY_FUNCTION__
0000000000c1ae80 l     O .rodata	0000000000000022              THD::issue_unsafe_warnings()::__PRETTY_FUNCTION__
0000000000c1aec0 l     O .rodata	000000000000005e              THD::binlog_query(THD::enum_binlog_query_type, char const*, unsigned long, bool, bool, bool, int)::__PRETTY_FUNCTION__
0000000000c1af20 l     O .rodata	000000000000002f              THD::decrement_user_connections_counter()::__PRETTY_FUNCTION__
0000000000c1af60 l     O .rodata	000000000000002a              THD::time_out_user_resource_limits()::__PRETTY_FUNCTION__
00000000005cddc4 l     F .text	000000000000011c              __static_initialization_and_destruction_0(int, int)
00000000005cdee0 l     F .text	0000000000000015              _GLOBAL__sub_I_sql_class.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_client.cc
0000000000c1b048 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c1b050 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c1b054 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c1b058 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c1b05c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c1b060 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105d960 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000000000 l    df *ABS*	0000000000000000              sql_db.cc
00000000005d1fdc l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000005d20f3 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000005d2170 l     F .text	000000000000005f              inline_mysql_rwlock_init
00000000005d21cf l     F .text	000000000000006f              inline_mysql_rwlock_destroy
00000000005d223e l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
00000000005d2349 l     F .text	000000000000010b              inline_mysql_rwlock_wrlock
00000000005d2454 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
00000000005d24c0 l     F .text	000000000000012e              inline_mysql_file_stat(unsigned int, char const*, unsigned int, char const*, stat*, int)
00000000005d25ee l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
00000000005d2719 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
00000000005d2843 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
00000000005d2943 l     F .text	0000000000000174              inline_mysql_file_write(char const*, unsigned int, int, unsigned char const*, unsigned long, int)
00000000005d2ab7 l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
00000000005d2bd6 l     F .text	000000000000012e              inline_mysql_file_rename(unsigned int, char const*, unsigned int, char const*, char const*, int)
00000000005d2d04 l     F .text	000000000000011f              inline_mysql_file_delete_with_symlink(unsigned int, char const*, unsigned int, char const*, int)
0000000000c1b0a0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c1b0a8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c1b0ac l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c1b0b0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c1b0b4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c1b0b8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105d9c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010d2700 l     O .data	0000000000000020              deletable_extentions
0000000001372640 l     O .bss	0000000000000058              dboptions
0000000001372698 l     O .bss	0000000000000001              dboptions_init
00000000013726a0 l     O .bss	0000000000000040              LOCK_dboptions
00000000005d2e4d l     F .text	00000000000000d5              write_to_binlog(THD*, char*, unsigned int, char*, unsigned int)
00000000013726e0 l     O .bss	0000000000000004              key_rwlock_LOCK_dboptions
00000000010d26d0 l     O .data	0000000000000018              all_database_names_rwlocks
00000000005d2f3d l     F .text	0000000000000050              init_database_names_psi_keys()
00000000005d30f8 l     F .text	0000000000000087              get_dbopt(char const*, st_ha_create_information*)
00000000005d317f l     F .text	000000000000017a              put_dbopt(char const*, st_ha_create_information*)
00000000005d32f9 l     F .text	0000000000000078              del_dbopt(char const*)
00000000005d3371 l     F .text	00000000000001c3              write_db_opt(THD*, char const*, st_ha_create_information*)
00000000005d4f3d l     F .text	000000000000076b              find_db_tables_and_rm_known_files(THD*, st_my_dir*, char const*, char const*, TABLE_LIST**, bool*)
00000000005d56a8 l     F .text	0000000000000270              rm_dir_w_symlink(char const*, char)
00000000005d5cd8 l     F .text	0000000000000146              mysql_change_db_impl(THD*, st_mysql_lex_string*, unsigned long, charset_info_st*)
00000000005d5e1e l     F .text	0000000000000072              backup_current_db_name(THD*, st_mysql_lex_string*)
00000000005d5e90 l     F .text	000000000000006a              cmp_db_names(char const*, char const*)
0000000000000000 l    df *ABS*	0000000000000000              sql_derived.cc
0000000000c1b3e0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c1b540 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000c1b43c l     O .rodata	0000000000000004              SRID_SIZE
0000000000c1b440 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c1b444 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c1b448 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c1b44c l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105da20 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000000000 l    df *ABS*	0000000000000000              sql_error.cc
0000000000c1b580 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c1bce0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c1bc20 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c1bc60 l     O .rodata	0000000000000025              Item_int::val_int()::__PRETTY_FUNCTION__
0000000000c1bca0 l     O .rodata	0000000000000024              Item_int::val_real()::__PRETTY_FUNCTION__
0000000000c1bd20 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000c1b5dc l     O .rodata	0000000000000004              SRID_SIZE
0000000000c1b5e0 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c1b5e4 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c1b5e8 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c1b5ec l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105da80 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c1b880 l     O .rodata	0000000000000022              MYSQL_ERROR::init(st_mem_root*)::__PRETTY_FUNCTION__
0000000000c1b8c0 l     O .rodata	0000000000000024              MYSQL_ERROR::MYSQL_ERROR(st_mem_root*)::__PRETTY_FUNCTION__
00000000005d83df l     F .text	00000000000000ba              copy_string(st_mem_root*, String*, String const*)
0000000000c1b900 l     O .rodata	000000000000003a              MYSQL_ERROR::copy_opt_attributes(MYSQL_ERROR const*)::__PRETTY_FUNCTION__
0000000000c1b940 l     O .rodata	0000000000000057              MYSQL_ERROR::set(unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*)::__PRETTY_FUNCTION__
0000000000c1b9a0 l     O .rodata	0000000000000038              MYSQL_ERROR::set_builtin_message_text(char const*)::__PRETTY_FUNCTION__
0000000000c1b9e0 l     O .rodata	000000000000004e              Diagnostics_area::set_ok_status(THD*, unsigned long long, unsigned long long, char const*)::__PRETTY_FUNCTION__
0000000000c1ba40 l     O .rodata	000000000000002c              Diagnostics_area::set_eof_status(THD*)::__PRETTY_FUNCTION__
0000000000c1ba80 l     O .rodata	000000000000004e              Diagnostics_area::set_error_status(THD*, unsigned int, char const*, char const*)::__PRETTY_FUNCTION__
0000000000c1bae0 l     O .rodata	0000000000000028              Diagnostics_area::disable_status()::__PRETTY_FUNCTION__
0000000000c1bb20 l     O .rodata	000000000000004c              push_warning(THD*, MYSQL_ERROR::enum_warning_level, unsigned int, char const*)::__PRETTY_FUNCTION__
0000000000c1bb80 l     O .rodata	0000000000000058              push_warning_printf(THD*, MYSQL_ERROR::enum_warning_level, unsigned int, char const*, ...)::__PRETTY_FUNCTION__
0000000000c1bbe0 l     O .rodata	0000000000000027              mysqld_show_warnings(THD*, unsigned long)::__PRETTY_FUNCTION__
0000000000c1bd60 l     O .rodata	000000000000003e              err_conv(char*, unsigned int, char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c1bda0 l     O .rodata	0000000000000066              convert_error_message(char*, unsigned int, charset_info_st*, char const*, unsigned int, charset_info_st*, unsigned int*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_handler.cc
00000000005d9d0e l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000005d9e25 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000c1be20 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c1c4a0 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c1c380 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000c1c480 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000c1c3a0 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
00000000005d9ea2 l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
00000000005d9ed4 l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
00000000005d9eee l     F .text	0000000000000025              dbug_tmp_use_all_columns(TABLE*, st_bitmap*)
00000000005d9f13 l     F .text	0000000000000026              dbug_tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000c1bf10 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c1bf14 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c1bf18 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c1bf1c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c1bf20 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105db20 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010d2720 l     O .data	0000000000000020              rkey_to_rnext
00000000005d9f39 l     F .text	000000000000003a              mysql_ha_hash_get_key(TABLE_LIST*, unsigned long*, char)
00000000005d9f73 l     F .text	000000000000001b              mysql_ha_hash_free(TABLE_LIST*)
00000000005d9f8e l     F .text	000000000000011b              mysql_ha_close_table(THD*, TABLE_LIST*)
0000000000c1c3c0 l     O .rodata	000000000000002c              mysql_ha_open(THD*, TABLE_LIST*, bool)::__PRETTY_FUNCTION__
0000000000c1c400 l     O .rodata	0000000000000079              mysql_ha_read(THD*, TABLE_LIST*, enum_ha_read_modes, char*, List<Item>*, ha_rkey_function, Item*, unsigned long long, unsigned long long)::__PRETTY_FUNCTION__
00000000005dbfdc l     F .text	00000000000001c5              mysql_ha_find(THD*, TABLE_LIST*)
0000000000c1c4e0 l     O .rodata	000000000000002b              mysql_ha_rm_tables(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c1c510 l     O .rodata	000000000000001a              mysql_ha_flush(THD*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_insert.cc
00000000005dd4e0 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000005dd551 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000005dd5d1 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000005dd6e8 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000005dd765 l     F .text	0000000000000065              inline_mysql_cond_init
00000000005dd7ca l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000005dd839 l     F .text	0000000000000133              inline_mysql_cond_wait
00000000005dd96c l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000005ddaaf l     F .text	000000000000006c              inline_mysql_cond_signal
00000000005ddb1b l     F .text	000000000000006c              inline_mysql_cond_broadcast
00000000005ddb87 l     F .text	000000000000007e              inline_mysql_thread_create
00000000005ddc05 l     F .text	000000000000006f              inline_mysql_thread_set_psi_id
0000000000c1dba0 l     O .rodata	000000000000002f              base_ilist::move_elements_to(base_ilist*)::__PRETTY_FUNCTION__
00000000005ddc74 l     F .text	0000000000000077              bitmap_set_bit
0000000000c1d3e0 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
00000000005ddceb l     F .text	0000000000000067              bitmap_is_set
0000000000c1d3a0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000c1d4a0 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000c1c6d0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c1d6c0 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c1d700 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000c1d680 l     O .rodata	0000000000000037              CSET_STRING::CSET_STRING(char*, unsigned long, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c1c7a8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c1c7ac l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c1c7b0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c1c7b4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c1c7b8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105db80 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c1d960 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000c1d8d0 l     O .rodata	0000000000000018              THD::fatal_error()::__PRETTY_FUNCTION__
00000000005ddf30 l     F .text	00000000000005bb              check_insert_fields(THD*, TABLE_LIST*, List<Item>&, List<Item>&, bool, bool, unsigned long long*)
00000000005e017d l     F .text	00000000000003b7              check_view_insertability(THD*, TABLE_LIST*)
00000000005de4eb l     F .text	0000000000000182              check_update_fields(THD*, TABLE_LIST*, List<Item>&, List<Item>&, bool, unsigned long long*)
00000000005de72a l     F .text	0000000000000144              upgrade_lock_type(THD*, thr_lock_type*, enum_duplicates)
00000000005de86e l     F .text	00000000000002c9              open_and_lock_for_insert_delayed(THD*, TABLE_LIST*)
00000000005e207c l     F .text	00000000000007c3              delayed_get_table(THD*, MDL_request*, TABLE_LIST*)
00000000005e3448 l     F .text	0000000000000131              end_delayed_insert(THD*)
00000000005deb37 l     F .text	00000000000000f3              create_insert_stmt_from_insert_delayed(THD*, String*)
0000000000c1d408 l     O .rodata	000000000000000d              mysql_insert(THD*, TABLE_LIST*, List<Item>&, List<List<Item> >&, List<Item>&, List<Item>&, enum_duplicates, bool)::__FUNCTION__
0000000000c1d420 l     O .rodata	0000000000000077              mysql_insert(THD*, TABLE_LIST*, List<Item>&, List<List<Item> >&, List<Item>&, List<Item>&, enum_duplicates, bool)::__PRETTY_FUNCTION__
00000000005e2ed2 l     F .text	0000000000000576              write_delayed(THD*, TABLE*, enum_duplicates, st_mysql_lex_string, bool, bool)
0000000000c1d4c0 l     O .rodata	0000000000000031              check_view_insertability(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
00000000005e0534 l     F .text	00000000000001a2              mysql_prepare_insert_check_table(THD*, TABLE_LIST*, List<Item>&, bool)
00000000005e06d6 l     F .text	00000000000000ea              prepare_for_positional_update(TABLE*, TABLE_LIST*)
0000000000c1d500 l     O .rodata	0000000000000038              prepare_for_positional_update(TABLE*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c1d540 l     O .rodata	0000000000000093              mysql_prepare_insert(THD*, TABLE_LIST*, TABLE*, List<Item>&, List<Item>*, List<Item>&, List<Item>&, enum_duplicates, Item**, bool, bool, bool)::__PRETTY_FUNCTION__
00000000005e0dda l     F .text	000000000000009a              last_uniq_key(TABLE*, unsigned int)
0000000000c1d5e0 l     O .rodata	000000000000002b              write_record(THD*, TABLE*, st_copy_info*)::__PRETTY_FUNCTION__
00000000005e1f5f l     F .text	000000000000011d              find_handler(THD*, TABLE_LIST*)
0000000000c1d610 l     O .rodata	000000000000000d              find_handler(THD*, TABLE_LIST*)::__FUNCTION__
0000000000c1d620 l     O .rodata	0000000000000038              delayed_get_table(THD*, MDL_request*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c1d660 l     O .rodata	0000000000000012              delayed_get_table(THD*, MDL_request*, TABLE_LIST*)::__FUNCTION__
0000000000c1d730 l     O .rodata	0000000000000010              Delayed_insert::get_local_table(THD*)::__FUNCTION__
0000000000c1d740 l     O .rodata	000000000000000e              write_delayed(THD*, TABLE*, enum_duplicates, st_mysql_lex_string, bool, bool)::__FUNCTION__
00000000005e4367 l     F .text	0000000000000049              unlink_blobs(TABLE*)
0000000000c1d760 l     O .rodata	0000000000000065              Delayed_prelocking_strategy::handle_table(THD*, Query_tables_list*, TABLE_LIST*, bool*)::__PRETTY_FUNCTION__
0000000000c1d7e0 l     O .rodata	000000000000007a              Delayed_prelocking_strategy::handle_routine(THD*, Query_tables_list*, Sroutine_hash_entry*, sp_head*, bool*)::__PRETTY_FUNCTION__
0000000000c1d860 l     O .rodata	0000000000000064              Delayed_prelocking_strategy::handle_view(THD*, Query_tables_list*, TABLE_LIST*, bool*)::__PRETTY_FUNCTION__
0000000000c1d8f0 l     O .rodata	0000000000000016              handle_delayed_insert::__FUNCTION__
00000000005e43b0 l     F .text	000000000000009e              free_delayed_insert_blobs(TABLE*)
0000000000c1d908 l     O .rodata	000000000000000f              Delayed_insert::handle_inserts()::__FUNCTION__
0000000000c1d920 l     O .rodata	0000000000000026              Delayed_insert::handle_inserts()::__PRETTY_FUNCTION__
0000000000c1d9a0 l     O .rodata	0000000000000027              mysql_insert_select_prepare(THD*)::__PRETTY_FUNCTION__
0000000000c1d9e0 l     O .rodata	0000000000000042              select_insert::prepare(List<Item>&, st_select_lex_unit*)::__PRETTY_FUNCTION__
0000000000c1da40 l     O .rodata	0000000000000026              select_insert::cleanup()::__PRETTY_FUNCTION__
0000000000c1da80 l     O .rodata	0000000000000027              select_insert::send_eof()::__PRETTY_FUNCTION__
0000000000c1dac0 l     O .rodata	000000000000002f              select_insert::abort_result_set()::__PRETTY_FUNCTION__
00000000005e6f19 l     F .text	0000000000000797              create_table_from_items(THD*, st_ha_create_information*, TABLE_LIST*, Alter_info*, List<Item>*, st_mysql_lock**, TABLEOP_HOOKS*)
00000000005e76b0 l     F .text	0000000000000059              select_create::prepare(List<Item>&, st_select_lex_unit*)::MY_HOOKS::MY_HOOKS(select_create*, TABLE_LIST*, TABLE_LIST*)
0000000001069db8 l     O .data.rel.ro	0000000000000030              vtable for select_create::prepare(List<Item>&, st_select_lex_unit*)::MY_HOOKS
00000000005e76b0 l     F .text	0000000000000059              select_create::prepare(List<Item>&, st_select_lex_unit*)::MY_HOOKS::MY_HOOKS(select_create*, TABLE_LIST*, TABLE_LIST*)
00000000005e770a l     F .text	00000000000000eb              select_create::prepare(List<Item>&, st_select_lex_unit*)::MY_HOOKS::do_postlock(TABLE**, unsigned int)
0000000000c1db00 l     O .rodata	0000000000000042              select_create::prepare(List<Item>&, st_select_lex_unit*)::__PRETTY_FUNCTION__
00000000005e85e6 l     F .text	000000000000003d              select_create::prepare(List<Item>&, st_select_lex_unit*)::MY_HOOKS::~MY_HOOKS()
0000000000c1db60 l     O .rodata	000000000000003b              select_create::binlog_show_create_table(TABLE**, unsigned int)::__PRETTY_FUNCTION__
00000000005e8624 l     F .text	0000000000000026              select_create::prepare(List<Item>&, st_select_lex_unit*)::MY_HOOKS::~MY_HOOKS()
00000000005e85e6 l     F .text	000000000000003d              select_create::prepare(List<Item>&, st_select_lex_unit*)::MY_HOOKS::~MY_HOOKS()
00000000005e864a l     F .text	000000000000004f              __static_initialization_and_destruction_0(int, int)
00000000005e8699 l     F .text	0000000000000015              _GLOBAL__sub_I_sql_insert.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_lex.cc
0000000000c1fc80 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
0000000000c1dc30 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c1dc38 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c1dc3c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c1dc40 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c1dc44 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c1dc48 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105dbe0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c1fd80 l     O .rodata	000000000000006e              Query_tables_list::stmt_accessed_table_string(Query_tables_list::enum_stmt_accessed_table)::__PRETTY_FUNCTION__
0000000000c1fc40 l     O .rodata	0000000000000022              Lex_input_stream::yyLength()::__PRETTY_FUNCTION__
00000000010d2760 l     O .data	0000000000000100              to_upper_lex
00000000010d8b20 l     O .data	00000000000035d0              symbols
00000000010dc100 l     O .data	0000000000000300              sql_functions
00000000010d2860 l     O .data	00000000000032bc              sql_functions_map
00000000010d5b20 l     O .data	0000000000002f60              symbols_map
00000000010d8a80 l     O .data	0000000000000004              sql_functions_max_len
00000000010d8a84 l     O .data	0000000000000004              symbols_max_len
00000000005e9a14 l     F .text	00000000000004bb              get_hash_symbol(char const*, unsigned int, bool)
0000000000c1fae0 l     O .rodata	000000000000003a              Lex_input_stream::body_utf8_start(THD*, char const*)::__PRETTY_FUNCTION__
0000000000c1fb20 l     O .rodata	0000000000000042              Lex_input_stream::body_utf8_append(char const*, char const*)::__PRETTY_FUNCTION__
00000000005ead9a l     F .text	00000000000000dd              find_keyword(Lex_input_stream*, unsigned int, bool)
0000000000c1fb80 l     O .rodata	0000000000000023              is_keyword(char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000c1fbc0 l     O .rodata	000000000000002f              is_lex_native_function(st_mysql_lex_string const*)::__PRETTY_FUNCTION__
00000000005eaf23 l     F .text	00000000000000dc              get_token(Lex_input_stream*, unsigned int, unsigned int)
00000000005eafff l     F .text	0000000000000150              get_quoted_token(Lex_input_stream*, unsigned int, unsigned int, char)
00000000005eb14f l     F .text	0000000000000500              get_text(Lex_input_stream*, int, int)
0000000000c1fc00 l     O .rodata	000000000000002c              get_text(Lex_input_stream*, int, int)::__PRETTY_FUNCTION__
00000000010d8ae0 l     O .data	0000000000000008              long_str
0000000000c1f5b0 l     O .rodata	0000000000000004              long_len
00000000010d8ae8 l     O .data	0000000000000008              signed_long_str
00000000010d8af0 l     O .data	0000000000000008              longlong_str
0000000000c1f5d4 l     O .rodata	0000000000000004              longlong_len
00000000010d8af8 l     O .data	0000000000000008              signed_longlong_str
0000000000c1f5f0 l     O .rodata	0000000000000004              signed_longlong_len
00000000010d8b00 l     O .data	0000000000000008              unsigned_longlong_str
0000000000c1f60c l     O .rodata	0000000000000004              unsigned_longlong_len
00000000005eb64f l     F .text	00000000000001c6              int_token(char const*, unsigned int)
00000000005eb9ee l     F .text	0000000000001d6e              lex_one_token(YYSTYPE*, THD*)
0000000000c1fcc0 l     O .rodata	0000000000000040              st_select_lex::print_limit(THD*, String*, enum_query_type)::__PRETTY_FUNCTION__
0000000000c1fd00 l     O .rodata	000000000000002c              LEX::copy_db_to(char**, unsigned long*) const::__PRETTY_FUNCTION__
0000000000c1fd40 l     O .rodata	0000000000000033              st_select_lex_unit::set_limit(st_select_lex*)::__PRETTY_FUNCTION__
00000000005efe3c l     F .text	0000000000000093              fix_prepare_info_in_table_list(THD*, TABLE_LIST*)
0000000000c1fe00 l     O .rodata	00000000000000ac              Mem_root_array<st_order*, true>::Mem_root_array(st_mem_root*)::__PRETTY_FUNCTION__
0000000000c1fec0 l     O .rodata	00000000000000af              Mem_root_array<st_order*, true>::at(unsigned long)::__PRETTY_FUNCTION__
0000000000c1ff80 l     O .rodata	00000000000000bb              Mem_root_array<st_order*, true>::at(unsigned long) const::__PRETTY_FUNCTION__
0000000000c20040 l     O .rodata	00000000000000a8              Mem_root_array<st_order*, true>::chop(unsigned long)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_list.cc
0000000000c200e8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000005f2157 l     F .text	000000000000004f              __static_initialization_and_destruction_0(int, int)
00000000005f21a6 l     F .text	0000000000000015              _GLOBAL__sub_I_sql_list.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_manager.cc
00000000005f21ee l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000005f2305 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000005f2382 l     F .text	0000000000000133              inline_mysql_cond_wait
00000000005f24b5 l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000005f25f8 l     F .text	000000000000006c              inline_mysql_cond_signal
00000000005f2664 l     F .text	000000000000007e              inline_mysql_thread_create
0000000000c20140 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c20148 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c2014c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c20150 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c20154 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c20158 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105dc40 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001372c18 l     O .bss	0000000000000001              manager_thread_in_use
0000000001372c19 l     O .bss	0000000000000001              abort_manager
0000000001372c20 l     O .bss	0000000000000008              cb_list
0000000000000000 l    df *ABS*	0000000000000000              sql_parse.cc
00000000005f2c6c l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000005f2d83 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000005f2e00 l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
00000000005f2f0b l     F .text	000000000000006c              inline_mysql_rwlock_unlock
00000000005f2f77 l     F .text	000000000000006c              inline_mysql_cond_broadcast
00000000005f2fe3 l     F .text	000000000000006f              inline_mysql_thread_set_psi_id
0000000000c220e0 l     O .rodata	0000000000000029              String::operator=(String const&)::__PRETTY_FUNCTION__
00000000005f3052 l     F .text	000000000000001e              my_atomic_add32(int volatile*, int)
00000000005f3070 l     F .text	0000000000000023              my_atomic_add64(long long volatile*, long long)
00000000005f3093 l     F .text	0000000000000175              inline_mysql_file_fgets(char const*, unsigned int, char*, int, st_mysql_file*)
00000000005f3208 l     F .text	000000000000001d              inline_mysql_file_feof(st_mysql_file*)
0000000000c22660 l     O .rodata	000000000000002a              MDL_request::set_type(enum_mdl_type)::__PRETTY_FUNCTION__
0000000000c20330 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000005f3225 l     F .text	0000000000000031              ha_check_storage_engine_flag(handlerton const*, unsigned int)
0000000000c22160 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000c22120 l     O .rodata	0000000000000037              CSET_STRING::CSET_STRING(char*, unsigned long, charset_info_st*)::__PRETTY_FUNCTION__
00000000005f3256 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000c22340 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c22300 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c2042c l     O .rodata	0000000000000004              SRID_SIZE
0000000000c20430 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c20434 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c20438 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c2043c l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000c226e0 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
000000000105dca0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c222a0 l     O .rodata	0000000000000054              Query_tables_list::set_stmt_unsafe(Query_tables_list::enum_binlog_stmt_unsafe)::__PRETTY_FUNCTION__
0000000000c22560 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000c22030 l     O .rodata	0000000000000018              THD::fatal_error()::__PRETTY_FUNCTION__
00000000005f3286 l     F .text	0000000000000121              make_user_name(THD*, char*)
00000000005f33a7 l     F .text	00000000000003c8              mysql_audit_general(THD*, unsigned int, int, char const*)
00000000010dc450 l     O .data	0000000000000010              mysql_audit_general(THD*, unsigned int, int, char const*)::empty
00000000005f376f l     F .text	0000000000000022              __s2e_touch_string
00000000005f3791 l     F .text	000000000000003d              __s2e_touch_buffer
00000000005f37ce l     F .text	000000000000004d              s2e_invoke_plugin
00000000005f381b l     F .text	00000000000000b2              some_non_temp_table_to_be_updated(THD*, TABLE_LIST*)
0000000000c21f40 l     O .rodata	000000000000003a              some_non_temp_table_to_be_updated(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
00000000005f38cd l     F .text	000000000000011d              stmt_causes_implicit_commit(THD*, unsigned int)
0000000000c21f80 l     O .rodata	0000000000000027              is_update_query(enum_sql_command)::__PRETTY_FUNCTION__
0000000000c21fc0 l     O .rodata	0000000000000030              is_log_table_write_query(enum_sql_command)::__PRETTY_FUNCTION__
0000000000c21ff0 l     O .rodata	0000000000000015              execute_init_command(THD*, st_mysql_lex_string*, st_mysql_rwlock*)::__FUNCTION__
00000000005f43b5 l     F .text	000000000000063d              handle_bootstrap_impl(THD*)
0000000000c22010 l     O .rodata	0000000000000016              handle_bootstrap_impl(THD*)::__FUNCTION__
0000000000c22050 l     O .rodata	0000000000000016              do_command(THD*)::__PRETTY_FUNCTION__
00000000005f4f7a l     F .text	0000000000000244              deny_updates_if_read_only_option(THD*, TABLE_LIST*)
0000000000c22080 l     O .rodata	000000000000003e              dispatch_command(enum_server_command, THD*, char*, unsigned int)::__PRETTY_FUNCTION__
00000000006045be l     F .text	0000000000000085              sql_kill(THD*, unsigned long, bool)
0000000000c220c0 l     O .rodata	0000000000000011              dispatch_command(enum_server_command, THD*, char*, unsigned int)::__FUNCTION__
0000000000c22190 l     O .rodata	0000000000000013              log_slow_statement(THD*)::__FUNCTION__
0000000000c221c0 l     O .rodata	0000000000000047              prepare_schema_table(THD*, LEX*, Table_ident*, enum_schema_tables)::__PRETTY_FUNCTION__
00000000005f78df l     F .text	00000000000000b5              reset_one_shot_variables(THD*)
00000000005f7994 l     F .text	00000000000002d5              sp_process_definer(THD*)
00000000005f7c69 l     F .text	00000000000001c8              lock_tables_open_and_lock_tables(THD*, TABLE_LIST*)
0000000000c22220 l     O .rodata	0000000000000039              lock_tables_open_and_lock_tables(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c22260 l     O .rodata	0000000000000020              mysql_execute_command(THD*)::__PRETTY_FUNCTION__
00000000005ffa5a l     F .text	00000000000003f7              execute_sqlcom_select(THD*, TABLE_LIST*)
0000000000c22280 l     O .rodata	0000000000000016              mysql_execute_command(THD*)::__FUNCTION__
0000000000c22378 l     O .rodata	000000000000000d              check_access(THD*, unsigned long, char const*, unsigned long*, st_grant_internal_info*, bool, bool)::__FUNCTION__
00000000006008cd l     F .text	0000000000000272              check_show_access(THD*, TABLE_LIST*)
0000000000c223a0 l     O .rodata	000000000000002a              check_show_access(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c223e0 l     O .rodata	0000000000000041              check_routine_access(THD*, unsigned long, char*, char*, bool, bool)::__PRETTY_FUNCTION__
0000000000c22440 l     O .rodata	0000000000000046              check_fk_parent_table_access(THD*, st_ha_create_information*, Alter_info*)::__PRETTY_FUNCTION__
0000000000c224a0 l     O .rodata	0000000000000031              check_stack_overrun(THD*, long, unsigned char*)::__PRETTY_FUNCTION__
0000000000c224e0 l     O .rodata	0000000000000033              my_yyoverflow(short**, YYSTYPE**, unsigned long*)::__PRETTY_FUNCTION__
0000000000c22520 l     O .rodata	0000000000000023              THD::reset_for_next_command()::__PRETTY_FUNCTION__
0000000000c225a0 l     O .rodata	000000000000001d              mysql_init_select(LEX*)::__PRETTY_FUNCTION__
0000000000c225c0 l     O .rodata	0000000000000033              mysql_parse(THD*, char*, unsigned int, Parser_state*)::__PRETTY_FUNCTION__
0000000000c225f8 l     O .rodata	000000000000000c              mysql_parse(THD*, char*, unsigned int, Parser_state*)::__FUNCTION__
0000000000c22620 l     O .rodata	0000000000000031              st_select_lex::end_nested_join(THD*)::__PRETTY_FUNCTION__
0000000000c226a0 l     O .rodata	0000000000000033              st_select_lex_unit::add_fake_select_lex(THD*)::__PRETTY_FUNCTION__
0000000000c22720 l     O .rodata	000000000000002e              multi_delete_precheck(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000605111 l     F .text	0000000000000276              multi_delete_table_match(LEX*, TABLE_LIST*, TABLE_LIST*)
0000000000c22760 l     O .rodata	0000000000000036              multi_delete_set_locks_and_link_aux_tables(LEX*)::__PRETTY_FUNCTION__
0000000000c227a0 l     O .rodata	000000000000003a              parse_sql(THD*, Parser_state*, Object_creation_ctx*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_plugin.cc
00000000006080c8 l     F .text	0000000000000071              inline_mysql_mutex_init
0000000000608139 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000006081b9 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006082d0 l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000060834d l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
0000000000608458 l     F .text	000000000000010b              inline_mysql_rwlock_wrlock
0000000000608563 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000c23c50 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000c22870 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c22878 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c2287c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c22880 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c22884 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c22888 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105df00 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010dc5a0 l     O .data	0000000000000020              global_plugin_typelib
00000000010dc4e8 l     O .data	0000000000000008              plugin_interface_version_sym
00000000010dc4f0 l     O .data	0000000000000008              sizeof_st_plugin_sym
00000000010dc4f8 l     O .data	0000000000000008              plugin_declarations_sym
00000000010dc460 l     O .data	0000000000000004              min_plugin_interface_version
00000000010dc480 l     O .data	0000000000000020              min_plugin_info_interface_version
00000000010dc4a0 l     O .data	0000000000000020              cur_plugin_info_interface_version
00000000010dc640 l     O .data	0000000000000010              my_snprintf_handler
00000000010dc660 l     O .data	0000000000000030              thd_alloc_handler
00000000010dc690 l     O .data	0000000000000010              thd_wait_handler
00000000010dc6a0 l     O .data	0000000000000010              my_thread_scheduler_handler
00000000010dc500 l     O .data	0000000000000060              list_of_services
0000000001373210 l     O .bss	0000000000000018              plugin_dl_array
0000000001373230 l     O .bss	0000000000000018              plugin_array
0000000001373260 l     O .bss	00000000000002c0              plugin_hash
0000000001373520 l     O .bss	0000000000000001              reap_needed
0000000001373524 l     O .bss	0000000000000004              plugin_array_version
0000000001373528 l     O .bss	0000000000000001              initialized
0000000001373540 l     O .bss	0000000000000038              plugin_mem_root
0000000001373578 l     O .bss	0000000000000004              global_variables_dynamic_size
0000000001373580 l     O .bss	0000000000000058              bookmark_hash
000000000060fd30 l     F .text	000000000000008f              pluginvar_show_type(st_mysql_sys_var*)
00000000006085cf l     F .text	000000000000017d              report_error(int, unsigned int, ...)
0000000000608795 l     F .text	000000000000004a              item_value_type(st_mysql_value*)
00000000006087df l     F .text	0000000000000121              item_val_str(st_mysql_value*, char*, int*)
0000000000608900 l     F .text	000000000000006a              item_val_int(st_mysql_value*, long long*)
000000000060896a l     F .text	0000000000000021              item_is_unsigned(st_mysql_value*)
000000000060898b l     F .text	000000000000006c              item_val_real(st_mysql_value*, double*)
00000000006089f7 l     F .text	0000000000000118              plugin_dl_find(st_mysql_lex_string const*)
0000000000608b0f l     F .text	0000000000000148              plugin_dl_insert_or_reuse(st_plugin_dl*)
0000000000608c57 l     F .text	0000000000000059              free_plugin_mem(st_plugin_dl*)
0000000000608cb0 l     F .text	0000000000000a9d              plugin_dl_add(st_mysql_lex_string const*, int)
0000000000c239e0 l     O .rodata	0000000000000034              plugin_dl_add(st_mysql_lex_string const*, int)::__PRETTY_FUNCTION__
000000000060974d l     F .text	0000000000000195              plugin_dl_del(st_mysql_lex_string const*)
0000000000c23a20 l     O .rodata	0000000000000026              plugin_dl_del(st_mysql_lex_string const*)::__PRETTY_FUNCTION__
00000000006098e2 l     F .text	00000000000001b5              plugin_find_internal(st_mysql_lex_string const*, int)
0000000000c23a60 l     O .rodata	000000000000003c              plugin_find_internal(st_mysql_lex_string const*, int)::__PRETTY_FUNCTION__
0000000000609a97 l     F .text	00000000000000df              plugin_status(st_mysql_lex_string const*, int)
0000000000609c06 l     F .text	00000000000001ba              intern_plugin_lock(LEX*, st_plugin_int**)
0000000000c23aa0 l     O .rodata	0000000000000035              intern_plugin_lock(LEX*, st_plugin_int**)::__PRETTY_FUNCTION__
0000000000609f91 l     F .text	0000000000000149              plugin_insert_or_reuse(st_plugin_int*)
000000000060a0da l     F .text	00000000000004a8              plugin_add(st_mem_root*, st_mysql_lex_string const*, st_mysql_lex_string const*, int*, char**, int)
00000000006121ee l     F .text	000000000000074a              test_plugin_options(st_mem_root*, st_plugin_int*, int*, char**)
000000000060f306 l     F .text	0000000000000061              restore_pluginvar_names(sys_var*)
000000000060a582 l     F .text	00000000000001d9              plugin_deinitialize(st_plugin_int*, bool)
0000000000c23ae0 l     O .rodata	000000000000002f              plugin_deinitialize(st_plugin_int*, bool)::__PRETTY_FUNCTION__
000000000060a75b l     F .text	00000000000001e0              plugin_del(st_plugin_int*)
0000000000c23b20 l     O .rodata	0000000000000020              plugin_del(st_plugin_int*)::__PRETTY_FUNCTION__
000000000060fbf4 l     F .text	000000000000013c              plugin_vars_free_values(sys_var*)
000000000060a93b l     F .text	0000000000000228              reap_plugins()
0000000000c23b40 l     O .rodata	0000000000000014              reap_plugins()::__PRETTY_FUNCTION__
000000000060ab63 l     F .text	0000000000000209              intern_plugin_unlock(LEX*, st_plugin_int**)
0000000000c23b60 l     O .rodata	000000000000002c              intern_plugin_unlock(LEX*, st_plugin_int**)::__PRETTY_FUNCTION__
0000000000c23ba0 l     O .rodata	0000000000000036              plugin_unlock_list(THD*, st_plugin_int***, unsigned int)::__PRETTY_FUNCTION__
000000000060af6a l     F .text	000000000000030c              plugin_initialize(st_plugin_int*)
0000000000c23be0 l     O .rodata	0000000000000026              plugin_initialize(st_plugin_int*)::__PRETTY_FUNCTION__
000000000060b2de l     F .text	0000000000000042              convert_dash_to_underscore(char*, int)
000000000060b320 l     F .text	0000000000000042              convert_underscore_to_dash(char*, int)
00000000013735d8 l     O .bss	0000000000000004              key_LOCK_plugin
00000000013735dc l     O .bss	0000000000000004              key_LOCK_plugin_delete
00000000010dc560 l     O .data	0000000000000030              all_plugin_mutexes
000000000060b362 l     F .text	000000000000004f              init_plugin_psi_keys()
000000000060bd2e l     F .text	000000000000015b              register_builtin(st_mysql_plugin*, st_plugin_int*, st_plugin_int**)
0000000000c23c20 l     O .rodata	0000000000000023              plugin_init(int*, char**, int)::__PRETTY_FUNCTION__
000000000060c331 l     F .text	0000000000000496              plugin_load_list(st_mem_root*, int*, char**, char const*)
000000000060be89 l     F .text	00000000000004a8              plugin_load(st_mem_root*, int*, char**)
000000000060f9b3 l     F .text	000000000000003a              unlock_variables(THD*, system_variables*)
000000000060f9ed l     F .text	000000000000008d              cleanup_variables(THD*, system_variables*)
000000000060ddef l     F .text	0000000000000131              check_func_bool(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
000000000060df20 l     F .text	000000000000021d              check_func_int(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
0000000000610b8f l     F .text	0000000000000944              plugin_opt_set_limits(my_option*, st_mysql_sys_var const*)
000000000060e13d l     F .text	0000000000000221              check_func_long(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
000000000060e35e l     F .text	0000000000000221              check_func_longlong(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
000000000060e57f l     F .text	00000000000000b1              check_func_str(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
000000000060e630 l     F .text	000000000000017a              check_func_enum(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
000000000060e7aa l     F .text	00000000000001ce              check_func_set(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
000000000060e978 l     F .text	0000000000000103              check_func_double(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
000000000060ea7b l     F .text	0000000000000034              update_func_bool(THD*, st_mysql_sys_var*, void*, void const*)
000000000060eaaf l     F .text	0000000000000023              update_func_int(THD*, st_mysql_sys_var*, void*, void const*)
000000000060ead2 l     F .text	0000000000000025              update_func_long(THD*, st_mysql_sys_var*, void*, void const*)
000000000060eaf7 l     F .text	0000000000000028              update_func_longlong(THD*, st_mysql_sys_var*, void*, void const*)
000000000060eb1f l     F .text	0000000000000025              update_func_str(THD*, st_mysql_sys_var*, void*, void const*)
000000000060eb44 l     F .text	0000000000000027              update_func_double(THD*, st_mysql_sys_var*, void*, void const*)
000000000060ed3e l     F .text	0000000000000181              find_bookmark(char const*, char const*, int)
000000000060eebf l     F .text	0000000000000447              register_var(char const*, char const*, int)
0000000000c23c80 l     O .rodata	0000000000000039              register_var(char const*, char const*, int)::__PRETTY_FUNCTION__
000000000060f367 l     F .text	00000000000003ad              intern_sys_var_ptr(THD*, int, bool)
0000000000c23cc0 l     O .rodata	000000000000002b              intern_sys_var_ptr(THD*, int, bool)::__PRETTY_FUNCTION__
000000000060fdbf l     F .text	00000000000001b6              plugin_var_memalloc_session_update(THD*, st_mysql_sys_var*, char**, char const*)
000000000060f714 l     F .text	0000000000000027              mysql_sys_var_char(THD*, int)
000000000060f73b l     F .text	0000000000000027              mysql_sys_var_int(THD*, int)
000000000060f762 l     F .text	0000000000000027              mysql_sys_var_long(THD*, int)
000000000060f789 l     F .text	0000000000000027              mysql_sys_var_ulong(THD*, int)
000000000060f7b0 l     F .text	0000000000000027              mysql_sys_var_longlong(THD*, int)
000000000060f7d7 l     F .text	0000000000000027              mysql_sys_var_ulonglong(THD*, int)
000000000060f7fe l     F .text	0000000000000027              mysql_sys_var_str(THD*, int)
000000000060f825 l     F .text	0000000000000027              mysql_sys_var_double(THD*, int)
000000000060ff75 l     F .text	00000000000000a3              plugin_var_memalloc_free(system_variables*)
0000000000c23d00 l     O .rodata	0000000000000030              cleanup_variables(THD*, system_variables*)::__PRETTY_FUNCTION__
0000000000c23d40 l     O .rodata	0000000000000031              pluginvar_show_type(st_mysql_sys_var*)::__PRETTY_FUNCTION__
0000000000610018 l     F .text	00000000000000f9              plugin_var_memalloc_global_update(THD*, st_mysql_sys_var*, char**, char const*)
0000000000c23d80 l     O .rodata	000000000000003e              sys_var_pluginvar::real_value_ptr(THD*, enum_var_type)::__PRETTY_FUNCTION__
0000000000c23dc0 l     O .rodata	0000000000000039              sys_var_pluginvar::do_check(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c23e00 l     O .rodata	000000000000003f              sys_var_pluginvar::session_update(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c23e40 l     O .rodata	000000000000003e              sys_var_pluginvar::global_update(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c23e80 l     O .rodata	0000000000000040              plugin_opt_set_limits(my_option*, st_mysql_sys_var const*)::__PRETTY_FUNCTION__
00000000006114e9 l     F .text	0000000000000bb0              construct_options(st_mem_root*, st_plugin_int*, my_option*)
000000000105dfe0 l     O .data.rel.ro	0000000000000010              plugin_dash.71757
0000000000612099 l     F .text	0000000000000155              construct_help_options(st_mem_root*, st_plugin_int*)
0000000000c23ee0 l     O .rodata	0000000000000041              test_plugin_options(st_mem_root*, st_plugin_int*, int*, char**)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_prepare.cc
0000000000c24e00 l     O .rodata	000000000000002f              base_ilist::move_elements_to(base_ilist*)::__PRETTY_FUNCTION__
0000000000c23f98 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c24d20 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c24ce0 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000c24ae0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c24aa0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c2406c l     O .rodata	0000000000000004              SRID_SIZE
0000000000c24070 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c24074 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c24078 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c2407c l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e000 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000612c68 l     F .text	000000000000006e              find_prepared_statement(THD*, unsigned long)
0000000000612cd6 l     F .text	00000000000001f1              send_prep_stmt(Prepared_statement*, unsigned int)
0000000000612ec7 l     F .text	0000000000000146              get_param_length(unsigned char**, unsigned long)
000000000061300d l     F .text	000000000000006d              set_param_tiny(Item_param*, unsigned char**, unsigned long)
000000000061307a l     F .text	0000000000000087              set_param_short(Item_param*, unsigned char**, unsigned long)
0000000000613101 l     F .text	00000000000000b4              set_param_int32(Item_param*, unsigned char**, unsigned long)
00000000006131b5 l     F .text	00000000000000ff              set_param_int64(Item_param*, unsigned char**, unsigned long)
00000000006132b4 l     F .text	0000000000000076              set_param_float(Item_param*, unsigned char**, unsigned long)
000000000061332a l     F .text	000000000000007c              set_param_double(Item_param*, unsigned char**, unsigned long)
00000000006133a6 l     F .text	000000000000005d              set_param_decimal(Item_param*, unsigned char**, unsigned long)
0000000000613403 l     F .text	00000000000001d0              set_param_time(Item_param*, unsigned char**, unsigned long)
00000000006135d3 l     F .text	000000000000019a              set_param_datetime(Item_param*, unsigned char**, unsigned long)
000000000061376d l     F .text	0000000000000107              set_param_date(Item_param*, unsigned char**, unsigned long)
0000000000613874 l     F .text	000000000000006f              set_param_str(Item_param*, unsigned char**, unsigned long)
00000000006138e3 l     F .text	0000000000000428              setup_one_conversion_function(THD*, Item_param*, unsigned char)
0000000000c24a20 l     O .rodata	000000000000003d              setup_one_conversion_function(THD*, Item_param*, unsigned char)::__PRETTY_FUNCTION__
0000000000613d0b l     F .text	00000000000003e0              insert_params_with_log(Prepared_statement*, unsigned char*, unsigned char*, unsigned char*, String*)
00000000006140eb l     F .text	00000000000001e8              insert_params(Prepared_statement*, unsigned char*, unsigned char*, unsigned char*, String*)
00000000006142d3 l     F .text	0000000000000198              setup_conversion_functions(Prepared_statement*, unsigned char**, unsigned char*)
000000000061446b l     F .text	000000000000006b              swap_parameter_array(Item_param**, Item_param**, unsigned int)
00000000006144d6 l     F .text	00000000000001a5              insert_params_from_vars(Prepared_statement*, List<st_mysql_lex_string>&, String*)
000000000061467b l     F .text	000000000000032e              insert_params_from_vars_with_log(Prepared_statement*, List<st_mysql_lex_string>&, String*)
00000000006149a9 l     F .text	00000000000002ed              mysql_test_insert(Prepared_statement*, TABLE_LIST*, List<Item>&, List<List<Item> >&, List<Item>&, List<Item>&, enum_duplicates)
0000000000614c96 l     F .text	000000000000032a              mysql_test_update(Prepared_statement*, TABLE_LIST*)
0000000000c24a60 l     O .rodata	0000000000000038              mysql_test_update(Prepared_statement*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000614fc0 l     F .text	0000000000000141              mysql_test_delete(Prepared_statement*, TABLE_LIST*)
0000000000615101 l     F .text	00000000000003e3              mysql_test_select(Prepared_statement*, TABLE_LIST*)
00000000006154e4 l     F .text	000000000000012b              mysql_test_do_fields(Prepared_statement*, TABLE_LIST*, List<Item>*)
000000000061560f l     F .text	0000000000000153              mysql_test_set_fields(Prepared_statement*, TABLE_LIST*, List<set_var_base>*)
0000000000615762 l     F .text	00000000000001b4              mysql_test_call_fields(Prepared_statement*, TABLE_LIST*, List<Item>*)
0000000000615916 l     F .text	0000000000000105              select_like_stmt_test(Prepared_statement*, int (*)(THD*), unsigned long)
0000000000615a1b l     F .text	00000000000000bf              select_like_stmt_test_with_open(Prepared_statement*, TABLE_LIST*, int (*)(THD*), unsigned long)
0000000000615ada l     F .text	00000000000001ec              mysql_test_create_table(Prepared_statement*)
0000000000615cc6 l     F .text	0000000000000138              mysql_test_create_view(Prepared_statement*)
0000000000615dfe l     F .text	0000000000000072              mysql_test_multiupdate(Prepared_statement*, TABLE_LIST*, bool)
0000000000615e70 l     F .text	0000000000000140              mysql_test_multidelete(Prepared_statement*, TABLE_LIST*)
0000000000615fb0 l     F .text	0000000000000079              mysql_insert_select_prepare_tester(THD*)
0000000000616029 l     F .text	00000000000000d3              mysql_test_insert_select(Prepared_statement*, TABLE_LIST*)
0000000000c24b20 l     O .rodata	0000000000000040              mysql_test_insert_select(Prepared_statement*, TABLE_LIST*)::__PRETTY_FUNCTION__
00000000006160fc l     F .text	0000000000000461              check_prepared_statement(Prepared_statement*)
000000000061655d l     F .text	0000000000000179              init_param_array(Prepared_statement*)
00000000006168ae l     F .text	00000000000002f8              get_dynamic_sql_string(LEX*, unsigned int*)
0000000000c24b60 l     O .rodata	0000000000000030              get_dynamic_sql_string(LEX*, unsigned int*)::__PRETTY_FUNCTION__
0000000000c24ba0 l     O .rodata	0000000000000028              reinit_stmt_before_use(THD*, LEX*)::__PRETTY_FUNCTION__
000000000061735c l     F .text	000000000000005d              reset_stmt_params(Prepared_statement*)
0000000000c24ca0 l     O .rodata	0000000000000024              mysqld_stmt_close(THD*, char*)::__PRETTY_FUNCTION__
0000000000c24d60 l     O .rodata	0000000000000034              Prepared_statement::prepare(char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000c24da0 l     O .rodata	0000000000000045              Prepared_statement::execute_loop(String*, bool, unsigned char*, unsigned char*)::__PRETTY_FUNCTION__
0000000000c24e40 l     O .rodata	0000000000000046              Prepared_statement::swap_prepared_statement(Prepared_statement*)::__PRETTY_FUNCTION__
0000000000c24ea0 l     O .rodata	0000000000000030              Prepared_statement::execute(String*, bool)::__PRETTY_FUNCTION__
0000000000c24ee0 l     O .rodata	0000000000000031              Ed_connection::store_result_set()::__PRETTY_FUNCTION__
0000000000c24f20 l     O .rodata	0000000000000032              Protocol_local::prepare_for_resend()::__PRETTY_FUNCTION__
0000000000c24f60 l     O .rodata	0000000000000049              Protocol_local::send_result_set_metadata(List<Item>*, unsigned int)::__PRETTY_FUNCTION__
0000000000c24fc0 l     O .rodata	0000000000000032              Protocol_local::send_eof(unsigned int, unsigned int)::__PRETTY_FUNCTION__
0000000000c24be0 l     O .rodata	00000000000000af              Mem_root_array<st_order*, true>::at(unsigned long)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_rename.cc
0000000000c25000 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c25008 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c2500c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c25010 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c25014 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c25018 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e060 l     O .data.rel.ro	0000000000000050              sp_data_access_name
000000000061cd8c l     F .text	00000000000000e4              rename_tables(THD*, TABLE_LIST*, bool)
000000000061c8f0 l     F .text	0000000000000045              reverse_table_list(TABLE_LIST*)
0000000000c250e0 l     O .rodata	000000000000003d              do_rename(THD*, TABLE_LIST*, char*, char*, char*, bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              debug_sync.cc
000000000061ce70 l     F .text	0000000000000071              inline_mysql_mutex_init
000000000061cee1 l     F .text	0000000000000080              inline_mysql_mutex_destroy
000000000061cf61 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000061d078 l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000061d0f5 l     F .text	0000000000000065              inline_mysql_cond_init
000000000061d15a l     F .text	000000000000006f              inline_mysql_cond_destroy
000000000061d1c9 l     F .text	0000000000000143              inline_mysql_cond_timedwait
000000000061d30c l     F .text	000000000000006c              inline_mysql_cond_broadcast
0000000000c25d10 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000c25200 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c25208 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c2520c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c25210 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c25214 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c25218 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e0c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000013735e0 l     O .bss	00000000000000e0              debug_sync_global
000000000061d378 l     F .text	000000000000003e              debug_sync_C_callback
00000000013736c0 l     O .bss	0000000000000004              key_debug_sync_globals_ds_mutex
00000000010dc6d0 l     O .data	0000000000000018              all_debug_sync_mutexes
00000000013736c4 l     O .bss	0000000000000004              key_debug_sync_globals_ds_cond
00000000010dc6f0 l     O .data	0000000000000018              all_debug_sync_conds
000000000061d3b6 l     F .text	0000000000000078              init_debug_sync_psi_keys()
000000000061d677 l     F .text	000000000000009e              debug_sync_emergency_disable()
0000000000c25bc0 l     O .rodata	0000000000000022              debug_sync_init_thread(THD*)::__PRETTY_FUNCTION__
0000000000c25c00 l     O .rodata	0000000000000021              debug_sync_end_thread(THD*)::__PRETTY_FUNCTION__
000000000061d9df l     F .text	00000000000000db              debug_sync_bmove_len(char*, char*, char const*, unsigned long)
0000000000c25c40 l     O .rodata	000000000000003e              debug_sync_bmove_len(char*, char*, char const*, unsigned long)::__PRETTY_FUNCTION__
000000000061daba l     F .text	00000000000002fa              debug_sync_action_string(char*, unsigned int, st_debug_sync_action*)
0000000000c25c80 l     O .rodata	0000000000000042              debug_sync_action_string(char*, unsigned int, st_debug_sync_action*)::__PRETTY_FUNCTION__
000000000061ddb4 l     F .text	0000000000000199              debug_sync_print_actions(THD*)
0000000000c25ce0 l     O .rodata	0000000000000024              debug_sync_print_actions(THD*)::__PRETTY_FUNCTION__
000000000061df4d l     F .text	00000000000000f6              debug_sync_qsort_cmp
0000000000c25d40 l     O .rodata	0000000000000033              debug_sync_qsort_cmp::__PRETTY_FUNCTION__
000000000061e043 l     F .text	00000000000001e8              debug_sync_find(st_debug_sync_action*, int, char const*, unsigned int)
0000000000c25d80 l     O .rodata	0000000000000055              debug_sync_find(st_debug_sync_action*, int, char const*, unsigned int)::__PRETTY_FUNCTION__
000000000061e22b l     F .text	0000000000000109              debug_sync_reset(THD*)
0000000000c25de0 l     O .rodata	000000000000001c              debug_sync_reset(THD*)::__PRETTY_FUNCTION__
000000000061e334 l     F .text	0000000000000259              debug_sync_remove_action(st_debug_sync_control*, st_debug_sync_action*)
0000000000c25e00 l     O .rodata	000000000000004d              debug_sync_remove_action(st_debug_sync_control*, st_debug_sync_action*)::__PRETTY_FUNCTION__
000000000061e58d l     F .text	00000000000004f9              debug_sync_get_action(THD*, char const*, unsigned int)
0000000000c25e60 l     O .rodata	0000000000000045              debug_sync_get_action(THD*, char const*, unsigned int)::__PRETTY_FUNCTION__
000000000061ea86 l     F .text	0000000000000310              debug_sync_set_action(THD*, st_debug_sync_action*)
0000000000c25ec0 l     O .rodata	0000000000000038              debug_sync_set_action(THD*, st_debug_sync_action*)::__PRETTY_FUNCTION__
000000000061ed96 l     F .text	000000000000024f              debug_sync_token(char**, unsigned int*, char*)
0000000000c25f00 l     O .rodata	000000000000002d              debug_sync_token(char**, unsigned int*, char*)::__PRETTY_FUNCTION__
000000000061efe5 l     F .text	00000000000000e4              debug_sync_number(unsigned long*, char*)
0000000000c25f40 l     O .rodata	0000000000000027              debug_sync_number(unsigned long*, char*)::__PRETTY_FUNCTION__
000000000061f0c9 l     F .text	00000000000007af              debug_sync_eval_action(THD*, char*)
0000000000c25f80 l     O .rodata	0000000000000029              debug_sync_eval_action(THD*, char*)::__PRETTY_FUNCTION__
00000000010dc6b0 l     O .data	0000000000000017              debug_sync_value_ptr(THD*)::on
000000000061fab5 l     F .text	00000000000008df              debug_sync_execute(THD*, st_debug_sync_action*)
0000000000c25fc0 l     O .rodata	0000000000000035              debug_sync_execute(THD*, st_debug_sync_action*)::__PRETTY_FUNCTION__
0000000000c26000 l     O .rodata	0000000000000013              debug_sync_execute(THD*, st_debug_sync_action*)::__FUNCTION__
0000000000c26020 l     O .rodata	000000000000002b              debug_sync(THD*, char const*, unsigned long)::__PRETTY_FUNCTION__
0000000000c26060 l     O .rodata	0000000000000036              debug_sync_set_action(THD*, char const*, unsigned long)::__PRETTY_FUNCTION__
000000000062066a l     F .text	0000000000000049              __static_initialization_and_destruction_0(int, int)
00000000006206b3 l     F .text	0000000000000015              _GLOBAL__sub_I_debug_sync.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_repl.cc
00000000006206ff l     F .text	0000000000000071              inline_mysql_mutex_init
0000000000620770 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000006207f0 l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000620907 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000620984 l     F .text	000000000000006c              inline_mysql_cond_broadcast
00000000006209f0 l     F .text	000000000000012e              inline_mysql_file_stat(unsigned int, char const*, unsigned int, char const*, stat*, int)
0000000000620b1e l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
0000000000620c48 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
0000000000620d48 l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
0000000000620ec4 l     F .text	000000000000011c              inline_mysql_file_seek(char const*, unsigned int, int, unsigned long long, int, int)
0000000000620fe0 l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
0000000000c260a0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c270a0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c26fe0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c27020 l     O .rodata	0000000000000025              Item_int::val_int()::__PRETTY_FUNCTION__
0000000000c27060 l     O .rodata	0000000000000024              Item_int::val_real()::__PRETTY_FUNCTION__
0000000000c270e0 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000c26134 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c26138 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c2613c l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c26140 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c26144 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e120 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c27120 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000c26f20 l     O .rodata	0000000000000048              THD::enter_cond(st_mysql_cond*, st_mysql_mutex*, char const*)::__PRETTY_FUNCTION__
00000000013736d4 l     O .bss	0000000000000004              binlog_dump_count
00000000006210ff l     F .text	0000000000000334              fake_rotate_event(st_net*, String*, char*, unsigned long long, char const**)
0000000000621433 l     F .text	00000000000000e0              reset_transmit_packet(THD*, unsigned short, unsigned long*, char const**)
0000000000621513 l     F .text	000000000000036e              send_file(THD*)
0000000000621de0 l     F .text	0000000000000087              get_heartbeat_period(THD*)
0000000000621e67 l     F .text	000000000000023e              send_heartbeat_event(st_net*, String*, event_coordinates const*)
0000000000c26ec0 l     O .rodata	0000000000000036              mysql_binlog_send(THD*, char*, unsigned long long, unsigned short)::__PRETTY_FUNCTION__
0000000000c26f00 l     O .rodata	0000000000000012              mysql_binlog_send(THD*, char*, unsigned long long, unsigned short)::__FUNCTION__
0000000000c26f68 l     O .rodata	000000000000000b              stop_slave(THD*, Master_info*, bool)::__FUNCTION__
0000000000c26f78 l     O .rodata	000000000000000e              change_master(THD*, Master_info*)::__FUNCTION__
0000000000c26fa0 l     O .rodata	0000000000000024              mysql_show_binlog_events(THD*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_select.cc
0000000000c29260 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
0000000000c29220 l     O .rodata	000000000000002f              base_ilist::move_elements_to(base_ilist*)::__PRETTY_FUNCTION__
0000000000626d52 l     F .text	0000000000000077              bitmap_set_bit
0000000000c28fa0 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
0000000000626dc9 l     F .text	0000000000000067              bitmap_is_set
0000000000c29060 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000626e30 l     F .text	000000000000007a              bitmap_cmp
0000000000c27240 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c29620 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c291a0 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000c295b0 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000c291c0 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000c29180 l     O .rodata	000000000000001e              TABLE::set_keyread(bool)::__PRETTY_FUNCTION__
0000000000626eaa l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
0000000000626edc l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000626ef6 l     F .text	0000000000000025              dbug_tmp_use_all_columns(TABLE*, st_bitmap*)
0000000000626f1b l     F .text	0000000000000026              dbug_tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000626f41 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000c28dc0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c28d80 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c273bc l     O .rodata	0000000000000004              SRID_SIZE
0000000000c273c0 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c273c4 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c273c8 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c273cc l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000c28e20 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
0000000000c29930 l     O .rodata	000000000000001b              Item_cond::add(Item*)::__PRETTY_FUNCTION__
0000000000c292e0 l     O .rodata	0000000000000029              Item_cond::add_at_head(List<Item>*)::__PRETTY_FUNCTION__
000000000105e180 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c28fe0 l     O .rodata	0000000000000021              LEX::is_single_level_stmt()::__PRETTY_FUNCTION__
0000000000626f71 l     F .text	00000000000000e1              my_count_bits
0000000000650054 l     F .text	0000000000000170              setup_new_fields(THD*, List<Item>&, List<Item>&, st_order*)
00000000006507ff l     F .text	0000000000000091              test_if_subpart(st_order*, st_order*)
000000000064af6b l     F .text	0000000000000265              test_if_ref(Item_field*, Item*)
0000000000628ae6 l     F .text	00000000000000c4              save_index_subquery_explain_info(st_join_table*, Item*)
0000000000c28d70 l     O .rodata	0000000000000009              JOIN::optimize()::__FUNCTION__
000000000063fc04 l     F .text	0000000000000849              simplify_joins(JOIN*, List<TABLE_LIST>*, Item*, bool)
000000000064044d l     F .text	00000000000000f3              build_bitmap_for_nested_joins(List<TABLE_LIST>*, unsigned int)
0000000000640836 l     F .text	00000000000001db              optimize_cond(JOIN*, Item*, List<TABLE_LIST>*, Item::cond_result*)
000000000064b1d0 l     F .text	00000000000004fb              make_cond_for_table(Item*, unsigned long long, unsigned long long)
0000000000650890 l     F .text	0000000000000233              get_sort_by_table(st_order*, st_order*, TABLE_LIST*)
000000000062f818 l     F .text	0000000000001c51              make_join_statistics(JOIN*, TABLE_LIST*, Item*, st_dynamic_array*)
0000000000640540 l     F .text	00000000000000ca              reset_nj_counters(List<TABLE_LIST>*)
00000000006395b1 l     F .text	0000000000000217              make_outerjoin_info(JOIN*)
000000000063e863 l     F .text	0000000000000445              substitute_for_best_equal_field(Item*, COND_EQUAL*, void*)
00000000006397c8 l     F .text	0000000000001721              make_join_select(JOIN*, SQL_SELECT*, Item*)
000000000063c3a2 l     F .text	0000000000000489              remove_const(JOIN*, st_order*, Item*, bool, bool*)
000000000064c1e2 l     F .text	00000000000000d1              find_field_in_order_list(Field*, void*)
000000000064c087 l     F .text	000000000000015b              list_contains_unique_index(TABLE*, bool (*)(Field*, void*), void*)
000000000064c2b3 l     F .text	00000000000000d8              find_field_in_item_list(Field*, void*)
000000000064c38b l     F .text	0000000000000d38              test_if_skip_sort_order(st_join_table*, st_order*, unsigned long long, bool, Bitmap<64u>*)
00000000006501c4 l     F .text	000000000000038e              create_distinct_group(THD*, Item**, st_order*, List<Item>&, List<Item>&, bool*)
0000000000650ac3 l     F .text	0000000000000261              calc_group_buffer(JOIN*, st_order*)
000000000063b041 l     F .text	0000000000000699              make_join_readinfo(JOIN*, unsigned long long)
000000000063f5ea l     F .text	000000000000011a              remove_additional_cond(Item*)
0000000000652931 l     F .text	000000000000030b              add_ref_to_table_cond(THD*, st_join_table*)
000000000064d0c3 l     F .text	0000000000000694              create_sort_index(THD*, JOIN*, st_order*, unsigned long long, unsigned long long, bool)
0000000000650dd8 l     F .text	000000000000009b              alloc_group_fields(JOIN*, st_order*)
0000000000652657 l     F .text	00000000000000db              prepare_sum_aggregators(Item_sum**, bool)
000000000065259f l     F .text	00000000000000b8              setup_sum_funcs(THD*, Item_sum**)
0000000000c28e00 l     O .rodata	0000000000000019              JOIN::restore_tmp()::__PRETTY_FUNCTION__
0000000000c28e19 l     O .rodata	0000000000000005              JOIN::exec()::__FUNCTION__
0000000000653d3a l     F .text	0000000000002532              select_describe(JOIN*, bool, bool, bool, char const*)
000000000063c918 l     F .text	0000000000000282              return_zero_rows(JOIN*, select_result*, TABLE_LIST*, List<Item>&, bool, unsigned long long, char const*, Item*)
0000000000646a49 l     F .text	00000000000005e9              do_select(JOIN*, List<Item>*, TABLE*, Procedure*)
0000000000651ccf l     F .text	000000000000072d              change_to_use_tmp_fields(THD*, Item**, List<Item>&, List<Item>&, unsigned int, List<Item>&)
00000000006523fc l     F .text	00000000000001a3              change_refs_to_tmp_fields(THD*, Item**, List<Item>&, List<Item>&, unsigned int, List<Item>&)
0000000000650d24 l     F .text	00000000000000b4              make_group_fields(JOIN*, JOIN*)
000000000064d862 l     F .text	0000000000000367              remove_duplicates(JOIN*, TABLE*, List<Item>&, Item*)
0000000000c28e48 l     O .rodata	000000000000000d              mysql_select(THD*, Item***, TABLE_LIST*, unsigned int, List<Item>&, Item*, unsigned int, st_order*, st_order*, Item*, st_order*, unsigned long long, select_result*, st_select_lex_unit*, st_select_lex*)::__FUNCTION__
000000000062f66a l     F .text	00000000000001ae              get_quick_record_count(THD*, SQL_SELECT*, TABLE*, Bitmap<64u> const*, unsigned long long)
00000000006345ef l     F .text	000000000000012c              set_position(JOIN*, unsigned int, st_join_table*, keyuse_t*)
000000000063378e l     F .text	000000000000072a              update_ref_and_keys(THD*, st_dynamic_array*, st_join_table*, unsigned int, Item*, COND_EQUAL*, unsigned long long, st_select_lex*, st_sargable_param**)
0000000000647e0f l     F .text	00000000000003ad              join_read_const_table(st_join_table*, st_position*)
00000000006380b6 l     F .text	0000000000000994              create_ref_for_key(JOIN*, st_join_table*, keyuse_t*, unsigned long long)
00000000006342ea l     F .text	0000000000000305              add_group_and_distinct_keys(JOIN*, st_join_table*)
0000000000633eb8 l     F .text	0000000000000124              optimize_keyuse(JOIN*, st_dynamic_array*)
0000000000636223 l     F .text	0000000000000226              choose_plan(JOIN*, unsigned long long)
0000000000637d4d l     F .text	0000000000000369              get_best_combination(JOIN*)
0000000000631469 l     F .text	0000000000000460              merge_key_fields(key_field_t*, key_field_t*, key_field_t*, unsigned int)
00000000006318c9 l     F .text	00000000000005fa              add_key_field(key_field_t**, unsigned int, Item_func*, Field*, bool, Item**, unsigned int, unsigned long long, st_sargable_param**)
0000000000c28e60 l     O .rodata	000000000000006b              add_key_field(key_field_t**, unsigned int, Item_func*, Field*, bool, Item**, unsigned int, unsigned long long, st_sargable_param**)::__PRETTY_FUNCTION__
0000000000631ec3 l     F .text	0000000000000148              add_key_equal_fields(key_field_t**, unsigned int, Item_func*, Item_field*, bool, Item**, unsigned int, unsigned long long, st_sargable_param**)
000000000063200b l     F .text	0000000000000090              is_local_field(Item*)
000000000063209b l     F .text	0000000000000dda              add_key_fields(JOIN*, key_field_t**, unsigned int*, Item*, unsigned long long, st_sargable_param**)
0000000000c28ee0 l     O .rodata	0000000000000053              add_key_fields(JOIN*, key_field_t**, unsigned int*, Item*, unsigned long long, st_sargable_param**)::__PRETTY_FUNCTION__
0000000000632e75 l     F .text	000000000000002a              max_part_bit(unsigned long)
0000000000632e9f l     F .text	0000000000000239              add_key_part(st_dynamic_array*, key_field_t*)
00000000006330d8 l     F .text	000000000000045b              add_ft_keys(st_dynamic_array*, st_join_table*, Item*, unsigned long long)
0000000000633533 l     F .text	0000000000000124              sort_keyuse(keyuse_t*, keyuse_t*)
0000000000633657 l     F .text	0000000000000137              add_key_fields_for_nj(JOIN*, TABLE_LIST*, key_field_t**, unsigned int*, st_sargable_param**)
0000000000c28f40 l     O .rodata	0000000000000055              add_key_fields_for_nj(JOIN*, TABLE_LIST*, key_field_t**, unsigned int*, st_sargable_param**)::__PRETTY_FUNCTION__
000000000063471b l     F .text	0000000000001b08              best_access_path(JOIN*, st_join_table*, THD*, unsigned long long, unsigned int, double, double)
0000000000637c87 l     F .text	00000000000000c6              prev_record_reads(JOIN*, unsigned int, unsigned long long)
0000000000637be1 l     F .text	00000000000000a6              cache_record_length(JOIN*, unsigned int)
000000000063652b l     F .text	000000000000009b              join_tab_cmp_straight
0000000000636449 l     F .text	00000000000000e2              join_tab_cmp
0000000000636608 l     F .text	00000000000001d7              optimize_straight_join(JOIN*, unsigned long long)
000000000063747a l     F .text	00000000000005eb              find_best(JOIN*, unsigned long long, unsigned int, double, double)
00000000006365c6 l     F .text	0000000000000042              determine_search_depth(JOIN*)
00000000006367df l     F .text	00000000000004a6              greedy_search(JOIN*, unsigned long long, unsigned int, unsigned int)
0000000000636c85 l     F .text	00000000000007f5              best_extension_by_limited_search(JOIN*, unsigned long long, unsigned int, double, double, unsigned int, unsigned int)
0000000000c29020 l     O .rodata	0000000000000031              greedy_search(JOIN*, unsigned long long, unsigned int, unsigned int)::__PRETTY_FUNCTION__
000000000064060a l     F .text	000000000000011c              check_interleaving_with_nj(st_join_table*)
0000000000640726 l     F .text	0000000000000110              restore_prev_nj_state(st_join_table*)
0000000000637a65 l     F .text	000000000000017c              calc_used_field_length(THD*, st_join_table*)
000000000063c147 l     F .text	000000000000012b              update_depend_map(JOIN*)
0000000000c290a0 l     O .rodata	000000000000003e              create_ref_for_key(JOIN*, st_join_table*, keyuse_t*, unsigned long long)::__PRETTY_FUNCTION__
0000000000638a4a l     F .text	0000000000000371              get_store_key(THD*, keyuse_t*, unsigned long long, st_key_part_info*, unsigned char*, unsigned int)
0000000000648df4 l     F .text	00000000000000d0              join_init_read_record(st_join_table*)
000000000063921c l     F .text	00000000000002b0              add_not_null_conds(JOIN*)
0000000000c290e0 l     O .rodata	000000000000001f              add_not_null_conds(JOIN*)::__PRETTY_FUNCTION__
00000000006394cc l     F .text	00000000000000e5              add_found_match_trig_cond(st_join_table*, Item*, st_join_table*)
0000000000c29100 l     O .rodata	000000000000003d              add_found_match_trig_cond(st_join_table*, Item*, st_join_table*)::__PRETTY_FUNCTION__
0000000000c29140 l     O .rodata	0000000000000031              make_join_select(JOIN*, SQL_SELECT*, Item*)::__PRETTY_FUNCTION__
000000000063af27 l     F .text	000000000000011a              pick_table_access_method(st_join_table*)
000000000064881d l     F .text	00000000000001f6              join_read_always_key(st_join_table*)
0000000000648b72 l     F .text	00000000000000a7              join_read_next_same(READ_RECORD*)
0000000000648347 l     F .text	0000000000000221              join_read_const(st_join_table*)
0000000000648b63 l     F .text	000000000000000f              join_no_more_records(READ_RECORD*)
0000000000648568 l     F .text	000000000000024d              join_read_key(st_join_table*)
00000000006492cf l     F .text	00000000000000f2              join_ft_read_first(st_join_table*)
00000000006493c1 l     F .text	0000000000000066              join_ft_read_next(READ_RECORD*)
00000000006481bc l     F .text	000000000000018b              join_read_system(st_join_table*)
00000000006487b5 l     F .text	0000000000000068              join_read_key_unlock_row(st_join_table*)
000000000064e943 l     F .text	0000000000000551              join_init_cache(THD*, st_join_table*, unsigned int)
0000000000648cdb l     F .text	0000000000000037              join_init_quick_read_record(st_join_table*)
0000000000648ec4 l     F .text	00000000000001b1              join_read_first(st_join_table*)
000000000063bdfe l     F .text	0000000000000283              eq_ref_table(JOIN*, st_order*, st_join_table*)
000000000063c081 l     F .text	00000000000000c6              only_eq_ref_tables(JOIN*, st_order*, unsigned long long)
000000000063c272 l     F .text	0000000000000130              update_depend_map(JOIN*, st_order*)
0000000000c291e0 l     O .rodata	000000000000002a              simple_remove_const(st_order*, Item*)::__PRETTY_FUNCTION__
000000000063cb9a l     F .text	0000000000000048              clear_tables(JOIN*)
000000000063cca6 l     F .text	0000000000000857              check_simple_equality(Item*, Item*, Item*, COND_EQUAL*)
000000000063d4fd l     F .text	00000000000001f1              check_row_equality(THD*, Item*, Item_row*, COND_EQUAL*, List<Item>*)
000000000063d6ee l     F .text	0000000000000135              check_equality(THD*, Item*, COND_EQUAL*, List<Item>*)
000000000063d823 l     F .text	000000000000083b              build_equal_items_for_cond(THD*, Item*, COND_EQUAL*)
000000000063e05e l     F .text	0000000000000251              build_equal_items(THD*, Item*, COND_EQUAL*, List<TABLE_LIST>*, COND_EQUAL**)
000000000063e2af l     F .text	0000000000000130              compare_fields_by_table_order(Item_field*, Item_field*, void*)
000000000063e3df l     F .text	0000000000000484              eliminate_item_equal(Item*, COND_EQUAL*, Item_equal*)
0000000000c292a0 l     O .rodata	000000000000003c              eliminate_item_equal(Item*, COND_EQUAL*, Item_equal*)::__PRETTY_FUNCTION__
000000000063eca8 l     F .text	0000000000000364              update_const_equal_items(Item*, st_join_table*)
000000000063f00c l     F .text	00000000000005de              change_cond_ref_to_const(THD*, I_List<COND_CMP>*, Item*, Item*, Item*, Item*)
000000000063f704 l     F .text	0000000000000500              propagate_cond_constants(THD*, I_List<COND_CMP>*, Item*, Item*)
0000000000c29320 l     O .rodata	000000000000003c              simplify_joins(JOIN*, List<TABLE_LIST>*, Item*, bool)::__PRETTY_FUNCTION__
0000000000c29360 l     O .rodata	0000000000000026              restore_prev_nj_state(st_join_table*)::__PRETTY_FUNCTION__
0000000000640a11 l     F .text	00000000000006e7              internal_remove_eq_conds(THD*, Item*, Item::cond_result*)
000000000064131b l     F .text	00000000000000c5              test_if_equality_guarantees_uniqueness(Item*, Item*)
00000000006413e0 l     F .text	00000000000000c0              equal(Item*, Item*, Field*)
0000000000c293a0 l     O .rodata	0000000000000021              equal(Item*, Item*, Field*)::__PRETTY_FUNCTION__
0000000000c293e0 l     O .rodata	000000000000003d              const_expression_in_where(Item*, Item*, Field*, Item**)::__PRETTY_FUNCTION__
0000000000641a07 l     F .text	00000000000003ef              create_tmp_field_from_item(THD*, Item*, TABLE*, Item***, bool, unsigned int)
0000000000c29420 l     O .rodata	000000000000004c              create_tmp_field_from_item(THD*, Item*, TABLE*, Item***, bool, unsigned int)::__PRETTY_FUNCTION__
0000000000c29480 l     O .rodata	0000000000000072              create_tmp_field(THD*, TABLE*, Item*, Item::Type, Item***, Field**, Field**, bool, bool, bool, bool, unsigned int)::__PRETTY_FUNCTION__
0000000000c29500 l     O .rodata	0000000000000072              create_tmp_table(THD*, TMP_TABLE_PARAM*, List<Item>&, st_order*, bool, bool, unsigned long long, unsigned long long, char const*)::__PRETTY_FUNCTION__
000000000064568d l     F .text	00000000000006fc              create_myisam_tmp_table(TABLE*, TMP_TABLE_PARAM*, unsigned long long, char)
00000000006455dd l     F .text	00000000000000b0              open_tmp_table(TABLE*)
0000000000c29578 l     O .rodata	000000000000000f              free_tmp_table(THD*, TABLE*)::__FUNCTION__
0000000000c29590 l     O .rodata	0000000000000018              create_myisam_from_heap(THD*, TABLE*, TMP_TABLE_PARAM*, int, bool)::__FUNCTION__
000000000064a2fb l     F .text	000000000000049b              end_update(JOIN*, st_join_table*, bool)
000000000064a796 l     F .text	000000000000031f              end_unique_update(JOIN*, st_join_table*, bool)
000000000064aab5 l     F .text	00000000000004b6              end_write_group(JOIN*, st_join_table*, bool)
000000000064a007 l     F .text	00000000000002f4              end_write(JOIN*, st_join_table*, bool)
00000000006499e3 l     F .text	0000000000000624              end_send_group(JOIN*, st_join_table*, bool)
00000000006494f0 l     F .text	00000000000004f3              end_send(JOIN*, st_join_table*, bool)
0000000000c295e0 l     O .rodata	0000000000000036              do_select(JOIN*, List<Item>*, TABLE*, Procedure*)::__PRETTY_FUNCTION__
00000000006478db l     F .text	00000000000003e4              flush_cached_records(JOIN*, st_join_table*, bool)
0000000000648d63 l     F .text	0000000000000091              test_if_quick_select(st_join_table*)
000000000064ef14 l     F .text	0000000000000359              store_record_in_cache(st_join_cache*)
00000000006472dd l     F .text	0000000000000421              evaluate_join_record(JOIN*, st_join_table*, int)
00000000006476fe l     F .text	00000000000001dd              evaluate_null_complemented_join_record(JOIN*, st_join_table*)
0000000000c29660 l     O .rodata	0000000000000043              evaluate_join_record(JOIN*, st_join_table*, int)::__PRETTY_FUNCTION__
000000000064f292 l     F .text	0000000000000031              reset_cache_write(st_join_cache*)
000000000064f26d l     F .text	0000000000000025              reset_cache_read(st_join_cache*)
000000000064f2c3 l     F .text	0000000000000217              read_cached_record(st_join_table*)
000000000064f4da l     F .text	00000000000000ed              cmp_buffer_with_ref(st_join_table*)
0000000000c296b0 l     O .rodata	000000000000001d              join_read_key(st_join_table*)::__PRETTY_FUNCTION__
0000000000c296e0 l     O .rodata	000000000000002e              join_read_key_unlock_row(st_join_table*)::__PRETTY_FUNCTION__
0000000000648a13 l     F .text	0000000000000150              join_read_last_key(st_join_table*)
0000000000648c19 l     F .text	00000000000000c2              join_read_prev_same(READ_RECORD*)
0000000000649075 l     F .text	0000000000000063              join_read_next(READ_RECORD*)
00000000006490d8 l     F .text	0000000000000194              join_read_last(st_join_table*)
000000000064926c l     F .text	0000000000000063              join_read_prev(READ_RECORD*)
0000000000650e73 l     F .text	00000000000000f6              test_if_group_changed(List<Cached_item>&)
0000000000652810 l     F .text	000000000000006f              init_sum_functions(Item_sum**, Item_sum**)
000000000065287f l     F .text	0000000000000048              update_sum_func(Item_sum**)
000000000065277b l     F .text	000000000000004d              update_tmptable_sum_func(Item_sum**, TABLE*)
0000000000652732 l     F .text	0000000000000049              init_tmptable_sum_functions(Item_sum**)
00000000006527c8 l     F .text	0000000000000048              copy_sum_funcs(Item_sum**, Item_sum**)
000000000064b6cb l     F .text	000000000000010f              part_of_refkey(TABLE*, Field*)
000000000064b7da l     F .text	000000000000056b              test_if_order_by_key(st_order*, TABLE*, unsigned int, unsigned int*)
000000000064bee0 l     F .text	00000000000001a7              test_if_subkey(st_order*, TABLE*, unsigned int, unsigned int, Bitmap<64u> const*)
0000000000c29720 l     O .rodata	0000000000000049              test_if_skip_sort_order(st_join_table*, st_order*, unsigned long long, bool, Bitmap<64u>*)::__PRETTY_FUNCTION__
00000000006578ec l     F .text	0000000000000b97              test_if_cheaper_ordering(st_join_table const*, st_order*, TABLE*, Bitmap<64u>, int, unsigned long long, int*, int*, unsigned long long*, unsigned int*, unsigned int*)
0000000000c29780 l     O .rodata	0000000000000043              create_sort_index(THD*, JOIN*, st_order*, unsigned long long, unsigned long long, bool)::__PRETTY_FUNCTION__
000000000064d757 l     F .text	0000000000000068              compare_record(TABLE*, Field**)
000000000064d7bf l     F .text	0000000000000051              copy_blobs(Field**)
000000000064d810 l     F .text	0000000000000052              free_blobs(Field**)
000000000064dfb6 l     F .text	0000000000000642              remove_dup_with_hash_index(THD*, TABLE*, unsigned int, Field**, unsigned long, Item*)
000000000064dbc9 l     F .text	00000000000003ed              remove_dup_with_compare(THD*, TABLE*, Field**, unsigned long, Item*)
0000000000c297e0 l     O .rodata	000000000000004a              remove_dup_with_hash_index(THD*, TABLE*, unsigned int, Field**, unsigned long, Item*)::__PRETTY_FUNCTION__
0000000000c29840 l     O .rodata	000000000000003e              make_unireg_sortorder(st_order*, unsigned int*, st_sort_field*)::__PRETTY_FUNCTION__
000000000064ee94 l     F .text	0000000000000080              used_blob_length(st_cache_field**)
000000000064f685 l     F .text	000000000000057d              find_order_in_list(THD*, Item**, TABLE_LIST*, st_order*, List<Item>&, List<Item>&, bool)
0000000000c29880 l     O .rodata	0000000000000026              calc_group_buffer(JOIN*, st_order*)::__PRETTY_FUNCTION__
0000000000c298c0 l     O .rodata	0000000000000064              setup_copy_fields(THD*, TMP_TABLE_PARAM*, Item**, List<Item>&, List<Item>&, unsigned int, List<Item>&)::__PRETTY_FUNCTION__
0000000000652c84 l     F .text	000000000000023e              change_group_ref(THD*, Item_func*, st_order*, bool*)
0000000000656600 l     F .text	0000000000000341              print_join(THD*, String*, List<TABLE_LIST>*, enum_query_type)
0000000000c29960 l     O .rodata	0000000000000043              print_join(THD*, String*, List<TABLE_LIST>*, enum_query_type)::__PRETTY_FUNCTION__
0000000000c299c0 l     O .rodata	000000000000003a              st_select_lex::print(THD*, String*, enum_query_type)::__PRETTY_FUNCTION__
0000000000c29a00 l     O .rodata	000000000000007a              test_if_cheaper_ordering(st_join_table const*, st_order*, TABLE*, Bitmap<64u>, int, unsigned long long, int*, int*, unsigned long long*, unsigned int*, unsigned int*)::__PRETTY_FUNCTION__
0000000000c29a80 l     O .rodata	000000000000004d              get_index_for_order(st_order*, TABLE*, SQL_SELECT*, unsigned long long, bool*, bool*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_show.cc
000000000065cc16 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000065cd2d l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000065cdaa l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
000000000065ceb5 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000c2d820 l     O .rodata	000000000000002f              base_ilist::move_elements_to(base_ilist*)::__PRETTY_FUNCTION__
000000000065cf21 l     F .text	0000000000000067              bitmap_is_set
0000000000c2db40 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000c2d780 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
000000000065cf88 l     F .text	000000000000012e              inline_mysql_file_stat(unsigned int, char const*, unsigned int, char const*, stat*, int)
0000000000c29c60 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c2dce0 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c2dd10 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
000000000065d0b6 l     F .text	0000000000000031              ha_resolve_storage_engine_name(handlerton const*)
000000000065d0e7 l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
000000000065d119 l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000c2dca0 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c2daa0 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000c2de80 l     O .rodata	0000000000000033              Diagnostics_area::get_sqlstate() const::__PRETTY_FUNCTION__
0000000000c2d8e0 l     O .rodata	0000000000000037              CSET_STRING::CSET_STRING(char*, unsigned long, charset_info_st*)::__PRETTY_FUNCTION__
000000000065d133 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000c2d740 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c2d6c0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c2d860 l     O .rodata	0000000000000025              Item_int::val_int()::__PRETTY_FUNCTION__
0000000000c2d8a0 l     O .rodata	0000000000000024              Item_int::val_real()::__PRETTY_FUNCTION__
0000000000c2d700 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000c29e24 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c29e28 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c29e2c l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c29e30 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c29e34 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000c2d9e0 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
000000000105e1e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c29ec4 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
00000000010dcfa0 l     O .data	0000000000000070              grant_names
00000000010dd020 l     O .data	0000000000000020              grant_types
000000000065d163 l     F .text	0000000000000045              make_version_string(char*, int, unsigned int)
000000000065d1a8 l     F .text	0000000000000729              show_plugins(THD*, st_plugin_int**, void*)
0000000000c2d680 l     O .rodata	000000000000002e              show_plugins(THD*, st_plugin_int**, void*)::__PRETTY_FUNCTION__
00000000010dd040 l     O .data	0000000000000300              sys_privileges
000000000065fac6 l     F .text	00000000000000c4              require_quotes(char const*, unsigned int)
000000000065fecb l     F .text	00000000000000b0              append_directory(THD*, String*, char const*, char const*)
000000000065ff7b l     F .text	0000000000000452              get_field_default_value(THD*, Field*, Field*, String*, bool)
0000000000661d6c l     F .text	0000000000000257              store_key_options(THD*, String*, TABLE*, st_key*)
0000000000c2d7a0 l     O .rodata	0000000000000034              store_key_options(THD*, String*, TABLE*, st_key*)::__PRETTY_FUNCTION__
000000000066205b l     F .text	00000000000000c0              append_algorithm(TABLE_LIST*, String*)
0000000000c2d7e0 l     O .rodata	000000000000002c              append_algorithm(TABLE_LIST*, String*)::__PRETTY_FUNCTION__
00000000006623fd l     F .text	00000000000000b6              thread_state_info(THD*)
00000000013736e0 l     O .bss	0000000000000018              all_status_vars
00000000013736f8 l     O .bss	0000000000000001              status_vars_inited
0000000000663af8 l     F .text	000000000000002b              show_var_cmp
0000000000663b23 l     F .text	00000000000000f9              shrink_var_array(st_dynamic_array*)
0000000000c2d920 l     O .rodata	0000000000000039              get_status_var(THD*, st_mysql_show_var*, char const*, char*)::__PRETTY_FUNCTION__
0000000000664133 l     F .text	00000000000009c9              show_status_array(THD*, char const*, st_mysql_show_var*, enum_var_type, system_status_var*, char const*, TABLE*, bool, Item*)
000000000066574c l     F .text	00000000000002a9              make_cond_for_info_schema(Item*, TABLE_LIST*)
0000000000c2d960 l     O .rodata	000000000000007a              show_status_array(THD*, char const*, st_mysql_show_var*, enum_var_type, system_status_var*, char const*, TABLE*, bool, Item*)::__PRETTY_FUNCTION__
0000000000664c79 l     F .text	000000000000010e              make_table_list(THD*, st_select_lex*, st_mysql_lex_string*, st_mysql_lex_string*)
0000000000665e5f l     F .text	00000000000001e1              add_schema_table(THD*, st_plugin_int**, void*)
0000000000666223 l     F .text	0000000000000301              make_table_name_list(THD*, List<st_mysql_lex_string>*, LEX*, st_lookup_field_values*, bool, st_mysql_lex_string*, st_mem_root*)
0000000000666524 l     F .text	0000000000000514              fill_schema_table_by_open(THD*, bool, TABLE*, st_schema_table*, st_mysql_lex_string*, st_mysql_lex_string*, Open_tables_backup*, bool)
0000000000c2da20 l     O .rodata	000000000000007a              fill_schema_table_by_open(THD*, bool, TABLE*, st_schema_table*, st_mysql_lex_string*, st_mysql_lex_string*, Open_tables_backup*, bool)::__PRETTY_FUNCTION__
0000000000666a38 l     F .text	00000000000002c9              fill_schema_table_names(THD*, TABLE*, st_mysql_lex_string*, st_mysql_lex_string*, bool, bool)
0000000000c2dae0 l     O .rodata	0000000000000050              fill_schema_table_names(THD*, TABLE*, st_mysql_lex_string*, st_mysql_lex_string*, bool, bool)::__PRETTY_FUNCTION__
0000000000666e43 l     F .text	00000000000000ac              try_acquire_high_prio_shared_mdl_lock(THD*, TABLE_LIST*, bool)
0000000000666eef l     F .text	000000000000077a              fill_schema_table_from_frm(THD*, TABLE_LIST*, st_schema_table*, st_mysql_lex_string*, st_mysql_lex_string*, enum_schema_tables, Open_tables_backup*, bool)
0000000000c2db80 l     O .rodata	000000000000008d              fill_schema_table_from_frm(THD*, TABLE_LIST*, st_schema_table*, st_mysql_lex_string*, st_mysql_lex_string*, enum_schema_tables, Open_tables_backup*, bool)::__PRETTY_FUNCTION__
0000000000c2dc20 l     O .rodata	000000000000002d              get_all_tables(THD*, TABLE_LIST*, Item*)::__PRETTY_FUNCTION__
0000000000668392 l     F .text	0000000000000025              fill_schema_schemata(THD*, TABLE_LIST*, Item*)::free_tmp_mem_root::free_tmp_mem_root()
0000000000668392 l     F .text	0000000000000025              fill_schema_schemata(THD*, TABLE_LIST*, Item*)::free_tmp_mem_root::free_tmp_mem_root()
00000000006683b8 l     F .text	0000000000000020              fill_schema_schemata(THD*, TABLE_LIST*, Item*)::free_tmp_mem_root::~free_tmp_mem_root()
00000000006683b8 l     F .text	0000000000000020              fill_schema_schemata(THD*, TABLE_LIST*, Item*)::free_tmp_mem_root::~free_tmp_mem_root()
0000000000c2dc60 l     O .rodata	0000000000000033              fill_schema_schemata(THD*, TABLE_LIST*, Item*)::__PRETTY_FUNCTION__
00000000006688c0 l     F .text	0000000000001352              get_schema_tables_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)
000000000066a5ab l     F .text	0000000000000ac3              get_schema_column_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)
000000000066b32c l     F .text	0000000000000732              iter_schema_engines(THD*, st_plugin_int**, void*)
000000000066c13a l     F .text	00000000000000f3              copy_field_as_string(Field*, Field*)
000000000066e1db l     F .text	0000000000000aa8              get_schema_stat_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)
0000000000c2dd40 l     O .rodata	0000000000000056              get_schema_stat_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)::__PRETTY_FUNCTION__
000000000066ec83 l     F .text	0000000000000a39              get_schema_views_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)
000000000066f8a4 l     F .text	0000000000000478              get_schema_constraints_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)
000000000066fd1c l     F .text	00000000000005c2              store_trigger(THD*, TABLE*, st_mysql_lex_string*, st_mysql_lex_string*, st_mysql_lex_string*, trg_event_type, trg_action_time_type, st_mysql_lex_string*, unsigned long, st_mysql_lex_string*, st_mysql_lex_string*, st_mysql_lex_string*, st_mysql_lex_string*)
00000000006702de l     F .text	000000000000030f              get_schema_triggers_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)
000000000067080f l     F .text	0000000000000761              get_schema_key_column_usage_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)
0000000000670f70 l     F .text	00000000000000d4              collect_partition_expr(THD*, List<char>&, String*)
0000000000677a9a l     F .text	0000000000000305              get_cs_converted_string_value(THD*, String*, String*, charset_info_st*, bool)
0000000000671110 l     F .text	00000000000007e4              store_schema_partitions_record(THD*, TABLE*, TABLE*, partition_element*, handler*, unsigned int)
00000000006718f4 l     F .text	0000000000000358              get_partition_column_description(THD*, partition_info*, p_elem_val*, String&)
0000000000671c4c l     F .text	0000000000001209              get_schema_partitions_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)
0000000000c2dda0 l     O .rodata	000000000000005c              get_schema_partitions_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)::__PRETTY_FUNCTION__
0000000000c2de00 l     O .rodata	0000000000000035              copy_event_to_schema_table(THD*, TABLE*, TABLE*)::__PRETTY_FUNCTION__
00000000006744e4 l     F .text	00000000000006a5              get_referential_constraints_record(THD*, TABLE_LIST*, TABLE*, bool, st_mysql_lex_string*, st_mysql_lex_string*)
0000000000674b89 l     F .text	00000000000000ec              find_schema_table_in_plugin(THD*, st_plugin_int**, void*)
0000000000c2de40 l     O .rodata	000000000000002e              create_schema_table(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000676784 l     F .text	0000000000000229              do_fill_table(THD*, TABLE_LIST*, st_join_table*)
0000000000676d51 l     F .text	0000000000000094              run_hton_fill_schema_table(THD*, st_plugin_int**, void*)
00000000006771dc l     F .text	000000000000046b              show_create_trigger_impl(THD*, Table_triggers_list*, int)
0000000000677647 l     F .text	00000000000001f7              get_trigger_table(THD*, sp_name const*)
0000000001373700 l     O .bss	0000000000000008              is_internal_schema_access
0000000000677d9f l     F .text	0000000000000049              __static_initialization_and_destruction_0(int, int)
0000000000677de8 l     F .text	0000000000000015              _GLOBAL__sub_I_sql_show.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_state.c
0000000000000000 l    df *ABS*	0000000000000000              sql_string.cc
0000000000c2e0e0 l     O .rodata	0000000000000020              String::real_alloc(unsigned int)::__PRETTY_FUNCTION__
0000000000c2e100 l     O .rodata	000000000000001d              String::realloc(unsigned int)::__PRETTY_FUNCTION__
0000000000c2e120 l     O .rodata	0000000000000046              String::copy_aligned(char const*, unsigned int, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c2e180 l     O .rodata	000000000000004c              String::copy(char const*, unsigned int, charset_info_st*, charset_info_st*, unsigned int*)::__PRETTY_FUNCTION__
0000000000c2e1e0 l     O .rodata	0000000000000038              String::append(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
000000000067aa08 l     F .text	000000000000016a              copy_and_convert_extended(char*, unsigned int, charset_info_st*, char const*, unsigned int, charset_info_st*, unsigned int*)
0000000000c2e220 l     O .rodata	0000000000000055              convert_to_printable(char*, unsigned long, char const*, unsigned long, charset_info_st*, unsigned long)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_table.cc
000000000067b880 l     F .text	0000000000000071              inline_mysql_mutex_init
000000000067b8f1 l     F .text	0000000000000080              inline_mysql_mutex_destroy
000000000067b971 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000067ba88 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000c30060 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
000000000067bb05 l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
000000000067bc30 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
000000000067bd5a l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
000000000067be5a l     F .text	0000000000000176              inline_mysql_file_pread(char const*, unsigned int, int, unsigned char*, unsigned long, unsigned long long, int)
000000000067bfd0 l     F .text	0000000000000176              inline_mysql_file_pwrite(char const*, unsigned int, int, unsigned char const*, unsigned long, unsigned long long, int)
000000000067c146 l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
000000000067c265 l     F .text	000000000000012e              inline_mysql_file_rename(unsigned int, char const*, unsigned int, char const*, char const*, int)
000000000067c393 l     F .text	0000000000000107              inline_mysql_file_sync(char const*, unsigned int, int, int)
0000000000c303c0 l     O .rodata	000000000000002a              MDL_request::set_type(enum_mdl_type)::__PRETTY_FUNCTION__
0000000000c2e360 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c30620 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000c30640 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
000000000067c49a l     F .text	000000000000001f              ha_legacy_type(handlerton const*)
000000000067c4b9 l     F .text	0000000000000031              ha_resolve_storage_engine_name(handlerton const*)
000000000067c4ea l     F .text	0000000000000031              ha_check_storage_engine_flag(handlerton const*, unsigned int)
0000000000c305e0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c30560 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c305a0 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000c2e464 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c2e468 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c2e46c l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c2e470 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c2e474 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e240 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c30160 l     O .rodata	0000000000000054              Query_tables_list::set_stmt_unsafe(Query_tables_list::enum_binlog_stmt_unsafe)::__PRETTY_FUNCTION__
0000000000c30020 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
000000000067c51b l     F .text	0000000000000426              add_identifier(THD*, char*, char const*, char const*, unsigned int)
000000000067dab5 l     F .text	0000000000000103              read_ddl_log_file_entry(unsigned char*, unsigned int, unsigned int)
0000000000c2fd20 l     O .rodata	0000000000000031              read_ddl_log_file_entry(unsigned char*, unsigned int, unsigned int)::__PRETTY_FUNCTION__
000000000067dbb8 l     F .text	0000000000000103              write_ddl_log_file_entry(unsigned char*, unsigned int, unsigned int)
0000000000c2fd60 l     O .rodata	0000000000000032              write_ddl_log_file_entry(unsigned char*, unsigned int, unsigned int)::__PRETTY_FUNCTION__
000000000067dcbb l     F .text	0000000000000216              write_ddl_log_header()
0000000000c2fda0 l     O .rodata	000000000000001c              write_ddl_log_header()::__PRETTY_FUNCTION__
000000000067ded1 l     F .text	000000000000003e              create_ddl_log_file_name(char*)
000000000067df0f l     F .text	00000000000002e6              read_ddl_log_header()
0000000000c2fdc0 l     O .rodata	000000000000001b              read_ddl_log_header()::__PRETTY_FUNCTION__
000000000067e1f5 l     F .text	0000000000000156              set_ddl_log_entry_from_buf(unsigned int, unsigned char*, st_ddl_log_entry*)
000000000067e34b l     F .text	00000000000001a3              init_ddl_log()
000000000067e4ee l     F .text	000000000000060f              execute_ddl_log_action(THD*, st_ddl_log_entry*)
0000000000c2fde0 l     O .rodata	0000000000000031              execute_ddl_log_action(THD*, st_ddl_log_entry*)::__PRETTY_FUNCTION__
000000000067eafd l     F .text	00000000000001ec              get_free_ddl_log_entry(st_ddl_log_memory_entry**, bool*)
0000000000c2fe20 l     O .rodata	000000000000003b              get_free_ddl_log_entry(st_ddl_log_memory_entry**, bool*)::__PRETTY_FUNCTION__
0000000000c2fe60 l     O .rodata	0000000000000041              write_ddl_log_entry(st_ddl_log_entry*, st_ddl_log_memory_entry**)::__PRETTY_FUNCTION__
0000000000c2fec0 l     O .rodata	0000000000000024              deactivate_ddl_log_entry(unsigned int)::__PRETTY_FUNCTION__
0000000000c2ff00 l     O .rodata	0000000000000039              release_ddl_log_memory_entry(st_ddl_log_memory_entry*)::__PRETTY_FUNCTION__
0000000000c2ff40 l     O .rodata	0000000000000027              execute_ddl_log_entry(THD*, unsigned int)::__PRETTY_FUNCTION__
000000000067f8e2 l     F .text	00000000000000a5              close_ddl_log()
0000000000682b01 l     F .text	00000000000032ee              mysql_prepare_create_table(THD*, st_ha_create_information*, Alter_info*, bool, unsigned int*, handler*, st_key**, unsigned int*, int)
0000000000c2ff80 l     O .rodata	0000000000000039              mysql_rm_table(THD*, TABLE_LIST*, char, char)::__PRETTY_FUNCTION__
0000000000c2ffc0 l     O .rodata	0000000000000047              mysql_rm_table_no_locks(THD*, TABLE_LIST*, bool, bool, bool, bool)::__PRETTY_FUNCTION__
0000000000681e67 l     F .text	0000000000000164              sort_keys(st_key*, st_key*)
0000000000c30080 l     O .rodata	0000000000000045              prepare_create_field(Create_field*, unsigned int*, int*, int*, long long)::__PRETTY_FUNCTION__
0000000000c300e0 l     O .rodata	000000000000006d              mysql_prepare_create_table(THD*, st_ha_create_information*, Alter_info*, bool, unsigned int*, handler*, st_key**, unsigned int*, int)::__PRETTY_FUNCTION__
0000000000685e95 l     F .text	00000000000002d5              prepare_blob_field(THD*, Create_field*)
00000000013739d0 l     O .bss	0000000000000001              mysql_prepare_create_table(THD*, st_ha_create_information*, Alter_info*, bool, unsigned int*, handler*, st_key**, unsigned int*, int)::ignore_key
00000000006879c7 l     F .text	000000000000012a              make_unique_key_name(char const*, st_key*, st_key*)
0000000000687953 l     F .text	0000000000000074              check_if_keyname_exists(char const*, st_key*, st_key*)
0000000000685def l     F .text	00000000000000a6              set_table_default_charset(THD*, st_ha_create_information*, char*)
0000000000c301c0 l     O .rodata	0000000000000032              sp_prepare_create_field(THD*, Create_field*)::__PRETTY_FUNCTION__
00000000006862c0 l     F .text	00000000000001f9              check_if_created_table_can_be_opened(THD*, char const*, char const*, char const*, st_ha_create_information*, handler*)
0000000000c30200 l     O .rodata	0000000000000072              check_if_created_table_can_be_opened(THD*, char const*, char const*, char const*, st_ha_create_information*, handler*)::__PRETTY_FUNCTION__
00000000006901c6 l     F .text	00000000000002c2              check_engine(THD*, char const*, char const*, st_ha_create_information*)
0000000000c30280 l     O .rodata	0000000000000071              mysql_create_table_no_lock(THD*, char const*, char const*, st_ha_create_information*, Alter_info*, bool, unsigned int, bool*)::__PRETTY_FUNCTION__
0000000000c30300 l     O .rodata	000000000000001b              mysql_create_table_no_lock(THD*, char const*, char const*, st_ha_create_information*, Alter_info*, bool, unsigned int, bool*)::__FUNCTION__
0000000000c30320 l     O .rodata	000000000000004e              mysql_create_like_table(THD*, TABLE_LIST*, TABLE_LIST*, st_ha_create_information*)::__PRETTY_FUNCTION__
00000000006886b7 l     F .text	0000000000000264              mysql_discard_or_import_tablespace(THD*, TABLE_LIST*, tablespace_op_type)
0000000000c30380 l     O .rodata	0000000000000023              mysql_discard_or_import_tablespace(THD*, TABLE_LIST*, tablespace_op_type)::__FUNCTION__
000000000068891b l     F .text	000000000000011c              is_index_maintenance_unique(TABLE*, Alter_info*)
0000000000689923 l     F .text	0000000000000188              alter_table_manage_keys(TABLE*, int, enum_enable_or_disable)
0000000000689aab l     F .text	0000000000000072              blob_length_by_type(enum_field_types)
0000000000c30400 l     O .rodata	000000000000002b              blob_length_by_type(enum_field_types)::__PRETTY_FUNCTION__
0000000000c30430 l     O .rodata	0000000000000012              mysql_alter_table(THD*, char*, char*, st_ha_create_information*, TABLE_LIST*, Alter_info*, unsigned int, st_order*, bool)::__FUNCTION__
0000000000c30460 l     O .rodata	000000000000006a              mysql_alter_table(THD*, char*, char*, st_ha_create_information*, TABLE_LIST*, Alter_info*, unsigned int, st_order*, bool)::__PRETTY_FUNCTION__
000000000068ea82 l     F .text	0000000000000d5c              copy_data_between_tables(TABLE*, TABLE*, List<Create_field>&, bool, unsigned int, st_order*, unsigned long long*, unsigned long long*, enum_enable_or_disable, bool)
0000000000c304e0 l     O .rodata	000000000000002d              mysql_recreate_table(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c30520 l     O .rodata	000000000000003c              mysql_checksum_table(THD*, TABLE_LIST*, st_ha_check_opt*)::__PRETTY_FUNCTION__
0000000000690488 l     F .text	000000000000002f              __static_initialization_and_destruction_0(int, int)
00000000006904b7 l     F .text	0000000000000015              _GLOBAL__sub_I_sql_table.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_test.cc
0000000000690d54 l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000690e6b l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000c30660 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c30668 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c3066c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c30670 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c30674 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c30678 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e2a0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010e2a20 l     O .data	0000000000000068              lock_descriptions
0000000000691038 l     F .text	0000000000000372              print_cached_tables()
0000000000691ef5 l     F .text	000000000000008e              dl_compare
0000000000691f83 l     F .text	000000000000013e              push_locks_into_array(st_dynamic_array*, st_thr_lock_data*, bool, char const*)
00000000006920c1 l     F .text	000000000000026e              display_table_locks()
000000000069232f l     F .text	0000000000000187              print_key_cache_status
0000000000000000 l    df *ABS*	0000000000000000              sql_trigger.cc
0000000000692778 l     F .text	0000000000000035              lex_string_set(st_mysql_lex_string*, char const*)
00000000006927ad l     F .text	0000000000000077              bitmap_set_bit
0000000000c32020 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
0000000000c31d80 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000692824 l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
0000000000c31148 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c31150 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c31154 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c31158 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c3115c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c31160 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e300 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c31fe0 l     O .rodata	0000000000000036              Query_tables_list::set_stmt_unsafe_flags(unsigned int)::__PRETTY_FUNCTION__
000000000105e350 l     O .data.rel.ro	0000000000000010              triggers_file_type
00000000010e2aa0 l     O .data	00000000000000a8              triggers_file_parameters
0000000000c31420 l     O .rodata	0000000000000004              TRG_NUM_REQUIRED_PARAMETERS
000000000105e370 l     O .data.rel.ro	0000000000000010              trigname_file_type
00000000010e2b80 l     O .data	0000000000000030              trigname_file_parameters
0000000000c31d40 l     O .rodata	000000000000003b              mysql_create_or_drop_trigger(THD*, TABLE_LIST*, bool)::__PRETTY_FUNCTION__
0000000000693ebf l     F .text	000000000000006d              rm_trigger_file(char*, char const*, char const*)
0000000000693f2c l     F .text	000000000000006d              rm_trigname_file(char*, char const*, char const*)
0000000000693f99 l     F .text	00000000000000bf              save_trigger_file(Table_triggers_list*, char const*, char const*)
0000000000c31da0 l     O .rodata	000000000000005c              Table_triggers_list::check_n_load(THD*, char const*, char const*, TABLE*, bool)::__PRETTY_FUNCTION__
0000000000c31e00 l     O .rodata	0000000000000072              Table_triggers_list::change_table_name_in_triggers(THD*, char const*, char const*, st_mysql_lex_string*, st_mysql_lex_string*)::__PRETTY_FUNCTION__
0000000000c31e80 l     O .rodata	000000000000007a              Table_triggers_list::change_table_name(THD*, char const*, char const*, char const*, char const*, char const*)::__PRETTY_FUNCTION__
0000000000c31f00 l     O .rodata	000000000000005d              Table_triggers_list::process_triggers(THD*, trg_event_type, trg_action_time_type, bool)::__PRETTY_FUNCTION__
0000000000c31f60 l     O .rodata	0000000000000066              Table_triggers_list::add_tables_and_routines_for_triggers(THD*, Query_tables_list*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_udf.cc
0000000000698a19 l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000698b30 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000698bad l     F .text	000000000000005f              inline_mysql_rwlock_init
0000000000698c0c l     F .text	000000000000006f              inline_mysql_rwlock_destroy
0000000000698c7b l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
0000000000698d86 l     F .text	000000000000010b              inline_mysql_rwlock_wrlock
0000000000698e91 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000c32060 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c32068 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c3206c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c32070 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c32074 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c32078 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e400 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c32480 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
00000000013739e0 l     O .bss	0000000000000001              initialized
0000000001373a00 l     O .bss	0000000000000038              mem
0000000001373a40 l     O .bss	0000000000000058              udf_hash
0000000001373aa0 l     O .bss	0000000000000040              THR_LOCK_udf
0000000000698efd l     F .text	0000000000000206              init_syms(st_udf_func*, char*)
0000000001373ae0 l     O .bss	0000000000000004              key_rwlock_THR_LOCK_udf
00000000010e2bb0 l     O .data	0000000000000018              all_udf_rwlocks
0000000000699136 l     F .text	0000000000000050              init_udf_psi_keys()
0000000000699e9e l     F .text	00000000000000eb              add_udf(st_mysql_lex_string*, Item_result, char*, Item_udftype)
0000000000699dc3 l     F .text	00000000000000db              find_udf_dl(char const*)
0000000000699a51 l     F .text	00000000000000fd              del_udf(st_udf_func*)
0000000000c32440 l     O .rodata	000000000000002b              mysql_create_function(THD*, st_udf_func*)::__PRETTY_FUNCTION__
0000000000c324c0 l     O .rodata	0000000000000031              mysql_drop_function(THD*, st_mysql_lex_string const*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_union.cc
0000000000c32500 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c32508 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c3250c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c32510 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c32514 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c32518 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e460 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c32720 l     O .rodata	0000000000000058              select_union::create_result_table(THD*, List<Item>*, bool, unsigned long long, char const*)::__PRETTY_FUNCTION__
0000000000c32780 l     O .rodata	000000000000003e              st_select_lex_unit::prepare(THD*, select_result*, unsigned long)::__PRETTY_FUNCTION__
0000000000c327c0 l     O .rodata	0000000000000020              st_select_lex_unit::exec()::__PRETTY_FUNCTION__
0000000000c327e0 l     O .rodata	0000000000000023              st_select_lex_unit::cleanup()::__PRETTY_FUNCTION__
0000000000c32820 l     O .rodata	0000000000000038              st_select_lex_unit::get_unit_column_types()::__PRETTY_FUNCTION__
0000000000c32860 l     O .rodata	000000000000001e              st_select_lex::cleanup()::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_update.cc
000000000069dc56 l     F .text	0000000000000077              bitmap_set_bit
0000000000c32fc0 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
000000000069dccd l     F .text	0000000000000067              bitmap_is_set
0000000000c32ee0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000c328d8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c33130 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000c33150 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000c32ff0 l     O .rodata	000000000000001e              TABLE::set_keyread(bool)::__PRETTY_FUNCTION__
0000000000c329c0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c329c4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c329c8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c329cc l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c329d0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e4c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c32ea0 l     O .rodata	0000000000000023              compare_records(TABLE const*)::__PRETTY_FUNCTION__
000000000069e036 l     F .text	0000000000000112              check_fields(THD*, List<Item>&)
000000000069e148 l     F .text	0000000000000305              prepare_record_for_error_message(int, TABLE*)
0000000000c32f20 l     O .rodata	0000000000000087              mysql_update(THD*, TABLE_LIST*, List<Item>&, List<Item>&, Item*, unsigned int, st_order*, unsigned long long, enum_duplicates, bool, unsigned long long*, unsigned long long*)::__PRETTY_FUNCTION__
0000000000c32fa8 l     O .rodata	000000000000000d              mysql_update(THD*, TABLE_LIST*, List<Item>&, List<Item>&, Item*, unsigned int, st_order*, unsigned long long, enum_duplicates, bool, unsigned long long*, unsigned long long*)::__FUNCTION__
00000000006a0a51 l     F .text	00000000000000b9              get_table_map(List<Item>*)
00000000006a0b0a l     F .text	000000000000047f              unsafe_key_update(TABLE_LIST*, unsigned long long)
0000000000c33010 l     O .rodata	0000000000000008              multi_update::prepare(List<Item>&, st_select_lex_unit*)::__FUNCTION__
0000000000c33020 l     O .rodata	0000000000000041              multi_update::prepare(List<Item>&, st_select_lex_unit*)::__PRETTY_FUNCTION__
00000000006a2718 l     F .text	00000000000001a6              safe_update_on_fly(THD*, st_join_table*, TABLE_LIST*, TABLE_LIST*)
0000000000c33080 l     O .rodata	0000000000000034              multi_update::initialize_tables(JOIN*)::__PRETTY_FUNCTION__
0000000000c330c0 l     O .rodata	0000000000000026              multi_update::~multi_update()::__PRETTY_FUNCTION__
0000000000c33100 l     O .rodata	000000000000002e              multi_update::abort_result_set()::__PRETTY_FUNCTION__
0000000000c33170 l     O .rodata	0000000000000009              multi_update::send_eof()::__FUNCTION__
0000000000c33180 l     O .rodata	0000000000000026              multi_update::send_eof()::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_view.cc
00000000006a4f65 l     F .text	0000000000000035              lex_string_set(st_mysql_lex_string*, char const*)
0000000000c33910 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
00000000006a4f9a l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
0000000000c338e0 l     O .rodata	000000000000002a              MDL_request::set_type(enum_mdl_type)::__PRETTY_FUNCTION__
0000000000c332a0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c332a8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c332ac l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c332b0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c332b4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c332b8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e520 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c338a0 l     O .rodata	0000000000000036              Query_tables_list::set_stmt_unsafe_flags(unsigned int)::__PRETTY_FUNCTION__
00000000006a50b9 l     F .text	0000000000000210              make_unique_view_field_name(Item*, List<Item>&, Item*)
00000000006a54e9 l     F .text	000000000000017f              make_valid_column_names(LEX*)
00000000006a5668 l     F .text	00000000000001d4              fill_defined_view_parts(THD*, TABLE_LIST*)
0000000000c337e0 l     O .rodata	0000000000000041              mysql_create_view(THD*, TABLE_LIST*, enum_view_create_mode)::__PRETTY_FUNCTION__
00000000006a6c97 l     F .text	0000000000000b93              mysql_register_view(THD*, TABLE_LIST*, enum_view_create_mode)
0000000000c33830 l     O .rodata	0000000000000012              mysql_create_view(THD*, TABLE_LIST*, enum_view_create_mode)::__FUNCTION__
0000000000c334d4 l     O .rodata	0000000000000004              required_view_parameters
00000000010e2be0 l     O .data	0000000000000168              view_parameters
00000000010e2d50 l     O .data	0000000000000010              view_file_type
0000000000c33860 l     O .rodata	000000000000003c              mysql_make_view(THD*, File_parser*, TABLE_LIST*, unsigned int)::__PRETTY_FUNCTION__
0000000000c33940 l     O .rodata	000000000000002a              check_key_in_view(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              strfunc.cc
0000000000c33970 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c33978 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c3397c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c33980 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c33984 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c33988 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e580 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c339c2 l     O .rodata	0000000000000001              field_separator
0000000000000000 l    df *ABS*	0000000000000000              table.cc
00000000006aae10 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000006aae81 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000006aaf01 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006ab018 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000006ab095 l     F .text	0000000000000111              inline_mysql_prlock_wrlock
00000000006ab1a6 l     F .text	0000000000000072              inline_mysql_prlock_unlock
0000000000c36040 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
00000000006ab218 l     F .text	0000000000000077              bitmap_set_bit
0000000000c35fc0 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
0000000000c35500 l     O .rodata	0000000000000047              my_decimal_precision_to_length_no_truncation(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000c354c0 l     O .rodata	0000000000000039              my_decimal_precision_to_length(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
00000000006ab28f l     F .text	0000000000000121              inline_mysql_file_chsize(char const*, unsigned int, int, unsigned long long, int, int)
00000000006ab3b0 l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
00000000006ab4db l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
00000000006ab605 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
00000000006ab705 l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
00000000006ab881 l     F .text	0000000000000174              inline_mysql_file_write(char const*, unsigned int, int, unsigned char const*, unsigned long, int)
00000000006ab9f5 l     F .text	0000000000000176              inline_mysql_file_pread(char const*, unsigned int, int, unsigned char*, unsigned long, unsigned long long, int)
00000000006abb6b l     F .text	000000000000011c              inline_mysql_file_seek(char const*, unsigned int, int, unsigned long long, int, int)
00000000006abc87 l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
00000000006abda6 l     F .text	000000000000012e              inline_mysql_file_rename(unsigned int, char const*, unsigned int, char const*, char const*, int)
0000000000c33b98 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000006abed4 l     F .text	000000000000001f              ha_legacy_type(handlerton const*)
0000000000c35f90 l     O .rodata	000000000000001e              TABLE::set_keyread(bool)::__PRETTY_FUNCTION__
0000000000c358e0 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
00000000006abef3 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000c35820 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c357a0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c33c80 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c33c84 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c33c88 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c33c8c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c33c90 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000c357e0 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
000000000105e5e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000006ac399 l     F .text	000000000000003e              get_field_name(Field**, unsigned long*, char)
0000000000c353a0 l     O .rodata	0000000000000048              get_table_category(st_mysql_lex_string const*, st_mysql_lex_string const*)::__PRETTY_FUNCTION__
0000000000c35400 l     O .rodata	0000000000000024              free_table_share(TABLE_SHARE*)::__PRETTY_FUNCTION__
00000000006acee4 l     F .text	0000000000000050              has_disabled_path_chars(char const*)
0000000000c35440 l     O .rodata	000000000000002d              open_table_def(THD*, TABLE_SHARE*, unsigned int)::__PRETTY_FUNCTION__
00000000006ad55e l     F .text	0000000000004012              open_binary_frm(THD*, TABLE_SHARE*, unsigned char*, int)
00000000006b28eb l     F .text	0000000000000243              get_form_pos(int, unsigned char*)
0000000000c35480 l     O .rodata	0000000000000036              open_binary_frm(THD*, TABLE_SHARE*, unsigned char*, int)::__PRETTY_FUNCTION__
00000000006b3869 l     F .text	000000000000011d              fix_type_pointers(char const***, st_typelib*, unsigned int, char**)
00000000006b3b38 l     F .text	0000000000000130              find_field(Field**, unsigned char*, unsigned int, unsigned int)
0000000000c35560 l     O .rodata	000000000000005b              open_table_from_share(THD*, TABLE_SHARE*, char const*, unsigned int, unsigned int, unsigned int, TABLE*, bool)::__PRETTY_FUNCTION__
0000000000c355c0 l     O .rodata	0000000000000068              create_frm(THD*, char const*, char const*, char const*, unsigned int, unsigned char*, st_ha_create_information*, unsigned int, st_key*)::__PRETTY_FUNCTION__
0000000000c35640 l     O .rodata	0000000000000041              calculate_key_len(TABLE*, unsigned int, unsigned char const*, unsigned long)::__PRETTY_FUNCTION__
0000000000c356a0 l     O .rodata	000000000000003e              TABLE_SHARE::wait_for_old_version(THD*, timespec*, unsigned int)::__PRETTY_FUNCTION__
0000000000c356e0 l     O .rodata	0000000000000024              TABLE::init(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c35720 l     O .rodata	000000000000002f              TABLE::reset_item_list(List<Item>*) const::__PRETTY_FUNCTION__
0000000000c35760 l     O .rodata	0000000000000028              TABLE_LIST::set_underlying_merge()::__PRETTY_FUNCTION__
00000000006b69cf l     F .text	000000000000018e              merge_on_conds(THD*, TABLE_LIST*, bool)
0000000000c35860 l     O .rodata	0000000000000030              TABLE_LIST::prep_check_option(THD*, unsigned char)::__PRETTY_FUNCTION__
0000000000c358a0 l     O .rodata	0000000000000027              TABLE_LIST::hide_view_error(THD*)::__PRETTY_FUNCTION__
0000000000c35920 l     O .rodata	000000000000002e              TABLE_LIST::set_insert_values(st_mem_root*)::__PRETTY_FUNCTION__
0000000000c35960 l     O .rodata	0000000000000039              TABLE_LIST::first_leaf_for_name_resolution()::__PRETTY_FUNCTION__
0000000000c359a0 l     O .rodata	0000000000000038              TABLE_LIST::last_leaf_for_name_resolution()::__PRETTY_FUNCTION__
0000000000c359e0 l     O .rodata	0000000000000035              TABLE_LIST::prepare_view_securety_context(THD*)::__PRETTY_FUNCTION__
0000000000c35a20 l     O .rodata	000000000000003f              TABLE_LIST::find_view_security_context(THD*)::__PRETTY_FUNCTION__
0000000000c35a60 l     O .rodata	0000000000000028              TABLE_LIST::prepare_security(THD*)::__PRETTY_FUNCTION__
0000000000c35aa0 l     O .rodata	0000000000000049              Natural_join_column::Natural_join_column(Field_translator*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c35b00 l     O .rodata	0000000000000043              Natural_join_column::Natural_join_column(Item_field*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c35b60 l     O .rodata	0000000000000028              Natural_join_column::name()::__PRETTY_FUNCTION__
0000000000c35ba0 l     O .rodata	000000000000002d              Natural_join_column::create_item(THD*)::__PRETTY_FUNCTION__
0000000000c35be0 l     O .rodata	0000000000000024              Natural_join_column::field()::__PRETTY_FUNCTION__
0000000000c35c20 l     O .rodata	000000000000002e              Natural_join_column::table_name()::__PRETTY_FUNCTION__
0000000000c35c60 l     O .rodata	000000000000002b              Natural_join_column::db_name()::__PRETTY_FUNCTION__
0000000000c35ca0 l     O .rodata	0000000000000033              Field_iterator_view::set(TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c35ce0 l     O .rodata	0000000000000040              create_view_field(THD*, TABLE_LIST*, Item**, char const*)::__PRETTY_FUNCTION__
0000000000c35d20 l     O .rodata	000000000000003b              Field_iterator_natural_join::set(TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c35d60 l     O .rodata	0000000000000031              Field_iterator_natural_join::next()::__PRETTY_FUNCTION__
0000000000c35da0 l     O .rodata	0000000000000034              Field_iterator_table_ref::set_field_iterator()::__PRETTY_FUNCTION__
0000000000c35de0 l     O .rodata	0000000000000038              Field_iterator_table_ref::set(TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c35e20 l     O .rodata	000000000000002e              Field_iterator_table_ref::next()::__PRETTY_FUNCTION__
0000000000c35e60 l     O .rodata	0000000000000037              Field_iterator_table_ref::get_table_name()::__PRETTY_FUNCTION__
0000000000c35ea0 l     O .rodata	0000000000000034              Field_iterator_table_ref::get_db_name()::__PRETTY_FUNCTION__
0000000000c35ee0 l     O .rodata	000000000000005b              Field_iterator_table_ref::get_or_create_column_ref(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000c35f40 l     O .rodata	0000000000000048              Field_iterator_table_ref::get_natural_column_ref()::__PRETTY_FUNCTION__
0000000000c36000 l     O .rodata	0000000000000029              TABLE::mark_auto_increment_column()::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              thr_malloc.cc
0000000000c36070 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c36078 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c3607c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c36080 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c36084 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c36088 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e640 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000000000 l    df *ABS*	0000000000000000              sql_time.cc
0000000000c36510 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000c36170 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c36178 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
0000000000c3617c l     O .rodata	0000000000000004              SRID_SIZE
0000000000c36180 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c36184 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c36188 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c3618c l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e6a0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000006bc0fb l     F .text	00000000000000e8              to_ascii(charset_info_st*, char const*, unsigned int, char*, unsigned int)
0000000000c364c0 l     O .rodata	000000000000004e              get_date_time_format_str(st_known_date_time_format*, enum_mysql_timestamp_type)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              tztime.cc
00000000006bdd2e l     F .text	0000000000000071              inline_mysql_mutex_init
00000000006bdd9f l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000006bde1f l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006bdf36 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000006bdfb3 l     F .text	000000000000007a              validate_timestamp_range
0000000000c36540 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c37180 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c371b0 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000c37140 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c36644 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
0000000000c36648 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c3664c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c36650 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c36654 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c36658 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e700 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000006be02d l     F .text	000000000000086d              prepare_tz_info(st_time_zone_info*, st_mem_root*)
0000000000c366e0 l     O .rodata	0000000000000060              mon_lengths
0000000000c36740 l     O .rodata	0000000000000060              mon_starts
0000000000c367a0 l     O .rodata	0000000000000008              year_lengths
00000000006be89a l     F .text	00000000000003fe              sec_to_TIME(st_mysql_time*, long, long)
00000000006bec98 l     F .text	0000000000000094              find_time_range(long, long const*, unsigned int)
0000000000c36fc0 l     O .rodata	0000000000000038              find_time_range(long, long const*, unsigned int)::__PRETTY_FUNCTION__
00000000006bed2c l     F .text	0000000000000094              find_transition_type(long, st_time_zone_info const*)
00000000006bedc0 l     F .text	00000000000001bf              gmt_sec_to_TIME(st_mysql_time*, long, st_time_zone_info const*)
00000000006bef7f l     F .text	00000000000001d0              sec_since_epoch(int, int, int, int, int, int)
0000000000c37000 l     O .rodata	0000000000000038              sec_since_epoch(int, int, int, int, int, int)::__PRETTY_FUNCTION__
00000000006bf14f l     F .text	00000000000002d7              TIME_to_gmt_sec(st_mysql_time const*, st_time_zone_info const*, char*)
0000000000c37040 l     O .rodata	000000000000004e              TIME_to_gmt_sec(st_mysql_time const*, st_time_zone_info const*, char*)::__PRETTY_FUNCTION__
0000000001373b00 l     O .bss	0000000000000020              tz_SYSTEM_name
0000000000c370a0 l     O .rodata	0000000000000054              Time_zone_utc::TIME_to_gmt_sec(st_mysql_time const*, char*) const::__PRETTY_FUNCTION__
0000000000c37100 l     O .rodata	0000000000000036              Time_zone_utc::get_name() const::__PRETTY_FUNCTION__
0000000001373b20 l     O .bss	0000000000000008              tz_UTC
0000000001373b28 l     O .bss	0000000000000008              tz_SYSTEM
0000000001373b40 l     O .bss	0000000000000048              tz_OFFSET0
0000000001373ba0 l     O .bss	0000000000000058              tz_names
0000000001373c00 l     O .bss	0000000000000058              offset_tzs
0000000001373c60 l     O .bss	0000000000000038              tz_storage
0000000001373ca0 l     O .bss	0000000000000070              tz_LOCK
0000000001373d10 l     O .bss	0000000000000001              tz_inited
0000000001373d14 l     O .bss	0000000000000004              tz_leapcnt
0000000001373d18 l     O .bss	0000000000000008              tz_lsis
00000000010e2fc0 l     O .data	0000000000000001              time_zone_tables_exist
000000000105e760 l     O .data.rel.ro	0000000000000040              tz_tables_names
000000000105e7a0 l     O .data.rel.ro	0000000000000010              tz_tables_db_name
00000000006bf9aa l     F .text	000000000000019f              tz_init_table_list(TABLE_LIST*)
0000000001373d20 l     O .bss	0000000000000004              key_tz_LOCK
00000000010e2ff0 l     O .data	0000000000000018              all_tz_mutexes
00000000006bfb49 l     F .text	000000000000004f              init_tz_psi_keys()
00000000006c04f0 l     F .text	0000000000000f86              tz_load_from_open_tables(String const*, TABLE_LIST*)
0000000000c371e0 l     O .rodata	0000000000000040              tz_load_from_open_tables(String const*, TABLE_LIST*)::__PRETTY_FUNCTION__
00000000006c1a0f l     F .text	00000000000000e7              __static_initialization_and_destruction_0(int, int)
00000000006c1af6 l     F .text	0000000000000015              _GLOBAL__sub_I_tztime.cc
0000000000000000 l    df *ABS*	0000000000000000              unireg.cc
00000000006c1e36 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
00000000006c1f36 l     F .text	0000000000000174              inline_mysql_file_write(char const*, unsigned int, int, unsigned char const*, unsigned long, int)
00000000006c20aa l     F .text	0000000000000176              inline_mysql_file_pwrite(char const*, unsigned int, int, unsigned char const*, unsigned long, unsigned long long, int)
00000000006c2220 l     F .text	000000000000011c              inline_mysql_file_seek(char const*, unsigned int, int, unsigned long long, int, int)
00000000006c233c l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
00000000006c245b l     F .text	0000000000000107              inline_mysql_file_sync(char const*, unsigned int, int, int)
0000000000c37220 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000006c2562 l     F .text	000000000000001f              ha_legacy_type(handlerton const*)
00000000006c2581 l     F .text	0000000000000031              ha_resolve_storage_engine_name(handlerton const*)
0000000000c37230 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c37234 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c37238 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c3723c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c37240 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e7c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c37580 l     O .rodata	000000000000007f              mysql_create_frm(THD*, char const*, char const*, char const*, st_ha_create_information*, List<Create_field>&, unsigned int, st_key*, handler*)::__PRETTY_FUNCTION__
00000000006c40c5 l     F .text	00000000000004be              pack_screens(List<Create_field>&, unsigned int*, unsigned int*, bool)
00000000006c4b12 l     F .text	0000000000000d0d              pack_header(unsigned char*, legacy_db_type, List<Create_field>&, unsigned int, unsigned int, unsigned int, unsigned long, handler*)
00000000006c4583 l     F .text	000000000000058f              pack_keys(unsigned char*, unsigned int, st_key*, unsigned long)
00000000006c627a l     F .text	0000000000000752              make_empty_rec(THD*, int, legacy_db_type, unsigned int, List<Create_field>&, unsigned int, unsigned long, handler*)
00000000006c5948 l     F .text	0000000000000932              pack_fields(int, List<Create_field>&, unsigned long)
0000000000c37600 l     O .rodata	000000000000007e              rea_create_table(THD*, char const*, char const*, char const*, st_ha_create_information*, List<Create_field>&, unsigned int, st_key*, handler*)::__PRETTY_FUNCTION__
0000000000c37680 l     O .rodata	0000000000000061              pack_header(unsigned char*, legacy_db_type, List<Create_field>&, unsigned int, unsigned int, unsigned int, unsigned long, handler*)::__PRETTY_FUNCTION__
00000000006c581f l     F .text	0000000000000129              get_interval_id(unsigned int*, List<Create_field>&, Create_field*)
0000000000c37700 l     O .rodata	0000000000000033              pack_fields(int, List<Create_field>&, unsigned long)::__PRETTY_FUNCTION__
0000000000c37740 l     O .rodata	0000000000000062              make_empty_rec(THD*, int, legacy_db_type, unsigned int, List<Create_field>&, unsigned int, unsigned long, handler*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_binlog.cc
0000000000c377c0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c377c8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c377cc l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c377d0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c377d4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c377d8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e820 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c379c0 l     O .rodata	0000000000000029              mysql_client_binlog_statement(THD*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              event_data_objects.cc
00000000006c71f8 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006c730f l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000c37a00 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c38460 l     O .rodata	0000000000000037              CSET_STRING::CSET_STRING(char*, unsigned long, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c37a58 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c37a5c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c37a60 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c37a64 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c37a68 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e880 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c37aa4 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
0000000000c38380 l     O .rodata	000000000000003e              Event_queue_element::load_from_row(THD*, TABLE*)::__PRETTY_FUNCTION__
00000000006c8e3c l     F .text	000000000000008b              add_interval(st_mysql_time*, Time_zone const*, interval_type, INTERVAL)
00000000006c8ec7 l     F .text	00000000000005c7              get_next_time(Time_zone const*, long*, long, long, int, interval_type)
0000000000c383c0 l     O .rodata	000000000000005b              get_next_time(Time_zone const*, long*, long, long, int, interval_type)::__PRETTY_FUNCTION__
00000000006c9d62 l     F .text	0000000000000120              append_datetime(String*, Time_zone*, long, char const*, unsigned int)
0000000000c38420 l     O .rodata	0000000000000029              Event_job_data::execute(THD*, bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_tablespace.cc
0000000000c38498 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000006cb059 l     F .text	0000000000000031              ha_resolve_storage_engine_name(handlerton const*)
0000000000c384a8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c384ac l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c384b0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c384b4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c384b8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e8e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000000000 l    df *ABS*	0000000000000000              events.cc
00000000006cb2f0 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006cb407 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000c38e60 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000c38610 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c39000 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c38f80 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c38fc0 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000c3866c l     O .rodata	0000000000000004              SRID_SIZE
0000000000c38670 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c38674 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c38678 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c3867c l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e940 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c38e80 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000c387b0 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
00000000006cbd46 l     F .text	00000000000000cd              create_query_string(THD*, String*)
0000000000c38e20 l     O .rodata	0000000000000040              Events::create_event(THD*, Event_parse_data*, bool)::__PRETTY_FUNCTION__
0000000000c38ec0 l     O .rodata	0000000000000054              Events::update_event(THD*, Event_parse_data*, st_mysql_lex_string*, st_mysql_lex_string*)::__PRETTY_FUNCTION__
0000000000c38f20 l     O .rodata	0000000000000043              Events::drop_event(THD*, st_mysql_lex_string, st_mysql_lex_string, bool)::__PRETTY_FUNCTION__
00000000006ccbc6 l     F .text	00000000000006e3              send_show_create_event(THD*, Event_timed*, Protocol*)
0000000000c39040 l     O .rodata	0000000000000040              Events::fill_schema_events(THD*, TABLE_LIST*, Item*)::__PRETTY_FUNCTION__
0000000000c39080 l     O .rodata	0000000000000022              Events::init(char)::__PRETTY_FUNCTION__
00000000010e3020 l     O .data	0000000000000030              all_events_mutexes
00000000010e3060 l     O .data	0000000000000030              all_events_conds
00000000010e30a0 l     O .data	0000000000000030              all_events_threads
00000000006cda92 l     F .text	00000000000000a1              init_events_psi_keys()
0000000000000000 l    df *ABS*	0000000000000000              partition_info.cc
0000000000c390c0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000006ce09a l     F .text	0000000000000031              ha_resolve_storage_engine_name(handlerton const*)
00000000006ce0cb l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
00000000006ce0fd l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
00000000006ce117 l     F .text	0000000000000025              dbug_tmp_use_all_columns(TABLE*, st_bitmap*)
00000000006ce13c l     F .text	0000000000000026              dbug_tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000c390d0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c390d4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c390d8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c390dc l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c390e0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105e9a0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000006cf321 l     F .text	00000000000001c0              check_engine_condition(partition_element*, bool, handlerton**, bool*)
0000000000c39a20 l     O .rodata	0000000000000039              partition_info::check_engine_mix(handlerton*, bool)::__PRETTY_FUNCTION__
0000000000c39a60 l     O .rodata	0000000000000030              partition_info::check_list_constants(THD*)::__PRETTY_FUNCTION__
00000000006d06b0 l     F .text	00000000000000f4              warn_if_dir_in_part_elem(THD*, partition_element*)
0000000000c39aa0 l     O .rodata	000000000000005f              partition_info::check_partition_info(THD*, handlerton**, handler*, st_ha_create_information*, bool)::__PRETTY_FUNCTION__
0000000000c39b00 l     O .rodata	000000000000003b              partition_info::reorganize_into_single_field_col_val()::__PRETTY_FUNCTION__
0000000000c39b40 l     O .rodata	000000000000005b              partition_info::fix_partition_values(THD*, p_elem_val*, partition_element*, unsigned int)::__PRETTY_FUNCTION__
0000000000c39ba0 l     O .rodata	000000000000002a              partition_info::fix_parser_data(THD*)::__PRETTY_FUNCTION__
00000000006d361d l     F .text	0000000000000058              strcmp_null(char const*, char const*)
0000000000c39be0 l     O .rodata	000000000000003c              partition_info::has_same_partitioning(partition_info*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              rpl_utility.cc
0000000000c39c20 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c3aa00 l     O .rodata	0000000000000047              my_decimal_precision_to_length_no_truncation(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000c3a9c0 l     O .rodata	0000000000000039              my_decimal_precision_to_length(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000c3a820 l     O .rodata	000000000000002e              table_def::type(unsigned long) const::__PRETTY_FUNCTION__
0000000000c3a980 l     O .rodata	000000000000002d              table_def::field_metadata(unsigned int) const::__PRETTY_FUNCTION__
0000000000c39cd0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c39cd4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c39cd8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c39cdc l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c39ce0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105ea00 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000006d4833 l     F .text	00000000000001d9              max_display_length_for_field(enum_field_types, unsigned int)
0000000000c3a780 l     O .rodata	0000000000000044              max_display_length_for_field(enum_field_types, unsigned int)::__PRETTY_FUNCTION__
0000000000c3a7e0 l     O .rodata	0000000000000036              table_def::calc_field_size(unsigned int, unsigned char*) const::__PRETTY_FUNCTION__
0000000000c3a860 l     O .rodata	0000000000000045              show_sql_type(enum_field_types, unsigned short, String*, charset_info_st*)::__PRETTY_FUNCTION__
00000000006d5954 l     F .text	00000000000006ae              can_convert_field_to(Field*, enum_field_types, unsigned short, Relay_log_info*, unsigned short, int*)
0000000000c3a8c0 l     O .rodata	000000000000005b              can_convert_field_to(Field*, enum_field_types, unsigned short, Relay_log_info*, unsigned short, int*)::__PRETTY_FUNCTION__
0000000000c3a920 l     O .rodata	000000000000004e              table_def::compatible_with(THD*, Relay_log_info*, TABLE*, TABLE**) const::__PRETTY_FUNCTION__
0000000000c3aa60 l     O .rodata	0000000000000033              Deferred_log_events::execute(Relay_log_info*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              rpl_injector.cc
00000000006d738a l     F .text	0000000000000071              inline_mysql_mutex_init
00000000006d73fb l     F .text	0000000000000080              inline_mysql_mutex_destroy
0000000000c3aaa0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c3ade0 l     O .rodata	000000000000004a              injector::transaction::check_state(injector::transaction::enum_state)::__PRETTY_FUNCTION__
0000000000c3aba0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c3aba4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c3aba8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c3abac l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c3abb0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105ea60 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001373d68 l     O .bss	0000000000000008              s_injector
0000000000000000 l    df *ABS*	0000000000000000              sql_locale.cc
0000000000c3ae40 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c3ae48 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c3ae4c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c3ae50 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c3ae54 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c3ae58 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105eac0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010e3280 l     O .data	0000000000000068              my_locale_month_names_ar_AE
00000000010e3300 l     O .data	0000000000000068              my_locale_ab_month_names_ar_AE
00000000010e3380 l     O .data	0000000000000040              my_locale_day_names_ar_AE
00000000010e33c0 l     O .data	0000000000000040              my_locale_ab_day_names_ar_AE
00000000010e3400 l     O .data	0000000000000020              my_locale_typelib_month_names_ar_AE
00000000010e3420 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ar_AE
00000000010e3440 l     O .data	0000000000000020              my_locale_typelib_day_names_ar_AE
00000000010e3460 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ar_AE
00000000010e3480 l     O .data	0000000000000068              my_locale_month_names_ar_BH
00000000010e3500 l     O .data	0000000000000068              my_locale_ab_month_names_ar_BH
00000000010e3580 l     O .data	0000000000000040              my_locale_day_names_ar_BH
00000000010e35c0 l     O .data	0000000000000040              my_locale_ab_day_names_ar_BH
00000000010e3600 l     O .data	0000000000000020              my_locale_typelib_month_names_ar_BH
00000000010e3620 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ar_BH
00000000010e3640 l     O .data	0000000000000020              my_locale_typelib_day_names_ar_BH
00000000010e3660 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ar_BH
00000000010e3680 l     O .data	0000000000000068              my_locale_month_names_ar_JO
00000000010e3700 l     O .data	0000000000000068              my_locale_ab_month_names_ar_JO
00000000010e3780 l     O .data	0000000000000040              my_locale_day_names_ar_JO
00000000010e37c0 l     O .data	0000000000000040              my_locale_ab_day_names_ar_JO
00000000010e3800 l     O .data	0000000000000020              my_locale_typelib_month_names_ar_JO
00000000010e3820 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ar_JO
00000000010e3840 l     O .data	0000000000000020              my_locale_typelib_day_names_ar_JO
00000000010e3860 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ar_JO
00000000010e3880 l     O .data	0000000000000068              my_locale_month_names_ar_SA
00000000010e3900 l     O .data	0000000000000068              my_locale_ab_month_names_ar_SA
00000000010e3980 l     O .data	0000000000000040              my_locale_day_names_ar_SA
00000000010e39c0 l     O .data	0000000000000040              my_locale_ab_day_names_ar_SA
00000000010e3a00 l     O .data	0000000000000020              my_locale_typelib_month_names_ar_SA
00000000010e3a20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ar_SA
00000000010e3a40 l     O .data	0000000000000020              my_locale_typelib_day_names_ar_SA
00000000010e3a60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ar_SA
00000000010e3a80 l     O .data	0000000000000068              my_locale_month_names_ar_SY
00000000010e3b00 l     O .data	0000000000000068              my_locale_ab_month_names_ar_SY
00000000010e3b80 l     O .data	0000000000000040              my_locale_day_names_ar_SY
00000000010e3bc0 l     O .data	0000000000000040              my_locale_ab_day_names_ar_SY
00000000010e3c00 l     O .data	0000000000000020              my_locale_typelib_month_names_ar_SY
00000000010e3c20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ar_SY
00000000010e3c40 l     O .data	0000000000000020              my_locale_typelib_day_names_ar_SY
00000000010e3c60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ar_SY
00000000010e3c80 l     O .data	0000000000000068              my_locale_month_names_be_BY
00000000010e3d00 l     O .data	0000000000000068              my_locale_ab_month_names_be_BY
00000000010e3d80 l     O .data	0000000000000040              my_locale_day_names_be_BY
00000000010e3dc0 l     O .data	0000000000000040              my_locale_ab_day_names_be_BY
00000000010e3e00 l     O .data	0000000000000020              my_locale_typelib_month_names_be_BY
00000000010e3e20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_be_BY
00000000010e3e40 l     O .data	0000000000000020              my_locale_typelib_day_names_be_BY
00000000010e3e60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_be_BY
00000000010e3e80 l     O .data	0000000000000068              my_locale_month_names_bg_BG
00000000010e3f00 l     O .data	0000000000000068              my_locale_ab_month_names_bg_BG
00000000010e3f80 l     O .data	0000000000000040              my_locale_day_names_bg_BG
00000000010e3fc0 l     O .data	0000000000000040              my_locale_ab_day_names_bg_BG
00000000010e4000 l     O .data	0000000000000020              my_locale_typelib_month_names_bg_BG
00000000010e4020 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_bg_BG
00000000010e4040 l     O .data	0000000000000020              my_locale_typelib_day_names_bg_BG
00000000010e4060 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_bg_BG
00000000010e4080 l     O .data	0000000000000068              my_locale_month_names_ca_ES
00000000010e4100 l     O .data	0000000000000068              my_locale_ab_month_names_ca_ES
00000000010e4180 l     O .data	0000000000000040              my_locale_day_names_ca_ES
00000000010e41c0 l     O .data	0000000000000040              my_locale_ab_day_names_ca_ES
00000000010e4200 l     O .data	0000000000000020              my_locale_typelib_month_names_ca_ES
00000000010e4220 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ca_ES
00000000010e4240 l     O .data	0000000000000020              my_locale_typelib_day_names_ca_ES
00000000010e4260 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ca_ES
00000000010e4280 l     O .data	0000000000000068              my_locale_month_names_cs_CZ
00000000010e4300 l     O .data	0000000000000068              my_locale_ab_month_names_cs_CZ
00000000010e4380 l     O .data	0000000000000040              my_locale_day_names_cs_CZ
00000000010e43c0 l     O .data	0000000000000040              my_locale_ab_day_names_cs_CZ
00000000010e4400 l     O .data	0000000000000020              my_locale_typelib_month_names_cs_CZ
00000000010e4420 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_cs_CZ
00000000010e4440 l     O .data	0000000000000020              my_locale_typelib_day_names_cs_CZ
00000000010e4460 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_cs_CZ
00000000010e4480 l     O .data	0000000000000068              my_locale_month_names_da_DK
00000000010e4500 l     O .data	0000000000000068              my_locale_ab_month_names_da_DK
00000000010e4580 l     O .data	0000000000000040              my_locale_day_names_da_DK
00000000010e45c0 l     O .data	0000000000000040              my_locale_ab_day_names_da_DK
00000000010e4600 l     O .data	0000000000000020              my_locale_typelib_month_names_da_DK
00000000010e4620 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_da_DK
00000000010e4640 l     O .data	0000000000000020              my_locale_typelib_day_names_da_DK
00000000010e4660 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_da_DK
00000000010e4680 l     O .data	0000000000000068              my_locale_month_names_de_AT
00000000010e4700 l     O .data	0000000000000068              my_locale_ab_month_names_de_AT
00000000010e4780 l     O .data	0000000000000040              my_locale_day_names_de_AT
00000000010e47c0 l     O .data	0000000000000040              my_locale_ab_day_names_de_AT
00000000010e4800 l     O .data	0000000000000020              my_locale_typelib_month_names_de_AT
00000000010e4820 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_de_AT
00000000010e4840 l     O .data	0000000000000020              my_locale_typelib_day_names_de_AT
00000000010e4860 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_de_AT
00000000010e4880 l     O .data	0000000000000068              my_locale_month_names_de_DE
00000000010e4900 l     O .data	0000000000000068              my_locale_ab_month_names_de_DE
00000000010e4980 l     O .data	0000000000000040              my_locale_day_names_de_DE
00000000010e49c0 l     O .data	0000000000000040              my_locale_ab_day_names_de_DE
00000000010e4a00 l     O .data	0000000000000020              my_locale_typelib_month_names_de_DE
00000000010e4a20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_de_DE
00000000010e4a40 l     O .data	0000000000000020              my_locale_typelib_day_names_de_DE
00000000010e4a60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_de_DE
00000000010e4a80 l     O .data	0000000000000068              my_locale_month_names_en_US
00000000010e4b00 l     O .data	0000000000000068              my_locale_ab_month_names_en_US
00000000010e4b80 l     O .data	0000000000000040              my_locale_day_names_en_US
00000000010e4bc0 l     O .data	0000000000000040              my_locale_ab_day_names_en_US
00000000010e4c00 l     O .data	0000000000000020              my_locale_typelib_month_names_en_US
00000000010e4c20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_en_US
00000000010e4c40 l     O .data	0000000000000020              my_locale_typelib_day_names_en_US
00000000010e4c60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_en_US
00000000010e4c80 l     O .data	0000000000000068              my_locale_month_names_es_ES
00000000010e4d00 l     O .data	0000000000000068              my_locale_ab_month_names_es_ES
00000000010e4d80 l     O .data	0000000000000040              my_locale_day_names_es_ES
00000000010e4dc0 l     O .data	0000000000000040              my_locale_ab_day_names_es_ES
00000000010e4e00 l     O .data	0000000000000020              my_locale_typelib_month_names_es_ES
00000000010e4e20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_es_ES
00000000010e4e40 l     O .data	0000000000000020              my_locale_typelib_day_names_es_ES
00000000010e4e60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_es_ES
00000000010e4e80 l     O .data	0000000000000068              my_locale_month_names_et_EE
00000000010e4f00 l     O .data	0000000000000068              my_locale_ab_month_names_et_EE
00000000010e4f80 l     O .data	0000000000000040              my_locale_day_names_et_EE
00000000010e4fc0 l     O .data	0000000000000040              my_locale_ab_day_names_et_EE
00000000010e5000 l     O .data	0000000000000020              my_locale_typelib_month_names_et_EE
00000000010e5020 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_et_EE
00000000010e5040 l     O .data	0000000000000020              my_locale_typelib_day_names_et_EE
00000000010e5060 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_et_EE
00000000010e5080 l     O .data	0000000000000068              my_locale_month_names_eu_ES
00000000010e5100 l     O .data	0000000000000068              my_locale_ab_month_names_eu_ES
00000000010e5180 l     O .data	0000000000000040              my_locale_day_names_eu_ES
00000000010e51c0 l     O .data	0000000000000040              my_locale_ab_day_names_eu_ES
00000000010e5200 l     O .data	0000000000000020              my_locale_typelib_month_names_eu_ES
00000000010e5220 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_eu_ES
00000000010e5240 l     O .data	0000000000000020              my_locale_typelib_day_names_eu_ES
00000000010e5260 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_eu_ES
00000000010e5280 l     O .data	0000000000000068              my_locale_month_names_fi_FI
00000000010e5300 l     O .data	0000000000000068              my_locale_ab_month_names_fi_FI
00000000010e5380 l     O .data	0000000000000040              my_locale_day_names_fi_FI
00000000010e53c0 l     O .data	0000000000000040              my_locale_ab_day_names_fi_FI
00000000010e5400 l     O .data	0000000000000020              my_locale_typelib_month_names_fi_FI
00000000010e5420 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_fi_FI
00000000010e5440 l     O .data	0000000000000020              my_locale_typelib_day_names_fi_FI
00000000010e5460 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_fi_FI
00000000010e5480 l     O .data	0000000000000068              my_locale_month_names_fo_FO
00000000010e5500 l     O .data	0000000000000068              my_locale_ab_month_names_fo_FO
00000000010e5580 l     O .data	0000000000000040              my_locale_day_names_fo_FO
00000000010e55c0 l     O .data	0000000000000040              my_locale_ab_day_names_fo_FO
00000000010e5600 l     O .data	0000000000000020              my_locale_typelib_month_names_fo_FO
00000000010e5620 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_fo_FO
00000000010e5640 l     O .data	0000000000000020              my_locale_typelib_day_names_fo_FO
00000000010e5660 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_fo_FO
00000000010e5680 l     O .data	0000000000000068              my_locale_month_names_fr_FR
00000000010e5700 l     O .data	0000000000000068              my_locale_ab_month_names_fr_FR
00000000010e5780 l     O .data	0000000000000040              my_locale_day_names_fr_FR
00000000010e57c0 l     O .data	0000000000000040              my_locale_ab_day_names_fr_FR
00000000010e5800 l     O .data	0000000000000020              my_locale_typelib_month_names_fr_FR
00000000010e5820 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_fr_FR
00000000010e5840 l     O .data	0000000000000020              my_locale_typelib_day_names_fr_FR
00000000010e5860 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_fr_FR
00000000010e5880 l     O .data	0000000000000068              my_locale_month_names_gl_ES
00000000010e5900 l     O .data	0000000000000068              my_locale_ab_month_names_gl_ES
00000000010e5980 l     O .data	0000000000000040              my_locale_day_names_gl_ES
00000000010e59c0 l     O .data	0000000000000040              my_locale_ab_day_names_gl_ES
00000000010e5a00 l     O .data	0000000000000020              my_locale_typelib_month_names_gl_ES
00000000010e5a20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_gl_ES
00000000010e5a40 l     O .data	0000000000000020              my_locale_typelib_day_names_gl_ES
00000000010e5a60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_gl_ES
00000000010e5a80 l     O .data	0000000000000068              my_locale_month_names_gu_IN
00000000010e5b00 l     O .data	0000000000000068              my_locale_ab_month_names_gu_IN
00000000010e5b80 l     O .data	0000000000000040              my_locale_day_names_gu_IN
00000000010e5bc0 l     O .data	0000000000000040              my_locale_ab_day_names_gu_IN
00000000010e5c00 l     O .data	0000000000000020              my_locale_typelib_month_names_gu_IN
00000000010e5c20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_gu_IN
00000000010e5c40 l     O .data	0000000000000020              my_locale_typelib_day_names_gu_IN
00000000010e5c60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_gu_IN
00000000010e5c80 l     O .data	0000000000000068              my_locale_month_names_he_IL
00000000010e5d00 l     O .data	0000000000000068              my_locale_ab_month_names_he_IL
00000000010e5d80 l     O .data	0000000000000040              my_locale_day_names_he_IL
00000000010e5dc0 l     O .data	0000000000000040              my_locale_ab_day_names_he_IL
00000000010e5e00 l     O .data	0000000000000020              my_locale_typelib_month_names_he_IL
00000000010e5e20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_he_IL
00000000010e5e40 l     O .data	0000000000000020              my_locale_typelib_day_names_he_IL
00000000010e5e60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_he_IL
00000000010e5e80 l     O .data	0000000000000068              my_locale_month_names_hi_IN
00000000010e5f00 l     O .data	0000000000000068              my_locale_ab_month_names_hi_IN
00000000010e5f80 l     O .data	0000000000000040              my_locale_day_names_hi_IN
00000000010e5fc0 l     O .data	0000000000000040              my_locale_ab_day_names_hi_IN
00000000010e6000 l     O .data	0000000000000020              my_locale_typelib_month_names_hi_IN
00000000010e6020 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_hi_IN
00000000010e6040 l     O .data	0000000000000020              my_locale_typelib_day_names_hi_IN
00000000010e6060 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_hi_IN
00000000010e6080 l     O .data	0000000000000068              my_locale_month_names_hr_HR
00000000010e6100 l     O .data	0000000000000068              my_locale_ab_month_names_hr_HR
00000000010e6180 l     O .data	0000000000000040              my_locale_day_names_hr_HR
00000000010e61c0 l     O .data	0000000000000040              my_locale_ab_day_names_hr_HR
00000000010e6200 l     O .data	0000000000000020              my_locale_typelib_month_names_hr_HR
00000000010e6220 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_hr_HR
00000000010e6240 l     O .data	0000000000000020              my_locale_typelib_day_names_hr_HR
00000000010e6260 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_hr_HR
00000000010e6280 l     O .data	0000000000000068              my_locale_month_names_hu_HU
00000000010e6300 l     O .data	0000000000000068              my_locale_ab_month_names_hu_HU
00000000010e6380 l     O .data	0000000000000040              my_locale_day_names_hu_HU
00000000010e63c0 l     O .data	0000000000000040              my_locale_ab_day_names_hu_HU
00000000010e6400 l     O .data	0000000000000020              my_locale_typelib_month_names_hu_HU
00000000010e6420 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_hu_HU
00000000010e6440 l     O .data	0000000000000020              my_locale_typelib_day_names_hu_HU
00000000010e6460 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_hu_HU
00000000010e6480 l     O .data	0000000000000068              my_locale_month_names_id_ID
00000000010e6500 l     O .data	0000000000000068              my_locale_ab_month_names_id_ID
00000000010e6580 l     O .data	0000000000000040              my_locale_day_names_id_ID
00000000010e65c0 l     O .data	0000000000000040              my_locale_ab_day_names_id_ID
00000000010e6600 l     O .data	0000000000000020              my_locale_typelib_month_names_id_ID
00000000010e6620 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_id_ID
00000000010e6640 l     O .data	0000000000000020              my_locale_typelib_day_names_id_ID
00000000010e6660 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_id_ID
00000000010e6680 l     O .data	0000000000000068              my_locale_month_names_is_IS
00000000010e6700 l     O .data	0000000000000068              my_locale_ab_month_names_is_IS
00000000010e6780 l     O .data	0000000000000040              my_locale_day_names_is_IS
00000000010e67c0 l     O .data	0000000000000040              my_locale_ab_day_names_is_IS
00000000010e6800 l     O .data	0000000000000020              my_locale_typelib_month_names_is_IS
00000000010e6820 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_is_IS
00000000010e6840 l     O .data	0000000000000020              my_locale_typelib_day_names_is_IS
00000000010e6860 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_is_IS
00000000010e6880 l     O .data	0000000000000068              my_locale_month_names_it_CH
00000000010e6900 l     O .data	0000000000000068              my_locale_ab_month_names_it_CH
00000000010e6980 l     O .data	0000000000000040              my_locale_day_names_it_CH
00000000010e69c0 l     O .data	0000000000000040              my_locale_ab_day_names_it_CH
00000000010e6a00 l     O .data	0000000000000020              my_locale_typelib_month_names_it_CH
00000000010e6a20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_it_CH
00000000010e6a40 l     O .data	0000000000000020              my_locale_typelib_day_names_it_CH
00000000010e6a60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_it_CH
00000000010e6a80 l     O .data	0000000000000068              my_locale_month_names_ja_JP
00000000010e6b00 l     O .data	0000000000000068              my_locale_ab_month_names_ja_JP
00000000010e6b80 l     O .data	0000000000000040              my_locale_day_names_ja_JP
00000000010e6bc0 l     O .data	0000000000000040              my_locale_ab_day_names_ja_JP
00000000010e6c00 l     O .data	0000000000000020              my_locale_typelib_month_names_ja_JP
00000000010e6c20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ja_JP
00000000010e6c40 l     O .data	0000000000000020              my_locale_typelib_day_names_ja_JP
00000000010e6c60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ja_JP
00000000010e6c80 l     O .data	0000000000000068              my_locale_month_names_ko_KR
00000000010e6d00 l     O .data	0000000000000068              my_locale_ab_month_names_ko_KR
00000000010e6d80 l     O .data	0000000000000040              my_locale_day_names_ko_KR
00000000010e6dc0 l     O .data	0000000000000040              my_locale_ab_day_names_ko_KR
00000000010e6e00 l     O .data	0000000000000020              my_locale_typelib_month_names_ko_KR
00000000010e6e20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ko_KR
00000000010e6e40 l     O .data	0000000000000020              my_locale_typelib_day_names_ko_KR
00000000010e6e60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ko_KR
00000000010e6e80 l     O .data	0000000000000068              my_locale_month_names_lt_LT
00000000010e6f00 l     O .data	0000000000000068              my_locale_ab_month_names_lt_LT
00000000010e6f80 l     O .data	0000000000000040              my_locale_day_names_lt_LT
00000000010e6fc0 l     O .data	0000000000000040              my_locale_ab_day_names_lt_LT
00000000010e7000 l     O .data	0000000000000020              my_locale_typelib_month_names_lt_LT
00000000010e7020 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_lt_LT
00000000010e7040 l     O .data	0000000000000020              my_locale_typelib_day_names_lt_LT
00000000010e7060 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_lt_LT
00000000010e7080 l     O .data	0000000000000068              my_locale_month_names_lv_LV
00000000010e7100 l     O .data	0000000000000068              my_locale_ab_month_names_lv_LV
00000000010e7180 l     O .data	0000000000000040              my_locale_day_names_lv_LV
00000000010e71c0 l     O .data	0000000000000040              my_locale_ab_day_names_lv_LV
00000000010e7200 l     O .data	0000000000000020              my_locale_typelib_month_names_lv_LV
00000000010e7220 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_lv_LV
00000000010e7240 l     O .data	0000000000000020              my_locale_typelib_day_names_lv_LV
00000000010e7260 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_lv_LV
00000000010e7280 l     O .data	0000000000000068              my_locale_month_names_mk_MK
00000000010e7300 l     O .data	0000000000000068              my_locale_ab_month_names_mk_MK
00000000010e7380 l     O .data	0000000000000040              my_locale_day_names_mk_MK
00000000010e73c0 l     O .data	0000000000000040              my_locale_ab_day_names_mk_MK
00000000010e7400 l     O .data	0000000000000020              my_locale_typelib_month_names_mk_MK
00000000010e7420 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_mk_MK
00000000010e7440 l     O .data	0000000000000020              my_locale_typelib_day_names_mk_MK
00000000010e7460 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_mk_MK
00000000010e7480 l     O .data	0000000000000068              my_locale_month_names_mn_MN
00000000010e7500 l     O .data	0000000000000068              my_locale_ab_month_names_mn_MN
00000000010e7580 l     O .data	0000000000000040              my_locale_day_names_mn_MN
00000000010e75c0 l     O .data	0000000000000040              my_locale_ab_day_names_mn_MN
00000000010e7600 l     O .data	0000000000000020              my_locale_typelib_month_names_mn_MN
00000000010e7620 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_mn_MN
00000000010e7640 l     O .data	0000000000000020              my_locale_typelib_day_names_mn_MN
00000000010e7660 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_mn_MN
00000000010e7680 l     O .data	0000000000000068              my_locale_month_names_ms_MY
00000000010e7700 l     O .data	0000000000000068              my_locale_ab_month_names_ms_MY
00000000010e7780 l     O .data	0000000000000040              my_locale_day_names_ms_MY
00000000010e77c0 l     O .data	0000000000000040              my_locale_ab_day_names_ms_MY
00000000010e7800 l     O .data	0000000000000020              my_locale_typelib_month_names_ms_MY
00000000010e7820 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ms_MY
00000000010e7840 l     O .data	0000000000000020              my_locale_typelib_day_names_ms_MY
00000000010e7860 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ms_MY
00000000010e7880 l     O .data	0000000000000068              my_locale_month_names_nb_NO
00000000010e7900 l     O .data	0000000000000068              my_locale_ab_month_names_nb_NO
00000000010e7980 l     O .data	0000000000000040              my_locale_day_names_nb_NO
00000000010e79c0 l     O .data	0000000000000040              my_locale_ab_day_names_nb_NO
00000000010e7a00 l     O .data	0000000000000020              my_locale_typelib_month_names_nb_NO
00000000010e7a20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_nb_NO
00000000010e7a40 l     O .data	0000000000000020              my_locale_typelib_day_names_nb_NO
00000000010e7a60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_nb_NO
00000000010e7a80 l     O .data	0000000000000068              my_locale_month_names_nl_NL
00000000010e7b00 l     O .data	0000000000000068              my_locale_ab_month_names_nl_NL
00000000010e7b80 l     O .data	0000000000000040              my_locale_day_names_nl_NL
00000000010e7bc0 l     O .data	0000000000000040              my_locale_ab_day_names_nl_NL
00000000010e7c00 l     O .data	0000000000000020              my_locale_typelib_month_names_nl_NL
00000000010e7c20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_nl_NL
00000000010e7c40 l     O .data	0000000000000020              my_locale_typelib_day_names_nl_NL
00000000010e7c60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_nl_NL
00000000010e7c80 l     O .data	0000000000000068              my_locale_month_names_pl_PL
00000000010e7d00 l     O .data	0000000000000068              my_locale_ab_month_names_pl_PL
00000000010e7d80 l     O .data	0000000000000040              my_locale_day_names_pl_PL
00000000010e7dc0 l     O .data	0000000000000040              my_locale_ab_day_names_pl_PL
00000000010e7e00 l     O .data	0000000000000020              my_locale_typelib_month_names_pl_PL
00000000010e7e20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_pl_PL
00000000010e7e40 l     O .data	0000000000000020              my_locale_typelib_day_names_pl_PL
00000000010e7e60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_pl_PL
00000000010e7e80 l     O .data	0000000000000068              my_locale_month_names_pt_BR
00000000010e7f00 l     O .data	0000000000000068              my_locale_ab_month_names_pt_BR
00000000010e7f80 l     O .data	0000000000000040              my_locale_day_names_pt_BR
00000000010e7fc0 l     O .data	0000000000000040              my_locale_ab_day_names_pt_BR
00000000010e8000 l     O .data	0000000000000020              my_locale_typelib_month_names_pt_BR
00000000010e8020 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_pt_BR
00000000010e8040 l     O .data	0000000000000020              my_locale_typelib_day_names_pt_BR
00000000010e8060 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_pt_BR
00000000010e8080 l     O .data	0000000000000068              my_locale_month_names_pt_PT
00000000010e8100 l     O .data	0000000000000068              my_locale_ab_month_names_pt_PT
00000000010e8180 l     O .data	0000000000000040              my_locale_day_names_pt_PT
00000000010e81c0 l     O .data	0000000000000040              my_locale_ab_day_names_pt_PT
00000000010e8200 l     O .data	0000000000000020              my_locale_typelib_month_names_pt_PT
00000000010e8220 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_pt_PT
00000000010e8240 l     O .data	0000000000000020              my_locale_typelib_day_names_pt_PT
00000000010e8260 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_pt_PT
00000000010e8280 l     O .data	0000000000000068              my_locale_month_names_ro_RO
00000000010e8300 l     O .data	0000000000000068              my_locale_ab_month_names_ro_RO
00000000010e8380 l     O .data	0000000000000040              my_locale_day_names_ro_RO
00000000010e83c0 l     O .data	0000000000000040              my_locale_ab_day_names_ro_RO
00000000010e8400 l     O .data	0000000000000020              my_locale_typelib_month_names_ro_RO
00000000010e8420 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ro_RO
00000000010e8440 l     O .data	0000000000000020              my_locale_typelib_day_names_ro_RO
00000000010e8460 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ro_RO
00000000010e8480 l     O .data	0000000000000068              my_locale_month_names_ru_RU
00000000010e8500 l     O .data	0000000000000068              my_locale_ab_month_names_ru_RU
00000000010e8580 l     O .data	0000000000000040              my_locale_day_names_ru_RU
00000000010e85c0 l     O .data	0000000000000040              my_locale_ab_day_names_ru_RU
00000000010e8600 l     O .data	0000000000000020              my_locale_typelib_month_names_ru_RU
00000000010e8620 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ru_RU
00000000010e8640 l     O .data	0000000000000020              my_locale_typelib_day_names_ru_RU
00000000010e8660 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ru_RU
00000000010e8680 l     O .data	0000000000000068              my_locale_month_names_ru_UA
00000000010e8700 l     O .data	0000000000000068              my_locale_ab_month_names_ru_UA
00000000010e8780 l     O .data	0000000000000040              my_locale_day_names_ru_UA
00000000010e87c0 l     O .data	0000000000000040              my_locale_ab_day_names_ru_UA
00000000010e8800 l     O .data	0000000000000020              my_locale_typelib_month_names_ru_UA
00000000010e8820 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ru_UA
00000000010e8840 l     O .data	0000000000000020              my_locale_typelib_day_names_ru_UA
00000000010e8860 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ru_UA
00000000010e8880 l     O .data	0000000000000068              my_locale_month_names_sk_SK
00000000010e8900 l     O .data	0000000000000068              my_locale_ab_month_names_sk_SK
00000000010e8980 l     O .data	0000000000000040              my_locale_day_names_sk_SK
00000000010e89c0 l     O .data	0000000000000040              my_locale_ab_day_names_sk_SK
00000000010e8a00 l     O .data	0000000000000020              my_locale_typelib_month_names_sk_SK
00000000010e8a20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_sk_SK
00000000010e8a40 l     O .data	0000000000000020              my_locale_typelib_day_names_sk_SK
00000000010e8a60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_sk_SK
00000000010e8a80 l     O .data	0000000000000068              my_locale_month_names_sl_SI
00000000010e8b00 l     O .data	0000000000000068              my_locale_ab_month_names_sl_SI
00000000010e8b80 l     O .data	0000000000000040              my_locale_day_names_sl_SI
00000000010e8bc0 l     O .data	0000000000000040              my_locale_ab_day_names_sl_SI
00000000010e8c00 l     O .data	0000000000000020              my_locale_typelib_month_names_sl_SI
00000000010e8c20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_sl_SI
00000000010e8c40 l     O .data	0000000000000020              my_locale_typelib_day_names_sl_SI
00000000010e8c60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_sl_SI
00000000010e8c80 l     O .data	0000000000000068              my_locale_month_names_sq_AL
00000000010e8d00 l     O .data	0000000000000068              my_locale_ab_month_names_sq_AL
00000000010e8d80 l     O .data	0000000000000040              my_locale_day_names_sq_AL
00000000010e8dc0 l     O .data	0000000000000040              my_locale_ab_day_names_sq_AL
00000000010e8e00 l     O .data	0000000000000020              my_locale_typelib_month_names_sq_AL
00000000010e8e20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_sq_AL
00000000010e8e40 l     O .data	0000000000000020              my_locale_typelib_day_names_sq_AL
00000000010e8e60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_sq_AL
00000000010e8e80 l     O .data	0000000000000068              my_locale_month_names_sr_RS
00000000010e8f00 l     O .data	0000000000000068              my_locale_ab_month_names_sr_RS
00000000010e8f80 l     O .data	0000000000000040              my_locale_day_names_sr_RS
00000000010e8fc0 l     O .data	0000000000000040              my_locale_ab_day_names_sr_RS
00000000010e9000 l     O .data	0000000000000020              my_locale_typelib_month_names_sr_RS
00000000010e9020 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_sr_RS
00000000010e9040 l     O .data	0000000000000020              my_locale_typelib_day_names_sr_RS
00000000010e9060 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_sr_RS
00000000010e9080 l     O .data	0000000000000068              my_locale_month_names_sv_SE
00000000010e9100 l     O .data	0000000000000068              my_locale_ab_month_names_sv_SE
00000000010e9180 l     O .data	0000000000000040              my_locale_day_names_sv_SE
00000000010e91c0 l     O .data	0000000000000040              my_locale_ab_day_names_sv_SE
00000000010e9200 l     O .data	0000000000000020              my_locale_typelib_month_names_sv_SE
00000000010e9220 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_sv_SE
00000000010e9240 l     O .data	0000000000000020              my_locale_typelib_day_names_sv_SE
00000000010e9260 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_sv_SE
00000000010e9280 l     O .data	0000000000000068              my_locale_month_names_ta_IN
00000000010e9300 l     O .data	0000000000000068              my_locale_ab_month_names_ta_IN
00000000010e9380 l     O .data	0000000000000040              my_locale_day_names_ta_IN
00000000010e93c0 l     O .data	0000000000000040              my_locale_ab_day_names_ta_IN
00000000010e9400 l     O .data	0000000000000020              my_locale_typelib_month_names_ta_IN
00000000010e9420 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ta_IN
00000000010e9440 l     O .data	0000000000000020              my_locale_typelib_day_names_ta_IN
00000000010e9460 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ta_IN
00000000010e9480 l     O .data	0000000000000068              my_locale_month_names_te_IN
00000000010e9500 l     O .data	0000000000000068              my_locale_ab_month_names_te_IN
00000000010e9580 l     O .data	0000000000000040              my_locale_day_names_te_IN
00000000010e95c0 l     O .data	0000000000000040              my_locale_ab_day_names_te_IN
00000000010e9600 l     O .data	0000000000000020              my_locale_typelib_month_names_te_IN
00000000010e9620 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_te_IN
00000000010e9640 l     O .data	0000000000000020              my_locale_typelib_day_names_te_IN
00000000010e9660 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_te_IN
00000000010e9680 l     O .data	0000000000000068              my_locale_month_names_th_TH
00000000010e9700 l     O .data	0000000000000068              my_locale_ab_month_names_th_TH
00000000010e9780 l     O .data	0000000000000040              my_locale_day_names_th_TH
00000000010e97c0 l     O .data	0000000000000040              my_locale_ab_day_names_th_TH
00000000010e9800 l     O .data	0000000000000020              my_locale_typelib_month_names_th_TH
00000000010e9820 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_th_TH
00000000010e9840 l     O .data	0000000000000020              my_locale_typelib_day_names_th_TH
00000000010e9860 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_th_TH
00000000010e9880 l     O .data	0000000000000068              my_locale_month_names_tr_TR
00000000010e9900 l     O .data	0000000000000068              my_locale_ab_month_names_tr_TR
00000000010e9980 l     O .data	0000000000000040              my_locale_day_names_tr_TR
00000000010e99c0 l     O .data	0000000000000040              my_locale_ab_day_names_tr_TR
00000000010e9a00 l     O .data	0000000000000020              my_locale_typelib_month_names_tr_TR
00000000010e9a20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_tr_TR
00000000010e9a40 l     O .data	0000000000000020              my_locale_typelib_day_names_tr_TR
00000000010e9a60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_tr_TR
00000000010e9a80 l     O .data	0000000000000068              my_locale_month_names_uk_UA
00000000010e9b00 l     O .data	0000000000000068              my_locale_ab_month_names_uk_UA
00000000010e9b80 l     O .data	0000000000000040              my_locale_day_names_uk_UA
00000000010e9bc0 l     O .data	0000000000000040              my_locale_ab_day_names_uk_UA
00000000010e9c00 l     O .data	0000000000000020              my_locale_typelib_month_names_uk_UA
00000000010e9c20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_uk_UA
00000000010e9c40 l     O .data	0000000000000020              my_locale_typelib_day_names_uk_UA
00000000010e9c60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_uk_UA
00000000010e9c80 l     O .data	0000000000000068              my_locale_month_names_ur_PK
00000000010e9d00 l     O .data	0000000000000068              my_locale_ab_month_names_ur_PK
00000000010e9d80 l     O .data	0000000000000040              my_locale_day_names_ur_PK
00000000010e9dc0 l     O .data	0000000000000040              my_locale_ab_day_names_ur_PK
00000000010e9e00 l     O .data	0000000000000020              my_locale_typelib_month_names_ur_PK
00000000010e9e20 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_ur_PK
00000000010e9e40 l     O .data	0000000000000020              my_locale_typelib_day_names_ur_PK
00000000010e9e60 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_ur_PK
00000000010e9e80 l     O .data	0000000000000068              my_locale_month_names_vi_VN
00000000010e9f00 l     O .data	0000000000000068              my_locale_ab_month_names_vi_VN
00000000010e9f80 l     O .data	0000000000000040              my_locale_day_names_vi_VN
00000000010e9fc0 l     O .data	0000000000000040              my_locale_ab_day_names_vi_VN
00000000010ea000 l     O .data	0000000000000020              my_locale_typelib_month_names_vi_VN
00000000010ea020 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_vi_VN
00000000010ea040 l     O .data	0000000000000020              my_locale_typelib_day_names_vi_VN
00000000010ea060 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_vi_VN
00000000010ea080 l     O .data	0000000000000068              my_locale_month_names_zh_CN
00000000010ea100 l     O .data	0000000000000068              my_locale_ab_month_names_zh_CN
00000000010ea180 l     O .data	0000000000000040              my_locale_day_names_zh_CN
00000000010ea1c0 l     O .data	0000000000000040              my_locale_ab_day_names_zh_CN
00000000010ea200 l     O .data	0000000000000020              my_locale_typelib_month_names_zh_CN
00000000010ea220 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_zh_CN
00000000010ea240 l     O .data	0000000000000020              my_locale_typelib_day_names_zh_CN
00000000010ea260 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_zh_CN
00000000010ea280 l     O .data	0000000000000068              my_locale_month_names_zh_TW
00000000010ea300 l     O .data	0000000000000068              my_locale_ab_month_names_zh_TW
00000000010ea380 l     O .data	0000000000000040              my_locale_day_names_zh_TW
00000000010ea3c0 l     O .data	0000000000000040              my_locale_ab_day_names_zh_TW
00000000010ea400 l     O .data	0000000000000020              my_locale_typelib_month_names_zh_TW
00000000010ea420 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_zh_TW
00000000010ea440 l     O .data	0000000000000020              my_locale_typelib_day_names_zh_TW
00000000010ea460 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_zh_TW
00000000010ea480 l     O .data	0000000000000068              my_locale_month_names_el_GR
00000000010ea500 l     O .data	0000000000000068              my_locale_ab_month_names_el_GR
00000000010ea580 l     O .data	0000000000000040              my_locale_day_names_el_GR
00000000010ea5c0 l     O .data	0000000000000040              my_locale_ab_day_names_el_GR
00000000010ea600 l     O .data	0000000000000020              my_locale_typelib_month_names_el_GR
00000000010ea620 l     O .data	0000000000000020              my_locale_typelib_ab_month_names_el_GR
00000000010ea640 l     O .data	0000000000000020              my_locale_typelib_day_names_el_GR
00000000010ea660 l     O .data	0000000000000020              my_locale_typelib_ab_day_names_el_GR
0000000000c3ecc0 l     O .rodata	0000000000000025              my_locale_by_number(unsigned int)::__PRETTY_FUNCTION__
00000000006d8254 l     F .text	0000000000000074              my_locale_by_name(MY_LOCALE**, char const*)
0000000000c3ed00 l     O .rodata	000000000000002a              my_locale_by_name(char const*)::__PRETTY_FUNCTION__
00000000006d8440 l     F .text	0000000000002e22              __static_initialization_and_destruction_0(int, int)
00000000006db262 l     F .text	0000000000000015              _GLOBAL__sub_I_sql_locale.cc
0000000000000000 l    df *ABS*	0000000000000000              rpl_rli.cc
00000000006db334 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000006db3a5 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000006db425 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006db53c l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000006db5b9 l     F .text	0000000000000065              inline_mysql_cond_init
00000000006db61e l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000006db68d l     F .text	0000000000000133              inline_mysql_cond_wait
00000000006db7c0 l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000006db903 l     F .text	000000000000006c              inline_mysql_cond_broadcast
0000000000c3fdb0 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
00000000006db96f l     F .text	000000000000012e              inline_mysql_file_stat(unsigned int, char const*, unsigned int, char const*, stat*, int)
00000000006dba9d l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
00000000006dbbc7 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
0000000000c3ee20 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c3fd80 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c3eed0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c3eed4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c3eed8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c3eedc l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c3eee0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105eb20 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c3fde0 l     O .rodata	0000000000000048              THD::enter_cond(st_mysql_cond*, st_mysql_mutex*, char const*)::__PRETTY_FUNCTION__
0000000000c3fd40 l     O .rodata	0000000000000036              init_relay_log_info(Relay_log_info*, char const*)::__PRETTY_FUNCTION__
0000000001376740 l     O .bss	0000000000000001              init_relay_log_info(Relay_log_info*, char const*)::name_warning_sent
00000000006dd35b l     F .text	000000000000018e              count_relay_log_space(Relay_log_info*)
00000000006dd201 l     F .text	000000000000015a              add_relay_log(Relay_log_info*, st_log_info*)
0000000000c3fe40 l     O .rodata	0000000000000040              purge_relay_logs(Relay_log_info*, THD*, bool, char const**)::__PRETTY_FUNCTION__
0000000000c3fe80 l     O .rodata	000000000000003a              Relay_log_info::is_until_satisfied(THD*, Log_event*)::__PRETTY_FUNCTION__
0000000000c3fec0 l     O .rodata	0000000000000031              Relay_log_info::cleanup_context(THD*, bool)::__PRETTY_FUNCTION__
0000000000c3ff00 l     O .rodata	000000000000002c              Relay_log_info::clear_tables_to_lock()::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              rpl_mi.cc
00000000006dfa86 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000006dfaf7 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000006dfb77 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006dfc8e l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000006dfd0b l     F .text	0000000000000065              inline_mysql_cond_init
00000000006dfd70 l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000006dfddf l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
00000000006dff09 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
0000000000c3ff40 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c3ff48 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c3ff4c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c3ff50 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c3ff54 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c3ff58 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105eb80 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000006e0519 l     F .text	0000000000000185              init_master_log_pos(Master_info*)
0000000000c402a0 l     O .rodata	0000000000000027              init_master_log_pos(Master_info*)::__PRETTY_FUNCTION__
0000000000c402e0 l     O .rodata	0000000000000030              flush_master_info(Master_info*, bool, bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_servers.cc
00000000006e18eb l     F .text	000000000000005f              inline_mysql_rwlock_init
00000000006e194a l     F .text	000000000000006f              inline_mysql_rwlock_destroy
00000000006e19b9 l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
00000000006e1ac4 l     F .text	000000000000010b              inline_mysql_rwlock_wrlock
00000000006e1bcf l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000c40340 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c40960 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c403b4 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c403b8 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c403bc l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c403c0 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c403c4 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105ebe0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001376760 l     O .bss	0000000000000058              servers_cache
00000000013767c0 l     O .bss	0000000000000038              mem
0000000001376800 l     O .bss	0000000000000040              THR_LOCK_servers
00000000006e1c3b l     F .text	00000000000000b3              servers_cache_get_key(st_federated_server*, unsigned long*, char)
0000000001376840 l     O .bss	0000000000000004              key_rwlock_THR_LOCK_servers
00000000010eaa10 l     O .data	0000000000000018              all_servers_cache_rwlocks
00000000006e1cee l     F .text	0000000000000050              init_servers_cache_psi_keys()
00000000006e1f0d l     F .text	000000000000015b              servers_load(THD*, TABLE_LIST*)
00000000006e228e l     F .text	0000000000000460              get_server_from_table_to_cache(TABLE*)
00000000006e26ee l     F .text	0000000000000156              insert_server(THD*, st_federated_server*)
00000000006e2c54 l     F .text	0000000000000289              insert_server_record(TABLE*, st_federated_server*)
00000000006e2844 l     F .text	00000000000000f5              insert_server_record_into_cache(st_federated_server*)
00000000006e2939 l     F .text	000000000000031b              store_server_fields(TABLE*, st_federated_server*)
00000000006e30fe l     F .text	0000000000000152              delete_server_record_in_cache(st_lex_server_options*)
00000000006e3902 l     F .text	0000000000000209              delete_server_record(TABLE*, char*, unsigned long)
00000000006e3250 l     F .text	0000000000000176              update_server(THD*, st_federated_server*, st_federated_server*)
00000000006e3695 l     F .text	000000000000026d              update_server_record(TABLE*, st_federated_server*)
00000000006e33c6 l     F .text	00000000000000e8              update_server_record_in_cache(st_federated_server*, st_federated_server*)
00000000006e34ae l     F .text	00000000000001e7              merge_server_struct(st_federated_server*, st_federated_server*)
00000000006e3e13 l     F .text	00000000000003b5              prepare_server_struct_for_insert(st_lex_server_options*)
00000000006e41c8 l     F .text	0000000000000357              prepare_server_struct_for_update(st_lex_server_options*, st_federated_server*, st_federated_server*)
00000000006e4605 l     F .text	000000000000024a              clone_server(st_mem_root*, st_federated_server const*, st_federated_server*)
0000000000000000 l    df *ABS*	0000000000000000              sql_audit.cc
00000000006e4a27 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000006e4a98 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000006e4b18 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006e4c2f l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000c409a0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c409a8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c409ac l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c409b0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c409b4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c409b8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105ec40 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001376880 l     O .bss	0000000000000070              LOCK_audit_mask
00000000006e4cac l     F .text	000000000000002f              set_audit_mask(unsigned long*, unsigned int)
00000000006e4cdb l     F .text	0000000000000027              add_audit_mask(unsigned long*, unsigned long const*)
00000000006e4d02 l     F .text	0000000000000025              check_audit_mask(unsigned long const*, unsigned long const*)
00000000006e4d27 l     F .text	00000000000005e5              general_class_handler(THD*, unsigned int, __va_list_tag*)
00000000006e625d l     F .text	00000000000000d6              event_class_dispatch(THD*, unsigned int, void const*)
00000000006e530c l     F .text	0000000000000652              connection_class_handler(THD*, unsigned int, __va_list_tag*)
00000000010eaa30 l     O .data	0000000000000010              audit_handlers
0000000000c409f4 l     O .rodata	0000000000000004              audit_handlers_count
00000000006e595e l     F .text	0000000000000127              acquire_plugins(THD*, st_plugin_int**, void*)
0000000000c40b60 l     O .rodata	000000000000002f              mysql_audit_notify(THD*, unsigned int, unsigned int, ...)::__PRETTY_FUNCTION__
0000000000c40ba0 l     O .rodata	0000000000000020              mysql_audit_free_thd(THD*)::__PRETTY_FUNCTION__
00000000013768f0 l     O .bss	0000000000000004              key_LOCK_audit_mask
00000000010eaa40 l     O .data	0000000000000018              all_audit_mutexes
00000000006e5e49 l     F .text	000000000000004f              init_audit_psi_keys()
00000000006e6020 l     F .text	000000000000005c              calc_class_mask(THD*, st_plugin_int**, void*)
00000000006e61b3 l     F .text	00000000000000aa              plugins_dispatch(THD*, st_plugin_int**, void*)
0000000000000000 l    df *ABS*	0000000000000000              sql_connect.cc
00000000006e6333 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006e644a l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000006e64c7 l     F .text	000000000000006f              inline_mysql_thread_set_psi_id
0000000000c40bc0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c41020 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c41060 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000c40c48 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c40c4c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c40c50 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c40c54 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c40c58 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105eca0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001376900 l     O .bss	0000000000000058              hash_user_connections
0000000000c40f20 l     O .rodata	0000000000000053              get_or_create_user_conn(THD*, char const*, char const*, user_resources const*)::__PRETTY_FUNCTION__
0000000000c40f80 l     O .rodata	000000000000002b              decrease_user_connections(user_conn*)::__PRETTY_FUNCTION__
0000000000c40fc0 l     O .rodata	0000000000000023              release_user_connection(THD*)::__PRETTY_FUNCTION__
0000000000c40ff0 l     O .rodata	000000000000001b              check_mqh(THD*, unsigned int)::__PRETTY_FUNCTION__
00000000006e7310 l     F .text	00000000000006d9              check_connection(THD*)
0000000000000000 l    df *ABS*	0000000000000000              scheduler.cc
00000000006e8620 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000c410a0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000006e869d l     F .text	000000000000005a              no_threads_end(THD*, bool)
00000000010eaa60 l     O .data	0000000000000048              one_thread_scheduler_functions
00000000010eaac0 l     O .data	0000000000000048              one_thread_per_connection_scheduler_functions
00000000006e86f7 l     F .text	0000000000000050              scheduler_wait_lock_begin
00000000006e8747 l     F .text	000000000000004b              scheduler_wait_lock_end
00000000006e8792 l     F .text	0000000000000050              scheduler_wait_sync_begin
00000000006e87e2 l     F .text	000000000000004b              scheduler_wait_sync_end
00000000006e882d l     F .text	000000000000002d              scheduler_init()
0000000001376960 l     O .bss	0000000000000008              saved_thread_scheduler
0000000001376968 l     O .bss	0000000000000004              saved_thread_handling
0000000000c41120 l     O .rodata	0000000000000032              my_thread_scheduler_set::__PRETTY_FUNCTION__
0000000000c41160 l     O .rodata	0000000000000020              my_thread_scheduler_reset::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_profile.cc
0000000000c41b80 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
0000000000c41b40 l     O .rodata	000000000000002b              max_my_decimal(my_decimal*, int, int)::__PRETTY_FUNCTION__
0000000000c41218 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c41ac0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c41a00 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c41a40 l     O .rodata	0000000000000025              Item_int::val_int()::__PRETTY_FUNCTION__
0000000000c41a80 l     O .rodata	0000000000000024              Item_int::val_real()::__PRETTY_FUNCTION__
0000000000c41b00 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000c41274 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c41278 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c4127c l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c41280 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c41284 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105ed00 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c417c0 l     O .rodata	0000000000000056              PROF_MEASUREMENT::set_label(char const*, char const*, char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000c418a0 l     O .rodata	0000000000000032              QUERY_PROFILE::set_query_source(char*, unsigned int)::__PRETTY_FUNCTION__
0000000000c418e0 l     O .rodata	0000000000000054              QUERY_PROFILE::new_status(char const*, char const*, char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000c41980 l     O .rodata	000000000000002d              PROFILING::start_new_query(char const*)::__PRETTY_FUNCTION__
0000000000c41820 l     O .rodata	0000000000000039              Queue<PROF_MEASUREMENT>::push_back(PROF_MEASUREMENT*)::__PRETTY_FUNCTION__
0000000000c41860 l     O .rodata	0000000000000036              Queue<PROF_MEASUREMENT>::is_empty()::__PRETTY_FUNCTION__
0000000000c41940 l     O .rodata	0000000000000033              Queue<QUERY_PROFILE>::is_empty()::__PRETTY_FUNCTION__
0000000000c419c0 l     O .rodata	0000000000000036              Queue<QUERY_PROFILE>::push_back(QUERY_PROFILE*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              event_parse_data.cc
0000000000c41bc0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c41bc8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c41bcc l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c41bd0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c41bd4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c41bd8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105ed60 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c41fa0 l     O .rodata	000000000000003d              Event_parse_data::check_if_in_the_past(THD*, long)::__PRETTY_FUNCTION__
0000000000c41fe0 l     O .rodata	000000000000002c              Event_parse_data::init_execute_at(THD*)::__PRETTY_FUNCTION__
0000000000c42020 l     O .rodata	000000000000002a              Event_parse_data::init_interval(THD*)::__PRETTY_FUNCTION__
0000000000c42060 l     O .rodata	000000000000002a              Event_parse_data::init_definer(THD*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_signal.cc
0000000000c420a0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c420a8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c420ac l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c420b0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c420b4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c420b8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105edc0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c42660 l     O .rodata	0000000000000028              Sql_statement::~Sql_statement()::__PRETTY_FUNCTION__
000000000105f000 l     O .data.rel.ro	00000000000000a0              Diag_statement_item_names
0000000000c42580 l     O .rodata	0000000000000036              Signal_common::eval_defaults(THD*, MYSQL_ERROR*)::__PRETTY_FUNCTION__
00000000006ec7c0 l     F .text	00000000000002ac              assign_fixed_string(st_mem_root*, charset_info_st*, unsigned long, String*, String const*)
0000000000c425c0 l     O .rodata	0000000000000053              assign_fixed_string(st_mem_root*, charset_info_st*, unsigned long, String*, String const*)::__PRETTY_FUNCTION__
00000000006eca6c l     F .text	0000000000000218              assign_condition_item(st_mem_root*, char const*, THD*, Item*, String*)
00000000010eae20 l     O .data	00000000000000a0              Signal_common::eval_signal_informations(THD*, MYSQL_ERROR*)::map
0000000000c42620 l     O .rodata	0000000000000038              Signal_common::raise_condition(THD*, MYSQL_ERROR*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              rpl_handler.cc
0000000000c42c10 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000c42720 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c42728 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c4272c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c42730 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c42734 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c42738 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105f0a0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000013769a0 l     O .bss	0000000000000004              RPL_TRANS_BINLOG_INFO
00000000013769c0 l     O .bss	0000000000000090              delegates_init()::trans_mem
0000000001376a60 l     O .bss	0000000000000090              delegates_init()::storage_mem
0000000001376b00 l     O .bss	0000000000000090              delegates_init()::transmit_mem
0000000001376ba0 l     O .bss	0000000000000090              delegates_init()::relay_io_mem
0000000000000000 l    df *ABS*	0000000000000000              mdl.cc
00000000006f0b5a l     F .text	0000000000000071              inline_mysql_mutex_init
00000000006f0bcb l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000006f0c4b l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006f0d62 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000006f0ddf l     F .text	000000000000005d              inline_mysql_prlock_init
00000000006f0e3c l     F .text	0000000000000078              inline_mysql_prlock_destroy
00000000006f0eb4 l     F .text	0000000000000111              inline_mysql_prlock_rdlock
00000000006f0fc5 l     F .text	0000000000000111              inline_mysql_prlock_wrlock
00000000006f10d6 l     F .text	0000000000000072              inline_mysql_prlock_unlock
00000000006f1148 l     F .text	0000000000000065              inline_mysql_cond_init
00000000006f11ad l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000006f121c l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000006f135f l     F .text	000000000000006c              inline_mysql_cond_signal
0000000000c42cc8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000001376c48 l     O .bss	0000000000000004              key_MDL_map_mutex
0000000001376c4c l     O .bss	0000000000000004              key_MDL_wait_LOCK_wait_status
00000000010eaec0 l     O .data	0000000000000030              all_mdl_mutexes
0000000001376c50 l     O .bss	0000000000000004              key_MDL_lock_rwlock
0000000001376c54 l     O .bss	0000000000000004              key_MDL_context_LOCK_waiting_for
00000000010eaf00 l     O .data	0000000000000030              all_mdl_rwlocks
0000000001376c58 l     O .bss	0000000000000004              key_MDL_wait_COND_wait_status
00000000010eaf30 l     O .data	0000000000000018              all_mdl_conds
00000000006f13cb l     F .text	00000000000000a1              init_mdl_psi_keys()
0000000001376c5c l     O .bss	0000000000000001              mdl_initialized
0000000000c43540 l     O .rodata	0000000000000042              Deadlock_detection_visitor::enter_node(MDL_context*)::__PRETTY_FUNCTION__
0000000000c43600 l     O .rodata	000000000000002c              MDL_object_lock::reset(MDL_key const*)::__PRETTY_FUNCTION__
0000000001376c60 l     O .bss	00000000000000e8              mdl_locks
00000000006f15f9 l     F .text	0000000000000048              mdl_locks_key
0000000000c43590 l     O .rodata	0000000000000010              mdl_init()::__PRETTY_FUNCTION__
0000000000c435a0 l     O .rodata	0000000000000018              MDL_map::destroy()::__PRETTY_FUNCTION__
0000000000c435c0 l     O .rodata	0000000000000032              MDL_map::find_or_insert(MDL_key const*)::__PRETTY_FUNCTION__
0000000000c43640 l     O .rodata	0000000000000036              MDL_map::move_from_hash_to_lock_mutex(MDL_lock*)::__PRETTY_FUNCTION__
0000000000c43680 l     O .rodata	0000000000000020              MDL_map::remove(MDL_lock*)::__PRETTY_FUNCTION__
0000000000c436a0 l     O .rodata	000000000000001c              MDL_context::destroy()::__PRETTY_FUNCTION__
0000000000c436c0 l     O .rodata	0000000000000034              MDL_lock::Ticket_list::add_ticket(MDL_ticket*)::__PRETTY_FUNCTION__
0000000000c43700 l     O .rodata	000000000000003b              MDL_lock::has_pending_conflicting_lock(enum_mdl_type)::__PRETTY_FUNCTION__
0000000000c43740 l     O .rodata	0000000000000031              MDL_context::try_acquire_lock(MDL_request*)::__PRETTY_FUNCTION__
0000000000c43780 l     O .rodata	0000000000000044              MDL_context::try_acquire_lock_impl(MDL_request*, MDL_ticket**)::__PRETTY_FUNCTION__
0000000000c437e0 l     O .rodata	000000000000002d              MDL_context::clone_ticket(MDL_request*)::__PRETTY_FUNCTION__
0000000000c43820 l     O .rodata	0000000000000034              MDL_context::acquire_lock(MDL_request*, unsigned long)::__PRETTY_FUNCTION__
0000000000c43860 l     O .rodata	0000000000000047              MDL_context::upgrade_shared_lock_to_exclusive(MDL_ticket*, unsigned long)::__PRETTY_FUNCTION__
0000000000c438c0 l     O .rodata	000000000000003f              MDL_context::release_lock(enum_mdl_duration, MDL_ticket*)::__PRETTY_FUNCTION__
0000000000c43900 l     O .rodata	000000000000002c              MDL_context::release_lock(MDL_ticket*)::__PRETTY_FUNCTION__
0000000000c43940 l     O .rodata	000000000000003a              MDL_context::release_all_locks_for_name(MDL_ticket*)::__PRETTY_FUNCTION__
0000000000c43980 l     O .rodata	0000000000000039              MDL_ticket::downgrade_exclusive_lock(enum_mdl_type)::__PRETTY_FUNCTION__
0000000000c439c0 l     O .rodata	0000000000000066              MDL_context::is_lock_owner(MDL_key::enum_mdl_namespace, char const*, char const*, enum_mdl_type)::__PRETTY_FUNCTION__
0000000000c43a40 l     O .rodata	0000000000000044              MDL_context::set_lock_duration(MDL_ticket*, enum_mdl_duration)::__PRETTY_FUNCTION__
0000000000c43aa0 l     O .rodata	000000000000003b              MDL_context::set_transaction_duration_for_all_locks()::__PRETTY_FUNCTION__
00000000006f509e l     F .text	000000000000002c              __static_initialization_and_destruction_0(int, int)
00000000006f50ca l     F .text	0000000000000015              _GLOBAL__sub_I_mdl.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_admin.cc
00000000006f6250 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006f6367 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000006f63e4 l     F .text	000000000000012e              inline_mysql_file_stat(unsigned int, char const*, unsigned int, char const*, stat*, int)
00000000006f6512 l     F .text	000000000000012e              inline_mysql_file_rename(unsigned int, char const*, unsigned int, char const*, char const*, int)
0000000000c44560 l     O .rodata	000000000000002a              MDL_request::set_type(enum_mdl_type)::__PRETTY_FUNCTION__
0000000000c43b30 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c445a0 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c44520 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000c444e0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c44460 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c444a0 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000c43c0c l     O .rodata	0000000000000004              SRID_SIZE
0000000000c43c10 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c43c14 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c43c18 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c43c1c l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105f100 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c445e0 l     O .rodata	0000000000000028              Sql_statement::~Sql_statement()::__PRETTY_FUNCTION__
00000000006f6640 l     F .text	0000000000000100              send_check_errmsg(THD*, TABLE_LIST*, char const*, char const*)
00000000006f6740 l     F .text	000000000000082f              prepare_for_repair(THD*, TABLE_LIST*, st_ha_check_opt*)
0000000000c44340 l     O .rodata	0000000000000039              prepare_for_repair(THD*, TABLE_LIST*, st_ha_check_opt*)::__PRETTY_FUNCTION__
00000000006f6f6f l     F .text	0000000000000054              table_not_corrupt_error(unsigned int)
00000000006f6fc3 l     F .text	00000000000025b3              mysql_admin_table(THD*, TABLE_LIST*, st_ha_check_opt*, char const*, thr_lock_type, bool, bool, unsigned int, int (*)(THD*, TABLE_LIST*, st_ha_check_opt*), int (handler::*)(THD*, st_ha_check_opt*), int (*)(THD*, TABLE_LIST*))
0000000000c44380 l     O .rodata	00000000000000d5              mysql_admin_table(THD*, TABLE_LIST*, st_ha_check_opt*, char const*, thr_lock_type, bool, bool, unsigned int, int (*)(THD*, TABLE_LIST*, st_ha_check_opt*), int (handler::*)(THD*, st_ha_check_opt*), int (*)(THD*, TABLE_LIST*))::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              transaction.cc
0000000000c44620 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c44628 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c4462c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c44630 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c44634 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c44638 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105f160 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000006fa0a1 l     F .text	0000000000000113              trans_check(THD*)
0000000000c44910 l     O .rodata	0000000000000017              trans_check(THD*)::__PRETTY_FUNCTION__
00000000006fa1b4 l     F .text	0000000000000094              xa_trans_rolled_back(st_xid_state*)
00000000006fa248 l     F .text	0000000000000056              xa_trans_force_rollback(THD*)
0000000000c44930 l     O .rodata	000000000000001d              trans_begin(THD*, unsigned int)::__PRETTY_FUNCTION__
0000000000c44960 l     O .rodata	0000000000000023              trans_rollback_implicit(THD*)::__PRETTY_FUNCTION__
0000000000c44990 l     O .rodata	000000000000001d              trans_commit_stmt(THD*)::__PRETTY_FUNCTION__
0000000000c449b0 l     O .rodata	000000000000001f              trans_rollback_stmt(THD*)::__PRETTY_FUNCTION__
00000000006faca8 l     F .text	000000000000009b              find_savepoint(THD*, st_mysql_lex_string)
0000000000c449d0 l     O .rodata	000000000000001a              trans_xa_start(THD*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sys_vars.cc
00000000006fbfd8 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000006fc0ef l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000006fc16c l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
00000000006fc277 l     F .text	000000000000010b              inline_mysql_rwlock_wrlock
00000000006fc382 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000c4bc40 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000c44a90 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c44ae0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c44ae4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c44ae8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c44aec l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c44af0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105f1c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c4bc00 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
00000000006fc3ee l     F .text	00000000000000e1              my_count_bits
0000000000c44db4 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
00000000010eafc0 l     O .data	0000000000000018              bool_values
0000000000c4d100 l     O .rodata	00000000000000d9              Sys_var_enum::Sys_var_enum(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)::__PRETTY_FUNCTION__
0000000000c4d940 l     O .rodata	00000000000000d7              Sys_var_mybool::Sys_var_mybool(char const*, char const*, int, long, unsigned long, CMD_LINE, char, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c4cd00 l     O .rodata	00000000000000eb              Sys_var_charptr::Sys_var_charptr(char const*, char const*, int, long, unsigned long, CMD_LINE, charset_enum, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c4cb60 l     O .rodata	000000000000003d              Sys_var_charptr::session_update(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4cba0 l     O .rodata	0000000000000043              Sys_var_charptr::session_save_default(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4cb20 l     O .rodata	000000000000003a              Sys_var_proxy_user::do_check(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4ca20 l     O .rodata	0000000000000040              Sys_var_proxy_user::session_update(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4c9e0 l     O .rodata	000000000000003f              Sys_var_proxy_user::global_update(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4cac0 l     O .rodata	0000000000000046              Sys_var_proxy_user::session_save_default(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4ca60 l     O .rodata	0000000000000045              Sys_var_proxy_user::global_save_default(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4cc00 l     O .rodata	00000000000000ea              Sys_var_lexstring::Sys_var_lexstring(char const*, char const*, int, long, unsigned long, CMD_LINE, charset_enum, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)::__PRETTY_FUNCTION__
0000000000c4ce00 l     O .rodata	00000000000000f6              Sys_var_keycache::Sys_var_keycache(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(THD*, st_key_cache*, long, unsigned long long), char const*)::__PRETTY_FUNCTION__
0000000000c4cf00 l     O .rodata	00000000000000e6              Sys_var_double::Sys_var_double(char const*, char const*, int, long, unsigned long, CMD_LINE, double, double, double, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c4d000 l     O .rodata	00000000000000e4              Sys_var_flagset::Sys_var_flagset(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)::__PRETTY_FUNCTION__
0000000000c4d6a0 l     O .rodata	00000000000000dc              Sys_var_set::Sys_var_set(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)::__PRETTY_FUNCTION__
0000000000c4d1e0 l     O .rodata	00000000000000db              Sys_var_plugin::Sys_var_plugin(char const*, char const*, int, long, unsigned long, CMD_LINE, int, char**, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c4c980 l     O .rodata	0000000000000041              Sys_var_plugin::global_save_default(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4d2c0 l     O .rodata	00000000000000d0              Sys_var_debug_sync::Sys_var_debug_sync(char const*, char const*, int, CMD_LINE, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c4c8e0 l     O .rodata	000000000000003f              Sys_var_debug_sync::global_update(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4c920 l     O .rodata	0000000000000045              Sys_var_debug_sync::global_save_default(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4c880 l     O .rodata	0000000000000047              Sys_var_debug_sync::global_value_ptr(THD*, st_mysql_lex_string*)::__PRETTY_FUNCTION__
0000000000c4d3a0 l     O .rodata	00000000000000d7              Sys_var_bit::Sys_var_bit(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, char, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)::__PRETTY_FUNCTION__
0000000000c4d480 l     O .rodata	000000000000013e              Sys_var_session_special::Sys_var_session_special(char const*, char const*, int, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(THD*, set_var*), unsigned long long (*)(THD*), char const*)::__PRETTY_FUNCTION__
0000000000c4c7c0 l     O .rodata	0000000000000044              Sys_var_session_special::global_update(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4c820 l     O .rodata	000000000000004a              Sys_var_session_special::global_save_default(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4c760 l     O .rodata	000000000000004c              Sys_var_session_special::global_value_ptr(THD*, st_mysql_lex_string*)::__PRETTY_FUNCTION__
0000000000c4d5c0 l     O .rodata	00000000000000ca              Sys_var_have::Sys_var_have(char const*, char const*, int, long, unsigned long, CMD_LINE, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c4c720 l     O .rodata	0000000000000034              Sys_var_have::do_check(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4c6e0 l     O .rodata	000000000000003a              Sys_var_have::session_update(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4c6a0 l     O .rodata	0000000000000039              Sys_var_have::global_update(THD*, set_var*)::__PRETTY_FUNCTION__
0000000000c4c640 l     O .rodata	0000000000000042              Sys_var_have::session_value_ptr(THD*, st_mysql_lex_string*)::__PRETTY_FUNCTION__
0000000000c4d780 l     O .rodata	00000000000000e0              Sys_var_struct::Sys_var_struct(char const*, char const*, int, long, unsigned long, CMD_LINE, long, void*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c4d860 l     O .rodata	00000000000000d3              Sys_var_tz::Sys_var_tz(char const*, char const*, int, long, unsigned long, CMD_LINE, Time_zone**, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
00000000006fc4cf l     F .text	00000000000001b1              update_buffer_size(THD*, st_key_cache*, long, unsigned long long)
0000000000c4bb20 l     O .rodata	0000000000000040              update_buffer_size(THD*, st_key_cache*, long, unsigned long long)::__PRETTY_FUNCTION__
00000000006fc680 l     F .text	00000000000000bd              update_keycache_param(THD*, st_key_cache*, long, unsigned long long)
0000000000c4bb60 l     O .rodata	0000000000000043              update_keycache_param(THD*, st_key_cache*, long, unsigned long long)::__PRETTY_FUNCTION__
0000000001376d80 l     O .bss	00000000000000f0              Sys_pfs_enabled
0000000001376e80 l     O .bss	00000000000000d0              Sys_pfs_events_waits_history_long_size
0000000001376f60 l     O .bss	00000000000000d0              Sys_pfs_events_waits_history_size
0000000001377040 l     O .bss	00000000000000d0              Sys_pfs_max_cond_classes
0000000001377120 l     O .bss	00000000000000d0              Sys_pfs_max_cond_instances
0000000001377200 l     O .bss	00000000000000d0              Sys_pfs_max_file_classes
00000000013772e0 l     O .bss	00000000000000d0              Sys_pfs_max_file_handles
00000000013773c0 l     O .bss	00000000000000d0              Sys_pfs_max_file_instances
00000000013774a0 l     O .bss	00000000000000d0              Sys_pfs_max_mutex_classes
0000000001377580 l     O .bss	00000000000000d0              Sys_pfs_max_mutex_instances
0000000001377660 l     O .bss	00000000000000d0              Sys_pfs_max_rwlock_classes
0000000001377740 l     O .bss	00000000000000d0              Sys_pfs_max_rwlock_instances
0000000001377820 l     O .bss	00000000000000d0              Sys_pfs_max_table_handles
0000000001377900 l     O .bss	00000000000000d0              Sys_pfs_max_table_instances
00000000013779e0 l     O .bss	00000000000000d0              Sys_pfs_max_thread_classes
0000000001377ac0 l     O .bss	00000000000000d0              Sys_pfs_max_thread_instances
0000000001377ba0 l     O .bss	00000000000000d0              Sys_auto_increment_increment
0000000001377c80 l     O .bss	00000000000000d0              Sys_auto_increment_offset
0000000001377d60 l     O .bss	00000000000000f0              Sys_automatic_sp_privileges
0000000001377e60 l     O .bss	00000000000000d0              Sys_back_log
0000000001377f40 l     O .bss	00000000000000d0              Sys_basedir
0000000001378020 l     O .bss	00000000000000d0              Sys_binlog_cache_size
0000000001378100 l     O .bss	00000000000000d0              Sys_binlog_stmt_cache_size
00000000006fc73d l     F .text	0000000000000088              check_has_super(sys_var*, THD*, set_var*)
0000000000c4bbc0 l     O .rodata	000000000000002f              check_has_super(sys_var*, THD*, set_var*)::__PRETTY_FUNCTION__
00000000006fc7c5 l     F .text	0000000000000130              binlog_format_check(sys_var*, THD*, set_var*)
00000000006fc8f5 l     F .text	000000000000002c              fix_binlog_format_after_update(sys_var*, THD*, enum_var_type)
00000000013781e0 l     O .bss	00000000000000f0              Sys_binlog_format
00000000006fc921 l     F .text	00000000000000a4              binlog_direct_check(sys_var*, THD*, set_var*)
00000000013782e0 l     O .bss	00000000000000f0              Sys_binlog_direct
00000000013783e0 l     O .bss	00000000000000d0              Sys_bulk_insert_buff_size
00000000013784c0 l     O .bss	00000000000000d0              Sys_character_sets_dir
00000000006fc9c5 l     F .text	0000000000000054              check_not_null(sys_var*, THD*, set_var*)
00000000006fca19 l     F .text	00000000000002c2              check_charset(sys_var*, THD*, set_var*)
00000000006fccdb l     F .text	0000000000000058              check_charset_not_null(sys_var*, THD*, set_var*)
00000000013785a0 l     O .bss	00000000000000d8              Sys_character_set_system
0000000001378680 l     O .bss	00000000000000d8              Sys_character_set_server
00000000006fcd33 l     F .text	000000000000005d              check_charset_db(sys_var*, THD*, set_var*)
0000000001378760 l     O .bss	00000000000000d8              Sys_character_set_database
00000000006fcd90 l     F .text	0000000000000057              check_cs_client(sys_var*, THD*, set_var*)
00000000006fcde7 l     F .text	000000000000002c              fix_thd_charset(sys_var*, THD*, enum_var_type)
0000000001378840 l     O .bss	00000000000000d8              Sys_character_set_client
0000000001378920 l     O .bss	00000000000000d8              Sys_character_set_connection
0000000001378a00 l     O .bss	00000000000000d8              Sys_character_set_results
0000000001378ae0 l     O .bss	00000000000000d8              Sys_character_set_filesystem
00000000010eb000 l     O .data	0000000000000020              completion_type_names
0000000001378bc0 l     O .bss	00000000000000f0              Sys_completion_type
00000000006fce13 l     F .text	000000000000029a              check_collation_not_null(sys_var*, THD*, set_var*)
0000000001378cc0 l     O .bss	00000000000000d8              Sys_collation_connection
00000000006fd0ad l     F .text	000000000000005d              check_collation_db(sys_var*, THD*, set_var*)
0000000001378da0 l     O .bss	00000000000000d8              Sys_collation_database
0000000001378e80 l     O .bss	00000000000000d8              Sys_collation_server
00000000010eb020 l     O .data	0000000000000020              concurrent_insert_names
0000000001378f60 l     O .bss	00000000000000f0              Sys_concurrent_insert
0000000001379060 l     O .bss	00000000000000d0              Sys_connect_timeout
0000000001379140 l     O .bss	00000000000000d0              Sys_datadir
0000000001379220 l     O .bss	00000000000000d0              Sys_dbug
00000000010eb040 l     O .data	0000000000000020              delay_key_write_names
0000000001379300 l     O .bss	00000000000000f0              Sys_delay_key_write
0000000001379400 l     O .bss	00000000000000d0              Sys_delayed_insert_limit
00000000013794e0 l     O .bss	00000000000000d0              Sys_delayed_insert_timeout
00000000013795c0 l     O .bss	00000000000000d0              Sys_delayed_queue_size
00000000010eb060 l     O .data	0000000000000020              event_scheduler_names
00000000006fd178 l     F .text	0000000000000072              event_scheduler_check(sys_var*, THD*, set_var*)
00000000006fd1ea l     F .text	00000000000000cf              event_scheduler_update(sys_var*, THD*, enum_var_type)
00000000013796a0 l     O .bss	00000000000000f0              Sys_event_scheduler
00000000013797a0 l     O .bss	00000000000000d0              Sys_expire_logs_days
0000000001379880 l     O .bss	00000000000000f0              Sys_flush
0000000001379980 l     O .bss	00000000000000d0              Sys_flush_time
00000000006fd2b9 l     F .text	000000000000002b              check_ftb_syntax(sys_var*, THD*, set_var*)
00000000006fd2e4 l     F .text	0000000000000029              query_cache_flush(sys_var*, THD*, enum_var_type)
0000000001379a60 l     O .bss	00000000000000d0              Sys_ft_boolean_syntax
0000000001379b40 l     O .bss	00000000000000d0              Sys_ft_max_word_len
0000000001379c20 l     O .bss	00000000000000d0              Sys_ft_min_word_len
0000000001379d00 l     O .bss	00000000000000d0              Sys_ft_query_expansion_limit
0000000001379de0 l     O .bss	00000000000000d0              Sys_ft_stopword_file
0000000001379ec0 l     O .bss	00000000000000f0              Sys_ignore_builtin_innodb
00000000006fd30d l     F .text	000000000000003f              check_init_string(sys_var*, THD*, set_var*)
0000000001379fb0 l     O .bss	0000000000000010              PLock_sys_init_connect
0000000001379fc0 l     O .bss	00000000000000d0              Sys_init_connect
000000000137a0a0 l     O .bss	00000000000000d0              Sys_init_file
000000000137a170 l     O .bss	0000000000000010              PLock_sys_init_slave
000000000137a180 l     O .bss	00000000000000d0              Sys_init_slave
000000000137a260 l     O .bss	00000000000000d0              Sys_interactive_timeout
000000000137a340 l     O .bss	00000000000000d0              Sys_join_buffer_size
000000000137a420 l     O .bss	00000000000000d8              Sys_key_buffer_size
000000000137a500 l     O .bss	00000000000000d8              Sys_key_cache_block_size
000000000137a5e0 l     O .bss	00000000000000d8              Sys_key_cache_division_limit
000000000137a6c0 l     O .bss	00000000000000d8              Sys_key_cache_age_threshold
000000000137a7a0 l     O .bss	00000000000000f0              Sys_large_files_support
000000000137a8a0 l     O .bss	00000000000000d0              Sys_large_page_size
000000000137a980 l     O .bss	00000000000000f0              Sys_large_pages
000000000137aa80 l     O .bss	00000000000000d0              Sys_language
000000000137ab60 l     O .bss	00000000000000f0              Sys_local_infile
000000000137ac60 l     O .bss	00000000000000d0              Sys_lock_wait_timeout
000000000137ad40 l     O .bss	00000000000000f0              Sys_locked_in_memory
000000000137ae40 l     O .bss	00000000000000f0              Sys_log_bin
000000000137af40 l     O .bss	00000000000000f0              Sys_trust_function_creators
000000000137b040 l     O .bss	00000000000000d0              Sys_log_error
000000000137b120 l     O .bss	00000000000000f0              Sys_log_queries_not_using_indexes
000000000137b220 l     O .bss	00000000000000d0              Sys_log_warnings
00000000006fd34c l     F .text	00000000000000c5              update_cached_long_query_time(sys_var*, THD*, enum_var_type)
000000000137b300 l     O .bss	00000000000000d0              Sys_long_query_time
00000000006fd411 l     F .text	000000000000006a              fix_low_prio_updates(sys_var*, THD*, enum_var_type)
000000000137b3e0 l     O .bss	00000000000000f0              Sys_low_priority_updates
000000000137b4e0 l     O .bss	00000000000000f0              Sys_sql_low_priority_updates
000000000137b5e0 l     O .bss	00000000000000f0              Sys_lower_case_file_system
000000000137b6e0 l     O .bss	00000000000000d0              Sys_lower_case_table_names
00000000006fd47b l     F .text	000000000000005b              session_readonly(sys_var*, THD*, set_var*)
00000000006fd4d6 l     F .text	00000000000000a6              check_max_allowed_packet(sys_var*, THD*, set_var*)
000000000137b7c0 l     O .bss	00000000000000d0              Sys_max_allowed_packet
000000000137b8a0 l     O .bss	00000000000000d0              Sys_slave_max_allowed_packet
000000000137b980 l     O .bss	00000000000000d0              Sys_max_binlog_cache_size
000000000137ba60 l     O .bss	00000000000000d0              Sys_max_binlog_stmt_cache_size
00000000006fd57c l     F .text	000000000000006b              fix_max_binlog_size(sys_var*, THD*, enum_var_type)
000000000137bb40 l     O .bss	00000000000000d0              Sys_max_binlog_size
00000000006fd5e7 l     F .text	0000000000000040              fix_max_connections(sys_var*, THD*, enum_var_type)
000000000137bc20 l     O .bss	00000000000000d0              Sys_max_connections
000000000137bd00 l     O .bss	00000000000000d0              Sys_max_connect_errors
00000000006fd627 l     F .text	0000000000000052              check_max_delayed_threads(sys_var*, THD*, set_var*)
000000000137bde0 l     O .bss	00000000000000d0              Sys_max_insert_delayed_threads
000000000137bec0 l     O .bss	00000000000000d0              Sys_max_delayed_threads
000000000137bfa0 l     O .bss	00000000000000d0              Sys_max_error_count
000000000137c080 l     O .bss	00000000000000d0              Sys_max_heap_table_size
000000000137c160 l     O .bss	00000000000000d0              Sys_metadata_locks_cache_size
000000000137c240 l     O .bss	00000000000000d0              Sys_pseudo_thread_id
00000000006fd679 l     F .text	000000000000006f              fix_max_join_size(sys_var*, THD*, enum_var_type)
000000000137c320 l     O .bss	00000000000000d0              Sys_max_join_size
000000000137c400 l     O .bss	00000000000000d0              Sys_max_seeks_for_key
000000000137c4e0 l     O .bss	00000000000000d0              Sys_max_length_for_sort_data
000000000137c5c0 l     O .bss	00000000000000d0              Sys_sql_max_join_size
000000000137c6a0 l     O .bss	00000000000000d0              Sys_max_long_data_size
000000000137c770 l     O .bss	0000000000000010              PLock_prepared_stmt_count
000000000137c780 l     O .bss	00000000000000d0              Sys_max_prepared_stmt_count
00000000006fd6e8 l     F .text	000000000000005b              fix_max_relay_log_size(sys_var*, THD*, enum_var_type)
000000000137c860 l     O .bss	00000000000000d0              Sys_max_relay_log_size
000000000137c940 l     O .bss	00000000000000d0              Sys_max_sort_length
000000000137ca20 l     O .bss	00000000000000d0              Sys_max_sp_recursion_depth
000000000137cb00 l     O .bss	00000000000000d0              Sys_max_user_connections
000000000137cbe0 l     O .bss	00000000000000d0              Sys_max_tmp_tables
000000000137ccc0 l     O .bss	00000000000000d0              Sys_max_write_lock_count
000000000137cda0 l     O .bss	00000000000000d0              Sys_min_examined_row_limit
00000000006fd743 l     F .text	00000000000000a6              check_net_buffer_length(sys_var*, THD*, set_var*)
000000000137ce80 l     O .bss	00000000000000d0              Sys_net_buffer_length
00000000006fd7e9 l     F .text	0000000000000041              fix_net_read_timeout(sys_var*, THD*, enum_var_type)
000000000137cf60 l     O .bss	00000000000000d0              Sys_net_read_timeout
00000000006fd82a l     F .text	0000000000000041              fix_net_write_timeout(sys_var*, THD*, enum_var_type)
000000000137d040 l     O .bss	00000000000000d0              Sys_net_write_timeout
00000000006fd86b l     F .text	0000000000000033              fix_net_retry_count(sys_var*, THD*, enum_var_type)
000000000137d120 l     O .bss	00000000000000d0              Sys_net_retry_count
000000000137d200 l     O .bss	00000000000000f0              Sys_new_mode
000000000137d300 l     O .bss	00000000000000f0              Sys_old_mode
000000000137d400 l     O .bss	00000000000000f0              Sys_old_alter_table
00000000006fd89e l     F .text	000000000000001c              check_old_passwords(sys_var*, THD*, set_var*)
000000000137d500 l     O .bss	00000000000000f0              Sys_old_passwords
000000000137d600 l     O .bss	00000000000000d0              Sys_open_files_limit
000000000137d6e0 l     O .bss	00000000000000d0              Sys_optimizer_prune_level
00000000006fd8ba l     F .text	00000000000000c1              fix_optimizer_search_depth(sys_var*, THD*, enum_var_type)
000000000137d7c0 l     O .bss	00000000000000d0              Sys_optimizer_search_depth
00000000010eb080 l     O .data	0000000000000038              optimizer_switch_names
00000000006fd97b l     F .text	0000000000000059              fix_optimizer_switch(sys_var*, THD*, enum_var_type)
000000000137d8a0 l     O .bss	00000000000000f0              Sys_optimizer_switch
000000000137d9a0 l     O .bss	00000000000000d0              Sys_pid_file
000000000137da80 l     O .bss	00000000000000d0              Sys_plugin_dir
000000000137db60 l     O .bss	00000000000000d0              Sys_port
000000000137dc40 l     O .bss	00000000000000d0              Sys_preload_buff_size
000000000137dd20 l     O .bss	00000000000000d0              Sys_protocol_version
000000000137de00 l     O .bss	00000000000000d0              Sys_proxy_user
000000000137dee0 l     O .bss	00000000000000d0              Sys_exterenal_user
000000000137dfc0 l     O .bss	00000000000000d0              Sys_read_buff_size
00000000006fd9d4 l     F .text	0000000000000064              check_read_only(sys_var*, THD*, set_var*)
00000000006fda38 l     F .text	000000000000023e              fix_read_only(sys_var*, THD*, enum_var_type)
000000000137e0a0 l     O .bss	00000000000000f0              Sys_readonly
000000000137e1a0 l     O .bss	00000000000000d0              Sys_read_rnd_buff_size
000000000137e280 l     O .bss	00000000000000d0              Sys_div_precincrement
000000000137e360 l     O .bss	00000000000000d0              Sys_rpl_recovery_rank
000000000137e440 l     O .bss	00000000000000d0              Sys_range_alloc_block_size
000000000137e520 l     O .bss	00000000000000d0              Sys_multi_range_count
00000000006fdc76 l     F .text	0000000000000049              fix_thd_mem_root(sys_var*, THD*, enum_var_type)
000000000137e600 l     O .bss	00000000000000d0              Sys_query_alloc_block_size
000000000137e6e0 l     O .bss	00000000000000d0              Sys_query_prealloc_size
000000000137e7c0 l     O .bss	00000000000000f0              Sys_skip_external_locking
000000000137e8c0 l     O .bss	00000000000000f0              Sys_skip_networking
000000000137e9c0 l     O .bss	00000000000000f0              Sys_skip_name_resolve
000000000137eac0 l     O .bss	00000000000000f0              Sys_skip_show_database
000000000137ebc0 l     O .bss	00000000000000d0              Sys_socket
000000000137eca0 l     O .bss	00000000000000d0              Sys_thread_concurrency
000000000137ed80 l     O .bss	00000000000000d0              Sys_thread_stack
000000000137ee60 l     O .bss	00000000000000d0              Sys_tmpdir
00000000006fdcbf l     F .text	000000000000004c              fix_trans_mem_root(sys_var*, THD*, enum_var_type)
000000000137ef40 l     O .bss	00000000000000d0              Sys_trans_alloc_block_size
000000000137f020 l     O .bss	00000000000000d0              Sys_trans_prealloc_size
00000000010eb0c0 l     O .data	0000000000000020              thread_handling_names
000000000137f100 l     O .bss	00000000000000f0              Sys_thread_handling
00000000006fdd0b l     F .text	00000000000000b2              fix_query_cache_size(sys_var*, THD*, enum_var_type)
000000000137f200 l     O .bss	00000000000000d0              Sys_query_cache_size
000000000137f2e0 l     O .bss	00000000000000d0              Sys_query_cache_limit
00000000006fddbd l     F .text	0000000000000043              fix_qcache_min_res_unit(sys_var*, THD*, enum_var_type)
000000000137f3c0 l     O .bss	00000000000000d0              Sys_query_cache_min_res_unit
00000000010eb0e0 l     O .data	0000000000000020              query_cache_type_names
00000000006fde00 l     F .text	0000000000000049              check_query_cache_type(sys_var*, THD*, set_var*)
000000000137f4a0 l     O .bss	00000000000000f0              Sys_query_cache_type
000000000137f5a0 l     O .bss	00000000000000f0              Sys_query_cache_wlock_invalidate
000000000137f6a0 l     O .bss	00000000000000f0              Sys_secure_auth
000000000137f7a0 l     O .bss	00000000000000d0              Sys_secure_file_priv
00000000006fde49 l     F .text	0000000000000036              fix_server_id(sys_var*, THD*, enum_var_type)
000000000137f880 l     O .bss	00000000000000d0              Sys_server_id
000000000137f960 l     O .bss	00000000000000f0              Sys_slave_compressed_protocol
00000000010eb100 l     O .data	0000000000000018              slave_exec_mode_names
000000000137fa60 l     O .bss	00000000000000f0              Slave_exec_mode
000000000137fb60 l     O .bss	00000000000000f0              Slave_type_conversions
000000000137fc60 l     O .bss	00000000000000d0              Sys_slow_launch_time
000000000137fd40 l     O .bss	00000000000000d0              Sys_sort_buffer
00000000006fdf50 l     F .text	0000000000000036              check_sql_mode(sys_var*, THD*, set_var*)
00000000006fdf86 l     F .text	0000000000000065              fix_sql_mode(sys_var*, THD*, enum_var_type)
00000000010eb140 l     O .data	0000000000000108              sql_mode_names
000000000137fe20 l     O .bss	00000000000000f0              Sys_sql_mode
000000000137ff20 l     O .bss	00000000000000d0              Sys_ssl_ca
0000000001380000 l     O .bss	00000000000000d0              Sys_ssl_capath
00000000013800e0 l     O .bss	00000000000000d0              Sys_ssl_cert
00000000013801c0 l     O .bss	00000000000000d0              Sys_ssl_cipher
00000000013802a0 l     O .bss	00000000000000d0              Sys_ssl_key
00000000010eb250 l     O .data	0000000000000018              updatable_views_with_limit_names
0000000001380380 l     O .bss	00000000000000f0              Sys_updatable_views_with_limit
0000000001380480 l     O .bss	00000000000000f0              Sys_sync_frm
0000000001380570 l     O .bss	0000000000000008              system_time_zone_ptr
0000000001380580 l     O .bss	00000000000000d0              Sys_system_time_zone
0000000001380660 l     O .bss	00000000000000d0              Sys_table_def_size
0000000001380740 l     O .bss	00000000000000d0              Sys_table_cache_size
0000000001380820 l     O .bss	00000000000000d0              Sys_thread_cache_size
00000000006fe029 l     F .text	0000000000000090              check_tx_isolation(sys_var*, THD*, set_var*)
0000000000c4bc60 l     O .rodata	0000000000000032              check_tx_isolation(sys_var*, THD*, set_var*)::__PRETTY_FUNCTION__
0000000001380900 l     O .bss	00000000000000f0              Sys_tx_isolation
0000000001380a00 l     O .bss	00000000000000d0              Sys_tmp_table_size
0000000001380ae0 l     O .bss	00000000000000f0              Sys_timed_mutexes
0000000001380bd0 l     O .bss	0000000000000008              server_version_ptr
0000000001380be0 l     O .bss	00000000000000d0              Sys_version
0000000001380cb0 l     O .bss	0000000000000008              server_version_comment_ptr
0000000001380cc0 l     O .bss	00000000000000d0              Sys_version_comment
0000000001380d90 l     O .bss	0000000000000008              server_version_compile_machine_ptr
0000000001380da0 l     O .bss	00000000000000d0              Sys_version_compile_machine
0000000001380e70 l     O .bss	0000000000000008              server_version_compile_os_ptr
0000000001380e80 l     O .bss	00000000000000d0              Sys_version_compile_os
0000000001380f60 l     O .bss	00000000000000d0              Sys_net_wait_timeout
00000000006fe155 l     F .text	0000000000000072              fix_engine_condition_pushdown(sys_var*, THD*, enum_var_type)
0000000001381040 l     O .bss	00000000000000f0              Sys_engine_condition_pushdown
0000000001381140 l     O .bss	00000000000000d0              Sys_default_storage_engine
0000000001381220 l     O .bss	00000000000000d0              Sys_storage_engine
0000000001381300 l     O .bss	00000000000000d0              Sys_debug_sync
00000000013813e0 l     O .bss	00000000000000d0              Sys_date_format
00000000013814c0 l     O .bss	00000000000000d0              Sys_datetime_format
00000000013815a0 l     O .bss	00000000000000d0              Sys_time_format
00000000006fe1c7 l     F .text	00000000000001c5              fix_autocommit(sys_var*, THD*, enum_var_type)
0000000001381680 l     O .bss	0000000000000100              Sys_autocommit
0000000001381780 l     O .bss	00000000000000f0              Sys_big_tables
0000000001381880 l     O .bss	00000000000000f0              Sys_sql_big_tables
0000000001381980 l     O .bss	0000000000000100              Sys_big_selects
0000000001381a80 l     O .bss	0000000000000100              Sys_log_off
00000000006fe38c l     F .text	000000000000008e              fix_sql_log_bin_after_update(sys_var*, THD*, enum_var_type)
0000000000c4bca0 l     O .rodata	0000000000000041              fix_sql_log_bin_after_update(sys_var*, THD*, enum_var_type)::__PRETTY_FUNCTION__
00000000006fe41a l     F .text	00000000000000a4              check_sql_log_bin(sys_var*, THD*, set_var*)
0000000001381b80 l     O .bss	00000000000000f0              Sys_log_binlog
0000000001381c80 l     O .bss	0000000000000100              Sys_sql_warnings
0000000001381d80 l     O .bss	0000000000000100              Sys_sql_notes
0000000001381e80 l     O .bss	0000000000000100              Sys_auto_is_null
0000000001381f80 l     O .bss	0000000000000100              Sys_safe_updates
0000000001382080 l     O .bss	0000000000000100              Sys_buffer_results
0000000001382180 l     O .bss	0000000000000100              Sys_quote_show_create
0000000001382280 l     O .bss	0000000000000100              Sys_foreign_key_checks
0000000001382380 l     O .bss	0000000000000100              Sys_unique_checks
0000000001382480 l     O .bss	0000000000000100              Sys_profiling
0000000001382580 l     O .bss	00000000000000d0              Sys_profiling_history_size
0000000001382660 l     O .bss	00000000000000d0              Sys_select_limit
00000000006fe4be l     F .text	000000000000004f              update_timestamp(THD*, set_var*)
00000000006fe50d l     F .text	0000000000000015              read_timestamp(THD*)
00000000006fe522 l     F .text	00000000000000ae              check_timestamp(sys_var*, THD*, set_var*)
0000000001382740 l     O .bss	00000000000000e0              Sys_timestamp
00000000006fe5d0 l     F .text	0000000000000061              update_last_insert_id(THD*, set_var*)
00000000006fe631 l     F .text	000000000000001a              read_last_insert_id(THD*)
0000000001382820 l     O .bss	00000000000000e0              Sys_last_insert_id
0000000001382900 l     O .bss	00000000000000e0              Sys_identity
00000000006fe64b l     F .text	0000000000000065              update_insert_id(THD*, set_var*)
00000000006fe6b0 l     F .text	0000000000000020              read_insert_id(THD*)
00000000013829e0 l     O .bss	00000000000000e0              Sys_insert_id
00000000006fe6d0 l     F .text	0000000000000061              update_rand_seed1(THD*, set_var*)
00000000006fe731 l     F .text	000000000000000f              read_rand_seed(THD*)
0000000001382ac0 l     O .bss	00000000000000e0              Sys_rand_seed1
00000000006fe740 l     F .text	0000000000000061              update_rand_seed2(THD*, set_var*)
0000000001382ba0 l     O .bss	00000000000000e0              Sys_rand_seed2
00000000006fe7a1 l     F .text	0000000000000021              read_error_count(THD*)
0000000001382c80 l     O .bss	00000000000000e0              Sys_error_count
00000000006fe7c2 l     F .text	0000000000000021              read_warning_count(THD*)
0000000001382d60 l     O .bss	00000000000000e0              Sys_warning_count
0000000001382e40 l     O .bss	00000000000000d0              Sys_default_week_format
0000000001382f20 l     O .bss	00000000000000d0              Sys_group_concat_max_len
0000000001382ff0 l     O .bss	0000000000000008              glob_hostname_ptr
0000000001383000 l     O .bss	00000000000000d0              Sys_hostname
00000000013830e0 l     O .bss	00000000000000d0              Sys_repl_report_host
00000000013831c0 l     O .bss	00000000000000d0              Sys_repl_report_user
00000000013832a0 l     O .bss	00000000000000d0              Sys_repl_report_password
0000000001383380 l     O .bss	00000000000000d0              Sys_repl_report_port
0000000001383460 l     O .bss	00000000000000f0              Sys_keep_files_on_create
0000000001383550 l     O .bss	0000000000000008              license
0000000001383560 l     O .bss	00000000000000d0              Sys_license
00000000006fe7e3 l     F .text	00000000000002be              check_log_path(sys_var*, THD*, set_var*)
00000000006feaa1 l     F .text	000000000000013d              fix_log(char**, char const*, char const*, bool, bool (*)(char*))
00000000006febde l     F .text	000000000000004b              reopen_general_log(char*)
00000000006fec29 l     F .text	0000000000000050              fix_general_log_file(sys_var*, THD*, enum_var_type)
0000000001383640 l     O .bss	00000000000000d0              Sys_general_log_path
00000000006fec79 l     F .text	000000000000004b              reopen_slow_log(char*)
00000000006fecc4 l     F .text	0000000000000050              fix_slow_log_file(sys_var*, THD*, enum_var_type)
0000000001383720 l     O .bss	00000000000000d0              Sys_slow_log_path
0000000001383800 l     O .bss	00000000000000d0              Sys_have_csv
00000000013838e0 l     O .bss	00000000000000d0              Sys_have_innodb
00000000013839c0 l     O .bss	00000000000000d0              Sys_have_ndbcluster
0000000001383aa0 l     O .bss	00000000000000d0              Sys_have_partition_db
0000000001383b80 l     O .bss	00000000000000d0              Sys_have_compress
0000000001383c60 l     O .bss	00000000000000d0              Sys_have_crypt
0000000001383d40 l     O .bss	00000000000000d0              Sys_have_dlopen
0000000001383e20 l     O .bss	00000000000000d0              Sys_have_geometry
0000000001383f00 l     O .bss	00000000000000d0              Sys_have_openssl
0000000001383fe0 l     O .bss	00000000000000d0              Sys_have_profiling
00000000013840c0 l     O .bss	00000000000000d0              Sys_have_query_cache
00000000013841a0 l     O .bss	00000000000000d0              Sys_have_rtree_keys
0000000001384280 l     O .bss	00000000000000d0              Sys_have_ssl
0000000001384360 l     O .bss	00000000000000d0              Sys_have_symlink
0000000001384440 l     O .bss	00000000000000f0              Sys_general_log
0000000001384540 l     O .bss	00000000000000f0              Sys_log
0000000001384640 l     O .bss	00000000000000f0              Sys_slow_query_log
0000000001384740 l     O .bss	00000000000000f0              Sys_log_slow
00000000006fed14 l     F .text	0000000000000179              fix_log_state(sys_var*, THD*, enum_var_type)
0000000000c4bd00 l     O .rodata	0000000000000032              fix_log_state(sys_var*, THD*, enum_var_type)::__PRETTY_FUNCTION__
00000000006fee8d l     F .text	0000000000000020              check_not_empty_set(sys_var*, THD*, set_var*)
00000000006feead l     F .text	000000000000006e              fix_log_output(sys_var*, THD*, enum_var_type)
00000000010eb280 l     O .data	0000000000000020              log_output_names
0000000001384840 l     O .bss	00000000000000f0              Sys_log_output
0000000001384940 l     O .bss	00000000000000f0              Sys_log_slave_updates
0000000001384a40 l     O .bss	00000000000000d0              Sys_relay_log
0000000001384b20 l     O .bss	00000000000000d0              Sys_relay_log_index
0000000001384c00 l     O .bss	00000000000000d0              Sys_relay_log_info_file
0000000001384ce0 l     O .bss	00000000000000f0              Sys_relay_log_purge
0000000001384de0 l     O .bss	00000000000000f0              Sys_relay_log_recovery
0000000001384ee0 l     O .bss	00000000000000d0              Sys_slave_load_tmpdir
00000000006fef1b l     F .text	0000000000000150              fix_slave_net_timeout(sys_var*, THD*, enum_var_type)
0000000001384fc0 l     O .bss	00000000000000d0              Sys_slave_net_timeout
00000000006ff06b l     F .text	00000000000000e8              check_slave_skip_counter(sys_var*, THD*, set_var*)
00000000006ff153 l     F .text	0000000000000112              fix_slave_skip_counter(sys_var*, THD*, enum_var_type)
00000000013850a0 l     O .bss	00000000000000d0              Sys_slave_skip_counter
0000000001385180 l     O .bss	00000000000000d0              Sys_slave_skip_errors
0000000001385260 l     O .bss	00000000000000d0              Sys_relay_log_space_limit
0000000001385340 l     O .bss	00000000000000d0              Sys_sync_relaylog_period
0000000001385420 l     O .bss	00000000000000d0              Sys_sync_relayloginfo_period
0000000001385500 l     O .bss	00000000000000d0              Sys_sync_binlog_period
00000000013855e0 l     O .bss	00000000000000d0              Sys_sync_masterinfo_period
00000000013856c0 l     O .bss	00000000000000d0              Sys_slave_trans_retries
00000000006ff265 l     F .text	0000000000000394              check_locale(sys_var*, THD*, set_var*)
00000000013857a0 l     O .bss	00000000000000d8              Sys_lc_messages
0000000001385880 l     O .bss	00000000000000d8              Sys_lc_time_names
0000000001385960 l     O .bss	00000000000000d0              Sys_time_zone
0000000001385a40 l     O .bss	00000000000000d0              Sys_sp_cache_size
00000000006ff5f9 l     F .text	0000000000000146              check_pseudo_slave_mode(sys_var*, THD*, set_var*)
0000000001385b20 l     O .bss	00000000000000f0              Sys_pseudo_slave_mode
0000000000c4bd40 l     O .rodata	000000000000022d              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned int, unsigned int, unsigned int, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c4bf80 l     O .rodata	0000000000000232              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long, unsigned long, unsigned long, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c4c1c0 l     O .rodata	0000000000000238              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
0000000000c4c400 l     O .rodata	0000000000000237              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)::__PRETTY_FUNCTION__
00000000006ff73f l     F .text	0000000000008dbf              __static_initialization_and_destruction_0(int, int)
00000000007084fe l     F .text	0000000000000015              _GLOBAL__sub_I_sys_vars.cc
0000000000000000 l    df *ABS*	0000000000000000              datadict.cc
000000000070ed9c l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
000000000070eec6 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
000000000070efc6 l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
000000000070f142 l     F .text	0000000000000031              ha_check_storage_engine_flag(handlerton const*, unsigned int)
0000000000c4da40 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c4da48 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c4da4c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c4da50 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c4da54 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c4da58 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105f220 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c4dba0 l     O .rodata	0000000000000049              dd_frm_storage_engine(THD*, char const*, char const*, handlerton**)::__PRETTY_FUNCTION__
0000000000c4dc00 l     O .rodata	0000000000000037              dd_recreate_table(THD*, char const*, char const*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_reload.cc
000000000070f76f l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000070f886 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000c4dc40 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c4dc48 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c4dc4c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c4dc50 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c4dc54 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c4dc58 l     O .rodata	0000000000000004              GET_SIZE_ERROR
000000000105f280 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c4ddc0 l     O .rodata	0000000000000046              reload_acl_and_cache(THD*, unsigned long, TABLE_LIST*, int*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_yacc.cc
0000000000c98320 l     O .rodata	000000000000002a              MDL_request::set_type(enum_mdl_type)::__PRETTY_FUNCTION__
0000000000c4de70 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
000000000071033d l     F .text	0000000000000031              ha_resolve_storage_engine_name(handlerton const*)
000000000071036e l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000c98040 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c98000 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c4dedc l     O .rodata	0000000000000004              SRID_SIZE
0000000000c4dee0 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c4dee4 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c4dee8 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c4deec l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000c980e0 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
0000000000c98150 l     O .rodata	000000000000001b              Item_cond::add(Item*)::__PRETTY_FUNCTION__
0000000000c98180 l     O .rodata	0000000000000023              Item_cond::add_at_head(Item*)::__PRETTY_FUNCTION__
0000000000c98120 l     O .rodata	0000000000000029              Item_cond::add_at_head(List<Item>*)::__PRETTY_FUNCTION__
0000000000c98240 l     O .rodata	000000000000003d              Item_date_func::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000c98200 l     O .rodata	0000000000000040              Item_str_timefunc::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000c981c0 l     O .rodata	0000000000000030              Item_typecast::val_str(String*)::__PRETTY_FUNCTION__
000000000105f2e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c98280 l     O .rodata	0000000000000054              Query_tables_list::set_stmt_unsafe(Query_tables_list::enum_binlog_stmt_unsafe)::__PRETTY_FUNCTION__
0000000000c982e0 l     O .rodata	0000000000000022              Lex_input_stream::yyLength()::__PRETTY_FUNCTION__
0000000000710554 l     F .text	0000000000000059              is_native_function(THD*, st_mysql_lex_string const*)
00000000007109f4 l     F .text	0000000000000090              find_sys_var_null_base(THD*, sys_var_with_base*)
0000000000710a84 l     F .text	0000000000000149              set_system_variable(THD*, sys_var_with_base*, enum_var_type, Item*)
0000000000710bcd l     F .text	0000000000000141              set_local_variable(THD*, sp_variable*, Item*)
0000000000710d0e l     F .text	00000000000001cb              set_trigger_new_row(THD*, st_mysql_lex_string*, Item*)
0000000000c98080 l     O .rodata	0000000000000033              set_trigger_new_row(THD*, st_mysql_lex_string*, Item*)::__PRETTY_FUNCTION__
00000000007113da l     F .text	00000000000000c4              add_create_index_prepare(LEX*, Table_ident*)
000000000071149e l     F .text	00000000000000c0              add_create_index(LEX*, Key::Keytype, st_mysql_lex_string const&, st_key_create_information*, bool)
0000000000c4e260 l     O .rodata	00000000000006a0              yytranslate
0000000000c4e900 l     O .rodata	0000000000001382              yyprhs
0000000000c4fca0 l     O .rodata	000000000000389c              yyrhs
0000000000c53540 l     O .rodata	0000000000001382              yyrline
000000000105f340 l     O .data.rel.ro	0000000000002ee8              yytname
0000000000c58f20 l     O .rodata	0000000000001382              yyr1
0000000000c5a2c0 l     O .rodata	00000000000009c1              yyr2
0000000000c5aca0 l     O .rodata	000000000000212e              yydefact
0000000000c5cde0 l     O .rodata	00000000000006f0              yydefgoto
0000000000c5d4e0 l     O .rodata	000000000000425c              yypact
0000000000c61740 l     O .rodata	00000000000006f0              yypgoto
0000000000c61e40 l     O .rodata	00000000000188cc              yytable
0000000000c7a720 l     O .rodata	00000000000188cc              yycheck
0000000000c93000 l     O .rodata	000000000000212e              yystos
000000000071155e l     F .text	0000000000000023              yy_symbol_value_print(_IO_FILE*, int, YYSTYPE const*, THD*)
0000000000711581 l     F .text	00000000000000ad              yy_symbol_print(_IO_FILE*, int, YYSTYPE const*, THD*)
000000000071162e l     F .text	000000000000008a              yy_stack_print(short*, short*)
00000000007116b8 l     F .text	000000000000013c              yy_reduce_print(YYSTYPE*, int, THD*)
00000000007117f4 l     F .text	0000000000000090              yydestruct(char const*, int, YYSTYPE*, THD*)
0000000000c980c0 l     O .rodata	0000000000000015              MYSQLparse(THD*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_builtin.cc
0000000000000000 l    df *ABS*	0000000000000000              client.c
000000000073ce89 l     F .text	000000000000023a              wait_for_data
0000000000c99810 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.12577
0000000000c99820 l     O .rodata	0000000000000019              __PRETTY_FUNCTION__.12590
0000000000c99840 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.12623
0000000000c99860 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.12632
000000000073dd93 l     F .text	000000000000015d              cli_flush_use_result
00000000007445be l     F .text	00000000000000fe              mysql_prune_stmt_list
00000000010eb320 l     O .data	0000000000000120              default_options
00000000010eb440 l     O .data	0000000000000020              option_types
000000000073e179 l     F .text	00000000000000cc              add_init_command
000000000073e245 l     F .text	0000000000000068              set_ssl_option_unpack_path
000000000073ee1e l     F .text	00000000000000a7              cli_fetch_lengths
0000000000c99878 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.12789
000000000073fcf9 l     F .text	0000000000000230              read_one_row
0000000000740133 l     F .text	0000000000000180              mysql_ssl_free
0000000000740361 l     F .text	00000000000002db              ssl_verify_server_cert
00000000010eb620 l     O .data	0000000000000038              client_methods
00000000007447f9 l     F .text	00000000000003d0              cli_read_query_result
0000000000745073 l     F .text	00000000000002c0              cli_use_result
0000000000740656 l     F .text	000000000000010a              my_os_charset_to_mysql_charset
0000000000740760 l     F .text	00000000000000b2              mysql_autodetect_character_set
0000000000740812 l     F .text	00000000000000d4              mysql_set_character_set_with_default_collation
00000000010eb4a0 l     O .data	0000000000000060              native_password_client_plugin
0000000000745e7f l     F .text	00000000000001f6              native_password_auth_client
00000000010eb500 l     O .data	0000000000000060              old_password_client_plugin
0000000000746075 l     F .text	00000000000001bf              old_password_auth_client
00000000010eb560 l     O .data	0000000000000060              clear_password_client_plugin
0000000000746234 l     F .text	0000000000000064              clear_password_auth_client
0000000000740aa2 l     F .text	00000000000002cc              send_change_user_packet
0000000000c99890 l     O .rodata	0000000000000018              __PRETTY_FUNCTION__.13356
0000000000740d6e l     F .text	0000000000000b2a              send_client_reply_packet
0000000000c998b0 l     O .rodata	0000000000000019              __PRETTY_FUNCTION__.13377
0000000000741898 l     F .text	000000000000012a              client_mpvio_read_packet
00000000007419c2 l     F .text	0000000000000131              client_mpvio_write_packet
0000000000c998d0 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.13403
0000000000741c02 l     F .text	0000000000000035              client_mpvio_info
0000000000741c37 l     F .text	000000000000009b              check_plugin_enabled
00000000007444f0 l     F .text	00000000000000ce              mysql_close_free
00000000007442da l     F .text	0000000000000216              mysql_close_free_options
0000000000c998e0 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.13474
0000000000000000 l    df *ABS*	0000000000000000              derror.cc
0000000000746298 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
00000000007463c2 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
00000000007464c2 l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
0000000000c998f0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c998f8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c998fc l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c99900 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c99904 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c99908 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010627e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
000000000074663e l     F .text	000000000000003d              get_server_errmsgs
0000000000746de9 l     F .text	0000000000000255              init_myfunc_errs()
0000000000000000 l    df *ABS*	0000000000000000              des_key_file.cc
000000000074703e l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000747155 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000007471d2 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
00000000007472fc l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
0000000000c99b48 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000000000 l    df *ABS*	0000000000000000              discover.cc
0000000000747888 l     F .text	0000000000000110              inline_mysql_file_fstat(char const*, unsigned int, int, stat*, int)
0000000000747998 l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
0000000000747ac3 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
0000000000747bed l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
0000000000747ced l     F .text	0000000000000174              inline_mysql_file_write(char const*, unsigned int, int, unsigned char const*, unsigned long, int)
0000000000c99be8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000000000 l    df *ABS*	0000000000000000              errmsg.c
0000000000000000 l    df *ABS*	0000000000000000              field.cc
0000000000c9bce0 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
0000000000748268 l     F .text	0000000000000077              bitmap_set_bit
0000000000c9e080 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
00000000007482df l     F .text	0000000000000067              bitmap_is_set
0000000000c9be20 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000c9bdc0 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000c9e200 l     O .rodata	0000000000000029              String::operator=(String const&)::__PRETTY_FUNCTION__
0000000000748346 l     F .text	000000000000004c              check_if_only_end_space(charset_info_st*, char*, char*)
0000000000c9bee0 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
0000000000c9c3e0 l     O .rodata	000000000000002b              max_my_decimal(my_decimal*, int, int)::__PRETTY_FUNCTION__
0000000000c9c260 l     O .rodata	0000000000000036              my_decimal_length_to_precision(unsigned int, unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c9c380 l     O .rodata	0000000000000047              my_decimal_precision_to_length_no_truncation(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000c9c340 l     O .rodata	0000000000000039              my_decimal_precision_to_length(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000c9aa58 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c9e720 l     O .rodata	0000000000000038              Field::get_geometry_type()::__PRETTY_FUNCTION__
0000000000c9e7a0 l     O .rodata	0000000000000031              Field_longstr::is_updatable() const::__PRETTY_FUNCTION__
0000000000c9e760 l     O .rodata	0000000000000037              Field_bit::cmp(unsigned char const*, unsigned char const*)::__PRETTY_FUNCTION__
0000000000c9e660 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000c9e620 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000c9ab84 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c9ab88 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c9ab8c l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c9ab90 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c9ab94 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001062840 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c9abd0 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
0000000000c9abd4 l     O .rodata	0000000000000001              field_separator
00000000010eb880 l     O .data	0000000000000b64              field_types_merge_rules
0000000000c9bd20 l     O .rodata	0000000000000054              Field::field_type_merge(enum_field_types, enum_field_types)::__PRETTY_FUNCTION__
00000000010ec400 l     O .data	000000000000006c              field_types_result_type
000000000074844f l     F .text	0000000000000057              test_if_important_data(charset_info_st*, char const*, char const*)
00000000007484a6 l     F .text	000000000000002f              (anonymous namespace)::compare(unsigned int, unsigned int)
0000000000c9bd80 l     O .rodata	000000000000003e              Field::result_merge_type(enum_field_types)::__PRETTY_FUNCTION__
0000000000748532 l     F .text	000000000000013c              push_numerical_conversion_warning(THD*, char const*, unsigned int, charset_info_st*, char const*, int, char const*, unsigned long)
0000000000c9bde0 l     O .rodata	0000000000000030              Field::val_int_as_str(String*, char)::__PRETTY_FUNCTION__
0000000000c9be60 l     O .rodata	0000000000000030              Field::do_last_null_byte() const::__PRETTY_FUNCTION__
0000000000c9bea0 l     O .rodata	0000000000000034              Field::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000c9bf00 l     O .rodata	0000000000000038              Field_num::store_decimal(my_decimal const*)::__PRETTY_FUNCTION__
0000000000c9bf40 l     O .rodata	0000000000000038              Field_num::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000c9bf80 l     O .rodata	0000000000000038              Field_str::store_decimal(my_decimal const*)::__PRETTY_FUNCTION__
0000000000c9bfc0 l     O .rodata	0000000000000038              Field_str::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000c9c000 l     O .rodata	000000000000003b              Field::store_time(st_mysql_time*, enum_mysql_timestamp_type)::__PRETTY_FUNCTION__
0000000000c9c040 l     O .rodata	0000000000000043              Field_decimal::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9c0a0 l     O .rodata	0000000000000029              Field_decimal::store(double)::__PRETTY_FUNCTION__
0000000000c9c0e0 l     O .rodata	0000000000000031              Field_decimal::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9c120 l     O .rodata	0000000000000029              Field_decimal::val_real()::__PRETTY_FUNCTION__
0000000000c9c160 l     O .rodata	000000000000002a              Field_decimal::val_int()::__PRETTY_FUNCTION__
0000000000c9c1a0 l     O .rodata	0000000000000039              Field_decimal::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9c1e0 l     O .rodata	0000000000000072              Field_new_decimal::Field_new_decimal(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)::__PRETTY_FUNCTION__
0000000000c9c2a0 l     O .rodata	000000000000004d              Field_new_decimal::Field_new_decimal(unsigned int, bool, char const*, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000c9c300 l     O .rodata	0000000000000039              Field_new_decimal::create_from_item(Item*)::__PRETTY_FUNCTION__
0000000000c9c420 l     O .rodata	0000000000000037              Field_new_decimal::store_value(my_decimal const*)::__PRETTY_FUNCTION__
0000000000c9c460 l     O .rodata	0000000000000047              Field_new_decimal::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9c4c0 l     O .rodata	000000000000002d              Field_new_decimal::store(double)::__PRETTY_FUNCTION__
0000000000c9c500 l     O .rodata	0000000000000035              Field_new_decimal::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9c540 l     O .rodata	0000000000000040              Field_new_decimal::store_decimal(my_decimal const*)::__PRETTY_FUNCTION__
0000000000c9c580 l     O .rodata	000000000000002d              Field_new_decimal::val_real()::__PRETTY_FUNCTION__
0000000000c9c5c0 l     O .rodata	000000000000002e              Field_new_decimal::val_int()::__PRETTY_FUNCTION__
0000000000c9c600 l     O .rodata	0000000000000040              Field_new_decimal::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000c9c640 l     O .rodata	000000000000003d              Field_new_decimal::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9c680 l     O .rodata	0000000000000040              Field_tiny::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9c6c0 l     O .rodata	0000000000000026              Field_tiny::store(double)::__PRETTY_FUNCTION__
0000000000c9c700 l     O .rodata	000000000000002e              Field_tiny::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9c740 l     O .rodata	0000000000000026              Field_tiny::val_real()::__PRETTY_FUNCTION__
0000000000c9c780 l     O .rodata	0000000000000027              Field_tiny::val_int()::__PRETTY_FUNCTION__
0000000000c9c7c0 l     O .rodata	0000000000000036              Field_tiny::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9c800 l     O .rodata	0000000000000041              Field_short::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9c860 l     O .rodata	0000000000000027              Field_short::store(double)::__PRETTY_FUNCTION__
0000000000c9c8a0 l     O .rodata	000000000000002f              Field_short::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9c8e0 l     O .rodata	0000000000000027              Field_short::val_real()::__PRETTY_FUNCTION__
0000000000c9c920 l     O .rodata	0000000000000028              Field_short::val_int()::__PRETTY_FUNCTION__
0000000000c9c960 l     O .rodata	0000000000000037              Field_short::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9c9a0 l     O .rodata	0000000000000042              Field_medium::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9ca00 l     O .rodata	0000000000000028              Field_medium::store(double)::__PRETTY_FUNCTION__
0000000000c9ca40 l     O .rodata	0000000000000030              Field_medium::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9ca80 l     O .rodata	0000000000000028              Field_medium::val_real()::__PRETTY_FUNCTION__
0000000000c9cac0 l     O .rodata	0000000000000029              Field_medium::val_int()::__PRETTY_FUNCTION__
0000000000c9cb00 l     O .rodata	0000000000000038              Field_medium::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9cb40 l     O .rodata	0000000000000032              Field_medium::send_binary(Protocol*)::__PRETTY_FUNCTION__
0000000000c9cb80 l     O .rodata	0000000000000040              Field_long::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9cbc0 l     O .rodata	0000000000000026              Field_long::store(double)::__PRETTY_FUNCTION__
0000000000c9cc00 l     O .rodata	000000000000002e              Field_long::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9cc40 l     O .rodata	0000000000000026              Field_long::val_real()::__PRETTY_FUNCTION__
0000000000c9cc80 l     O .rodata	0000000000000027              Field_long::val_int()::__PRETTY_FUNCTION__
0000000000c9ccc0 l     O .rodata	0000000000000036              Field_long::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9cd00 l     O .rodata	0000000000000030              Field_long::send_binary(Protocol*)::__PRETTY_FUNCTION__
0000000000c9cd40 l     O .rodata	0000000000000044              Field_longlong::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9cda0 l     O .rodata	000000000000002a              Field_longlong::store(double)::__PRETTY_FUNCTION__
0000000000c9cde0 l     O .rodata	0000000000000032              Field_longlong::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9ce20 l     O .rodata	000000000000002a              Field_longlong::val_real()::__PRETTY_FUNCTION__
0000000000c9ce60 l     O .rodata	000000000000002b              Field_longlong::val_int()::__PRETTY_FUNCTION__
0000000000c9cea0 l     O .rodata	0000000000000034              Field_longlong::send_binary(Protocol*)::__PRETTY_FUNCTION__
0000000000c9cee0 l     O .rodata	0000000000000042              Field_real::pack(unsigned char*, unsigned char const*, unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c9cf40 l     O .rodata	0000000000000027              Field_float::store(double)::__PRETTY_FUNCTION__
0000000000c9cf80 l     O .rodata	0000000000000027              Field_float::val_real()::__PRETTY_FUNCTION__
0000000000c9cfc0 l     O .rodata	0000000000000037              Field_float::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9d000 l     O .rodata	0000000000000031              Field_float::send_binary(Protocol*)::__PRETTY_FUNCTION__
0000000000c9d040 l     O .rodata	0000000000000028              Field_double::store(double)::__PRETTY_FUNCTION__
0000000000c9d080 l     O .rodata	0000000000000028              Field_double::val_real()::__PRETTY_FUNCTION__
0000000000c9d0c0 l     O .rodata	0000000000000029              Field_double::val_int()::__PRETTY_FUNCTION__
0000000000c9d100 l     O .rodata	0000000000000039              Field_real::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000c9d140 l     O .rodata	0000000000000038              Field_double::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9d180 l     O .rodata	0000000000000043              Field_timestamp::get_auto_set_type() const::__PRETTY_FUNCTION__
0000000000c9d1e0 l     O .rodata	0000000000000045              Field_timestamp::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9d240 l     O .rodata	0000000000000033              Field_timestamp::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9d280 l     O .rodata	000000000000002b              Field_timestamp::val_real()::__PRETTY_FUNCTION__
0000000000c9d2c0 l     O .rodata	000000000000002c              Field_timestamp::val_int()::__PRETTY_FUNCTION__
0000000000c9d300 l     O .rodata	000000000000003b              Field_timestamp::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9d340 l     O .rodata	0000000000000026              Field_time::store(double)::__PRETTY_FUNCTION__
0000000000c9d380 l     O .rodata	000000000000002e              Field_time::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9d3c0 l     O .rodata	0000000000000026              Field_time::val_real()::__PRETTY_FUNCTION__
0000000000c9d400 l     O .rodata	0000000000000027              Field_time::val_int()::__PRETTY_FUNCTION__
0000000000c9d440 l     O .rodata	0000000000000036              Field_time::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9d480 l     O .rodata	0000000000000040              Field_year::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9d4c0 l     O .rodata	000000000000002e              Field_year::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9d500 l     O .rodata	0000000000000030              Field_year::send_binary(Protocol*)::__PRETTY_FUNCTION__
0000000000c9d540 l     O .rodata	0000000000000027              Field_year::val_int()::__PRETTY_FUNCTION__
0000000000c9d580 l     O .rodata	0000000000000036              Field_year::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9d5c0 l     O .rodata	0000000000000040              Field_date::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9d600 l     O .rodata	000000000000002e              Field_date::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9d640 l     O .rodata	0000000000000026              Field_date::val_real()::__PRETTY_FUNCTION__
0000000000c9d680 l     O .rodata	0000000000000027              Field_date::val_int()::__PRETTY_FUNCTION__
0000000000c9d6c0 l     O .rodata	0000000000000036              Field_date::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9d700 l     O .rodata	0000000000000043              Field_newdate::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9d760 l     O .rodata	0000000000000031              Field_newdate::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9d7a0 l     O .rodata	0000000000000043              Field_newdate::store_time(st_mysql_time*, enum_mysql_timestamp_type)::__PRETTY_FUNCTION__
0000000000c9d800 l     O .rodata	0000000000000029              Field_newdate::val_real()::__PRETTY_FUNCTION__
0000000000c9d840 l     O .rodata	000000000000002a              Field_newdate::val_int()::__PRETTY_FUNCTION__
0000000000c9d880 l     O .rodata	0000000000000039              Field_newdate::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9d8c0 l     O .rodata	0000000000000044              Field_datetime::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9d920 l     O .rodata	0000000000000032              Field_datetime::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9d960 l     O .rodata	0000000000000044              Field_datetime::store_time(st_mysql_time*, enum_mysql_timestamp_type)::__PRETTY_FUNCTION__
0000000000c9d9c0 l     O .rodata	000000000000002b              Field_datetime::val_int()::__PRETTY_FUNCTION__
0000000000c9da00 l     O .rodata	000000000000003a              Field_datetime::val_str(String*, String*)::__PRETTY_FUNCTION__
000000000075787e l     F .text	000000000000013c              check_string_copy_error(Field_str*, char const*, char const*, char const*, charset_info_st*)
0000000000c9da40 l     O .rodata	0000000000000042              Field_string::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9daa0 l     O .rodata	0000000000000025              Field_str::store(double)::__PRETTY_FUNCTION__
0000000000c9dae0 l     O .rodata	0000000000000028              Field_string::val_real()::__PRETTY_FUNCTION__
0000000000c9db20 l     O .rodata	0000000000000029              Field_string::val_int()::__PRETTY_FUNCTION__
0000000000c9db60 l     O .rodata	0000000000000038              Field_string::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9dba0 l     O .rodata	000000000000003b              Field_string::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
00000000007589c8 l     F .text	00000000000000fc              check_field_for_37426(void const*)
0000000000c9dbe0 l     O .rodata	0000000000000028              check_field_for_37426(void const*)::__PRETTY_FUNCTION__
0000000000c9dc20 l     O .rodata	0000000000000035              Field_string::sort_string(unsigned char*, unsigned int)::__PRETTY_FUNCTION__
0000000000c9dc60 l     O .rodata	0000000000000039              Field_string::do_save_field_metadata(unsigned char*)::__PRETTY_FUNCTION__
0000000000c9dca0 l     O .rodata	000000000000003c              Field_varstring::do_save_field_metadata(unsigned char*)::__PRETTY_FUNCTION__
0000000000c9dce0 l     O .rodata	0000000000000045              Field_varstring::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9dd40 l     O .rodata	000000000000002b              Field_varstring::val_real()::__PRETTY_FUNCTION__
0000000000c9dd80 l     O .rodata	000000000000002c              Field_varstring::val_int()::__PRETTY_FUNCTION__
0000000000c9ddc0 l     O .rodata	000000000000003b              Field_varstring::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9de00 l     O .rodata	000000000000003e              Field_varstring::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000c9de40 l     O .rodata	0000000000000038              Field_varstring::sort_string(unsigned char*, unsigned int)::__PRETTY_FUNCTION__
0000000000c9de80 l     O .rodata	000000000000006c              Field_blob::Field_blob(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, TABLE_SHARE*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9df00 l     O .rodata	0000000000000040              Field_blob::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9df40 l     O .rodata	0000000000000026              Field_blob::val_real()::__PRETTY_FUNCTION__
0000000000c9df80 l     O .rodata	0000000000000027              Field_blob::val_int()::__PRETTY_FUNCTION__
0000000000c9dfc0 l     O .rodata	0000000000000036              Field_blob::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9e000 l     O .rodata	0000000000000039              Field_blob::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000c9e040 l     O .rodata	0000000000000033              Field_blob::sort_string(unsigned char*, unsigned int)::__PRETTY_FUNCTION__
0000000000c9e0c0 l     O .rodata	0000000000000040              Field_enum::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9e100 l     O .rodata	000000000000002e              Field_enum::store(long long, bool)::__PRETTY_FUNCTION__
0000000000c9e140 l     O .rodata	0000000000000027              Field_enum::val_int()::__PRETTY_FUNCTION__
0000000000c9e180 l     O .rodata	000000000000003f              Field_set::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9e1c0 l     O .rodata	000000000000002d              Field_set::store(long long, bool)::__PRETTY_FUNCTION__
000000000075e308 l     F .text	00000000000000c3              compare_type_names(charset_info_st*, st_typelib*, st_typelib*)
0000000000c9e240 l     O .rodata	0000000000000042              Field_enum::pack(unsigned char*, unsigned char const*, unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c9e2a0 l     O .rodata	000000000000004a              Field_enum::unpack(unsigned char*, unsigned char const*, unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c9e300 l     O .rodata	000000000000003f              Field_bit::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9e340 l     O .rodata	0000000000000026              Field_bit::val_int()::__PRETTY_FUNCTION__
0000000000c9e380 l     O .rodata	0000000000000035              Field_bit::val_str(String*, String*)::__PRETTY_FUNCTION__
0000000000c9e3c0 l     O .rodata	0000000000000038              Field_bit::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000c9e400 l     O .rodata	0000000000000053              Field_bit::compatible_field_size(unsigned int, Relay_log_info*, unsigned short, int*)::__PRETTY_FUNCTION__
0000000000c9e460 l     O .rodata	0000000000000041              Field_bit::pack(unsigned char*, unsigned char const*, unsigned int, bool)::__PRETTY_FUNCTION__
0000000000c9e4c0 l     O .rodata	0000000000000047              Field_bit_as_char::store(char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000c9e520 l     O .rodata	000000000000005a              Create_field::init_for_tmp_table(enum_field_types, unsigned int, unsigned int, bool, bool, unsigned int)::__PRETTY_FUNCTION__
0000000000c9e580 l     O .rodata	0000000000000091              Create_field::init(THD*, char*, enum_field_types, char*, char*, unsigned int, Item*, Item*, st_mysql_lex_string*, char*, List<String>*, charset_info_st*, unsigned int)::__PRETTY_FUNCTION__
0000000000c9e6a0 l     O .rodata	0000000000000029              Field_blob::char_length()::__PRETTY_FUNCTION__
0000000000c9e6e0 l     O .rodata	0000000000000030              Field_blob::max_display_length()::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              field_conv.cc
0000000000c9eae0 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
0000000000c9e948 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c9e950 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c9e954 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c9e958 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c9e95c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c9e960 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010628a0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000768652 l     F .text	0000000000000032              do_field_eq(Copy_field*)
0000000000768684 l     F .text	000000000000001f              do_field_1(Copy_field*)
00000000007686a3 l     F .text	0000000000000038              do_field_2(Copy_field*)
00000000007686db l     F .text	0000000000000051              do_field_3(Copy_field*)
000000000076872c l     F .text	000000000000006a              do_field_4(Copy_field*)
0000000000768796 l     F .text	000000000000009c              do_field_6(Copy_field*)
0000000000768832 l     F .text	00000000000000ce              do_field_8(Copy_field*)
0000000000768900 l     F .text	0000000000000083              do_field_to_null_str(Copy_field*)
0000000000768983 l     F .text	000000000000009f              do_outer_field_to_null_str(Copy_field*)
0000000000c9ea70 l     O .rodata	000000000000001e              set_field_to_null(Field*)::__PRETTY_FUNCTION__
0000000000c9eaa0 l     O .rodata	0000000000000035              set_field_to_null_with_conversions(Field*, bool)::__PRETTY_FUNCTION__
0000000000768cba l     F .text	000000000000000b              do_skip(Copy_field*)
0000000000768cc5 l     F .text	000000000000009c              do_copy_null(Copy_field*)
0000000000768d61 l     F .text	00000000000000b8              do_outer_field_null(Copy_field*)
0000000000768e19 l     F .text	000000000000007d              do_copy_not_null(Copy_field*)
0000000000768e96 l     F .text	0000000000000040              do_copy_maybe_null(Copy_field*)
0000000000768ed6 l     F .text	000000000000004d              do_copy_timestamp(Copy_field*)
0000000000768f23 l     F .text	0000000000000071              do_copy_next_number(Copy_field*)
0000000000768f94 l     F .text	0000000000000057              do_copy_blob(Copy_field*)
0000000000768feb l     F .text	0000000000000096              do_conv_blob(Copy_field*)
0000000000769081 l     F .text	0000000000000130              do_save_blob(Copy_field*)
00000000007691b1 l     F .text	000000000000012f              do_field_string(Copy_field*)
00000000007692e0 l     F .text	000000000000005b              do_field_enum(Copy_field*)
000000000076933b l     F .text	0000000000000133              do_field_varbinary_pre50(Copy_field*)
000000000076946e l     F .text	000000000000006b              do_field_int(Copy_field*)
00000000007694d9 l     F .text	0000000000000063              do_field_real(Copy_field*)
000000000076953c l     F .text	000000000000009b              do_field_decimal(Copy_field*)
00000000007695d7 l     F .text	00000000000000df              do_cut_string(Copy_field*)
00000000007696b6 l     F .text	00000000000001ad              do_cut_string_complex(Copy_field*)
0000000000769863 l     F .text	00000000000000a1              do_expand_binary(Copy_field*)
0000000000769904 l     F .text	00000000000000a1              do_expand_string(Copy_field*)
00000000007699a5 l     F .text	00000000000001c4              get_varstring_copy_length(Field_varstring*, Field_varstring const*)
0000000000769b69 l     F .text	000000000000012a              copy_field_varstring(Field_varstring*, Field_varstring const*)
0000000000c9eb00 l     O .rodata	0000000000000044              copy_field_varstring(Field_varstring*, Field_varstring const*)::__PRETTY_FUNCTION__
0000000000769c93 l     F .text	000000000000002a              do_varstring(Copy_field*)
0000000000000000 l    df *ABS*	0000000000000000              filesort.cc
000000000076b24a l     F .text	0000000000000077              bitmap_set_bit
0000000000c9f280 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
000000000076b2c1 l     F .text	0000000000000067              bitmap_is_set
0000000000c9f3a0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000c9f260 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
000000000076b328 l     F .text	0000000000000176              inline_mysql_file_pread(char const*, unsigned int, int, unsigned char*, unsigned long, unsigned long long, int)
0000000000c9ec20 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c9f1d0 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000c9f1f0 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000c9f1a0 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000c9ed8c l     O .rodata	0000000000000004              SRID_SIZE
0000000000c9ed90 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c9ed94 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c9ed98 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c9ed9c l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001062900 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c9f140 l     O .rodata	0000000000000058              filesort(THD*, TABLE*, st_sort_field*, unsigned int, SQL_SELECT*, unsigned long long, bool, unsigned long long*)::__PRETTY_FUNCTION__
000000000076f648 l     F .text	00000000000003c4              sortlength(THD*, st_sort_field*, unsigned int, bool*)
000000000076fa0c l     F .text	0000000000000302              get_addon_fields(THD*, Field**, unsigned int, unsigned int*)
000000000076fd0e l     F .text	00000000000000b8              unpack_addon_fields(st_sort_addon_field*, unsigned char*)
000000000076c412 l     F .text	000000000000001a              char_array_size(unsigned int, unsigned int)
000000000076c42c l     F .text	0000000000000128              make_char_array(unsigned char**, unsigned int, unsigned int, int)
000000000076ca24 l     F .text	0000000000000974              find_all_keys(st_sort_param*, SQL_SELECT*, unsigned char**, st_io_cache*, st_io_cache*)
000000000076e1d1 l     F .text	000000000000015a              save_index(st_sort_param*, unsigned char**, unsigned int, st_filesort_info*)
000000000076c554 l     F .text	000000000000017f              read_buffpek_from_file(st_io_cache*, unsigned int, unsigned char*)
000000000076f523 l     F .text	00000000000000e3              merge_index(st_sort_param*, unsigned char*, st_buffpek*, unsigned int, st_io_cache*, st_io_cache*)
000000000076c6d3 l     F .text	0000000000000351              dbug_print_record(TABLE*, bool)
000000000076e09c l     F .text	0000000000000135              register_used_fields(st_sort_param*)
000000000076d398 l     F .text	000000000000034a              write_keys(st_sort_param*, unsigned char**, unsigned int, st_io_cache*, st_io_cache*)
000000000076d7be l     F .text	00000000000008de              make_sortkey(st_sort_param*, unsigned char*, unsigned char*)
000000000076d6e2 l     F .text	00000000000000dc              store_length(unsigned char*, unsigned int, unsigned int)
0000000000c9f220 l     O .rodata	000000000000002e              make_sortkey(st_sort_param*, unsigned char*, unsigned char*)::__PRETTY_FUNCTION__
0000000000c9f2c0 l     O .rodata	000000000000002e              reuse_freed_buff(st_queue*, st_buffpek*, unsigned int)::__PRETTY_FUNCTION__
0000000000c9f300 l     O .rodata	000000000000005f              merge_buffers(st_sort_param*, st_io_cache*, st_io_cache*, unsigned char*, st_buffpek*, st_buffpek*, st_buffpek*, int)::__PRETTY_FUNCTION__
000000000076f606 l     F .text	0000000000000042              suffix_length(unsigned long)
0000000000c9f360 l     O .rodata	0000000000000030              sortlength(THD*, st_sort_field*, unsigned int, bool*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              signal_handler.cc
0000000000c9f3d0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000c9f3d8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000c9f3dc l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000c9f3e0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000c9f3e4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000c9f3e8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001062960 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000c9f424 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
00000000010ec470 l     O .data	0000000000000018              bool_values
0000000001385d34 l     O .bss	0000000000000004              segfaulted
0000000000000000 l    df *ABS*	0000000000000000              handler.cc
00000000007706d2 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000007707e9 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000ca1eb0 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000770866 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
0000000000770990 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
0000000000770a90 l     F .text	0000000000000176              inline_mysql_file_pwrite(char const*, unsigned int, int, unsigned char const*, unsigned long, unsigned long long, int)
0000000000770c06 l     F .text	000000000000011f              inline_mysql_file_delete_with_symlink(unsigned int, char const*, unsigned int, char const*, int)
0000000000c9fed0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000ca18a0 l     O .rodata	0000000000000037              Ha_trx_info::register_ha(THD_TRANS*, handlerton*)::__PRETTY_FUNCTION__
0000000000ca1a40 l     O .rodata	0000000000000027              Ha_trx_info::set_trx_read_write()::__PRETTY_FUNCTION__
0000000000ca19c0 l     O .rodata	000000000000002c              Ha_trx_info::is_trx_read_write() const::__PRETTY_FUNCTION__
0000000000ca1a00 l     O .rodata	0000000000000038              Ha_trx_info::coalesce_trx_with(Ha_trx_info const*)::__PRETTY_FUNCTION__
0000000000ca1920 l     O .rodata	0000000000000027              Ha_trx_info::next() const::__PRETTY_FUNCTION__
0000000000ca18e0 l     O .rodata	0000000000000024              Ha_trx_info::ht() const::__PRETTY_FUNCTION__
0000000000ca1d60 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000ca1d90 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000ca1d20 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000ca1d40 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000ca2300 l     O .rodata	000000000000002e              handler::index_type(unsigned int)::__PRETTY_FUNCTION__
0000000000ca22c0 l     O .rodata	000000000000002d              handler::exec_bulk_update(unsigned int*)::__PRETTY_FUNCTION__
0000000000ca2280 l     O .rodata	0000000000000027              handler::end_bulk_delete()::__PRETTY_FUNCTION__
0000000000ca2240 l     O .rodata	0000000000000031              handler::repair(THD*, st_ha_check_opt*)::__PRETTY_FUNCTION__
0000000000ca21e0 l     O .rodata	0000000000000042              handler::bulk_update_row(unsigned char const*, unsigned char*, unsigned int*)::__PRETTY_FUNCTION__
0000000000770d25 l     F .text	0000000000000031              ha_resolve_storage_engine_name(handlerton const*)
0000000000770d56 l     F .text	0000000000000034              ha_storage_engine_is_enabled(handlerton const*)
0000000000ca1ae0 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000ca1b80 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000ca1b40 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000ca1bc0 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca0108 l     O .rodata	0000000000000004              SRID_SIZE
0000000000ca010c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ca0110 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ca0114 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ca0118 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010629c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000ca1e00 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000001385e20 l     O .bss	0000000000000400              installed_htons
0000000001062a20 l     O .data.rel.ro	0000000000000090              sys_table_aliases
00000000010ec540 l     O .data	0000000000000020              known_extensions
0000000001386220 l     O .bss	0000000000000008              known_system_databases
0000000000770d8a l     F .text	0000000000000045              ha_default_plugin(THD*)
0000000000ca1820 l     O .rodata	0000000000000028              ha_default_handlerton(THD*)::__PRETTY_FUNCTION__
0000000001386228 l     O .bss	0000000000000008              handler_errmsgs
00000000007713d1 l     F .text	000000000000000d              get_handler_errmsgs
0000000000771a33 l     F .text	0000000000000041              ha_finish_errors()
0000000000ca1860 l     O .rodata	000000000000002b              ha_finalize_handlerton(st_plugin_int*)::__PRETTY_FUNCTION__
0000000000ca1890 l     O .rodata	000000000000000e              ha_init()::__PRETTY_FUNCTION__
00000000007788e1 l     F .text	0000000000000196              ha_known_system_databases()
0000000000772216 l     F .text	000000000000005f              dropdb_handlerton(THD*, st_plugin_int**, void*)
00000000007722a6 l     F .text	0000000000000099              closecon_handlerton(THD*, st_plugin_int**, void*)
00000000007726e7 l     F .text	00000000000000e8              ha_check_and_coalesce_trx_read_only(THD*, Ha_trx_info*, bool)
0000000000ca1960 l     O .rodata	0000000000000043              ha_check_and_coalesce_trx_read_only(THD*, Ha_trx_info*, bool)::__PRETTY_FUNCTION__
0000000000ca1a80 l     O .rodata	0000000000000020              ha_commit_trans(THD*, bool)::__PRETTY_FUNCTION__
0000000000ca1aa0 l     O .rodata	0000000000000022              ha_rollback_trans(THD*, bool)::__PRETTY_FUNCTION__
00000000007733ed l     F .text	0000000000000067              xacommit_handlerton(THD*, st_plugin_int**, void*)
0000000000773454 l     F .text	0000000000000067              xarollback_handlerton(THD*, st_plugin_int**, void*)
0000000000773537 l     F .text	00000000000001da              xid_to_str(char*, xid_t*)
0000000000773711 l     F .text	00000000000003e7              xarecover_handlerton(THD*, st_plugin_int**, void*)
0000000000ca1b10 l     O .rodata	0000000000000016              ha_recover(st_hash*)::__PRETTY_FUNCTION__
0000000000ca1c00 l     O .rodata	000000000000002f              ha_rollback_to_savepoint(THD*, st_savepoint*)::__PRETTY_FUNCTION__
0000000000ca1c40 l     O .rodata	0000000000000023              ha_savepoint(THD*, st_savepoint*)::__PRETTY_FUNCTION__
0000000000ca1c80 l     O .rodata	000000000000002b              ha_release_savepoint(THD*, st_savepoint*)::__PRETTY_FUNCTION__
00000000007747b1 l     F .text	0000000000000066              snapshot_handlerton(THD*, st_plugin_int**, void*)
000000000077489a l     F .text	0000000000000073              flush_handlerton(THD*, st_plugin_int**, void*)
0000000000ca1cb0 l     O .rodata	000000000000001d              handler::ha_thd() const::__PRETTY_FUNCTION__
0000000000ca1ce0 l     O .rodata	0000000000000034              handler::ha_open(TABLE*, char const*, int, int)::__PRETTY_FUNCTION__
0000000000ca1dc0 l     O .rodata	0000000000000025              handler::update_auto_increment()::__PRETTY_FUNCTION__
0000000000ca1e40 l     O .rodata	0000000000000062              handler::get_auto_increment(unsigned long long, unsigned long long, unsigned long long, unsigned long long*, unsigned long long*)::__PRETTY_FUNCTION__
0000000000776ebf l     F .text	00000000000001f4              update_frm_version(TABLE*)
0000000000ca1f20 l     O .rodata	0000000000000024              handler::mark_trx_read_write()::__PRETTY_FUNCTION__
0000000000ca1ee0 l     O .rodata	000000000000002c              handler::ha_repair(THD*, st_ha_check_opt*)::__PRETTY_FUNCTION__
0000000000ca1f60 l     O .rodata	0000000000000041              handler::index_next_same(unsigned char*, unsigned char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000ca1fc0 l     O .rodata	000000000000004f              ha_check_if_supported_system_table(handlerton*, char const*, char const*)::__PRETTY_FUNCTION__
00000000007787a7 l     F .text	000000000000013a              check_engine_system_table_handlerton(THD*, st_plugin_int**, void*)
0000000000778a77 l     F .text	0000000000000098              system_databases_handlerton(THD*, st_plugin_int**, void*)
0000000000ca2020 l     O .rodata	0000000000000029              ha_known_system_databases()::__PRETTY_FUNCTION__
0000000000778e21 l     F .text	000000000000009b              discover_handlerton(THD*, st_plugin_int**, void*)
000000000077900e l     F .text	00000000000000a9              find_files_handlerton(THD*, st_plugin_int**, void*)
00000000007791dd l     F .text	0000000000000099              table_exists_in_engine_handlerton(THD*, st_plugin_int**, void*)
0000000000ca2060 l     O .rodata	000000000000003e              handler::read_multi_range_next(st_key_multi_range**)::__PRETTY_FUNCTION__
0000000000779cd6 l     F .text	0000000000000184              exts_handlerton(THD*, st_plugin_int**, void*)
0000000000ca20a0 l     O .rodata	0000000000000019              ha_known_exts()::__PRETTY_FUNCTION__
0000000000779fdd l     F .text	00000000000000e3              stat_print(THD*, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int)
000000000077a0c0 l     F .text	0000000000000089              showstat_handlerton(THD*, st_plugin_int**, void*)
000000000077a3f0 l     F .text	0000000000000116              check_table_binlog_row_based(THD*, TABLE*)
0000000000ca20c0 l     O .rodata	0000000000000030              check_table_binlog_row_based(THD*, TABLE*)::__PRETTY_FUNCTION__
000000000077a506 l     F .text	000000000000026c              write_locked_table_maps(THD*)
000000000077a772 l     F .text	00000000000001c3              binlog_log_row(TABLE*, unsigned char const*, unsigned char const*, bool (*)(THD*, TABLE*, bool, st_bitmap*, unsigned int, unsigned char const*, unsigned char const*))
0000000000ca2100 l     O .rodata	0000000000000029              handler::ha_external_lock(THD*, int)::__PRETTY_FUNCTION__
0000000000ca2130 l     O .rodata	0000000000000018              handler::ha_reset()::__PRETTY_FUNCTION__
0000000000ca2160 l     O .rodata	0000000000000031              handler::ha_update_row(unsigned char const*, unsigned char*)::__PRETTY_FUNCTION__
0000000000ca21a0 l     O .rodata	0000000000000029              handler::ha_delete_row(unsigned char const*)::__PRETTY_FUNCTION__
000000000077b0d3 l     F .text	0000000000000203              __static_initialization_and_destruction_0(int, int)
000000000077b2d6 l     F .text	0000000000000015              _GLOBAL__sub_I_handler.cc
0000000000000000 l    df *ABS*	0000000000000000              hostname.cc
000000000077c766 l     F .text	0000000000000071              inline_mysql_mutex_init
000000000077c7d7 l     F .text	0000000000000080              inline_mysql_mutex_destroy
000000000077c857 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000077c96e l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000ca2380 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000001386240 l     O .bss	0000000000000008              hostname_cache
000000000077caff l     F .text	0000000000000076              prepare_hostname_cache_key(char const*, char*)
0000000000ca2700 l     O .rodata	0000000000000034              prepare_hostname_cache_key(char const*, char*)::__PRETTY_FUNCTION__
000000000077cb75 l     F .text	0000000000000029              hostname_cache_search(char const*)
000000000077cb9e l     F .text	0000000000000151              add_hostname_impl(char const*, char const*)
000000000077ccef l     F .text	0000000000000085              add_hostname(char const*, char const*)
000000000077ced6 l     F .text	00000000000000a9              is_ip_loopback(sockaddr const*)
000000000077cf7f l     F .text	0000000000000082              is_hostname_valid(char const*)
0000000001386260 l     O .bss	0000000000000020              ip_to_hostname(sockaddr_storage*, char const*, char**, unsigned int*)::debug_sock_addr
0000000001386280 l     O .bss	0000000000000060              ip_to_hostname(sockaddr_storage*, char const*, char**, unsigned int*)::debug_addr_info
0000000000ca2740 l     O .rodata	0000000000000043              ip_to_hostname(sockaddr_storage*, char const*, char**, unsigned int*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              init.cc
0000000000ca2788 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000000000 l    df *ABS*	0000000000000000              item.cc
0000000000ca53e0 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
000000000077dc16 l     F .text	0000000000000077              bitmap_set_bit
0000000000ca36a0 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
000000000077dc8d l     F .text	0000000000000067              bitmap_is_set
0000000000ca4520 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
000000000077dcf4 l     F .text	000000000000004c              check_if_only_end_space(charset_info_st*, char*, char*)
0000000000ca3520 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
0000000000ca34e0 l     O .rodata	000000000000002b              max_my_decimal(my_decimal*, int, int)::__PRETTY_FUNCTION__
0000000000ca3620 l     O .rodata	0000000000000036              my_decimal_length_to_precision(unsigned int, unsigned int, bool)::__PRETTY_FUNCTION__
0000000000ca3dc0 l     O .rodata	0000000000000047              my_decimal_precision_to_length_no_truncation(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000ca3fe0 l     O .rodata	0000000000000039              my_decimal_precision_to_length(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000ca2948 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
000000000077dd40 l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
000000000077dd72 l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
000000000077dd8c l     F .text	0000000000000025              dbug_tmp_use_all_columns(TABLE*, st_bitmap*)
000000000077ddb1 l     F .text	0000000000000026              dbug_tmp_restore_column_map(st_bitmap*, unsigned int*)
000000000077ddd7 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000ca3780 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000ca3740 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000ca5420 l     O .rodata	0000000000000030              Item_field::is_outer_field() const::__PRETTY_FUNCTION__
0000000000ca5460 l     O .rodata	0000000000000043              Item_field::get_geometry_type() const::__PRETTY_FUNCTION__
0000000000ca5600 l     O .rodata	0000000000000023              Item_param::is_null()::__PRETTY_FUNCTION__
0000000000ca5540 l     O .rodata	0000000000000025              Item_int::val_int()::__PRETTY_FUNCTION__
0000000000ca5580 l     O .rodata	0000000000000024              Item_int::val_real()::__PRETTY_FUNCTION__
0000000000ca5640 l     O .rodata	0000000000000025              Item_uint::val_real()::__PRETTY_FUNCTION__
0000000000ca5500 l     O .rodata	0000000000000026              Item_float::val_real()::__PRETTY_FUNCTION__
0000000000ca54c0 l     O .rodata	0000000000000027              Item_float::val_int()::__PRETTY_FUNCTION__
0000000000ca55c0 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca4760 l     O .rodata	000000000000002b              Item_hex_string::val_real()::__PRETTY_FUNCTION__
0000000000ca4720 l     O .rodata	0000000000000032              Item_hex_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca3c00 l     O .rodata	000000000000002d              Item_ref::get_time(st_mysql_time*)::__PRETTY_FUNCTION__
0000000000ca3bc0 l     O .rodata	000000000000002e              Item_ref::is_outer_field() const::__PRETTY_FUNCTION__
0000000000ca2a2c l     O .rodata	0000000000000004              SRID_SIZE
0000000000ca2a30 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ca2a34 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ca2a38 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ca2a3c l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000ca36e0 l     O .rodata	000000000000004b              Item_func_conv_charset::Item_func_conv_charset(Item*, charset_info_st*, bool)::__PRETTY_FUNCTION__
0000000001062ac0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001386300 l     O .bss	0000000000000008              real_traits_instance
0000000001386308 l     O .bss	0000000000000008              decimal_traits_instance
0000000001386310 l     O .bss	0000000000000008              integer_traits_instance
0000000000ca3540 l     O .rodata	000000000000001e              Item::val_bool()::__PRETTY_FUNCTION__
0000000000ca3560 l     O .rodata	000000000000002d              Item::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000ca35a0 l     O .rodata	0000000000000035              Item::val_decimal_from_date(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca35e0 l     O .rodata	0000000000000035              Item::val_decimal_from_time(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca3660 l     O .rodata	0000000000000038              Item::transform(Item* (Item::*)(unsigned char*), unsigned char*)::__PRETTY_FUNCTION__
0000000000ca37c0 l     O .rodata	0000000000000038              Item_sp_variable::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca3800 l     O .rodata	000000000000002c              Item_sp_variable::val_real()::__PRETTY_FUNCTION__
0000000000ca3840 l     O .rodata	000000000000002d              Item_sp_variable::val_int()::__PRETTY_FUNCTION__
0000000000ca3880 l     O .rodata	0000000000000033              Item_sp_variable::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca38c0 l     O .rodata	000000000000003f              Item_sp_variable::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca3900 l     O .rodata	0000000000000028              Item_splocal::this_item()::__PRETTY_FUNCTION__
0000000000ca3940 l     O .rodata	0000000000000034              Item_splocal::this_item() const::__PRETTY_FUNCTION__
0000000000ca3980 l     O .rodata	000000000000003a              Item_splocal::this_item_addr(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca39c0 l     O .rodata	000000000000002a              Item_case_expr::this_item()::__PRETTY_FUNCTION__
0000000000ca3a00 l     O .rodata	0000000000000036              Item_case_expr::this_item() const::__PRETTY_FUNCTION__
0000000000ca3a40 l     O .rodata	000000000000003c              Item_case_expr::this_item_addr(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca3a80 l     O .rodata	000000000000002b              Item_name_const::val_real()::__PRETTY_FUNCTION__
0000000000ca3ac0 l     O .rodata	000000000000002c              Item_name_const::val_int()::__PRETTY_FUNCTION__
0000000000ca3b00 l     O .rodata	0000000000000032              Item_name_const::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca3b40 l     O .rodata	000000000000003e              Item_name_const::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca3b80 l     O .rodata	0000000000000031              Item_name_const::type() const::__PRETTY_FUNCTION__
00000000007821c1 l     F .text	0000000000000115              left_is_superset(DTCollation*, DTCollation*)
00000000007825df l     F .text	0000000000000080              my_coll_agg_error(DTCollation&, DTCollation&, char const*)
000000000078265f l     F .text	00000000000000a9              my_coll_agg_error(DTCollation&, DTCollation&, DTCollation&, char const*)
0000000000782708 l     F .text	00000000000000c5              my_coll_agg_error(Item**, unsigned int, char const*, int)
00000000007832ed l     F .text	0000000000000091              adjust_max_effective_column_length(Field*, unsigned int)
0000000000ca3c40 l     O .rodata	000000000000002d              Item_field::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca3c80 l     O .rodata	0000000000000026              Item_field::val_real()::__PRETTY_FUNCTION__
0000000000ca3cc0 l     O .rodata	0000000000000027              Item_field::val_int()::__PRETTY_FUNCTION__
0000000000ca3d00 l     O .rodata	000000000000002b              Item_field::val_bool_result()::__PRETTY_FUNCTION__
0000000000ca3d40 l     O .rodata	000000000000002b              Item_int::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca3d80 l     O .rodata	000000000000002c              Item_uint::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca3e20 l     O .rodata	000000000000002d              Item_float::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca3e60 l     O .rodata	0000000000000039              Item_float::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca3ea0 l     O .rodata	0000000000000027              Item_string::val_real()::__PRETTY_FUNCTION__
0000000000ca3ee0 l     O .rodata	0000000000000028              Item_string::val_int()::__PRETTY_FUNCTION__
0000000000ca3f20 l     O .rodata	0000000000000025              Item_null::val_real()::__PRETTY_FUNCTION__
0000000000ca3f60 l     O .rodata	0000000000000026              Item_null::val_int()::__PRETTY_FUNCTION__
0000000000ca3fa0 l     O .rodata	000000000000002c              Item_null::val_str(String*)::__PRETTY_FUNCTION__
0000000000785b2d l     F .text	0000000000000023              default_set_param_func(Item_param*, unsigned char**, unsigned long)
0000000000ca4020 l     O .rodata	0000000000000040              Item_param::set_from_user_var(THD*, user_var_entry const*)::__PRETTY_FUNCTION__
0000000000ca4060 l     O .rodata	0000000000000034              Item_param::save_in_field(Field*, bool)::__PRETTY_FUNCTION__
0000000000ca40a0 l     O .rodata	0000000000000026              Item_param::val_real()::__PRETTY_FUNCTION__
0000000000ca40e0 l     O .rodata	0000000000000027              Item_param::val_int()::__PRETTY_FUNCTION__
0000000000ca4120 l     O .rodata	0000000000000039              Item_param::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca4160 l     O .rodata	000000000000002d              Item_param::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca41a0 l     O .rodata	000000000000003d              Item_param::query_val_str(THD*, String*) const::__PRETTY_FUNCTION__
0000000000ca41e0 l     O .rodata	0000000000000027              Item_param::clone_item()::__PRETTY_FUNCTION__
0000000000ca4220 l     O .rodata	000000000000002b              Item_copy::create(Item*)::__PRETTY_FUNCTION__
000000000078cfb0 l     F .text	000000000000005e              save_int_value_in_field(Field*, long long, bool, bool)
0000000000ca4260 l     O .rodata	000000000000002c              Item::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca42a0 l     O .rodata	0000000000000030              Item_ref_null_helper::val_real()::__PRETTY_FUNCTION__
0000000000ca42e0 l     O .rodata	0000000000000031              Item_ref_null_helper::val_int()::__PRETTY_FUNCTION__
0000000000ca4320 l     O .rodata	0000000000000043              Item_ref_null_helper::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca4380 l     O .rodata	000000000000002e              Item_ref_null_helper::val_bool()::__PRETTY_FUNCTION__
0000000000ca43c0 l     O .rodata	0000000000000037              Item_ref_null_helper::val_str(String*)::__PRETTY_FUNCTION__
0000000000788dd0 l     F .text	0000000000000179              mark_as_dependent(THD*, st_select_lex*, st_select_lex*, Item_ident*, Item_ident*)
00000000007890fe l     F .text	000000000000047d              find_field_in_group_list(Item*, st_order*)
0000000000ca4400 l     O .rodata	000000000000002f              find_field_in_group_list(Item*, st_order*)::__PRETTY_FUNCTION__
000000000078957b l     F .text	000000000000036d              resolve_ref_in_select_and_group(THD*, Item_ident*, st_select_lex*)
0000000000ca4440 l     O .rodata	0000000000000047              resolve_ref_in_select_and_group(THD*, Item_ident*, st_select_lex*)::__PRETTY_FUNCTION__
0000000000ca44a0 l     O .rodata	0000000000000037              Item_field::fix_outer_field(THD*, Field**, Item**)::__PRETTY_FUNCTION__
0000000000ca44e0 l     O .rodata	0000000000000032              Item_field::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
000000000078b16b l     F .text	00000000000001f8              convert_zerofill_number_to_string(Item**, Field_num*)
0000000000ca4560 l     O .rodata	0000000000000032              Item::field_type() const::__PRETTY_FUNCTION__
0000000000ca45a0 l     O .rodata	000000000000002f              Item::make_string_field(TABLE*)::__PRETTY_FUNCTION__
0000000000ca45e0 l     O .rodata	000000000000003b              Item::tmp_table_field_from_field_type(TABLE*, bool)::__PRETTY_FUNCTION__
0000000000ca4620 l     O .rodata	0000000000000031              Item_field::make_field(Send_field*)::__PRETTY_FUNCTION__
0000000000ca4660 l     O .rodata	000000000000002e              Item_int_with_ref::clone_item()::__PRETTY_FUNCTION__
000000000078d35b l     F .text	00000000000000d7              nr_of_decimals(char const*, char const*)
0000000000ca46a0 l     O .rodata	000000000000002c              Item_hex_string::val_int()::__PRETTY_FUNCTION__
0000000000ca46e0 l     O .rodata	000000000000003e              Item_hex_string::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca47a0 l     O .rodata	000000000000002c              Item::send(Protocol*, String*)::__PRETTY_FUNCTION__
0000000000ca47e0 l     O .rodata	000000000000003b              Item_field::update_value_transformer(unsigned char*)::__PRETTY_FUNCTION__
0000000000ca4820 l     O .rodata	0000000000000030              Item_ref::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca4860 l     O .rodata	0000000000000029              Item_ref::val_bool_result()::__PRETTY_FUNCTION__
0000000000ca48a0 l     O .rodata	0000000000000024              Item_ref::val_real()::__PRETTY_FUNCTION__
0000000000ca48e0 l     O .rodata	0000000000000025              Item_ref::val_int()::__PRETTY_FUNCTION__
0000000000ca4920 l     O .rodata	0000000000000022              Item_ref::val_bool()::__PRETTY_FUNCTION__
0000000000ca4960 l     O .rodata	000000000000002b              Item_ref::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca49a0 l     O .rodata	0000000000000021              Item_ref::is_null()::__PRETTY_FUNCTION__
0000000000ca49e0 l     O .rodata	0000000000000032              Item_ref::save_in_field(Field*, bool)::__PRETTY_FUNCTION__
0000000000ca4a20 l     O .rodata	000000000000003c              Item_direct_view_ref::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca4a60 l     O .rodata	000000000000003a              Item_default_value::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca4aa0 l     O .rodata	0000000000000046              Item_default_value::transform(Item* (Item::*)(unsigned char*), unsigned char*)::__PRETTY_FUNCTION__
0000000000ca4b00 l     O .rodata	0000000000000039              Item_insert_value::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca4b40 l     O .rodata	000000000000003a              Item_trigger_field::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca4b80 l     O .rodata	000000000000002d              resolve_const_item(THD*, Item**, Item*)::__PRETTY_FUNCTION__
0000000000ca4bc0 l     O .rodata	0000000000000043              Item_cache::get_cache(Item const*, Item_result)::__PRETTY_FUNCTION__
0000000000ca4c20 l     O .rodata	0000000000000031              Item_cache_int::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca4c60 l     O .rodata	000000000000003d              Item_cache_int::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca4ca0 l     O .rodata	000000000000002a              Item_cache_int::val_real()::__PRETTY_FUNCTION__
0000000000ca4ce0 l     O .rodata	000000000000002b              Item_cache_int::val_int()::__PRETTY_FUNCTION__
0000000000ca4d20 l     O .rodata	0000000000000036              Item_cache_datetime::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca4d60 l     O .rodata	0000000000000042              Item_cache_datetime::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca4dc0 l     O .rodata	000000000000002f              Item_cache_datetime::val_real()::__PRETTY_FUNCTION__
0000000000ca4e00 l     O .rodata	0000000000000030              Item_cache_datetime::val_int()::__PRETTY_FUNCTION__
0000000000ca4e40 l     O .rodata	000000000000002b              Item_cache_real::val_real()::__PRETTY_FUNCTION__
0000000000ca4e80 l     O .rodata	000000000000002c              Item_cache_real::val_int()::__PRETTY_FUNCTION__
0000000000ca4ec0 l     O .rodata	0000000000000032              Item_cache_real::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca4f00 l     O .rodata	000000000000003e              Item_cache_real::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca4f40 l     O .rodata	000000000000002e              Item_cache_decimal::val_real()::__PRETTY_FUNCTION__
0000000000ca4f80 l     O .rodata	000000000000002f              Item_cache_decimal::val_int()::__PRETTY_FUNCTION__
0000000000ca4fc0 l     O .rodata	0000000000000035              Item_cache_decimal::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca5000 l     O .rodata	0000000000000041              Item_cache_decimal::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca5060 l     O .rodata	000000000000002a              Item_cache_str::val_real()::__PRETTY_FUNCTION__
0000000000ca50a0 l     O .rodata	000000000000002b              Item_cache_str::val_int()::__PRETTY_FUNCTION__
0000000000ca50e0 l     O .rodata	0000000000000031              Item_cache_str::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca5120 l     O .rodata	000000000000003d              Item_cache_str::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca5160 l     O .rodata	0000000000000036              Item_cache_row::illegal_method_call(char const*)::__PRETTY_FUNCTION__
0000000000ca51a0 l     O .rodata	0000000000000030              Item_type_holder::Item_type_holder(THD*, Item*)::__PRETTY_FUNCTION__
0000000000ca51e0 l     O .rodata	000000000000003f              Item_type_holder::get_real_type(Item*)::__PRETTY_FUNCTION__
0000000000ca5220 l     O .rodata	0000000000000036              Item_type_holder::display_length(Item*)::__PRETTY_FUNCTION__
0000000000ca5260 l     O .rodata	0000000000000034              Item_type_holder::make_field_by_type(TABLE*)::__PRETTY_FUNCTION__
0000000000ca52a0 l     O .rodata	000000000000002c              Item_type_holder::get_full_info(Item*)::__PRETTY_FUNCTION__
0000000000ca52e0 l     O .rodata	000000000000002c              Item_type_holder::val_real()::__PRETTY_FUNCTION__
0000000000ca5320 l     O .rodata	000000000000002d              Item_type_holder::val_int()::__PRETTY_FUNCTION__
0000000000ca5360 l     O .rodata	000000000000003f              Item_type_holder::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca53a0 l     O .rodata	0000000000000033              Item_type_holder::val_str(String*)::__PRETTY_FUNCTION__
0000000000795c9b l     F .text	00000000000000eb              __static_initialization_and_destruction_0(int, int)
0000000000795d86 l     F .text	0000000000000015              _GLOBAL__sub_I_item.cc
0000000000000000 l    df *ABS*	0000000000000000              item_buff.cc
0000000000ca5880 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
0000000000ca5860 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
0000000000ca5778 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000ca5780 l     O .rodata	0000000000000004              SRID_SIZE
0000000000ca5784 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ca5788 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ca578c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ca5790 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001062b20 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000ca5820 l     O .rodata	000000000000002a              new_Cached_item(THD*, Item*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              item_cmpfunc.cc
0000000000ca6f00 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
0000000000ca6be0 l     O .rodata	0000000000000029              String::operator=(String const&)::__PRETTY_FUNCTION__
0000000000ca61e0 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
0000000000ca69c0 l     O .rodata	0000000000000036              my_decimal_length_to_precision(unsigned int, unsigned int, bool)::__PRETTY_FUNCTION__
0000000000ca6a40 l     O .rodata	0000000000000047              my_decimal_precision_to_length_no_truncation(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000ca5a00 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
000000000079bdcc l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
000000000079bdfe l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
000000000079be18 l     F .text	0000000000000061              dbug_tmp_use_all_columns(TABLE*, unsigned int**, st_bitmap*, st_bitmap*)
000000000079be79 l     F .text	0000000000000047              dbug_tmp_restore_column_maps(st_bitmap*, st_bitmap*, unsigned int**)
000000000079bec0 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000ca6100 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000ca60c0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000ca5a98 l     O .rodata	0000000000000004              SRID_SIZE
0000000000ca5a9c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ca5aa0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ca5aa4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ca5aa8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000ca6e40 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
0000000000ca61a0 l     O .rodata	0000000000000034              Arg_comparator::set_cmp_context_for_datetime()::__PRETTY_FUNCTION__
0000000000ca6c80 l     O .rodata	0000000000000037              cmp_item_sort_string_in_static::cmp(Item*)::__PRETTY_FUNCTION__
0000000000ca6fb0 l     O .rodata	000000000000001b              Item_cond::add(Item*)::__PRETTY_FUNCTION__
0000000001062b80 l     O .data.rel.ro	0000000000000050              sp_data_access_name
000000000079bef0 l     F .text	000000000000007b              item_store_type(Item_result, Item*, char)
000000000079bf6b l     F .text	000000000000010f              agg_result_type(Item_result*, Item**, unsigned int)
000000000079c07a l     F .text	0000000000000189              cmp_row_type(Item*, Item*)
000000000079c203 l     F .text	00000000000000fa              agg_cmp_type(Item_result*, Item**, unsigned int)
000000000079c3d2 l     F .text	00000000000001d7              collect_cmp_types(Item**, unsigned int, bool)
0000000000ca5f80 l     O .rodata	000000000000002b              collect_cmp_types(Item**, unsigned int, bool)::__PRETTY_FUNCTION__
000000000079c5a9 l     F .text	0000000000000080              my_coll_agg_error(DTCollation&, DTCollation&, char const*)
0000000000ca5fc0 l     O .rodata	000000000000002a              Item_func_not::val_int()::__PRETTY_FUNCTION__
0000000000ca6000 l     O .rodata	000000000000002e              Item_func_not_all::val_int()::__PRETTY_FUNCTION__
0000000000ca6040 l     O .rodata	000000000000002e              Item_func_nop_all::val_int()::__PRETTY_FUNCTION__
000000000079cb11 l     F .text	00000000000003b0              convert_constant_item(THD*, Item_field*, Item**)
0000000000ca6080 l     O .rodata	0000000000000036              convert_constant_item(THD*, Item_field*, Item**)::__PRETTY_FUNCTION__
0000000000ca6140 l     O .rodata	0000000000000046              Arg_comparator::set_compare_func(Item_result_field*, Item_result)::__PRETTY_FUNCTION__
000000000079dd2b l     F .text	0000000000000084              get_date_from_str(THD*, String*, enum_mysql_timestamp_type, char const*, bool*)
000000000079eec3 l     F .text	000000000000017b              get_year_value(THD*, Item***, Item**, Item*, bool*)
0000000000ca6200 l     O .rodata	0000000000000039              Item_in_optimizer::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca6240 l     O .rodata	000000000000002e              Item_in_optimizer::val_int()::__PRETTY_FUNCTION__
0000000000ca6280 l     O .rodata	0000000000000029              Item_func_eq::val_int()::__PRETTY_FUNCTION__
0000000000ca62c0 l     O .rodata	000000000000002c              Item_func_equal::val_int()::__PRETTY_FUNCTION__
0000000000ca6300 l     O .rodata	0000000000000029              Item_func_ne::val_int()::__PRETTY_FUNCTION__
0000000000ca6340 l     O .rodata	0000000000000029              Item_func_ge::val_int()::__PRETTY_FUNCTION__
0000000000ca6380 l     O .rodata	0000000000000029              Item_func_gt::val_int()::__PRETTY_FUNCTION__
0000000000ca63c0 l     O .rodata	0000000000000029              Item_func_le::val_int()::__PRETTY_FUNCTION__
0000000000ca6400 l     O .rodata	0000000000000029              Item_func_lt::val_int()::__PRETTY_FUNCTION__
0000000000ca6440 l     O .rodata	000000000000002d              Item_func_strcmp::val_int()::__PRETTY_FUNCTION__
0000000000ca6480 l     O .rodata	000000000000002f              Item_func_interval::val_int()::__PRETTY_FUNCTION__
0000000000ca64c0 l     O .rodata	000000000000002e              Item_func_between::val_int()::__PRETTY_FUNCTION__
0000000000ca6500 l     O .rodata	0000000000000034              Item_func_ifnull::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000ca6540 l     O .rodata	000000000000002b              Item_func_ifnull::real_op()::__PRETTY_FUNCTION__
0000000000ca6580 l     O .rodata	000000000000002c              Item_func_ifnull::int_op()::__PRETTY_FUNCTION__
0000000000ca65c0 l     O .rodata	000000000000003e              Item_func_ifnull::decimal_op(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca6600 l     O .rodata	0000000000000032              Item_func_ifnull::str_op(String*)::__PRETTY_FUNCTION__
0000000000ca6640 l     O .rodata	0000000000000034              Item_func_if::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca6680 l     O .rodata	0000000000000028              Item_func_if::val_real()::__PRETTY_FUNCTION__
0000000000ca66c0 l     O .rodata	0000000000000029              Item_func_if::val_int()::__PRETTY_FUNCTION__
0000000000ca6700 l     O .rodata	000000000000002f              Item_func_if::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca6740 l     O .rodata	000000000000003b              Item_func_if::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca6780 l     O .rodata	000000000000002c              Item_func_nullif::val_real()::__PRETTY_FUNCTION__
0000000000ca67c0 l     O .rodata	000000000000002d              Item_func_nullif::val_int()::__PRETTY_FUNCTION__
0000000000ca6800 l     O .rodata	0000000000000033              Item_func_nullif::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca6840 l     O .rodata	000000000000003f              Item_func_nullif::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca6880 l     O .rodata	0000000000000029              Item_func_case::find_item(String*)::__PRETTY_FUNCTION__
0000000000ca68c0 l     O .rodata	0000000000000031              Item_func_case::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca6900 l     O .rodata	000000000000002b              Item_func_case::val_int()::__PRETTY_FUNCTION__
0000000000ca6940 l     O .rodata	000000000000002a              Item_func_case::val_real()::__PRETTY_FUNCTION__
0000000000ca6980 l     O .rodata	000000000000003d              Item_func_case::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
00000000007a52b8 l     F .text	000000000000003d              change_item_tree_if_needed(THD*, Item**, Item*)
0000000000ca6a00 l     O .rodata	0000000000000032              Item_func_case::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000ca6aa0 l     O .rodata	0000000000000034              Item_func_coalesce::str_op(String*)::__PRETTY_FUNCTION__
0000000000ca6ae0 l     O .rodata	000000000000002e              Item_func_coalesce::int_op()::__PRETTY_FUNCTION__
0000000000ca6b20 l     O .rodata	000000000000002d              Item_func_coalesce::real_op()::__PRETTY_FUNCTION__
0000000000ca6b60 l     O .rodata	0000000000000040              Item_func_coalesce::decimal_op(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca6ba0 l     O .rodata	0000000000000036              Item_func_coalesce::fix_length_and_dec()::__PRETTY_FUNCTION__
00000000007a623d l     F .text	000000000000002d              cmp_longs(long long, long long)
00000000007a626a l     F .text	000000000000002d              cmp_ulongs(unsigned long long, unsigned long long)
00000000007a636e l     F .text	0000000000000055              cmp_double(void*, double*, double*)
00000000007a63c3 l     F .text	0000000000000034              cmp_row(void*, cmp_item_row*, cmp_item_row*)
00000000007a63f7 l     F .text	0000000000000041              cmp_decimal(void*, my_decimal*, my_decimal*)
0000000000ca6c20 l     O .rodata	0000000000000046              cmp_item::get_comparator(Item_result, charset_info_st*)::__PRETTY_FUNCTION__
0000000000ca6d40 l     O .rodata	000000000000002c              cmp_item_row::alloc_comparators(Item*)::__PRETTY_FUNCTION__
0000000000ca6cc0 l     O .rodata	000000000000002e              cmp_item_row::store_value(Item*)::__PRETTY_FUNCTION__
00000000007a7d83 l     F .text	000000000000008b              srtcmp_in(charset_info_st*, String const*, String const*)
0000000000ca6d00 l     O .rodata	0000000000000030              Item_func_in::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000ca6d80 l     O .rodata	0000000000000029              Item_func_in::val_int()::__PRETTY_FUNCTION__
0000000000ca6dc0 l     O .rodata	000000000000002d              Item_func_bit_or::val_int()::__PRETTY_FUNCTION__
0000000000ca6e00 l     O .rodata	000000000000002e              Item_func_bit_and::val_int()::__PRETTY_FUNCTION__
0000000000ca6e80 l     O .rodata	0000000000000031              Item_cond::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca6ec0 l     O .rodata	000000000000003d              Item_cond::transform(Item* (Item::*)(unsigned char*), unsigned char*)::__PRETTY_FUNCTION__
0000000000ca6f40 l     O .rodata	000000000000002a              Item_cond_and::val_int()::__PRETTY_FUNCTION__
0000000000ca6f80 l     O .rodata	0000000000000029              Item_cond_or::val_int()::__PRETTY_FUNCTION__
0000000000ca6fe0 l     O .rodata	000000000000002d              Item_func_isnull::val_int()::__PRETTY_FUNCTION__
0000000000ca7020 l     O .rodata	0000000000000032              Item_is_not_null_test::val_int()::__PRETTY_FUNCTION__
0000000000ca7060 l     O .rodata	0000000000000030              Item_func_isnotnull::val_int()::__PRETTY_FUNCTION__
0000000000ca70a0 l     O .rodata	000000000000002b              Item_func_like::val_int()::__PRETTY_FUNCTION__
0000000000ca70e0 l     O .rodata	0000000000000036              Item_func_like::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca7120 l     O .rodata	0000000000000037              Item_func_regex::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca7160 l     O .rodata	000000000000002c              Item_func_regex::val_int()::__PRETTY_FUNCTION__
0000000000ca71a0 l     O .rodata	000000000000002a              Item_cond_xor::val_int()::__PRETTY_FUNCTION__
0000000000ca71e0 l     O .rodata	0000000000000037              Item_bool_rowready_func2::negated_item()::__PRETTY_FUNCTION__
0000000000ca7220 l     O .rodata	0000000000000029              Item_equal::add(Item*, Item_field*)::__PRETTY_FUNCTION__
0000000000ca7260 l     O .rodata	000000000000003e              Item_equal::transform(Item* (Item::*)(unsigned char*), unsigned char*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              item_create.cc
0000000000ca8240 l     O .rodata	0000000000000047              my_decimal_precision_to_length_no_truncation(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000ca7318 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000007b17a0 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000ca80a0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000ca7fe0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000ca7368 l     O .rodata	0000000000000004              SRID_SIZE
0000000000ca736c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ca7370 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ca7374 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ca7378 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000ca8020 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
0000000000ca8060 l     O .rodata	000000000000002b              Item_real_func::val_int()::__PRETTY_FUNCTION__
0000000000ca80e0 l     O .rodata	0000000000000031              Item_func_bit_length::val_int()::__PRETTY_FUNCTION__
0000000000ca8120 l     O .rodata	000000000000003d              Item_date_func::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca8160 l     O .rodata	0000000000000040              Item_str_timefunc::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca8200 l     O .rodata	0000000000000030              Item_typecast::val_str(String*)::__PRETTY_FUNCTION__
0000000001062be0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000ca7f80 l     O .rodata	0000000000000054              Query_tables_list::set_stmt_unsafe(Query_tables_list::enum_binlog_stmt_unsafe)::__PRETTY_FUNCTION__
00000000007b17d0 l     F .text	0000000000000084              has_named_parameters(List<Item>*)
0000000000ca7ee0 l     O .rodata	000000000000004a              Create_udf_func::create_func(THD*, st_mysql_lex_string, List<Item>*)::__PRETTY_FUNCTION__
0000000000ca7f40 l     O .rodata	000000000000003c              Create_udf_func::create(THD*, st_udf_func*, List<Item>*)::__PRETTY_FUNCTION__
00000000010ec700 l     O .data	0000000000001308              func_array
0000000001386820 l     O .bss	0000000000000058              native_functions_hash
0000000000ca81a0 l     O .rodata	000000000000005a              create_func_cast(THD*, Item*, Cast_target, char const*, char const*, charset_info_st*)::__PRETTY_FUNCTION__
00000000007b79ca l     F .text	0000000000001d88              __static_initialization_and_destruction_0(int, int)
00000000007b9752 l     F .text	0000000000000015              _GLOBAL__sub_I_item_create.cc
0000000000000000 l    df *ABS*	0000000000000000              item_func.cc
00000000007c331a l     F .text	0000000000000071              inline_mysql_mutex_init
00000000007c338b l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000007c340b l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000007c3522 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000007c359f l     F .text	0000000000000065              inline_mysql_cond_init
00000000007c3604 l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000007c3673 l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000007c37b6 l     F .text	000000000000006c              inline_mysql_cond_signal
00000000007c3822 l     F .text	0000000000000077              bitmap_set_bit
0000000000caa600 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
0000000000ca96b0 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000ca95c0 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
0000000000ca93e0 l     O .rodata	000000000000002b              max_my_decimal(my_decimal*, int, int)::__PRETTY_FUNCTION__
0000000000ca96e0 l     O .rodata	0000000000000036              my_decimal_length_to_precision(unsigned int, unsigned int, bool)::__PRETTY_FUNCTION__
0000000000ca9420 l     O .rodata	0000000000000047              my_decimal_precision_to_length_no_truncation(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000ca8498 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000007c3899 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000caab60 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000caab20 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000ca84f4 l     O .rodata	0000000000000004              SRID_SIZE
0000000000ca84f8 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ca84fc l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ca8500 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ca8504 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000cab160 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
0000000000cab260 l     O .rodata	000000000000002b              Item_real_func::val_int()::__PRETTY_FUNCTION__
0000000000cab2a0 l     O .rodata	0000000000000030              Item_func_num1::str_op(String*)::__PRETTY_FUNCTION__
0000000000cab2e0 l     O .rodata	000000000000002d              Item_num_op::str_op(String*)::__PRETTY_FUNCTION__
0000000000cab360 l     O .rodata	0000000000000034              Item_func_connection_id::val_int()::__PRETTY_FUNCTION__
0000000000cab320 l     O .rodata	0000000000000029              Item_func_div::int_op()::__PRETTY_FUNCTION__
0000000000cab1e0 l     O .rodata	0000000000000035              Item_udf_func::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000cab220 l     O .rodata	0000000000000030              Item_func_udf_float::val_int()::__PRETTY_FUNCTION__
0000000000cab1a0 l     O .rodata	000000000000002c              Item_func_match::val_int()::__PRETTY_FUNCTION__
0000000001062c40 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000007c38c9 l     F .text	00000000000000e1              my_count_bits
00000000007c3aa3 l     F .text	000000000000001c              test_if_sum_overflows_ull(unsigned long long, unsigned long long)
0000000000ca9260 l     O .rodata	0000000000000031              Item_func::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000ca92a0 l     O .rodata	000000000000003d              Item_func::transform(Item* (Item::*)(unsigned char*), unsigned char*)::__PRETTY_FUNCTION__
0000000000ca92e0 l     O .rodata	0000000000000032              Item_func::tmp_table_field(TABLE*)::__PRETTY_FUNCTION__
0000000000ca9320 l     O .rodata	0000000000000038              Item_func::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca9360 l     O .rodata	0000000000000031              Item_real_func::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca93a0 l     O .rodata	000000000000003d              Item_real_func::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca9480 l     O .rodata	0000000000000029              Item_int_func::val_real()::__PRETTY_FUNCTION__
0000000000ca94c0 l     O .rodata	0000000000000030              Item_int_func::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca9500 l     O .rodata	000000000000002a              Item_num_op::find_num_type()::__PRETTY_FUNCTION__
0000000000ca9540 l     O .rodata	000000000000002d              Item_func_num1::find_num_type()::__PRETTY_FUNCTION__
0000000000ca9580 l     O .rodata	0000000000000036              Item_func_numhybrid::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca95e0 l     O .rodata	000000000000002f              Item_func_numhybrid::val_real()::__PRETTY_FUNCTION__
0000000000ca9620 l     O .rodata	0000000000000030              Item_func_numhybrid::val_int()::__PRETTY_FUNCTION__
0000000000ca9660 l     O .rodata	0000000000000042              Item_func_numhybrid::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca9720 l     O .rodata	0000000000000028              Item_func_mul::real_op()::__PRETTY_FUNCTION__
0000000000ca9760 l     O .rodata	0000000000000029              Item_func_mul::int_op()::__PRETTY_FUNCTION__
0000000000ca97a0 l     O .rodata	0000000000000028              Item_func_div::real_op()::__PRETTY_FUNCTION__
0000000000ca97e0 l     O .rodata	0000000000000031              Item_func_div::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000ca9820 l     O .rodata	000000000000002e              Item_func_int_div::val_int()::__PRETTY_FUNCTION__
0000000000ca9860 l     O .rodata	0000000000000029              Item_func_mod::int_op()::__PRETTY_FUNCTION__
0000000000ca98a0 l     O .rodata	0000000000000028              Item_func_mod::real_op()::__PRETTY_FUNCTION__
0000000000ca98e0 l     O .rodata	0000000000000028              Item_func_ln::val_real()::__PRETTY_FUNCTION__
0000000000ca9920 l     O .rodata	0000000000000029              Item_func_log::val_real()::__PRETTY_FUNCTION__
0000000000ca9960 l     O .rodata	000000000000002a              Item_func_log2::val_real()::__PRETTY_FUNCTION__
0000000000ca99a0 l     O .rodata	000000000000002b              Item_func_log10::val_real()::__PRETTY_FUNCTION__
0000000000ca99e0 l     O .rodata	0000000000000029              Item_func_exp::val_real()::__PRETTY_FUNCTION__
0000000000ca9a20 l     O .rodata	000000000000002a              Item_func_sqrt::val_real()::__PRETTY_FUNCTION__
0000000000ca9a60 l     O .rodata	0000000000000029              Item_func_pow::val_real()::__PRETTY_FUNCTION__
0000000000ca9aa0 l     O .rodata	000000000000002a              Item_func_acos::val_real()::__PRETTY_FUNCTION__
0000000000ca9ae0 l     O .rodata	000000000000002a              Item_func_asin::val_real()::__PRETTY_FUNCTION__
0000000000ca9b20 l     O .rodata	000000000000002a              Item_func_atan::val_real()::__PRETTY_FUNCTION__
0000000000ca9b60 l     O .rodata	0000000000000029              Item_func_cos::val_real()::__PRETTY_FUNCTION__
0000000000ca9ba0 l     O .rodata	0000000000000029              Item_func_sin::val_real()::__PRETTY_FUNCTION__
0000000000ca9be0 l     O .rodata	0000000000000029              Item_func_tan::val_real()::__PRETTY_FUNCTION__
0000000000ca9c20 l     O .rodata	0000000000000029              Item_func_cot::val_real()::__PRETTY_FUNCTION__
0000000000ca9c60 l     O .rodata	0000000000000031              Item_func_shift_left::val_int()::__PRETTY_FUNCTION__
0000000000ca9ca0 l     O .rodata	0000000000000032              Item_func_shift_right::val_int()::__PRETTY_FUNCTION__
0000000000ca9ce0 l     O .rodata	000000000000002e              Item_func_bit_neg::val_int()::__PRETTY_FUNCTION__
0000000000ca9d20 l     O .rodata	0000000000000030              Item_func_int_val::find_num_type()::__PRETTY_FUNCTION__
0000000000ca9d60 l     O .rodata	0000000000000033              Item_func_round::fix_length_and_dec()::__PRETTY_FUNCTION__
00000000007cc03b l     F .text	0000000000000049              my_unsigned_round(unsigned long long, unsigned long long)
0000000000ca9da0 l     O .rodata	000000000000002a              Item_func_rand::val_real()::__PRETTY_FUNCTION__
0000000000ca9de0 l     O .rodata	000000000000002b              Item_func_sign::val_int()::__PRETTY_FUNCTION__
0000000000ca9e20 l     O .rodata	000000000000002b              Item_func_units::val_real()::__PRETTY_FUNCTION__
0000000000ca9e60 l     O .rodata	0000000000000034              Item_func_min_max::val_str(String*)::__PRETTY_FUNCTION__
0000000000ca9ea0 l     O .rodata	000000000000002d              Item_func_min_max::val_real()::__PRETTY_FUNCTION__
0000000000ca9ee0 l     O .rodata	000000000000002e              Item_func_min_max::val_int()::__PRETTY_FUNCTION__
0000000000ca9f20 l     O .rodata	0000000000000040              Item_func_min_max::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000ca9f60 l     O .rodata	000000000000002d              Item_func_length::val_int()::__PRETTY_FUNCTION__
0000000000ca9fa0 l     O .rodata	0000000000000032              Item_func_char_length::val_int()::__PRETTY_FUNCTION__
0000000000ca9fe0 l     O .rodata	0000000000000033              Item_func_coercibility::val_int()::__PRETTY_FUNCTION__
0000000000caa020 l     O .rodata	000000000000002d              Item_func_locate::val_int()::__PRETTY_FUNCTION__
0000000000caa060 l     O .rodata	000000000000002c              Item_func_field::val_int()::__PRETTY_FUNCTION__
0000000000caa0a0 l     O .rodata	000000000000002c              Item_func_ascii::val_int()::__PRETTY_FUNCTION__
0000000000caa0e0 l     O .rodata	000000000000002a              Item_func_ord::val_int()::__PRETTY_FUNCTION__
0000000000caa120 l     O .rodata	0000000000000039              Item_func_find_in_set::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000ca8aa6 l     O .rodata	0000000000000001              separator
0000000000caa160 l     O .rodata	0000000000000032              Item_func_find_in_set::val_int()::__PRETTY_FUNCTION__
0000000000caa1a0 l     O .rodata	0000000000000030              Item_func_bit_count::val_int()::__PRETTY_FUNCTION__
0000000000caa1e0 l     O .rodata	0000000000000045              udf_handler::fix_fields(THD*, Item_result_field*, unsigned int, Item**)::__PRETTY_FUNCTION__
0000000000caa240 l     O .rodata	0000000000000022              udf_handler::get_arguments()::__PRETTY_FUNCTION__
0000000000caa280 l     O .rodata	000000000000002f              Item_func_udf_float::val_real()::__PRETTY_FUNCTION__
0000000000caa2c0 l     O .rodata	0000000000000036              Item_func_udf_float::val_str(String*)::__PRETTY_FUNCTION__
0000000000caa300 l     O .rodata	000000000000002e              Item_func_udf_int::val_int()::__PRETTY_FUNCTION__
0000000000caa340 l     O .rodata	0000000000000034              Item_func_udf_int::val_str(String*)::__PRETTY_FUNCTION__
0000000000caa380 l     O .rodata	0000000000000044              Item_func_udf_decimal::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000caa3e0 l     O .rodata	0000000000000034              Item_func_udf_str::val_str(String*)::__PRETTY_FUNCTION__
0000000000caa420 l     O .rodata	000000000000001c              udf_handler::~udf_handler()::__PRETTY_FUNCTION__
0000000001386900 l     O .bss	0000000000000058              hash_user_locks
0000000001386958 l     O .bss	0000000000000004              key_LOCK_user_locks
00000000010eda10 l     O .data	0000000000000018              all_user_mutexes
00000000007d0dd7 l     F .text	000000000000004f              init_user_lock_psi_keys()
000000000138695c l     O .bss	0000000000000001              item_user_lock_inited
0000000000caa440 l     O .rodata	0000000000000031              Item_master_pos_wait::val_int()::__PRETTY_FUNCTION__
0000000000caa480 l     O .rodata	000000000000002f              Item_func_get_lock::val_int()::__PRETTY_FUNCTION__
0000000000caa4b0 l     O .rodata	0000000000000008              Item_func_get_lock::val_int()::__FUNCTION__
0000000000caa4c0 l     O .rodata	0000000000000033              Item_func_release_lock::val_int()::__PRETTY_FUNCTION__
0000000000caa500 l     O .rodata	0000000000000035              Item_func_last_insert_id::val_int()::__PRETTY_FUNCTION__
0000000000caa540 l     O .rodata	0000000000000030              Item_func_benchmark::val_int()::__PRETTY_FUNCTION__
0000000000caa580 l     O .rodata	000000000000002c              Item_func_sleep::val_int()::__PRETTY_FUNCTION__
0000000000caa5b0 l     O .rodata	0000000000000008              Item_func_sleep::val_int()::__FUNCTION__
00000000007d253d l     F .text	00000000000001c1              get_variable(st_hash*, st_mysql_lex_string&, bool)
0000000000caa5c0 l     O .rodata	000000000000003e              Item_func_set_user_var::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
00000000007d2af9 l     F .text	0000000000000213              update_hash(user_var_entry*, bool, void*, unsigned int, Item_result, charset_info_st*, Derivation, bool)
0000000000caa640 l     O .rodata	0000000000000029              Item_func_set_user_var::check(bool)::__PRETTY_FUNCTION__
0000000000caa680 l     O .rodata	0000000000000035              Item_func_set_user_var::save_item_result(Item*)::__PRETTY_FUNCTION__
0000000000caa6c0 l     O .rodata	0000000000000026              Item_func_set_user_var::update()::__PRETTY_FUNCTION__
0000000000caa700 l     O .rodata	0000000000000032              Item_func_set_user_var::val_real()::__PRETTY_FUNCTION__
0000000000caa740 l     O .rodata	0000000000000033              Item_func_set_user_var::val_int()::__PRETTY_FUNCTION__
0000000000caa780 l     O .rodata	0000000000000039              Item_func_set_user_var::val_str(String*)::__PRETTY_FUNCTION__
0000000000caa7c0 l     O .rodata	0000000000000045              Item_func_set_user_var::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000caa820 l     O .rodata	0000000000000034              Item_func_set_user_var::val_result()::__PRETTY_FUNCTION__
0000000000caa860 l     O .rodata	000000000000003a              Item_func_set_user_var::val_int_result()::__PRETTY_FUNCTION__
0000000000caa8a0 l     O .rodata	0000000000000037              Item_func_set_user_var::val_bool_result()::__PRETTY_FUNCTION__
0000000000caa8e0 l     O .rodata	000000000000003c              Item_func_set_user_var::str_result(String*)::__PRETTY_FUNCTION__
0000000000caa920 l     O .rodata	000000000000004c              Item_func_set_user_var::val_decimal_result(my_decimal*)::__PRETTY_FUNCTION__
0000000000caa980 l     O .rodata	0000000000000036              Item_func_set_user_var::is_null_result()::__PRETTY_FUNCTION__
0000000000caa9c0 l     O .rodata	000000000000003d              Item_func_set_user_var::make_field(Send_field*)::__PRETTY_FUNCTION__
0000000000caaa00 l     O .rodata	0000000000000039              Item_func_get_user_var::val_str(String*)::__PRETTY_FUNCTION__
0000000000caaa40 l     O .rodata	0000000000000032              Item_func_get_user_var::val_real()::__PRETTY_FUNCTION__
0000000000caaa80 l     O .rodata	0000000000000045              Item_func_get_user_var::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000caaae0 l     O .rodata	0000000000000033              Item_func_get_user_var::val_int()::__PRETTY_FUNCTION__
00000000007d4852 l     F .text	0000000000000505              get_var_with_binlog(THD*, enum_sql_command, st_mysql_lex_string&, user_var_entry**)
0000000000caaba0 l     O .rodata	000000000000003a              Item_func_get_user_var::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000caabe0 l     O .rodata	0000000000000042              Item_user_var_as_out_param::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000caac40 l     O .rodata	0000000000000036              Item_user_var_as_out_param::val_real()::__PRETTY_FUNCTION__
0000000000caac80 l     O .rodata	0000000000000037              Item_user_var_as_out_param::val_int()::__PRETTY_FUNCTION__
0000000000caacc0 l     O .rodata	000000000000003d              Item_user_var_as_out_param::val_str(String*)::__PRETTY_FUNCTION__
0000000000caad00 l     O .rodata	0000000000000049              Item_user_var_as_out_param::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000caad60 l     O .rodata	0000000000000030              Item_func_inet_aton::val_int()::__PRETTY_FUNCTION__
0000000000caada0 l     O .rodata	0000000000000037              Item_func_match::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000caade0 l     O .rodata	000000000000002b              Item_func_match::val_real()::__PRETTY_FUNCTION__
0000000000caae20 l     O .rodata	000000000000002e              Item_func_bit_xor::val_int()::__PRETTY_FUNCTION__
0000000000caae60 l     O .rodata	0000000000000033              Item_func_is_free_lock::val_int()::__PRETTY_FUNCTION__
0000000000caaea0 l     O .rodata	0000000000000033              Item_func_is_used_lock::val_int()::__PRETTY_FUNCTION__
0000000000caaee0 l     O .rodata	0000000000000030              Item_func_row_count::val_int()::__PRETTY_FUNCTION__
0000000000caaf20 l     O .rodata	000000000000002b              Item_func_sp::init_result_field(THD*)::__PRETTY_FUNCTION__
0000000000caaf60 l     O .rodata	0000000000000030              Item_func_sp::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000caafa0 l     O .rodata	0000000000000033              Item_func_sp::make_field(Send_field*)::__PRETTY_FUNCTION__
0000000000caafe0 l     O .rodata	000000000000003a              Item_func_sp::field_type() const::__PRETTY_FUNCTION__
0000000000cab020 l     O .rodata	0000000000000036              Item_func_sp::result_type() const::__PRETTY_FUNCTION__
0000000000cab060 l     O .rodata	0000000000000031              Item_func_found_rows::val_int()::__PRETTY_FUNCTION__
0000000000cab0a0 l     O .rodata	0000000000000035              Item_func_sp::tmp_table_field(TABLE*)::__PRETTY_FUNCTION__
0000000000cab0e0 l     O .rodata	0000000000000029              Item_func_sp::sp_check_access(THD*)::__PRETTY_FUNCTION__
0000000000cab120 l     O .rodata	0000000000000034              Item_func_sp::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              item_geofunc.cc
0000000000cab400 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000007ddde0 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000cabd80 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cabd00 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cab458 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cab45c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cab460 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cab464 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cab468 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000cabd40 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
0000000000cabdc0 l     O .rodata	000000000000002b              Item_real_func::val_int()::__PRETTY_FUNCTION__
0000000000cabea0 l     O .rodata	0000000000000040              Item_func_spatial_decomp::func_name() const::__PRETTY_FUNCTION__
0000000000cabe40 l     O .rodata	0000000000000042              Item_func_spatial_decomp_n::func_name() const::__PRETTY_FUNCTION__
0000000000cabe00 l     O .rodata	000000000000003d              Item_func_spatial_rel::func_name() const::__PRETTY_FUNCTION__
0000000001062ca0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cab700 l     O .rodata	000000000000003f              Item_func_geometry_from_text::val_str(String*)::__PRETTY_FUNCTION__
0000000000cab740 l     O .rodata	000000000000003e              Item_func_geometry_from_wkb::val_str(String*)::__PRETTY_FUNCTION__
0000000000cab780 l     O .rodata	0000000000000039              Item_func_as_wkt::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000cab7c0 l     O .rodata	0000000000000033              Item_func_as_wkb::val_str(String*)::__PRETTY_FUNCTION__
0000000000cab800 l     O .rodata	0000000000000040              Item_func_geometry_type::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000cab840 l     O .rodata	0000000000000035              Item_func_envelope::val_str(String*)::__PRETTY_FUNCTION__
0000000000cab880 l     O .rodata	0000000000000035              Item_func_centroid::val_str(String*)::__PRETTY_FUNCTION__
0000000000cab8c0 l     O .rodata	000000000000003b              Item_func_spatial_decomp::val_str(String*)::__PRETTY_FUNCTION__
0000000000cab900 l     O .rodata	000000000000003d              Item_func_spatial_decomp_n::val_str(String*)::__PRETTY_FUNCTION__
0000000000cab940 l     O .rodata	0000000000000032              Item_func_point::val_str(String*)::__PRETTY_FUNCTION__
0000000000cab980 l     O .rodata	000000000000003f              Item_func_spatial_collection::val_str(String*)::__PRETTY_FUNCTION__
0000000000cab9c0 l     O .rodata	0000000000000032              Item_func_spatial_rel::val_int()::__PRETTY_FUNCTION__
0000000000caba00 l     O .rodata	000000000000002e              Item_func_isempty::val_int()::__PRETTY_FUNCTION__
0000000000caba40 l     O .rodata	000000000000002f              Item_func_issimple::val_int()::__PRETTY_FUNCTION__
0000000000caba80 l     O .rodata	000000000000002f              Item_func_isclosed::val_int()::__PRETTY_FUNCTION__
0000000000cabac0 l     O .rodata	0000000000000030              Item_func_dimension::val_int()::__PRETTY_FUNCTION__
0000000000cabb00 l     O .rodata	0000000000000036              Item_func_numinteriorring::val_int()::__PRETTY_FUNCTION__
0000000000cabb40 l     O .rodata	0000000000000034              Item_func_numgeometries::val_int()::__PRETTY_FUNCTION__
0000000000cabb80 l     O .rodata	0000000000000030              Item_func_numpoints::val_int()::__PRETTY_FUNCTION__
0000000000cabbc0 l     O .rodata	0000000000000027              Item_func_x::val_real()::__PRETTY_FUNCTION__
0000000000cabc00 l     O .rodata	0000000000000027              Item_func_y::val_real()::__PRETTY_FUNCTION__
0000000000cabc40 l     O .rodata	000000000000002a              Item_func_area::val_real()::__PRETTY_FUNCTION__
0000000000cabc80 l     O .rodata	000000000000002d              Item_func_glength::val_real()::__PRETTY_FUNCTION__
0000000000cabcc0 l     O .rodata	000000000000002b              Item_func_srid::val_int()::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              item_row.cc
0000000000cabf20 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cac1e0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cac1a0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cabf70 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cabf74 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cabf78 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cabf7c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cabf80 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001062d00 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cac0e0 l     O .rodata	0000000000000030              Item_row::illegal_method_call(char const*)::__PRETTY_FUNCTION__
0000000000cac120 l     O .rodata	0000000000000030              Item_row::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000cac160 l     O .rodata	000000000000003c              Item_row::transform(Item* (Item::*)(unsigned char*), unsigned char*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              item_strfunc.cc
0000000000cac220 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000cac224 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
00000000007e342c l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000007e3543 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000cad820 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000cace60 l     O .rodata	000000000000002a              String::set(String&, unsigned int, unsigned int)::__PRETTY_FUNCTION__
0000000000cad420 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
00000000007e35c0 l     F .text	000000000000012e              inline_mysql_file_stat(unsigned int, char const*, unsigned int, char const*, stat*, int)
00000000007e36ee l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
00000000007e3818 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
00000000007e3918 l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
0000000000cac370 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000007e3a94 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000cad260 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cad220 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cac3c4 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cac3c8 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cac3cc l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cac3d0 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cac3d4 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000cadc20 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
0000000000cadce0 l     O .rodata	0000000000000031              Item_func_user::val_str(String*)::__PRETTY_FUNCTION__
0000000000cadca0 l     O .rodata	000000000000003a              Item_func_make_set::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000cadc60 l     O .rodata	0000000000000033              Item_func_binary::val_str(String*)::__PRETTY_FUNCTION__
0000000001062d60 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cac900 l     O .rodata	0000000000000044              Item_str_func::val_str_from_val_str_ascii(String*, String*)::__PRETTY_FUNCTION__
00000000007e3c5a l     F .text	0000000000000083              array_to_hex(char*, unsigned char const*, unsigned int)
0000000000cac960 l     O .rodata	000000000000003c              Item_str_func::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cac9a0 l     O .rodata	0000000000000029              Item_str_func::val_real()::__PRETTY_FUNCTION__
0000000000cac9e0 l     O .rodata	000000000000002a              Item_str_func::val_int()::__PRETTY_FUNCTION__
0000000000caca20 l     O .rodata	0000000000000036              Item_func_md5::val_str_ascii(String*)::__PRETTY_FUNCTION__
00000000007e42e0 l     F .text	000000000000003e              get_checksum_charset(char const*)
0000000000caca60 l     O .rodata	0000000000000036              Item_func_sha::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000cacaa0 l     O .rodata	0000000000000037              Item_func_sha2::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000cacae0 l     O .rodata	0000000000000038              Item_func_aes_encrypt::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacb20 l     O .rodata	0000000000000038              Item_func_aes_decrypt::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacb60 l     O .rodata	0000000000000033              Item_func_concat::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacba0 l     O .rodata	0000000000000038              Item_func_des_encrypt::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacbe0 l     O .rodata	0000000000000038              Item_func_des_decrypt::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacc20 l     O .rodata	0000000000000036              Item_func_concat_ws::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacc60 l     O .rodata	0000000000000034              Item_func_reverse::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacca0 l     O .rodata	0000000000000035              Item_func_reverse::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cacce0 l     O .rodata	0000000000000034              Item_func_replace::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacd20 l     O .rodata	0000000000000033              Item_func_insert::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacd60 l     O .rodata	0000000000000030              Item_str_conv::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacda0 l     O .rodata	0000000000000033              Item_func_lcase::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cacde0 l     O .rodata	0000000000000033              Item_func_ucase::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cace20 l     O .rodata	0000000000000031              Item_func_left::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacea0 l     O .rodata	0000000000000032              Item_func_left::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cacee0 l     O .rodata	0000000000000032              Item_func_right::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacf20 l     O .rodata	0000000000000033              Item_func_right::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cacf60 l     O .rodata	0000000000000033              Item_func_substr::val_str(String*)::__PRETTY_FUNCTION__
0000000000cacfa0 l     O .rodata	0000000000000034              Item_func_substr::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cacfe0 l     O .rodata	0000000000000039              Item_func_substr_index::val_str(String*)::__PRETTY_FUNCTION__
00000000007e9102 l     F .text	00000000000000f8              trim_left_mb(String*, char*, char*, String*)
0000000000cad020 l     O .rodata	0000000000000032              Item_func_ltrim::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad060 l     O .rodata	0000000000000032              Item_func_rtrim::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad0a0 l     O .rodata	0000000000000031              Item_func_trim::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad0e0 l     O .rodata	0000000000000032              Item_func_trim::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cad120 l     O .rodata	000000000000003b              Item_func_password::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000cad160 l     O .rodata	000000000000003f              Item_func_old_password::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000cad1a0 l     O .rodata	0000000000000034              Item_func_encrypt::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad1e0 l     O .rodata	0000000000000033              Item_func_encode::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad2a0 l     O .rodata	0000000000000035              Item_func_database::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad2e0 l     O .rodata	0000000000000034              Item_func_user::init(char const*, char const*)::__PRETTY_FUNCTION__
0000000000cad320 l     O .rodata	0000000000000035              Item_func_soundex::fix_length_and_dec()::__PRETTY_FUNCTION__
00000000007eb34c l     F .text	0000000000000020              soundex_toupper(int)
00000000007eb36c l     F .text	0000000000000047              get_scode(int)
00000000007eb3b3 l     F .text	0000000000000036              my_uni_isalpha(int)
0000000000cad360 l     O .rodata	0000000000000034              Item_func_soundex::val_str(String*)::__PRETTY_FUNCTION__
0000000000cac790 l     O .rodata	0000000000000004              FORMAT_MAX_DECIMALS
0000000000cad3a0 l     O .rodata	000000000000002f              Item_func_format::get_locale(Item*)::__PRETTY_FUNCTION__
0000000000cad3e0 l     O .rodata	0000000000000039              Item_func_format::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000cad440 l     O .rodata	0000000000000029              Item_func_elt::val_real()::__PRETTY_FUNCTION__
0000000000cad480 l     O .rodata	000000000000002a              Item_func_elt::val_int()::__PRETTY_FUNCTION__
0000000000cad4c0 l     O .rodata	0000000000000030              Item_func_elt::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad500 l     O .rodata	0000000000000035              Item_func_make_set::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad540 l     O .rodata	0000000000000046              Item_func_make_set::transform(Item* (Item::*)(unsigned char*), unsigned char*)::__PRETTY_FUNCTION__
0000000000cad5a0 l     O .rodata	0000000000000031              Item_func_char::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad5e0 l     O .rodata	0000000000000034              Item_func_repeat::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cad620 l     O .rodata	0000000000000033              Item_func_repeat::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad660 l     O .rodata	0000000000000032              Item_func_rpad::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cad6a0 l     O .rodata	0000000000000031              Item_func_rpad::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad6e0 l     O .rodata	0000000000000032              Item_func_lpad::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cad720 l     O .rodata	0000000000000031              Item_func_lpad::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad760 l     O .rodata	0000000000000031              Item_func_conv::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad7a0 l     O .rodata	0000000000000039              Item_func_conv_charset::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad7e0 l     O .rodata	000000000000003a              Item_func_set_collation::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad840 l     O .rodata	0000000000000046              Item_func_set_collation::print(String*, enum_query_type)::__PRETTY_FUNCTION__
0000000000cad8a0 l     O .rodata	0000000000000034              Item_func_charset::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad8e0 l     O .rodata	0000000000000036              Item_func_collation::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad920 l     O .rodata	0000000000000036              Item_func_hex::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000cad960 l     O .rodata	0000000000000032              Item_func_unhex::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad9a0 l     O .rodata	0000000000000037              Item_func_like_range::val_str(String*)::__PRETTY_FUNCTION__
0000000000cad9e0 l     O .rodata	0000000000000031              Item_load_file::val_str(String*)::__PRETTY_FUNCTION__
0000000000cada20 l     O .rodata	0000000000000037              Item_func_export_set::val_str(String*)::__PRETTY_FUNCTION__
0000000000cada60 l     O .rodata	0000000000000036              Item_func_inet_ntoa::val_str(String*)::__PRETTY_FUNCTION__
0000000000cadaa0 l     O .rodata	0000000000000032              Item_func_quote::val_str(String*)::__PRETTY_FUNCTION__
00000000010eda60 l     O .data	0000000000000020              Item_func_quote::val_str(String*)::escmask
0000000000cadae0 l     O .rodata	000000000000003a              Item_func_uncompressed_length::val_int()::__PRETTY_FUNCTION__
0000000000cadb20 l     O .rodata	000000000000002c              Item_func_crc32::val_int()::__PRETTY_FUNCTION__
0000000000cadb60 l     O .rodata	0000000000000035              Item_func_compress::val_str(String*)::__PRETTY_FUNCTION__
0000000000cadba0 l     O .rodata	0000000000000037              Item_func_uncompress::val_str(String*)::__PRETTY_FUNCTION__
0000000001386980 l     O .bss	0000000000000020              uuid_rand
00000000013869a0 l     O .bss	0000000000000004              nanoseq
00000000013869a8 l     O .bss	0000000000000008              uuid_time
00000000010eda40 l     O .data	0000000000000013              clock_seq_and_node_str
00000000007f127a l     F .text	0000000000000050              tohex(char*, unsigned int, unsigned int)
00000000007f12ca l     F .text	0000000000000058              set_clock_seq_str()
0000000000cadbe0 l     O .rodata	0000000000000031              Item_func_uuid::val_str(String*)::__PRETTY_FUNCTION__
00000000007f176c l     F .text	0000000000000063              __static_initialization_and_destruction_0(int, int)
00000000007f17cf l     F .text	0000000000000015              _GLOBAL__sub_I_item_strfunc.cc
0000000000000000 l    df *ABS*	0000000000000000              item_subselect.cc
0000000000caec00 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
0000000000caddd0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000caeea0 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000caee30 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000caee50 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000caee70 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
00000000007f41da l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000cae8c0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cae880 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cadf08 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cadf0c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cadf10 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cadf14 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cadf18 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000caec40 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
0000000000caf000 l     O .rodata	0000000000000036              Item_subselect::func_name() const::__PRETTY_FUNCTION__
0000000001062dc0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cae720 l     O .rodata	0000000000000036              Item_subselect::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000cae760 l     O .rodata	0000000000000024              Item_subselect::exec()::__PRETTY_FUNCTION__
0000000000cae7a0 l     O .rodata	000000000000004d              Item_singlerow_subselect::invalidate_and_restore_select_lex()::__PRETTY_FUNCTION__
0000000000cae800 l     O .rodata	0000000000000034              Item_singlerow_subselect::val_real()::__PRETTY_FUNCTION__
0000000000cae840 l     O .rodata	0000000000000035              Item_singlerow_subselect::val_int()::__PRETTY_FUNCTION__
0000000000cae900 l     O .rodata	0000000000000031              Item_exists_subselect::val_real()::__PRETTY_FUNCTION__
0000000000cae940 l     O .rodata	0000000000000032              Item_exists_subselect::val_int()::__PRETTY_FUNCTION__
0000000000cae980 l     O .rodata	0000000000000038              Item_exists_subselect::val_str(String*)::__PRETTY_FUNCTION__
0000000000cae9c0 l     O .rodata	0000000000000044              Item_exists_subselect::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000caea20 l     O .rodata	000000000000002f              Item_exists_subselect::val_bool()::__PRETTY_FUNCTION__
0000000000caea60 l     O .rodata	000000000000002d              Item_in_subselect::val_real()::__PRETTY_FUNCTION__
0000000000caeaa0 l     O .rodata	000000000000002e              Item_in_subselect::val_int()::__PRETTY_FUNCTION__
0000000000caeae0 l     O .rodata	0000000000000034              Item_in_subselect::val_str(String*)::__PRETTY_FUNCTION__
0000000000caeb20 l     O .rodata	000000000000002b              Item_in_subselect::val_bool()::__PRETTY_FUNCTION__
0000000000caeb60 l     O .rodata	0000000000000040              Item_in_subselect::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000caeba0 l     O .rodata	000000000000005c              Item_in_subselect::single_value_transformer(JOIN*, Comp_creator*)::__PRETTY_FUNCTION__
0000000000caec80 l     O .rodata	000000000000004a              Item_in_subselect::row_value_transformer(JOIN*)::__PRETTY_FUNCTION__
0000000000caece0 l     O .rodata	0000000000000037              subselect_uniquesubquery_engine::prepare()::__PRETTY_FUNCTION__
0000000000caed20 l     O .rodata	000000000000004e              subselect_single_select_engine::fix_length_and_dec(Item_cache**)::__PRETTY_FUNCTION__
0000000000caed80 l     O .rodata	0000000000000046              subselect_union_engine::fix_length_and_dec(Item_cache**)::__PRETTY_FUNCTION__
0000000000caede0 l     O .rodata	000000000000004f              subselect_uniquesubquery_engine::fix_length_and_dec(Item_cache**)::__PRETTY_FUNCTION__
0000000000caeee0 l     O .rodata	0000000000000034              subselect_single_select_engine::cols()::__PRETTY_FUNCTION__
0000000000caef20 l     O .rodata	000000000000002c              subselect_union_engine::cols()::__PRETTY_FUNCTION__
0000000000caef60 l     O .rodata	0000000000000038              subselect_uniquesubquery_engine::exclude()::__PRETTY_FUNCTION__
0000000000caefa0 l     O .rodata	0000000000000060              subselect_uniquesubquery_engine::change_result(Item_subselect*, select_subselect*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              item_sum.cc
0000000000cb0410 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000cafa80 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
0000000000cafa40 l     O .rodata	000000000000002b              max_my_decimal(my_decimal*, int, int)::__PRETTY_FUNCTION__
0000000000caf9e0 l     O .rodata	0000000000000047              my_decimal_precision_to_length_no_truncation(unsigned int, unsigned char, bool)::__PRETTY_FUNCTION__
0000000000caf180 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cb0440 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cb03e0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000caf1d8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000caf1dc l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000caf1e0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000caf1e4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000caf1e8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000cb0640 l     O .rodata	0000000000000029              Item_sum_num::val_int()::__PRETTY_FUNCTION__
0000000000cb0600 l     O .rodata	0000000000000028              Item_sum_int::val_real()::__PRETTY_FUNCTION__
0000000000cb05c0 l     O .rodata	0000000000000036              Item_avg_field::func_name() const::__PRETTY_FUNCTION__
0000000000cb0540 l     O .rodata	000000000000003b              Item_variance_field::func_name() const::__PRETTY_FUNCTION__
0000000000cb0580 l     O .rodata	0000000000000036              Item_std_field::func_name() const::__PRETTY_FUNCTION__
0000000000cb0480 l     O .rodata	0000000000000034              Item_udf_sum::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000cb0500 l     O .rodata	000000000000002f              Item_sum_udf_float::val_int()::__PRETTY_FUNCTION__
0000000000cb04c0 l     O .rodata	000000000000002c              Item_sum_udf_int::val_real()::__PRETTY_FUNCTION__
0000000000cb03a0 l     O .rodata	0000000000000033              Item_func_group_concat::reset_field()::__PRETTY_FUNCTION__
0000000000cb0360 l     O .rodata	0000000000000034              Item_func_group_concat::update_field()::__PRETTY_FUNCTION__
0000000001062e20 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000caf7c0 l     O .rodata	000000000000003e              Item_sum::create_tmp_field(bool, TABLE*, unsigned int)::__PRETTY_FUNCTION__
00000000007fe1b5 l     F .text	000000000000003f              simple_str_key_cmp(void*, unsigned char*, unsigned char*)
00000000007fe2c7 l     F .text	0000000000000075              calc_tmp_field_type(enum_field_types, Item_result)
0000000000caf800 l     O .rodata	0000000000000044              calc_tmp_field_type(enum_field_types, Item_result)::__PRETTY_FUNCTION__
00000000007fe33c l     F .text	0000000000000031              simple_raw_key_cmp
00000000007fe36d l     F .text	000000000000002b              item_sum_distinct_walk
0000000000caf860 l     O .rodata	000000000000002e              Aggregator_distinct::setup(THD*)::__PRETTY_FUNCTION__
0000000000caf8a0 l     O .rodata	0000000000000028              Aggregator_distinct::add()::__PRETTY_FUNCTION__
0000000000caf8e0 l     O .rodata	000000000000002a              Aggregator_distinct::endup()::__PRETTY_FUNCTION__
0000000000caf920 l     O .rodata	0000000000000034              Item_sum_num::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000caf960 l     O .rodata	0000000000000037              Item_sum_hybrid::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000caf9a0 l     O .rodata	0000000000000030              Item_sum_sum::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cafaa0 l     O .rodata	0000000000000029              Item_sum_sum::val_int()::__PRETTY_FUNCTION__
0000000000cafae0 l     O .rodata	0000000000000028              Item_sum_sum::val_real()::__PRETTY_FUNCTION__
0000000000cafb20 l     O .rodata	0000000000000034              Aggregator_distinct::arg_is_null(bool)::__PRETTY_FUNCTION__
0000000000cafb60 l     O .rodata	000000000000002b              Item_sum_count::val_int()::__PRETTY_FUNCTION__
0000000000cafba0 l     O .rodata	0000000000000028              Item_sum_avg::val_real()::__PRETTY_FUNCTION__
0000000000cafbe0 l     O .rodata	000000000000003b              Item_sum_avg::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cafc20 l     O .rodata	0000000000000028              Item_sum_std::val_real()::__PRETTY_FUNCTION__
000000000080170c l     F .text	00000000000000ec              variance_fp_recurrence_next(double*, double*, unsigned long long*, double)
00000000008017f8 l     F .text	00000000000000a4              variance_fp_recurrence_result(double, unsigned long long, bool)
0000000000cafc60 l     O .rodata	0000000000000035              Item_sum_variance::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cafca0 l     O .rodata	000000000000002d              Item_sum_variance::val_real()::__PRETTY_FUNCTION__
0000000000cafce0 l     O .rodata	0000000000000040              Item_sum_variance::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cafd20 l     O .rodata	000000000000002b              Item_sum_hybrid::val_real()::__PRETTY_FUNCTION__
0000000000cafd60 l     O .rodata	000000000000002c              Item_sum_hybrid::val_int()::__PRETTY_FUNCTION__
0000000000cafda0 l     O .rodata	000000000000003e              Item_sum_hybrid::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cafde0 l     O .rodata	0000000000000032              Item_sum_hybrid::val_str(String*)::__PRETTY_FUNCTION__
0000000000cafe20 l     O .rodata	0000000000000029              Item_sum_bit::val_int()::__PRETTY_FUNCTION__
0000000000cafe60 l     O .rodata	000000000000002c              Item_sum_hybrid::reset_field()::__PRETTY_FUNCTION__
0000000000cafea0 l     O .rodata	0000000000000029              Item_sum_sum::reset_field()::__PRETTY_FUNCTION__
0000000000cafee0 l     O .rodata	000000000000002b              Item_sum_count::reset_field()::__PRETTY_FUNCTION__
0000000000caff20 l     O .rodata	0000000000000029              Item_sum_avg::reset_field()::__PRETTY_FUNCTION__
0000000000caff60 l     O .rodata	000000000000002a              Item_sum_sum::update_field()::__PRETTY_FUNCTION__
0000000000caffa0 l     O .rodata	000000000000002a              Item_sum_avg::update_field()::__PRETTY_FUNCTION__
0000000000caffe0 l     O .rodata	0000000000000031              Item_sum_hybrid::min_max_update_str_field()::__PRETTY_FUNCTION__
0000000000cb0020 l     O .rodata	000000000000002a              Item_std_field::val_real()::__PRETTY_FUNCTION__
0000000000cb0060 l     O .rodata	000000000000003d              Item_std_field::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cb00a0 l     O .rodata	000000000000002e              Item_sum_udf_float::val_real()::__PRETTY_FUNCTION__
0000000000cb00e0 l     O .rodata	0000000000000043              Item_sum_udf_decimal::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cb0140 l     O .rodata	000000000000002d              Item_sum_udf_int::val_int()::__PRETTY_FUNCTION__
0000000000cb0180 l     O .rodata	0000000000000033              Item_sum_udf_str::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb01c0 l     O .rodata	000000000000002f              dump_leaf_key::__PRETTY_FUNCTION__
0000000000cb0200 l     O .rodata	000000000000002f              Item_func_group_concat::cleanup()::__PRETTY_FUNCTION__
0000000000cb0240 l     O .rodata	0000000000000041              Item_func_group_concat::make_string_field(TABLE*)::__PRETTY_FUNCTION__
0000000000cb02a0 l     O .rodata	000000000000003e              Item_func_group_concat::fix_fields(THD*, Item**)::__PRETTY_FUNCTION__
0000000000cb02e0 l     O .rodata	0000000000000031              Item_func_group_concat::setup(THD*)::__PRETTY_FUNCTION__
0000000000cb0320 l     O .rodata	0000000000000039              Item_func_group_concat::val_str(String*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              item_timefunc.cc
0000000000cb1ce0 l     O .rodata	0000000000000029              String::operator=(String const&)::__PRETTY_FUNCTION__
0000000000cb06e0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
000000000080a9c0 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000cb2240 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cb2180 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cb0730 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cb0734 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cb0738 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cb073c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cb0740 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000cb21c0 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
0000000000cb24e0 l     O .rodata	0000000000000020              Item_func::has_date_args()::__PRETTY_FUNCTION__
0000000000cb2280 l     O .rodata	0000000000000020              Item_func::has_time_args()::__PRETTY_FUNCTION__
0000000000cb2500 l     O .rodata	0000000000000024              Item_func::has_datetime_args()::__PRETTY_FUNCTION__
0000000000cb2760 l     O .rodata	000000000000002b              Item_func_month::val_real()::__PRETTY_FUNCTION__
0000000000cb26e0 l     O .rodata	000000000000002d              Item_func_weekday::val_real()::__PRETTY_FUNCTION__
0000000000cb2720 l     O .rodata	0000000000000034              Item_func_weekday::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb2200 l     O .rodata	0000000000000038              Item_date::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cb2340 l     O .rodata	000000000000003d              Item_date_func::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cb22a0 l     O .rodata	0000000000000040              Item_str_timefunc::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cb2660 l     O .rodata	000000000000002d              Item_func_curtime::val_real()::__PRETTY_FUNCTION__
0000000000cb2620 l     O .rodata	000000000000002e              Item_func_curtime::val_int()::__PRETTY_FUNCTION__
0000000000cb26a0 l     O .rodata	000000000000002e              Item_func_curdate::val_int()::__PRETTY_FUNCTION__
0000000000cb25e0 l     O .rodata	000000000000002a              Item_func_now::val_int()::__PRETTY_FUNCTION__
0000000000cb25a0 l     O .rodata	0000000000000031              Item_func_sec_to_time::val_real()::__PRETTY_FUNCTION__
0000000000cb2540 l     O .rodata	000000000000004b              Item_date_add_interval::charset_for_protocol() const::__PRETTY_FUNCTION__
0000000000cb23e0 l     O .rodata	0000000000000030              Item_typecast::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb2380 l     O .rodata	0000000000000041              Item_date_typecast::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cb2420 l     O .rodata	0000000000000041              Item_time_typecast::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cb2480 l     O .rodata	0000000000000045              Item_datetime_typecast::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000000cb22e0 l     O .rodata	0000000000000041              Item_func_add_time::val_decimal(my_decimal*)::__PRETTY_FUNCTION__
0000000001062e80 l     O .data.rel.ro	0000000000000050              sp_data_access_name
000000000080a9f0 l     F .text	0000000000000036              non_zero_date(st_mysql_time const*)
0000000000cb0a14 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
000000000080aa26 l     F .text	00000000000002e4              make_datetime(date_time_format_types, st_mysql_time*, String*)
000000000080ad0a l     F .text	00000000000000f4              make_datetime_with_warn(date_time_format_types, st_mysql_time*, String*)
000000000080adfe l     F .text	00000000000000e9              make_time_with_warn(st_date_time_format const*, st_mysql_time*, String*)
000000000080aee7 l     F .text	00000000000001c6              sec_to_time(long long, bool, st_mysql_time*)
00000000010eda80 l     O .data	0000000000000020              time_ampm_format
00000000010edaa0 l     O .data	0000000000000020              time_24hrs_format
000000000080b0ad l     F .text	0000000000001278              extract_date_time(st_date_time_format*, char const*, unsigned int, st_mysql_time*, enum_mysql_timestamp_type, char const**, char const*)
000000000080d1ce l     F .text	00000000000002ef              get_interval_info(Item*, String*, bool*, unsigned int, unsigned long long*, bool)
0000000000cb11e0 l     O .rodata	0000000000000031              Item_func_period_add::val_int()::__PRETTY_FUNCTION__
0000000000cb1220 l     O .rodata	0000000000000032              Item_func_period_diff::val_int()::__PRETTY_FUNCTION__
0000000000cb1260 l     O .rodata	000000000000002e              Item_func_to_days::val_int()::__PRETTY_FUNCTION__
0000000000cb12a0 l     O .rodata	0000000000000045              Item_func_to_seconds::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cb1300 l     O .rodata	0000000000000031              Item_func_to_seconds::val_int()::__PRETTY_FUNCTION__
0000000000cb1340 l     O .rodata	0000000000000042              Item_func_to_days::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cb13a0 l     O .rodata	0000000000000030              Item_func_dayofyear::val_int()::__PRETTY_FUNCTION__
0000000000cb13e0 l     O .rodata	0000000000000031              Item_func_dayofmonth::val_int()::__PRETTY_FUNCTION__
0000000000cb1420 l     O .rodata	000000000000002c              Item_func_month::val_int()::__PRETTY_FUNCTION__
0000000000cb1460 l     O .rodata	0000000000000036              Item_func_monthname::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb14a0 l     O .rodata	000000000000002e              Item_func_quarter::val_int()::__PRETTY_FUNCTION__
0000000000cb14e0 l     O .rodata	000000000000002b              Item_func_hour::val_int()::__PRETTY_FUNCTION__
0000000000cb1520 l     O .rodata	000000000000002d              Item_func_minute::val_int()::__PRETTY_FUNCTION__
0000000000cb1560 l     O .rodata	000000000000002d              Item_func_second::val_int()::__PRETTY_FUNCTION__
0000000000cb15a0 l     O .rodata	000000000000002b              Item_func_week::val_int()::__PRETTY_FUNCTION__
0000000000cb15e0 l     O .rodata	000000000000002f              Item_func_yearweek::val_int()::__PRETTY_FUNCTION__
0000000000cb1620 l     O .rodata	000000000000002e              Item_func_weekday::val_int()::__PRETTY_FUNCTION__
0000000000cb1660 l     O .rodata	0000000000000034              Item_func_dayname::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb16a0 l     O .rodata	000000000000002b              Item_func_year::val_int()::__PRETTY_FUNCTION__
0000000000cb16e0 l     O .rodata	000000000000003f              Item_func_year::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cb1720 l     O .rodata	0000000000000035              Item_func_unix_timestamp::val_int()::__PRETTY_FUNCTION__
0000000000cb1760 l     O .rodata	0000000000000049              Item_func_unix_timestamp::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cb17c0 l     O .rodata	0000000000000032              Item_func_time_to_sec::val_int()::__PRETTY_FUNCTION__
0000000000cb1800 l     O .rodata	0000000000000042              get_interval_value(Item*, interval_type, String*, INTERVAL*)::__PRETTY_FUNCTION__
0000000000cb1860 l     O .rodata	000000000000002c              Item_date::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb18a0 l     O .rodata	0000000000000026              Item_date::val_int()::__PRETTY_FUNCTION__
0000000000cb18e0 l     O .rodata	0000000000000034              Item_func_curdate::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1920 l     O .rodata	0000000000000034              Item_func_curtime::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1960 l     O .rodata	0000000000000030              Item_func_now::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb19a0 l     O .rodata	000000000000003a              Item_func_sysdate_local::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb19e0 l     O .rodata	0000000000000034              Item_func_sysdate_local::val_int()::__PRETTY_FUNCTION__
0000000000cb1a20 l     O .rodata	0000000000000033              Item_func_sysdate_local::val_real()::__PRETTY_FUNCTION__
0000000000cb1a60 l     O .rodata	0000000000000038              Item_func_sec_to_time::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1aa0 l     O .rodata	0000000000000032              Item_func_sec_to_time::val_int()::__PRETTY_FUNCTION__
0000000000cb1ae0 l     O .rodata	0000000000000038              Item_func_date_format::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1b20 l     O .rodata	000000000000003a              Item_func_from_unixtime::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1b60 l     O .rodata	0000000000000034              Item_func_from_unixtime::val_int()::__PRETTY_FUNCTION__
0000000000cb1ba0 l     O .rodata	000000000000003f              Item_date_add_interval::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000cb1be0 l     O .rodata	0000000000000033              Item_date_add_interval::val_int()::__PRETTY_FUNCTION__
00000000010edac0 l     O .data	00000000000000a0              interval_names
0000000000cb1c20 l     O .rodata	0000000000000030              Item_extract::fix_length_and_dec()::__PRETTY_FUNCTION__
0000000000cb1c60 l     O .rodata	0000000000000029              Item_extract::val_int()::__PRETTY_FUNCTION__
0000000000cb1ca0 l     O .rodata	0000000000000035              Item_char_typecast::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1d20 l     O .rodata	0000000000000039              Item_datetime_typecast::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1d60 l     O .rodata	0000000000000033              Item_datetime_typecast::val_int()::__PRETTY_FUNCTION__
0000000000cb1da0 l     O .rodata	0000000000000035              Item_time_typecast::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1de0 l     O .rodata	0000000000000035              Item_date_typecast::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1e20 l     O .rodata	000000000000002f              Item_date_typecast::val_int()::__PRETTY_FUNCTION__
0000000000cb1e60 l     O .rodata	0000000000000035              Item_func_makedate::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1ea0 l     O .rodata	000000000000002f              Item_func_makedate::val_int()::__PRETTY_FUNCTION__
0000000000cb1ee0 l     O .rodata	0000000000000053              Item_func_add_time::val_datetime(st_mysql_time*, date_time_format_types*)::__PRETTY_FUNCTION__
0000000000cb1f40 l     O .rodata	0000000000000041              Item_func_add_time::print(String*, enum_query_type)::__PRETTY_FUNCTION__
0000000000cb1fa0 l     O .rodata	0000000000000035              Item_func_timediff::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb1fe0 l     O .rodata	0000000000000035              Item_func_maketime::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb2020 l     O .rodata	0000000000000032              Item_func_microsecond::val_int()::__PRETTY_FUNCTION__
0000000000cb2060 l     O .rodata	000000000000003d              Item_func_get_format::val_str_ascii(String*)::__PRETTY_FUNCTION__
0000000000cb20a0 l     O .rodata	0000000000000043              Item_func_get_format::print(String*, enum_query_type)::__PRETTY_FUNCTION__
000000000081481d l     F .text	0000000000000146              get_date_time_result_type(char const*, unsigned int)
0000000000cb2100 l     O .rodata	0000000000000038              Item_func_str_to_date::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb2140 l     O .rodata	0000000000000032              Item_func_str_to_date::val_int()::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              key.cc
0000000000cb27e0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000008186ab l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
00000000008186dd l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
00000000008186f7 l     F .text	0000000000000025              dbug_tmp_use_all_columns(TABLE*, st_bitmap*)
000000000081871c l     F .text	0000000000000026              dbug_tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000000000 l    df *ABS*	0000000000000000              log.cc
0000000000819c36 l     F .text	0000000000000071              inline_mysql_mutex_init
0000000000819ca7 l     F .text	0000000000000080              inline_mysql_mutex_destroy
0000000000819d27 l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000819e3e l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000819ebb l     F .text	000000000000005f              inline_mysql_rwlock_init
0000000000819f1a l     F .text	000000000000006f              inline_mysql_rwlock_destroy
0000000000819f89 l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
000000000081a094 l     F .text	000000000000010b              inline_mysql_rwlock_wrlock
000000000081a19f l     F .text	000000000000006c              inline_mysql_rwlock_unlock
000000000081a20b l     F .text	0000000000000065              inline_mysql_cond_init
000000000081a270 l     F .text	000000000000006f              inline_mysql_cond_destroy
000000000081a2df l     F .text	0000000000000133              inline_mysql_cond_wait
000000000081a412 l     F .text	0000000000000143              inline_mysql_cond_timedwait
000000000081a555 l     F .text	000000000000006c              inline_mysql_cond_signal
000000000081a5c1 l     F .text	000000000000006c              inline_mysql_cond_broadcast
000000000081a62d l     F .text	000000000000012e              inline_mysql_file_stat(unsigned int, char const*, unsigned int, char const*, stat*, int)
000000000081a75b l     F .text	0000000000000121              inline_mysql_file_chsize(char const*, unsigned int, int, unsigned long long, int, int)
000000000081a87c l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
000000000081a9a7 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
000000000081aad1 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
000000000081abd1 l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
000000000081ad4d l     F .text	0000000000000174              inline_mysql_file_write(char const*, unsigned int, int, unsigned char const*, unsigned long, int)
000000000081aec1 l     F .text	0000000000000176              inline_mysql_file_pwrite(char const*, unsigned int, int, unsigned char const*, unsigned long, unsigned long long, int)
000000000081b037 l     F .text	000000000000011c              inline_mysql_file_seek(char const*, unsigned int, int, unsigned long long, int, int)
000000000081b153 l     F .text	0000000000000102              inline_mysql_file_tell(char const*, unsigned int, int, int)
000000000081b255 l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
000000000081b374 l     F .text	0000000000000107              inline_mysql_file_sync(char const*, unsigned int, int, int)
0000000000cb28b0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cb5ea0 l     O .rodata	0000000000000027              Ha_trx_info::set_trx_read_write()::__PRETTY_FUNCTION__
0000000000cb5d40 l     O .rodata	000000000000002c              Ha_trx_info::is_trx_read_write() const::__PRETTY_FUNCTION__
0000000000cb5dc0 l     O .rodata	0000000000000027              Ha_trx_info::next() const::__PRETTY_FUNCTION__
0000000000cb5d80 l     O .rodata	0000000000000024              Ha_trx_info::ht() const::__PRETTY_FUNCTION__
0000000000cb5330 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000cb5350 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000cb5880 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000cb5ac0 l     O .rodata	0000000000000035              normalize_binlog_name(char*, char const*, bool)::__PRETTY_FUNCTION__
0000000000cb2a20 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cb2a24 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cb2a28 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cb2a2c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cb2a30 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001062ee0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cb5e00 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000cb60c0 l     O .rodata	0000000000000048              THD::enter_cond(st_mysql_cond*, st_mysql_mutex*, char const*)::__PRETTY_FUNCTION__
0000000000cb2be0 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
000000000081b47b l     F .text	0000000000000121              make_user_name(THD*, char*)
000000000081b59c l     F .text	0000000000000270              mysql_audit_general_log(THD*, long, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int)
00000000010edc70 l     O .data	0000000000000010              mysql_audit_general_log(THD*, long, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int)::empty
0000000000cb5740 l     O .rodata	0000000000000028              binlog_cache_data::~binlog_cache_data()::__PRETTY_FUNCTION__
0000000000cb57c0 l     O .rodata	0000000000000020              binlog_cache_data::reset()::__PRETTY_FUNCTION__
0000000000cb5e40 l     O .rodata	0000000000000048              binlog_cache_data::set_binlog_cache_info(unsigned long long, unsigned long*, unsigned long*)::__PRETTY_FUNCTION__
0000000000cb5260 l     O .rodata	0000000000000028              LOGGER::is_log_table_enabled(unsigned int)::__PRETTY_FUNCTION__
0000000000cb52a0 l     O .rodata	000000000000008e              Log_to_csv_event_handler::log_general(THD*, long, char const*, unsigned int, int, char const*, unsigned int, char const*, unsigned int, charset_info_st*)::__PRETTY_FUNCTION__
0000000000cb5380 l     O .rodata	0000000000000088              Log_to_csv_event_handler::log_slow(THD*, long, long, char const*, unsigned int, unsigned long long, unsigned long long, bool, char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000cb5420 l     O .rodata	0000000000000037              Log_to_csv_event_handler::activate_log(THD*, unsigned int)::__PRETTY_FUNCTION__
0000000000cb5460 l     O .rodata	0000000000000058              Log_to_csv_event_handler::log_error(loglevel, char const*, __va_list_tag*)::__PRETTY_FUNCTION__
0000000000cb54c0 l     O .rodata	000000000000001c              LOGGER::cleanup_base()::__PRETTY_FUNCTION__
0000000000cb54e0 l     O .rodata	000000000000001b              LOGGER::cleanup_end()::__PRETTY_FUNCTION__
0000000000cb5500 l     O .rodata	0000000000000019              LOGGER::init_base()::__PRETTY_FUNCTION__
0000000000cb5520 l     O .rodata	0000000000000040              LOGGER::slow_log_print(THD*, char const*, unsigned int, unsigned long long)::__PRETTY_FUNCTION__
0000000000cb5560 l     O .rodata	000000000000004d              LOGGER::general_log_write(THD*, enum_server_command, char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000cb55c0 l     O .rodata	0000000000000022              LOGGER::init_error_log(unsigned int)::__PRETTY_FUNCTION__
0000000000cb5600 l     O .rodata	000000000000002e              LOGGER::activate_log_handler(THD*, unsigned int)::__PRETTY_FUNCTION__
0000000000cb5640 l     O .rodata	000000000000002b              LOGGER::set_handlers(unsigned int, unsigned int, unsigned int)::__PRETTY_FUNCTION__
000000000081e341 l     F .text	0000000000000153              binlog_trans_log_savepos(THD*, unsigned long long*)
0000000000cb5680 l     O .rodata	000000000000002f              binlog_trans_log_savepos(THD*, unsigned long long*)::__PRETTY_FUNCTION__
000000000081e494 l     F .text	0000000000000129              binlog_trans_log_truncate(THD*, unsigned long long)
0000000000cb56c0 l     O .rodata	000000000000002f              binlog_trans_log_truncate(THD*, unsigned long long)::__PRETTY_FUNCTION__
000000000081e5bd l     F .text	00000000000000f8              binlog_init(void*)
000000000081e6b5 l     F .text	00000000000000b5              binlog_close_connection(handlerton*, THD*)
000000000081f512 l     F .text	000000000000023b              binlog_savepoint_set(handlerton*, THD*, void*)
000000000081f74d l     F .text	00000000000002a2              binlog_savepoint_rollback(handlerton*, THD*, void*)
000000000081ed39 l     F .text	00000000000001fd              binlog_commit(handlerton*, THD*, bool)
000000000081ef36 l     F .text	00000000000003c7              binlog_rollback(handlerton*, THD*, bool)
000000000081ed21 l     F .text	0000000000000018              binlog_prepare(handlerton*, THD*, bool)
0000000000cb5700 l     O .rodata	000000000000002f              binlog_close_connection(handlerton*, THD*)::__PRETTY_FUNCTION__
000000000081e76a l     F .text	0000000000000135              binlog_flush_cache(THD*, binlog_cache_data*, Log_event*, bool)
0000000000cb57e0 l     O .rodata	0000000000000043              binlog_flush_cache(THD*, binlog_cache_data*, Log_event*, bool)::__PRETTY_FUNCTION__
000000000081e89f l     F .text	00000000000000b1              binlog_commit_flush_stmt_cache(THD*, binlog_cache_mngr*)
000000000081e950 l     F .text	00000000000000b8              binlog_commit_flush_trx_cache(THD*, binlog_cache_mngr*)
000000000081ea08 l     F .text	00000000000000b8              binlog_rollback_flush_trx_cache(THD*, binlog_cache_mngr*)
000000000081eac0 l     F .text	0000000000000092              binlog_commit_flush_trx_cache(THD*, binlog_cache_mngr*, unsigned long long)
000000000081eb52 l     F .text	00000000000001cf              binlog_truncate_trx_cache(THD*, binlog_cache_mngr*, bool)
0000000000cb5780 l     O .rodata	000000000000003e              binlog_truncate_trx_cache(THD*, binlog_cache_mngr*, bool)::__PRETTY_FUNCTION__
0000000000cb5840 l     O .rodata	000000000000002d              binlog_rollback(handlerton*, THD*, bool)::__PRETTY_FUNCTION__
0000000000cb58c0 l     O .rodata	0000000000000030              check_binlog_magic(st_io_cache*, char const**)::__PRETTY_FUNCTION__
000000000081fcf3 l     F .text	00000000000003f1              find_uniq_filename(char*)
0000000000829fad l     F .text	00000000000001cb              test_if_number(char const*, unsigned long*, bool)
00000000008202f3 l     F .text	00000000000001bd              mysql_file_real_name_reopen(int, unsigned int, int, char const*)
0000000000cb5900 l     O .rodata	0000000000000047              mysql_file_real_name_reopen(int, unsigned int, int, char const*)::__PRETTY_FUNCTION__
0000000000cb5960 l     O .rodata	0000000000000027              MYSQL_LOG::init_pthread_objects()::__PRETTY_FUNCTION__
0000000000cb59a0 l     O .rodata	0000000000000044              MYSQL_BIN_LOG::open_index_file(char const*, char const*, bool)::__PRETTY_FUNCTION__
0000000000cb5a00 l     O .rodata	0000000000000067              MYSQL_BIN_LOG::open(char const*, enum_log_type, char const*, cache_type, bool, unsigned long, bool, bool)::__PRETTY_FUNCTION__
00000000008236e9 l     F .text	0000000000000262              copy_up_file_and_fill(st_io_cache*, unsigned long long)
0000000000cb5a80 l     O .rodata	000000000000003e              MYSQL_BIN_LOG::find_log_pos(st_log_info*, char const*, bool)::__PRETTY_FUNCTION__
0000000000cb5b00 l     O .rodata	0000000000000032              MYSQL_BIN_LOG::find_next_log(st_log_info*, bool)::__PRETTY_FUNCTION__
0000000000cb5b40 l     O .rodata	000000000000003a              MYSQL_BIN_LOG::purge_first_log(Relay_log_info*, bool)::__PRETTY_FUNCTION__
0000000000cb5b80 l     O .rodata	000000000000003d              MYSQL_BIN_LOG::purge_index_entry(THD*, unsigned long long*, bool)::__PRETTY_FUNCTION__
0000000000cb5bc0 l     O .rodata	0000000000000027              MYSQL_BIN_LOG::new_file_impl(bool)::__PRETTY_FUNCTION__
0000000000cb5c00 l     O .rodata	0000000000000027              MYSQL_BIN_LOG::append(Log_event*)::__PRETTY_FUNCTION__
0000000000cb5c40 l     O .rodata	0000000000000034              MYSQL_BIN_LOG::appendv(char const*, unsigned int, ...)::__PRETTY_FUNCTION__
0000000000cb5c80 l     O .rodata	000000000000002a              MYSQL_BIN_LOG::flush_and_sync(bool*)::__PRETTY_FUNCTION__
0000000000cb5cc0 l     O .rodata	0000000000000039              MYSQL_BIN_LOG::start_union_events(THD*, long long)::__PRETTY_FUNCTION__
0000000000cb5d00 l     O .rodata	000000000000002c              MYSQL_BIN_LOG::stop_union_events(THD*)::__PRETTY_FUNCTION__
0000000000cb5ee0 l     O .rodata	000000000000002e              THD::binlog_write_table_map(TABLE*, bool)::__PRETTY_FUNCTION__
0000000000cb5f20 l     O .rodata	000000000000003f              THD::binlog_set_pending_rows_event(Rows_log_event*, bool)::__PRETTY_FUNCTION__
0000000000cb5f60 l     O .rodata	0000000000000039              MYSQL_BIN_LOG::remove_pending_rows_event(THD*, bool)::__PRETTY_FUNCTION__
0000000000cb5fa0 l     O .rodata	0000000000000051              MYSQL_BIN_LOG::flush_and_set_pending_rows_event(THD*, Rows_log_event*, bool)::__PRETTY_FUNCTION__
0000000000cb6000 l     O .rodata	0000000000000036              MYSQL_BIN_LOG::write_cache(st_io_cache*, bool, bool)::__PRETTY_FUNCTION__
0000000000cb6040 l     O .rodata	0000000000000021              query_error_code(THD*, bool)::__PRETTY_FUNCTION__
0000000000cb6080 l     O .rodata	000000000000003d              MYSQL_BIN_LOG::write(THD*, st_io_cache*, Log_event*, bool)::__PRETTY_FUNCTION__
000000000082a257 l     F .text	000000000000005d              redirect_std_streams(char const*)
000000000082a3b0 l     F .text	00000000000001d8              print_buffer_to_file(loglevel, char const*, unsigned long)
0000000000cb4d90 l     O .rodata	0000000000000004              tc_log_magic
0000000000cb6120 l     O .rodata	000000000000002b              TC_LOG_MMAP::open(char const*)::__PRETTY_FUNCTION__
0000000000cb6160 l     O .rodata	000000000000002f              TC_LOG_MMAP::log_xid(THD*, unsigned long long)::__PRETTY_FUNCTION__
0000000000cb6190 l     O .rodata	0000000000000018              TC_LOG_MMAP::sync()::__PRETTY_FUNCTION__
0000000000cb61c0 l     O .rodata	000000000000002e              TC_LOG_MMAP::unlog(unsigned long, unsigned long long)::__PRETTY_FUNCTION__
0000000000cb6200 l     O .rodata	000000000000002d              MYSQL_BIN_LOG::open(char const*)::__PRETTY_FUNCTION__
0000000000cb6240 l     O .rodata	0000000000000024              MYSQL_BIN_LOG::close()::__PRETTY_FUNCTION__
0000000000cb6280 l     O .rodata	0000000000000030              MYSQL_BIN_LOG::unlog(unsigned long, unsigned long long)::__PRETTY_FUNCTION__
000000000082c9ad l     F .text	00000000000000ce              __static_initialization_and_destruction_0(int, int)
000000000082ca7b l     F .text	0000000000000015              _GLOBAL__sub_I_log.cc
0000000000000000 l    df *ABS*	0000000000000000              lock.cc
0000000000cb62c0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cb62c8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cb62cc l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cb62d0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cb62d4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cb62d8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001062f40 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010edc80 l     O .data	0000000000000010              thr_lock_errno_to_mysql
000000000082de3e l     F .text	00000000000003b7              lock_tables_check(THD*, TABLE**, unsigned int, unsigned int)
0000000000cb6820 l     O .rodata	0000000000000031              lock_tables_check(THD*, TABLE**, unsigned int, unsigned int)::__PRETTY_FUNCTION__
000000000082e1f5 l     F .text	00000000000000a9              reset_lock_data(st_mysql_lock*)
000000000082e29e l     F .text	0000000000000038              reset_lock_data_and_free(st_mysql_lock**)
000000000082f37e l     F .text	0000000000000400              get_lock_data(THD*, TABLE**, unsigned int, unsigned int)
0000000000cb6860 l     O .rodata	0000000000000012              mysql_lock_tables(THD*, TABLE**, unsigned int, unsigned int)::__FUNCTION__
000000000082e5f1 l     F .text	0000000000000218              lock_external(THD*, TABLE**, unsigned int)
000000000082f266 l     F .text	0000000000000118              unlock_external(THD*, TABLE**, unsigned int)
0000000000cb6880 l     O .rodata	0000000000000027              lock_external(THD*, TABLE**, unsigned int)::__PRETTY_FUNCTION__
000000000082fbd4 l     F .text	00000000000000f5              print_lock_error(int, char const*)
0000000000cb68c0 l     O .rodata	0000000000000031              mysql_unlock_read_tables(THD*, st_mysql_lock*)::__PRETTY_FUNCTION__
0000000000cb6900 l     O .rodata	0000000000000032              mysql_lock_remove(THD*, st_mysql_lock*, TABLE*)::__PRETTY_FUNCTION__
0000000000cb6940 l     O .rodata	0000000000000035              get_lock_data(THD*, TABLE**, unsigned int, unsigned int)::__PRETTY_FUNCTION__
0000000000cb6980 l     O .rodata	0000000000000053              lock_object_name(THD*, MDL_key::enum_mdl_namespace, char const*, char const*)::__PRETTY_FUNCTION__
0000000000cb69e0 l     O .rodata	0000000000000033              Global_read_lock::lock_global_read_lock(THD*)::__PRETTY_FUNCTION__
0000000000cb6a20 l     O .rodata	0000000000000035              Global_read_lock::unlock_global_read_lock(THD*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              log_event.cc
0000000000830150 l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000830267 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008302e4 l     F .text	0000000000000079              bitmap_clear_bit
0000000000cbb240 l     O .rodata	0000000000000028              bitmap_clear_bit::__PRETTY_FUNCTION__
000000000083035d l     F .text	0000000000000067              bitmap_is_set
0000000000cbab40 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cbab20 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000cbada0 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
00000000008303c4 l     F .text	0000000000000023              my_atomic_add64(long long volatile*, long long)
00000000008303e7 l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
0000000000830512 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
000000000083063c l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
000000000083073c l     F .text	0000000000000174              inline_mysql_file_write(char const*, unsigned int, int, unsigned char const*, unsigned long, int)
00000000008308b0 l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
0000000000cb6bb0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cbb3c0 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000cbb3f0 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000cbb410 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000cbb430 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000cbab80 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000cba5c0 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000cbaae0 l     O .rodata	0000000000000037              CSET_STRING::CSET_STRING(char*, unsigned long, charset_info_st*)::__PRETTY_FUNCTION__
0000000000cba6c0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cba600 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cba640 l     O .rodata	0000000000000025              Item_int::val_int()::__PRETTY_FUNCTION__
0000000000cba680 l     O .rodata	0000000000000024              Item_int::val_real()::__PRETTY_FUNCTION__
0000000000cba700 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000cb6e10 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cb6e14 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cb6e18 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cb6e1c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cb6e20 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001062fa0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cba980 l     O .rodata	000000000000006e              Query_tables_list::stmt_accessed_table_string(Query_tables_list::enum_stmt_accessed_table)::__PRETTY_FUNCTION__
0000000000cbaa00 l     O .rodata	0000000000000059              Query_tables_list::stmt_accessed_table(Query_tables_list::enum_stmt_accessed_table)::__PRETTY_FUNCTION__
0000000000cba940 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000cbaf80 l     O .rodata	000000000000003e              Rows_log_event::unpack_current_row(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000000cbaf40 l     O .rodata	0000000000000034              Rows_log_event::is_auto_inc_in_extra_columns()::__PRETTY_FUNCTION__
0000000000cb72d0 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
00000000008309cf l     F .text	0000000000000299              HA_ERR(int)
0000000000cba5a0 l     O .rodata	0000000000000018              HA_ERR(int)::__PRETTY_FUNCTION__
0000000000830c68 l     F .text	000000000000031c              slave_rows_error_report(loglevel, int, Relay_log_info const*, THD*, TABLE*, char const*, char const*, unsigned long)
0000000000830f84 l     F .text	0000000000000036              clear_all_errors(THD*, Relay_log_info*)
000000000083108f l     F .text	00000000000001b2              pretty_print_str(char*, char const*, int)
0000000000831241 l     F .text	00000000000000f0              slave_load_file_stem(char*, unsigned int, int, char const*)
0000000000831331 l     F .text	00000000000001aa              cleanup_load_tmpdir()
00000000008314db l     F .text	0000000000000080              write_str(st_io_cache*, char const*, unsigned int)
000000000083155b l     F .text	0000000000000083              read_str(char const**, char const*, char const**, unsigned char*)
0000000000cba740 l     O .rodata	000000000000006c              Log_event::read_log_event(st_io_cache*, st_mysql_mutex*, Format_description_log_event const*)::__PRETTY_FUNCTION__
0000000000cba7c0 l     O .rodata	0000000000000072              Log_event::read_log_event(char const*, unsigned int, char const**, Format_description_log_event const*)::__PRETTY_FUNCTION__
0000000000833559 l     F .text	00000000000000c2              write_str_with_code_and_len(unsigned char**, char const*, unsigned int, unsigned int)
0000000000cba840 l     O .rodata	0000000000000043              write_str_with_code_and_len(unsigned char**, char const*, unsigned int, unsigned int)::__PRETTY_FUNCTION__
0000000000cba8a0 l     O .rodata	000000000000002f              Query_log_event::write(st_io_cache*)::__PRETTY_FUNCTION__
0000000000cba8e0 l     O .rodata	0000000000000052              Query_log_event::Query_log_event(THD*, char const*, unsigned long, bool, bool, bool, int)::__PRETTY_FUNCTION__
0000000000834afd l     F .text	00000000000000ae              get_str_len_and_pointer(unsigned char const**, char const**, unsigned int*, unsigned char const*)
0000000000834bab l     F .text	0000000000000069              copy_str_and_move(char const**, unsigned char**, unsigned int)
0000000000834c14 l     F .text	00000000000000c2              code_name(int)
0000000001387c00 l     O .bss	00000000000000ff              code_name(int)::buf
0000000000cbaa60 l     O .rodata	0000000000000069              Query_log_event::Query_log_event(char const*, unsigned int, Format_description_log_event const*, Log_event_type)::__PRETTY_FUNCTION__
000000000084358f l     F .text	00000000000000a1              rows_event_stmt_cleanup(Relay_log_info const*, THD*)
0000000000cbabc0 l     O .rodata	0000000000000054              Query_log_event::do_shall_skip(Relay_log_info*)::__PRETTY_FUNCTION__
0000000000cbac20 l     O .rodata	000000000000004f              Format_description_log_event::Format_description_log_event(unsigned char, char const*)::__PRETTY_FUNCTION__
0000000000cbac70 l     O .rodata	0000000000000017              Format_description_log_event::Format_description_log_event(char const*, unsigned int, Format_description_log_event const*)::perm
0000000000cbaca0 l     O .rodata	0000000000000046              Load_log_event::do_apply_event(st_net*, Relay_log_info const*, bool)::__PRETTY_FUNCTION__
0000000000cbad00 l     O .rodata	0000000000000055              Rotate_log_event::do_shall_skip(Relay_log_info*)::__PRETTY_FUNCTION__
0000000000cbad60 l     O .rodata	0000000000000029              slave_execute_deferred_events(THD*)::__PRETTY_FUNCTION__
0000000000cbadc0 l     O .rodata	000000000000005f              User_var_log_event::User_var_log_event(char const*, unsigned int, Format_description_log_event const*)::__PRETTY_FUNCTION__
0000000000cbae20 l     O .rodata	000000000000000f              Create_file_log_event::do_apply_event(Relay_log_info const*)::__FUNCTION__
0000000000cbae30 l     O .rodata	000000000000000f              Append_block_log_event::do_apply_event(Relay_log_info const*)::__FUNCTION__
0000000000cbae40 l     O .rodata	000000000000004c              Rows_log_event::Rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)::__PRETTY_FUNCTION__
0000000000cbaea0 l     O .rodata	000000000000003c              Rows_log_event::do_add_row_data(unsigned char*, unsigned long)::__PRETTY_FUNCTION__
0000000000cbaee0 l     O .rodata	0000000000000042              Rows_log_event::do_apply_event(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000000cbafc0 l     O .rodata	0000000000000039              rows_event_stmt_cleanup(Relay_log_info const*, THD*)::__PRETTY_FUNCTION__
0000000000cbb000 l     O .rodata	000000000000003a              Rows_log_event::write_data_header(st_io_cache*)::__PRETTY_FUNCTION__
0000000000cbb040 l     O .rodata	0000000000000038              Rows_log_event::write_data_body(st_io_cache*)::__PRETTY_FUNCTION__
0000000000cbb080 l     O .rodata	0000000000000044              Table_map_log_event::Table_map_log_event(THD*, TABLE*, unsigned long, bool)::__PRETTY_FUNCTION__
0000000000cbb0e0 l     O .rodata	0000000000000061              Table_map_log_event::Table_map_log_event(char const*, unsigned int, Format_description_log_event const*)::__PRETTY_FUNCTION__
0000000000844b0b l     F .text	00000000000001e5              check_table_map(Relay_log_info const*, RPL_TABLE_LIST*)
0000000000cbb160 l     O .rodata	0000000000000047              Table_map_log_event::do_apply_event(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000000cbb1c0 l     O .rodata	000000000000003f              Table_map_log_event::write_data_header(st_io_cache*)::__PRETTY_FUNCTION__
0000000000cbb200 l     O .rodata	000000000000003d              Table_map_log_event::write_data_body(st_io_cache*)::__PRETTY_FUNCTION__
0000000000845c11 l     F .text	0000000000000065              last_uniq_key(TABLE*, unsigned int)
0000000000cbb280 l     O .rodata	000000000000003b              Rows_log_event::write_row(Relay_log_info const*, bool)::__PRETTY_FUNCTION__
0000000000848990 l     F .text	000000000000001a              (anonymous namespace)::auto_afree_ptr<char>::auto_afree_ptr(char*)
00000000008489b6 l     F .text	0000000000000011              (anonymous namespace)::auto_afree_ptr<char>::get()
00000000008489c8 l     F .text	0000000000000049              (anonymous namespace)::auto_afree_ptr<char>::assign(char*)
00000000008489aa l     F .text	000000000000000b              (anonymous namespace)::auto_afree_ptr<char>::~auto_afree_ptr()
0000000000cbb320 l     O .rodata	0000000000000045              Write_rows_log_event::do_exec_row(Relay_log_info const*)::__PRETTY_FUNCTION__
00000000008469af l     F .text	00000000000003b9              record_compare(TABLE*)
0000000000846d68 l     F .text	0000000000000112              issue_long_find_row_warning(Log_event_type, char const*, bool, Relay_log_info const*)
0000000000cbb380 l     O .rodata	0000000000000034              Rows_log_event::find_row(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000000cbb460 l     O .rodata	0000000000000046              Delete_rows_log_event::do_exec_row(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000000cbb4c0 l     O .rodata	0000000000000046              Update_rows_log_event::do_exec_row(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000001062ff0 l     O .data.rel.ro	0000000000000010              Incident_log_event::description() const::description
0000000000848990 l     F .text	000000000000001a              (anonymous namespace)::auto_afree_ptr<char>::auto_afree_ptr(char*)
00000000008489aa l     F .text	000000000000000b              (anonymous namespace)::auto_afree_ptr<char>::~auto_afree_ptr()
0000000000cbb2c0 l     O .rodata	0000000000000046              (anonymous namespace)::auto_afree_ptr<char>::assign(char*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              rpl_record.cc
0000000000849c35 l     F .text	0000000000000067              bitmap_is_set
0000000000cbba40 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cbb578 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cbbb60 l     O .rodata	000000000000002d              table_def::field_metadata(unsigned int) const::__PRETTY_FUNCTION__
0000000000cbbba0 l     O .rodata	000000000000002a              table_def::maybe_null(unsigned int) const::__PRETTY_FUNCTION__
0000000000cbb5d0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cbb5d4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cbb5d8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cbb5dc l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cbb5e0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063000 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cbbb00 l     O .rodata	0000000000000048              Relay_log_info::get_table_data(TABLE*, table_def**, TABLE**) const::__PRETTY_FUNCTION__
0000000000cbba00 l     O .rodata	0000000000000040              pack_row(TABLE*, st_bitmap const*, unsigned char*, unsigned char const*)::__PRETTY_FUNCTION__
0000000000cbba80 l     O .rodata	0000000000000079              unpack_row(Relay_log_info const*, TABLE*, unsigned int, unsigned char const*, st_bitmap const*, unsigned char const**, unsigned long*, unsigned char const*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              rpl_reporting.cc
000000000084b0c2 l     F .text	0000000000000071              inline_mysql_mutex_init
000000000084b133 l     F .text	0000000000000080              inline_mysql_mutex_destroy
000000000084b1b3 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000084b2ca l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000cbbbe0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cbbc60 l     O .rodata	000000000000004f              Slave_reporting_capability::report(loglevel, int, char const*, ...) const::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              log_event_old.cc
000000000084b674 l     F .text	0000000000000067              bitmap_is_set
0000000000cbd180 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cbbd18 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cbd260 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000cbd290 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000cbd2b0 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000cbd2d0 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000cbd080 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000cbd0c0 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000cbbe88 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cbbe8c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cbbe90 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cbbe94 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cbbe98 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063060 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cbd700 l     O .rodata	0000000000000042              Old_rows_log_event::unpack_current_row(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000000cbd020 l     O .rodata	0000000000000053              Old_rows_log_event::do_apply_event(Old_rows_log_event*, Relay_log_info const*)::__PRETTY_FUNCTION__
000000000084c072 l     F .text	0000000000000065              last_uniq_key(TABLE*, unsigned int)
000000000084c0d7 l     F .text	0000000000000335              record_compare(TABLE*)
000000000084c40c l     F .text	00000000000003da              copy_extra_record_fields(TABLE*, unsigned long, long long)
0000000000cbd100 l     O .rodata	000000000000003b              copy_extra_record_fields(TABLE*, unsigned long, long long)::__PRETTY_FUNCTION__
000000000084c7e6 l     F .text	00000000000008d4              replace_record(THD*, TABLE*, unsigned long, unsigned int)
0000000000cbd140 l     O .rodata	000000000000002e              replace_record(THD*, TABLE*, unsigned long, unsigned int)::__PRETTY_FUNCTION__
000000000085217e l     F .text	000000000000001a              (anonymous namespace)::auto_afree_ptr<char>::auto_afree_ptr(char*)
00000000008521a4 l     F .text	0000000000000011              (anonymous namespace)::auto_afree_ptr<char>::get()
00000000008521b6 l     F .text	0000000000000049              (anonymous namespace)::auto_afree_ptr<char>::assign(char*)
0000000000852198 l     F .text	000000000000000b              (anonymous namespace)::auto_afree_ptr<char>::~auto_afree_ptr()
000000000084d0ba l     F .text	000000000000083e              find_and_fetch_row(TABLE*, unsigned char*)
0000000000cbd220 l     O .rodata	0000000000000027              find_and_fetch_row(TABLE*, unsigned char*)::__PRETTY_FUNCTION__
0000000000cbd300 l     O .rodata	0000000000000077              Write_rows_log_event_old::do_prepare_row(THD*, Relay_log_info const*, TABLE*, unsigned char const*, unsigned char const**)::__PRETTY_FUNCTION__
0000000000cbd380 l     O .rodata	000000000000003a              Write_rows_log_event_old::do_exec_row(TABLE*)::__PRETTY_FUNCTION__
0000000000cbd3c0 l     O .rodata	0000000000000048              Delete_rows_log_event_old::do_before_row_operations(TABLE*)::__PRETTY_FUNCTION__
0000000000cbd420 l     O .rodata	0000000000000078              Delete_rows_log_event_old::do_prepare_row(THD*, Relay_log_info const*, TABLE*, unsigned char const*, unsigned char const**)::__PRETTY_FUNCTION__
0000000000cbd4a0 l     O .rodata	000000000000003b              Delete_rows_log_event_old::do_exec_row(TABLE*)::__PRETTY_FUNCTION__
0000000000cbd4e0 l     O .rodata	0000000000000048              Update_rows_log_event_old::do_before_row_operations(TABLE*)::__PRETTY_FUNCTION__
0000000000cbd540 l     O .rodata	0000000000000078              Update_rows_log_event_old::do_prepare_row(THD*, Relay_log_info const*, TABLE*, unsigned char const*, unsigned char const**)::__PRETTY_FUNCTION__
0000000000cbd5c0 l     O .rodata	000000000000003b              Update_rows_log_event_old::do_exec_row(TABLE*)::__PRETTY_FUNCTION__
0000000000cbd600 l     O .rodata	0000000000000054              Old_rows_log_event::Old_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)::__PRETTY_FUNCTION__
0000000000cbd660 l     O .rodata	0000000000000040              Old_rows_log_event::do_add_row_data(unsigned char*, unsigned long)::__PRETTY_FUNCTION__
0000000000cbd6a0 l     O .rodata	0000000000000046              Old_rows_log_event::do_apply_event(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000000cbd760 l     O .rodata	000000000000003e              Old_rows_log_event::write_data_header(st_io_cache*)::__PRETTY_FUNCTION__
0000000000cbd7a0 l     O .rodata	000000000000003c              Old_rows_log_event::write_data_body(st_io_cache*)::__PRETTY_FUNCTION__
0000000000cbd7e0 l     O .rodata	000000000000003f              Old_rows_log_event::write_row(Relay_log_info const*, bool)::__PRETTY_FUNCTION__
0000000000cbd820 l     O .rodata	0000000000000038              Old_rows_log_event::find_row(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000000cbd860 l     O .rodata	0000000000000060              Write_rows_log_event_old::Write_rows_log_event_old(THD*, TABLE*, unsigned long, st_bitmap const*, bool)::__PRETTY_FUNCTION__
0000000000cbd8c0 l     O .rodata	0000000000000049              Write_rows_log_event_old::do_exec_row(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000000cbd920 l     O .rodata	0000000000000062              Delete_rows_log_event_old::Delete_rows_log_event_old(THD*, TABLE*, unsigned long, st_bitmap const*, bool)::__PRETTY_FUNCTION__
0000000000cbd9a0 l     O .rodata	000000000000004a              Delete_rows_log_event_old::do_exec_row(Relay_log_info const*)::__PRETTY_FUNCTION__
0000000000cbda00 l     O .rodata	0000000000000062              Update_rows_log_event_old::Update_rows_log_event_old(THD*, TABLE*, unsigned long, st_bitmap const*, bool)::__PRETTY_FUNCTION__
0000000000cbda80 l     O .rodata	000000000000004a              Update_rows_log_event_old::do_exec_row(Relay_log_info const*)::__PRETTY_FUNCTION__
000000000085217e l     F .text	000000000000001a              (anonymous namespace)::auto_afree_ptr<char>::auto_afree_ptr(char*)
0000000000852198 l     F .text	000000000000000b              (anonymous namespace)::auto_afree_ptr<char>::~auto_afree_ptr()
0000000000cbd1c0 l     O .rodata	0000000000000046              (anonymous namespace)::auto_afree_ptr<char>::assign(char*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              rpl_record_old.cc
000000000085257b l     F .text	0000000000000079              bitmap_clear_bit
0000000000cbde60 l     O .rodata	0000000000000028              bitmap_clear_bit::__PRETTY_FUNCTION__
00000000008525f4 l     F .text	0000000000000067              bitmap_is_set
0000000000cbdd40 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cbdb38 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cbde20 l     O .rodata	0000000000000025              Field::last_null_byte() const::__PRETTY_FUNCTION__
0000000000cbdbd4 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cbdbd8 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cbdbdc l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cbdbe0 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cbdbe4 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010630c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cbdd80 l     O .rodata	000000000000008d              unpack_row_old(Relay_log_info*, TABLE*, unsigned int, unsigned char*, unsigned char const*, st_bitmap const*, unsigned char const**, unsigned long*, st_bitmap*, Log_event_type)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              my_decimal.cc
0000000000cbe0c0 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
0000000000cbe0e0 l     O .rodata	000000000000002b              max_my_decimal(my_decimal*, int, int)::__PRETTY_FUNCTION__
0000000000cbdf38 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cbdf40 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cbdf44 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cbdf48 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cbdf4c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cbdf50 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063120 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cbe080 l     O .rodata	0000000000000023              decimal_operation_results(int)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              my_time.c
0000000000853897 l     F .text	000000000000007a              validate_timestamp_range
00000000010edd40 l     O .data	0000000000000008              internal_format_positions
00000000010edd48 l     O .data	0000000000000001              time_separator
0000000000cbe110 l     O .rodata	0000000000000008              days_at_timestart
0000000001387d00 l     O .bss	0000000000000008              my_time_zone
0000000000cbe248 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.8826
0000000000cbe258 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.8873
0000000000cbe270 l     O .rodata	0000000000000012              __PRETTY_FUNCTION__.8902
0000000000000000 l    df *ABS*	0000000000000000              opt_range.cc
0000000000cc02c0 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
0000000000856178 l     F .text	0000000000000077              bitmap_set_bit
0000000000cbfd40 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
00000000008561ef l     F .text	0000000000000079              bitmap_clear_bit
0000000000cbfd00 l     O .rodata	0000000000000028              bitmap_clear_bit::__PRETTY_FUNCTION__
0000000000856268 l     F .text	0000000000000067              bitmap_is_set
0000000000cbfdc0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cbe348 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cbfe80 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000cbfc10 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000cbfcd0 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000cbfc30 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000cbfc50 l     O .rodata	000000000000001e              TABLE::set_keyread(bool)::__PRETTY_FUNCTION__
00000000008562cf l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
0000000000856301 l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
000000000085631b l     F .text	0000000000000025              dbug_tmp_use_all_columns(TABLE*, st_bitmap*)
0000000000856340 l     F .text	0000000000000026              dbug_tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000856366 l     F .text	0000000000000061              dbug_tmp_use_all_columns(TABLE*, unsigned int**, st_bitmap*, st_bitmap*)
00000000008563c7 l     F .text	0000000000000047              dbug_tmp_restore_column_maps(st_bitmap*, st_bitmap*, unsigned int**)
0000000000cbe478 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cbe47c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cbe480 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cbe484 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cbe488 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063180 l     O .data.rel.ro	0000000000000050              sp_data_access_name
000000000085640e l     F .text	0000000000000058              init_single_partition_iterator(unsigned int, st_partition_iter*)
0000000000856466 l     F .text	000000000000005e              init_all_partitions_iterator(partition_info*, st_partition_iter*)
0000000000cc0300 l     O .rodata	0000000000000037              QUICK_SELECT_I::init_ror_merged_scan(bool)::__PRETTY_FUNCTION__
00000000010edd5d l     O .data	0000000000000002              is_null_string
000000000085919c l     F .text	00000000000001b4              sel_cmp(Field*, unsigned char*, unsigned char*, unsigned char, unsigned char)
00000000008564c4 l     F .text	000000000000005d              all_same(SEL_ARG const*, SEL_ARG const*)
0000000001387d20 l     O .bss	0000000000000060              null_element
0000000000864243 l     F .text	000000000000065d              tree_or(RANGE_OPT_PARAM*, SEL_TREE*, SEL_TREE*)
0000000000cbfc80 l     O .rodata	0000000000000043              QUICK_ROR_INTERSECT_SELECT::init_ror_merged_scan(bool)::__PRETTY_FUNCTION__
0000000000858592 l     F .text	0000000000000057              QUICK_ROR_UNION_SELECT_queue_cmp
000000000085943a l     F .text	00000000000001f9              fill_used_fields_bitmap(PARAM*)
000000000085dc65 l     F .text	00000000000000ea              get_index_only_read_time(PARAM const*, unsigned long long, int)
00000000008619a7 l     F .text	0000000000000ce1              get_mm_tree(RANGE_OPT_PARAM*, Item*)
000000000086be4b l     F .text	0000000000001607              get_best_group_min_max(PARAM*, SEL_TREE*, double)
000000000085fed6 l     F .text	0000000000000686              get_key_scans_params(PARAM*, SEL_TREE*, bool, bool, double)
000000000085ee0b l     F .text	00000000000008cb              get_best_ror_intersect(PARAM const*, SEL_TREE*, double, bool*)
000000000085f6d6 l     F .text	0000000000000800              get_best_covering_ror_intersect(PARAM*, SEL_TREE*, double)
000000000085ce9b l     F .text	0000000000000dca              get_best_disjunct_quick(PARAM*, SEL_IMERGE*, double)
0000000000871172 l     F .text	000000000000013d              print_quick(QUICK_SELECT_I*, Bitmap<64u> const*)
000000000085c1e3 l     F .text	000000000000003c              mark_all_partitions_as_used(partition_info*)
000000000085c28e l     F .text	0000000000000466              create_partition_index_description(st_part_prune_param*)
000000000085b16a l     F .text	0000000000001079              find_used_partitions(st_part_prune_param*, SEL_ARG*)
000000000085b03c l     F .text	000000000000012e              find_used_partitions_imerge(st_part_prune_param*, SEL_IMERGE*)
000000000085ae68 l     F .text	00000000000001d4              find_used_partitions_imerge_list(st_part_prune_param*, List<SEL_IMERGE>&)
000000000085ac5e l     F .text	0000000000000091              store_selargs_to_rec(st_part_prune_param*, SEL_ARG**, int)
000000000085acef l     F .text	00000000000000a4              mark_full_partition_used_no_parts(partition_info*, unsigned int)
000000000085ad93 l     F .text	00000000000000d5              mark_full_partition_used_with_parts(partition_info*, unsigned int)
000000000085c91c l     F .text	00000000000001da              dbug_print_segment_range(SEL_ARG*, st_key_part*)
0000000000cbfd80 l     O .rodata	0000000000000036              find_used_partitions(st_part_prune_param*, SEL_ARG*)::__PRETTY_FUNCTION__
000000000085caf6 l     F .text	0000000000000116              dbug_print_singlepoint_range(SEL_ARG**, unsigned int)
000000000085c21f l     F .text	000000000000006f              fields_ok_for_partition_index(Field**)
000000000085c6f4 l     F .text	0000000000000114              print_partitioning_index(st_key_part*, st_key_part*)
000000000085c808 l     F .text	0000000000000114              dbug_print_field(Field*)
0000000000870a7c l     F .text	0000000000000265              print_sel_tree(PARAM*, SEL_TREE*, Bitmap<64u>*, char const*)
000000000085dd4f l     F .text	0000000000000313              make_ror_scan(PARAM const*, int, SEL_ARG*)
000000000085e062 l     F .text	00000000000000e1              cmp_ror_scan_info(st_ror_scan_info**, st_ror_scan_info**)
000000000085e143 l     F .text	00000000000000d3              cmp_ror_scan_info_covering(st_ror_scan_info**, st_ror_scan_info**)
000000000085e216 l     F .text	000000000000014c              ror_intersect_init(PARAM const*)
000000000085e402 l     F .text	00000000000005a0              ror_scan_selectivity(ROR_INTERSECT_INFO const*, st_ror_scan_info const*)
000000000085e9a2 l     F .text	0000000000000469              ror_intersect_add(ROR_INTERSECT_INFO*, st_ror_scan_info*, bool)
0000000000870ce1 l     F .text	00000000000001d9              print_ror_scans_arr(TABLE*, char const*, st_ror_scan_info**, st_ror_scan_info**)
0000000000866d27 l     F .text	0000000000000382              check_quick_select(PARAM*, unsigned int, SEL_ARG*, bool)
0000000000860ac9 l     F .text	0000000000000097              get_ne_mm_tree(RANGE_OPT_PARAM*, Item_func*, Field*, Item*, Item*, Item_result)
0000000000862688 l     F .text	00000000000003bc              get_mm_parts(RANGE_OPT_PARAM*, Item*, Field*, Item_func::Functype, Item*, Item_result)
0000000000860b60 l     F .text	0000000000000b28              get_func_mm_tree(RANGE_OPT_PARAM*, Item_func*, Field*, Item*, Item_result, bool)
0000000000863cf8 l     F .text	0000000000000363              tree_and(RANGE_OPT_PARAM*, SEL_TREE*, SEL_TREE*)
0000000000861688 l     F .text	000000000000031f              get_full_func_mm_tree(RANGE_OPT_PARAM*, Item_func*, Item_field*, Item*, bool)
0000000000862a44 l     F .text	00000000000011cf              get_mm_leaf(RANGE_OPT_PARAM*, Item*, Field*, st_key_part*, Item_func::Functype, Item*)
0000000000863c13 l     F .text	00000000000000e5              sel_add(SEL_ARG*, SEL_ARG*)
0000000000864a51 l     F .text	00000000000004cc              key_and(RANGE_OPT_PARAM*, SEL_ARG*, SEL_ARG*, unsigned int)
00000000008641ba l     F .text	0000000000000089              remove_nonrange_trees(RANGE_OPT_PARAM*, SEL_TREE*)
0000000000864fdd l     F .text	0000000000001024              key_or(RANGE_OPT_PARAM*, SEL_ARG*, SEL_ARG*)
00000000008648a0 l     F .text	00000000000001b1              and_all_keys(RANGE_OPT_PARAM*, SEL_ARG*, SEL_ARG*, unsigned int)
0000000000864f1d l     F .text	00000000000000c0              get_range(SEL_ARG**, SEL_ARG**, SEL_ARG*)
0000000000866001 l     F .text	00000000000001e6              eq_tree(SEL_ARG*, SEL_ARG*)
0000000000866732 l     F .text	00000000000000b0              left_rotate(SEL_ARG**, SEL_ARG*)
00000000008667e2 l     F .text	00000000000000b0              right_rotate(SEL_ARG**, SEL_ARG*)
00000000008670a9 l     F .text	0000000000000a96              check_quick_keys(PARAM*, unsigned int, SEL_ARG*, unsigned char*, unsigned int, int, unsigned char*, unsigned int, int)
0000000000867b3f l     F .text	00000000000001b9              is_key_scan_ror(PARAM*, unsigned int, unsigned char)
0000000000868691 l     F .text	0000000000000065              null_part_in_key(st_key_part*, unsigned char const*, unsigned int)
0000000000cbfe00 l     O .rodata	0000000000000034              QUICK_INDEX_MERGE_SELECT::read_keys_and_merge()::__PRETTY_FUNCTION__
0000000000cbfe40 l     O .rodata	0000000000000028              QUICK_RANGE_SELECT::reset()::__PRETTY_FUNCTION__
0000000000cbfec0 l     O .rodata	000000000000002b              QUICK_RANGE_SELECT::get_next()::__PRETTY_FUNCTION__
0000000000cbff00 l     O .rodata	000000000000003c              QUICK_RANGE_SELECT::get_next_prefix(unsigned int, unsigned int, unsigned char*)::__PRETTY_FUNCTION__
0000000000cbff40 l     O .rodata	000000000000002a              QUICK_SELECT_DESC::get_next()::__PRETTY_FUNCTION__
0000000000cbff80 l     O .rodata	0000000000000045              get_best_group_min_max(PARAM*, SEL_TREE*, double)::__PRETTY_FUNCTION__
000000000086df13 l     F .text	000000000000008f              get_field_keypart(st_key*, Field*)
000000000086dfa2 l     F .text	0000000000000058              get_index_range_tree(unsigned int, SEL_TREE*, PARAM*, unsigned int*)
000000000086dc82 l     F .text	0000000000000291              get_constant_key_infix(st_key*, SEL_ARG*, st_key_part_info*, st_key_part_info*, st_key_part_info*, THD*, unsigned char*, unsigned int*, st_key_part_info**)
000000000086db3d l     F .text	0000000000000145              get_sel_arg_for_keypart(Field*, SEL_ARG*, SEL_ARG**)
000000000086dffa l     F .text	00000000000005c4              cost_group_min_max(TABLE*, st_key*, unsigned int, unsigned int, SEL_TREE*, SEL_ARG*, unsigned long long, bool, bool, double*, unsigned long long*)
000000000086d452 l     F .text	00000000000006eb              check_group_min_max_predicates(Item*, Item_field*, Field::imagetype)
0000000000cbffe0 l     O .rodata	000000000000004a              check_group_min_max_predicates(Item*, Item_field*, Field::imagetype)::__PRETTY_FUNCTION__
0000000000cc0040 l     O .rodata	0000000000000082              get_constant_key_infix(st_key*, SEL_ARG*, st_key_part_info*, st_key_part_info*, st_key_part_info*, THD*, unsigned char*, unsigned int*, st_key_part_info**)::__PRETTY_FUNCTION__
0000000000cc00e0 l     O .rodata	000000000000004f              TRP_GROUP_MIN_MAX::make_quick(PARAM*, bool, st_mem_root*)::__PRETTY_FUNCTION__
0000000000cc0140 l     O .rodata	00000000000000b6              QUICK_GROUP_MIN_MAX_SELECT::QUICK_GROUP_MIN_MAX_SELECT(TABLE*, JOIN*, bool, bool, bool, st_key_part_info*, unsigned int, unsigned int, unsigned int, st_key*, unsigned int, double, unsigned long long, unsigned int, unsigned char*, st_mem_root*, bool)::__PRETTY_FUNCTION__
0000000000cc0200 l     O .rodata	0000000000000033              QUICK_GROUP_MIN_MAX_SELECT::get_next()::__PRETTY_FUNCTION__
000000000086fe34 l     F .text	00000000000000ba              index_next_different(bool, handler*, st_key_part_info*, unsigned char*, unsigned char const*, unsigned int, unsigned int)
0000000000cc0240 l     O .rodata	0000000000000034              QUICK_GROUP_MIN_MAX_SELECT::next_min_in_range()::__PRETTY_FUNCTION__
0000000000cc0280 l     O .rodata	0000000000000034              QUICK_GROUP_MIN_MAX_SELECT::next_max_in_range()::__PRETTY_FUNCTION__
0000000000870eba l     F .text	00000000000002b8              print_key(st_key_part*, unsigned char const*, unsigned int)
0000000000871a38 l     F .text	000000000000004e              __static_initialization_and_destruction_0(int, int)
0000000000871a86 l     F .text	0000000000000015              _GLOBAL__sub_I_opt_range.cc
0000000000000000 l    df *ABS*	0000000000000000              opt_sum.cc
0000000000cc03c0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc0700 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000cc0750 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000cc0730 l     O .rodata	000000000000001e              TABLE::set_keyread(bool)::__PRETTY_FUNCTION__
0000000000cc0780 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000cc04ec l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc04f0 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc04f4 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc04f8 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc04fc l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010631e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
000000000087438a l     F .text	0000000000000088              get_exact_record_count(TABLE_LIST*)
0000000000874412 l     F .text	0000000000000233              get_index_min_value(TABLE*, st_table_ref*, Item_field*, unsigned int, unsigned int)
0000000000cc06a0 l     O .rodata	0000000000000045              get_index_min_value(TABLE*, st_table_ref*, Item_field*, unsigned int, unsigned int)::__PRETTY_FUNCTION__
0000000000874645 l     F .text	00000000000000af              get_index_max_value(TABLE*, st_table_ref*, unsigned int)
0000000000875ede l     F .text	0000000000000499              find_key_for_maxmin(bool, st_table_ref*, Field*, Item*, unsigned int*, unsigned int*)
0000000000876377 l     F .text	0000000000000093              reckey_in_range(bool, st_table_ref*, Field*, Item*, unsigned int, unsigned int)
0000000000875486 l     F .text	0000000000000a58              matching_cond(bool, st_table_ref*, st_key*, st_key_part_info*, Item*, unsigned long*, unsigned int*, unsigned int*)
0000000000cc07c0 l     O .rodata	0000000000000048              find_key_for_maxmin(bool, st_table_ref*, Field*, Item*, unsigned int*, unsigned int*)::__PRETTY_FUNCTION__
000000000087640a l     F .text	00000000000001ef              maxmin_in_range(bool, Field*, Item*)
0000000000000000 l    df *ABS*	0000000000000000              pack.c
0000000000000000 l    df *ABS*	0000000000000000              procedure.cc
0000000000cc09a0 l     O .rodata	000000000000002b              max_my_decimal(my_decimal*, int, int)::__PRETTY_FUNCTION__
0000000000cc0890 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc0a20 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cc09e0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cc08e0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc08e4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc08e8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc08ec l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc08f0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063240 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010edd60 l     O .data	0000000000000010              sql_procs
0000000000000000 l    df *ABS*	0000000000000000              records.cc
0000000000cc0a60 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc0ce0 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000cc0d30 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000cc0d10 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000cc0d50 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000cc0b50 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc0b54 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc0b58 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc0b5c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc0b60 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010632a0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000877ecd l     F .text	0000000000000069              rr_index_last(READ_RECORD*)
0000000000877e64 l     F .text	0000000000000069              rr_index_first(READ_RECORD*)
00000000008781d0 l     F .text	0000000000000115              rr_unpack_from_tempfile(READ_RECORD*)
0000000000878074 l     F .text	000000000000015c              rr_from_tempfile(READ_RECORD*)
0000000000878435 l     F .text	0000000000000224              init_rr_cache(THD*, READ_RECORD*)
0000000000878659 l     F .text	00000000000004d1              rr_from_cache(READ_RECORD*)
0000000000877de1 l     F .text	0000000000000083              rr_quick(READ_RECORD*)
00000000008783b6 l     F .text	000000000000007f              rr_unpack_from_buffer(READ_RECORD*)
00000000008782e5 l     F .text	00000000000000d1              rr_from_pointers(READ_RECORD*)
0000000000877d44 l     F .text	000000000000009d              rr_handle_error(READ_RECORD*, int)
0000000000877f36 l     F .text	000000000000005a              rr_index(READ_RECORD*)
0000000000877f90 l     F .text	000000000000005a              rr_index_desc(READ_RECORD*)
0000000000878b2a l     F .text	00000000000001d1              rr_cmp(unsigned char*, unsigned char*)
0000000000000000 l    df *ABS*	0000000000000000              sp.cc
0000000000cc19b0 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000cc0e10 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc1b20 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000cc1b50 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000cc0ea4 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc0ea8 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc0eac l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc0eb0 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc0eb4 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063300 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cc1a20 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000001063360 l     O .data.rel.ro	00000000000003c0              proc_table_fields
0000000001063720 l     O .data.rel.ro	0000000000000010              proc_table_def
0000000001387d80 l     O .bss	0000000000000010              proc_table_intact
0000000000879373 l     F .text	000000000000019a              open_proc_table_for_update(THD*)
000000000087950d l     F .text	000000000000029d              db_find_routine_aux(THD*, int, sp_name*, TABLE*)
00000000008797aa l     F .text	0000000000000766              db_find_routine(THD*, int, sp_name*, sp_head**)
000000000087a234 l     F .text	0000000000000519              db_load_routine(THD*, int, sp_name*, sp_head**, unsigned long, char const*, char const*, char const*, st_sp_chistics&, char const*, long long, long long, Stored_program_creation_ctx*)
0000000000879f53 l     F .text	00000000000002a6              sp_compile(THD*, String*, unsigned long, Stored_program_creation_ctx*)
000000000087debf l     F .text	0000000000000327              create_string(THD*, String*, int, char const*, unsigned long, char const*, unsigned long, char const*, unsigned long, char const*, unsigned long, char const*, unsigned long, st_sp_chistics*, st_mysql_lex_string const*, st_mysql_lex_string const*, unsigned long)
000000000087a74d l     F .text	0000000000000227              sp_returns_type(THD*, String&, sp_head*)
0000000000cc19e0 l     O .rodata	000000000000002b              sp_create_routine(THD*, int, sp_head*)::__PRETTY_FUNCTION__
0000000000cc1a60 l     O .rodata	0000000000000029              sp_drop_routine(THD*, int, sp_name*)::__PRETTY_FUNCTION__
0000000000cc1aa0 l     O .rodata	000000000000003c              sp_update_routine(THD*, int, sp_name*, st_sp_chistics*)::__PRETTY_FUNCTION__
0000000000cc1ae0 l     O .rodata	0000000000000023              lock_db_routines(THD*, char*)::__PRETTY_FUNCTION__
0000000000cc1b80 l     O .rodata	0000000000000031              sp_show_create_routine(THD*, int, sp_name*)::__PRETTY_FUNCTION__
0000000000cc1bc0 l     O .rodata	0000000000000040              sp_find_routine(THD*, int, sp_name*, sp_cache**, bool)::__PRETTY_FUNCTION__
0000000000cc1c00 l     O .rodata	0000000000000042              sp_cache_routine(THD*, Sroutine_hash_entry*, bool, sp_head**)::__PRETTY_FUNCTION__
0000000000cc1c60 l     O .rodata	000000000000003b              sp_cache_routine(THD*, int, sp_name*, bool, sp_head**)::__PRETTY_FUNCTION__
000000000087e5f2 l     F .text	0000000000000049              __static_initialization_and_destruction_0(int, int)
000000000087e63b l     F .text	0000000000000015              _GLOBAL__sub_I_sp.cc
0000000000000000 l    df *ABS*	0000000000000000              sp_head.cc
000000000087eb84 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000087ec9b l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000cc2fa0 l     O .rodata	000000000000002f              base_ilist::move_elements_to(base_ilist*)::__PRETTY_FUNCTION__
000000000087ed18 l     F .text	0000000000000023              my_atomic_add64(long long volatile*, long long)
0000000000cc1cf8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc2ea0 l     O .rodata	000000000000002e              Diagnostics_area::message() const::__PRETTY_FUNCTION__
0000000000cc2f20 l     O .rodata	0000000000000029              Diagnostics_area::sql_errno() const::__PRETTY_FUNCTION__
0000000000cc2ee0 l     O .rodata	0000000000000033              Diagnostics_area::get_sqlstate() const::__PRETTY_FUNCTION__
0000000000cc2e60 l     O .rodata	0000000000000037              CSET_STRING::CSET_STRING(char*, unsigned long, charset_info_st*)::__PRETTY_FUNCTION__
0000000000cc3100 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cc30c0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cc3180 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000cc1e28 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc1e2c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc1e30 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc1e34 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc1e38 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063740 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cc3020 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000cc3280 l     O .rodata	000000000000003a              sp_instr_jump::backpatch(unsigned int, sp_pcontext*)::__PRETTY_FUNCTION__
0000000000cc32c0 l     O .rodata	0000000000000040              sp_instr_hpush_jump::backpatch(unsigned int, sp_pcontext*)::__PRETTY_FUNCTION__
000000000087ed3b l     F .text	0000000000000057              reset_start_time_for_sp(THD*)
000000000087ee40 l     F .text	000000000000027d              sp_get_item_value(THD*, Item*, String*)
0000000000cc2dc0 l     O .rodata	0000000000000025              check_routine_name(st_mysql_lex_string*)::__PRETTY_FUNCTION__
0000000000cc2e00 l     O .rodata	000000000000002b              sp_head::init_sp_name(THD*, sp_name*)::__PRETTY_FUNCTION__
00000000008802a9 l     F .text	000000000000042d              create_typelib(st_mem_root*, Create_field*, List<String>*)
0000000000cc2e30 l     O .rodata	000000000000001c              sp_head::~sp_head()::__PRETTY_FUNCTION__
0000000000880ae6 l     F .text	0000000000000723              subst_spvars(THD*, sp_instr*, st_mysql_lex_string*)
000000000088126c l     F .text	00000000000001b6              find_handler_after_execution(THD*, sp_rcontext*)
0000000000cc2f60 l     O .rodata	0000000000000022              sp_head::execute(THD*, bool)::__PRETTY_FUNCTION__
0000000000cc2fe0 l     O .rodata	000000000000003b              sp_head::execute_function(THD*, Item**, unsigned int, Field*)::__PRETTY_FUNCTION__
0000000000cc3060 l     O .rodata	0000000000000012              sp_head::execute_procedure(THD*, List<Item>*)::__FUNCTION__
0000000000cc3080 l     O .rodata	0000000000000033              sp_head::execute_procedure(THD*, List<Item>*)::__PRETTY_FUNCTION__
0000000000cc3140 l     O .rodata	000000000000002d              sp_head::show_create_routine(THD*, int)::__PRETTY_FUNCTION__
0000000000cc31c0 l     O .rodata	0000000000000049              sp_lex_keeper::reset_lex_and_exec_core(THD*, unsigned int*, bool, sp_instr*)::__PRETTY_FUNCTION__
0000000000cc3210 l     O .rodata	0000000000000018              sp_lex_keeper::reset_lex_and_exec_core(THD*, unsigned int*, bool, sp_instr*)::__FUNCTION__
0000000000cc3240 l     O .rodata	000000000000002d              sp_instr::exec_core(THD*, unsigned int*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sp_pcontext.cc
0000000000cc3300 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc3308 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc330c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc3310 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc3314 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc3318 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010637a0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000000000 l    df *ABS*	0000000000000000              sp_rcontext.cc
0000000000cc3360 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc3368 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc336c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc3370 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc3374 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc3378 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063800 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cc3760 l     O .rodata	0000000000000027              sp_rcontext::init_var_table(THD*)::__PRETTY_FUNCTION__
0000000000cc37a0 l     O .rodata	0000000000000031              sp_rcontext::set_return_value(THD*, Item**)::__PRETTY_FUNCTION__
0000000000cc37e0 l     O .rodata	0000000000000066              sp_rcontext::find_handler(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*)::__PRETTY_FUNCTION__
0000000000cc3860 l     O .rodata	000000000000003f              sp_rcontext::push_cursor(sp_lex_keeper*, sp_instr_cpush*)::__PRETTY_FUNCTION__
0000000000cc38a0 l     O .rodata	0000000000000024              sp_rcontext::pop_cursors(unsigned int)::__PRETTY_FUNCTION__
0000000000cc38e0 l     O .rodata	0000000000000039              sp_rcontext::push_handler(sp_cond_type*, unsigned int, int)::__PRETTY_FUNCTION__
0000000000cc3920 l     O .rodata	0000000000000025              sp_rcontext::pop_handlers(unsigned int)::__PRETTY_FUNCTION__
0000000000cc3960 l     O .rodata	0000000000000024              sp_rcontext::push_hstack(unsigned int)::__PRETTY_FUNCTION__
0000000000cc3990 l     O .rodata	000000000000001f              sp_rcontext::pop_hstack()::__PRETTY_FUNCTION__
0000000000cc39c0 l     O .rodata	0000000000000057              sp_rcontext::activate_handler(THD*, unsigned int*, sp_instr*, Query_arena*, Query_arena*)::__PRETTY_FUNCTION__
0000000000cc3a20 l     O .rodata	0000000000000021              sp_rcontext::exit_handler()::__PRETTY_FUNCTION__
0000000000cc3a60 l     O .rodata	000000000000003e              Select_fetch_into_spvars::send_data(List<Item>&)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              spatial.cc
0000000000cc3aa0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc3aa4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc3aa8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc3aac l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc3ab0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010edd70 l     O .data	0000000000000008              ci_collection_end
000000000088d027 l     F .text	0000000000000033              create_point(char*)
000000000088d05a l     F .text	0000000000000033              create_linestring(char*)
000000000088d08d l     F .text	0000000000000033              create_polygon(char*)
000000000088d0c0 l     F .text	0000000000000033              create_multipoint(char*)
000000000088d0f3 l     F .text	0000000000000033              create_multipolygon(char*)
000000000088d126 l     F .text	0000000000000033              create_multilinestring(char*)
000000000088d159 l     F .text	0000000000000033              create_geometrycollection(char*)
0000000001387e00 l     O .bss	0000000000000020              point_class
0000000001387e20 l     O .bss	0000000000000020              linestring_class
0000000001387e40 l     O .bss	0000000000000020              polygon_class
0000000001387e60 l     O .bss	0000000000000020              multipoint_class
0000000001387e80 l     O .bss	0000000000000020              multilinestring_class
0000000001387ea0 l     O .bss	0000000000000020              multipolygon_class
0000000001387ec0 l     O .bss	0000000000000020              geometrycollection_class
000000000088d18c l     F .text	0000000000000033              get_point(double*, double*, char const*)
000000000088d531 l     F .text	00000000000000c0              wkb_get_double(char const*, Geometry::wkbByteOrder)
000000000088d5f1 l     F .text	00000000000000de              wkb_get_uint(char const*, Geometry::wkbByteOrder)
0000000000cc3be0 l     O .rodata	0000000000000035              Gis_polygon::centroid_xy(double*, double*) const::__PRETTY_FUNCTION__
000000000089307f l     F .text	0000000000000141              __static_initialization_and_destruction_0(int, int)
00000000008931c0 l     F .text	0000000000000015              _GLOBAL__sub_I_spatial.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_analyse.cc
0000000000cc40e0 l     O .rodata	0000000000000020              my_decimal::sanity_check()::__PRETTY_FUNCTION__
0000000000cc40a0 l     O .rodata	000000000000002b              max_my_decimal(my_decimal*, int, int)::__PRETTY_FUNCTION__
0000000000cc3cf8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc4140 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cc4100 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cc3d48 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc3d4c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc3d50 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc3d54 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc3d58 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063860 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000000000 l    df *ABS*	0000000000000000              sql_crypt.cc
0000000000000000 l    df *ABS*	0000000000000000              sql_cursor.cc
0000000000cc4220 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc4430 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000cc4450 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000cc42c8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc42cc l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc42d0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc42d4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc42d8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010638c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cc43e0 l     O .rodata	0000000000000045              Materialized_cursor::send_result_set_metadata(THD*, List<Item>&)::__PRETTY_FUNCTION__
0000000000cc4480 l     O .rodata	000000000000004d              Select_materialize::send_result_set_metadata(List<Item>&, unsigned int)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_delete.cc
0000000000cc44e0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc44e8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc44ec l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc44f0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc44f4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc44f8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063920 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cc4920 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000cc48b0 l     O .rodata	000000000000000d              mysql_delete(THD*, TABLE_LIST*, Item*, SQL_I_List<st_order>*, unsigned long long, unsigned long long)::__FUNCTION__
0000000000cc48c0 l     O .rodata	0000000000000057              mysql_delete(THD*, TABLE_LIST*, Item*, SQL_I_List<st_order>*, unsigned long long, unsigned long long)::__PRETTY_FUNCTION__
0000000000cc4960 l     O .rodata	0000000000000025              mysql_multi_delete_prepare(THD*)::__PRETTY_FUNCTION__
0000000000cc4988 l     O .rodata	0000000000000008              multi_delete::prepare(List<Item>&, st_select_lex_unit*)::__FUNCTION__
0000000000cc49a0 l     O .rodata	0000000000000032              multi_delete::send_data(List<Item>&)::__PRETTY_FUNCTION__
0000000000cc49e0 l     O .rodata	000000000000002e              multi_delete::abort_result_set()::__PRETTY_FUNCTION__
0000000000cc4a10 l     O .rodata	000000000000001f              multi_delete::do_deletes()::__PRETTY_FUNCTION__
0000000000cc4a30 l     O .rodata	0000000000000009              multi_delete::send_eof()::__FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_do.cc
0000000000cc4a40 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc4a48 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc4a4c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc4a50 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc4a54 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc4a58 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063980 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000000000 l    df *ABS*	0000000000000000              sql_help.cc
000000000089f449 l     F .text	0000000000000077              bitmap_set_bit
0000000000cc4f20 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
0000000000cc5080 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
0000000000cc4c28 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc4f60 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000cc4f90 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
000000000089f4c0 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000cc5040 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cc4fc0 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cc5000 l     O .rodata	000000000000002e              Item_string::val_str(String*)::__PRETTY_FUNCTION__
0000000000cc4d14 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc4d18 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc4d1c l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc4d20 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc4d24 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010639e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010edd80 l     O .data	0000000000000120              init_used_fields
000000000089f4f0 l     F .text	00000000000001be              init_fields(THD*, TABLE_LIST*, st_find_field*, unsigned int)
0000000000000000 l    df *ABS*	0000000000000000              sql_load.cc
00000000008a1a2a l     F .text	0000000000000077              bitmap_set_bit
0000000000cc57e0 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
00000000008a1aa1 l     F .text	0000000000000067              bitmap_is_set
0000000000cc57a0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cc5860 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
00000000008a1b08 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
00000000008a1c32 l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
0000000000cc5188 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc5190 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc5194 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc5198 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc519c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc51a0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063a40 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cc5820 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000cc5710 l     O .rodata	000000000000000b              mysql_load(THD*, sql_exchange*, TABLE_LIST*, List<Item>&, List<Item>&, List<Item>&, enum_duplicates, bool, bool)::__FUNCTION__
00000000008a5041 l     F .text	0000000000000895              read_xml_field(THD*, st_copy_info&, TABLE_LIST*, List<Item>&, List<Item>&, List<Item>&, READ_INFO&, String&, unsigned long, bool)
00000000008a3ef1 l     F .text	0000000000000652              read_fixed_length(THD*, st_copy_info&, TABLE_LIST*, List<Item>&, List<Item>&, List<Item>&, READ_INFO&, unsigned long, bool)
00000000008a4543 l     F .text	0000000000000afe              read_sep_field(THD*, st_copy_info&, TABLE_LIST*, List<Item>&, List<Item>&, List<Item>&, READ_INFO&, String&, unsigned long, bool)
00000000008a3732 l     F .text	00000000000007bf              write_execute_load_query_log_event(THD*, sql_exchange*, char const*, char const*, bool, enum_duplicates, bool, bool, int)
0000000000cc5720 l     O .rodata	0000000000000075              mysql_load(THD*, sql_exchange*, TABLE_LIST*, List<Item>&, List<Item>&, List<Item>&, enum_duplicates, bool, bool)::__PRETTY_FUNCTION__
00000000008a7208 l     F .text	00000000000000d0              my_xml_entity_to_char(char const*, unsigned int)
00000000008a72d8 l     F .text	0000000000000025              my_tospace(int)
0000000000000000 l    df *ABS*	0000000000000000              sql_partition.cc
00000000008a932d l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008a9444 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000cc7bc0 l     O .rodata	0000000000000029              base_list_iterator::replace(void*)::__PRETTY_FUNCTION__
00000000008a94c1 l     F .text	0000000000000077              bitmap_set_bit
0000000000cc76a0 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
00000000008a9538 l     F .text	0000000000000067              bitmap_is_set
0000000000cc7860 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
00000000008a959f l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
00000000008a969f l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
00000000008a981b l     F .text	0000000000000174              inline_mysql_file_write(char const*, unsigned int, int, unsigned char const*, unsigned long, int)
00000000008a998f l     F .text	000000000000011c              inline_mysql_file_seek(char const*, unsigned int, int, unsigned long long, int, int)
0000000000cc5928 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000008a9aab l     F .text	0000000000000031              ha_resolve_storage_engine_name(handlerton const*)
00000000008a9adc l     F .text	0000000000000058              init_single_partition_iterator(unsigned int, st_partition_iter*)
0000000000cc5938 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc593c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc5940 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc5944 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc5948 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063aa0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010edea0 l     O .data	0000000000000008              part_str
00000000010edea8 l     O .data	0000000000000008              sub_str
00000000010edeb0 l     O .data	0000000000000008              by_str
00000000010edeb8 l     O .data	0000000000000008              space_str
00000000010edec0 l     O .data	0000000000000008              equal_str
00000000010edec8 l     O .data	0000000000000008              end_paren_str
00000000010eded0 l     O .data	0000000000000008              begin_paren_str
00000000010eded8 l     O .data	0000000000000008              comma_str
0000000000cc7580 l     O .rodata	000000000000004c              partition_default_handling(TABLE*, partition_info*, bool, char const*)::__PRETTY_FUNCTION__
0000000000cc75e0 l     O .rodata	000000000000006b              get_parts_for_update(unsigned char const*, unsigned char*, unsigned char const*, partition_info*, unsigned int*, unsigned int*, long long*)::__PRETTY_FUNCTION__
00000000008aa426 l     F .text	000000000000044a              set_up_field_array(TABLE*, bool)
0000000000cc7660 l     O .rodata	0000000000000026              set_up_field_array(TABLE*, bool)::__PRETTY_FUNCTION__
00000000008aa870 l     F .text	00000000000002dd              create_full_part_field_array(THD*, TABLE*, partition_info*)
00000000008aab4d l     F .text	0000000000000055              clear_indicator_in_key_fields(st_key*)
00000000008aaba2 l     F .text	0000000000000055              set_indicator_in_key_fields(st_key*)
00000000008aabf7 l     F .text	00000000000000e0              check_fields_in_PF(Field**, bool*, bool*)
00000000008aacd7 l     F .text	000000000000009b              clear_field_flag(TABLE*)
00000000008aad72 l     F .text	0000000000000287              handle_list_of_fields(List_iterator<char>, TABLE*, partition_info*, bool)
00000000008ab0d3 l     F .text	00000000000001fa              init_lex_with_single_table(THD*, TABLE*, LEX*)
00000000008ab2cd l     F .text	0000000000000055              end_lex_with_single_table(THD*, TABLE*, LEX*)
00000000008ab322 l     F .text	00000000000004a3              fix_fields_part_func(THD*, Item*, TABLE*, bool, bool)
00000000008ab7c5 l     F .text	0000000000000130              check_primary_key(TABLE*)
00000000008ab8f5 l     F .text	0000000000000179              check_unique_keys(TABLE*)
00000000008abad0 l     F .text	0000000000000149              set_up_partition_bitmap(THD*, partition_info*)
00000000008abc19 l     F .text	000000000000021e              set_up_partition_key_maps(TABLE*, partition_info*)
00000000008abe37 l     F .text	0000000000000448              set_up_partition_func_pointers(partition_info*)
0000000000cc76e0 l     O .rodata	0000000000000035              set_up_partition_func_pointers(partition_info*)::__PRETTY_FUNCTION__
00000000008af871 l     F .text	00000000000000d8              get_part_id_charset_func_part(partition_info*, unsigned int*, long long*)
00000000008af949 l     F .text	00000000000000d3              get_part_id_charset_func_subpart(partition_info*, unsigned int*)
00000000008ac2b2 l     F .text	0000000000000045              get_part_id_from_linear_hash(long long, unsigned int, unsigned int)
0000000000cc7720 l     O .rodata	000000000000002c              fix_partition_func(THD*, TABLE*, bool)::__PRETTY_FUNCTION__
00000000008b80fa l     F .text	0000000000000166              set_up_range_analysis_info(partition_info*)
00000000008acd39 l     F .text	000000000000005b              add_write(int, char const*, unsigned int)
00000000008acd94 l     F .text	0000000000000043              add_string_object(int, String*)
00000000008acdd7 l     F .text	0000000000000030              add_string(int, char const*)
00000000008ace07 l     F .text	0000000000000028              add_string_len(int, char const*, unsigned int)
00000000008ace2f l     F .text	0000000000000021              add_space(int)
00000000008ace50 l     F .text	0000000000000021              add_comma(int)
00000000008ace71 l     F .text	0000000000000021              add_equal(int)
00000000008ace92 l     F .text	0000000000000021              add_end_parenthesis(int)
00000000008aceb3 l     F .text	0000000000000021              add_begin_parenthesis(int)
00000000008aced4 l     F .text	0000000000000035              add_part_key_word(int, char const*)
00000000008acf09 l     F .text	0000000000000065              add_partition(int)
00000000008acf6e l     F .text	0000000000000035              add_subpartition(int)
00000000008acfa3 l     F .text	0000000000000077              add_partition_by(int)
00000000008ad01a l     F .text	0000000000000035              add_subpartition_by(int)
00000000008ad04f l     F .text	0000000000000183              add_part_field_list(int, List<char>)
00000000008ad1d2 l     F .text	00000000000000e9              add_name_string(int, char const*)
00000000008ad2bb l     F .text	0000000000000058              add_int(int, long long)
00000000008ad313 l     F .text	000000000000005f              add_uint(int, unsigned long long)
00000000008ad372 l     F .text	00000000000000e2              add_quoted_string(int, char const*)
00000000008ad454 l     F .text	0000000000000096              add_keyword_string(int, char const*, bool, char const*)
00000000008ad4ea l     F .text	0000000000000075              add_keyword_int(int, char const*, long long)
00000000008ad55f l     F .text	0000000000000076              add_engine(int, handlerton*)
00000000008ad5d5 l     F .text	00000000000001ae              add_partition_options(int, partition_element*)
00000000008ad783 l     F .text	000000000000011a              check_part_field(enum_field_types, char const*, Item_result*, bool*)
00000000008ad89d l     F .text	00000000000000f1              get_sql_field(char*, Alter_info*)
00000000008ad98e l     F .text	0000000000000639              add_column_list_values(int, partition_info*, p_elem_val*, st_ha_create_information*, Alter_info*)
0000000000cc7760 l     O .rodata	0000000000000062              add_column_list_values(int, partition_info*, p_elem_val*, st_ha_create_information*, Alter_info*)::__PRETTY_FUNCTION__
00000000008adfc7 l     F .text	00000000000002e3              add_partition_values(int, partition_info*, partition_element*, st_ha_create_information*, Alter_info*)
00000000008ae2aa l     F .text	0000000000000137              add_key_with_algorithm(int, partition_info*, char const*)
0000000000cc77e0 l     O .rodata	000000000000006f              generate_partition_syntax(partition_info*, unsigned int*, bool, bool, st_ha_create_information*, Alter_info*, char const*)::__PRETTY_FUNCTION__
00000000008af0ae l     F .text	000000000000006f              part_val_int(Item*, long long*)
00000000008af11d l     F .text	0000000000000254              calculate_key_value(Field**)
0000000000cc78a0 l     O .rodata	0000000000000024              calculate_key_value(Field**)::__PRETTY_FUNCTION__
00000000008af371 l     F .text	000000000000001d              get_part_id_for_sub(unsigned int, unsigned int, unsigned int)
00000000008af38e l     F .text	00000000000000d5              get_part_id_hash(unsigned int, Item*, unsigned int*, long long*)
00000000008af463 l     F .text	00000000000000d3              get_part_id_linear_hash(partition_info*, unsigned int, Item*, unsigned int*, long long*)
00000000008af536 l     F .text	000000000000008f              get_part_id_key(Field**, unsigned int, long long*)
00000000008af5c5 l     F .text	00000000000000a3              get_part_id_linear_key(partition_info*, Field**, unsigned int, long long*)
00000000008af668 l     F .text	00000000000001c5              copy_to_part_field_buffers(Field**, unsigned char**, unsigned char**)
00000000008af82d l     F .text	0000000000000044              restore_part_field_pointers(Field**, unsigned char**)
00000000008b834e l     F .text	00000000000000dd              cmp_rec_and_tuple(p_column_list_val*, unsigned int)
00000000008b842b l     F .text	00000000000000ca              cmp_rec_and_tuple_prune(p_column_list_val*, unsigned int, bool, bool)
0000000000cc78e0 l     O .rodata	0000000000000054              get_partition_id_cols_list_for_endpoint(partition_info*, bool, bool, unsigned int)::__PRETTY_FUNCTION__
0000000000cc7940 l     O .rodata	0000000000000044              get_list_array_idx_for_endpoint(partition_info*, bool, bool)::__PRETTY_FUNCTION__
00000000008b05cb l     F .text	0000000000000081              get_partition_id_range_for_endpoint_charset(partition_info*, bool, bool)
0000000000cc79a0 l     O .rodata	0000000000000048              get_partition_id_range_for_endpoint(partition_info*, bool, bool)::__PRETTY_FUNCTION__
00000000008b0c8b l     F .text	0000000000000124              set_PF_fields_in_key(st_key*, unsigned int)
00000000008b0daf l     F .text	0000000000000095              check_part_func_bound(Field**)
00000000008b0e44 l     F .text	0000000000000135              get_sub_part_id_from_key(TABLE const*, unsigned char*, st_key*, st_key_range const*, unsigned int*)
0000000000cc7a00 l     O .rodata	0000000000000055              get_partition_set(TABLE const*, unsigned char*, unsigned int, st_key_range const*, part_id_range*)::__PRETTY_FUNCTION__
0000000000cc7a60 l     O .rodata	0000000000000051              mysql_unpack_partition(THD*, char*, unsigned int, TABLE*, bool, handlerton*, bool*)::__PRETTY_FUNCTION__
00000000008b1eb0 l     F .text	0000000000000101              set_engine_all_partitions(partition_info*, handlerton*)
00000000008b1fb1 l     F .text	000000000000014f              fast_end_partition(THD*, unsigned long long, unsigned long long, TABLE_LIST*)
00000000008b2100 l     F .text	000000000000023d              check_native_partitioned(st_ha_create_information*, bool*, partition_info*, THD*)
0000000000cc7ac0 l     O .rodata	000000000000004d              check_native_partitioned(st_ha_create_information*, bool*, partition_info*, THD*)::__PRETTY_FUNCTION__
0000000000cc7b20 l     O .rodata	0000000000000085              prep_alter_part_table(THD*, TABLE*, Alter_info*, st_ha_create_information*, handlerton*, bool*, char*, char const*, char const*, TABLE**)::__PRETTY_FUNCTION__
00000000008b45ff l     F .text	0000000000000248              mysql_change_partitions(st_lock_param_type*)
00000000008b4847 l     F .text	000000000000013a              mysql_rename_partitions(st_lock_param_type*)
00000000008b4981 l     F .text	0000000000000206              mysql_drop_partitions(st_lock_param_type*)
00000000008b4b87 l     F .text	0000000000000031              insert_part_info_log_entry_list(partition_info*, st_ddl_log_memory_entry*)
00000000008b4bb8 l     F .text	0000000000000083              release_part_info_log_entries(st_ddl_log_memory_entry*)
00000000008b4c3b l     F .text	0000000000000109              write_log_replace_delete_frm(st_lock_param_type*, unsigned int, char const*, char const*, bool)
00000000008b4d44 l     F .text	00000000000004da              write_log_changed_partitions(st_lock_param_type*, unsigned int*, char const*)
00000000008b521e l     F .text	0000000000000488              write_log_dropped_partitions(st_lock_param_type*, unsigned int*, char const*, bool)
00000000008b56a6 l     F .text	000000000000002a              set_part_info_exec_log_entry(partition_info*, st_ddl_log_memory_entry*)
00000000008b56d0 l     F .text	00000000000001d8              write_log_drop_shadow_frm(st_lock_param_type*)
00000000008b58a8 l     F .text	0000000000000262              write_log_rename_frm(st_lock_param_type*)
00000000008b5b0a l     F .text	000000000000029a              write_log_drop_partition(st_lock_param_type*)
00000000008b5da4 l     F .text	0000000000000276              write_log_add_change_partition(st_lock_param_type*)
0000000000cc7c00 l     O .rodata	0000000000000041              write_log_add_change_partition(st_lock_param_type*)::__PRETTY_FUNCTION__
00000000008b601a l     F .text	00000000000002de              write_log_final_change_partition(st_lock_param_type*)
00000000008b62f8 l     F .text	000000000000013a              write_log_completed(st_lock_param_type*, bool)
0000000000cc7c60 l     O .rodata	000000000000003c              write_log_completed(st_lock_param_type*, bool)::__PRETTY_FUNCTION__
00000000008b6432 l     F .text	0000000000000089              release_log_entries(partition_info*)
00000000008b64bb l     F .text	00000000000000c7              alter_partition_lock_handling(st_lock_param_type*)
00000000008b6582 l     F .text	00000000000000f8              alter_close_tables(st_lock_param_type*, bool)
00000000008b6949 l     F .text	0000000000000035              downgrade_mdl_if_lock_tables_mode(THD*, MDL_ticket*, enum_mdl_type)
0000000000cc7ca0 l     O .rodata	0000000000000075              fast_alter_partition_table(THD*, TABLE*, Alter_info*, st_ha_create_information*, TABLE_LIST*, char*, char const*, TABLE*)::__PRETTY_FUNCTION__
0000000000cc7d20 l     O .rodata	0000000000000055              get_partition_id_cols_range_for_endpoint(partition_info*, bool, bool, unsigned int)::__PRETTY_FUNCTION__
0000000000cc7d80 l     O .rodata	0000000000000083              get_part_iter_for_interval_cols_via_map(partition_info*, bool, unsigned int*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, st_partition_iter*)::__PRETTY_FUNCTION__
0000000000cc7e20 l     O .rodata	0000000000000082              get_part_iter_for_interval_via_mapping(partition_info*, bool, unsigned int*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, st_partition_iter*)::__PRETTY_FUNCTION__
00000000008b9902 l     F .text	00000000000000d6              get_next_subpartition_via_walking(st_partition_iter*)
00000000008b97e0 l     F .text	0000000000000122              get_next_partition_via_walking(st_partition_iter*)
0000000000000000 l    df *ABS*	0000000000000000              uniques.cc
0000000000cc7ec0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc7ec8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc7ecc l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc7ed0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc7ed4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc7ed8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063b80 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000008ba1de l     F .text	000000000000015c              get_merge_buffers_cost(unsigned int*, unsigned int, unsigned int*, unsigned int*)
00000000008ba33a l     F .text	000000000000017c              get_merge_many_buffs_cost(unsigned int*, unsigned int, unsigned int, unsigned int, int)
00000000008ba9f0 l     F .text	0000000000000040              buffpek_compare
00000000008baa30 l     F .text	00000000000004e8              merge_walk(unsigned char*, unsigned long, unsigned int, st_buffpek*, st_buffpek*, int (*)(void*, unsigned int, void*), void*, int (*)(void*, void const*, void const*), void*, st_io_cache*)
0000000000cc7fe0 l     O .rodata	0000000000000070              merge_walk(unsigned char*, unsigned long, unsigned int, st_buffpek*, st_buffpek*, int (*)(void*, unsigned int, void*), void*, int (*)(void*, void const*, void const*), void*, st_io_cache*)::__PRETTY_FUNCTION__
0000000000cc8050 l     O .rodata	0000000000000019              Unique::get(TABLE*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              item_xmlfunc.cc
0000000000cc80c0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000008bb668 l     F .text	0000000000000030              char_to_byte_length_safe(unsigned int, unsigned int)
0000000000cc88e0 l     O .rodata	0000000000000035              Item::val_int_endpoint(bool, bool*)::__PRETTY_FUNCTION__
0000000000cc8860 l     O .rodata	000000000000002a              Item::is_outer_field() const::__PRETTY_FUNCTION__
0000000000cc8960 l     O .rodata	0000000000000025              Item_int::val_int()::__PRETTY_FUNCTION__
0000000000cc89a0 l     O .rodata	0000000000000024              Item_int::val_real()::__PRETTY_FUNCTION__
0000000000cc8118 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc811c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc8120 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc8124 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc8128 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000000cc88a0 l     O .rodata	0000000000000025              Item_func::has_timestamp_args()::__PRETTY_FUNCTION__
0000000000cc89e0 l     O .rodata	000000000000002b              Item_real_func::val_int()::__PRETTY_FUNCTION__
0000000001063be0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000008bc59c l     F .text	0000000000000073              nodeset2bool(my_xpath_st*, Item*)
00000000008bc60f l     F .text	000000000000017e              eq_func(int, Item*, Item*)
00000000008bc78d l     F .text	000000000000017e              eq_func_reverse(int, Item*, Item*)
00000000008bc90b l     F .text	000000000000023d              create_comparator(my_xpath_st*, int, my_xpath_lex_st*, Item*, Item*)
00000000008bcb48 l     F .text	0000000000000349              nametestfunc(my_xpath_st*, int, Item*, char const*, unsigned int)
0000000000cc8920 l     O .rodata	000000000000003d              nametestfunc(my_xpath_st*, int, Item*, char const*, unsigned int)::__PRETTY_FUNCTION__
00000000010edee0 l     O .data	0000000000000080              simpletok
00000000010edf60 l     O .data	00000000000000a0              my_keyword_names
00000000010ee000 l     O .data	00000000000001c0              my_axis_names
00000000010ee1c0 l     O .data	00000000000000a0              my_nodetype_names
00000000008bce91 l     F .text	0000000000000090              my_xpath_keyword(my_xpath_st*, my_xpath_keyword_names_st*, char const*, char const*)
00000000008bcf21 l     F .text	0000000000000042              create_func_true(my_xpath_st*, Item**, unsigned int)
00000000008bcf63 l     F .text	0000000000000042              create_func_false(my_xpath_st*, Item**, unsigned int)
00000000008bcfa5 l     F .text	000000000000005d              create_func_not(my_xpath_st*, Item**, unsigned int)
00000000008bd002 l     F .text	0000000000000047              create_func_ceiling(my_xpath_st*, Item**, unsigned int)
00000000008bd049 l     F .text	0000000000000047              create_func_floor(my_xpath_st*, Item**, unsigned int)
00000000008bd090 l     F .text	0000000000000052              create_func_bool(my_xpath_st*, Item**, unsigned int)
00000000008bd0e2 l     F .text	0000000000000047              create_func_number(my_xpath_st*, Item**, unsigned int)
00000000008bd129 l     F .text	000000000000006d              create_func_string_length(my_xpath_st*, Item**, unsigned int)
00000000008bd196 l     F .text	0000000000000089              create_func_round(my_xpath_st*, Item**, unsigned int)
00000000008bd21f l     F .text	0000000000000067              create_func_last(my_xpath_st*, Item**, unsigned int)
00000000008bd286 l     F .text	0000000000000067              create_func_position(my_xpath_st*, Item**, unsigned int)
00000000008bd2ed l     F .text	000000000000008c              create_func_contains(my_xpath_st*, Item**, unsigned int)
00000000008bd379 l     F .text	0000000000000052              create_func_concat(my_xpath_st*, Item**, unsigned int)
00000000008bd3cb l     F .text	000000000000009c              create_func_substr(my_xpath_st*, Item**, unsigned int)
00000000008bd467 l     F .text	0000000000000080              create_func_count(my_xpath_st*, Item**, unsigned int)
00000000008bd4e7 l     F .text	0000000000000080              create_func_sum(my_xpath_st*, Item**, unsigned int)
00000000010ee260 l     O .data	0000000000000078              my_func_names3
00000000010ee2e0 l     O .data	00000000000000c8              my_func_names4
00000000010ee3c0 l     O .data	00000000000000c8              my_func_names5
00000000010ee4a0 l     O .data	00000000000000a0              my_func_names6
00000000010ee540 l     O .data	0000000000000258              my_func_names
00000000008bd65d l     F .text	000000000000002b              my_xpath_lex_init(my_xpath_lex_st*, char const*, char const*)
00000000008bd688 l     F .text	0000000000000025              my_xpath_init(my_xpath_st*)
00000000008bd6ad l     F .text	0000000000000024              my_xdigit(int)
00000000008bd6d1 l     F .text	00000000000003bb              my_xpath_lex_scan(my_xpath_st*, my_xpath_lex_st*, char const*, char const*)
00000000008bda8c l     F .text	000000000000007b              my_xpath_parse_term(my_xpath_st*, int)
00000000008bdb07 l     F .text	0000000000000033              my_xpath_parse_AxisName(my_xpath_st*)
00000000008bdb3a l     F .text	0000000000000088              my_xpath_parse_LocationPath(my_xpath_st*)
00000000008bdca5 l     F .text	00000000000000f3              my_xpath_parse_RelativeLocationPath(my_xpath_st*)
00000000008bdbc2 l     F .text	00000000000000e3              my_xpath_parse_AbsoluteLocationPath(my_xpath_st*)
00000000008bdfab l     F .text	000000000000003d              my_xpath_parse_Step(my_xpath_st*)
00000000008bdd98 l     F .text	0000000000000213              my_xpath_parse_AxisSpecifier_NodeTest_opt_Predicate_list(my_xpath_st*)
00000000008be084 l     F .text	000000000000003d              my_xpath_parse_AxisSpecifier(my_xpath_st*)
00000000008be11d l     F .text	000000000000003d              my_xpath_parse_NodeTest(my_xpath_st*)
00000000008be82b l     F .text	00000000000000eb              my_xpath_parse_OrExpr(my_xpath_st*)
00000000008be15a l     F .text	00000000000000a3              my_xpath_parse_AbbreviatedStep(my_xpath_st*)
00000000008bdfe8 l     F .text	0000000000000045              my_xpath_parse_AbbreviatedAxisSpecifier(my_xpath_st*)
00000000008be02d l     F .text	0000000000000057              my_xpath_parse_AxisName_colon_colon(my_xpath_st*)
00000000008be0c1 l     F .text	000000000000005c              my_xpath_parse_NodeTest_lp_rp(my_xpath_st*)
00000000008bf80d l     F .text	000000000000003d              my_xpath_parse_NameTest(my_xpath_st*)
00000000008be1fd l     F .text	0000000000000057              my_xpath_parse_lp_Expr_rp(my_xpath_st*)
00000000008be254 l     F .text	00000000000000a8              my_xpath_parse_PrimaryExpr_literal(my_xpath_st*)
00000000008be2fc l     F .text	000000000000006d              my_xpath_parse_PrimaryExpr(my_xpath_st*)
00000000008bf410 l     F .text	00000000000002bc              my_xpath_parse_VariableReference(my_xpath_st*)
00000000008bf1f6 l     F .text	0000000000000113              my_xpath_parse_Number(my_xpath_st*)
00000000008be369 l     F .text	00000000000001cb              my_xpath_parse_FunctionCall(my_xpath_st*)
00000000008be534 l     F .text	000000000000012f              my_xpath_parse_UnionExpr(my_xpath_st*)
00000000008be7d4 l     F .text	000000000000003d              my_xpath_parse_PathExpr(my_xpath_st*)
00000000008be663 l     F .text	0000000000000171              my_xpath_parse_FilterExpr_opt_slashes_RelativeLocationPath(my_xpath_st*)
00000000008be811 l     F .text	000000000000001a              my_xpath_parse_FilterExpr(my_xpath_st*)
00000000008be916 l     F .text	00000000000000f9              my_xpath_parse_AndExpr(my_xpath_st*)
00000000008beb45 l     F .text	0000000000000131              my_xpath_parse_EqualityExpr(my_xpath_st*)
00000000008bea0f l     F .text	00000000000000d0              my_xpath_parse_ne(my_xpath_st*)
00000000008beadf l     F .text	0000000000000066              my_xpath_parse_EqualityOperator(my_xpath_st*)
00000000008bed1b l     F .text	0000000000000131              my_xpath_parse_RelationalExpr(my_xpath_st*)
00000000008bec76 l     F .text	00000000000000a5              my_xpath_parse_RelationalOperator(my_xpath_st*)
00000000008bee93 l     F .text	0000000000000116              my_xpath_parse_AdditiveExpr(my_xpath_st*)
00000000008bee4c l     F .text	0000000000000047              my_xpath_parse_AdditiveOperator(my_xpath_st*)
00000000008bf005 l     F .text	000000000000015f              my_xpath_parse_MultiplicativeExpr(my_xpath_st*)
00000000008befa9 l     F .text	000000000000005c              my_xpath_parse_MultiplicativeOperator(my_xpath_st*)
00000000008bf164 l     F .text	0000000000000092              my_xpath_parse_UnaryExpr(my_xpath_st*)
00000000008bf309 l     F .text	0000000000000083              my_xpath_parse_NCName(my_xpath_st*)
00000000008bf38c l     F .text	0000000000000084              my_xpath_parse_QName(my_xpath_st*)
0000000000cc8a20 l     O .rodata	0000000000000030              my_xpath_parse_VariableReference(my_xpath_st*)::__PRETTY_FUNCTION__
00000000008bf6cc l     F .text	00000000000000ae              my_xpath_parse_NodeTest_QName(my_xpath_st*)
0000000000cc8a60 l     O .rodata	000000000000002d              my_xpath_parse_NodeTest_QName(my_xpath_st*)::__PRETTY_FUNCTION__
00000000008bf77a l     F .text	0000000000000093              my_xpath_parse_NodeTest_asterisk(my_xpath_st*)
0000000000cc8aa0 l     O .rodata	0000000000000030              my_xpath_parse_NodeTest_asterisk(my_xpath_st*)::__PRETTY_FUNCTION__
00000000008bf84a l     F .text	00000000000000da              my_xpath_parse(my_xpath_st*, char const*, char const*)
00000000008bfc8b l     F .text	0000000000000066              append_node(String*, my_xml_node_st*)
0000000000cc8ae0 l     O .rodata	0000000000000033              xml_enter::__PRETTY_FUNCTION__
0000000000cc8b20 l     O .rodata	0000000000000033              xml_leave::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              rpl_tblmap.cc
0000000000cc8b58 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000000000 l    df *ABS*	0000000000000000              event_scheduler.cc
00000000008c2f1a l     F .text	0000000000000071              inline_mysql_mutex_init
00000000008c2f8b l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000008c300b l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008c3122 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008c319f l     F .text	0000000000000065              inline_mysql_cond_init
00000000008c3204 l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000008c3273 l     F .text	0000000000000133              inline_mysql_cond_wait
00000000008c33a6 l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000008c34e9 l     F .text	000000000000006c              inline_mysql_cond_broadcast
00000000008c3555 l     F .text	000000000000007e              inline_mysql_thread_create
00000000008c35d3 l     F .text	000000000000006f              inline_mysql_thread_set_psi_id
0000000000cc9760 l     O .rodata	0000000000000016              String::c_ptr()::__PRETTY_FUNCTION__
00000000008c3642 l     F .text	000000000000001e              my_atomic_add32(int volatile*, int)
0000000000cc8d60 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc8d68 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc8d6c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc8d70 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc8d74 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc8d78 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063c40 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cc98c0 l     O .rodata	0000000000000048              THD::enter_cond(st_mysql_cond*, st_mysql_mutex*, char const*)::__PRETTY_FUNCTION__
0000000001063ca0 l     O .data.rel.ro	0000000000000030              scheduler_states_names
0000000000cc9720 l     O .rodata	0000000000000040              Event_worker_thread::print_warnings(THD*, Event_job_data*)::__PRETTY_FUNCTION__
0000000000cc9780 l     O .rodata	000000000000001f              deinit_event_thread(THD*)::__PRETTY_FUNCTION__
0000000000cc979f l     O .rodata	0000000000000006              Event_scheduler::start(int*)::__FUNCTION__
0000000000cc97c0 l     O .rodata	0000000000000022              Event_scheduler::start(int*)::__PRETTY_FUNCTION__
0000000000cc9800 l     O .rodata	0000000000000020              Event_scheduler::run(THD*)::__PRETTY_FUNCTION__
0000000000cc9820 l     O .rodata	0000000000000004              Event_scheduler::run(THD*)::__FUNCTION__
0000000000cc9840 l     O .rodata	0000000000000041              Event_scheduler::execute_top(Event_queue_element_for_exec*)::__PRETTY_FUNCTION__
0000000000cc9888 l     O .rodata	000000000000000b              Event_scheduler::is_running()::__FUNCTION__
0000000000cc9893 l     O .rodata	0000000000000005              Event_scheduler::stop()::__FUNCTION__
0000000000cc9898 l     O .rodata	000000000000000a              Event_scheduler::cond_wait(THD*, timespec*, char const*, char const*, unsigned int)::__FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              event_queue.cc
00000000008c5514 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000008c5585 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000008c5605 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008c571c l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008c5799 l     F .text	0000000000000065              inline_mysql_cond_init
00000000008c57fe l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000008c586d l     F .text	0000000000000133              inline_mysql_cond_wait
00000000008c59a0 l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000008c5ae3 l     F .text	000000000000006c              inline_mysql_cond_broadcast
0000000000cc9970 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cc9978 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cc997c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cc9980 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cc9984 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cc9988 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063ce0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cca180 l     O .rodata	0000000000000048              THD::enter_cond(st_mysql_cond*, st_mysql_mutex*, char const*)::__PRETTY_FUNCTION__
0000000000cc9a68 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
0000000000cca0d0 l     O .rodata	000000000000000b              Event_queue::init_queue(THD*)::__FUNCTION__
0000000000cca0e0 l     O .rodata	000000000000000d              Event_queue::deinit_queue()::__FUNCTION__
0000000000cca0f0 l     O .rodata	000000000000000d              Event_queue::create_event(THD*, Event_queue_element*, bool*)::__FUNCTION__
0000000000cca100 l     O .rodata	000000000000000d              Event_queue::update_event(THD*, st_mysql_lex_string, st_mysql_lex_string, Event_queue_element*)::__FUNCTION__
0000000000cca110 l     O .rodata	000000000000000b              Event_queue::drop_event(THD*, st_mysql_lex_string, st_mysql_lex_string)::__FUNCTION__
0000000000cca120 l     O .rodata	0000000000000013              Event_queue::drop_schema_events(THD*, st_mysql_lex_string)::__FUNCTION__
0000000000cca140 l     O .rodata	000000000000001d              Event_queue::recalculate_activation_times(THD*)::__FUNCTION__
00000000010ee798 l     O .data	0000000000000008              queue_empty_msg
00000000010ee7a0 l     O .data	0000000000000008              queue_wait_msg
0000000000cca160 l     O .rodata	000000000000001e              Event_queue::get_top_for_execution_if_time(THD*, Event_queue_element_for_exec**)::__FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              event_db_repository.cc
0000000000cca1e0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000ccae80 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000ccaeb0 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000cca274 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cca278 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cca27c l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cca280 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cca284 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001063d40 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000ccb020 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000cca3b8 l     O .rodata	0000000000000004              MY_TZ_TABLES_COUNT
0000000001063da0 l     O .data.rel.ro	0000000000000420              event_table_fields
00000000010641c0 l     O .data.rel.ro	0000000000000010              event_table_def
0000000001387ee8 l     O .bss	0000000000000008              table_intact
00000000008c7804 l     F .text	0000000000000d3b              mysql_event_fill_row(THD*, TABLE*, Event_parse_data*, sp_head*, unsigned long, char)
0000000000ccae20 l     O .rodata	0000000000000055              mysql_event_fill_row(THD*, TABLE*, Event_parse_data*, sp_head*, unsigned long, char)::__PRETTY_FUNCTION__
0000000000ccaee0 l     O .rodata	000000000000004d              Event_db_repository::create_event(THD*, Event_parse_data*, bool, bool*)::__PRETTY_FUNCTION__
0000000000ccaf40 l     O .rodata	000000000000005a              Event_db_repository::update_event(THD*, Event_parse_data*, st_mysql_lex_string*, st_mysql_lex_string*)::__PRETTY_FUNCTION__
0000000000ccafa0 l     O .rodata	000000000000006d              Event_db_repository::update_timing_fields_for_event(THD*, st_mysql_lex_string, st_mysql_lex_string, long, unsigned long long)::__PRETTY_FUNCTION__
00000000008ca9f6 l     F .text	0000000000000049              __static_initialization_and_destruction_0(int, int)
00000000008caa3f l     F .text	0000000000000015              _GLOBAL__sub_I_event_db_repository.cc
0000000000000000 l    df *ABS*	0000000000000000              my_user.c
0000000000000000 l    df *ABS*	0000000000000000              sql_partition_admin.cc
0000000000ccb2a0 l     O .rodata	000000000000002a              MDL_request::set_type(enum_mdl_type)::__PRETTY_FUNCTION__
0000000000ccb0b0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000ccb0b8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000ccb0bc l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ccb0c0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ccb0c4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ccb0c8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010641e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000ccb2e0 l     O .rodata	0000000000000028              Sql_statement::~Sql_statement()::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_alter.cc
0000000000ccb320 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000ccb328 l     O .rodata	0000000000000004              SRID_SIZE
0000000000ccb32c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ccb330 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ccb334 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ccb338 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001064240 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000ccb4c0 l     O .rodata	0000000000000028              Sql_statement::~Sql_statement()::__PRETTY_FUNCTION__
0000000000ccb480 l     O .rodata	0000000000000032              Alter_table_statement::execute(THD*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              sql_truncate.cc
0000000000ccb500 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000008cbb64 l     F .text	0000000000000031              ha_check_storage_engine_flag(handlerton const*, unsigned int)
0000000000ccb508 l     O .rodata	0000000000000004              SRID_SIZE
0000000000ccb50c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ccb510 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ccb514 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ccb518 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010642a0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000ccbac0 l     O .rodata	0000000000000028              Sql_statement::~Sql_statement()::__PRETTY_FUNCTION__
0000000000ccba80 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
00000000008cbb95 l     F .text	00000000000000c3              fk_info_append_fields(String*, List<st_mysql_lex_string>*)
00000000008cbc58 l     F .text	00000000000002f2              fk_info_str(THD*, st_foreign_key_info*)
00000000008cbf4a l     F .text	00000000000002a5              fk_truncate_illegal_if_parent(THD*, TABLE*)
0000000000ccb940 l     O .rodata	0000000000000031              fk_truncate_illegal_if_parent(THD*, TABLE*)::__PRETTY_FUNCTION__
0000000000ccb980 l     O .rodata	0000000000000062              Truncate_statement::handler_truncate(THD*, TABLE_LIST*, bool)::__PRETTY_FUNCTION__
00000000008cc40f l     F .text	0000000000000248              recreate_temporary_table(THD*, TABLE*)
0000000000ccba00 l     O .rodata	000000000000003e              Truncate_statement::lock_table(THD*, TABLE_LIST*, bool*)::__PRETTY_FUNCTION__
0000000000ccba40 l     O .rodata	000000000000003b              Truncate_statement::truncate_table(THD*, TABLE_LIST*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              gstream.cc
0000000000000000 l    df *ABS*	0000000000000000              sha2.cc
0000000000ccbb04 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000ccbb08 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              mf_iocache.cc
0000000000ccbb10 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000ccbb18 l     O .rodata	0000000000000004              SRID_SIZE
0000000000ccbb1c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ccbb20 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ccbb24 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ccbb28 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001064300 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000000000 l    df *ABS*	0000000000000000              array.c
0000000000000000 l    df *ABS*	0000000000000000              charset.c
00000000008ce262 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008ce379 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008ce3f6 l     F .text	000000000000012a              inline_mysql_file_open
00000000008ce520 l     F .text	0000000000000100              inline_mysql_file_close
00000000008ce620 l     F .text	000000000000017c              inline_mysql_file_read
00000000008ce7e3 l     F .text	0000000000000094              get_collation_number_internal
00000000008ce877 l     F .text	000000000000030a              init_state_maps
00000000008ceb81 l     F .text	0000000000000051              simple_cs_init_functions
00000000008cebd2 l     F .text	00000000000002b3              cs_copy_data
00000000008cee85 l     F .text	0000000000000089              simple_cs_is_full
00000000008cef0e l     F .text	00000000000000b8              copy_uca_collation
00000000008cefc6 l     F .text	00000000000006b3              add_collation
00000000008cf679 l     F .text	00000000000001b2              my_read_charset_file
0000000000ccbe10 l     O .rodata	0000000000000017              __PRETTY_FUNCTION__.10395
00000000008cfa07 l     F .text	000000000000001f              cs_alloc
000000000138bf20 l     O .bss	0000000000000004              charsets_initialized
000000000138bf24 l     O .bss	0000000000000004              charsets_template
00000000008cfa26 l     F .text	00000000000000ff              init_available_charsets
00000000008cfb38 l     F .text	0000000000000064              get_collation_name_alias
00000000008cfc30 l     F .text	00000000000000ac              get_charset_number_internal
00000000008cfcdc l     F .text	000000000000004c              get_charset_name_alias
00000000008cfe05 l     F .text	000000000000022d              get_internal_charset
0000000000ccbe30 l     O .rodata	0000000000000015              __PRETTY_FUNCTION__.10448
0000000000000000 l    df *ABS*	0000000000000000              checksum.c
0000000000000000 l    df *ABS*	0000000000000000              default.c
00000000008d086c l     F .text	0000000000000175              inline_mysql_file_fgets
00000000008d09e1 l     F .text	000000000000018f              inline_mysql_file_fopen
00000000008d0b70 l     F .text	000000000000017d              inline_mysql_file_fclose
0000000000ccc4c0 l     O .rodata	0000000000000019              __PRETTY_FUNCTION__.9639
00000000010ee7b0 l     O .data	0000000000000008              args_separator
00000000008d0ced l     F .text	000000000000004a              set_args_separator
0000000000ccc490 l     O .rodata	0000000000000013              __PRETTY_FUNCTION__.10269
000000000138bf60 l     O .bss	0000000000000200              my_defaults_file_buffer
000000000138c160 l     O .bss	0000000000000200              my_defaults_extra_file_buffer
000000000138c360 l     O .bss	0000000000000001              defaults_already_read
000000000138c368 l     O .bss	0000000000000008              default_directories
00000000010ee7c0 l     O .data	0000000000000010              f_extensions
00000000008d0d4f l     F .text	0000000000000196              fn_expand
00000000008d1501 l     F .text	00000000000000e2              handle_default_option
00000000008d2148 l     F .text	0000000000000ce5              search_default_file_with_ext
00000000008d1f83 l     F .text	00000000000000d4              search_default_file
00000000008d335f l     F .text	000000000000011f              init_default_directories
00000000008d2057 l     F .text	00000000000000f1              get_argument
0000000000ccc4a8 l     O .rodata	000000000000000b              includedir_keyword.10449
0000000000ccc4b8 l     O .rodata	0000000000000008              include_keyword.10450
00000000008d2e2d l     F .text	00000000000000b1              remove_end_comment
00000000008d3271 l     F .text	00000000000000ee              add_directory
0000000000ccc4e0 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.10551
0000000000000000 l    df *ABS*	0000000000000000              errors.c
0000000000000000 l    df *ABS*	0000000000000000              hash.c
00000000008d3540 l     F .text	000000000000007a              calc_hash
00000000008d36f0 l     F .text	0000000000000077              my_hash_free_elements
00000000008d38d4 l     F .text	0000000000000060              my_hash_key
00000000008d3934 l     F .text	000000000000003e              my_hash_mask
00000000008d3972 l     F .text	0000000000000089              my_hash_rec_mask
00000000008d39fb l     F .text	0000000000000069              rec_hashnr
00000000008d3e40 l     F .text	00000000000000b2              hashcmp
00000000008d3dfd l     F .text	0000000000000043              movelink
0000000000000000 l    df *ABS*	0000000000000000              list.c
0000000000000000 l    df *ABS*	0000000000000000              md5.c
00000000008d5355 l     F .text	0000000000000053              getu32
00000000008d53a8 l     F .text	0000000000000049              putu32
00000000008d570e l     F .text	0000000000000975              my_MD5Transform
0000000000000000 l    df *ABS*	0000000000000000              mf_cache.c
00000000008d6083 l     F .text	0000000000000028              cache_remove_open_tmp
0000000000000000 l    df *ABS*	0000000000000000              mf_dirname.c
0000000000000000 l    df *ABS*	0000000000000000              mf_fn_ext.c
0000000000000000 l    df *ABS*	0000000000000000              mf_format.c
0000000000cccff0 l     O .rodata	000000000000000a              __PRETTY_FUNCTION__.10280
0000000000000000 l    df *ABS*	0000000000000000              mf_getdate.c
0000000000000000 l    df *ABS*	0000000000000000              mf_iocache.c
00000000008d6ea7 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000008d6f18 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000008d6f98 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008d70af l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008d712c l     F .text	0000000000000065              inline_mysql_cond_init
00000000008d7191 l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000008d7200 l     F .text	0000000000000133              inline_mysql_cond_wait
00000000008d7333 l     F .text	000000000000006c              inline_mysql_cond_signal
00000000008d739f l     F .text	000000000000006c              inline_mysql_cond_broadcast
00000000008d740b l     F .text	000000000000017c              inline_mysql_file_read
00000000008d7587 l     F .text	0000000000000174              inline_mysql_file_write
00000000008d76fb l     F .text	0000000000000176              inline_mysql_file_pwrite
00000000008d7871 l     F .text	000000000000011c              inline_mysql_file_seek
00000000008d798d l     F .text	0000000000000102              inline_mysql_file_tell
00000000008d7aeb l     F .text	00000000000000a0              init_functions
0000000000ccd720 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.10289
0000000000ccd730 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.10302
0000000000ccd740 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.10315
0000000000ccd750 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.10324
00000000008d8d73 l     F .text	0000000000000471              lock_io_cache
00000000008d91e4 l     F .text	000000000000010f              unlock_io_cache
0000000000ccd768 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.10362
00000000008d97b6 l     F .text	0000000000000134              copy_to_read_buffer
0000000000ccd780 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.10374
0000000000ccd798 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.10391
0000000000ccd7a8 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.10418
0000000000ccd7b8 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.10433
0000000000ccd7d0 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.10443
0000000000ccd7e8 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.10450
0000000000000000 l    df *ABS*	0000000000000000              mf_iocache2.c
00000000008daad4 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008dabeb l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000ccd960 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.10278
0000000000ccd978 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.10334
0000000000000000 l    df *ABS*	0000000000000000              mf_keycache.c
00000000008dc229 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000008dc29a l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000008dc31a l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008dc431 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008dc4ae l     F .text	0000000000000133              inline_mysql_cond_wait
00000000008dc5e1 l     F .text	000000000000006c              inline_mysql_cond_signal
00000000008dc64d l     F .text	000000000000003f              my_round_up_to_next_power
000000000138c370 l     O .bss	0000000000000008              keycache_thread_id
00000000008dc68c l     F .text	0000000000000019              next_power
0000000000ccf118 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.10495
00000000008dd5e5 l     F .text	000000000000012d              wait_on_queue
00000000008e2fe6 l     F .text	0000000000000246              flush_all_key_blocks
00000000008e3628 l     F .text	00000000000001cb              cache_empty
0000000000ccf130 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.10515
00000000008dd712 l     F .text	00000000000000b1              release_whole_queue
00000000008dd094 l     F .text	000000000000001f              inc_counter_for_resize_op
00000000008dd0b3 l     F .text	0000000000000042              dec_counter_for_resize_op
00000000008dd3d6 l     F .text	00000000000000f5              link_into_queue
0000000000ccf150 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.10541
00000000008dd4cb l     F .text	000000000000011a              unlink_from_queue
0000000000ccf160 l     O .rodata	0000000000000012              __PRETTY_FUNCTION__.10546
0000000000ccf178 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.10553
00000000008dd7c3 l     F .text	0000000000000098              unlink_changed
0000000000ccf188 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.10567
00000000008dd85b l     F .text	00000000000000b1              link_changed
0000000000ccf198 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.10572
00000000008dd90c l     F .text	0000000000000142              link_to_file_list
0000000000ccf1b0 l     O .rodata	0000000000000012              __PRETTY_FUNCTION__.10579
00000000008dda4e l     F .text	000000000000012a              link_to_changed_list
0000000000ccf1d0 l     O .rodata	0000000000000015              __PRETTY_FUNCTION__.10584
00000000008ddb78 l     F .text	0000000000000359              link_block
0000000000ccf1e8 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.10593
00000000008dded1 l     F .text	0000000000000215              unlink_block
0000000000ccf1f8 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.10605
00000000008de0e6 l     F .text	00000000000000a0              reg_requests
0000000000ccf208 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.10611
00000000008de186 l     F .text	000000000000030f              unreg_request
0000000000ccf218 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.10617
00000000008de495 l     F .text	0000000000000171              remove_reader
0000000000ccf228 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.10622
00000000008de606 l     F .text	0000000000000248              wait_for_readers
0000000000ccf240 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.10628
00000000008de84e l     F .text	000000000000004f              link_hash
00000000008de89d l     F .text	0000000000000247              unlink_hash
0000000000ccf258 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.10640
00000000008deae4 l     F .text	000000000000023a              get_hash_link
00000000008ded1e l     F .text	00000000000014da              find_key_block
0000000000ccf268 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.10676
00000000008e336d l     F .text	00000000000001ca              fail_block
00000000008e1a94 l     F .text	0000000000000501              free_block
00000000008e01f8 l     F .text	00000000000003bc              read_block
0000000000ccf278 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.10697
0000000000ccf288 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.10720
0000000000ccf2a0 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.10741
0000000000ccf2c0 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.10765
0000000000ccf2d0 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.10777
00000000008e1f95 l     F .text	000000000000005f              cmp_sec_link
00000000008e1ff4 l     F .text	0000000000000421              flush_cached_blocks
0000000000ccf2e0 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.10793
00000000008e2415 l     F .text	0000000000000a9b              flush_key_blocks_int
0000000000ccf300 l     O .rodata	0000000000000015              __PRETTY_FUNCTION__.10816
00000000008e3359 l     F .text	0000000000000014              test_key_cache
0000000000ccf320 l     O .rodata	0000000000000015              __PRETTY_FUNCTION__.10858
00000000008e3537 l     F .text	00000000000000f1              fail_hlink
0000000000000000 l    df *ABS*	0000000000000000              mf_keycaches.c
00000000008e37f3 l     F .text	000000000000006e              safe_hash_entry_free
00000000008e3861 l     F .text	000000000000002a              safe_hash_entry_get
00000000008e388b l     F .text	000000000000010f              safe_hash_init
00000000008e399a l     F .text	000000000000004a              safe_hash_free
00000000008e39e4 l     F .text	00000000000000ef              safe_hash_search
00000000008e3ad3 l     F .text	0000000000000242              safe_hash_set
00000000008e3d15 l     F .text	0000000000000128              safe_hash_change
000000000138c380 l     O .bss	00000000000000a0              key_cache_hash
0000000000000000 l    df *ABS*	0000000000000000              mf_loadpath.c
0000000000000000 l    df *ABS*	0000000000000000              mf_pack.c
00000000008e4cfa l     F .text	00000000000000b1              expand_tilde
0000000000000000 l    df *ABS*	0000000000000000              mf_qsort.c
0000000000000000 l    df *ABS*	0000000000000000              mf_qsort2.c
0000000000000000 l    df *ABS*	0000000000000000              mf_same.c
0000000000000000 l    df *ABS*	0000000000000000              mf_sort.c
0000000000000000 l    df *ABS*	0000000000000000              mf_arr_appstr.c
0000000000ccf610 l     O .rodata	000000000000001b              __PRETTY_FUNCTION__.10272
0000000000000000 l    df *ABS*	0000000000000000              mf_tempdir.c
00000000008e7a70 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000008e7ae1 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000008e7b61 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008e7c78 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000000000 l    df *ABS*	0000000000000000              mf_tempfile.c
00000000008e810e l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008e8225 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000000000 l    df *ABS*	0000000000000000              mf_unixpath.c
0000000000000000 l    df *ABS*	0000000000000000              mf_wcomp.c
0000000000000000 l    df *ABS*	0000000000000000              mulalloc.c
0000000000000000 l    df *ABS*	0000000000000000              my_access.c
00000000010eea00 l     O .data	00000000000000c0              reserved_names
00000000008e8bbf l     F .text	0000000000000069              str_list_find
00000000010ee900 l     O .data	0000000000000100              reserved_map
0000000000000000 l    df *ABS*	0000000000000000              my_aes.c
00000000008e8d4f l     F .text	0000000000000111              my_aes_create_key
0000000000000000 l    df *ABS*	0000000000000000              my_alloc.c
0000000000ccf9a0 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.9784
0000000000ccf9b8 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.9801
00000000008e9a95 l     F .text	0000000000000069              mark_blocks_free
0000000000000000 l    df *ABS*	0000000000000000              my_bit.c
0000000000000000 l    df *ABS*	0000000000000000              my_bitmap.c
00000000008e9e2d l     F .text	0000000000000071              inline_mysql_mutex_init
00000000008e9e9e l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000008e9f1e l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008ea035 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008ea0b2 l     F .text	0000000000000077              bitmap_set_bit
0000000000ccfe50 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.10345
00000000008ea129 l     F .text	0000000000000079              bitmap_clear_bit
0000000000ccffc0 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.10355
00000000008ea1a2 l     F .text	0000000000000066              my_count_bits_uint32
00000000008ea30c l     F .text	0000000000000038              bitmap_lock
00000000008ea344 l     F .text	0000000000000038              bitmap_unlock
00000000008ea37c l     F .text	000000000000007f              get_first_set
00000000008ea3fb l     F .text	000000000000007f              get_first_not_set
0000000000ccfde8 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.10440
0000000000ccfe00 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.10457
0000000000ccfe20 l     O .rodata	0000000000000016              __PRETTY_FUNCTION__.10470
0000000000ccfe40 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.10475
0000000000ccfe60 l     O .rodata	0000000000000012              __PRETTY_FUNCTION__.10484
0000000000ccfe80 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.10493
0000000000ccfea0 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.10523
0000000000ccfec0 l     O .rodata	0000000000000016              __PRETTY_FUNCTION__.10534
0000000000ccfee0 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.10547
0000000000ccff00 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.10572
0000000000ccff10 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.10583
0000000000ccff20 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.10594
0000000000ccff30 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.10603
0000000000ccff40 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.10613
0000000000ccff50 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.10624
0000000000ccff60 l     O .rodata	0000000000000015              __PRETTY_FUNCTION__.10634
0000000000ccff80 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.10644
0000000000ccffa0 l     O .rodata	0000000000000016              __PRETTY_FUNCTION__.10656
0000000000000000 l    df *ABS*	0000000000000000              my_chsize.c
0000000000000000 l    df *ABS*	0000000000000000              my_compress.c
0000000000000000 l    df *ABS*	0000000000000000              my_create.c
0000000000000000 l    df *ABS*	0000000000000000              my_delete.c
0000000000000000 l    df *ABS*	0000000000000000              my_error.c
00000000010eeac0 l     O .data	0000000000000018              my_errmsgs_globerrs
00000000010eead8 l     O .data	0000000000000008              my_errmsgs_list
0000000000000000 l    df *ABS*	0000000000000000              my_file.c
00000000008ecc52 l     F .text	00000000000001b3              set_max_open_files
0000000000000000 l    df *ABS*	0000000000000000              my_fopen.c
00000000008ed091 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008ed1a8 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008ed940 l     F .text	00000000000000e8              make_ftype
0000000000cd0670 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.9917
0000000000000000 l    df *ABS*	0000000000000000              my_fstream.c
0000000000000000 l    df *ABS*	0000000000000000              my_gethwaddr.c
0000000000000000 l    df *ABS*	0000000000000000              my_getopt.c
00000000008ee119 l     F .text	0000000000000157              default_reporter
00000000010eeb20 l     O .data	0000000000000030              special_opt_prefix
0000000000cd07f0 l     O .rodata	0000000000000018              special_opt_prefix_lengths
000000000138c430 l     O .bss	0000000000000008              getopt_get_addr
0000000000cd0f88 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.9947
00000000008f07c5 l     F .text	0000000000000225              init_one_value
00000000008f0aa4 l     F .text	0000000000000137              init_variables
00000000008ef5d9 l     F .text	00000000000000a1              check_struct_option
00000000008efca5 l     F .text	0000000000000128              findopt
00000000008ef7f1 l     F .text	00000000000004b4              setval
00000000008ef67a l     F .text	0000000000000177              get_bool_argument
00000000008eff8b l     F .text	000000000000004c              getopt_ll
00000000008f027f l     F .text	000000000000011a              getopt_ull
00000000008f06e8 l     F .text	00000000000000dd              getopt_double
00000000008efe30 l     F .text	000000000000015b              eval_num_suffix
0000000000cd0fa0 l     O .rodata	0000000000000016              __PRETTY_FUNCTION__.10066
00000000008f0239 l     F .text	0000000000000046              is_negative_num
0000000000cd0fc0 l     O .rodata	0000000000000017              __PRETTY_FUNCTION__.10093
00000000008f09ea l     F .text	0000000000000098              fini_one_value
00000000008f0bdb l     F .text	000000000000005f              print_name
0000000000000000 l    df *ABS*	0000000000000000              my_getsystime.c
0000000000000000 l    df *ABS*	0000000000000000              my_getwd.c
0000000000000000 l    df *ABS*	0000000000000000              my_init.c
00000000008f1b25 l     F .text	00000000000000a4              atoi_octal
000000000138c450 l     O .bss	0000000000000010              instrumented_stdin
00000000010eeb80 l     O .data	00000000000001b0              all_mysys_mutexes
00000000010eed40 l     O .data	0000000000000078              all_mysys_conds
00000000010eedc0 l     O .data	0000000000000048              all_mysys_files
0000000000000000 l    df *ABS*	0000000000000000              my_lib.c
00000000008f22a8 l     F .text	000000000000002b              comp_names
0000000000cd1520 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.10408
0000000000000000 l    df *ABS*	0000000000000000              my_malloc.c
0000000000cd1648 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.10279
0000000000000000 l    df *ABS*	0000000000000000              my_mess.c
0000000000000000 l    df *ABS*	0000000000000000              my_mkdir.c
0000000000000000 l    df *ABS*	0000000000000000              my_mmap.c
0000000000000000 l    df *ABS*	0000000000000000              my_once.c
0000000000000000 l    df *ABS*	0000000000000000              my_open.c
00000000008f34c5 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008f35dc l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000000000 l    df *ABS*	0000000000000000              my_pread.c
0000000000000000 l    df *ABS*	0000000000000000              my_pthread.c
0000000000000000 l    df *ABS*	0000000000000000              my_read.c
0000000000000000 l    df *ABS*	0000000000000000              my_rename.c
0000000000000000 l    df *ABS*	0000000000000000              my_seek.c
0000000000cd1c80 l     O .rodata	0000000000000008              __PRETTY_FUNCTION__.9873
0000000000cd1c88 l     O .rodata	0000000000000008              __PRETTY_FUNCTION__.9880
0000000000000000 l    df *ABS*	0000000000000000              my_sleep.c
0000000000000000 l    df *ABS*	0000000000000000              my_static.c
00000000008f49c7 l     F .text	000000000000001f              proc_info_dummy
0000000000000000 l    df *ABS*	0000000000000000              my_symlink.c
0000000000000000 l    df *ABS*	0000000000000000              my_symlink2.c
0000000000000000 l    df *ABS*	0000000000000000              my_sync.c
000000000138c9a8 l     O .bss	0000000000000008              before_sync_wait
000000000138c9b0 l     O .bss	0000000000000008              after_sync_wait
0000000000cd1ec5 l     O .rodata	0000000000000002              cur_dir_name
0000000000000000 l    df *ABS*	0000000000000000              my_thr_init.c
00000000008f5a62 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000008f5ad3 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000008f5b53 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008f5c6a l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008f5ce7 l     F .text	0000000000000065              inline_mysql_cond_init
00000000008f5d4c l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000008f5dbb l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000008f5efe l     F .text	000000000000006c              inline_mysql_cond_signal
00000000008f5f6a l     F .text	0000000000000016              nptl_pthread_exit_hack_handler
000000000138c9bc l     O .bss	0000000000000001              my_thread_global_init_done
0000000000cd2040 l     O .rodata	0000000000000018              __PRETTY_FUNCTION__.10291
00000000008f6d35 l     F .text	000000000000008e              get_thread_lib
000000000138c9c0 l     O .bss	0000000000000008              thread_id
0000000000cd2058 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.10319
0000000000000000 l    df *ABS*	0000000000000000              my_write.c
0000000000000000 l    df *ABS*	0000000000000000              ptr_cmp.c
00000000008f70ff l     F .text	0000000000000017              ptr_compare_zero_length
00000000008f718a l     F .text	00000000000000b0              ptr_compare
00000000008f723a l     F .text	00000000000000fc              ptr_compare_0
00000000008f7336 l     F .text	0000000000000138              ptr_compare_1
00000000008f746e l     F .text	0000000000000169              ptr_compare_2
00000000008f75d7 l     F .text	000000000000019a              ptr_compare_3
0000000000cd2250 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.9904
0000000000cd2260 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.9972
0000000000cd2270 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.9988
0000000000000000 l    df *ABS*	0000000000000000              queues.c
0000000000cd2340 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.9977
0000000000cd2350 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.9990
0000000000000000 l    df *ABS*	0000000000000000              stacktrace.c
000000000138c9c8 l     O .bss	0000000000000008              heap_start
00000000008f8603 l     F .text	0000000000000099              print_buffer
00000000008f869c l     F .text	00000000000001f9              safe_print_str
0000000000cd23e0 l     O .rodata	0000000000000011              digits
00000000008f8cd2 l     F .text	0000000000000049              check_longlong
00000000008f8d1b l     F .text	00000000000003e1              my_safe_vsnprintf
0000000000000000 l    df *ABS*	0000000000000000              rijndael.c
0000000000cd2540 l     O .rodata	0000000000000400              Te0
0000000000cd2940 l     O .rodata	0000000000000400              Te1
0000000000cd2d40 l     O .rodata	0000000000000400              Te2
0000000000cd3140 l     O .rodata	0000000000000400              Te3
0000000000cd3540 l     O .rodata	0000000000000400              Te4
0000000000cd3940 l     O .rodata	0000000000000400              Td0
0000000000cd3d40 l     O .rodata	0000000000000400              Td1
0000000000cd4140 l     O .rodata	0000000000000400              Td2
0000000000cd4540 l     O .rodata	0000000000000400              Td3
0000000000cd4940 l     O .rodata	0000000000000400              Td4
0000000000cd4d40 l     O .rodata	0000000000000028              rcon
0000000000000000 l    df *ABS*	0000000000000000              sha1.c
00000000008fba95 l     F .text	0000000000000195              SHA1PadMessage
00000000008fb526 l     F .text	000000000000056f              SHA1ProcessMessageBlock
0000000000cd4d90 l     O .rodata	0000000000000010              K
0000000000000000 l    df *ABS*	0000000000000000              thr_alarm.c
00000000008fbc2a l     F .text	0000000000000071              inline_mysql_mutex_init
00000000008fbc9b l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000008fbd1b l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008fbe32 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008fbeaf l     F .text	0000000000000065              inline_mysql_cond_init
00000000008fbf14 l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000008fbf83 l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000010eee70 l     O .data	0000000000000004              alarm_aborted
000000000138ca00 l     O .bss	0000000000000070              LOCK_alarm
000000000138ca80 l     O .bss	0000000000000038              COND_alarm
000000000138cac0 l     O .bss	0000000000000080              full_signal_set
000000000138cb40 l     O .bss	0000000000000030              alarm_queue
000000000138cb70 l     O .bss	0000000000000004              max_used_alarms
00000000008fc0c6 l     F .text	0000000000000047              compare_ulong
00000000008fce9a l     F .text	000000000000000a              thread_alarm
00000000008fc8ef l     F .text	0000000000000220              process_alarm_part2
0000000000000000 l    df *ABS*	0000000000000000              thr_lock.c
00000000008fcea4 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000008fcf15 l     F .text	0000000000000080              inline_mysql_mutex_destroy
00000000008fcf95 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000008fd0ac l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000008fd129 l     F .text	0000000000000143              inline_mysql_cond_timedwait
00000000008fd26c l     F .text	000000000000006c              inline_mysql_cond_signal
000000000138cb90 l     O .bss	0000000000000008              before_lock_wait
000000000138cb98 l     O .bss	0000000000000008              after_lock_wait
00000000008fd2fd l     F .text	000000000000000f              get_cond
00000000008fd321 l     F .text	0000000000000019              thr_lock_owner_equal
00000000008fd55c l     F .text	000000000000004d              has_old_lock
00000000008fd5a9 l     F .text	0000000000000413              wait_for_lock
00000000008fe305 l     F .text	000000000000043f              wake_up_waiters
00000000008fe00a l     F .text	000000000000018b              free_all_read_locks
00000000008fe744 l     F .text	0000000000000108              sort_locks
00000000008ff20b l     F .text	00000000000000ee              thr_print_lock
0000000000000000 l    df *ABS*	0000000000000000              thr_mutex.c
000000000138cba0 l     O .bss	0000000000000028              THR_LOCK_mutex
000000000138cbc8 l     O .bss	0000000000000008              safe_mutex_count
0000000000000000 l    df *ABS*	0000000000000000              thr_rwlock.c
0000000000000000 l    df *ABS*	0000000000000000              tree.c
0000000000900473 l     F .text	0000000000000196              free_tree
0000000000900649 l     F .text	00000000000000c8              delete_tree_element
000000000090179a l     F .text	000000000000020c              rb_insert
0000000000901d16 l     F .text	00000000000000dc              test_rb_tree
00000000009019a6 l     F .text	0000000000000370              rb_delete_fixup
000000000090158d l     F .text	00000000000000c6              tree_walk_left_root_right
0000000000901653 l     F .text	00000000000000c7              tree_walk_right_root_left
000000000090171a l     F .text	0000000000000040              left_rotate
000000000090175a l     F .text	0000000000000040              right_rotate
0000000000000000 l    df *ABS*	0000000000000000              typelib.c
0000000000cd5838 l     O .rodata	000000000000000a              __PRETTY_FUNCTION__.10286
00000000010eeea0 l     O .data	0000000000000020              on_off_default_names
00000000010eeec0 l     O .data	0000000000000020              on_off_default_typelib
000000000090271a l     F .text	0000000000000071              parse_name
0000000000000000 l    df *ABS*	0000000000000000              base64.c
00000000010eeee0 l     O .data	0000000000000041              base64_table
0000000000902bba l     F .text	0000000000000031              pos
0000000000000000 l    df *ABS*	0000000000000000              my_largepage.c
0000000000902f09 l     F .text	0000000000000175              inline_mysql_file_fgets
000000000090307e l     F .text	000000000000018f              inline_mysql_file_fopen
000000000090320d l     F .text	000000000000017d              inline_mysql_file_fclose
0000000000cd5a80 l     O .rodata	0000000000000019              __PRETTY_FUNCTION__.9639
00000000009035a4 l     F .text	0000000000000136              my_get_large_page_size_int
00000000009036da l     F .text	00000000000001cb              my_large_malloc_int
00000000009038a5 l     F .text	0000000000000072              my_large_free_int
0000000000000000 l    df *ABS*	0000000000000000              charset-def.c
0000000000000000 l    df *ABS*	0000000000000000              mf_radix.c
0000000000000000 l    df *ABS*	0000000000000000              my_div.c
0000000000000000 l    df *ABS*	0000000000000000              ha_perfschema.cc
0000000000cd6120 l     O .rodata	000000000000001c              handler::~handler()::__PRETTY_FUNCTION__
0000000000cd6540 l     O .rodata	000000000000002d              handler::exec_bulk_update(unsigned int*)::__PRETTY_FUNCTION__
0000000000cd6500 l     O .rodata	0000000000000027              handler::end_bulk_delete()::__PRETTY_FUNCTION__
0000000000cd6140 l     O .rodata	0000000000000019              handler::psi_open()::__PRETTY_FUNCTION__
0000000000cd6160 l     O .rodata	000000000000001a              handler::psi_close()::__PRETTY_FUNCTION__
0000000000cd64c0 l     O .rodata	0000000000000031              handler::repair(THD*, st_ha_check_opt*)::__PRETTY_FUNCTION__
0000000000cd6460 l     O .rodata	0000000000000042              handler::bulk_update_row(unsigned char const*, unsigned char*, unsigned int*)::__PRETTY_FUNCTION__
0000000000cd5bb0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd5bb8 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd5bbc l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd5bc0 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd5bc4 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd5bc8 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001064360 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cd6200 l     O .rodata	0000000000000031              ha_perfschema::is_executed_by_slave() const::__PRETTY_FUNCTION__
00000000009044b4 l     F .text	0000000000000050              pfs_create_handler(handlerton*, TABLE_SHARE*, st_mem_root*)
0000000000904504 l     F .text	0000000000000047              compare_database_names(char const*, char const*)
000000000090454b l     F .text	00000000000000b3              find_table_share(char const*, char const*)
00000000009045fe l     F .text	00000000000000db              pfs_init_func(void*)
00000000009046d9 l     F .text	0000000000000079              pfs_done_func(void*)
00000000010eef40 l     O .data	0000000000000168              pfs_status_vars
000000000138cbd8 l     O .bss	0000000000000008              ha_pfs_exts
0000000000cd6180 l     O .rodata	000000000000002d              ha_perfschema::write_row(unsigned char*)::__PRETTY_FUNCTION__
0000000000cd61c0 l     O .rodata	000000000000003c              ha_perfschema::update_row(unsigned char const*, unsigned char*)::__PRETTY_FUNCTION__
0000000000cd6240 l     O .rodata	000000000000002a              ha_perfschema::rnd_init(bool)::__PRETTY_FUNCTION__
0000000000cd6280 l     O .rodata	0000000000000025              ha_perfschema::rnd_end()::__PRETTY_FUNCTION__
0000000000cd62c0 l     O .rodata	000000000000002c              ha_perfschema::rnd_next(unsigned char*)::__PRETTY_FUNCTION__
0000000000cd6300 l     O .rodata	0000000000000033              ha_perfschema::position(unsigned char const*)::__PRETTY_FUNCTION__
0000000000cd6340 l     O .rodata	0000000000000033              ha_perfschema::rnd_pos(unsigned char*, unsigned char*)::__PRETTY_FUNCTION__
0000000000cd6380 l     O .rodata	0000000000000026              ha_perfschema::info(unsigned int)::__PRETTY_FUNCTION__
0000000000cd63c0 l     O .rodata	000000000000002d              ha_perfschema::delete_all_rows()::__PRETTY_FUNCTION__
0000000000cd6400 l     O .rodata	0000000000000048              ha_perfschema::create(char const*, TABLE*, st_ha_create_information*)::__PRETTY_FUNCTION__
00000000009055f3 l     F .text	0000000000000031              __static_initialization_and_destruction_0(int, int)
0000000000905624 l     F .text	0000000000000015              _GLOBAL__sub_I_ha_perfschema.cc
0000000000000000 l    df *ABS*	0000000000000000              pfs_column_values.cc
0000000000000000 l    df *ABS*	0000000000000000              pfs_instr.cc
0000000000905ba6 l     F .text	000000000000004f              my_atomic_cas32(int volatile*, int*, int)
0000000000905bf5 l     F .text	000000000000001e              my_atomic_add32(int volatile*, int)
0000000000905c13 l     F .text	0000000000000017              my_atomic_store32(int volatile*, int)
0000000000905c2a l     F .text	000000000000001a              my_atomic_storeptr(void* volatile*, void*)
0000000000cd6aa0 l     O .rodata	0000000000000024              pfs_lock::dirty_to_allocated()::__PRETTY_FUNCTION__
0000000000cd6bd0 l     O .rodata	000000000000001f              pfs_lock::dirty_to_free()::__PRETTY_FUNCTION__
0000000000cd6b00 l     O .rodata	0000000000000023              pfs_lock::allocated_to_free()::__PRETTY_FUNCTION__
0000000000905c44 l     F .text	0000000000000022              lf_pinbox_get_pins
0000000000905c66 l     F .text	000000000000001b              lf_pinbox_put_pins
0000000000cd6a60 l     O .rodata	0000000000000029              randomized_index(void const*, unsigned int)::__PRETTY_FUNCTION__
000000000138cca0 l     O .bss	0000000000000004              thread_internal_id_counter
000000000138cca4 l     O .bss	0000000000000004              per_thread_rwlock_class_start
000000000138cca8 l     O .bss	0000000000000004              per_thread_cond_class_start
000000000138ccac l     O .bss	0000000000000004              per_thread_file_class_start
000000000138ccb0 l     O .bss	0000000000000004              thread_instr_class_waits_sizing
000000000138ccb8 l     O .bss	0000000000000008              thread_instr_class_waits_array
000000000138ccc0 l     O .bss	0000000000000008              thread_history_array
000000000138cce0 l     O .bss	00000000000000a8              filename_hash
000000000138cd88 l     O .bss	0000000000000001              filename_hash_inited
0000000000cd6880 l     O .rodata	000000000000005c              find_per_thread_mutex_class_wait_stat(PFS_thread*, PFS_mutex_class*)::__PRETTY_FUNCTION__
0000000000cd68e0 l     O .rodata	000000000000005e              find_per_thread_rwlock_class_wait_stat(PFS_thread*, PFS_rwlock_class*)::__PRETTY_FUNCTION__
0000000000cd6940 l     O .rodata	000000000000005a              find_per_thread_cond_class_wait_stat(PFS_thread*, PFS_cond_class*)::__PRETTY_FUNCTION__
0000000000cd69a0 l     O .rodata	000000000000005a              find_per_thread_file_class_wait_stat(PFS_thread*, PFS_file_class*)::__PRETTY_FUNCTION__
0000000000906816 l     F .text	0000000000000099              filename_hash_get_key
0000000000cd6a00 l     O .rodata	000000000000003d              filename_hash_get_key::__PRETTY_FUNCTION__
0000000000cd6a40 l     O .rodata	0000000000000020              PFS_scan::init(unsigned int, unsigned int)::__PRETTY_FUNCTION__
0000000000cd6ad0 l     O .rodata	000000000000001f              destroy_mutex(PFS_mutex*)::__PRETTY_FUNCTION__
0000000000cd6b40 l     O .rodata	0000000000000021              destroy_rwlock(PFS_rwlock*)::__PRETTY_FUNCTION__
0000000000cd6b70 l     O .rodata	000000000000001d              destroy_cond(PFS_cond*)::__PRETTY_FUNCTION__
0000000000cd6ba0 l     O .rodata	0000000000000021              destroy_thread(PFS_thread*)::__PRETTY_FUNCTION__
0000000000cd6bf0 l     O .rodata	000000000000001d              release_file(PFS_file*)::__PRETTY_FUNCTION__
0000000000cd6c20 l     O .rodata	000000000000002a              destroy_file(PFS_thread*, PFS_file*)::__PRETTY_FUNCTION__
0000000000cd6c50 l     O .rodata	000000000000001f              destroy_table(PFS_table*)::__PRETTY_FUNCTION__
0000000000907fda l     F .text	0000000000000066              reset_mutex_waits_by_instance()
0000000000908040 l     F .text	0000000000000071              reset_rwlock_waits_by_instance()
00000000009080b1 l     F .text	0000000000000069              reset_cond_waits_by_instance()
000000000090811a l     F .text	000000000000005f              reset_file_waits_by_instance()
0000000000000000 l    df *ABS*	0000000000000000              pfs_instr_class.cc
00000000009085f4 l     F .text	000000000000004f              my_atomic_cas32(int volatile*, int*, int)
0000000000908643 l     F .text	000000000000001e              my_atomic_add32(int volatile*, int)
0000000000908661 l     F .text	0000000000000017              my_atomic_store32(int volatile*, int)
0000000000908678 l     F .text	000000000000001a              my_atomic_storeptr(void* volatile*, void*)
0000000000cd7080 l     O .rodata	0000000000000024              pfs_lock::dirty_to_allocated()::__PRETTY_FUNCTION__
0000000000cd70b0 l     O .rodata	000000000000001f              pfs_lock::dirty_to_free()::__PRETTY_FUNCTION__
0000000000908692 l     F .text	0000000000000022              lf_pinbox_get_pins
0000000000cd7040 l     O .rodata	0000000000000029              randomized_index(void const*, unsigned int)::__PRETTY_FUNCTION__
000000000138ce08 l     O .bss	0000000000000004              mutex_class_dirty_count
000000000138ce0c l     O .bss	0000000000000004              mutex_class_allocated_count
000000000138ce10 l     O .bss	0000000000000004              rwlock_class_dirty_count
000000000138ce14 l     O .bss	0000000000000004              rwlock_class_allocated_count
000000000138ce18 l     O .bss	0000000000000004              cond_class_dirty_count
000000000138ce1c l     O .bss	0000000000000004              cond_class_allocated_count
000000000138ce20 l     O .bss	0000000000000008              mutex_class_array
000000000138ce28 l     O .bss	0000000000000008              rwlock_class_array
000000000138ce30 l     O .bss	0000000000000008              cond_class_array
000000000138ce38 l     O .bss	0000000000000004              thread_class_dirty_count
000000000138ce3c l     O .bss	0000000000000004              thread_class_allocated_count
000000000138ce40 l     O .bss	0000000000000008              thread_class_array
000000000138ce60 l     O .bss	00000000000000a8              table_share_hash
000000000138cf08 l     O .bss	0000000000000001              table_share_hash_inited
000000000138cf0c l     O .bss	0000000000000004              file_class_dirty_count
000000000138cf10 l     O .bss	0000000000000004              file_class_allocated_count
000000000138cf18 l     O .bss	0000000000000008              file_class_array
0000000000908b02 l     F .text	0000000000000099              table_share_hash_get_key
0000000000cd6e20 l     O .rodata	0000000000000040              table_share_hash_get_key::__PRETTY_FUNCTION__
0000000000908d0f l     F .text	000000000000009d              init_instr_class(PFS_instr_class*, char const*, unsigned int, int)
0000000000cd6e60 l     O .rodata	0000000000000040              init_instr_class(PFS_instr_class*, char const*, unsigned int, int)::__PRETTY_FUNCTION__
0000000000cd6ea0 l     O .rodata	000000000000003a              register_mutex_class(char const*, unsigned int, int)::__PRETTY_FUNCTION__
0000000000cd6ee0 l     O .rodata	000000000000003b              register_rwlock_class(char const*, unsigned int, int)::__PRETTY_FUNCTION__
0000000000cd6f20 l     O .rodata	0000000000000039              register_cond_class(char const*, unsigned int, int)::__PRETTY_FUNCTION__
0000000000cd6f60 l     O .rodata	000000000000003d              register_thread_class(char const*, unsigned int, int)::__PRETTY_FUNCTION__
0000000000cd6fa0 l     O .rodata	0000000000000039              register_file_class(char const*, unsigned int, int)::__PRETTY_FUNCTION__
0000000000cd6fe0 l     O .rodata	000000000000005f              find_or_create_table_share(PFS_thread*, char const*, unsigned int, char const*, unsigned int)::__PRETTY_FUNCTION__
000000000090a3b1 l     F .text	0000000000000065              reset_mutex_class_waits()
000000000090a416 l     F .text	0000000000000069              reset_rwlock_class_waits()
000000000090a47f l     F .text	000000000000006c              reset_cond_class_waits()
000000000090a4eb l     F .text	0000000000000065              reset_file_class_waits()
0000000000000000 l    df *ABS*	0000000000000000              pfs_server.cc
000000000090a701 l     F .text	0000000000000057              destroy_pfs_thread
000000000090a758 l     F .text	0000000000000034              cleanup_performance_schema()
0000000000cd7130 l     O .rodata	000000000000001f              destroy_pfs_thread::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              pfs_engine_table.cc
0000000000cd7160 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
000000000090a7e0 l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
000000000090a812 l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
000000000090a82c l     F .text	0000000000000025              dbug_tmp_use_all_columns(TABLE*, st_bitmap*)
000000000090a851 l     F .text	0000000000000026              dbug_tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000cd7168 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd716c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd7170 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd7174 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd7178 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010643c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010ef2e0 l     O .data	0000000000000090              all_shares
000000000090ac40 l     F .text	0000000000000047              compare_table_names(char const*, char const*)
0000000000cd7980 l     O .rodata	0000000000000036              PFS_engine_table::set_field_ulong(Field*, unsigned long)::__PRETTY_FUNCTION__
0000000000cd79c0 l     O .rodata	000000000000003e              PFS_engine_table::set_field_ulonglong(Field*, unsigned long long)::__PRETTY_FUNCTION__
0000000000cd7a00 l     O .rodata	0000000000000049              PFS_engine_table::set_field_varchar_utf8(Field*, char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000cd7a60 l     O .rodata	0000000000000039              PFS_engine_table::set_field_enum(Field*, unsigned long long)::__PRETTY_FUNCTION__
0000000000cd7aa0 l     O .rodata	0000000000000033              PFS_engine_table::get_field_enum(Field*)::__PRETTY_FUNCTION__
0000000000cd7ae0 l     O .rodata	000000000000007f              pfs_show_status(handlerton*, THD*, bool (*)(THD*, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int), ha_stat_type)::__PRETTY_FUNCTION__
000000000090be25 l     F .text	0000000000000142              __static_initialization_and_destruction_0(int, int)
000000000090bf67 l     F .text	0000000000000015              _GLOBAL__sub_I_pfs_engine_table.cc
0000000000000000 l    df *ABS*	0000000000000000              pfs_timer.cc
000000000138d080 l     O .bss	0000000000000008              cycle_v0
000000000138d088 l     O .bss	0000000000000008              nanosec_v0
000000000138d090 l     O .bss	0000000000000008              microsec_v0
000000000138d098 l     O .bss	0000000000000008              millisec_v0
000000000138d0a0 l     O .bss	0000000000000008              tick_v0
000000000138d0a8 l     O .bss	0000000000000008              cycle_to_pico
000000000138d0b0 l     O .bss	0000000000000008              nanosec_to_pico
000000000138d0b8 l     O .bss	0000000000000008              microsec_to_pico
000000000138d0c0 l     O .bss	0000000000000008              millisec_to_pico
000000000138d0c8 l     O .bss	0000000000000008              tick_to_pico
000000000090c410 l     F .text	000000000000004b              round_to_ulong(double)
000000000090c45b l     F .text	000000000000004b              round_to_ulonglong(double)
0000000000cd7be0 l     O .rodata	000000000000002b              get_timer_value(enum_timer_name)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_events_waits.cc
000000000090c8b6 l     F .text	0000000000000067              bitmap_is_set
0000000000cd80c0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
000000000090c91d l     F .text	0000000000000028              my_atomic_load32(int volatile*)
0000000000cd7c98 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd7ca0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd7ca4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd7ca8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd7cac l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd7cb0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001064420 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001064480 l     O .data.rel.ro	0000000000000300              field_types
0000000001064780 l     O .data.rel.ro	0000000000000190              operation_names_map
0000000000cd8060 l     O .rodata	000000000000005e              table_events_waits_common::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000cd8100 l     O .rodata	000000000000003d              table_events_waits_current::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cd8140 l     O .rodata	000000000000003d              table_events_waits_history::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_events_waits_summary.cc
000000000090e39a l     F .text	0000000000000028              my_atomic_load32(int volatile*)
000000000090e3c2 l     F .text	0000000000000067              bitmap_is_set
0000000000cd84e0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cd81d8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd81e0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd81e4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd81e8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd81ec l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd81f0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001064920 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001064980 l     O .data.rel.ro	0000000000000150              ews_by_thread_by_event_name_field_types
0000000000cd8400 l     O .rodata	0000000000000055              table_events_waits_summary_by_thread_by_event_name::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cd8460 l     O .rodata	0000000000000077              table_events_waits_summary_by_thread_by_event_name::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000001064ae0 l     O .data.rel.ro	0000000000000150              ews_by_instance_field_types
0000000000cd8520 l     O .rodata	000000000000006b              table_events_waits_summary_by_instance::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_ews_global_by_event_name.cc
000000000090f54e l     F .text	0000000000000067              bitmap_is_set
0000000000cd8820 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cd85f8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd8600 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd8604 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd8608 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd860c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd8610 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001064c40 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001064ca0 l     O .data.rel.ro	0000000000000120              field_types
0000000000cd87a0 l     O .rodata	0000000000000063              table_ews_global_by_event_name::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_file_instances.cc
000000000090f97e l     F .text	0000000000000028              my_atomic_load32(int volatile*)
000000000090f9a6 l     F .text	0000000000000067              bitmap_is_set
0000000000cd8aa0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cd88b8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd88c0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd88c4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd88c8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd88cc l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd88d0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001064dc0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001064e20 l     O .data.rel.ro	0000000000000090              field_types
0000000000cd8a00 l     O .rodata	0000000000000037              table_file_instances::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cd8a40 l     O .rodata	0000000000000059              table_file_instances::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_file_summary.cc
000000000090fefe l     F .text	0000000000000028              my_atomic_load32(int volatile*)
000000000090ff26 l     F .text	0000000000000067              bitmap_is_set
0000000000cd8da0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cd8b38 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd8b40 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd8b44 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd8b48 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd8b4c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd8b50 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001064ec0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001064f20 l     O .data.rel.ro	00000000000000f0              fs_by_event_name_field_types
0000000000cd8d20 l     O .rodata	0000000000000065              table_file_summary_by_event_name::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000001065020 l     O .data.rel.ro	0000000000000120              fs_by_instance_field_types
0000000000cd8de0 l     O .rodata	0000000000000041              table_file_summary_by_instance::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cd8e40 l     O .rodata	0000000000000063              table_file_summary_by_instance::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_performance_timers.cc
000000000091094e l     F .text	0000000000000067              bitmap_is_set
0000000000cd91a0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cd8f18 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd8f20 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd8f24 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd8f28 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd8f2c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd8f30 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001065140 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010651a0 l     O .data.rel.ro	00000000000000c0              field_types
0000000000cd9100 l     O .rodata	000000000000003b              table_performance_timers::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cd9140 l     O .rodata	000000000000005d              table_performance_timers::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_setup_consumers.cc
000000000091107a l     F .text	0000000000000067              bitmap_is_set
0000000000cd9500 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cd9238 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd9240 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd9244 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd9248 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd924c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd9250 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001065260 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010ef800 l     O .data	00000000000000c0              all_setup_consumers_data
00000000010652c0 l     O .data.rel.ro	0000000000000060              field_types
0000000000cd9460 l     O .rodata	0000000000000038              table_setup_consumers::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cd94a0 l     O .rodata	000000000000005a              table_setup_consumers::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000cd9540 l     O .rodata	000000000000006c              table_setup_consumers::update_row_values(TABLE*, unsigned char const*, unsigned char*, Field**)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_setup_instruments.cc
000000000091159e l     F .text	0000000000000067              bitmap_is_set
0000000000cd97c0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cd9618 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd9620 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd9624 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd9628 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd962c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd9630 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001065320 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001065380 l     O .data.rel.ro	0000000000000090              field_types
0000000000cd9760 l     O .rodata	000000000000005c              table_setup_instruments::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000cd9800 l     O .rodata	000000000000006e              table_setup_instruments::update_row_values(TABLE*, unsigned char const*, unsigned char*, Field**)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_setup_timers.cc
0000000000911dd2 l     F .text	0000000000000067              bitmap_is_set
0000000000cd9ae0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cd98d8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd98e0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd98e4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd98e8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd98ec l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd98f0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001065420 l     O .data.rel.ro	0000000000000050              sp_data_access_name
00000000010ef9a0 l     O .data	0000000000000018              all_setup_timers_data
0000000001065480 l     O .data.rel.ro	0000000000000060              field_types
0000000000cd9a40 l     O .rodata	0000000000000035              table_setup_timers::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cd9a80 l     O .rodata	0000000000000057              table_setup_timers::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000cd9b20 l     O .rodata	0000000000000069              table_setup_timers::update_row_values(TABLE*, unsigned char const*, unsigned char*, Field**)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_sync_instances.cc
00000000009122f8 l     F .text	0000000000000028              my_atomic_load32(int volatile*)
0000000000912320 l     F .text	0000000000000067              bitmap_is_set
0000000000cd9ea0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000cd9bf8 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cd9c00 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cd9c04 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cd9c08 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cd9c0c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cd9c10 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010654e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001065540 l     O .data.rel.ro	0000000000000090              mutex_field_types
0000000000cd9e00 l     O .rodata	0000000000000038              table_mutex_instances::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cd9e40 l     O .rodata	000000000000005a              table_mutex_instances::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
00000000010655e0 l     O .data.rel.ro	00000000000000c0              rwlock_field_types
0000000000cd9ee0 l     O .rodata	0000000000000039              table_rwlock_instances::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cd9f20 l     O .rodata	000000000000005b              table_rwlock_instances::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
00000000010656a0 l     O .data.rel.ro	0000000000000060              cond_field_types
0000000000cd9f80 l     O .rodata	0000000000000037              table_cond_instances::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cd9fc0 l     O .rodata	0000000000000059              table_cond_instances::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_threads.cc
000000000091332a l     F .text	0000000000000067              bitmap_is_set
0000000000cda240 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000913391 l     F .text	0000000000000028              my_atomic_load32(int volatile*)
0000000000cda078 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cda080 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cda084 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cda088 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cda08c l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cda090 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001065700 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000001065760 l     O .data.rel.ro	0000000000000090              field_types
0000000000cda1a0 l     O .rodata	0000000000000030              table_threads::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000cda1e0 l     O .rodata	0000000000000052              table_threads::read_row_values(TABLE*, unsigned char*, Field**, bool)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              pfs_atomic.cc
0000000000000000 l    df *ABS*	0000000000000000              pfs_check.cc
0000000000cda270 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cda278 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cda27c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cda280 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cda284 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cda288 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001065800 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000000000 l    df *ABS*	0000000000000000              pfs.cc
00000000010efc00 l     O .data	0000000000000008              mutex_operation_map
00000000010efc10 l     O .data	0000000000000010              rwlock_operation_map
00000000010efc20 l     O .data	0000000000000008              cond_operation_map
00000000010efc40 l     O .data	0000000000000044              file_operation_map
00000000009139dd l     F .text	000000000000012a              build_prefix(st_mysql_lex_string const*, char const*, char*, int*)
0000000000913b07 l     F .text	0000000000000258              register_mutex_v1
0000000000cda760 l     O .rodata	000000000000003d              register_mutex_v1::__PRETTY_FUNCTION__
0000000000913d5f l     F .text	0000000000000258              register_rwlock_v1
0000000000cda7a0 l     O .rodata	000000000000003f              register_rwlock_v1::__PRETTY_FUNCTION__
0000000000913fb7 l     F .text	0000000000000258              register_cond_v1
0000000000cda7e0 l     O .rodata	000000000000003b              register_cond_v1::__PRETTY_FUNCTION__
000000000091420f l     F .text	0000000000000258              register_thread_v1
0000000000cda820 l     O .rodata	000000000000003f              register_thread_v1::__PRETTY_FUNCTION__
0000000000914467 l     F .text	0000000000000258              register_file_v1
0000000000cda860 l     O .rodata	000000000000003b              register_file_v1::__PRETTY_FUNCTION__
00000000009146bf l     F .text	00000000000000ab              init_mutex_v1
000000000091476a l     F .text	0000000000000023              destroy_mutex_v1
000000000091478d l     F .text	00000000000000ab              init_rwlock_v1
0000000000914838 l     F .text	0000000000000023              destroy_rwlock_v1
000000000091485b l     F .text	00000000000000ab              init_cond_v1
0000000000914906 l     F .text	0000000000000023              destroy_cond_v1
0000000000914929 l     F .text	000000000000001d              get_table_share_v1
0000000000914946 l     F .text	000000000000000b              release_table_share_v1
0000000000914951 l     F .text	000000000000005b              open_table_v1
0000000000cda8a0 l     O .rodata	0000000000000038              open_table_v1::__PRETTY_FUNCTION__
00000000009149ac l     F .text	0000000000000049              close_table_v1
0000000000cda8e0 l     O .rodata	0000000000000020              close_table_v1::__PRETTY_FUNCTION__
00000000009149f5 l     F .text	000000000000012e              create_file_v1
0000000000914bd2 l     F .text	00000000000000de              spawn_thread_v1
0000000000914cb0 l     F .text	000000000000005c              new_thread_v1
0000000000914d0c l     F .text	000000000000004d              set_thread_id_v1
0000000000cda900 l     O .rodata	0000000000000036              set_thread_id_v1::__PRETTY_FUNCTION__
0000000000914d59 l     F .text	0000000000000022              get_thread_v1
0000000000914d7b l     F .text	000000000000002e              set_thread_v1
0000000000914da9 l     F .text	0000000000000047              delete_current_thread_v1
0000000000914df0 l     F .text	000000000000002a              delete_thread_v1
0000000000914e1a l     F .text	000000000000026d              get_thread_mutex_locker_v1
0000000000cda940 l     O .rodata	0000000000000067              get_thread_mutex_locker_v1::__PRETTY_FUNCTION__
0000000000915087 l     F .text	000000000000026d              get_thread_rwlock_locker_v1
0000000000cda9c0 l     O .rodata	000000000000006c              get_thread_rwlock_locker_v1::__PRETTY_FUNCTION__
00000000009152f4 l     F .text	0000000000000271              get_thread_cond_locker_v1
0000000000cdaa40 l     O .rodata	000000000000006e              get_thread_cond_locker_v1::__PRETTY_FUNCTION__
0000000000915565 l     F .text	00000000000001fc              get_thread_table_locker_v1
0000000000cdaac0 l     O .rodata	0000000000000052              get_thread_table_locker_v1::__PRETTY_FUNCTION__
0000000000915761 l     F .text	00000000000002a5              get_thread_file_name_locker_v1
0000000000cdab20 l     O .rodata	0000000000000084              get_thread_file_name_locker_v1::__PRETTY_FUNCTION__
0000000000915a06 l     F .text	0000000000000296              get_thread_file_stream_locker_v1
0000000000cdabc0 l     O .rodata	0000000000000069              get_thread_file_stream_locker_v1::__PRETTY_FUNCTION__
0000000000915c9c l     F .text	0000000000000300              get_thread_file_descriptor_locker_v1
0000000000cdac40 l     O .rodata	0000000000000068              get_thread_file_descriptor_locker_v1::__PRETTY_FUNCTION__
0000000000915f9c l     F .text	0000000000000058              unlock_mutex_v1
0000000000cdacc0 l     O .rodata	0000000000000021              unlock_mutex_v1::__PRETTY_FUNCTION__
0000000000915ff4 l     F .text	00000000000000bd              unlock_rwlock_v1
0000000000cdad00 l     O .rodata	0000000000000023              unlock_rwlock_v1::__PRETTY_FUNCTION__
00000000009160b1 l     F .text	0000000000000051              signal_cond_v1
0000000000cdad30 l     O .rodata	000000000000001f              signal_cond_v1::__PRETTY_FUNCTION__
0000000000916102 l     F .text	0000000000000051              broadcast_cond_v1
0000000000cdad60 l     O .rodata	0000000000000022              broadcast_cond_v1::__PRETTY_FUNCTION__
0000000000916153 l     F .text	0000000000000095              start_mutex_wait_v1
0000000000cdada0 l     O .rodata	000000000000003f              start_mutex_wait_v1::__PRETTY_FUNCTION__
00000000009161e8 l     F .text	0000000000000191              end_mutex_wait_v1
0000000000cdade0 l     O .rodata	000000000000002f              end_mutex_wait_v1::__PRETTY_FUNCTION__
0000000000916379 l     F .text	0000000000000095              start_rwlock_rdwait_v1
0000000000cdae20 l     O .rodata	0000000000000043              start_rwlock_rdwait_v1::__PRETTY_FUNCTION__
000000000091640e l     F .text	00000000000001b5              end_rwlock_rdwait_v1
0000000000cdae80 l     O .rodata	0000000000000033              end_rwlock_rdwait_v1::__PRETTY_FUNCTION__
00000000009165c3 l     F .text	0000000000000095              start_rwlock_wrwait_v1
0000000000cdaec0 l     O .rodata	0000000000000043              start_rwlock_wrwait_v1::__PRETTY_FUNCTION__
0000000000916658 l     F .text	00000000000001b1              end_rwlock_wrwait_v1
0000000000cdaf20 l     O .rodata	0000000000000033              end_rwlock_wrwait_v1::__PRETTY_FUNCTION__
0000000000916809 l     F .text	0000000000000095              start_cond_wait_v1
0000000000cdaf60 l     O .rodata	000000000000003d              start_cond_wait_v1::__PRETTY_FUNCTION__
000000000091689e l     F .text	000000000000016e              end_cond_wait_v1
0000000000cdafa0 l     O .rodata	000000000000002d              end_cond_wait_v1::__PRETTY_FUNCTION__
0000000000916a0c l     F .text	00000000000000f8              start_table_wait_v1
0000000000cdafe0 l     O .rodata	000000000000003f              start_table_wait_v1::__PRETTY_FUNCTION__
0000000000916b04 l     F .text	0000000000000123              end_table_wait_v1
0000000000cdb020 l     O .rodata	000000000000002a              end_table_wait_v1::__PRETTY_FUNCTION__
0000000000916c27 l     F .text	000000000000006b              start_file_open_wait_v1
0000000000cdb060 l     O .rodata	0000000000000047              start_file_open_wait_v1::__PRETTY_FUNCTION__
0000000000916daf l     F .text	00000000000000a5              start_file_wait_v1
0000000000916c92 l     F .text	0000000000000020              end_file_open_wait_v1
0000000000916e54 l     F .text	00000000000002cc              end_file_wait_v1
0000000000916cb2 l     F .text	00000000000000fd              end_file_open_wait_and_bind_to_descriptor_v1
0000000000cdb0c0 l     O .rodata	000000000000004a              end_file_open_wait_and_bind_to_descriptor_v1::__PRETTY_FUNCTION__
0000000000cdb120 l     O .rodata	0000000000000045              start_file_wait_v1::__PRETTY_FUNCTION__
0000000000cdb180 l     O .rodata	0000000000000030              end_file_wait_v1::__PRETTY_FUNCTION__
0000000000917120 l     F .text	000000000000001f              get_interface
0000000000000000 l    df *ABS*	0000000000000000              pfs_events_waits.cc
0000000000917215 l     F .text	000000000000001e              my_atomic_add32(int volatile*, int)
0000000000917233 l     F .text	0000000000000017              my_atomic_store32(int volatile*, int)
0000000000917307 l     F .text	000000000000002b              copy_events_waits(PFS_events_waits*, PFS_events_waits const*)
0000000000000000 l    df *ABS*	0000000000000000              pfs_global.cc
0000000000cdb220 l     O .rodata	000000000000001e              pfs_malloc(unsigned long, int)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              table_all_instr.cc
0000000000cdb240 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cdb248 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cdb24c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cdb250 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cdb254 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cdb258 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001065860 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000cdb360 l     O .rodata	0000000000000032              table_all_instr::rnd_pos(void const*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              ft_parser.c
0000000000918433 l     F .text	0000000000000051              FT_WORD_cmp
0000000000918484 l     F .text	00000000000000b5              walk_and_copy
00000000009190a5 l     F .text	0000000000000170              ft_add_word
0000000000cdb470 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.12566
0000000000919215 l     F .text	0000000000000106              ft_parse_internal
0000000000cdb480 l     O .rodata	0000000000000009              __PRETTY_FUNCTION__.12591
0000000000cdb490 l     O .rodata	000000000000001a              __PRETTY_FUNCTION__.12602
0000000000000000 l    df *ABS*	0000000000000000              ft_static.c
000000000091979f l     F .text	000000000000002d              ft_default_parser_parse
0000000000000000 l    df *ABS*	0000000000000000              ha_myisam.cc
00000000009197cc l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000009198e3 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000919960 l     F .text	0000000000000025              my_bit_log2
0000000000919985 l     F .text	00000000000000e1              my_count_bits
0000000000cdd490 l     O .rodata	000000000000001c              handler::~handler()::__PRETTY_FUNCTION__
0000000000cdd460 l     O .rodata	000000000000002d              handler::exec_bulk_update(unsigned int*)::__PRETTY_FUNCTION__
0000000000cdd420 l     O .rodata	0000000000000027              handler::end_bulk_delete()::__PRETTY_FUNCTION__
0000000000cdd3c0 l     O .rodata	0000000000000042              handler::bulk_update_row(unsigned char const*, unsigned char*, unsigned int*)::__PRETTY_FUNCTION__
0000000000cdc360 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cdd160 l     O .rodata	0000000000000037              CSET_STRING::CSET_STRING(char*, unsigned long, charset_info_st*)::__PRETTY_FUNCTION__
0000000000cdc3c0 l     O .rodata	0000000000000004              SRID_SIZE
0000000000cdc3c4 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000cdc3c8 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000cdc3cc l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000cdc3d0 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010658c0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
000000000138e320 l     O .bss	0000000000000008              opt_myisam_block_size
00000000010f1020 l     O .data	0000000000000050              mysql_sysvar_block_size
00000000010f1200 l     O .data	0000000000000050              mysql_sysvar_data_pointer_size
00000000010f1260 l     O .data	0000000000000050              mysql_sysvar_max_sort_file_size
00000000010f12c0 l     O .data	0000000000000040              mysql_sysvar_recover_options
00000000010f1080 l     O .data	0000000000000058              mysql_sysvar_repair_threads
00000000010f10e0 l     O .data	0000000000000058              mysql_sysvar_sort_buffer_size
00000000010f1300 l     O .data	0000000000000038              mysql_sysvar_use_mmap
00000000010f1340 l     O .data	0000000000000050              mysql_sysvar_mmap_size
00000000010f13a0 l     O .data	0000000000000048              mysql_sysvar_stats_method
0000000000919a66 l     F .text	00000000000000f8              debug_wait_for_kill(char const*)
0000000000cdd110 l     O .rodata	0000000000000014              debug_wait_for_kill(char const*)::__FUNCTION__
0000000000919b5e l     F .text	0000000000000050              myisam_create_handler(handlerton*, TABLE_SHARE*, st_mem_root*)
0000000000919bae l     F .text	0000000000000318              mi_check_print_msg(st_mi_check_param*, char const*, char const*, __va_list_tag*)
00000000010f1140 l     O .data	0000000000000018              ha_myisam_exts
000000000091be97 l     F .text	0000000000000025              myisam_is_supported_system_table(char const*, char const*, bool)
0000000000cdd124 l     O .rodata	0000000000000006              ha_myisam::check(THD*, st_ha_check_opt*)::__FUNCTION__
0000000000cdd12a l     O .rodata	0000000000000007              ha_myisam::repair(THD*, st_mi_check_param&, bool)::__FUNCTION__
0000000000cdd138 l     O .rodata	000000000000000f              ha_myisam::enable_indexes(unsigned int)::__FUNCTION__
0000000000cdd1a0 l     O .rodata	000000000000005c              ha_myisam::index_read_map(unsigned char*, unsigned char const*, unsigned long, ha_rkey_function)::__PRETTY_FUNCTION__
0000000000cdd200 l     O .rodata	000000000000004f              ha_myisam::index_read_last_map(unsigned char*, unsigned char const*, unsigned long)::__PRETTY_FUNCTION__
0000000000cdd260 l     O .rodata	000000000000002a              ha_myisam::index_next(unsigned char*)::__PRETTY_FUNCTION__
0000000000cdd2a0 l     O .rodata	000000000000002a              ha_myisam::index_prev(unsigned char*)::__PRETTY_FUNCTION__
0000000000cdd2e0 l     O .rodata	000000000000002b              ha_myisam::index_first(unsigned char*)::__PRETTY_FUNCTION__
0000000000cdd320 l     O .rodata	000000000000002a              ha_myisam::index_last(unsigned char*)::__PRETTY_FUNCTION__
0000000000cdd360 l     O .rodata	0000000000000043              ha_myisam::index_next_same(unsigned char*, unsigned char const*, unsigned int)::__PRETTY_FUNCTION__
00000000009203fe l     F .text	00000000000000d2              myisam_init(void*)
00000000010f1160 l     O .data	0000000000000050              myisam_sysvars
0000000000000000 l    df *ABS*	0000000000000000              ft_stopwords.c
000000000138e328 l     O .bss	0000000000000008              ft_stopword_cs
000000000138e330 l     O .bss	0000000000000008              stopwords3
000000000092081f l     F .text	0000000000000054              FT_STOPWORD_cmp
0000000000920873 l     F .text	000000000000002b              FT_STOPWORD_free
000000000092089e l     F .text	000000000000009d              ft_add_stopword
0000000000000000 l    df *ABS*	0000000000000000              mi_check.c
0000000000920c8d l     F .text	0000000000000071              inline_mysql_mutex_init
0000000000920cfe l     F .text	0000000000000080              inline_mysql_mutex_destroy
0000000000920d7e l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000920e95 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000920f12 l     F .text	0000000000000065              inline_mysql_cond_init
0000000000920f77 l     F .text	000000000000006f              inline_mysql_cond_destroy
0000000000920fe6 l     F .text	0000000000000133              inline_mysql_cond_wait
0000000000921119 l     F .text	000000000000007e              inline_mysql_thread_create
0000000000921197 l     F .text	0000000000000121              inline_mysql_file_chsize
00000000009212b8 l     F .text	000000000000012b              inline_mysql_file_create
00000000009213e3 l     F .text	0000000000000100              inline_mysql_file_close
00000000009214e3 l     F .text	000000000000017c              inline_mysql_file_read
000000000092165f l     F .text	0000000000000174              inline_mysql_file_write
00000000009217d3 l     F .text	0000000000000176              inline_mysql_file_pread
0000000000921949 l     F .text	0000000000000176              inline_mysql_file_pwrite
0000000000921abf l     F .text	000000000000011c              inline_mysql_file_seek
0000000000921bdb l     F .text	000000000000011f              inline_mysql_file_delete
00000000009225f6 l     F .text	000000000000046c              check_k_link
0000000000924d6b l     F .text	00000000000000e5              calc_checksum
00000000009241dc l     F .text	0000000000000b8f              chk_index
0000000000924e50 l     F .text	00000000000000cd              isam_key_length
0000000000923d86 l     F .text	0000000000000309              chk_index_down
000000000092408f l     F .text	000000000000006f              mi_collect_stats_nonulls_first
0000000000931d2e l     F .text	00000000000001e4              ha_find_null
00000000009240fe l     F .text	00000000000000de              mi_collect_stats_nonulls_next
0000000000931974 l     F .text	0000000000000060              mi_byte_checksum
0000000000cdf290 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.12756
0000000000926c7b l     F .text	000000000000031c              mi_drop_all_indexes
0000000000cdf2a0 l     O .rodata	000000000000000a              __PRETTY_FUNCTION__.12806
0000000000931c23 l     F .text	000000000000010b              set_data_file_type
0000000000927fc5 l     F .text	0000000000000370              writekeys
000000000092cce6 l     F .text	0000000000001921              sort_get_next_record
0000000000928d2e l     F .text	0000000000000681              sort_one_index
0000000000cdf2b0 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.12906
0000000000930487 l     F .text	0000000000000117              alloc_key_blocks
000000000092edfe l     F .text	000000000000006c              sort_key_cmp
000000000092caac l     F .text	000000000000023a              sort_ft_key_read
000000000092f4b2 l     F .text	00000000000003bb              sort_ft_key_write
000000000092c946 l     F .text	0000000000000166              sort_key_read
000000000092ee6a l     F .text	000000000000037f              sort_key_write
0000000000cdf2c0 l     O .rodata	0000000000000015              __PRETTY_FUNCTION__.13082
0000000000cdf2e0 l     O .rodata	0000000000000012              __PRETTY_FUNCTION__.13104
000000000092f86d l     F .text	0000000000000043              get_record_for_key
000000000092fe6a l     F .text	0000000000000357              sort_delete_record
000000000092f8b0 l     F .text	00000000000005ba              sort_insert_key
00000000009319d4 l     F .text	00000000000000a9              mi_too_big_key_for_sort
0000000000cdf300 l     O .rodata	000000000000001c              __PRETTY_FUNCTION__.13336
0000000000cdf320 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.13386
0000000000000000 l    df *ABS*	0000000000000000              mi_checksum.c
0000000000000000 l    df *ABS*	0000000000000000              mi_close.c
00000000009320dd l     F .text	0000000000000080              inline_mysql_mutex_destroy
000000000093215d l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000932274 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000009322f1 l     F .text	000000000000006f              inline_mysql_rwlock_destroy
0000000000932360 l     F .text	0000000000000100              inline_mysql_file_close
0000000000000000 l    df *ABS*	0000000000000000              mi_create.c
000000000093298e l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000932aa5 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000932b22 l     F .text	0000000000000121              inline_mysql_file_chsize
0000000000932c43 l     F .text	0000000000000100              inline_mysql_file_close
0000000000932d43 l     F .text	0000000000000102              inline_mysql_file_tell
0000000000932e45 l     F .text	0000000000000132              inline_mysql_file_create_with_symlink
0000000000932f77 l     F .text	000000000000011f              inline_mysql_file_delete_with_symlink
0000000000933096 l     F .text	000000000000003f              my_round_up_to_next_power
0000000000cdf6c0 l     O .rodata	000000000000000a              __PRETTY_FUNCTION__.12493
0000000000cdf6d0 l     O .rodata	0000000000000016              __PRETTY_FUNCTION__.12561
0000000000000000 l    df *ABS*	0000000000000000              mi_dbug.c
0000000000000000 l    df *ABS*	0000000000000000              mi_delete.c
000000000093689b l     F .text	000000000000030b              _mi_ck_real_delete
0000000000936ba6 l     F .text	0000000000000c6f              d_search
0000000000cdfa40 l     O .rodata	0000000000000009              __PRETTY_FUNCTION__.12321
0000000000939862 l     F .text	000000000000077b              remove_key
0000000000937815 l     F .text	000000000000091d              del
0000000000938132 l     F .text	0000000000001730              underflow
0000000000000000 l    df *ABS*	0000000000000000              mi_delete_all.c
0000000000939fdd l     F .text	0000000000000121              inline_mysql_file_chsize
0000000000000000 l    df *ABS*	0000000000000000              mi_delete_table.c
000000000093a44c l     F .text	000000000000011f              inline_mysql_file_delete
000000000093a56b l     F .text	000000000000011f              inline_mysql_file_delete_with_symlink
0000000000000000 l    df *ABS*	0000000000000000              mi_dynrec.c
000000000093a8ee l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
000000000093a9f9 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
000000000093aa65 l     F .text	000000000000017c              inline_mysql_file_read
000000000093abe1 l     F .text	0000000000000176              inline_mysql_file_pread
000000000093ad57 l     F .text	0000000000000176              inline_mysql_file_pwrite
000000000093aecd l     F .text	000000000000011c              inline_mysql_file_seek
000000000138e340 l     O .bss	0000000000000010              zero_string
000000000093b94b l     F .text	00000000000001bd              write_dynamic_record
000000000093d907 l     F .text	00000000000008a1              update_dynamic_record
0000000000cdfe80 l     O .rodata	0000000000000016              __PRETTY_FUNCTION__.12203
000000000093c42c l     F .text	000000000000048e              delete_dynamic_record
000000000093bb08 l     F .text	0000000000000324              _mi_find_writepos
000000000093be2c l     F .text	000000000000041d              unlink_deleted_block
000000000093c249 l     F .text	00000000000001e3              update_backward_delete_link
000000000093feda l     F .text	00000000000001d0              _mi_cmp_buffer
0000000000000000 l    df *ABS*	0000000000000000              mi_extra.c
000000000094146f l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000941586 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000941603 l     F .text	0000000000000107              inline_mysql_file_sync
00000000009425b5 l     F .text	00000000000000f7              mi_extra_keyflag
0000000000000000 l    df *ABS*	0000000000000000              mi_info.c
000000000094283f l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000942956 l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000009429d3 l     F .text	0000000000000110              inline_mysql_file_fstat
0000000000000000 l    df *ABS*	0000000000000000              mi_key.c
0000000000ce0158 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.12186
0000000000944031 l     F .text	0000000000000775              _mi_put_key_in_record
0000000000ce0170 l     O .rodata	0000000000000018              __PRETTY_FUNCTION__.12261
0000000000000000 l    df *ABS*	0000000000000000              mi_keycache.c
0000000000944d3e l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000944e55 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000000000 l    df *ABS*	0000000000000000              mi_locking.c
0000000000945215 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000094532c l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000009453a9 l     F .text	000000000000010b              inline_mysql_rwlock_wrlock
00000000009454b4 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000945520 l     F .text	0000000000000176              inline_mysql_file_pwrite
0000000000945696 l     F .text	0000000000000107              inline_mysql_file_sync
0000000000000000 l    df *ABS*	0000000000000000              mi_log.c
0000000000946fe6 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000009470fd l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000094717a l     F .text	000000000000012b              inline_mysql_file_create
00000000009472a5 l     F .text	0000000000000100              inline_mysql_file_close
00000000009473a5 l     F .text	0000000000000174              inline_mysql_file_write
000000000138e358 l     O .bss	0000000000000004              log_type
0000000000000000 l    df *ABS*	0000000000000000              mi_open.c
0000000000947e63 l     F .text	0000000000000071              inline_mysql_mutex_init
0000000000947ed4 l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000947feb l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000948068 l     F .text	000000000000005f              inline_mysql_rwlock_init
00000000009480c7 l     F .text	000000000000012a              inline_mysql_file_open
00000000009481f1 l     F .text	0000000000000100              inline_mysql_file_close
00000000009482f1 l     F .text	000000000000017c              inline_mysql_file_read
000000000094846d l     F .text	0000000000000174              inline_mysql_file_write
00000000009485e1 l     F .text	0000000000000176              inline_mysql_file_pread
0000000000948757 l     F .text	0000000000000176              inline_mysql_file_pwrite
00000000009488cd l     F .text	000000000000011c              inline_mysql_file_seek
000000000094b8df l     F .text	000000000000016f              setup_key_functions
0000000000000000 l    df *ABS*	0000000000000000              mi_packrec.c
00000000009502ab l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000009503c2 l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000095043f l     F .text	000000000000017c              inline_mysql_file_read
00000000009505bb l     F .text	000000000000011c              inline_mysql_file_seek
00000000010f14e0 l     O .data	0000000000000084              mask
00000000009545de l     F .text	000000000000001c              max_bit
000000000095446a l     F .text	0000000000000053              init_bit_buffer
00000000009544bd l     F .text	000000000000007e              fill_and_get_bits
0000000000952566 l     F .text	0000000000000194              get_unpack_function
000000000095144e l     F .text	00000000000008f5              read_huff_table
000000000095453b l     F .text	00000000000000a3              fill_buffer
0000000000952106 l     F .text	0000000000000127              find_longest_bitstream
0000000000951d43 l     F .text	00000000000001b9              make_quick_table
0000000000951fae l     F .text	0000000000000158              copy_decode_table
0000000000951efc l     F .text	00000000000000b2              fill_quick_table
00000000009526fa l     F .text	00000000000000e1              uf_zerofill_skip_zero
00000000009527db l     F .text	00000000000000b7              uf_skip_zero
0000000000952892 l     F .text	00000000000000b8              uf_space_normal
000000000095353a l     F .text	000000000000005d              uf_zerofill_normal
0000000000953b08 l     F .text	000000000000035f              decode_bytes
000000000095294a l     F .text	0000000000000209              uf_space_endspace_selected
0000000000952cd4 l     F .text	000000000000018a              uf_space_endspace
0000000000952b53 l     F .text	0000000000000181              uf_endspace_selected
0000000000952e5e l     F .text	0000000000000102              uf_endspace
0000000000952f60 l     F .text	00000000000001fa              uf_space_prespace_selected
00000000009532cc l     F .text	000000000000017b              uf_space_prespace
000000000095315a l     F .text	0000000000000172              uf_prespace_selected
0000000000953447 l     F .text	00000000000000f3              uf_prespace
0000000000953597 l     F .text	0000000000000047              uf_constant
00000000009535de l     F .text	000000000000007c              uf_intervall
000000000095365a l     F .text	000000000000003c              uf_zero
0000000000953696 l     F .text	00000000000001e7              uf_blob
000000000095387d l     F .text	0000000000000134              uf_varchar1
00000000009539b1 l     F .text	0000000000000157              uf_varchar2
0000000000953e67 l     F .text	00000000000000b4              decode_pos
0000000000954b06 l     F .text	000000000000014b              _mi_read_mempack_record
0000000000954c51 l     F .text	0000000000000200              _mi_read_rnd_mempack_record
0000000000ce0be8 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.12669
0000000000954a29 l     F .text	00000000000000dd              _mi_mempack_get_block_info
0000000000ce0c00 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.12704
0000000000000000 l    df *ABS*	0000000000000000              mi_page.c
0000000000000000 l    df *ABS*	0000000000000000              mi_panic.c
000000000095595d l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000955a74 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000000000 l    df *ABS*	0000000000000000              mi_preload.c
0000000000955dec l     F .text	0000000000000176              inline_mysql_file_pread
0000000000ce0e60 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.12132
0000000000000000 l    df *ABS*	0000000000000000              mi_range.c
000000000095637e l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
0000000000956489 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
000000000095685a l     F .text	000000000000032c              _mi_record_pos
0000000000ce0f78 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.12205
0000000000956b86 l     F .text	00000000000003d3              _mi_search_pos
0000000000956f59 l     F .text	00000000000001e0              _mi_keynr
0000000000000000 l    df *ABS*	0000000000000000              mi_rename.c
0000000000957139 l     F .text	000000000000012e              inline_mysql_file_rename_with_symlink
0000000000000000 l    df *ABS*	0000000000000000              mi_rfirst.c
0000000000000000 l    df *ABS*	0000000000000000              mi_rlast.c
0000000000000000 l    df *ABS*	0000000000000000              mi_rnext.c
0000000000957572 l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
000000000095767d l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000000000 l    df *ABS*	0000000000000000              mi_rnext_same.c
0000000000957c67 l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
0000000000957d72 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000000000 l    df *ABS*	0000000000000000              mi_rprev.c
00000000009581eb l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
00000000009582f6 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000000000 l    df *ABS*	0000000000000000              mi_rrnd.c
0000000000000000 l    df *ABS*	0000000000000000              mi_scan.c
0000000000000000 l    df *ABS*	0000000000000000              mi_search.c
000000000095c14c l     F .text	000000000000019f              _mi_get_prev_key
0000000000ce1780 l     O .rodata	0000000000000012              __PRETTY_FUNCTION__.12317
0000000000000000 l    df *ABS*	0000000000000000              mi_static.c
000000000095e3eb l     F .text	000000000000000f              always_valid
00000000010f1640 l     O .data	0000000000000048              all_myisam_mutexes
00000000010f16a0 l     O .data	0000000000000030              all_myisam_rwlocks
00000000010f16d0 l     O .data	0000000000000018              all_myisam_conds
00000000010f1700 l     O .data	0000000000000060              all_myisam_files
00000000010f1760 l     O .data	0000000000000018              all_myisam_threads
0000000000000000 l    df *ABS*	0000000000000000              mi_statrec.c
0000000000000000 l    df *ABS*	0000000000000000              mi_unique.c
0000000000000000 l    df *ABS*	0000000000000000              mi_update.c
0000000000000000 l    df *ABS*	0000000000000000              mi_write.c
0000000000960a93 l     F .text	000000000000010b              inline_mysql_rwlock_wrlock
0000000000960b9e l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000961c98 l     F .text	000000000000073c              w_search
0000000000ce1e10 l     O .rodata	0000000000000009              __PRETTY_FUNCTION__.12351
0000000000ce1e20 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.12379
000000000096373b l     F .text	0000000000000b8a              _mi_balance_page
00000000009633f5 l     F .text	0000000000000346              _mi_find_last_pos
00000000009643b4 l     F .text	000000000000008e              keys_compare
0000000000964442 l     F .text	0000000000000210              keys_free
0000000000ce1e30 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.12526
0000000000000000 l    df *ABS*	0000000000000000              rt_index.c
0000000000964b8c l     F .text	0000000000000431              rtree_find_req
00000000009652d3 l     F .text	00000000000003f6              rtree_get_req
000000000096595c l     F .text	0000000000000176              rtree_pick_key
0000000000965ad2 l     F .text	00000000000003d5              rtree_insert_req
0000000000965ea7 l     F .text	000000000000052d              rtree_insert_level
0000000000966472 l     F .text	0000000000000164              rtree_fill_reinsert_list
00000000009665d6 l     F .text	00000000000005a3              rtree_delete_req
0000000000000000 l    df *ABS*	0000000000000000              rt_key.c
0000000000ce21e8 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.12232
0000000000000000 l    df *ABS*	0000000000000000              rt_mbr.c
0000000000ce2420 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.12215
0000000000000000 l    df *ABS*	0000000000000000              rt_split.c
000000000097549a l     F .text	0000000000000037              reserve_coords
00000000009754d1 l     F .text	0000000000000096              mbr_join
0000000000975567 l     F .text	00000000000000f6              mbr_join_square
000000000097565d l     F .text	000000000000006b              count_square
00000000009756c8 l     F .text	0000000000000035              copy_coords
00000000009756fd l     F .text	0000000000000120              pick_seeds
000000000097581d l     F .text	000000000000011b              pick_next
0000000000975938 l     F .text	0000000000000059              mark_all_entries
0000000000975991 l     F .text	000000000000026f              split_rtree_node
0000000000000000 l    df *ABS*	0000000000000000              sort.c
00000000009762b7 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000009763ce l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000097644b l     F .text	000000000000006c              inline_mysql_cond_signal
00000000009764b7 l     F .text	0000000000000176              inline_mysql_file_pread
0000000000978898 l     F .text	00000000000001a0              write_keys_varlen
0000000000979219 l     F .text	000000000000019d              read_to_buffer_varlen
00000000009793b6 l     F .text	000000000000006b              write_merge_key_varlen
0000000000978535 l     F .text	000000000000020b              write_keys
000000000097912b l     F .text	00000000000000ee              read_to_buffer
0000000000979421 l     F .text	00000000000000a6              write_merge_key
0000000000976f3e l     F .text	000000000000030f              find_all_keys
0000000000978c14 l     F .text	00000000000000e1              write_index
0000000000978cf5 l     F .text	0000000000000436              merge_many_buff
0000000000979bcf l     F .text	00000000000000e2              merge_index
0000000000979cb1 l     F .text	0000000000000065              flush_ft_buf
0000000000978a38 l     F .text	00000000000001dc              write_key
0000000000978740 l     F .text	0000000000000158              my_var_write
00000000009794c7 l     F .text	0000000000000708              merge_buffers
0000000000ce2810 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.12487
0000000000ce2820 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.12548
0000000000000000 l    df *ABS*	0000000000000000              sp_key.c
0000000000979ff9 l     F .text	0000000000000098              sp_mbr_from_wkb
0000000000ce2908 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.12187
000000000097a3b4 l     F .text	0000000000000486              sp_get_geometry_mbr
000000000097a091 l     F .text	00000000000000f8              sp_add_point_to_mbr
000000000097a189 l     F .text	000000000000003c              sp_get_point_mbr
000000000097a1c5 l     F .text	00000000000000bc              sp_get_linestring_mbr
000000000097a281 l     F .text	0000000000000133              sp_get_polygon_mbr
0000000000000000 l    df *ABS*	0000000000000000              mi_rkey.c
000000000097a83a l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
000000000097a945 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
0000000000ce29c8 l     O .rodata	0000000000000008              __PRETTY_FUNCTION__.12174
0000000000000000 l    df *ABS*	0000000000000000              ft_boolean_search.c
000000000097b193 l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
000000000097b29e l     F .text	000000000000006c              inline_mysql_rwlock_unlock
00000000010f1780 l     O .data	0000000000000058              _wghts
00000000010f1838 l     O .data	0000000000000008              wghts
00000000010f17e0 l     O .data	0000000000000058              _nwghts
00000000010f1840 l     O .data	0000000000000008              nwghts
000000000097b30a l     F .text	00000000000000a7              FTB_WORD_cmp
000000000097b3b1 l     F .text	00000000000000b7              FTB_WORD_cmp_list
000000000097b468 l     F .text	000000000000061e              ftb_query_add_word
0000000000ce2ab0 l     O .rodata	0000000000000013              __PRETTY_FUNCTION__.12450
000000000097ba86 l     F .text	00000000000000c3              ftb_parse_query_internal
000000000097bb49 l     F .text	000000000000019b              _ftb_parse_query
0000000000ce2ad0 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.12476
000000000097bce4 l     F .text	0000000000000043              _ftb_no_dupes_cmp
000000000097bd27 l     F .text	000000000000064d              _ft2_search_no_lock
0000000000ce2af0 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.12504
000000000097c374 l     F .text	00000000000000b9              _ft2_search
000000000097c42d l     F .text	000000000000021e              _ftb_init_index_search
0000000000ce2b10 l     O .rodata	0000000000000017              __PRETTY_FUNCTION__.12539
000000000097ca40 l     F .text	0000000000000151              ftb_phrase_add_word
000000000097cb91 l     F .text	00000000000000a9              ftb_check_phrase_internal
000000000097cc3a l     F .text	00000000000001bd              _ftb_check_phrase
0000000000ce2b30 l     O .rodata	0000000000000012              __PRETTY_FUNCTION__.12591
000000000097cdf7 l     F .text	0000000000000380              _ftb_climb_the_tree
000000000097d4a1 l     F .text	00000000000001f4              ftb_find_relevance_add_word
000000000097d695 l     F .text	00000000000000a6              ftb_find_relevance_parse
0000000000000000 l    df *ABS*	0000000000000000              ft_nlq_search.c
000000000097db45 l     F .text	000000000000010b              inline_mysql_rwlock_rdlock
000000000097dc50 l     F .text	000000000000006c              inline_mysql_rwlock_unlock
000000000097dcbc l     F .text	000000000000004b              FT_SUPERDOC_cmp
000000000097dd07 l     F .text	0000000000000a78              walk_and_match
000000000097e77f l     F .text	00000000000000d5              walk_and_copy
000000000097e854 l     F .text	00000000000000e0              walk_and_push
000000000097e934 l     F .text	0000000000000052              FT_DOC_cmp
0000000000000000 l    df *ABS*	0000000000000000              ft_update.c
000000000097f811 l     F .text	00000000000000db              _mi_ft_store
000000000097f8ec l     F .text	00000000000000cf              _mi_ft_erase
0000000000000000 l    df *ABS*	0000000000000000              mi_cache.c
00000000009805d9 l     F .text	0000000000000176              inline_mysql_file_pread
0000000000000000 l    df *ABS*	0000000000000000              ha_heap.cc
0000000000ce2de0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000ce3390 l     O .rodata	000000000000001c              handler::~handler()::__PRETTY_FUNCTION__
0000000000ce3360 l     O .rodata	000000000000002d              handler::exec_bulk_update(unsigned int*)::__PRETTY_FUNCTION__
0000000000ce3320 l     O .rodata	0000000000000027              handler::end_bulk_delete()::__PRETTY_FUNCTION__
0000000000ce32e0 l     O .rodata	0000000000000031              handler::repair(THD*, st_ha_check_opt*)::__PRETTY_FUNCTION__
0000000000ce3280 l     O .rodata	0000000000000042              handler::bulk_update_row(unsigned char const*, unsigned char*, unsigned int*)::__PRETTY_FUNCTION__
0000000000ce2e6c l     O .rodata	0000000000000004              SRID_SIZE
0000000000ce2e70 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ce2e74 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ce2e78 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ce2e7c l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001065920 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000980bf3 l     F .text	0000000000000050              heap_create_handler(handlerton*, TABLE_SHARE*, st_mem_root*)
000000000138e378 l     O .bss	0000000000000008              ha_heap_exts
0000000000982029 l     F .text	0000000000000578              heap_prepare_hp_create_info(TABLE*, bool, st_heap_create_info*)
0000000000ce2fc0 l     O .rodata	000000000000005a              ha_heap::index_read_map(unsigned char*, unsigned char const*, unsigned long, ha_rkey_function)::__PRETTY_FUNCTION__
0000000000ce3020 l     O .rodata	000000000000004d              ha_heap::index_read_last_map(unsigned char*, unsigned char const*, unsigned long)::__PRETTY_FUNCTION__
0000000000ce3080 l     O .rodata	0000000000000028              ha_heap::index_next(unsigned char*)::__PRETTY_FUNCTION__
0000000000ce30c0 l     O .rodata	0000000000000028              ha_heap::index_prev(unsigned char*)::__PRETTY_FUNCTION__
0000000000ce3100 l     O .rodata	0000000000000029              ha_heap::index_first(unsigned char*)::__PRETTY_FUNCTION__
0000000000ce3140 l     O .rodata	0000000000000028              ha_heap::index_last(unsigned char*)::__PRETTY_FUNCTION__
0000000000ce3180 l     O .rodata	0000000000000048              ha_heap::records_in_range(unsigned int, st_key_range*, st_key_range*)::__PRETTY_FUNCTION__
0000000000ce31e0 l     O .rodata	000000000000003f              heap_prepare_hp_create_info(TABLE*, bool, st_heap_create_info*)::__PRETTY_FUNCTION__
0000000000ce3220 l     O .rodata	0000000000000042              ha_heap::create(char const*, TABLE*, st_ha_create_information*)::__PRETTY_FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              hp_delete.c
0000000000000000 l    df *ABS*	0000000000000000              hp_extra.c
00000000009834e5 l     F .text	00000000000000ab              heap_extra_keyflag
0000000000000000 l    df *ABS*	0000000000000000              hp_hash.c
0000000000ce3650 l     O .rodata	000000000000001b              __PRETTY_FUNCTION__.10818
0000000000000000 l    df *ABS*	0000000000000000              hp_info.c
0000000000000000 l    df *ABS*	0000000000000000              hp_open.c
0000000000985cd9 l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000985df0 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000000000 l    df *ABS*	0000000000000000              hp_panic.c
0000000000986411 l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000986528 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000000000 l    df *ABS*	0000000000000000              hp_rename.c
00000000009866e8 l     F .text	0000000000000117              inline_mysql_mutex_lock
00000000009867ff l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000000000 l    df *ABS*	0000000000000000              hp_rfirst.c
0000000000ce38c0 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.10553
0000000000000000 l    df *ABS*	0000000000000000              hp_rkey.c
0000000000000000 l    df *ABS*	0000000000000000              hp_rlast.c
0000000000000000 l    df *ABS*	0000000000000000              hp_rnext.c
0000000000000000 l    df *ABS*	0000000000000000              hp_rprev.c
0000000000000000 l    df *ABS*	0000000000000000              hp_rrnd.c
0000000000000000 l    df *ABS*	0000000000000000              hp_scan.c
0000000000000000 l    df *ABS*	0000000000000000              hp_static.c
00000000010f1930 l     O .data	0000000000000018              all_heap_mutexes
0000000000000000 l    df *ABS*	0000000000000000              hp_update.c
0000000000000000 l    df *ABS*	0000000000000000              hp_write.c
0000000000988491 l     F .text	000000000000023f              next_free_record_pos
0000000000988cae l     F .text	00000000000000ef              hp_find_free_hash
0000000000000000 l    df *ABS*	0000000000000000              _rectest.c
0000000000000000 l    df *ABS*	0000000000000000              hp_block.c
0000000000000000 l    df *ABS*	0000000000000000              hp_clear.c
0000000000000000 l    df *ABS*	0000000000000000              hp_close.c
00000000009895ef l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000989706 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000000000 l    df *ABS*	0000000000000000              hp_create.c
0000000000989949 l     F .text	0000000000000071              inline_mysql_mutex_init
00000000009899ba l     F .text	0000000000000080              inline_mysql_mutex_destroy
0000000000989a3a l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000989b51 l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000098a55b l     F .text	0000000000000153              init_block
000000000098a4f3 l     F .text	0000000000000068              keys_compare
000000000098a6ae l     F .text	0000000000000036              heap_try_free
0000000000000000 l    df *ABS*	0000000000000000              _check.c
000000000098b037 l     F .text	00000000000001f2              check_one_rb_key
000000000098aca9 l     F .text	000000000000038e              check_one_key
0000000000000000 l    df *ABS*	0000000000000000              ha_myisammrg.cc
0000000000ce48e0 l     O .rodata	000000000000002a              MDL_request::set_type(enum_mdl_type)::__PRETTY_FUNCTION__
0000000000ce40f0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000ce47e0 l     O .rodata	000000000000001c              handler::~handler()::__PRETTY_FUNCTION__
0000000000ce5000 l     O .rodata	000000000000002d              handler::exec_bulk_update(unsigned int*)::__PRETTY_FUNCTION__
0000000000ce4fc0 l     O .rodata	0000000000000027              handler::end_bulk_delete()::__PRETTY_FUNCTION__
0000000000ce4f80 l     O .rodata	0000000000000031              handler::repair(THD*, st_ha_check_opt*)::__PRETTY_FUNCTION__
0000000000ce4f20 l     O .rodata	0000000000000042              handler::bulk_update_row(unsigned char const*, unsigned char*, unsigned int*)::__PRETTY_FUNCTION__
0000000000ce4188 l     O .rodata	0000000000000004              SRID_SIZE
0000000000ce418c l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000ce4190 l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000ce4194 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000ce4198 l     O .rodata	0000000000000004              GET_SIZE_ERROR
0000000001065980 l     O .data.rel.ro	0000000000000050              sp_data_access_name
000000000098b22a l     F .text	0000000000000050              myisammrg_create_handler(handlerton*, TABLE_SHARE*, st_mem_root*)
00000000010f1960 l     O .data	0000000000000010              ha_myisammrg_exts
000000000098e4e1 l     F .text	0000000000000141              split_file_name(char const*, st_mysql_lex_string*, st_mysql_lex_string*)
0000000000ce4800 l     O .rodata	0000000000000044              myisammrg_parent_open_callback::__PRETTY_FUNCTION__
0000000000ce4860 l     O .rodata	0000000000000037              ha_myisammrg::open(char const*, int, unsigned int)::__PRETTY_FUNCTION__
0000000000ce48a0 l     O .rodata	0000000000000026              ha_myisammrg::add_children_list()::__PRETTY_FUNCTION__
0000000000ce4920 l     O .rodata	0000000000000040              myisammrg_attach_children_callback::__PRETTY_FUNCTION__
0000000000ce4960 l     O .rodata	0000000000000024              ha_myisammrg::attach_children()::__PRETTY_FUNCTION__
0000000000ce49a0 l     O .rodata	0000000000000024              ha_myisammrg::detach_children()::__PRETTY_FUNCTION__
0000000000ce49e0 l     O .rodata	000000000000002c              ha_myisammrg::write_row(unsigned char*)::__PRETTY_FUNCTION__
0000000000ce4a20 l     O .rodata	000000000000003b              ha_myisammrg::update_row(unsigned char const*, unsigned char*)::__PRETTY_FUNCTION__
0000000000ce4a60 l     O .rodata	0000000000000033              ha_myisammrg::delete_row(unsigned char const*)::__PRETTY_FUNCTION__
0000000000ce4aa0 l     O .rodata	000000000000005f              ha_myisammrg::index_read_map(unsigned char*, unsigned char const*, unsigned long, ha_rkey_function)::__PRETTY_FUNCTION__
0000000000ce4b00 l     O .rodata	0000000000000069              ha_myisammrg::index_read_idx_map(unsigned char*, unsigned int, unsigned char const*, unsigned long, ha_rkey_function)::__PRETTY_FUNCTION__
0000000000ce4b80 l     O .rodata	0000000000000052              ha_myisammrg::index_read_last_map(unsigned char*, unsigned char const*, unsigned long)::__PRETTY_FUNCTION__
0000000000ce4be0 l     O .rodata	000000000000002d              ha_myisammrg::index_next(unsigned char*)::__PRETTY_FUNCTION__
0000000000ce4c20 l     O .rodata	000000000000002d              ha_myisammrg::index_prev(unsigned char*)::__PRETTY_FUNCTION__
0000000000ce4c60 l     O .rodata	000000000000002e              ha_myisammrg::index_first(unsigned char*)::__PRETTY_FUNCTION__
0000000000ce4ca0 l     O .rodata	000000000000002d              ha_myisammrg::index_last(unsigned char*)::__PRETTY_FUNCTION__
0000000000ce4ce0 l     O .rodata	0000000000000046              ha_myisammrg::index_next_same(unsigned char*, unsigned char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000ce4d40 l     O .rodata	0000000000000029              ha_myisammrg::rnd_init(bool)::__PRETTY_FUNCTION__
0000000000ce4d80 l     O .rodata	000000000000002b              ha_myisammrg::rnd_next(unsigned char*)::__PRETTY_FUNCTION__
0000000000ce4dc0 l     O .rodata	0000000000000032              ha_myisammrg::rnd_pos(unsigned char*, unsigned char*)::__PRETTY_FUNCTION__
0000000000ce4e00 l     O .rodata	0000000000000032              ha_myisammrg::position(unsigned char const*)::__PRETTY_FUNCTION__
0000000000ce4e40 l     O .rodata	000000000000004d              ha_myisammrg::records_in_range(unsigned int, st_key_range*, st_key_range*)::__PRETTY_FUNCTION__
0000000000ce4ea0 l     O .rodata	0000000000000025              ha_myisammrg::info(unsigned int)::__PRETTY_FUNCTION__
0000000000ce4ee0 l     O .rodata	000000000000003e              ha_myisammrg::extra_opt(ha_extra_function, unsigned long)::__PRETTY_FUNCTION__
000000000098ede8 l     F .text	000000000000005a              myisammrg_init(void*)
0000000000000000 l    df *ABS*	0000000000000000              myrg_locking.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_open.c
000000000098f29b l     F .text	0000000000000071              inline_mysql_mutex_init
000000000098f30c l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000098f423 l     F .text	000000000000007d              inline_mysql_mutex_unlock
000000000098f4a0 l     F .text	000000000000012a              inline_mysql_file_open
000000000098f5ca l     F .text	0000000000000100              inline_mysql_file_close
0000000000ce5160 l     O .rodata	000000000000000a              __PRETTY_FUNCTION__.12355
0000000000000000 l    df *ABS*	0000000000000000              myrg_panic.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_range.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_rfirst.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_rkey.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_rlast.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_rnext.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_rnext_same.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_rprev.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_rrnd.c
0000000000991923 l     F .text	00000000000000ff              find_table
0000000000000000 l    df *ABS*	0000000000000000              myrg_static.c
00000000010f1a60 l     O .data	0000000000000018              merge_insert_methods
00000000010f1aa0 l     O .data	0000000000000018              all_myisammrg_mutexes
00000000010f1ac0 l     O .data	0000000000000018              all_myisammrg_files
0000000000000000 l    df *ABS*	0000000000000000              myrg_update.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_write.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_records.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_close.c
0000000000991bef l     F .text	0000000000000080              inline_mysql_mutex_destroy
0000000000991c6f l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000991d86 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000000000 l    df *ABS*	0000000000000000              myrg_create.c
0000000000991f9b l     F .text	000000000000012b              inline_mysql_file_create
00000000009920c6 l     F .text	0000000000000100              inline_mysql_file_close
00000000009921c6 l     F .text	0000000000000174              inline_mysql_file_write
0000000000000000 l    df *ABS*	0000000000000000              myrg_delete.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_extra.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_info.c
0000000000000000 l    df *ABS*	0000000000000000              myrg_queue.c
0000000000992c8c l     F .text	00000000000000e6              queue_key_cmp
0000000000ce55b0 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.12341
0000000000000000 l    df *ABS*	0000000000000000              ha_innodb.cc
0000000000992f56 l     F .text	0000000000000071              inline_mysql_mutex_init
0000000000992fc7 l     F .text	0000000000000080              inline_mysql_mutex_destroy
0000000000993047 l     F .text	0000000000000117              inline_mysql_mutex_lock
000000000099315e l     F .text	000000000000007d              inline_mysql_mutex_unlock
00000000009931db l     F .text	0000000000000065              inline_mysql_cond_init
0000000000993240 l     F .text	000000000000006f              inline_mysql_cond_destroy
00000000009932af l     F .text	0000000000000133              inline_mysql_cond_wait
00000000009933e2 l     F .text	000000000000006c              inline_mysql_cond_signal
000000000099344e l     F .text	0000000000000067              bitmap_is_set
0000000000cebbe0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000ce5688 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000ceb870 l     O .rodata	000000000000001c              handler::~handler()::__PRETTY_FUNCTION__
0000000000cec280 l     O .rodata	000000000000002d              handler::exec_bulk_update(unsigned int*)::__PRETTY_FUNCTION__
0000000000cec240 l     O .rodata	0000000000000027              handler::end_bulk_delete()::__PRETTY_FUNCTION__
0000000000cec200 l     O .rodata	0000000000000031              handler::repair(THD*, st_ha_check_opt*)::__PRETTY_FUNCTION__
0000000000cec1a0 l     O .rodata	0000000000000042              handler::bulk_update_row(unsigned char const*, unsigned char*, unsigned int*)::__PRETTY_FUNCTION__
00000000009934b5 l     F .text	0000000000000017              os_atomic_test_and_set
00000000009934cc l     F .text	0000000000000017              os_atomic_clear
00000000009934e3 l     F .text	000000000000002d              ut_memcpy
0000000000993510 l     F .text	0000000000000025              ut_strcmp
0000000000993535 l     F .text	0000000000000196              ut_str_sql_format
00000000009936cb l     F .text	0000000000000015              dtype_get_charset_coll
00000000009936e0 l     F .text	0000000000000057              ut_hash_ulint
0000000000993737 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000993771 l     F .text	0000000000000077              ut_fold_string
00000000009937e8 l     F .text	000000000000001e              mutex_test_and_set
0000000000993806 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000993825 l     F .text	000000000000004e              mutex_get_waiters
0000000000993873 l     F .text	0000000000000085              mutex_exit_func
00000000009938f8 l     F .text	00000000000000e0              mutex_enter_func
00000000009939d8 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000993ae6 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000993b53 l     F .text	0000000000000012              mem_block_get_len
0000000000993b65 l     F .text	0000000000000089              mem_block_set_free
0000000000993bee l     F .text	0000000000000012              mem_block_get_free
0000000000993c00 l     F .text	000000000000014d              mem_heap_alloc
0000000000993d4d l     F .text	000000000000016b              mem_heap_create_func
0000000000993eb8 l     F .text	00000000000000a8              mem_heap_free_func
0000000000993f60 l     F .text	000000000000010b              mem_alloc_func
000000000099406b l     F .text	0000000000000043              dfield_get_type
00000000009940ae l     F .text	000000000000005b              dfield_set_len
0000000000994109 l     F .text	000000000000006a              dfield_set_data
0000000000994173 l     F .text	0000000000000025              dfield_set_null
0000000000994198 l     F .text	000000000000002d              dfield_copy
00000000009941c5 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000994254 l     F .text	000000000000012d              dtuple_create_from_mem
0000000000994381 l     F .text	000000000000008e              dtuple_create
000000000099440f l     F .text	00000000000000bc              hash_get_nth_cell
00000000009944cb l     F .text	000000000000008c              hash_calc_hash
0000000000994557 l     F .text	00000000000000dc              hash_get_mutex_no
0000000000994633 l     F .text	00000000000000cc              hash_get_nth_mutex
00000000009946ff l     F .text	000000000000009f              hash_get_mutex
000000000099479e l     F .text	0000000000000038              dict_col_get_mbminlen
00000000009947d6 l     F .text	000000000000002e              dict_col_get_mbmaxlen
0000000000994804 l     F .text	00000000000000ac              dict_col_copy_type
00000000009948b0 l     F .text	0000000000000114              dict_col_get_clust_pos
0000000000994abc l     F .text	0000000000000085              dict_index_is_clust
00000000009949c4 l     F .text	000000000000007c              dict_table_get_first_index
0000000000994a40 l     F .text	000000000000007c              dict_table_get_next_index
0000000000994b41 l     F .text	000000000000004c              dict_table_is_comp
0000000000994b8d l     F .text	0000000000000051              dict_table_get_format
0000000000994bde l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000994c4c l     F .text	0000000000000051              dict_table_zip_size
0000000000994c9d l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000994d55 l     F .text	00000000000000e7              dict_index_is_corrupted
0000000000994e3c l     F .text	000000000000001b              dict_table_is_temporary
0000000000994e57 l     F .text	0000000000000049              buf_page_get_state
0000000000994ea0 l     F .text	000000000000001a              buf_block_get_state
0000000000994eba l     F .text	0000000000000063              trx_start_if_not_started
0000000000994f1d l     F .text	0000000000000015              trx_get_error_info
0000000000994f32 l     F .text	0000000000000043              trx_get_dict_operation
0000000000994f75 l     F .text	00000000000000ad              trx_set_dict_operation
0000000000995022 l     F .text	000000000000001f              page_get_free_space_of_empty
0000000000ce5cd0 l     O .rodata	0000000000000013              plugin_author
000000000138e3a0 l     O .bss	0000000000000070              innobase_share_mutex
000000000138e420 l     O .bss	0000000000000070              prepare_commit_mutex
000000000138e490 l     O .bss	0000000000000008              commit_threads
000000000138e4a0 l     O .bss	0000000000000038              commit_cond
000000000138e4e0 l     O .bss	0000000000000070              commit_cond_m
000000000138e550 l     O .bss	0000000000000001              innodb_inited
000000000138e558 l     O .bss	0000000000000008              innodb_hton_ptr
0000000000ce5ce8 l     O .rodata	0000000000000008              AUTOINC_OLD_STYLE_LOCKING
0000000000ce5cf0 l     O .rodata	0000000000000008              AUTOINC_NEW_STYLE_LOCKING
0000000000ce5cf8 l     O .rodata	0000000000000008              AUTOINC_NO_LOCKING
000000000138e560 l     O .bss	0000000000000008              innobase_mirrored_log_groups
000000000138e568 l     O .bss	0000000000000008              innobase_log_files_in_group
000000000138e570 l     O .bss	0000000000000008              innobase_log_buffer_size
000000000138e578 l     O .bss	0000000000000008              innobase_additional_mem_pool_size
000000000138e580 l     O .bss	0000000000000008              innobase_file_io_threads
000000000138e588 l     O .bss	0000000000000008              innobase_force_recovery
000000000138e590 l     O .bss	0000000000000008              innobase_open_files
000000000138e598 l     O .bss	0000000000000008              innobase_autoinc_lock_mode
000000000138e5a0 l     O .bss	0000000000000008              innobase_commit_concurrency
000000000138e5a8 l     O .bss	0000000000000008              innobase_read_io_threads
000000000138e5b0 l     O .bss	0000000000000008              innobase_write_io_threads
00000000010f1ae0 l     O .data	0000000000000008              innobase_buffer_pool_instances
000000000138e5b8 l     O .bss	0000000000000008              innobase_buffer_pool_size
000000000138e5c0 l     O .bss	0000000000000008              innobase_log_file_size
000000000138e5c8 l     O .bss	0000000000000004              innobase_old_blocks_pct
000000000138e5d0 l     O .bss	0000000000000008              innobase_data_home_dir
000000000138e5d8 l     O .bss	0000000000000008              innobase_data_file_path
000000000138e5e0 l     O .bss	0000000000000008              innobase_log_group_home_dir
000000000138e5e8 l     O .bss	0000000000000008              innobase_file_format_name
000000000138e5f0 l     O .bss	0000000000000008              innobase_change_buffering
000000000138e5f8 l     O .bss	0000000000000008              innobase_file_format_max
000000000138e600 l     O .bss	0000000000000008              innobase_file_flush_method
00000000010f1ae8 l     O .data	0000000000000008              innobase_fast_shutdown
00000000010f1af0 l     O .data	0000000000000001              innobase_file_format_check
00000000010f1af1 l     O .data	0000000000000001              innobase_use_doublewrite
00000000010f1af2 l     O .data	0000000000000001              innobase_use_checksums
000000000138e608 l     O .bss	0000000000000001              innobase_locks_unsafe_for_binlog
000000000138e609 l     O .bss	0000000000000001              innobase_rollback_on_timeout
000000000138e60a l     O .bss	0000000000000001              innobase_create_status_file
00000000010f1af3 l     O .data	0000000000000001              innobase_stats_on_metadata
000000000138e60b l     O .bss	0000000000000001              innobase_large_prefix
000000000138e610 l     O .bss	0000000000000008              internal_innobase_data_file_path
00000000010f1d60 l     O .data	0000000000000008              innodb_version_str
00000000010f1d80 l     O .data	0000000000000020              innodb_stats_method_names
00000000010f1da0 l     O .data	0000000000000020              innodb_stats_method_typelib
000000000138e618 l     O .bss	0000000000000008              innobase_active_counter
000000000138e620 l     O .bss	0000000000000008              innobase_open_tables
00000000010f1dc0 l     O .data	0000000000000030              innobase_change_buffering_values
000000000138e628 l     O .bss	0000000000000004              innobase_share_mutex_key
000000000138e62c l     O .bss	0000000000000004              prepare_commit_mutex_key
000000000138e630 l     O .bss	0000000000000004              commit_cond_mutex_key
000000000138e634 l     O .bss	0000000000000004              commit_cond_key
00000000010f1e00 l     O .data	0000000000000048              all_pthread_mutexes
00000000010f1e50 l     O .data	0000000000000018              all_innodb_conds
00000000010f3120 l     O .data	00000000000002e8              all_innodb_mutexes
00000000010f3420 l     O .data	00000000000000c0              all_innodb_rwlocks
00000000010f34e0 l     O .data	00000000000000a8              all_innodb_threads
00000000010f35a0 l     O .data	0000000000000048              all_innodb_files
0000000000ce6150 l     O .rodata	0000000000000010              innobase_index_reserve_name
0000000000ce6160 l     O .rodata	0000000000000007              innobase_hton_name
0000000000995041 l     F .text	00000000000000d3              innobase_commit_concurrency_validate(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
00000000010f1e80 l     O .data	0000000000000038              mysql_sysvar_support_xa
00000000010f1ec0 l     O .data	0000000000000038              mysql_sysvar_table_locks
00000000010f1f00 l     O .data	0000000000000038              mysql_sysvar_strict_mode
00000000010f1f40 l     O .data	0000000000000058              mysql_sysvar_lock_wait_timeout
0000000000995114 l     F .text	0000000000000050              innobase_create_handler(handlerton*, TABLE_SHARE*, st_mem_root*)
00000000010f3600 l     O .data	00000000000004c8              innodb_status_variables
0000000000995180 l     F .text	0000000000000035              innodb_srv_conc_enter_innodb(trx_struct*)
00000000009951b5 l     F .text	0000000000000033              innodb_srv_conc_exit_innodb(trx_struct*)
00000000009951e8 l     F .text	0000000000000028              innodb_srv_conc_force_exit_innodb(trx_struct*)
00000000009952d1 l     F .text	0000000000000024              thd_to_trx(THD*)
00000000009952f5 l     F .text	000000000000007e              innobase_release_temporary_latches(handlerton*, THD*)
0000000000ceb7c0 l     O .rodata	000000000000003a              innobase_release_temporary_latches(handlerton*, THD*)::__PRETTY_FUNCTION__
0000000000995373 l     F .text	000000000000002d              innobase_active_small()
0000000000995f2a l     F .text	00000000000002df              innobase_next_autoinc(unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
0000000000996209 l     F .text	0000000000000104              innobase_trx_init(THD*, trx_struct*)
0000000000ceb800 l     O .rodata	0000000000000025              innobase_trx_init(THD*, trx_struct*)::__PRETTY_FUNCTION__
0000000000ceb840 l     O .rodata	0000000000000023              innobase_trx_allocate::__PRETTY_FUNCTION__
00000000009963ed l     F .text	00000000000000da              check_trx_exists(THD*)
00000000009964c7 l     F .text	000000000000001a              trx_is_registered_for_2pc(trx_struct const*)
00000000009964e1 l     F .text	0000000000000056              trx_owns_prepare_commit_mutex_set(trx_struct*)
0000000000996537 l     F .text	0000000000000052              trx_register_for_2pc(trx_struct*)
0000000000996589 l     F .text	0000000000000027              trx_deregister_from_2pc(trx_struct*)
00000000009965b0 l     F .text	000000000000001a              trx_has_prepare_commit_mutex(trx_struct const*)
00000000009965ca l     F .text	0000000000000018              trx_is_started(trx_struct*)
000000000099672e l     F .text	0000000000000086              innobase_register_trx(handlerton*, THD*, trx_struct*)
00000000009967b4 l     F .text	000000000000022e              innobase_query_caching_of_table_permitted(THD*, char*, unsigned int, unsigned long long*)
0000000000996a1b l     F .text	00000000000002f1              innobase_convert_identifier(char*, unsigned long, char const*, unsigned long, void*, unsigned long)
0000000000996f2f l     F .text	00000000000000b1              innobase_format_name(char*, unsigned long, char const*, unsigned long)
0000000000997085 l     F .text	0000000000000028              reset_template(row_prebuilt_struct*)
00000000009971e0 l     F .text	0000000000000a74              innobase_init(void*)
0000000000998902 l     F .text	0000000000000184              innobase_close_connection(handlerton*, THD*)
00000000009987b1 l     F .text	0000000000000151              innobase_savepoint(handlerton*, THD*, void*)
0000000000998582 l     F .text	000000000000012a              innobase_rollback_to_savepoint(handlerton*, THD*, void*)
00000000009986ac l     F .text	0000000000000105              innobase_release_savepoint(handlerton*, THD*, void*)
0000000000997fc1 l     F .text	000000000000035a              innobase_commit(handlerton*, THD*, bool)
000000000099831b l     F .text	0000000000000196              innobase_rollback(handlerton*, THD*, bool)
00000000009a652e l     F .text	00000000000001de              innobase_xa_prepare(handlerton*, THD*, bool)
00000000009a670c l     F .text	0000000000000067              innobase_xa_recover(handlerton*, xid_t*, unsigned int)
00000000009a6773 l     F .text	0000000000000079              innobase_commit_by_xid(handlerton*, xid_t*)
00000000009a67ec l     F .text	000000000000007a              innobase_rollback_by_xid(handlerton*, xid_t*)
00000000009a6866 l     F .text	0000000000000052              innobase_create_cursor_view(handlerton*, THD*)
00000000009a6919 l     F .text	0000000000000061              innobase_set_cursor_view(handlerton*, THD*, void*)
00000000009a68b8 l     F .text	0000000000000061              innobase_close_cursor_view(handlerton*, THD*, void*)
00000000009a045e l     F .text	000000000000015a              innobase_drop_database(handlerton*, char*)
0000000000997c54 l     F .text	0000000000000159              innobase_end(handlerton*, ha_panic_function)
0000000000997e80 l     F .text	0000000000000141              innobase_start_trx_and_assign_read_view(handlerton*, THD*)
0000000000997dad l     F .text	000000000000009a              innobase_flush_logs(handlerton*)
00000000009a512d l     F .text	000000000000008a              innobase_show_status(handlerton*, THD*, bool (*)(THD*, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int), ha_stat_type)
0000000000997e47 l     F .text	000000000000000e              innobase_alter_table_flags(unsigned int)
0000000000ceb88c l     O .rodata	0000000000000003              innobase_init(void*)::test_filename
000000000138e640 l     O .bss	0000000000000003              innobase_init(void*)::current_dir
00000000009a6cd2 l     F .text	00000000000000e2              innobase_file_format_name_lookup(char const*)
00000000009a6db4 l     F .text	000000000000003a              innobase_file_format_validate_and_set(char const*)
00000000009a7847 l     F .text	0000000000000015              innobase_commit_concurrency_init_default()
0000000000ceb8a0 l     O .rodata	0000000000000031              innobase_end(handlerton*, ha_panic_function)::__PRETTY_FUNCTION__
0000000000ceb8e0 l     O .rodata	0000000000000026              innobase_flush_logs(handlerton*)::__PRETTY_FUNCTION__
0000000000997e55 l     F .text	000000000000002b              innobase_commit_low(trx_struct*)
0000000000ceb920 l     O .rodata	000000000000003f              innobase_start_trx_and_assign_read_view(handlerton*, THD*)::__PRETTY_FUNCTION__
00000000009a3c3b l     F .text	0000000000000065              innobase_map_isolation_level(enum_tx_isolation)
0000000000ceb960 l     O .rodata	000000000000002d              innobase_commit(handlerton*, THD*, bool)::__PRETTY_FUNCTION__
0000000000ceb9a0 l     O .rodata	000000000000002f              innobase_rollback(handlerton*, THD*, bool)::__PRETTY_FUNCTION__
00000000009984b1 l     F .text	00000000000000d1              innobase_rollback_trx(trx_struct*)
0000000000ceb9e0 l     O .rodata	000000000000003d              innobase_rollback_to_savepoint(handlerton*, THD*, void*)::__PRETTY_FUNCTION__
0000000000ceba20 l     O .rodata	0000000000000039              innobase_release_savepoint(handlerton*, THD*, void*)::__PRETTY_FUNCTION__
0000000000ceba60 l     O .rodata	0000000000000031              innobase_savepoint(handlerton*, THD*, void*)::__PRETTY_FUNCTION__
0000000000cebaa0 l     O .rodata	0000000000000031              innobase_close_connection(handlerton*, THD*)::__PRETTY_FUNCTION__
00000000010f1fa0 l     O .data	0000000000000010              ha_innobase_exts
0000000000998c73 l     F .text	0000000000000154              normalize_table_name_low(char*, char const*, unsigned long)
0000000000cebae0 l     O .rodata	0000000000000039              normalize_table_name_low(char*, char const*, unsigned long)::__PRETTY_FUNCTION__
0000000000998dc7 l     F .text	0000000000000158              test_normalize_table_name_low()
0000000000998f1f l     F .text	0000000000000108              innobase_get_int_col_max_value(Field const*)
0000000000999027 l     F .text	000000000000019c              innobase_match_index_columns(st_key const*, dict_index_struct const*)
00000000009991c3 l     F .text	00000000000003af              innobase_build_index_translation(TABLE const*, dict_table_struct*, st_innobase_share*)
0000000000999572 l     F .text	000000000000004f              innobase_index_lookup(st_innobase_share*, unsigned int)
00000000009a51b7 l     F .text	000000000000031d              get_share(char const*)
00000000009a54d4 l     F .text	000000000000033c              free_share(st_innobase_share*)
0000000000cebb20 l     O .rodata	000000000000003c              ha_innobase::clone(char const*, st_mem_root*)::__PRETTY_FUNCTION__
000000000099a3c1 l     F .text	0000000000000027              get_field_offset(TABLE*, Field*)
000000000099a3e8 l     F .text	0000000000000072              field_in_record_is_null(TABLE*, Field*, char*)
0000000000cebb60 l     O .rodata	000000000000006a              innobase_mysql_cmp::__PRETTY_FUNCTION__
000000000099a850 l     F .text	0000000000000061              innobase_write_to_2_little_endian(unsigned char*, unsigned long)
000000000099a8b1 l     F .text	0000000000000027              innobase_read_from_2_little_endian(unsigned char const*)
000000000099b180 l     F .text	000000000000063f              build_template(row_prebuilt_struct*, THD*, TABLE*, unsigned int)
000000000099c172 l     F .text	00000000000004d8              calc_row_difference(upd_struct*, unsigned char*, unsigned char*, TABLE*, unsigned char*, unsigned long, row_prebuilt_struct*, THD*)
000000000099cf8d l     F .text	0000000000000097              convert_search_mode_to_innobase(ha_rkey_function)
0000000000cebc20 l     O .rodata	0000000000000052              ha_innobase::index_read(unsigned char*, unsigned char const*, unsigned int, ha_rkey_function)::__PRETTY_FUNCTION__
000000000099e4de l     F .text	00000000000006bd              create_table_def(trx_struct*, TABLE*, char const*, char const*, unsigned long)
000000000099eb9b l     F .text	000000000000047e              create_index(trx_struct*, TABLE*, unsigned long, char const*, unsigned int)
000000000099f019 l     F .text	0000000000000074              create_clustered_index_when_no_primary(trx_struct*, unsigned long, char const*)
000000000099f102 l     F .text	00000000000003b4              create_options_are_valid(THD*, TABLE*, st_ha_create_information*)
0000000000cebc80 l     O .rodata	0000000000000046              ha_innobase::create(char const*, TABLE*, st_ha_create_information*)::__PRETTY_FUNCTION__
0000000000cebce0 l     O .rodata	0000000000000030              innobase_drop_database(handlerton*, char*)::__PRETTY_FUNCTION__
00000000009a05b8 l     F .text	0000000000000140              innobase_rename_table(trx_struct*, char const*, char const*, unsigned long)
0000000000cebd20 l     O .rodata	000000000000004c              ha_innobase::records_in_range(unsigned int, st_key_range*, st_key_range*)::__PRETTY_FUNCTION__
00000000009a10e2 l     F .text	00000000000001ed              innobase_get_mysql_key_number_for_index(st_innobase_share*, TABLE const*, dict_table_struct*, dict_index_struct const*)
00000000009a12cf l     F .text	0000000000000162              innodb_rec_per_key(dict_index_struct*, unsigned long, unsigned long long)
0000000000cebd80 l     O .rodata	0000000000000034              ha_innobase::check(THD*, st_ha_check_opt*)::__PRETTY_FUNCTION__
00000000009a2bf3 l     F .text	0000000000000715              get_foreign_key_info(THD*, dict_foreign_struct*)
00000000009a44e2 l     F .text	0000000000000017              innodb_export_status()
00000000009a44f9 l     F .text	00000000000003bd              innodb_show_status(handlerton*, THD*, bool (*)(THD*, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int))
0000000000cebdc0 l     O .rodata	0000000000000074              innodb_show_status(handlerton*, THD*, bool (*)(THD*, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int))::__PRETTY_FUNCTION__
0000000000cebe40 l     O .rodata	0000000000000012              innodb_show_status(handlerton*, THD*, bool (*)(THD*, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int))::truncated_msg
00000000009a48b6 l     F .text	0000000000000877              innodb_mutex_show_status(handlerton*, THD*, bool (*)(THD*, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int))
0000000000cebe60 l     O .rodata	000000000000007a              innodb_mutex_show_status(handlerton*, THD*, bool (*)(THD*, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int))::__PRETTY_FUNCTION__
0000000000cebee0 l     O .rodata	0000000000000084              innobase_show_status(handlerton*, THD*, bool (*)(THD*, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int), ha_stat_type)::__PRETTY_FUNCTION__
0000000000cebf80 l     O .rodata	0000000000000056              ha_innobase::store_lock(THD*, st_thr_lock_data**, thr_lock_type)::__PRETTY_FUNCTION__
0000000000cebfe0 l     O .rodata	0000000000000031              innobase_xa_prepare(handlerton*, THD*, bool)::__PRETTY_FUNCTION__
0000000000cec020 l     O .rodata	0000000000000031              innobase_xa_recover(handlerton*, xid_t*, unsigned int)::__PRETTY_FUNCTION__
0000000000cec060 l     O .rodata	000000000000002e              innobase_commit_by_xid(handlerton*, xid_t*)::__PRETTY_FUNCTION__
0000000000cec0a0 l     O .rodata	0000000000000030              innobase_rollback_by_xid(handlerton*, xid_t*)::__PRETTY_FUNCTION__
0000000000cec0e0 l     O .rodata	0000000000000035              innobase_create_cursor_view(handlerton*, THD*)::__PRETTY_FUNCTION__
0000000000cec120 l     O .rodata	000000000000003a              innobase_close_cursor_view(handlerton*, THD*, void*)::__PRETTY_FUNCTION__
0000000000cec160 l     O .rodata	0000000000000038              innobase_set_cursor_view(handlerton*, THD*, void*)::__PRETTY_FUNCTION__
00000000009a697a l     F .text	0000000000000094              check_column_being_renamed(TABLE const*, char const*)
00000000009a6a0e l     F .text	000000000000005e              column_is_being_renamed(TABLE*, unsigned int, char const**)
00000000009a6a6c l     F .text	0000000000000142              foreign_key_column_is_being_renamed(row_prebuilt_struct*, TABLE*)
00000000009a6dee l     F .text	000000000000011f              innodb_file_format_name_validate(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
00000000009a6f0d l     F .text	00000000000000c5              innodb_file_format_name_update(THD*, st_mysql_sys_var*, void*, void const*)
00000000009a6fd2 l     F .text	0000000000000159              innodb_file_format_max_validate(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
00000000009a712b l     F .text	0000000000000128              innodb_file_format_max_update(THD*, st_mysql_sys_var*, void*, void const*)
00000000009a7253 l     F .text	0000000000000032              innodb_adaptive_hash_index_update(THD*, st_mysql_sys_var*, void*, void const*)
00000000009a7285 l     F .text	0000000000000033              innodb_old_blocks_pct_update(THD*, st_mysql_sys_var*, void*, void const*)
00000000009a72b8 l     F .text	0000000000000062              innodb_find_change_buffering_value(char const*)
00000000009a731a l     F .text	000000000000011b              innodb_change_buffering_validate(THD*, st_mysql_sys_var*, void*, st_mysql_value*)
00000000009a7435 l     F .text	00000000000000cf              innodb_change_buffering_update(THD*, st_mysql_sys_var*, void*, void const*)
000000000138e638 l     O .bss	0000000000000008              srv_buffer_pool_evict
00000000009a7504 l     F .text	0000000000000241              innodb_buffer_pool_evict_update(THD*, st_mysql_sys_var*, void*, void const*)
00000000009a7745 l     F .text	000000000000003a              show_innodb_vars(THD*, st_mysql_show_var*, char*)
00000000010f1fc0 l     O .data	0000000000000030              innodb_status_variables_export
00000000010f1d40 l     O .data	0000000000000004              innobase_storage_engine
00000000010f2000 l     O .data	0000000000000038              mysql_sysvar_checksums
00000000010f2040 l     O .data	0000000000000038              mysql_sysvar_data_home_dir
00000000010f2080 l     O .data	0000000000000038              mysql_sysvar_doublewrite
00000000010f3ae0 l     O .data	0000000000000050              mysql_sysvar_io_capacity
00000000010f3b40 l     O .data	0000000000000050              mysql_sysvar_purge_batch_size
00000000010f3ba0 l     O .data	0000000000000050              mysql_sysvar_rollback_segments
00000000010f3c00 l     O .data	0000000000000050              mysql_sysvar_purge_threads
00000000010f20c0 l     O .data	0000000000000050              mysql_sysvar_fast_shutdown
00000000010f3c60 l     O .data	0000000000000038              mysql_sysvar_file_per_table
00000000010f2120 l     O .data	0000000000000038              mysql_sysvar_file_format
00000000010f2160 l     O .data	0000000000000038              mysql_sysvar_file_format_check
00000000010f21a0 l     O .data	0000000000000038              mysql_sysvar_file_format_max
00000000010f3ca0 l     O .data	0000000000000050              mysql_sysvar_flush_log_at_trx_commit
00000000010f21e0 l     O .data	0000000000000038              mysql_sysvar_flush_method
00000000010f2220 l     O .data	0000000000000038              mysql_sysvar_large_prefix
00000000010f3d00 l     O .data	0000000000000038              mysql_sysvar_force_load_corrupted
00000000010f2260 l     O .data	0000000000000038              mysql_sysvar_locks_unsafe_for_binlog
00000000010f22a0 l     O .data	0000000000000038              mysql_sysvar_log_group_home_dir
00000000010f3d40 l     O .data	0000000000000050              mysql_sysvar_max_dirty_pages_pct
00000000010f3da0 l     O .data	0000000000000038              mysql_sysvar_adaptive_flushing
00000000010f3de0 l     O .data	0000000000000050              mysql_sysvar_max_purge_lag
00000000010f22e0 l     O .data	0000000000000038              mysql_sysvar_rollback_on_timeout
00000000010f2320 l     O .data	0000000000000038              mysql_sysvar_status_file
00000000010f2360 l     O .data	0000000000000038              mysql_sysvar_stats_on_metadata
00000000010f3e40 l     O .data	0000000000000050              mysql_sysvar_stats_sample_pages
00000000010f3ea0 l     O .data	0000000000000038              mysql_sysvar_adaptive_hash_index
00000000010f3ee0 l     O .data	0000000000000050              mysql_sysvar_replication_delay
00000000010f23a0 l     O .data	0000000000000050              mysql_sysvar_additional_mem_pool_size
00000000010f3f40 l     O .data	0000000000000050              mysql_sysvar_autoextend_increment
00000000010f2400 l     O .data	0000000000000038              mysql_sysvar_buffer_pool_evict
00000000010f2440 l     O .data	0000000000000050              mysql_sysvar_buffer_pool_size
00000000010f24a0 l     O .data	0000000000000050              mysql_sysvar_buffer_pool_instances
00000000010f2500 l     O .data	0000000000000050              mysql_sysvar_commit_concurrency
00000000010f3fa0 l     O .data	0000000000000050              mysql_sysvar_concurrency_tickets
00000000010f2560 l     O .data	0000000000000050              mysql_sysvar_file_io_threads
00000000010f25c0 l     O .data	0000000000000050              mysql_sysvar_read_io_threads
00000000010f2620 l     O .data	0000000000000050              mysql_sysvar_write_io_threads
00000000010f2680 l     O .data	0000000000000050              mysql_sysvar_force_recovery
00000000010f26e0 l     O .data	0000000000000050              mysql_sysvar_log_buffer_size
00000000010f2740 l     O .data	0000000000000050              mysql_sysvar_log_file_size
00000000010f27a0 l     O .data	0000000000000050              mysql_sysvar_log_files_in_group
00000000010f2800 l     O .data	0000000000000050              mysql_sysvar_mirrored_log_groups
00000000010f2860 l     O .data	0000000000000040              mysql_sysvar_old_blocks_pct
00000000010f4000 l     O .data	0000000000000040              mysql_sysvar_old_blocks_time
00000000010f28a0 l     O .data	0000000000000050              mysql_sysvar_open_files
00000000010f4040 l     O .data	0000000000000050              mysql_sysvar_sync_spin_loops
00000000010f40a0 l     O .data	0000000000000050              mysql_sysvar_spin_wait_delay
00000000010f4100 l     O .data	0000000000000050              mysql_sysvar_thread_concurrency
00000000010f4160 l     O .data	0000000000000050              mysql_sysvar_thread_sleep_delay
00000000010f2900 l     O .data	0000000000000038              mysql_sysvar_data_file_path
00000000010f2940 l     O .data	0000000000000050              mysql_sysvar_autoinc_lock_mode
00000000010f29a0 l     O .data	0000000000000038              mysql_sysvar_version
00000000010f41c0 l     O .data	0000000000000038              mysql_sysvar_use_sys_malloc
00000000010f4200 l     O .data	0000000000000038              mysql_sysvar_use_native_aio
00000000010f29e0 l     O .data	0000000000000038              mysql_sysvar_change_buffering
00000000010f4240 l     O .data	0000000000000040              mysql_sysvar_stats_method
00000000010f4280 l     O .data	0000000000000040              mysql_sysvar_change_buffering_debug
00000000010f42c0 l     O .data	0000000000000038              mysql_sysvar_random_read_ahead
00000000010f4300 l     O .data	0000000000000050              mysql_sysvar_read_ahead_threshold
00000000010f4360 l     O .data	0000000000000040              mysql_sysvar_trx_rseg_n_slots_debug
00000000010f43a0 l     O .data	0000000000000040              mysql_sysvar_limit_optimistic_insert_debug
00000000010f43e0 l     O .data	0000000000000038              mysql_sysvar_trx_purge_view_update_only_debug
00000000010f4420 l     O .data	0000000000000038              mysql_sysvar_print_all_deadlocks
00000000010f2a20 l     O .data	0000000000000220              innobase_system_variables
00000000009a798b l     F .text	0000000000000633              __static_initialization_and_destruction_0(int, int)
00000000009a7fbe l     F .text	0000000000000015              _GLOBAL__sub_I_ha_innodb.cc
0000000000000000 l    df *ABS*	0000000000000000              handler0alter.cc
0000000000cec2c0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
00000000009a80bc l     F .text	0000000000000017              os_atomic_test_and_set
00000000009a80d3 l     F .text	0000000000000017              os_atomic_clear
00000000009a80ea l     F .text	000000000000001e              mutex_test_and_set
00000000009a8108 l     F .text	000000000000001f              mutex_reset_lock_word
00000000009a8127 l     F .text	000000000000004e              mutex_get_waiters
00000000009a8175 l     F .text	0000000000000085              mutex_exit_func
00000000009a81fa l     F .text	00000000000000e0              mutex_enter_func
00000000009a82da l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009a83e8 l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009a8455 l     F .text	0000000000000022              rw_lock_reset_waiter_flag
00000000009a8477 l     F .text	0000000000000022              rw_lock_lock_word_incr
00000000009a8499 l     F .text	0000000000000102              rw_lock_x_unlock_func
00000000009a859b l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
00000000009a86a1 l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
00000000009a8708 l     F .text	0000000000000012              mem_block_get_len
00000000009a871a l     F .text	0000000000000089              mem_block_set_free
00000000009a87a3 l     F .text	0000000000000012              mem_block_get_free
00000000009a87b5 l     F .text	000000000000014d              mem_heap_alloc
00000000009a8902 l     F .text	000000000000016b              mem_heap_create_func
00000000009a8a6d l     F .text	00000000000000a8              mem_heap_free_func
00000000009a8b15 l     F .text	000000000000007c              dict_table_get_first_index
00000000009a8b91 l     F .text	000000000000007c              dict_table_get_next_index
00000000009a8c0d l     F .text	0000000000000085              dict_index_is_clust
00000000009a8c92 l     F .text	000000000000008c              dict_table_get_n_user_cols
00000000009a8d1e l     F .text	0000000000000051              dict_table_get_format
00000000009a8d6f l     F .text	00000000000000d1              dict_index_get_nth_field
00000000009a8e40 l     F .text	0000000000000042              dict_field_get_col
00000000009a8e82 l     F .text	000000000000002d              dict_index_get_nth_col
00000000009a8eaf l     F .text	000000000000007c              dict_index_get_lock
00000000009a8f2b l     F .text	0000000000000077              rec_offs_get_n_alloc
00000000009a8fa2 l     F .text	00000000000000f5              rec_offs_n_fields
00000000009a9097 l     F .text	0000000000000113              rec_get_nth_field_offs
00000000009a91aa l     F .text	0000000000000063              trx_start_if_not_started
00000000009a920d l     F .text	0000000000000043              trx_get_dict_operation
00000000009a9250 l     F .text	00000000000000ad              trx_set_dict_operation
00000000009a92fd l     F .text	0000000000000330              innobase_col_to_mysql(dict_col_struct const*, unsigned char const*, unsigned long, Field*)
00000000009a9875 l     F .text	0000000000000187              innobase_convert_tablename(char*)
00000000009a99fc l     F .text	000000000000039b              innobase_check_index_keys(st_key const*, unsigned long, dict_table_struct const*)
00000000009a9d97 l     F .text	0000000000000211              innobase_create_index_field_def(st_key_part_info*, mem_block_info_struct*, merge_index_field_struct*)
00000000009a9fa8 l     F .text	00000000000001cf              innobase_create_index_def(st_key*, bool, bool, merge_index_def_struct*, mem_block_info_struct*)
00000000009aa177 l     F .text	00000000000000d8              innobase_copy_index_field_def(dict_field_struct const*, merge_index_field_struct*)
0000000000cecb80 l     O .rodata	000000000000004e              innobase_copy_index_field_def(dict_field_struct const*, merge_index_field_struct*)::__PRETTY_FUNCTION__
00000000009aa24f l     F .text	0000000000000130              innobase_copy_index_def(dict_index_struct const*, merge_index_def_struct*, mem_block_info_struct*)
00000000009aa37f l     F .text	0000000000000335              innobase_create_key_def(trx_struct*, dict_table_struct const*, mem_block_info_struct*, st_key*, unsigned long&)
00000000009aa6b4 l     F .text	0000000000000098              innobase_check_column_length(dict_table_struct const*, st_key const*)
00000000009aa74c l     F .text	000000000000009e              innobase_create_temporary_tablename(mem_block_info_struct*, char, char const*)
0000000000cecbce l     O .rodata	0000000000000007              innobase_create_temporary_tablename(mem_block_info_struct*, char, char const*)::suffix
0000000000000000 l    df *ABS*	0000000000000000              i_s.cc
0000000000cecbe0 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000cecbf0 l     O .rodata	0000000000000013              plugin_author
00000000009ac531 l     F .text	0000000000000017              os_atomic_test_and_set
00000000009ac548 l     F .text	0000000000000017              os_atomic_clear
00000000009ac55f l     F .text	0000000000000022              ut_min
00000000009ac581 l     F .text	000000000000002c              mach_read_from_2
00000000009ac5ad l     F .text	0000000000000087              mach_read_from_4
00000000009ac634 l     F .text	000000000000003a              mach_read_from_8
00000000009ac66e l     F .text	000000000000001e              mutex_test_and_set
00000000009ac68c l     F .text	000000000000001f              mutex_reset_lock_word
00000000009ac6ab l     F .text	000000000000004e              mutex_get_waiters
00000000009ac6f9 l     F .text	0000000000000085              mutex_exit_func
00000000009ac77e l     F .text	00000000000000e0              mutex_enter_func
00000000009ac85e l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009ac96c l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009ac9d9 l     F .text	0000000000000012              mem_block_get_len
00000000009ac9eb l     F .text	0000000000000089              mem_block_set_free
00000000009aca74 l     F .text	0000000000000012              mem_block_get_free
00000000009aca86 l     F .text	0000000000000012              mem_block_get_start
00000000009aca98 l     F .text	000000000000009f              mem_heap_zalloc
00000000009acb37 l     F .text	000000000000014d              mem_heap_alloc
00000000009acc84 l     F .text	0000000000000162              mem_heap_free_heap_top
00000000009acde6 l     F .text	000000000000004d              mem_heap_empty
00000000009ace33 l     F .text	000000000000016b              mem_heap_create_func
00000000009acf9e l     F .text	00000000000000a8              mem_heap_free_func
00000000009ad046 l     F .text	000000000000010b              mem_alloc_func
00000000009ad151 l     F .text	0000000000000048              mem_free_func
00000000009ad199 l     F .text	0000000000000049              buf_page_get_state
00000000009ad1e2 l     F .text	000000000000006a              buf_page_in_file
00000000009ad24c l     F .text	000000000000004d              buf_page_get_io_fix
00000000009ad299 l     F .text	000000000000007a              buf_page_get_space
00000000009ad313 l     F .text	000000000000007b              buf_page_get_page_no
00000000009ad38e l     F .text	0000000000000089              buf_pool_from_array
00000000009ad417 l     F .text	0000000000000043              buf_get_nth_chunk_block
00000000009ad45a l     F .text	0000000000000083              page_header_get_field
00000000009ad4dd l     F .text	0000000000000024              page_is_comp
00000000009ad501 l     F .text	000000000000001f              page_get_n_recs
00000000009ad520 l     F .text	000000000000001e              btr_page_get_index_id
00000000010f4460 l     O .data	00000000000000f0              i_s_page_type
00000000009ad53e l     F .text	0000000000000082              field_store_time_t(Field*, long)
00000000009ad5c0 l     F .text	000000000000008a              field_store_string(Field*, char const*)
00000000009ad64a l     F .text	000000000000008e              field_store_ulint(Field*, unsigned long)
00000000010f4560 l     O .data	0000000000000398              innodb_trx_fields_info
00000000009ad6d8 l     F .text	0000000000000aa6              fill_innodb_trx_from_cache(trx_i_s_cache_struct*, THD*, TABLE*)
00000000009ae17e l     F .text	000000000000008c              innodb_trx_init(void*)
00000000009aebae l     F .text	00000000000002a3              trx_i_s_common_fill_table(THD*, TABLE_LIST*, Item*)
00000000010f4458 l     O .data	0000000000000004              i_s_info
00000000009b31d0 l     F .text	0000000000000066              i_s_common_deinit(void*)
00000000010f4980 l     O .data	00000000000001b8              innodb_locks_fields_info
00000000009ae20a l     F .text	00000000000005ab              fill_innodb_locks_from_cache(trx_i_s_cache_struct*, THD*, TABLE*)
00000000009ae7b5 l     F .text	000000000000008c              innodb_locks_init(void*)
00000000010f4bc0 l     O .data	00000000000000c8              innodb_lock_waits_fields_info
00000000009ae841 l     F .text	00000000000002e1              fill_innodb_lock_waits_from_cache(trx_i_s_cache_struct*, THD*, TABLE*)
00000000009aeb22 l     F .text	000000000000008c              innodb_lock_waits_init(void*)
00000000010f4d20 l     O .data	0000000000000118              i_s_cmp_fields_info
00000000009aee51 l     F .text	00000000000003bb              i_s_cmp_fill_low(THD*, TABLE_LIST*, Item*, unsigned long)
00000000009af20c l     F .text	000000000000002f              i_s_cmp_fill(THD*, TABLE_LIST*, Item*)
00000000009af23b l     F .text	000000000000002f              i_s_cmp_reset_fill(THD*, TABLE_LIST*, Item*)
00000000009af26a l     F .text	000000000000008c              i_s_cmp_init(void*)
00000000009af2f6 l     F .text	000000000000008c              i_s_cmp_reset_init(void*)
00000000010f4f40 l     O .data	0000000000000118              i_s_cmpmem_fields_info
00000000009af382 l     F .text	00000000000004b5              i_s_cmpmem_fill_low(THD*, TABLE_LIST*, Item*, unsigned long)
00000000009af837 l     F .text	000000000000002f              i_s_cmpmem_fill(THD*, TABLE_LIST*, Item*)
00000000009af866 l     F .text	000000000000002f              i_s_cmpmem_reset_fill(THD*, TABLE_LIST*, Item*)
00000000009af895 l     F .text	000000000000008c              i_s_cmpmem_init(void*)
00000000009af921 l     F .text	000000000000008c              i_s_cmpmem_reset_init(void*)
00000000010f5160 l     O .data	0000000000000528              i_s_innodb_buffer_stats_fields_info
00000000009af9ad l     F .text	00000000000010c9              i_s_innodb_stats_fill(THD*, TABLE_LIST*, buf_pool_info_struct const*)
00000000009b0a76 l     F .text	000000000000020c              i_s_innodb_buffer_stats_fill_table(THD*, TABLE_LIST*, Item*)
00000000009b0c82 l     F .text	000000000000008c              i_s_innodb_buffer_pool_stats_init(void*)
00000000010f5720 l     O .data	0000000000000348              i_s_innodb_buffer_page_fields_info
00000000009b0d0e l     F .text	0000000000000bbe              i_s_innodb_buffer_page_fill(THD*, TABLE_LIST*, buffer_page_info_struct const*, unsigned long, mem_block_info_struct*)
00000000009b18cc l     F .text	0000000000000209              i_s_innodb_set_page_type(buffer_page_info_struct*, unsigned long, unsigned char const*)
00000000009b1ad5 l     F .text	00000000000002f8              i_s_innodb_buffer_page_get_info(buf_page_struct const*, unsigned long, unsigned long, buffer_page_info_struct*)
00000000009b1dcd l     F .text	0000000000000323              i_s_innodb_fill_buffer_pool(THD*, TABLE_LIST*, buf_pool_struct*, unsigned long)
00000000009b20f0 l     F .text	00000000000000f1              i_s_innodb_buffer_page_fill_table(THD*, TABLE_LIST*, Item*)
00000000009b21e1 l     F .text	000000000000008c              i_s_innodb_buffer_page_init(void*)
00000000010f5b00 l     O .data	0000000000000348              i_s_innodb_buf_page_lru_fields_info
00000000009b226d l     F .text	0000000000000b38              i_s_innodb_buf_page_lru_fill(THD*, TABLE_LIST*, buffer_page_info_struct const*, unsigned long)
00000000009b2da5 l     F .text	00000000000002ae              i_s_innodb_fill_buffer_lru(THD*, TABLE_LIST*, buf_pool_struct*, unsigned long)
00000000009b3053 l     F .text	00000000000000f1              i_s_innodb_buf_page_lru_fill_table(THD*, TABLE_LIST*, Item*)
00000000009b3144 l     F .text	000000000000008c              i_s_innodb_buffer_page_lru_init(void*)
0000000000000000 l    df *ABS*	0000000000000000              read0read.c
00000000009b3236 l     F .text	0000000000000017              os_atomic_test_and_set
00000000009b324d l     F .text	0000000000000017              os_atomic_clear
00000000009b3264 l     F .text	000000000000001e              mutex_test_and_set
00000000009b3282 l     F .text	000000000000001f              mutex_reset_lock_word
00000000009b32a1 l     F .text	000000000000004e              mutex_get_waiters
00000000009b32ef l     F .text	000000000000007b              mutex_exit_func
00000000009b336a l     F .text	00000000000000d1              mutex_enter_func
00000000009b343b l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009b3549 l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009b35b6 l     F .text	0000000000000012              mem_block_get_len
00000000009b35c8 l     F .text	0000000000000084              mem_block_set_free
00000000009b364c l     F .text	0000000000000012              mem_block_get_free
00000000009b365e l     F .text	0000000000000012              mem_block_get_start
00000000009b3670 l     F .text	0000000000000143              mem_heap_alloc
00000000009b37b3 l     F .text	000000000000013f              mem_heap_free_heap_top
00000000009b38f2 l     F .text	000000000000004d              mem_heap_empty
00000000009b393f l     F .text	000000000000016b              mem_heap_create_func
00000000009b3aaa l     F .text	00000000000000a3              mem_heap_free_func
00000000009b3b4d l     F .text	000000000000005c              read_view_get_nth_trx_id
00000000009b3ba9 l     F .text	0000000000000065              read_view_set_nth_trx_id
00000000009b3c0e l     F .text	000000000000005d              read_view_create_low
0000000000000000 l    df *ABS*	0000000000000000              row0merge.c
00000000009b4b03 l     F .text	000000000000001b              ut_min
00000000009b4b1e l     F .text	000000000000001b              ut_max
00000000009b4b39 l     F .text	00000000000000b4              ut_align_down
00000000009b4bed l     F .text	00000000000000b2              ut_align_offset
00000000009b4c9f l     F .text	0000000000000045              mach_read_from_1
00000000009b4ce4 l     F .text	000000000000002c              mach_read_from_2
00000000009b4d10 l     F .text	0000000000000087              mach_read_from_4
00000000009b4d97 l     F .text	000000000000003a              mach_read_from_8
00000000009b4dd1 l     F .text	0000000000000263              dtype_get_min_size_low
00000000009b5034 l     F .text	0000000000000057              ut_hash_ulint
00000000009b508b l     F .text	000000000000003a              ut_fold_ulint_pair
00000000009b50c5 l     F .text	0000000000000027              ut_fold_ull
00000000009b50ec l     F .text	000000000000011b              pfs_os_file_read_no_error_handling_func
00000000009b5207 l     F .text	0000000000000131              pfs_os_file_write_func
00000000009b5338 l     F .text	0000000000000012              mem_block_get_len
00000000009b534a l     F .text	0000000000000084              mem_block_set_free
00000000009b53ce l     F .text	0000000000000012              mem_block_get_free
00000000009b53e0 l     F .text	0000000000000012              mem_block_get_start
00000000009b53f2 l     F .text	000000000000009f              mem_heap_zalloc
00000000009b5491 l     F .text	0000000000000143              mem_heap_alloc
00000000009b55d4 l     F .text	000000000000013f              mem_heap_free_heap_top
00000000009b5713 l     F .text	000000000000004d              mem_heap_empty
00000000009b5760 l     F .text	000000000000016b              mem_heap_create_func
00000000009b58cb l     F .text	00000000000000a3              mem_heap_free_func
00000000009b596e l     F .text	00000000000000fd              mem_alloc_func
00000000009b5a6b l     F .text	000000000000003a              mem_free_func
00000000009b5aa5 l     F .text	0000000000000043              dfield_get_type
00000000009b5ae8 l     F .text	0000000000000090              dfield_get_data
00000000009b5b78 l     F .text	0000000000000092              dfield_get_len
00000000009b5c0a l     F .text	000000000000005b              dfield_set_len
00000000009b5c65 l     F .text	000000000000004b              dfield_is_null
00000000009b5cb0 l     F .text	0000000000000049              dfield_is_ext
00000000009b5cf9 l     F .text	000000000000004a              dfield_set_ext
00000000009b5d43 l     F .text	000000000000006a              dfield_set_data
00000000009b5dad l     F .text	000000000000002d              dfield_copy
00000000009b5dda l     F .text	000000000000004d              dfield_dup
00000000009b5e27 l     F .text	0000000000000043              dtuple_get_n_fields
00000000009b5e6a l     F .text	000000000000008f              dtuple_get_nth_field
00000000009b5ef9 l     F .text	0000000000000055              dtuple_from_fields
00000000009b5f4e l     F .text	00000000000000fa              dtuple_get_n_ext
00000000009b6048 l     F .text	0000000000000074              dyn_array_create
00000000009b60bc l     F .text	0000000000000096              mtr_start
00000000009b6152 l     F .text	00000000000000bc              hash_get_nth_cell
00000000009b620e l     F .text	000000000000008c              hash_calc_hash
00000000009b629a l     F .text	00000000000000dc              hash_get_mutex_no
00000000009b6376 l     F .text	00000000000000cc              hash_get_nth_mutex
00000000009b6442 l     F .text	000000000000009f              hash_get_mutex
00000000009b64e1 l     F .text	0000000000000044              dict_col_get_min_size
00000000009b6525 l     F .text	000000000000004e              dict_col_get_no
00000000009b6573 l     F .text	000000000000007c              dict_table_get_first_index
00000000009b65ef l     F .text	000000000000007c              dict_table_get_next_index
00000000009b666b l     F .text	0000000000000085              dict_index_is_clust
00000000009b66f0 l     F .text	0000000000000085              dict_index_is_unique
00000000009b6775 l     F .text	000000000000008c              dict_table_get_n_user_cols
00000000009b6801 l     F .text	0000000000000087              dict_table_get_n_cols
00000000009b6888 l     F .text	00000000000000d1              dict_table_get_nth_col
00000000009b6959 l     F .text	000000000000004c              dict_table_is_comp
00000000009b69a5 l     F .text	000000000000006e              dict_table_flags_to_zip_size
00000000009b6a13 l     F .text	0000000000000051              dict_table_zip_size
00000000009b6a64 l     F .text	0000000000000087              dict_index_get_n_fields
00000000009b6aeb l     F .text	00000000000000b8              dict_index_get_n_unique
00000000009b6ba3 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
00000000009b6c77 l     F .text	00000000000000d1              dict_index_get_nth_field
00000000009b6d48 l     F .text	0000000000000042              dict_field_get_col
00000000009b6d8a l     F .text	000000000000002d              dict_index_get_nth_col
00000000009b6db7 l     F .text	000000000000005c              dict_index_get_min_size
00000000009b6e13 l     F .text	00000000000001d1              dict_table_get_on_id_low
00000000009b6fe4 l     F .text	00000000000000e2              dict_index_is_corrupted
00000000009b70c6 l     F .text	000000000000006d              rec_get_bit_field_1
00000000009b7133 l     F .text	000000000000006d              rec_get_bit_field_2
00000000009b71a0 l     F .text	0000000000000161              rec_get_next_offs
00000000009b7301 l     F .text	00000000000000bb              rec_get_n_fields_old
00000000009b73bc l     F .text	0000000000000091              rec_get_status
00000000009b744d l     F .text	0000000000000053              rec_get_deleted_flag
00000000009b74a0 l     F .text	0000000000000077              rec_offs_get_n_alloc
00000000009b7517 l     F .text	00000000000000ed              rec_offs_n_fields
00000000009b7604 l     F .text	00000000000002a6              rec_offs_validate
00000000009b78aa l     F .text	00000000000000ae              rec_offs_data_size
00000000009b7958 l     F .text	000000000000009f              rec_offs_extra_size
00000000009b79f7 l     F .text	0000000000000032              rec_offs_size
00000000009b7a29 l     F .text	0000000000000046              buf_page_get_state
00000000009b7a6f l     F .text	000000000000001a              buf_block_get_state
00000000009b7a89 l     F .text	000000000000007b              buf_block_get_page_no
00000000009b7b04 l     F .text	0000000000000063              trx_start_if_not_started
00000000009b7b67 l     F .text	0000000000000048              cmp_data_data
00000000009b7baf l     F .text	00000000000000c9              cmp_dfield_dfield
00000000009b7c78 l     F .text	000000000000001f              page_align
00000000009b7c97 l     F .text	000000000000001f              page_offset
00000000009b7cb6 l     F .text	0000000000000083              page_header_get_field
00000000009b7d39 l     F .text	0000000000000024              page_is_comp
00000000009b7d5d l     F .text	0000000000000022              page_rec_is_comp
00000000009b7d7f l     F .text	0000000000000099              page_rec_is_supremum_low
00000000009b7e18 l     F .text	0000000000000099              page_rec_is_infimum_low
00000000009b7eb1 l     F .text	0000000000000022              page_rec_is_supremum
00000000009b7ed3 l     F .text	0000000000000022              page_rec_is_infimum
00000000009b7ef5 l     F .text	0000000000000056              page_get_page_no
00000000009b7f4b l     F .text	0000000000000056              page_get_space_id
00000000009b7fa1 l     F .text	000000000000001f              page_dir_get_n_slots
00000000009b7fc0 l     F .text	0000000000000067              page_dir_get_nth_slot
00000000009b8027 l     F .text	00000000000000d9              page_rec_check
00000000009b8100 l     F .text	0000000000000032              page_dir_slot_get_rec
00000000009b8132 l     F .text	0000000000000149              page_rec_get_next_low
00000000009b827b l     F .text	000000000000002c              page_rec_get_next
00000000009b82a7 l     F .text	0000000000000190              page_rec_get_prev_const
00000000009b8437 l     F .text	000000000000001a              page_rec_get_prev
00000000009b8451 l     F .text	000000000000008f              page_cur_get_block
00000000009b84e0 l     F .text	000000000000008e              page_cur_get_rec
00000000009b856e l     F .text	0000000000000096              page_cur_is_before_first
00000000009b8604 l     F .text	0000000000000096              page_cur_is_after_last
00000000009b869a l     F .text	000000000000005f              page_cur_move_to_next
00000000009b86f9 l     F .text	000000000000005f              page_cur_move_to_prev
00000000009b8758 l     F .text	00000000000000c8              btr_page_get_next
00000000009b8820 l     F .text	0000000000000012              btr_cur_get_page_cur
00000000009b8832 l     F .text	0000000000000022              btr_cur_get_block
00000000009b8854 l     F .text	000000000000001e              btr_cur_get_rec
00000000009b8872 l     F .text	0000000000000026              btr_cur_get_page
00000000009b8898 l     F .text	0000000000000016              btr_pcur_get_btr_cur
00000000009b88ae l     F .text	0000000000000022              btr_pcur_get_page_cur
00000000009b88d0 l     F .text	0000000000000057              btr_pcur_get_page
00000000009b8927 l     F .text	0000000000000057              btr_pcur_get_block
00000000009b897e l     F .text	000000000000008e              btr_pcur_get_rec
00000000009b8a0c l     F .text	000000000000008e              btr_pcur_is_after_last_on_page
00000000009b8a9a l     F .text	000000000000008e              btr_pcur_is_before_first_on_page
00000000009b8b28 l     F .text	00000000000000a8              btr_pcur_is_on_user_rec
00000000009b8bd0 l     F .text	00000000000000c4              btr_pcur_is_after_last_in_tree
00000000009b8c94 l     F .text	000000000000009e              btr_pcur_move_to_next_on_page
00000000009b8d32 l     F .text	000000000000009e              btr_pcur_move_to_prev_on_page
00000000009b8dd0 l     F .text	00000000000000f4              btr_pcur_move_to_next_user_rec
00000000009b8ec4 l     F .text	0000000000000071              btr_pcur_commit_specify_mtr
00000000009b8f35 l     F .text	0000000000000038              btr_pcur_init
00000000009b8f6d l     F .text	00000000000000d3              btr_pcur_open_at_index_side
00000000009b9040 l     F .text	00000000000000be              btr_pcur_close
00000000009b90fe l     F .text	000000000000015d              row_ext_lookup_ith
00000000009b925b l     F .text	00000000000000c6              row_ext_lookup
00000000009b9321 l     F .text	000000000000005c              read_view_get_nth_trx_id
00000000009b937d l     F .text	000000000000009f              read_view_sees_trx_id
00000000009b941c l     F .text	0000000000000012              que_fork_get_first_thr
00000000009b942e l     F .text	0000000000000012              que_node_get_parent
000000000138e648 l     O .bss	0000000000000008              row_merge_print_cmp
000000000138e650 l     O .bss	0000000000000008              row_merge_print_read
000000000138e658 l     O .bss	0000000000000008              row_merge_print_write
000000000138e660 l     O .bss	0000000000000008              row_merge_print_block
000000000138e668 l     O .bss	0000000000000008              row_merge_print_block_read
000000000138e670 l     O .bss	0000000000000008              row_merge_print_block_write
00000000009b9440 l     F .text	0000000000000154              row_merge_tuple_print
00000000009b9594 l     F .text	0000000000000125              row_merge_buf_create_low
00000000009b96b9 l     F .text	0000000000000092              row_merge_buf_create
00000000009b974b l     F .text	0000000000000065              row_merge_buf_empty
00000000009b97b0 l     F .text	000000000000002a              row_merge_buf_free
00000000009b97da l     F .text	00000000000007bf              row_merge_buf_add
00000000009b9f99 l     F .text	0000000000000196              row_merge_dup_report
00000000009ba12f l     F .text	00000000000000b5              row_merge_tuple_cmp
00000000009ba1e4 l     F .text	0000000000000396              row_merge_tuple_sort
00000000009ba57a l     F .text	0000000000000067              row_merge_buf_sort
00000000009ba5e1 l     F .text	00000000000002ff              row_merge_buf_write
00000000009ba8e0 l     F .text	0000000000000113              row_merge_heap_create
00000000009ba9f3 l     F .text	00000000000000c4              row_merge_dict_table_get_index
00000000009baab7 l     F .text	0000000000000119              row_merge_read
00000000009babd0 l     F .text	00000000000000e0              row_merge_write
00000000009bacb0 l     F .text	00000000000006b3              row_merge_read_rec
00000000009bb363 l     F .text	0000000000000196              row_merge_write_rec_low
00000000009bb4f9 l     F .text	000000000000033b              row_merge_write_rec
00000000009bb834 l     F .text	000000000000015d              row_merge_write_eof
00000000009bb991 l     F .text	00000000000000ff              row_merge_cmp
00000000009bba90 l     F .text	0000000000000b85              row_merge_read_clustered_index
00000000009bc615 l     F .text	00000000000007b5              row_merge_blocks
00000000009bcdca l     F .text	00000000000002af              row_merge_blocks_copy
00000000009bd079 l     F .text	0000000000000436              row_merge
00000000009bd4af l     F .text	0000000000000151              row_merge_sort
00000000009bd600 l     F .text	0000000000000146              row_merge_copy_blobs
00000000009bd746 l     F .text	000000000000048d              row_merge_insert_index_tuples
0000000000cf00c0 l     O .rodata	00000000000000db              sql.20408
00000000009be357 l     F .text	000000000000010d              row_merge_file_create_low
00000000009be464 l     F .text	0000000000000039              row_merge_file_create
00000000009be49d l     F .text	00000000000000cd              row_merge_file_destroy_low
00000000009be56a l     F .text	0000000000000031              row_merge_file_destroy
00000000009be59b l     F .text	00000000000000c3              row_merge_col_prtype
0000000000cf01a0 l     O .rodata	000000000000009e              sql.20487
00000000009bee1e l     F .text	000000000000016d              row_merge_create_index_graph
0000000000000000 l    df *ABS*	0000000000000000              row0mysql.c
00000000009bf5ba l     F .text	0000000000000017              os_atomic_test_and_set
00000000009bf5d1 l     F .text	0000000000000017              os_atomic_clear
00000000009bf5e8 l     F .text	000000000000001b              ut_max
00000000009bf603 l     F .text	0000000000000080              ut_ull_create
00000000009bf683 l     F .text	00000000000000b4              ut_align_down
00000000009bf737 l     F .text	00000000000000b2              ut_align_offset
00000000009bf7e9 l     F .text	0000000000000080              mach_write_to_1
00000000009bf869 l     F .text	0000000000000045              mach_read_from_1
00000000009bf8ae l     F .text	000000000000002c              mach_read_from_2
00000000009bf8da l     F .text	0000000000000082              mach_write_to_4
00000000009bf95c l     F .text	0000000000000087              mach_read_from_4
00000000009bf9e3 l     F .text	0000000000000071              mach_write_to_8
00000000009bfa54 l     F .text	000000000000006b              mach_read_from_6
00000000009bfabf l     F .text	00000000000000ac              mach_read_from_n_little_endian
00000000009bfb6b l     F .text	00000000000000d0              mach_write_to_n_little_endian
00000000009bfc3b l     F .text	0000000000000029              mach_read_from_2_little_endian
00000000009bfc64 l     F .text	0000000000000065              mach_write_to_2_little_endian
00000000009bfcc9 l     F .text	0000000000000018              dtype_get_mysql_type
00000000009bfce1 l     F .text	0000000000000046              dtype_get_len
00000000009bfd27 l     F .text	0000000000000069              dtype_get_mbminlen
00000000009bfd90 l     F .text	000000000000005f              dtype_get_mbmaxlen
00000000009bfdef l     F .text	0000000000000057              ut_hash_ulint
00000000009bfe46 l     F .text	000000000000003a              ut_fold_ulint_pair
00000000009bfe80 l     F .text	0000000000000075              ut_fold_string
00000000009bfef5 l     F .text	000000000000001e              mutex_test_and_set
00000000009bff13 l     F .text	000000000000001f              mutex_reset_lock_word
00000000009bff32 l     F .text	000000000000004e              mutex_get_waiters
00000000009bff80 l     F .text	000000000000007b              mutex_exit_func
00000000009bfffb l     F .text	00000000000000d1              mutex_enter_func
00000000009c00cc l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009c01da l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009c0247 l     F .text	0000000000000012              mem_block_get_len
00000000009c0259 l     F .text	0000000000000084              mem_block_set_free
00000000009c02dd l     F .text	0000000000000012              mem_block_get_free
00000000009c02ef l     F .text	0000000000000012              mem_block_get_start
00000000009c0301 l     F .text	000000000000009f              mem_heap_zalloc
00000000009c03a0 l     F .text	0000000000000143              mem_heap_alloc
00000000009c04e3 l     F .text	000000000000013f              mem_heap_free_heap_top
00000000009c0622 l     F .text	000000000000004d              mem_heap_empty
00000000009c066f l     F .text	000000000000016b              mem_heap_create_func
00000000009c07da l     F .text	00000000000000a3              mem_heap_free_func
00000000009c087d l     F .text	00000000000000fd              mem_alloc_func
00000000009c097a l     F .text	000000000000003a              mem_free_func
00000000009c09b4 l     F .text	0000000000000055              mem_strdup
00000000009c0a09 l     F .text	0000000000000056              mem_heap_strdupl
00000000009c0a5f l     F .text	0000000000000043              dfield_get_type
00000000009c0aa2 l     F .text	0000000000000092              dfield_get_len
00000000009c0b34 l     F .text	000000000000005b              dfield_set_len
00000000009c0b8f l     F .text	000000000000006a              dfield_set_data
00000000009c0bf9 l     F .text	0000000000000025              dfield_set_null
00000000009c0c1e l     F .text	000000000000008f              dtuple_get_nth_field
00000000009c0cad l     F .text	000000000000012d              dtuple_create_from_mem
00000000009c0dda l     F .text	000000000000008e              dtuple_create
00000000009c0e68 l     F .text	0000000000000022              rw_lock_reset_waiter_flag
00000000009c0e8a l     F .text	0000000000000058              rw_lock_lock_word_decr
00000000009c0ee2 l     F .text	0000000000000022              rw_lock_lock_word_incr
00000000009c0f04 l     F .text	0000000000000072              rw_lock_s_lock_low
00000000009c0f76 l     F .text	0000000000000053              rw_lock_s_lock_func
00000000009c0fc9 l     F .text	00000000000000b5              rw_lock_s_unlock_func
00000000009c107e l     F .text	00000000000000e9              rw_lock_x_unlock_func
00000000009c1167 l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
00000000009c126d l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
00000000009c1373 l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
00000000009c13da l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
00000000009c1441 l     F .text	00000000000000bc              hash_get_nth_cell
00000000009c14fd l     F .text	000000000000008c              hash_calc_hash
00000000009c1589 l     F .text	00000000000000dc              hash_get_mutex_no
00000000009c1665 l     F .text	00000000000000cc              hash_get_nth_mutex
00000000009c1731 l     F .text	000000000000009f              hash_get_mutex
00000000009c17d0 l     F .text	0000000000000114              dict_col_get_clust_pos
00000000009c19dc l     F .text	0000000000000085              dict_index_is_clust
00000000009c18e4 l     F .text	000000000000007c              dict_table_get_first_index
00000000009c1960 l     F .text	000000000000007c              dict_table_get_next_index
00000000009c1a61 l     F .text	0000000000000085              dict_index_is_unique
00000000009c1ae6 l     F .text	0000000000000087              dict_table_get_n_cols
00000000009c1b6d l     F .text	00000000000000d1              dict_table_get_nth_col
00000000009c1c3e l     F .text	000000000000014a              dict_table_get_sys_col
00000000009c1d88 l     F .text	00000000000000c5              dict_table_get_sys_col_no
00000000009c1e4d l     F .text	000000000000004c              dict_table_is_comp
00000000009c1e99 l     F .text	0000000000000051              dict_table_get_format
00000000009c1eea l     F .text	00000000000000c7              dict_table_x_lock_indexes
00000000009c24ee l     F .text	000000000000007c              dict_index_get_lock
00000000009c1fb1 l     F .text	00000000000000b6              dict_table_x_unlock_indexes
00000000009c2067 l     F .text	0000000000000087              dict_index_get_n_fields
00000000009c20ee l     F .text	00000000000000b8              dict_index_get_n_unique
00000000009c21a6 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
00000000009c227a l     F .text	000000000000001c              dict_index_get_n_ordering_defined_by_user
00000000009c2296 l     F .text	00000000000000d1              dict_index_get_nth_field
00000000009c2367 l     F .text	0000000000000118              dict_index_get_sys_col_pos
00000000009c247f l     F .text	0000000000000042              dict_field_get_col
00000000009c24c1 l     F .text	000000000000002d              dict_index_get_nth_col
00000000009c256a l     F .text	00000000000001b0              dict_table_check_if_in_cache_low
00000000009c271a l     F .text	00000000000001c6              dict_table_get_low
00000000009c28e0 l     F .text	0000000000000074              dyn_array_create
00000000009c2954 l     F .text	0000000000000096              mtr_start
00000000009c29ea l     F .text	0000000000000058              log_get_lsn
00000000009c2a42 l     F .text	000000000000006d              rec_get_bit_field_1
00000000009c2aaf l     F .text	000000000000006d              rec_get_bit_field_2
00000000009c2b1c l     F .text	0000000000000161              rec_get_next_offs
00000000009c2c7d l     F .text	00000000000000bb              rec_get_n_fields_old
00000000009c2d38 l     F .text	0000000000000091              rec_get_status
00000000009c2dc9 l     F .text	0000000000000053              rec_get_deleted_flag
00000000009c2e1c l     F .text	0000000000000077              rec_offs_get_n_alloc
00000000009c2e93 l     F .text	0000000000000078              rec_offs_set_n_alloc
00000000009c2f0b l     F .text	00000000000000ed              rec_offs_n_fields
00000000009c2ff8 l     F .text	00000000000002a6              rec_offs_validate
00000000009c329e l     F .text	000000000000010e              rec_get_nth_field_offs
00000000009c33ac l     F .text	0000000000000063              trx_start_if_not_started
00000000009c340f l     F .text	0000000000000040              trx_get_dict_operation
00000000009c344f l     F .text	00000000000000ad              trx_set_dict_operation
00000000009c34fc l     F .text	000000000000001a              trx_read_trx_id
00000000009c3516 l     F .text	000000000000001f              page_align
00000000009c3535 l     F .text	000000000000001f              page_offset
00000000009c3554 l     F .text	0000000000000083              page_header_get_field
00000000009c35d7 l     F .text	0000000000000024              page_is_comp
00000000009c35fb l     F .text	0000000000000022              page_rec_is_comp
00000000009c361d l     F .text	0000000000000099              page_rec_is_supremum_low
00000000009c36b6 l     F .text	0000000000000099              page_rec_is_infimum_low
00000000009c374f l     F .text	0000000000000022              page_rec_is_supremum
00000000009c3771 l     F .text	0000000000000022              page_rec_is_infimum
00000000009c3793 l     F .text	0000000000000056              page_get_page_no
00000000009c37e9 l     F .text	0000000000000056              page_get_space_id
00000000009c383f l     F .text	00000000000000d9              page_rec_check
00000000009c3918 l     F .text	0000000000000149              page_rec_get_next_low
00000000009c3a61 l     F .text	000000000000002c              page_rec_get_next
00000000009c3a8d l     F .text	00000000000000af              page_rec_write_field
00000000009c3b3c l     F .text	000000000000008f              page_cur_get_block
00000000009c3bcb l     F .text	000000000000008e              page_cur_get_rec
00000000009c3c59 l     F .text	0000000000000096              page_cur_is_before_first
00000000009c3cef l     F .text	0000000000000096              page_cur_is_after_last
00000000009c3d85 l     F .text	000000000000005f              page_cur_move_to_next
00000000009c3de4 l     F .text	00000000000000c8              btr_page_get_next
00000000009c3eac l     F .text	0000000000000012              btr_cur_get_page_cur
00000000009c3ebe l     F .text	0000000000000022              btr_cur_get_block
00000000009c3ee0 l     F .text	000000000000001e              btr_cur_get_rec
00000000009c3efe l     F .text	0000000000000026              btr_cur_get_page
00000000009c3f24 l     F .text	0000000000000016              btr_pcur_get_btr_cur
00000000009c3f3a l     F .text	0000000000000022              btr_pcur_get_page_cur
00000000009c3f5c l     F .text	0000000000000057              btr_pcur_get_page
00000000009c3fb3 l     F .text	0000000000000057              btr_pcur_get_block
00000000009c400a l     F .text	000000000000008e              btr_pcur_get_rec
00000000009c4098 l     F .text	000000000000008e              btr_pcur_is_after_last_on_page
00000000009c4126 l     F .text	000000000000008e              btr_pcur_is_before_first_on_page
00000000009c41b4 l     F .text	00000000000000a8              btr_pcur_is_on_user_rec
00000000009c425c l     F .text	00000000000000c4              btr_pcur_is_after_last_in_tree
00000000009c4320 l     F .text	000000000000009e              btr_pcur_move_to_next_on_page
00000000009c43be l     F .text	00000000000000f4              btr_pcur_move_to_next_user_rec
00000000009c44b2 l     F .text	0000000000000071              btr_pcur_commit_specify_mtr
00000000009c4523 l     F .text	0000000000000038              btr_pcur_init
00000000009c455b l     F .text	00000000000000d3              btr_pcur_open_at_index_side
00000000009c462e l     F .text	00000000000000be              btr_pcur_close
00000000009c46ec l     F .text	0000000000000047              thr_get_trx
00000000009c4733 l     F .text	0000000000000012              que_fork_get_first_thr
00000000009c4745 l     F .text	0000000000000012              que_node_get_parent
00000000009c4757 l     F .text	0000000000000110              row_get_trx_id_offset
00000000009c4867 l     F .text	00000000000000d5              row_get_rec_trx_id
00000000009c493c l     F .text	0000000000000071              upd_create
000000000138e690 l     O .bss	0000000000000018              row_mysql_drop_list
000000000138e6a8 l     O .bss	0000000000000008              row_mysql_drop_list_inited
0000000000cf1450 l     O .rodata	000000000000000f              S_innodb_monitor
0000000000cf1460 l     O .rodata	0000000000000014              S_innodb_lock_monitor
0000000000cf1480 l     O .rodata	000000000000001a              S_innodb_tablespace_monitor
0000000000cf14a0 l     O .rodata	0000000000000015              S_innodb_table_monitor
0000000000cf14c0 l     O .rodata	0000000000000014              S_innodb_mem_validate
00000000009c49ad l     F .text	0000000000000090              row_mysql_is_system_table
00000000009c4a3d l     F .text	0000000000000028              row_mysql_delay_if_needed
00000000009c5307 l     F .text	000000000000017a              row_mysql_convert_row_to_innobase
00000000009c5dd6 l     F .text	0000000000000187              row_get_prebuilt_insert_row
00000000009c5f5d l     F .text	0000000000000078              row_update_statistics_if_needed
00000000009c81e1 l     F .text	0000000000000062              row_drop_table_for_mysql_in_background
00000000009c85a3 l     F .text	00000000000001d0              row_add_table_to_background_drop_list
00000000009cabc2 l     F .text	000000000000009d              drop_all_foreign_keys_in_db
00000000009cb088 l     F .text	000000000000002a              row_is_mysql_tmp_table_name
00000000009cb0b2 l     F .text	0000000000000051              row_delete_constraint_low
00000000009cb103 l     F .text	0000000000000083              row_delete_constraint
0000000000000000 l    df *ABS*	0000000000000000              row0row.c
00000000009cc516 l     F .text	000000000000001b              ut_min
00000000009cc531 l     F .text	000000000000001b              ut_max
00000000009cc54c l     F .text	00000000000000b4              ut_align_down
00000000009cc600 l     F .text	00000000000000b2              ut_align_offset
00000000009cc6b2 l     F .text	000000000000002d              ut_memcpy
00000000009cc6df l     F .text	0000000000000161              ut_raw_to_hex
0000000000cf5a40 l     O .rodata	0000000000000200              hex_map.8241
00000000009cc840 l     F .text	000000000000019c              ut_str_sql_format
00000000009cc9dc l     F .text	0000000000000045              mach_read_from_1
00000000009cca21 l     F .text	000000000000002c              mach_read_from_2
00000000009cca4d l     F .text	0000000000000091              mach_read_int_type
00000000009ccade l     F .text	0000000000000015              dtype_get_charset_coll
00000000009ccaf3 l     F .text	000000000000004e              dtype_is_utf8
00000000009ccb41 l     F .text	0000000000000012              mem_block_get_len
00000000009ccb53 l     F .text	0000000000000084              mem_block_set_free
00000000009ccbd7 l     F .text	0000000000000012              mem_block_get_free
00000000009ccbe9 l     F .text	0000000000000143              mem_heap_alloc
00000000009ccd2c l     F .text	000000000000016b              mem_heap_create_func
00000000009cce97 l     F .text	00000000000000a3              mem_heap_free_func
00000000009ccf3a l     F .text	000000000000003a              mem_free_func
00000000009ccf74 l     F .text	0000000000000043              dfield_get_type
00000000009ccfb7 l     F .text	0000000000000090              dfield_get_data
00000000009cd047 l     F .text	0000000000000092              dfield_get_len
00000000009cd0d9 l     F .text	000000000000005b              dfield_set_len
00000000009cd134 l     F .text	000000000000004b              dfield_is_null
00000000009cd17f l     F .text	0000000000000049              dfield_is_ext
00000000009cd1c8 l     F .text	000000000000004a              dfield_set_ext
00000000009cd212 l     F .text	000000000000006a              dfield_set_data
00000000009cd27c l     F .text	000000000000002d              dfield_copy
00000000009cd2a9 l     F .text	000000000000004b              dtuple_set_info_bits
00000000009cd2f4 l     F .text	0000000000000080              dtuple_set_n_fields_cmp
00000000009cd374 l     F .text	0000000000000043              dtuple_get_n_fields
00000000009cd3b7 l     F .text	000000000000008f              dtuple_get_nth_field
00000000009cd446 l     F .text	000000000000012d              dtuple_create_from_mem
00000000009cd573 l     F .text	000000000000008e              dtuple_create
00000000009cd601 l     F .text	000000000000004e              dict_col_get_no
00000000009cd64f l     F .text	000000000000007c              dict_table_get_first_index
00000000009cd6cb l     F .text	0000000000000085              dict_index_is_clust
00000000009cd750 l     F .text	0000000000000087              dict_table_get_n_cols
00000000009cd7d7 l     F .text	00000000000000d1              dict_table_get_nth_col
00000000009cd8a8 l     F .text	000000000000004c              dict_table_is_comp
00000000009cd8f4 l     F .text	0000000000000051              dict_table_get_format
00000000009cd945 l     F .text	0000000000000087              dict_index_get_n_fields
00000000009cd9cc l     F .text	00000000000000b8              dict_index_get_n_unique
00000000009cda84 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
00000000009cdb58 l     F .text	00000000000000d1              dict_index_get_nth_field
00000000009cdc29 l     F .text	0000000000000042              dict_field_get_col
00000000009cdc6b l     F .text	000000000000006d              rec_get_bit_field_1
00000000009cdcd8 l     F .text	000000000000006d              rec_get_bit_field_2
00000000009cdd45 l     F .text	00000000000000bb              rec_get_n_fields_old
00000000009cde00 l     F .text	0000000000000091              rec_get_status
00000000009cde91 l     F .text	00000000000000f1              rec_get_n_fields
00000000009cdf82 l     F .text	000000000000003b              rec_get_info_bits
00000000009cdfbd l     F .text	0000000000000077              rec_offs_get_n_alloc
00000000009ce034 l     F .text	0000000000000078              rec_offs_set_n_alloc
00000000009ce0ac l     F .text	00000000000000ed              rec_offs_n_fields
00000000009ce199 l     F .text	00000000000002a6              rec_offs_validate
00000000009ce43f l     F .text	000000000000010f              rec_offs_make_valid
00000000009ce54e l     F .text	000000000000010e              rec_get_nth_field_offs
00000000009ce65c l     F .text	000000000000005f              rec_offs_comp
00000000009ce6bb l     F .text	000000000000005f              rec_offs_any_extern
00000000009ce71a l     F .text	00000000000000aa              rec_offs_nth_extern
00000000009ce7c4 l     F .text	000000000000006b              rec_offs_n_extern
00000000009ce82f l     F .text	00000000000000ae              rec_offs_data_size
00000000009ce8dd l     F .text	000000000000009f              rec_offs_extra_size
00000000009ce97c l     F .text	0000000000000032              rec_offs_size
00000000009ce9ae l     F .text	0000000000000127              rec_copy
00000000009cead5 l     F .text	000000000000001f              page_align
00000000009ceaf4 l     F .text	000000000000001f              page_offset
00000000009ceb13 l     F .text	0000000000000099              page_rec_is_infimum_low
00000000009cebac l     F .text	0000000000000022              page_rec_is_infimum
00000000009cebce l     F .text	000000000000008e              page_cur_get_rec
00000000009cec5c l     F .text	000000000000015d              row_ext_lookup_ith
00000000009cedb9 l     F .text	00000000000000c6              row_ext_lookup
00000000009cee7f l     F .text	000000000000001e              btr_cur_get_rec
00000000009cee9d l     F .text	0000000000000016              btr_pcur_get_btr_cur
00000000009ceeb3 l     F .text	000000000000008e              btr_pcur_get_rec
00000000009cef41 l     F .text	00000000000000a7              btr_pcur_get_low_match
00000000009cefe8 l     F .text	0000000000000038              btr_pcur_init
00000000009cf020 l     F .text	00000000000000b0              btr_pcur_open_func
00000000009cf0d0 l     F .text	00000000000000be              btr_pcur_close
00000000009d0e60 l     F .text	00000000000000de              row_raw_format_int
00000000009d0f3e l     F .text	00000000000000a3              row_raw_format_str
0000000000000000 l    df *ABS*	0000000000000000              row0sel.c
00000000009d11b3 l     F .text	0000000000000017              os_atomic_test_and_set
00000000009d11ca l     F .text	0000000000000017              os_atomic_clear
00000000009d11e1 l     F .text	000000000000001b              ut_max
00000000009d11fc l     F .text	00000000000000b4              ut_align_down
00000000009d12b0 l     F .text	00000000000000b2              ut_align_offset
00000000009d1362 l     F .text	000000000000002d              ut_memcpy
00000000009d138f l     F .text	0000000000000045              mach_read_from_1
00000000009d13d4 l     F .text	000000000000002c              mach_read_from_2
00000000009d1400 l     F .text	0000000000000082              mach_write_to_4
00000000009d1482 l     F .text	0000000000000087              mach_read_from_4
00000000009d1509 l     F .text	000000000000006f              mach_double_read
00000000009d1578 l     F .text	000000000000006f              mach_float_read
00000000009d15e7 l     F .text	0000000000000091              mach_read_int_type
00000000009d1678 l     F .text	0000000000000018              dtype_get_mysql_type
00000000009d1690 l     F .text	000000000000001e              mutex_test_and_set
00000000009d16ae l     F .text	000000000000001f              mutex_reset_lock_word
00000000009d16cd l     F .text	000000000000004e              mutex_get_waiters
00000000009d171b l     F .text	000000000000007b              mutex_exit_func
00000000009d1796 l     F .text	00000000000000d1              mutex_enter_func
00000000009d1867 l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009d1975 l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009d19e2 l     F .text	0000000000000012              mem_block_get_len
00000000009d19f4 l     F .text	0000000000000084              mem_block_set_free
00000000009d1a78 l     F .text	0000000000000012              mem_block_get_free
00000000009d1a8a l     F .text	0000000000000012              mem_block_get_start
00000000009d1a9c l     F .text	0000000000000143              mem_heap_alloc
00000000009d1bdf l     F .text	000000000000013f              mem_heap_free_heap_top
00000000009d1d1e l     F .text	000000000000004d              mem_heap_empty
00000000009d1d6b l     F .text	000000000000016b              mem_heap_create_func
00000000009d1ed6 l     F .text	00000000000000a3              mem_heap_free_func
00000000009d1f79 l     F .text	00000000000000fd              mem_alloc_func
00000000009d2076 l     F .text	000000000000003a              mem_free_func
00000000009d20b0 l     F .text	0000000000000043              dfield_get_type
00000000009d20f3 l     F .text	0000000000000090              dfield_get_data
00000000009d2183 l     F .text	0000000000000092              dfield_get_len
00000000009d2215 l     F .text	000000000000005b              dfield_set_len
00000000009d2270 l     F .text	000000000000004b              dfield_is_null
00000000009d22bb l     F .text	0000000000000049              dfield_is_ext
00000000009d2304 l     F .text	000000000000006a              dfield_set_data
00000000009d236e l     F .text	0000000000000025              dfield_set_null
00000000009d2393 l     F .text	000000000000008e              dfield_copy_data
00000000009d2421 l     F .text	0000000000000043              dtuple_get_n_fields_cmp
00000000009d2464 l     F .text	0000000000000043              dtuple_get_n_fields
00000000009d24a7 l     F .text	000000000000008f              dtuple_get_nth_field
00000000009d2536 l     F .text	0000000000000063              dtuple_contains_null
00000000009d2599 l     F .text	0000000000000074              rw_lock_get_writer
00000000009d260d l     F .text	0000000000000058              rw_lock_lock_word_decr
00000000009d2665 l     F .text	0000000000000022              rw_lock_lock_word_incr
00000000009d2687 l     F .text	0000000000000072              rw_lock_s_lock_low
00000000009d26f9 l     F .text	0000000000000053              rw_lock_s_lock_func
00000000009d274c l     F .text	00000000000000b5              rw_lock_s_unlock_func
00000000009d2801 l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
00000000009d2907 l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
00000000009d296e l     F .text	0000000000000114              dict_col_get_clust_pos
00000000009d2afe l     F .text	0000000000000085              dict_index_is_clust
00000000009d2a82 l     F .text	000000000000007c              dict_table_get_first_index
00000000009d2b83 l     F .text	0000000000000085              dict_index_is_unique
00000000009d2c08 l     F .text	00000000000000d1              dict_table_get_nth_col
00000000009d2cd9 l     F .text	000000000000014a              dict_table_get_sys_col
00000000009d2e23 l     F .text	00000000000000c5              dict_table_get_sys_col_no
00000000009d2ee8 l     F .text	000000000000004c              dict_table_is_comp
00000000009d2f34 l     F .text	0000000000000051              dict_table_get_format
00000000009d2f85 l     F .text	000000000000006e              dict_table_flags_to_zip_size
00000000009d2ff3 l     F .text	0000000000000051              dict_table_zip_size
00000000009d3044 l     F .text	0000000000000087              dict_index_get_n_fields
00000000009d30cb l     F .text	00000000000000b8              dict_index_get_n_unique
00000000009d3183 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
00000000009d3257 l     F .text	000000000000001c              dict_index_get_n_ordering_defined_by_user
00000000009d3273 l     F .text	00000000000000d1              dict_index_get_nth_field
00000000009d3344 l     F .text	0000000000000118              dict_index_get_sys_col_pos
00000000009d345c l     F .text	0000000000000042              dict_field_get_col
00000000009d349e l     F .text	00000000000000e2              dict_index_is_corrupted
00000000009d3580 l     F .text	0000000000000074              dyn_array_create
00000000009d35f4 l     F .text	0000000000000096              mtr_start
00000000009d368a l     F .text	0000000000000046              buf_page_get_state
00000000009d36d0 l     F .text	000000000000001a              buf_block_get_state
00000000009d36ea l     F .text	00000000000000ea              buf_block_get_frame
00000000009d37d4 l     F .text	000000000000006d              rec_get_bit_field_1
00000000009d3841 l     F .text	000000000000006d              rec_get_bit_field_2
00000000009d38ae l     F .text	0000000000000161              rec_get_next_offs
00000000009d3a0f l     F .text	00000000000000bb              rec_get_n_fields_old
00000000009d3aca l     F .text	0000000000000091              rec_get_status
00000000009d3b5b l     F .text	0000000000000053              rec_get_deleted_flag
00000000009d3bae l     F .text	0000000000000077              rec_offs_get_n_alloc
00000000009d3c25 l     F .text	0000000000000078              rec_offs_set_n_alloc
00000000009d3c9d l     F .text	00000000000000ed              rec_offs_n_fields
00000000009d3d8a l     F .text	00000000000002a6              rec_offs_validate
00000000009d4030 l     F .text	000000000000010e              rec_get_nth_field_offs
00000000009d413e l     F .text	000000000000005f              rec_offs_comp
00000000009d419d l     F .text	000000000000005f              rec_offs_any_extern
00000000009d41fc l     F .text	00000000000000aa              rec_offs_nth_extern
00000000009d42a6 l     F .text	00000000000000aa              rec_offs_nth_sql_null
00000000009d4350 l     F .text	00000000000000ae              rec_offs_data_size
00000000009d43fe l     F .text	000000000000009f              rec_offs_extra_size
00000000009d449d l     F .text	0000000000000032              rec_offs_size
00000000009d44cf l     F .text	0000000000000063              trx_start_if_not_started
00000000009d4532 l     F .text	0000000000000063              trx_start_if_not_started_low
00000000009d4595 l     F .text	0000000000000048              cmp_data_data
00000000009d45dd l     F .text	000000000000001f              page_align
00000000009d45fc l     F .text	000000000000001f              page_offset
00000000009d461b l     F .text	0000000000000083              page_header_get_field
00000000009d469e l     F .text	0000000000000024              page_is_comp
00000000009d46c2 l     F .text	0000000000000022              page_rec_is_comp
00000000009d46e4 l     F .text	000000000000008f              page_get_supremum_offset
00000000009d4773 l     F .text	00000000000000b9              page_rec_is_user_rec_low
00000000009d482c l     F .text	0000000000000099              page_rec_is_supremum_low
00000000009d48c5 l     F .text	0000000000000099              page_rec_is_infimum_low
00000000009d495e l     F .text	0000000000000022              page_rec_is_user_rec
00000000009d4980 l     F .text	0000000000000022              page_rec_is_supremum
00000000009d49a2 l     F .text	0000000000000022              page_rec_is_infimum
00000000009d49c4 l     F .text	0000000000000056              page_get_page_no
00000000009d4a1a l     F .text	0000000000000056              page_get_space_id
00000000009d4a70 l     F .text	000000000000001f              page_get_n_recs
00000000009d4a8f l     F .text	00000000000000d9              page_rec_check
00000000009d4b68 l     F .text	0000000000000149              page_rec_get_next_low
00000000009d4cb1 l     F .text	000000000000002c              page_rec_get_next
00000000009d4cdd l     F .text	000000000000002c              page_rec_get_next_const
00000000009d4d09 l     F .text	000000000000008f              page_cur_get_block
00000000009d4d98 l     F .text	000000000000008e              page_cur_get_rec
00000000009d4e26 l     F .text	000000000000005b              page_cur_set_after_last
00000000009d4e81 l     F .text	0000000000000096              page_cur_is_before_first
00000000009d4f17 l     F .text	0000000000000096              page_cur_is_after_last
00000000009d4fad l     F .text	000000000000005f              page_cur_move_to_next
00000000009d500c l     F .text	00000000000000c8              btr_page_get_next
00000000009d50d4 l     F .text	0000000000000012              btr_cur_get_page_cur
00000000009d50e6 l     F .text	0000000000000022              btr_cur_get_block
00000000009d5108 l     F .text	000000000000001e              btr_cur_get_rec
00000000009d5126 l     F .text	0000000000000026              btr_cur_get_page
00000000009d514c l     F .text	0000000000000102              btr_pcur_get_rel_pos
00000000009d524e l     F .text	0000000000000016              btr_pcur_get_btr_cur
00000000009d5264 l     F .text	0000000000000022              btr_pcur_get_page_cur
00000000009d5286 l     F .text	0000000000000057              btr_pcur_get_page
00000000009d52dd l     F .text	0000000000000057              btr_pcur_get_block
00000000009d5334 l     F .text	000000000000008e              btr_pcur_get_rec
00000000009d53c2 l     F .text	00000000000000a7              btr_pcur_get_up_match
00000000009d5469 l     F .text	00000000000000a7              btr_pcur_get_low_match
00000000009d5510 l     F .text	000000000000008e              btr_pcur_is_after_last_on_page
00000000009d559e l     F .text	000000000000008e              btr_pcur_is_before_first_on_page
00000000009d562c l     F .text	00000000000000a8              btr_pcur_is_on_user_rec
00000000009d56d4 l     F .text	00000000000000c4              btr_pcur_is_after_last_in_tree
00000000009d5798 l     F .text	000000000000009e              btr_pcur_move_to_next_on_page
00000000009d5836 l     F .text	0000000000000085              btr_pcur_move_to_last_on_page
00000000009d58bb l     F .text	00000000000000e8              btr_pcur_move_to_next
00000000009d59a3 l     F .text	0000000000000038              btr_pcur_init
00000000009d59db l     F .text	00000000000000b4              btr_pcur_open_with_no_init_func
00000000009d5a8f l     F .text	00000000000000d3              btr_pcur_open_at_index_side
00000000009d5b62 l     F .text	00000000000000be              btr_pcur_close
00000000009d5c20 l     F .text	0000000000000047              thr_get_trx
00000000009d5c67 l     F .text	0000000000000012              que_fork_get_first_thr
00000000009d5c79 l     F .text	0000000000000042              que_node_get_type
00000000009d5cbb l     F .text	0000000000000043              que_node_get_val
00000000009d5cfe l     F .text	0000000000000043              que_node_get_val_buf_size
00000000009d5d41 l     F .text	000000000000004c              que_node_set_val_buf_size
00000000009d5d8d l     F .text	0000000000000012              que_node_get_next
00000000009d5d9f l     F .text	0000000000000012              que_node_get_parent
00000000009d5db1 l     F .text	000000000000006d              sel_node_get_nth_plan
00000000009d5e1e l     F .text	0000000000000156              row_build_row_ref_fast
00000000009d5f74 l     F .text	0000000000000079              eval_node_ensure_val_buf
00000000009d5fed l     F .text	0000000000000084              eval_sym
00000000009d6071 l     F .text	000000000000003a              eval_exp
00000000009d60ab l     F .text	000000000000009a              eval_node_set_int_val
00000000009d6145 l     F .text	0000000000000067              eval_node_get_ibool_val
00000000009d61ac l     F .text	000000000000006f              eval_node_copy_and_alloc_val
00000000009d621b l     F .text	0000000000000059              eval_node_copy_val
00000000009d6274 l     F .text	0000000000000278              row_sel_sec_rec_is_for_blob
00000000009d64ec l     F .text	000000000000047b              row_sel_sec_rec_is_for_clust_rec
00000000009d6a5b l     F .text	0000000000000040              sel_eval_select_list
00000000009d6a9b l     F .text	0000000000000095              sel_assign_into_var_values
00000000009d6b30 l     F .text	000000000000008a              sel_reset_aggregate_vals
00000000009d6bba l     F .text	0000000000000056              row_sel_copy_input_variable_vals
00000000009d6c10 l     F .text	0000000000000267              row_sel_fetch_columns
00000000009d6e77 l     F .text	00000000000000cc              sel_col_prefetch_buf_alloc
00000000009d6fc7 l     F .text	0000000000000267              sel_pop_prefetched_row
00000000009d722e l     F .text	00000000000001da              sel_push_prefetched_row
00000000009d7408 l     F .text	000000000000009b              row_sel_build_prev_vers
00000000009d74a3 l     F .text	00000000000000b0              row_sel_build_committed_vers_for_mysql
00000000009d7553 l     F .text	000000000000005f              row_sel_test_end_conds
00000000009d75b2 l     F .text	000000000000005b              row_sel_test_other_conds
00000000009d760d l     F .text	00000000000005bd              row_sel_get_clust_rec
00000000009d7bca l     F .text	00000000000000d8              sel_set_rec_lock
00000000009d7ca2 l     F .text	000000000000027b              row_sel_open_pcur
00000000009d7f1d l     F .text	000000000000017d              row_sel_restore_pcur_pos
00000000009d809a l     F .text	0000000000000047              plan_reset_cursor
00000000009d80e1 l     F .text	00000000000003dc              row_sel_try_search_shortcut
00000000009d84bd l     F .text	0000000000001345              row_sel
00000000009da4df l     F .text	00000000000001ae              row_sel_store_row_id_to_prebuilt
00000000009da68d l     F .text	00000000000004c8              row_sel_field_store_in_mysql_format
00000000009dab55 l     F .text	0000000000000539              row_sel_store_mysql_rec
00000000009db08e l     F .text	00000000000000ab              row_sel_build_prev_vers_for_mysql
00000000009db139 l     F .text	00000000000004f7              row_sel_get_clust_rec_for_mysql
00000000009db630 l     F .text	00000000000002cc              sel_restore_position_for_mysql
00000000009db8fc l     F .text	00000000000000c1              row_sel_copy_cached_field_for_mysql
00000000009db9bd l     F .text	0000000000000293              row_sel_pop_cached_row_for_mysql
00000000009dbc50 l     F .text	0000000000000251              row_sel_push_cache_row_for_mysql
00000000009dbea1 l     F .text	0000000000000205              row_sel_try_search_shortcut_for_mysql
00000000009dec9a l     F .text	0000000000000341              row_search_autoinc_read_column
00000000009defdb l     F .text	0000000000000056              row_search_autoinc_get_rec
0000000000000000 l    df *ABS*	0000000000000000              row0upd.c
00000000009df25a l     F .text	0000000000000017              os_atomic_test_and_set
00000000009df271 l     F .text	0000000000000017              os_atomic_clear
00000000009df288 l     F .text	000000000000001b              ut_max
00000000009df2a3 l     F .text	0000000000000080              ut_ull_create
00000000009df323 l     F .text	00000000000000b4              ut_align_down
00000000009df3d7 l     F .text	00000000000000b2              ut_align_offset
00000000009df489 l     F .text	000000000000002d              ut_memcpy
00000000009df4b6 l     F .text	0000000000000080              mach_write_to_1
00000000009df536 l     F .text	0000000000000045              mach_read_from_1
00000000009df57b l     F .text	0000000000000096              mach_write_to_2
00000000009df611 l     F .text	000000000000002c              mach_read_from_2
00000000009df63d l     F .text	00000000000000a8              mach_write_to_3
00000000009df6e5 l     F .text	0000000000000072              mach_read_from_3
00000000009df757 l     F .text	0000000000000082              mach_write_to_4
00000000009df7d9 l     F .text	0000000000000087              mach_read_from_4
00000000009df860 l     F .text	0000000000000116              mach_write_compressed
00000000009df976 l     F .text	0000000000000050              mach_get_compressed_size
00000000009df9c6 l     F .text	00000000000000f2              mach_read_compressed
00000000009dfab8 l     F .text	0000000000000071              mach_write_to_7
00000000009dfb29 l     F .text	000000000000006b              mach_read_from_7
00000000009dfb94 l     F .text	0000000000000071              mach_write_to_6
00000000009dfc05 l     F .text	000000000000007f              mach_ull_write_compressed
00000000009dfc84 l     F .text	000000000000013e              mach_ull_parse_compressed
00000000009dfdc2 l     F .text	0000000000000015              dtype_get_charset_coll
00000000009dfdd7 l     F .text	0000000000000244              dtype_get_fixed_size_low
00000000009e001b l     F .text	000000000000001e              mutex_test_and_set
00000000009e0039 l     F .text	000000000000001f              mutex_reset_lock_word
00000000009e0058 l     F .text	000000000000004e              mutex_get_waiters
00000000009e00a6 l     F .text	000000000000007b              mutex_exit_func
00000000009e0121 l     F .text	00000000000000d1              mutex_enter_func
00000000009e01f2 l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009e0300 l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009e036d l     F .text	0000000000000012              mem_block_get_len
00000000009e037f l     F .text	0000000000000084              mem_block_set_free
00000000009e0403 l     F .text	0000000000000012              mem_block_get_free
00000000009e0415 l     F .text	0000000000000012              mem_block_get_start
00000000009e0427 l     F .text	0000000000000143              mem_heap_alloc
00000000009e056a l     F .text	000000000000013f              mem_heap_free_heap_top
00000000009e06a9 l     F .text	000000000000004d              mem_heap_empty
00000000009e06f6 l     F .text	000000000000016b              mem_heap_create_func
00000000009e0861 l     F .text	00000000000000a3              mem_heap_free_func
00000000009e0904 l     F .text	000000000000003a              mem_free_func
00000000009e093e l     F .text	0000000000000043              dfield_get_type
00000000009e0981 l     F .text	0000000000000090              dfield_get_data
00000000009e0a11 l     F .text	0000000000000092              dfield_get_len
00000000009e0aa3 l     F .text	000000000000005b              dfield_set_len
00000000009e0afe l     F .text	000000000000004b              dfield_is_null
00000000009e0b49 l     F .text	0000000000000049              dfield_is_ext
00000000009e0b92 l     F .text	000000000000004a              dfield_set_ext
00000000009e0bdc l     F .text	000000000000006a              dfield_set_data
00000000009e0c46 l     F .text	0000000000000025              dfield_set_null
00000000009e0c6b l     F .text	000000000000008e              dfield_copy_data
00000000009e0cf9 l     F .text	000000000000002d              dfield_copy
00000000009e0d26 l     F .text	000000000000004d              dfield_dup
00000000009e0d73 l     F .text	00000000000000c0              dfield_datas_are_binary_equal
00000000009e0e33 l     F .text	000000000000004b              dtuple_set_info_bits
00000000009e0e7e l     F .text	0000000000000043              dtuple_get_n_fields
00000000009e0ec1 l     F .text	000000000000008f              dtuple_get_nth_field
00000000009e0f50 l     F .text	000000000000012d              dtuple_create_from_mem
00000000009e107d l     F .text	000000000000008e              dtuple_create
00000000009e110b l     F .text	0000000000000090              dtuple_copy
00000000009e119b l     F .text	000000000000002a              dtuple_big_rec_free
00000000009e11c5 l     F .text	00000000000000ac              dict_col_copy_type
00000000009e1271 l     F .text	0000000000000052              dict_col_get_fixed_size
00000000009e12c3 l     F .text	0000000000000025              dict_col_get_sql_null_size
00000000009e12e8 l     F .text	000000000000004e              dict_col_get_no
00000000009e1336 l     F .text	0000000000000114              dict_col_get_clust_pos
00000000009e1542 l     F .text	0000000000000085              dict_index_is_clust
00000000009e144a l     F .text	000000000000007c              dict_table_get_first_index
00000000009e14c6 l     F .text	000000000000007c              dict_table_get_next_index
00000000009e15c7 l     F .text	0000000000000087              dict_table_get_n_cols
00000000009e164e l     F .text	00000000000000d1              dict_table_get_nth_col
00000000009e171f l     F .text	000000000000014a              dict_table_get_sys_col
00000000009e1869 l     F .text	00000000000000c5              dict_table_get_sys_col_no
00000000009e192e l     F .text	000000000000004c              dict_table_is_comp
00000000009e197a l     F .text	0000000000000051              dict_table_get_format
00000000009e19cb l     F .text	000000000000006e              dict_table_flags_to_zip_size
00000000009e1a39 l     F .text	0000000000000051              dict_table_zip_size
00000000009e1a8a l     F .text	0000000000000087              dict_index_get_n_fields
00000000009e1b11 l     F .text	00000000000000b8              dict_index_get_n_unique
00000000009e1bc9 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
00000000009e1c9d l     F .text	00000000000000d1              dict_index_get_nth_field
00000000009e1d6e l     F .text	0000000000000118              dict_index_get_sys_col_pos
00000000009e1e86 l     F .text	0000000000000042              dict_field_get_col
00000000009e1ec8 l     F .text	000000000000002d              dict_index_get_nth_col
00000000009e1ef5 l     F .text	00000000000000e2              dict_index_is_corrupted
00000000009e1fd7 l     F .text	0000000000000074              dyn_array_create
00000000009e204b l     F .text	0000000000000205              dyn_array_open
00000000009e2250 l     F .text	000000000000013b              dyn_array_close
00000000009e238b l     F .text	0000000000000096              mtr_start
00000000009e2421 l     F .text	00000000000000b4              mtr_get_log_mode
00000000009e24d5 l     F .text	0000000000000022              log_free_check
00000000009e24f7 l     F .text	000000000000006d              rec_get_bit_field_1
00000000009e2564 l     F .text	00000000000001bd              rec_set_bit_field_1
00000000009e2721 l     F .text	000000000000006d              rec_get_bit_field_2
00000000009e278e l     F .text	00000000000000bb              rec_get_n_fields_old
00000000009e2849 l     F .text	0000000000000091              rec_get_status
00000000009e28da l     F .text	0000000000000033              rec_set_info_bits_old
00000000009e290d l     F .text	0000000000000033              rec_set_info_bits_new
00000000009e2940 l     F .text	0000000000000053              rec_get_deleted_flag
00000000009e2993 l     F .text	0000000000000029              rec_get_1byte_offs_flag
00000000009e29bc l     F .text	0000000000000077              rec_offs_get_n_alloc
00000000009e2a33 l     F .text	0000000000000078              rec_offs_set_n_alloc
00000000009e2aab l     F .text	00000000000000ed              rec_offs_n_fields
00000000009e2b98 l     F .text	00000000000002a6              rec_offs_validate
00000000009e2e3e l     F .text	000000000000010e              rec_get_nth_field_offs
00000000009e2f4c l     F .text	000000000000005f              rec_offs_comp
00000000009e2fab l     F .text	000000000000005f              rec_offs_any_extern
00000000009e300a l     F .text	00000000000000aa              rec_offs_nth_extern
00000000009e30b4 l     F .text	00000000000000aa              rec_offs_nth_sql_null
00000000009e315e l     F .text	00000000000000f2              rec_offs_nth_size
00000000009e3250 l     F .text	000000000000009e              rec_1_get_prev_field_end_info
00000000009e32ee l     F .text	00000000000000a1              rec_2_get_prev_field_end_info
00000000009e338f l     F .text	00000000000000a4              rec_1_get_field_start_offs
00000000009e3433 l     F .text	00000000000000a5              rec_2_get_field_start_offs
00000000009e34d8 l     F .text	00000000000000be              rec_get_field_start_offs
00000000009e3596 l     F .text	0000000000000082              rec_get_nth_field_size
00000000009e3618 l     F .text	000000000000023c              rec_set_nth_field
00000000009e3854 l     F .text	0000000000000063              trx_start_if_not_started
00000000009e38b7 l     F .text	0000000000000026              trx_write_trx_id
00000000009e38dd l     F .text	000000000000005b              mlog_open
00000000009e3938 l     F .text	000000000000006c              mlog_close
00000000009e39a4 l     F .text	000000000000001f              page_align
00000000009e39c3 l     F .text	000000000000001f              page_offset
00000000009e39e2 l     F .text	00000000000000b9              page_rec_is_user_rec_low
00000000009e3a9b l     F .text	0000000000000022              page_rec_is_user_rec
00000000009e3abd l     F .text	000000000000008f              page_cur_get_block
00000000009e3b4c l     F .text	000000000000008e              page_cur_get_rec
00000000009e3bda l     F .text	0000000000000012              btr_cur_get_page_cur
00000000009e3bec l     F .text	0000000000000022              btr_cur_get_block
00000000009e3c0e l     F .text	000000000000001e              btr_cur_get_rec
00000000009e3c2c l     F .text	000000000000003a              btr_cur_get_page_zip
00000000009e3c66 l     F .text	0000000000000016              btr_pcur_get_btr_cur
00000000009e3c7c l     F .text	0000000000000057              btr_pcur_get_block
00000000009e3cd3 l     F .text	000000000000008e              btr_pcur_get_rec
00000000009e3d61 l     F .text	00000000000000be              btr_pcur_close
00000000009e3e1f l     F .text	0000000000000026              trx_write_roll_ptr
00000000009e3e45 l     F .text	000000000000001a              trx_read_roll_ptr
00000000009e3e5f l     F .text	0000000000000047              thr_get_trx
00000000009e3ea6 l     F .text	0000000000000042              que_node_get_type
00000000009e3ee8 l     F .text	0000000000000043              que_node_get_val
00000000009e3f2b l     F .text	0000000000000043              que_node_get_val_buf_size
00000000009e3f6e l     F .text	0000000000000012              que_node_get_parent
00000000009e3f80 l     F .text	0000000000000071              upd_create
00000000009e3ff1 l     F .text	0000000000000043              upd_get_n_fields
00000000009e4034 l     F .text	0000000000000090              upd_get_nth_field
00000000009e40c4 l     F .text	00000000000000f0              upd_field_set_field_no
00000000009e41b4 l     F .text	0000000000000065              upd_get_field_by_field_no
00000000009e4219 l     F .text	000000000000015d              row_ext_lookup_ith
00000000009e4376 l     F .text	00000000000000c6              row_ext_lookup
00000000009e443c l     F .text	0000000000000079              eval_node_ensure_val_buf
00000000009e44b5 l     F .text	0000000000000084              eval_sym
00000000009e4539 l     F .text	000000000000003a              eval_exp
00000000009e4573 l     F .text	000000000000006f              eval_node_copy_and_alloc_val
00000000009e45e2 l     F .text	00000000000000cb              row_upd_index_is_referenced
00000000009e46ad l     F .text	0000000000000364              row_upd_check_references_constraints
00000000009e69a0 l     F .text	00000000000001ca              row_upd_changes_first_fields_binary
00000000009e5b0c l     F .text	000000000000009a              row_upd_ext_fetch
00000000009e5ba6 l     F .text	00000000000002de              row_upd_index_replace_new_col_val
00000000009e6b6a l     F .text	000000000000008f              row_upd_copy_columns
00000000009e6bf9 l     F .text	0000000000000089              row_upd_eval_new_vals
00000000009e6c82 l     F .text	00000000000002c2              row_upd_store_row
00000000009e6f44 l     F .text	0000000000000566              row_upd_sec_index_entry
00000000009e74aa l     F .text	000000000000010c              row_upd_sec_step
00000000009e75b6 l     F .text	000000000000043f              row_upd_clust_rec_by_insert_inherit_func
00000000009e79f5 l     F .text	000000000000048d              row_upd_clust_rec_by_insert
00000000009e7e82 l     F .text	0000000000000538              row_upd_clust_rec
00000000009e83ba l     F .text	000000000000018a              row_upd_del_mark_clust_rec
00000000009e8544 l     F .text	00000000000005d2              row_upd_clust_step
00000000009e8b16 l     F .text	0000000000000271              row_upd
0000000000000000 l    df *ABS*	0000000000000000              row0vers.c
00000000009e8ff2 l     F .text	0000000000000017              os_atomic_test_and_set
00000000009e9009 l     F .text	0000000000000017              os_atomic_clear
00000000009e9020 l     F .text	000000000000001b              ut_max
00000000009e903b l     F .text	0000000000000080              ut_ull_create
00000000009e90bb l     F .text	00000000000000b4              ut_align_down
00000000009e916f l     F .text	000000000000002d              ut_memcpy
00000000009e919c l     F .text	0000000000000045              mach_read_from_1
00000000009e91e1 l     F .text	000000000000002c              mach_read_from_2
00000000009e920d l     F .text	0000000000000072              mach_read_from_3
00000000009e927f l     F .text	0000000000000087              mach_read_from_4
00000000009e9306 l     F .text	0000000000000050              mach_get_compressed_size
00000000009e9356 l     F .text	00000000000000f2              mach_read_compressed
00000000009e9448 l     F .text	000000000000006b              mach_read_from_7
00000000009e94b3 l     F .text	000000000000006b              mach_read_from_6
00000000009e951e l     F .text	00000000000000a0              mach_ull_read_much_compressed
00000000009e95be l     F .text	0000000000000015              dtype_get_charset_coll
00000000009e95d3 l     F .text	000000000000010a              dtype_get_mblen
00000000009e96dd l     F .text	00000000000000ce              dtype_set_mbminmaxlen
00000000009e97ab l     F .text	00000000000000a5              dtype_set_mblen
00000000009e9850 l     F .text	00000000000000b8              dtype_set
00000000009e9908 l     F .text	000000000000001e              mutex_test_and_set
00000000009e9926 l     F .text	000000000000001f              mutex_reset_lock_word
00000000009e9945 l     F .text	000000000000004e              mutex_get_waiters
00000000009e9993 l     F .text	000000000000007b              mutex_exit_func
00000000009e9a0e l     F .text	00000000000000d1              mutex_enter_func
00000000009e9adf l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009e9bed l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009e9c5a l     F .text	0000000000000012              mem_block_get_len
00000000009e9c6c l     F .text	0000000000000084              mem_block_set_free
00000000009e9cf0 l     F .text	0000000000000012              mem_block_get_free
00000000009e9d02 l     F .text	0000000000000012              mem_block_get_start
00000000009e9d14 l     F .text	0000000000000143              mem_heap_alloc
00000000009e9e57 l     F .text	000000000000013f              mem_heap_free_heap_top
00000000009e9f96 l     F .text	000000000000004d              mem_heap_empty
00000000009e9fe3 l     F .text	000000000000016b              mem_heap_create_func
00000000009ea14e l     F .text	00000000000000a3              mem_heap_free_func
00000000009ea1f1 l     F .text	0000000000000043              dfield_get_type
00000000009ea234 l     F .text	0000000000000043              dtuple_get_n_fields
00000000009ea277 l     F .text	000000000000008f              dtuple_get_nth_field
00000000009ea306 l     F .text	0000000000000066              dtuple_set_types_binary
00000000009ea36c l     F .text	0000000000000074              dyn_array_create
00000000009ea3e0 l     F .text	00000000000001a0              dyn_array_push
00000000009ea580 l     F .text	0000000000000058              rw_lock_lock_word_decr
00000000009ea5d8 l     F .text	0000000000000022              rw_lock_lock_word_incr
00000000009ea5fa l     F .text	0000000000000072              rw_lock_s_lock_low
00000000009ea66c l     F .text	0000000000000053              rw_lock_s_lock_func
00000000009ea6bf l     F .text	00000000000000b5              rw_lock_s_unlock_func
00000000009ea774 l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
00000000009ea87a l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
00000000009ea8e1 l     F .text	0000000000000096              mtr_start
00000000009ea977 l     F .text	0000000000000171              mtr_memo_push
00000000009eaae8 l     F .text	00000000000000a6              mtr_s_lock_func
00000000009eab8e l     F .text	0000000000000114              dict_col_get_clust_pos
00000000009ead1e l     F .text	0000000000000085              dict_index_is_clust
00000000009eaca2 l     F .text	000000000000007c              dict_table_get_first_index
00000000009eada3 l     F .text	00000000000000d1              dict_table_get_nth_col
00000000009eae74 l     F .text	000000000000014a              dict_table_get_sys_col
00000000009eafbe l     F .text	00000000000000c5              dict_table_get_sys_col_no
00000000009eb083 l     F .text	000000000000004c              dict_table_is_comp
00000000009eb0cf l     F .text	0000000000000087              dict_index_get_n_fields
00000000009eb156 l     F .text	00000000000000b8              dict_index_get_n_unique
00000000009eb20e l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
00000000009eb2e2 l     F .text	0000000000000118              dict_index_get_sys_col_pos
00000000009eb3fa l     F .text	000000000000006d              rec_get_bit_field_1
00000000009eb467 l     F .text	000000000000006d              rec_get_bit_field_2
00000000009eb4d4 l     F .text	00000000000000bb              rec_get_n_fields_old
00000000009eb58f l     F .text	0000000000000091              rec_get_status
00000000009eb620 l     F .text	00000000000000f1              rec_get_n_fields
00000000009eb711 l     F .text	0000000000000053              rec_get_deleted_flag
00000000009eb764 l     F .text	0000000000000077              rec_offs_get_n_alloc
00000000009eb7db l     F .text	00000000000000ed              rec_offs_n_fields
00000000009eb8c8 l     F .text	00000000000002a6              rec_offs_validate
00000000009ebb6e l     F .text	000000000000010f              rec_offs_make_valid
00000000009ebc7d l     F .text	000000000000010e              rec_get_nth_field_offs
00000000009ebd8b l     F .text	00000000000000ae              rec_offs_data_size
00000000009ebe39 l     F .text	000000000000009f              rec_offs_extra_size
00000000009ebed8 l     F .text	0000000000000032              rec_offs_size
00000000009ebf0a l     F .text	0000000000000127              rec_copy
00000000009ec031 l     F .text	000000000000001a              trx_read_trx_id
00000000009ec04b l     F .text	0000000000000091              trx_get_on_id
00000000009ec0dc l     F .text	000000000000007a              trx_list_get_min_trx_id
00000000009ec156 l     F .text	00000000000000bf              trx_is_active
00000000009ec215 l     F .text	000000000000001f              page_align
00000000009ec234 l     F .text	0000000000000083              page_header_get_field
00000000009ec2b7 l     F .text	0000000000000024              page_is_comp
00000000009ec2db l     F .text	0000000000000022              page_rec_is_comp
00000000009ec2fd l     F .text	000000000000001a              trx_read_roll_ptr
00000000009ec317 l     F .text	0000000000000110              row_get_trx_id_offset
00000000009ec427 l     F .text	00000000000000d5              row_get_rec_trx_id
00000000009ec4fc l     F .text	00000000000000d9              row_get_rec_roll_ptr
00000000009ec5d5 l     F .text	000000000000005c              read_view_get_nth_trx_id
00000000009ec631 l     F .text	000000000000009f              read_view_sees_trx_id
00000000009ec6d0 l     F .text	0000000000000026              trx_undo_rec_get_undo_no
0000000000000000 l    df *ABS*	0000000000000000              srv0srv.c
00000000009edbc6 l     F .text	0000000000000017              os_atomic_test_and_set
00000000009edbdd l     F .text	0000000000000017              os_atomic_clear
00000000009edbf4 l     F .text	000000000000001b              ut_min
00000000009edc0f l     F .text	000000000000001e              mutex_test_and_set
00000000009edc2d l     F .text	000000000000001f              mutex_reset_lock_word
00000000009edc4c l     F .text	000000000000004e              mutex_get_waiters
00000000009edc9a l     F .text	000000000000007b              mutex_exit_func
00000000009edd15 l     F .text	00000000000000d1              mutex_enter_func
00000000009edde6 l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009edef4 l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009edf61 l     F .text	000000000000007c              pfs_mutex_create_func
00000000009edfdd l     F .text	0000000000000012              mem_block_get_len
00000000009edfef l     F .text	0000000000000084              mem_block_set_free
00000000009ee073 l     F .text	0000000000000012              mem_block_get_free
00000000009ee085 l     F .text	0000000000000143              mem_heap_alloc
00000000009ee1c8 l     F .text	000000000000016b              mem_heap_create_func
00000000009ee333 l     F .text	00000000000000a3              mem_heap_free_func
00000000009ee3d6 l     F .text	00000000000000fd              mem_alloc_func
00000000009ee4d3 l     F .text	000000000000003a              mem_free_func
00000000009ee50d l     F .text	0000000000000058              rw_lock_lock_word_decr
00000000009ee565 l     F .text	0000000000000022              rw_lock_lock_word_incr
00000000009ee587 l     F .text	0000000000000072              rw_lock_s_lock_low
00000000009ee5f9 l     F .text	0000000000000053              rw_lock_s_lock_func
00000000009ee64c l     F .text	00000000000000b5              rw_lock_s_unlock_func
00000000009ee701 l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
00000000009ee807 l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
00000000009ee86e l     F .text	0000000000000022              log_free_check
00000000009ee890 l     F .text	000000000000000d              buf_pool_get_curr_size
00000000009ee89d l     F .text	000000000000000f              buf_pool_get_n_pages
00000000009ee8ac l     F .text	0000000000000047              thr_get_trx
000000000138e8c0 l     O .bss	0000000000000008              srv_n_rows_inserted_old
000000000138e8c8 l     O .bss	0000000000000008              srv_n_rows_updated_old
000000000138e8d0 l     O .bss	0000000000000008              srv_n_rows_deleted_old
000000000138e8d8 l     O .bss	0000000000000008              srv_n_rows_read_old
000000000138e8e0 l     O .bss	0000000000000008              srv_main_1_second_loops
000000000138e8e8 l     O .bss	0000000000000008              srv_main_sleeps
000000000138e8f0 l     O .bss	0000000000000008              srv_main_10_second_loops
000000000138e8f8 l     O .bss	0000000000000008              srv_main_background_loops
000000000138e900 l     O .bss	0000000000000008              srv_main_flush_loops
000000000138e908 l     O .bss	0000000000000008              srv_log_writes_and_flush
000000000138e910 l     O .bss	0000000000000008              srv_last_log_flush_time
00000000009ee8f3 l     F .text	0000000000000078              srv_print_master_thread_info
00000000009ee9c9 l     F .text	0000000000000090              srv_table_get_nth_slot
00000000009eeaca l     F .text	0000000000000037              srv_thread_type_validate
00000000009eeb01 l     F .text	0000000000000056              srv_slot_get_type
00000000009eeb57 l     F .text	0000000000000127              srv_table_reserve_slot
00000000009eec7e l     F .text	00000000000001a3              srv_suspend_thread
00000000009efdce l     F .text	00000000000000b2              srv_normalize_init_values
00000000009efeaf l     F .text	0000000000000221              srv_table_reserve_slot_for_mysql
00000000009f0753 l     F .text	00000000000000ab              srv_refresh_innodb_monitor_stats
00000000009f1d1e l     F .text	0000000000000123              srv_shutdown_print_master_pending
00000000009f2009 l     F .text	0000000000000078              srv_sync_log_buffer_in_background
00000000009f2081 l     F .text	00000000000000b9              srv_master_do_purge
0000000000000000 l    df *ABS*	0000000000000000              srv0start.c
00000000009f357b l     F .text	0000000000000017              os_atomic_test_and_set
00000000009f3592 l     F .text	0000000000000017              os_atomic_clear
00000000009f35a9 l     F .text	000000000000002d              os_fast_mutex_trylock
00000000009f35d6 l     F .text	0000000000000025              ut_strcmp
00000000009f35fb l     F .text	000000000000001e              mutex_test_and_set
00000000009f3619 l     F .text	000000000000001f              mutex_reset_lock_word
00000000009f3638 l     F .text	000000000000004e              mutex_get_waiters
00000000009f3686 l     F .text	000000000000007b              mutex_exit_func
00000000009f3701 l     F .text	00000000000000d1              mutex_enter_func
00000000009f37d2 l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009f38e0 l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009f394d l     F .text	000000000000007c              pfs_mutex_create_func
00000000009f39c9 l     F .text	0000000000000079              pfs_mutex_free_func
00000000009f3a42 l     F .text	0000000000000143              pfs_os_file_create_func
00000000009f3b85 l     F .text	00000000000000e3              pfs_os_file_close_func
00000000009f3c68 l     F .text	0000000000000012              mem_block_get_len
00000000009f3c7a l     F .text	0000000000000084              mem_block_set_free
00000000009f3cfe l     F .text	0000000000000012              mem_block_get_free
00000000009f3d10 l     F .text	0000000000000143              mem_heap_alloc
00000000009f3e53 l     F .text	000000000000016b              mem_heap_create_func
00000000009f3fbe l     F .text	00000000000000a3              mem_heap_free_func
00000000009f4061 l     F .text	00000000000000fd              mem_alloc_func
00000000009f415e l     F .text	000000000000003a              mem_free_func
00000000009f4198 l     F .text	0000000000000074              dyn_array_create
00000000009f420c l     F .text	0000000000000096              mtr_start
00000000009f42a2 l     F .text	0000000000000081              fsp_flags_get_page_size
000000000138e948 l     O .bss	0000000000000008              srv_start_has_been_called
000000000138e960 l     O .bss	0000000000000fa0              files
000000000138f900 l     O .bss	0000000000000440              n
000000000138fd40 l     O .bss	0000000000000440              thread_ids
0000000001390180 l     O .bss	0000000000000068              srv_os_test_mutex
00000000013901e8 l     O .bss	0000000000000008              srv_monitor_file_name
00000000009f4323 l     F .text	00000000000000c9              srv_parse_megabytes
00000000009f4ac3 l     F .text	0000000000000093              io_handler_thread
00000000009f4b61 l     F .text	0000000000000014              srv_calc_low32
00000000009f4b75 l     F .text	0000000000000012              srv_calc_high32
00000000009f4b87 l     F .text	0000000000000687              open_or_create_log_file
00000000009f520e l     F .text	0000000000000ca5              open_or_create_data_files
0000000000000000 l    df *ABS*	0000000000000000              sync0arr.c
00000000009f7ef9 l     F .text	0000000000000017              os_atomic_test_and_set
00000000009f7f10 l     F .text	0000000000000017              os_atomic_clear
00000000009f7f27 l     F .text	000000000000001e              mutex_test_and_set
00000000009f7f45 l     F .text	000000000000001f              mutex_reset_lock_word
00000000009f7f64 l     F .text	0000000000000043              mutex_get_lock_word
00000000009f7fa7 l     F .text	000000000000004e              mutex_get_waiters
00000000009f7ff5 l     F .text	000000000000007b              mutex_exit_func
00000000009f8070 l     F .text	00000000000000d1              mutex_enter_func
00000000009f8141 l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009f824f l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009f82bc l     F .text	000000000000007c              pfs_mutex_create_func
00000000009f8338 l     F .text	0000000000000079              pfs_mutex_free_func
00000000009f83b1 l     F .text	0000000000000074              rw_lock_get_writer
00000000009f8425 l     F .text	0000000000000046              rw_lock_get_reader_count
00000000009f846b l     F .text	0000000000000090              sync_array_get_nth_cell
00000000009f84fb l     F .text	0000000000000076              sync_array_enter
00000000009f8571 l     F .text	000000000000006a              sync_array_exit
00000000009f887f l     F .text	000000000000004e              sync_cell_get_event
00000000009f8c00 l     F .text	00000000000002fd              sync_array_cell_print
00000000009f8efd l     F .text	00000000000000d6              sync_arr_cell_can_wake_up
00000000009f9412 l     F .text	00000000000000a0              sync_array_output_info
0000000000000000 l    df *ABS*	0000000000000000              sync0rw.c
00000000009f94f0 l     F .text	0000000000000017              os_atomic_test_and_set
00000000009f9507 l     F .text	0000000000000017              os_atomic_clear
00000000009f951e l     F .text	000000000000001e              mutex_test_and_set
00000000009f953c l     F .text	000000000000001f              mutex_reset_lock_word
00000000009f955b l     F .text	000000000000004e              mutex_get_waiters
00000000009f95a9 l     F .text	000000000000007b              mutex_exit_func
00000000009f9624 l     F .text	00000000000000d1              mutex_enter_func
00000000009f96f5 l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009f9803 l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009f9870 l     F .text	0000000000000012              rw_lock_get_waiters
00000000009f9882 l     F .text	0000000000000022              rw_lock_set_waiter_flag
00000000009f98a4 l     F .text	0000000000000074              rw_lock_get_writer
00000000009f9918 l     F .text	0000000000000046              rw_lock_get_reader_count
00000000009f995e l     F .text	0000000000000058              rw_lock_lock_word_decr
00000000009f99b6 l     F .text	0000000000000080              rw_lock_set_writer_id_and_recursion_flag
00000000009f9a36 l     F .text	0000000000000072              rw_lock_s_lock_low
00000000009f9aa8 l     F .text	00000000000000af              ut_rnd_gen_next_ulint
00000000009f9b57 l     F .text	0000000000000046              ut_rnd_gen_ulint
00000000009f9b9d l     F .text	0000000000000079              ut_rnd_interval
00000000009fa535 l     F .text	000000000000019e              rw_lock_x_lock_wait
00000000009fa6d3 l     F .text	0000000000000122              rw_lock_x_lock_low
0000000000000000 l    df *ABS*	0000000000000000              sync0sync.c
00000000009fabf6 l     F .text	0000000000000017              os_atomic_test_and_set
00000000009fac0d l     F .text	0000000000000017              os_atomic_clear
00000000009fac24 l     F .text	000000000000001e              mutex_test_and_set
00000000009fac42 l     F .text	000000000000001f              mutex_reset_lock_word
00000000009fac61 l     F .text	0000000000000043              mutex_get_lock_word
00000000009faca4 l     F .text	000000000000004e              mutex_get_waiters
00000000009facf2 l     F .text	000000000000007b              mutex_exit_func
00000000009fad6d l     F .text	00000000000000d1              mutex_enter_func
00000000009fae3e l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009faf4c l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009fafb9 l     F .text	000000000000007c              pfs_mutex_create_func
00000000009fb035 l     F .text	0000000000000079              pfs_mutex_free_func
00000000009fb0ae l     F .text	00000000000000af              ut_rnd_gen_next_ulint
00000000009fb15d l     F .text	0000000000000046              ut_rnd_gen_ulint
00000000009fb1a3 l     F .text	0000000000000079              ut_rnd_interval
0000000001390240 l     O .bss	0000000000000008              mutex_spin_round_count
0000000001390248 l     O .bss	0000000000000008              mutex_spin_wait_count
0000000001390250 l     O .bss	0000000000000008              mutex_os_wait_count
0000000000000000 l    df *ABS*	0000000000000000              trx0i_s.c
00000000009fbf55 l     F .text	0000000000000017              os_atomic_test_and_set
00000000009fbf6c l     F .text	0000000000000017              os_atomic_clear
00000000009fbf83 l     F .text	000000000000001b              ut_max
00000000009fbf9e l     F .text	00000000000000b2              ut_align_offset
00000000009fc050 l     F .text	0000000000000045              mach_read_from_1
00000000009fc095 l     F .text	000000000000002c              mach_read_from_2
00000000009fc0c1 l     F .text	000000000000001e              mutex_test_and_set
00000000009fc0df l     F .text	000000000000001f              mutex_reset_lock_word
00000000009fc0fe l     F .text	000000000000004e              mutex_get_waiters
00000000009fc14c l     F .text	000000000000007b              mutex_exit_func
00000000009fc1c7 l     F .text	00000000000000d1              mutex_enter_func
00000000009fc298 l     F .text	000000000000010e              pfs_mutex_enter_func
00000000009fc3a6 l     F .text	000000000000006d              pfs_mutex_exit_func
00000000009fc413 l     F .text	000000000000007c              pfs_mutex_create_func
00000000009fc48f l     F .text	0000000000000022              rw_lock_reset_waiter_flag
00000000009fc4b1 l     F .text	0000000000000058              rw_lock_lock_word_decr
00000000009fc509 l     F .text	0000000000000022              rw_lock_lock_word_incr
00000000009fc52b l     F .text	0000000000000072              rw_lock_s_lock_low
00000000009fc59d l     F .text	0000000000000053              rw_lock_s_lock_func
00000000009fc5f0 l     F .text	00000000000000b5              rw_lock_s_unlock_func
00000000009fc6a5 l     F .text	00000000000000e9              rw_lock_x_unlock_func
00000000009fc78e l     F .text	0000000000000079              pfs_rw_lock_create_func
00000000009fc807 l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
00000000009fc90d l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
00000000009fca13 l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
00000000009fca7a l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
00000000009fcae1 l     F .text	0000000000000057              ut_hash_ulint
00000000009fcb38 l     F .text	000000000000003a              ut_fold_ulint_pair
00000000009fcb72 l     F .text	0000000000000012              mem_block_get_len
00000000009fcb84 l     F .text	0000000000000084              mem_block_set_free
00000000009fcc08 l     F .text	0000000000000012              mem_block_get_free
00000000009fcc1a l     F .text	0000000000000012              mem_block_get_start
00000000009fcc2c l     F .text	0000000000000143              mem_heap_alloc
00000000009fcd6f l     F .text	000000000000013f              mem_heap_free_heap_top
00000000009fceae l     F .text	000000000000004d              mem_heap_empty
00000000009fcefb l     F .text	000000000000016b              mem_heap_create_func
00000000009fd066 l     F .text	00000000000000a3              mem_heap_free_func
00000000009fd109 l     F .text	00000000000000fd              mem_alloc_func
00000000009fd206 l     F .text	000000000000003a              mem_free_func
00000000009fd240 l     F .text	0000000000000072              mem_heap_get_size
00000000009fd2b2 l     F .text	00000000000000bc              hash_get_nth_cell
00000000009fd36e l     F .text	0000000000000097              hash_table_clear
00000000009fd405 l     F .text	0000000000000079              hash_get_n_cells
00000000009fd47e l     F .text	000000000000008c              hash_calc_hash
00000000009fd50a l     F .text	00000000000000dc              hash_get_mutex_no
00000000009fd5e6 l     F .text	00000000000000cc              hash_get_nth_mutex
00000000009fd6b2 l     F .text	000000000000009f              hash_get_mutex
00000000009fd751 l     F .text	0000000000000074              dyn_array_create
00000000009fd7c5 l     F .text	0000000000000096              mtr_start
00000000009fd85b l     F .text	0000000000000046              buf_page_get_state
00000000009fd8a1 l     F .text	000000000000001a              buf_block_get_state
00000000009fd8bb l     F .text	00000000000000ea              buf_block_get_frame
00000000009fd9a5 l     F .text	0000000000000085              dict_index_is_clust
00000000009fda2a l     F .text	0000000000000087              dict_index_get_n_fields
00000000009fdab1 l     F .text	00000000000000b8              dict_index_get_n_unique
00000000009fdb69 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
00000000009fdc3d l     F .text	00000000000000d1              dict_index_get_nth_field
00000000009fdd0e l     F .text	0000000000000090              ha_storage_create
00000000009fdd9e l     F .text	000000000000007c              ha_storage_empty
00000000009fde1a l     F .text	000000000000003a              ha_storage_free
00000000009fde54 l     F .text	0000000000000042              ha_storage_get_size
00000000009fde96 l     F .text	000000000000006d              rec_get_bit_field_1
00000000009fdf03 l     F .text	000000000000006d              rec_get_bit_field_2
00000000009fdf70 l     F .text	00000000000000bb              rec_get_n_fields_old
00000000009fe02b l     F .text	0000000000000091              rec_get_status
00000000009fe0bc l     F .text	0000000000000077              rec_offs_get_n_alloc
00000000009fe133 l     F .text	0000000000000078              rec_offs_set_n_alloc
00000000009fe1ab l     F .text	00000000000000ed              rec_offs_n_fields
00000000009fe298 l     F .text	00000000000002a6              rec_offs_validate
00000000009fe53e l     F .text	000000000000010e              rec_get_nth_field_offs
00000000009fe64c l     F .text	000000000000005a              trx_get_que_state_str
00000000009fe6a6 l     F .text	000000000000001f              page_offset
00000000009fe6c5 l     F .text	0000000000000099              page_rec_is_supremum_low
00000000009fe75e l     F .text	0000000000000099              page_rec_is_infimum_low
00000000009fe7f7 l     F .text	0000000000000022              page_rec_is_supremum
00000000009fe819 l     F .text	0000000000000022              page_rec_is_infimum
0000000001390260 l     O .bss	0000000000000c80              trx_i_s_cache_static
00000000009fe83b l     F .text	000000000000008d              wait_lock_get_heap_no
00000000009fe8c8 l     F .text	000000000000006b              table_cache_init
00000000009fe933 l     F .text	00000000000000a3              table_cache_free
00000000009fe9d6 l     F .text	0000000000000370              table_cache_create_empty_row
00000000009fed46 l     F .text	0000000000000312              i_s_locks_row_validate
00000000009ff058 l     F .text	00000000000007be              fill_trx_row
00000000009ff816 l     F .text	0000000000000147              put_nth_field
00000000009ff95d l     F .text	0000000000000440              fill_lock_data
00000000009ffd9d l     F .text	0000000000000296              fill_locks_row
0000000000a00033 l     F .text	000000000000009f              fill_lock_waits_row
0000000000a000d2 l     F .text	0000000000000128              fold_lock
0000000000a001fa l     F .text	0000000000000194              locks_row_eq_lock
0000000000a0038e l     F .text	0000000000000167              search_innodb_locks
0000000000a004f5 l     F .text	000000000000024a              add_lock_to_cache
0000000000a0073f l     F .text	000000000000005e              add_lock_wait_to_cache
0000000000a0079d l     F .text	00000000000001e4              add_trx_relevant_locks_to_cache
0000000000a00981 l     F .text	0000000000000045              can_cache_be_updated
0000000000a009c6 l     F .text	0000000000000061              trx_i_s_cache_clear
0000000000a00a27 l     F .text	0000000000000168              fetch_data_into_cache
0000000000a00e6e l     F .text	0000000000000074              cache_select_table
0000000000000000 l    df *ABS*	0000000000000000              trx0purge.c
0000000000a0116d l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a01184 l     F .text	0000000000000017              os_atomic_clear
0000000000a0119b l     F .text	00000000000000b4              ut_align_down
0000000000a0124f l     F .text	00000000000000b2              ut_align_offset
0000000000a01301 l     F .text	0000000000000045              mach_read_from_1
0000000000a01346 l     F .text	000000000000002c              mach_read_from_2
0000000000a01372 l     F .text	0000000000000072              mach_read_from_3
0000000000a013e4 l     F .text	0000000000000087              mach_read_from_4
0000000000a0146b l     F .text	0000000000000050              mach_get_compressed_size
0000000000a014bb l     F .text	00000000000000f2              mach_read_compressed
0000000000a015ad l     F .text	000000000000003a              mach_read_from_8
0000000000a015e7 l     F .text	00000000000000a0              mach_ull_read_much_compressed
0000000000a01687 l     F .text	000000000000001e              mutex_test_and_set
0000000000a016a5 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a016c4 l     F .text	000000000000004e              mutex_get_waiters
0000000000a01712 l     F .text	000000000000007b              mutex_exit_func
0000000000a0178d l     F .text	00000000000000d1              mutex_enter_func
0000000000a0185e l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a0196c l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a019d9 l     F .text	000000000000007c              pfs_mutex_create_func
0000000000a01a55 l     F .text	0000000000000079              pfs_mutex_free_func
0000000000a01ace l     F .text	0000000000000012              mem_block_get_len
0000000000a01ae0 l     F .text	0000000000000084              mem_block_set_free
0000000000a01b64 l     F .text	0000000000000012              mem_block_get_free
0000000000a01b76 l     F .text	0000000000000012              mem_block_get_start
0000000000a01b88 l     F .text	0000000000000143              mem_heap_alloc
0000000000a01ccb l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000a01e0a l     F .text	000000000000004d              mem_heap_empty
0000000000a01e57 l     F .text	000000000000016b              mem_heap_create_func
0000000000a01fc2 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a02065 l     F .text	00000000000000fd              mem_alloc_func
0000000000a02162 l     F .text	000000000000003a              mem_free_func
0000000000a0219c l     F .text	0000000000000074              dyn_array_create
0000000000a02210 l     F .text	0000000000000022              rw_lock_reset_waiter_flag
0000000000a02232 l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000a02254 l     F .text	00000000000000e9              rw_lock_x_unlock_func
0000000000a0233d l     F .text	0000000000000079              pfs_rw_lock_create_func
0000000000a023b6 l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000a024bc l     F .text	0000000000000070              pfs_rw_lock_free_func
0000000000a0252c l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
0000000000a02593 l     F .text	0000000000000096              mtr_start
0000000000a02629 l     F .text	0000000000000046              buf_page_get_state
0000000000a0266f l     F .text	000000000000001a              buf_block_get_state
0000000000a02689 l     F .text	00000000000000ea              buf_block_get_frame
0000000000a02773 l     F .text	0000000000000012              ib_bh_size
0000000000a02785 l     F .text	0000000000000023              ib_bh_is_empty
0000000000a027a8 l     F .text	000000000000006d              ib_bh_get
0000000000a02815 l     F .text	0000000000000037              ib_bh_first
0000000000a0284c l     F .text	0000000000000114              flst_read_addr
0000000000a02960 l     F .text	0000000000000027              flst_get_len
0000000000a02987 l     F .text	0000000000000029              flst_get_last
0000000000a029b0 l     F .text	0000000000000025              flst_get_prev_addr
0000000000a029d5 l     F .text	000000000000001f              page_align
0000000000a029f4 l     F .text	000000000000001f              page_offset
0000000000a02a13 l     F .text	0000000000000056              page_get_page_no
0000000000a02a69 l     F .text	00000000000000e1              trx_undo_build_roll_ptr
0000000000a02b4a l     F .text	0000000000000067              trx_undo_page_get
0000000000a02bb1 l     F .text	0000000000000067              trx_undo_page_get_s_latched
0000000000a02c18 l     F .text	0000000000000080              trx_undo_page_get_end
0000000000a02c98 l     F .text	0000000000000072              trx_undo_page_get_next_rec
0000000000a02d0a l     F .text	000000000000002b              trx_purge_get_log_from_hist
0000000000a02d35 l     F .text	0000000000000070              trx_rsegf_get
0000000000a02da5 l     F .text	0000000000000097              trx_rsegf_set_nth_undo
0000000000a02e3c l     F .text	000000000000008e              trx_undo_arr_get_nth_info
0000000000a02eca l     F .text	000000000000005c              read_view_get_nth_trx_id
0000000000a02f26 l     F .text	000000000000009f              read_view_sees_trx_id
0000000000a02fc5 l     F .text	0000000000000021              trx_undo_rec_get_type
0000000000a02fe6 l     F .text	0000000000000022              trx_undo_rec_get_cmpl_info
0000000000a03008 l     F .text	0000000000000034              trx_undo_rec_get_extern_storage
0000000000a0303c l     F .text	0000000000000026              trx_undo_rec_get_undo_no
0000000000a03062 l     F .text	0000000000000089              trx_undo_rec_copy
0000000000a03127 l     F .text	0000000000000094              trx_purge_arr_store_info
0000000000a031bb l     F .text	0000000000000074              trx_purge_arr_remove_info
0000000000a0322f l     F .text	00000000000000d6              trx_purge_arr_get_biggest
0000000000a03305 l     F .text	0000000000000094              trx_purge_graph_build
0000000000a03b60 l     F .text	00000000000003fb              trx_purge_free_segment
0000000000a03f5b l     F .text	000000000000047b              trx_purge_truncate_rseg_history
0000000000a043d6 l     F .text	0000000000000137              trx_purge_truncate_history
0000000000a0450d l     F .text	0000000000000077              trx_purge_truncate_if_arr_empty
0000000001390ee8 l     O .bss	0000000000000008              count.19211
0000000000a04584 l     F .text	0000000000000470              trx_purge_rseg_get_next_history_log
0000000000a049f4 l     F .text	0000000000000272              trx_purge_get_rseg_with_min_trx_id
0000000000a04c66 l     F .text	00000000000001d8              trx_purge_read_undo_rec
0000000000a04e3e l     F .text	0000000000000087              trx_purge_choose_next_log
0000000000a04ec5 l     F .text	00000000000003ca              trx_purge_get_next_rec
0000000000000000 l    df *ABS*	0000000000000000              trx0rec.c
0000000000a05950 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a05967 l     F .text	0000000000000017              os_atomic_clear
0000000000a0597e l     F .text	000000000000001b              ut_max
0000000000a05999 l     F .text	0000000000000080              ut_ull_create
0000000000a05a19 l     F .text	00000000000000b4              ut_align_down
0000000000a05acd l     F .text	00000000000000b2              ut_align_offset
0000000000a05b7f l     F .text	0000000000000080              mach_write_to_1
0000000000a05bff l     F .text	0000000000000045              mach_read_from_1
0000000000a05c44 l     F .text	0000000000000096              mach_write_to_2
0000000000a05cda l     F .text	000000000000002c              mach_read_from_2
0000000000a05d06 l     F .text	00000000000000a8              mach_write_to_3
0000000000a05dae l     F .text	0000000000000072              mach_read_from_3
0000000000a05e20 l     F .text	0000000000000082              mach_write_to_4
0000000000a05ea2 l     F .text	0000000000000087              mach_read_from_4
0000000000a05f29 l     F .text	0000000000000116              mach_write_compressed
0000000000a0603f l     F .text	0000000000000050              mach_get_compressed_size
0000000000a0608f l     F .text	00000000000000f2              mach_read_compressed
0000000000a06181 l     F .text	0000000000000071              mach_write_to_7
0000000000a061f2 l     F .text	000000000000006b              mach_read_from_7
0000000000a0625d l     F .text	0000000000000071              mach_write_to_6
0000000000a062ce l     F .text	000000000000006b              mach_read_from_6
0000000000a06339 l     F .text	000000000000007f              mach_ull_write_compressed
0000000000a063b8 l     F .text	0000000000000022              mach_ull_get_compressed_size
0000000000a063da l     F .text	000000000000007b              mach_ull_read_compressed
0000000000a06455 l     F .text	00000000000000b2              mach_ull_write_much_compressed
0000000000a06507 l     F .text	0000000000000057              mach_ull_get_much_compressed_size
0000000000a0655e l     F .text	00000000000000a0              mach_ull_read_much_compressed
0000000000a065fe l     F .text	000000000000002d              ut_memcpy
0000000000a0662b l     F .text	000000000000001e              mutex_test_and_set
0000000000a06649 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a06668 l     F .text	000000000000004e              mutex_get_waiters
0000000000a066b6 l     F .text	000000000000007b              mutex_exit_func
0000000000a06731 l     F .text	00000000000000d1              mutex_enter_func
0000000000a06802 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a06910 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a0697d l     F .text	0000000000000012              mem_block_get_len
0000000000a0698f l     F .text	0000000000000084              mem_block_set_free
0000000000a06a13 l     F .text	0000000000000012              mem_block_get_free
0000000000a06a25 l     F .text	0000000000000143              mem_heap_alloc
0000000000a06b68 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a06c0b l     F .text	0000000000000049              dyn_block_get_used
0000000000a06c54 l     F .text	0000000000000074              dyn_array_create
0000000000a06cc8 l     F .text	00000000000001a0              dyn_array_push
0000000000a06e68 l     F .text	0000000000000205              dyn_array_open
0000000000a0706d l     F .text	000000000000013b              dyn_array_close
0000000000a071a8 l     F .text	000000000000015f              dyn_array_get_element
0000000000a07307 l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000a073e0 l     F .text	0000000000000096              mtr_start
0000000000a07476 l     F .text	0000000000000171              mtr_memo_push
0000000000a075e7 l     F .text	0000000000000131              mtr_memo_contains
0000000000a07718 l     F .text	00000000000000b4              mtr_get_log_mode
0000000000a077cc l     F .text	0000000000000015              dtype_get_charset_coll
0000000000a077e1 l     F .text	0000000000000244              dtype_get_fixed_size_low
0000000000a07a25 l     F .text	0000000000000052              dtype_get_sql_null_size
0000000000a07a77 l     F .text	0000000000000043              dfield_get_type
0000000000a07aba l     F .text	0000000000000090              dfield_get_data
0000000000a07b4a l     F .text	0000000000000092              dfield_get_len
0000000000a07bdc l     F .text	000000000000005b              dfield_set_len
0000000000a07c37 l     F .text	000000000000004a              dfield_set_ext
0000000000a07c81 l     F .text	000000000000006a              dfield_set_data
0000000000a07ceb l     F .text	0000000000000025              dfield_set_null
0000000000a07d10 l     F .text	0000000000000042              dtuple_get_info_bits
0000000000a07d52 l     F .text	0000000000000043              dtuple_get_n_fields
0000000000a07d95 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000a07e24 l     F .text	000000000000012d              dtuple_create_from_mem
0000000000a07f51 l     F .text	000000000000008e              dtuple_create
0000000000a07fdf l     F .text	0000000000000139              dtuple_get_data_size
0000000000a08118 l     F .text	0000000000000089              trx_undo_rec_copy
0000000000a081a1 l     F .text	0000000000000046              buf_page_get_state
0000000000a081e7 l     F .text	000000000000001a              buf_block_get_state
0000000000a08201 l     F .text	00000000000000ea              buf_block_get_frame
0000000000a082eb l     F .text	000000000000007b              buf_block_get_page_no
0000000000a08366 l     F .text	0000000000000026              trx_write_trx_id
0000000000a0838c l     F .text	000000000000001a              trx_read_trx_id
0000000000a083a6 l     F .text	000000000000005b              mlog_open
0000000000a08401 l     F .text	000000000000006c              mlog_close
0000000000a0846d l     F .text	0000000000000227              mlog_write_initial_log_record_fast
0000000000a08694 l     F .text	00000000000000ac              dict_col_copy_type
0000000000a08740 l     F .text	000000000000004e              dict_col_get_no
0000000000a0878e l     F .text	0000000000000114              dict_col_get_clust_pos
0000000000a088a2 l     F .text	0000000000000085              dict_index_is_clust
0000000000a08927 l     F .text	0000000000000087              dict_table_get_n_cols
0000000000a089ae l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000a08a7f l     F .text	000000000000014a              dict_table_get_sys_col
0000000000a08bc9 l     F .text	00000000000000c5              dict_table_get_sys_col_no
0000000000a08c8e l     F .text	000000000000004c              dict_table_is_comp
0000000000a08cda l     F .text	0000000000000051              dict_table_get_format
0000000000a08d2b l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000a08d99 l     F .text	0000000000000051              dict_table_zip_size
0000000000a08dea l     F .text	0000000000000087              dict_index_get_n_fields
0000000000a08e71 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000a08f29 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000a08ffd l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000a090ce l     F .text	0000000000000118              dict_index_get_sys_col_pos
0000000000a091e6 l     F .text	0000000000000042              dict_field_get_col
0000000000a09228 l     F .text	000000000000002d              dict_index_get_nth_col
0000000000a09255 l     F .text	0000000000000072              dict_max_field_len_store_undo
0000000000a092c7 l     F .text	000000000000006d              rec_get_bit_field_1
0000000000a09334 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000a093a1 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000a0945c l     F .text	0000000000000091              rec_get_status
0000000000a094ed l     F .text	00000000000000f1              rec_get_n_fields
0000000000a095de l     F .text	000000000000003b              rec_get_info_bits
0000000000a09619 l     F .text	0000000000000053              rec_get_deleted_flag
0000000000a0966c l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000a096e3 l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000a0975b l     F .text	00000000000000ed              rec_offs_n_fields
0000000000a09848 l     F .text	00000000000002a6              rec_offs_validate
0000000000a09aee l     F .text	000000000000010f              rec_offs_make_valid
0000000000a09bfd l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000a09d0b l     F .text	00000000000000aa              rec_offs_nth_extern
0000000000a09db5 l     F .text	00000000000000ae              rec_offs_data_size
0000000000a09e63 l     F .text	000000000000009f              rec_offs_extra_size
0000000000a09f02 l     F .text	0000000000000032              rec_offs_size
0000000000a09f34 l     F .text	0000000000000127              rec_copy
0000000000a0a05b l     F .text	0000000000000035              rec_get_converted_extra_size
0000000000a0a090 l     F .text	00000000000001d3              rec_get_converted_size
0000000000a0a263 l     F .text	00000000000000e1              trx_undo_build_roll_ptr
0000000000a0a344 l     F .text	000000000000009b              trx_undo_decode_roll_ptr
0000000000a0a3df l     F .text	000000000000004c              trx_undo_roll_ptr_is_insert
0000000000a0a42b l     F .text	0000000000000026              trx_write_roll_ptr
0000000000a0a451 l     F .text	000000000000001a              trx_read_roll_ptr
0000000000a0a46b l     F .text	0000000000000067              trx_undo_page_get_s_latched
0000000000a0a4d2 l     F .text	000000000000005c              read_view_get_nth_trx_id
0000000000a0a52e l     F .text	000000000000009f              read_view_sees_trx_id
0000000000a0a5cd l     F .text	0000000000000110              row_get_trx_id_offset
0000000000a0a6dd l     F .text	00000000000000d5              row_get_rec_trx_id
0000000000a0a7b2 l     F .text	00000000000000d9              row_get_rec_roll_ptr
0000000000a0a88b l     F .text	0000000000000047              thr_get_trx
0000000000a0a8d2 l     F .text	0000000000000071              upd_create
0000000000a0a943 l     F .text	0000000000000043              upd_get_n_fields
0000000000a0a986 l     F .text	0000000000000090              upd_get_nth_field
0000000000a0aa16 l     F .text	00000000000000f0              upd_field_set_field_no
0000000000a0ab06 l     F .text	0000000000000116              trx_undof_page_add_undo_rec_log
0000000000a0ad38 l     F .text	0000000000000027              trx_undo_left
0000000000a0ad5f l     F .text	0000000000000137              trx_undo_page_set_next_prev_and_add
0000000000a0ae96 l     F .text	000000000000024c              trx_undo_page_report_insert
0000000000a0b1c9 l     F .text	00000000000001e1              trx_undo_rec_get_col_val
0000000000a0b63e l     F .text	00000000000000b2              trx_undo_page_fetch_ext
0000000000a0b6f0 l     F .text	00000000000000f7              trx_undo_page_report_modify_ext
0000000000a0b7e7 l     F .text	0000000000000d86              trx_undo_page_report_modify
0000000000a0c5f8 l     F .text	000000000000003f              trx_undo_update_rec_get_n_upd_fields
0000000000a0c637 l     F .text	000000000000003f              trx_undo_update_rec_get_field_no
0000000000a0cde1 l     F .text	000000000000006a              trx_undo_erase_page_end
0000000000000000 l    df *ABS*	0000000000000000              trx0roll.c
0000000000a0e095 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a0e0ac l     F .text	0000000000000017              os_atomic_clear
0000000000a0e0c3 l     F .text	00000000000000b4              ut_align_down
0000000000a0e177 l     F .text	00000000000000b2              ut_align_offset
0000000000a0e229 l     F .text	0000000000000025              ut_strcmp
0000000000a0e24e l     F .text	0000000000000045              mach_read_from_1
0000000000a0e293 l     F .text	000000000000002c              mach_read_from_2
0000000000a0e2bf l     F .text	0000000000000072              mach_read_from_3
0000000000a0e331 l     F .text	0000000000000087              mach_read_from_4
0000000000a0e3b8 l     F .text	0000000000000050              mach_get_compressed_size
0000000000a0e408 l     F .text	00000000000000f2              mach_read_compressed
0000000000a0e4fa l     F .text	00000000000000a0              mach_ull_read_much_compressed
0000000000a0e59a l     F .text	0000000000000057              ut_hash_ulint
0000000000a0e5f1 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000a0e62b l     F .text	0000000000000027              ut_fold_ull
0000000000a0e652 l     F .text	000000000000001e              mutex_test_and_set
0000000000a0e670 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a0e68f l     F .text	000000000000004e              mutex_get_waiters
0000000000a0e6dd l     F .text	000000000000007b              mutex_exit_func
0000000000a0e758 l     F .text	00000000000000d1              mutex_enter_func
0000000000a0e829 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a0e937 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a0e9a4 l     F .text	0000000000000012              mem_block_get_len
0000000000a0e9b6 l     F .text	0000000000000084              mem_block_set_free
0000000000a0ea3a l     F .text	0000000000000012              mem_block_get_free
0000000000a0ea4c l     F .text	0000000000000143              mem_heap_alloc
0000000000a0eb8f l     F .text	000000000000016b              mem_heap_create_func
0000000000a0ecfa l     F .text	00000000000000a3              mem_heap_free_func
0000000000a0ed9d l     F .text	00000000000000fd              mem_alloc_func
0000000000a0ee9a l     F .text	000000000000003a              mem_free_func
0000000000a0eed4 l     F .text	0000000000000055              mem_strdup
0000000000a0ef29 l     F .text	0000000000000063              trx_start_if_not_started
0000000000a0ef8c l     F .text	0000000000000040              trx_get_dict_operation
0000000000a0efcc l     F .text	0000000000000074              dyn_array_create
0000000000a0f040 l     F .text	0000000000000096              mtr_start
0000000000a0f0d6 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000a0f192 l     F .text	000000000000008c              hash_calc_hash
0000000000a0f21e l     F .text	00000000000000dc              hash_get_mutex_no
0000000000a0f2fa l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000a0f3c6 l     F .text	000000000000009f              hash_get_mutex
0000000000a0f465 l     F .text	0000000000000046              buf_page_get_state
0000000000a0f4ab l     F .text	000000000000001a              buf_block_get_state
0000000000a0f4c5 l     F .text	00000000000000ea              buf_block_get_frame
0000000000a0f5af l     F .text	000000000000008e              trx_undo_arr_get_nth_info
0000000000a0f63d l     F .text	00000000000001d1              dict_table_get_on_id_low
0000000000a0f80e l     F .text	000000000000001f              page_align
0000000000a0f82d l     F .text	0000000000000056              page_get_page_no
0000000000a0f883 l     F .text	00000000000000e1              trx_undo_build_roll_ptr
0000000000a0f964 l     F .text	0000000000000067              trx_undo_page_get_s_latched
0000000000a0f9cb l     F .text	0000000000000026              trx_undo_rec_get_undo_no
0000000000a0f9f1 l     F .text	0000000000000089              trx_undo_rec_copy
0000000000a0fa7a l     F .text	0000000000000047              thr_get_trx
0000000000a0fac1 l     F .text	0000000000000042              que_node_get_type
0000000000a0fb03 l     F .text	0000000000000012              que_node_get_parent
0000000001390ef0 l     O .bss	0000000000000008              trx_roll_crash_recv_trx
0000000001390ef8 l     O .bss	0000000000000008              trx_roll_max_undo_no
0000000001390f00 l     O .bss	0000000000000008              trx_roll_progress_printed_pct
0000000000a104db l     F .text	0000000000000453              trx_rollback_active
0000000000a10ca9 l     F .text	00000000000001b6              trx_undo_arr_store_info
0000000000a10e5f l     F .text	00000000000000ab              trx_undo_arr_remove_info
0000000000a10f0a l     F .text	000000000000008c              trx_undo_arr_get_biggest
0000000000a110e0 l     F .text	000000000000016f              trx_roll_pop_top_rec
0000000000a11ae5 l     F .text	00000000000000a8              trx_finish_error_processing
0000000000a11b8d l     F .text	0000000000000094              trx_finish_partial_rollback_off_kernel
0000000000000000 l    df *ABS*	0000000000000000              trx0rseg.c
0000000000a11fab l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a11fc2 l     F .text	0000000000000017              os_atomic_clear
0000000000a11fd9 l     F .text	00000000000000b2              ut_align_offset
0000000000a1208b l     F .text	0000000000000087              mach_read_from_4
0000000000a12112 l     F .text	000000000000003a              mach_read_from_8
0000000000a1214c l     F .text	000000000000001e              mutex_test_and_set
0000000000a1216a l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a12189 l     F .text	000000000000004e              mutex_get_waiters
0000000000a121d7 l     F .text	000000000000007b              mutex_exit_func
0000000000a12252 l     F .text	00000000000000d1              mutex_enter_func
0000000000a12323 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a12431 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a1249e l     F .text	000000000000007c              pfs_mutex_create_func
0000000000a1251a l     F .text	0000000000000079              pfs_mutex_free_func
0000000000a12593 l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000a12699 l     F .text	0000000000000012              mem_block_get_len
0000000000a126ab l     F .text	0000000000000084              mem_block_set_free
0000000000a1272f l     F .text	0000000000000012              mem_block_get_free
0000000000a12741 l     F .text	0000000000000143              mem_heap_alloc
0000000000a12884 l     F .text	000000000000016b              mem_heap_create_func
0000000000a129ef l     F .text	00000000000000a3              mem_heap_free_func
0000000000a12a92 l     F .text	00000000000000fd              mem_alloc_func
0000000000a12b8f l     F .text	000000000000003a              mem_free_func
0000000000a12bc9 l     F .text	0000000000000049              dyn_block_get_used
0000000000a12c12 l     F .text	0000000000000074              dyn_array_create
0000000000a12c86 l     F .text	00000000000001a0              dyn_array_push
0000000000a12e26 l     F .text	000000000000015f              dyn_array_get_element
0000000000a12f85 l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000a1305e l     F .text	0000000000000096              mtr_start
0000000000a130f4 l     F .text	0000000000000171              mtr_memo_push
0000000000a13265 l     F .text	0000000000000131              mtr_memo_contains
0000000000a13396 l     F .text	00000000000000a6              mtr_x_lock_func
0000000000a1343c l     F .text	0000000000000046              buf_page_get_state
0000000000a13482 l     F .text	000000000000001a              buf_block_get_state
0000000000a1349c l     F .text	00000000000000ea              buf_block_get_frame
0000000000a13586 l     F .text	000000000000007b              buf_block_get_page_no
0000000000a13601 l     F .text	0000000000000164              flst_write_addr
0000000000a13765 l     F .text	0000000000000114              flst_read_addr
0000000000a13879 l     F .text	00000000000000bd              flst_init
0000000000a13936 l     F .text	0000000000000027              flst_get_len
0000000000a1395d l     F .text	0000000000000029              flst_get_last
0000000000a13986 l     F .text	0000000000000059              trx_sys_set_nth_rseg
0000000000a139df l     F .text	0000000000000091              trx_sysf_get
0000000000a13a70 l     F .text	00000000000000d5              trx_sysf_rseg_get_space
0000000000a13b45 l     F .text	00000000000000d5              trx_sysf_rseg_get_page_no
0000000000a13c1a l     F .text	00000000000000de              trx_sysf_rseg_set_space
0000000000a13cf8 l     F .text	00000000000000de              trx_sysf_rseg_set_page_no
0000000000a13dd6 l     F .text	0000000000000070              trx_rsegf_get_new
0000000000a13e46 l     F .text	0000000000000097              trx_rsegf_set_nth_undo
0000000000a13edd l     F .text	0000000000000067              trx_undo_page_get
0000000000a13f44 l     F .text	000000000000002b              trx_purge_get_log_from_hist
0000000000a14567 l     F .text	0000000000000499              trx_rseg_mem_create
0000000000a14a00 l     F .text	0000000000000152              trx_rseg_create_instance
0000000000000000 l    df *ABS*	0000000000000000              trx0sys.c
0000000000a14df8 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a14e0f l     F .text	0000000000000017              os_atomic_clear
0000000000a14e26 l     F .text	000000000000001b              ut_max
0000000000a14e41 l     F .text	0000000000000097              ut_uint64_align_up
0000000000a14ed8 l     F .text	00000000000000bc              ut_align
0000000000a14f94 l     F .text	0000000000000082              mach_write_to_4
0000000000a15016 l     F .text	0000000000000087              mach_read_from_4
0000000000a1509d l     F .text	0000000000000071              mach_write_to_8
0000000000a1510e l     F .text	000000000000003a              mach_read_from_8
0000000000a15148 l     F .text	000000000000002d              ut_memcpy
0000000000a15175 l     F .text	000000000000001a              ut_strlen
0000000000a1518f l     F .text	000000000000001e              mutex_test_and_set
0000000000a151ad l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a151cc l     F .text	000000000000004e              mutex_get_waiters
0000000000a1521a l     F .text	000000000000007b              mutex_exit_func
0000000000a15295 l     F .text	00000000000000d1              mutex_enter_func
0000000000a15366 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a15474 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a154e1 l     F .text	000000000000007c              pfs_mutex_create_func
0000000000a1555d l     F .text	0000000000000079              pfs_mutex_free_func
0000000000a155d6 l     F .text	0000000000000051              rw_lock_get_x_lock_count
0000000000a15627 l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000a1572d l     F .text	0000000000000012              mem_block_get_len
0000000000a1573f l     F .text	0000000000000084              mem_block_set_free
0000000000a157c3 l     F .text	0000000000000012              mem_block_get_free
0000000000a157d5 l     F .text	0000000000000143              mem_heap_alloc
0000000000a15918 l     F .text	000000000000016b              mem_heap_create_func
0000000000a15a83 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a15b26 l     F .text	00000000000000fd              mem_alloc_func
0000000000a15c23 l     F .text	000000000000003a              mem_free_func
0000000000a15c5d l     F .text	0000000000000074              dyn_array_create
0000000000a15cd1 l     F .text	00000000000001a0              dyn_array_push
0000000000a15e71 l     F .text	0000000000000096              mtr_start
0000000000a15f07 l     F .text	0000000000000171              mtr_memo_push
0000000000a16078 l     F .text	00000000000000a6              mtr_x_lock_func
0000000000a1611e l     F .text	0000000000000010              buf_pool_get_curr_size
0000000000a1612e l     F .text	0000000000000046              buf_page_get_state
0000000000a16174 l     F .text	000000000000001a              buf_block_get_state
0000000000a1618e l     F .text	00000000000000ea              buf_block_get_frame
0000000000a16278 l     F .text	000000000000007b              buf_block_get_page_no
0000000000a162f3 l     F .text	0000000000000091              trx_sysf_get
0000000000a16384 l     F .text	00000000000000d5              trx_sysf_rseg_get_page_no
00000000010f6000 l     O .data	00000000000000d0              file_format_name_map
0000000000d038e8 l     O .rodata	0000000000000008              FILE_FORMAT_NAME_N
0000000001390f60 l     O .bss	00000000000000a8              file_format_max
0000000000a164e1 l     F .text	000000000000011f              trx_doublewrite_init
0000000000a17718 l     F .text	00000000000002bd              trx_sysf_create
0000000000a179d5 l     F .text	0000000000000057              trx_rseg_compare_last_trx_no
0000000000a17dc1 l     F .text	0000000000000140              trx_sys_file_format_max_write
0000000000a17f01 l     F .text	00000000000000f8              trx_sys_file_format_max_read
0000000000000000 l    df *ABS*	0000000000000000              trx0trx.c
0000000000a189bd l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a189d4 l     F .text	0000000000000017              os_atomic_clear
0000000000a189eb l     F .text	000000000000001e              mutex_test_and_set
0000000000a18a09 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a18a28 l     F .text	000000000000004e              mutex_get_waiters
0000000000a18a76 l     F .text	000000000000007b              mutex_exit_func
0000000000a18af1 l     F .text	00000000000000d1              mutex_enter_func
0000000000a18bc2 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a18cd0 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a18d3d l     F .text	000000000000007c              pfs_mutex_create_func
0000000000a18db9 l     F .text	0000000000000079              pfs_mutex_free_func
0000000000a18e32 l     F .text	0000000000000012              mem_block_get_len
0000000000a18e44 l     F .text	0000000000000084              mem_block_set_free
0000000000a18ec8 l     F .text	0000000000000012              mem_block_get_free
0000000000a18eda l     F .text	0000000000000012              mem_block_get_start
0000000000a18eec l     F .text	0000000000000143              mem_heap_alloc
0000000000a1902f l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000a1916e l     F .text	000000000000004d              mem_heap_empty
0000000000a191bb l     F .text	000000000000016b              mem_heap_create_func
0000000000a19326 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a193c9 l     F .text	00000000000000fd              mem_alloc_func
0000000000a194c6 l     F .text	000000000000003a              mem_free_func
0000000000a19500 l     F .text	0000000000000072              mem_heap_get_size
0000000000a19572 l     F .text	0000000000000012              ib_vector_size
0000000000a19584 l     F .text	000000000000002a              ib_vector_free
0000000000a195ae l     F .text	0000000000000023              ib_vector_is_empty
0000000000a195d1 l     F .text	0000000000000063              trx_start_if_not_started
0000000000a19634 l     F .text	0000000000000040              trx_get_dict_operation
0000000000a19674 l     F .text	00000000000000ad              trx_set_dict_operation
0000000000a19721 l     F .text	0000000000000074              dyn_array_create
0000000000a19795 l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000a197b7 l     F .text	00000000000000b5              rw_lock_s_unlock_func
0000000000a1986c l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
0000000000a198d3 l     F .text	0000000000000096              mtr_start
0000000000a19969 l     F .text	0000000000000091              trx_get_on_id
0000000000a199fa l     F .text	000000000000007d              trx_sys_get_new_trx_id
0000000000a19a77 l     F .text	0000000000000047              thr_get_trx
0000000000a19abe l     F .text	0000000000000042              que_node_get_type
0000000000a19b00 l     F .text	0000000000000012              que_node_get_parent
0000000000a19b12 l     F .text	000000000000001d              __s2e_touch_string
0000000000a19b2f l     F .text	0000000000000029              s2e_message
0000000000a19b58 l     F .text	00000000000000ee              s2e_printf
0000000000a1aecd l     F .text	000000000000044e              trx_list_insert_ordered
0000000000a1b7f8 l     F .text	00000000000000af              trx_assign_rseg
0000000000a1bbdf l     F .text	0000000000000190              trx_serialisation_number_get
0000000000a1bd6f l     F .text	0000000000000219              trx_write_serialisation_history
0000000000a1c707 l     F .text	0000000000000110              trx_handle_commit_sig_off_kernel
0000000000a1c9cd l     F .text	00000000000001b6              trx_lock_wait_to_suspended
0000000000a1cb83 l     F .text	00000000000001bc              trx_sig_reply_wait_to_suspended
0000000000a1cd3f l     F .text	0000000000000175              trx_sig_is_compatible
0000000000000000 l    df *ABS*	0000000000000000              trx0undo.c
0000000000a1ea92 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a1eaa9 l     F .text	0000000000000017              os_atomic_clear
0000000000a1eac0 l     F .text	00000000000000b4              ut_align_down
0000000000a1eb74 l     F .text	00000000000000b2              ut_align_offset
0000000000a1ec26 l     F .text	0000000000000080              mach_write_to_1
0000000000a1eca6 l     F .text	0000000000000045              mach_read_from_1
0000000000a1eceb l     F .text	0000000000000096              mach_write_to_2
0000000000a1ed81 l     F .text	000000000000002c              mach_read_from_2
0000000000a1edad l     F .text	00000000000000a8              mach_write_to_3
0000000000a1ee55 l     F .text	0000000000000072              mach_read_from_3
0000000000a1eec7 l     F .text	0000000000000082              mach_write_to_4
0000000000a1ef49 l     F .text	0000000000000087              mach_read_from_4
0000000000a1efd0 l     F .text	0000000000000116              mach_write_compressed
0000000000a1f0e6 l     F .text	0000000000000050              mach_get_compressed_size
0000000000a1f136 l     F .text	00000000000000f2              mach_read_compressed
0000000000a1f228 l     F .text	0000000000000071              mach_write_to_8
0000000000a1f299 l     F .text	000000000000003a              mach_read_from_8
0000000000a1f2d3 l     F .text	000000000000007f              mach_ull_write_compressed
0000000000a1f352 l     F .text	00000000000000a0              mach_ull_read_much_compressed
0000000000a1f3f2 l     F .text	000000000000013e              mach_ull_parse_compressed
0000000000a1f530 l     F .text	000000000000001e              mutex_test_and_set
0000000000a1f54e l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a1f56d l     F .text	000000000000004e              mutex_get_waiters
0000000000a1f5bb l     F .text	000000000000007b              mutex_exit_func
0000000000a1f636 l     F .text	00000000000000d1              mutex_enter_func
0000000000a1f707 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a1f815 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a1f882 l     F .text	0000000000000012              mem_block_get_len
0000000000a1f894 l     F .text	0000000000000084              mem_block_set_free
0000000000a1f918 l     F .text	0000000000000012              mem_block_get_free
0000000000a1f92a l     F .text	0000000000000143              mem_heap_alloc
0000000000a1fa6d l     F .text	000000000000016b              mem_heap_create_func
0000000000a1fbd8 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a1fc7b l     F .text	00000000000000fd              mem_alloc_func
0000000000a1fd78 l     F .text	000000000000003a              mem_free_func
0000000000a1fdb2 l     F .text	0000000000000074              dyn_array_create
0000000000a1fe26 l     F .text	0000000000000205              dyn_array_open
0000000000a2002b l     F .text	000000000000013b              dyn_array_close
0000000000a20166 l     F .text	0000000000000051              rw_lock_get_x_lock_count
0000000000a201b7 l     F .text	0000000000000096              mtr_start
0000000000a2024d l     F .text	00000000000000b4              mtr_get_log_mode
0000000000a20301 l     F .text	0000000000000046              buf_page_get_state
0000000000a20347 l     F .text	000000000000001a              buf_block_get_state
0000000000a20361 l     F .text	00000000000000ea              buf_block_get_frame
0000000000a2044b l     F .text	000000000000007b              buf_block_get_page_no
0000000000a204c6 l     F .text	000000000000005b              mlog_open
0000000000a20521 l     F .text	000000000000006c              mlog_close
0000000000a2058d l     F .text	000000000000005b              mlog_catenate_ulint_compressed
0000000000a205e8 l     F .text	000000000000005b              mlog_catenate_ull_compressed
0000000000a20643 l     F .text	0000000000000164              flst_write_addr
0000000000a207a7 l     F .text	0000000000000114              flst_read_addr
0000000000a208bb l     F .text	00000000000000bd              flst_init
0000000000a20978 l     F .text	0000000000000027              flst_get_len
0000000000a2099f l     F .text	0000000000000029              flst_get_last
0000000000a209c8 l     F .text	0000000000000029              flst_get_next_addr
0000000000a209f1 l     F .text	0000000000000025              flst_get_prev_addr
0000000000a20a16 l     F .text	0000000000000040              trx_get_dict_operation
0000000000a20a56 l     F .text	000000000000001f              page_align
0000000000a20a75 l     F .text	0000000000000056              page_get_page_no
0000000000a20acb l     F .text	0000000000000056              page_get_space_id
0000000000a20b21 l     F .text	0000000000000067              trx_undo_page_get
0000000000a20b88 l     F .text	0000000000000067              trx_undo_page_get_s_latched
0000000000a20bef l     F .text	0000000000000051              trx_undo_page_get_start
0000000000a20c40 l     F .text	0000000000000080              trx_undo_page_get_end
0000000000a20cc0 l     F .text	0000000000000078              trx_undo_page_get_prev_rec
0000000000a20d38 l     F .text	0000000000000072              trx_undo_page_get_next_rec
0000000000a20daa l     F .text	000000000000007e              trx_undo_page_get_last_rec
0000000000a20e28 l     F .text	0000000000000068              trx_undo_page_get_first_rec
0000000000a20e90 l     F .text	0000000000000070              trx_rsegf_get
0000000000a20f00 l     F .text	0000000000000070              trx_rsegf_get_new
0000000000a20f70 l     F .text	000000000000008e              trx_rsegf_get_nth_undo
0000000000a20ffe l     F .text	0000000000000097              trx_rsegf_set_nth_undo
0000000000a21095 l     F .text	0000000000000079              trx_rsegf_undo_find_free
0000000000a2110e l     F .text	0000000000000026              trx_undo_rec_get_undo_no
0000000000a21134 l     F .text	00000000000000aa              trx_undo_get_prev_rec_from_prev_page
0000000000a21238 l     F .text	000000000000011a              trx_undo_get_next_rec_from_next_page
0000000000a214b9 l     F .text	000000000000003f              trx_undo_page_init_log
0000000000a21580 l     F .text	0000000000000088              trx_undo_page_init
0000000000a21608 l     F .text	00000000000002d5              trx_undo_seg_create
0000000000a218dd l     F .text	000000000000003f              trx_undo_header_create_log
0000000000a2191c l     F .text	0000000000000228              trx_undo_header_create
0000000000a21b44 l     F .text	00000000000000a3              trx_undo_write_xid
0000000000a21be7 l     F .text	0000000000000083              trx_undo_read_xid
0000000000a21c6a l     F .text	00000000000000e3              trx_undo_header_add_space_for_xid
0000000000a21d4d l     F .text	000000000000003f              trx_undo_insert_header_reuse_log
0000000000a21e6d l     F .text	00000000000001bf              trx_undo_insert_header_reuse
0000000000a2202c l     F .text	0000000000000028              trx_undo_discard_latest_log
0000000000a220b9 l     F .text	0000000000000105              trx_undo_discard_latest_update_undo
0000000000a2248f l     F .text	0000000000000225              trx_undo_free_page
0000000000a227ea l     F .text	0000000000000085              trx_undo_empty_header_page
0000000000a22d3c l     F .text	00000000000001d0              trx_undo_seg_free
0000000000a22f0c l     F .text	0000000000000961              trx_undo_mem_create_at_db_start
0000000000a23b00 l     F .text	00000000000001e3              trx_undo_mem_create
0000000000a23ce3 l     F .text	000000000000012f              trx_undo_mem_init_for_reuse
0000000000a23e88 l     F .text	00000000000001f6              trx_undo_create
0000000000a2407e l     F .text	00000000000004a6              trx_undo_reuse_cached
0000000000a24524 l     F .text	0000000000000114              trx_undo_mark_as_dict_operation
0000000000000000 l    df *ABS*	0000000000000000              usr0sess.c
0000000000a259b5 l     F .text	0000000000000012              mem_block_get_len
0000000000a259c7 l     F .text	0000000000000084              mem_block_set_free
0000000000a25a4b l     F .text	0000000000000012              mem_block_get_free
0000000000a25a5d l     F .text	0000000000000143              mem_heap_alloc
0000000000a25ba0 l     F .text	000000000000016b              mem_heap_create_func
0000000000a25d0b l     F .text	00000000000000a3              mem_heap_free_func
0000000000a25dae l     F .text	00000000000000fd              mem_alloc_func
0000000000a25eab l     F .text	000000000000003a              mem_free_func
0000000000000000 l    df *ABS*	0000000000000000              ut0dbg.c
0000000000000000 l    df *ABS*	0000000000000000              ut0mem.c
0000000000a26101 l     F .text	000000000000001b              ut_min
0000000000a2611c l     F .text	000000000000002d              ut_memcpy
0000000000a26149 l     F .text	0000000000000012              mem_block_get_len
0000000000a2615b l     F .text	0000000000000084              mem_block_set_free
0000000000a261df l     F .text	0000000000000012              mem_block_get_free
0000000000a261f1 l     F .text	0000000000000143              mem_heap_alloc
0000000000a26334 l     F .text	000000000000016b              mem_heap_create_func
0000000000a2649f l     F .text	00000000000000fd              mem_alloc_func
0000000001391030 l     O .bss	0000000000000018              ut_mem_block_list
0000000001391048 l     O .bss	0000000000000008              ut_mem_block_list_inited
0000000001391050 l     O .bss	0000000000000008              ut_mem_null_ptr
0000000000000000 l    df *ABS*	0000000000000000              ut0rnd.c
0000000000000000 l    df *ABS*	0000000000000000              ut0ut.c
0000000000000000 l    df *ABS*	0000000000000000              ut0vec.c
0000000000a28083 l     F .text	0000000000000012              mem_block_get_len
0000000000a28095 l     F .text	0000000000000084              mem_block_set_free
0000000000a28119 l     F .text	0000000000000012              mem_block_get_free
0000000000a2812b l     F .text	0000000000000143              mem_heap_alloc
0000000000000000 l    df *ABS*	0000000000000000              ut0bh.c
0000000000a283d9 l     F .text	000000000000002d              ut_memcpy
0000000000a28406 l     F .text	0000000000000012              ib_bh_size
0000000000a28418 l     F .text	0000000000000023              ib_bh_is_empty
0000000000a2843b l     F .text	000000000000002d              ib_bh_is_full
0000000000a28468 l     F .text	000000000000006d              ib_bh_get
0000000000a284d5 l     F .text	000000000000004c              ib_bh_set
0000000000a28521 l     F .text	0000000000000037              ib_bh_first
0000000000a28558 l     F .text	0000000000000045              ib_bh_last
0000000000000000 l    df *ABS*	0000000000000000              btr0btr.c
0000000000a288eb l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a28902 l     F .text	0000000000000017              os_atomic_clear
0000000000a28919 l     F .text	000000000000001b              ut_max
0000000000a28934 l     F .text	00000000000000b4              ut_align_down
0000000000a289e8 l     F .text	00000000000000b2              ut_align_offset
0000000000a28a9a l     F .text	000000000000002d              ut_memcpy
0000000000a28ac7 l     F .text	0000000000000080              mach_write_to_1
0000000000a28b47 l     F .text	0000000000000045              mach_read_from_1
0000000000a28b8c l     F .text	0000000000000096              mach_write_to_2
0000000000a28c22 l     F .text	000000000000002c              mach_read_from_2
0000000000a28c4e l     F .text	0000000000000082              mach_write_to_4
0000000000a28cd0 l     F .text	0000000000000087              mach_read_from_4
0000000000a28d57 l     F .text	0000000000000071              mach_write_to_8
0000000000a28dc8 l     F .text	000000000000003a              mach_read_from_8
0000000000a28e02 l     F .text	0000000000000015              dtype_get_charset_coll
0000000000a28e17 l     F .text	0000000000000244              dtype_get_fixed_size_low
0000000000a2905b l     F .text	0000000000000052              dtype_get_sql_null_size
0000000000a290ad l     F .text	000000000000001e              mutex_test_and_set
0000000000a290cb l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a290ea l     F .text	000000000000004e              mutex_get_waiters
0000000000a29138 l     F .text	000000000000007b              mutex_exit_func
0000000000a291b3 l     F .text	00000000000000d1              mutex_enter_func
0000000000a29284 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a29392 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a293ff l     F .text	0000000000000012              mem_block_get_len
0000000000a29411 l     F .text	0000000000000084              mem_block_set_free
0000000000a29495 l     F .text	0000000000000012              mem_block_get_free
0000000000a294a7 l     F .text	0000000000000012              mem_block_get_start
0000000000a294b9 l     F .text	0000000000000143              mem_heap_alloc
0000000000a295fc l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000a2973b l     F .text	000000000000004d              mem_heap_empty
0000000000a29788 l     F .text	000000000000016b              mem_heap_create_func
0000000000a298f3 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a29996 l     F .text	00000000000000fd              mem_alloc_func
0000000000a29a93 l     F .text	000000000000003a              mem_free_func
0000000000a29acd l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000a29bd3 l     F .text	0000000000000043              dfield_get_type
0000000000a29c16 l     F .text	0000000000000092              dfield_get_len
0000000000a29ca8 l     F .text	0000000000000042              dtuple_get_info_bits
0000000000a29cea l     F .text	000000000000004b              dtuple_set_info_bits
0000000000a29d35 l     F .text	0000000000000043              dtuple_get_n_fields
0000000000a29d78 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000a29e07 l     F .text	0000000000000139              dtuple_get_data_size
0000000000a29f40 l     F .text	0000000000000052              dict_col_get_fixed_size
0000000000a29f92 l     F .text	0000000000000085              dict_index_is_clust
0000000000a2a017 l     F .text	0000000000000085              dict_index_is_ibuf
0000000000a2a09c l     F .text	00000000000000be              dict_index_is_sec_or_ibuf
0000000000a2a15a l     F .text	000000000000004c              dict_table_is_comp
0000000000a2a1a6 l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000a2a214 l     F .text	0000000000000051              dict_table_zip_size
0000000000a2a265 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000a2a2ec l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000a2a3a4 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000a2a478 l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000a2a549 l     F .text	0000000000000042              dict_field_get_col
0000000000a2a58b l     F .text	000000000000002d              dict_index_get_nth_col
0000000000a2a5b8 l     F .text	000000000000007d              dict_index_get_space
0000000000a2a635 l     F .text	000000000000007d              dict_index_get_page
0000000000a2a6b2 l     F .text	000000000000007c              dict_index_get_lock
0000000000a2a72e l     F .text	0000000000000049              dyn_block_get_used
0000000000a2a777 l     F .text	0000000000000074              dyn_array_create
0000000000a2a7eb l     F .text	00000000000001a0              dyn_array_push
0000000000a2a98b l     F .text	000000000000015f              dyn_array_get_element
0000000000a2aaea l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000a2abc3 l     F .text	0000000000000096              mtr_start
0000000000a2ac59 l     F .text	0000000000000171              mtr_memo_push
0000000000a2adca l     F .text	0000000000000131              mtr_memo_contains
0000000000a2aefb l     F .text	00000000000000b4              mtr_get_log_mode
0000000000a2afaf l     F .text	0000000000000123              mtr_set_log_mode
0000000000a2b0d2 l     F .text	00000000000000a6              mtr_x_lock_func
0000000000a2b178 l     F .text	000000000000006e              buf_pool_from_bpage
0000000000a2b1e6 l     F .text	0000000000000046              buf_page_get_state
0000000000a2b22c l     F .text	000000000000001a              buf_block_get_state
0000000000a2b246 l     F .text	00000000000000ea              buf_block_get_frame
0000000000a2b330 l     F .text	000000000000007a              buf_block_get_space
0000000000a2b3aa l     F .text	000000000000007b              buf_block_get_page_no
0000000000a2b425 l     F .text	000000000000003b              buf_block_get_zip_size
0000000000a2b460 l     F .text	000000000000003a              buf_frame_get_page_zip
0000000000a2b49a l     F .text	0000000000000129              buf_block_free
0000000000a2b5c3 l     F .text	000000000000006b              buf_frame_copy
0000000000a2b62e l     F .text	0000000000000025              buf_block_modify_clock_inc
0000000000a2b653 l     F .text	000000000000006d              rec_get_bit_field_1
0000000000a2b6c0 l     F .text	00000000000001bd              rec_set_bit_field_1
0000000000a2b87d l     F .text	000000000000006d              rec_get_bit_field_2
0000000000a2b8ea l     F .text	0000000000000161              rec_get_next_offs
0000000000a2ba4b l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000a2bb06 l     F .text	0000000000000091              rec_get_status
0000000000a2bb97 l     F .text	0000000000000029              rec_get_n_owned_old
0000000000a2bbc0 l     F .text	0000000000000029              rec_get_n_owned_new
0000000000a2bbe9 l     F .text	000000000000003b              rec_get_info_bits
0000000000a2bc24 l     F .text	0000000000000033              rec_set_info_bits_old
0000000000a2bc57 l     F .text	0000000000000033              rec_set_info_bits_new
0000000000a2bc8a l     F .text	0000000000000024              rec_get_node_ptr_flag
0000000000a2bcae l     F .text	0000000000000029              rec_get_heap_no_old
0000000000a2bcd7 l     F .text	0000000000000029              rec_get_heap_no_new
0000000000a2bd00 l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000a2bd77 l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000a2bdef l     F .text	00000000000000ed              rec_offs_n_fields
0000000000a2bedc l     F .text	00000000000002a6              rec_offs_validate
0000000000a2c182 l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000a2c290 l     F .text	000000000000005f              rec_offs_comp
0000000000a2c2ef l     F .text	00000000000000ae              rec_offs_data_size
0000000000a2c39d l     F .text	000000000000009f              rec_offs_extra_size
0000000000a2c43c l     F .text	0000000000000032              rec_offs_size
0000000000a2c46e l     F .text	0000000000000035              rec_get_converted_extra_size
0000000000a2c4a3 l     F .text	00000000000001d3              rec_get_converted_size
0000000000a2c676 l     F .text	00000000000000cc              mlog_catenate_ulint
0000000000a2c742 l     F .text	0000000000000164              flst_write_addr
0000000000a2c8a6 l     F .text	0000000000000114              flst_read_addr
0000000000a2c9ba l     F .text	00000000000000bd              flst_init
0000000000a2ca77 l     F .text	0000000000000029              flst_get_first
0000000000a2caa0 l     F .text	0000000000000081              cmp_rec_rec
0000000000a2cb21 l     F .text	00000000000000b3              page_zip_get_size
0000000000a2cbd4 l     F .text	00000000000001c3              page_zip_simple_validate
0000000000a2cd97 l     F .text	0000000000000133              page_zip_get_trailer_len
0000000000a2d26f l     F .text	000000000000001e              page_is_leaf
0000000000a2d743 l     F .text	0000000000000024              page_dir_get_n_heap
0000000000a2ceca l     F .text	0000000000000056              page_zip_max_ins_size
0000000000a2cf20 l     F .text	0000000000000109              page_zip_write_header
0000000000a2d048 l     F .text	000000000000001f              page_offset
0000000000a2d029 l     F .text	000000000000001f              page_align
0000000000a2d067 l     F .text	000000000000004b              page_get_max_trx_id
0000000000a2d0b2 l     F .text	0000000000000083              page_header_get_field
0000000000a2d135 l     F .text	00000000000000f4              page_header_get_offs
0000000000a2d229 l     F .text	0000000000000024              page_is_comp
0000000000a2d24d l     F .text	0000000000000022              page_rec_is_comp
0000000000a2d28d l     F .text	000000000000008f              page_get_infimum_offset
0000000000a2d31c l     F .text	000000000000008f              page_get_supremum_offset
0000000000a2d3ab l     F .text	00000000000000b9              page_rec_is_user_rec_low
0000000000a2d464 l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000a2d4fd l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000a2d596 l     F .text	0000000000000022              page_rec_is_user_rec
0000000000a2d5b8 l     F .text	0000000000000022              page_rec_is_supremum
0000000000a2d5da l     F .text	0000000000000022              page_rec_is_infimum
0000000000a2d5fc l     F .text	0000000000000025              page_rec_get_nth
0000000000a2d621 l     F .text	0000000000000038              page_get_middle_rec
0000000000a2d705 l     F .text	000000000000001f              page_get_n_recs
0000000000a2d659 l     F .text	0000000000000056              page_get_page_no
0000000000a2d6af l     F .text	0000000000000056              page_get_space_id
0000000000a2d724 l     F .text	000000000000001f              page_dir_get_n_slots
0000000000a2d767 l     F .text	0000000000000067              page_dir_get_nth_slot
0000000000a2d7ce l     F .text	00000000000000d9              page_rec_check
0000000000a2d8a7 l     F .text	0000000000000032              page_dir_slot_get_rec
0000000000a2d8d9 l     F .text	0000000000000049              page_dir_slot_get_n_owned
0000000000a2d922 l     F .text	000000000000001d              page_dir_calc_reserved_space
0000000000a2d93f l     F .text	0000000000000149              page_rec_get_next_low
0000000000a2da88 l     F .text	000000000000002c              page_rec_get_next
0000000000a2dab4 l     F .text	000000000000002c              page_rec_get_next_const
0000000000a2dae0 l     F .text	0000000000000190              page_rec_get_prev_const
0000000000a2dc70 l     F .text	000000000000001a              page_rec_get_prev
0000000000a2dc8a l     F .text	0000000000000097              page_get_data_size
0000000000a2dd21 l     F .text	000000000000001f              page_get_free_space_of_empty
0000000000a2dd40 l     F .text	00000000000000e2              page_get_max_insert_size
0000000000a2de22 l     F .text	000000000000007d              page_get_max_insert_size_after_reorganize
0000000000a2de9f l     F .text	0000000000000096              page_cur_get_page
0000000000a2df35 l     F .text	000000000000008f              page_cur_get_block
0000000000a2dfc4 l     F .text	000000000000008e              page_cur_get_rec
0000000000a2e052 l     F .text	000000000000005b              page_cur_set_before_first
0000000000a2e0ad l     F .text	0000000000000096              page_cur_is_after_last
0000000000a2e143 l     F .text	00000000000000d0              page_cur_position
0000000000a2e213 l     F .text	000000000000005f              page_cur_move_to_next
0000000000a2e272 l     F .text	00000000000000d1              page_cur_search
0000000000a2e343 l     F .text	0000000000000195              page_cur_tuple_insert
0000000000a2e4d8 l     F .text	000000000000005f              btr_block_get_func
0000000000a2e537 l     F .text	0000000000000078              btr_page_set_index_id
0000000000a2e5af l     F .text	0000000000000080              btr_page_get_level_low
0000000000a2e62f l     F .text	000000000000005b              btr_page_get_level
0000000000a2e68a l     F .text	00000000000000e7              btr_page_set_level
0000000000a2e771 l     F .text	00000000000000c8              btr_page_get_next
0000000000a2e839 l     F .text	00000000000000ba              btr_page_set_next
0000000000a2e8f3 l     F .text	000000000000005f              btr_page_get_prev
0000000000a2e952 l     F .text	00000000000000ba              btr_page_set_prev
0000000000a2ea0c l     F .text	0000000000000156              btr_node_ptr_get_child_page_no
0000000000a2eb62 l     F .text	0000000000000012              btr_cur_get_page_cur
0000000000a2eb74 l     F .text	0000000000000022              btr_cur_get_block
0000000000a2eb96 l     F .text	000000000000001e              btr_cur_get_rec
0000000000a2ebb4 l     F .text	000000000000003a              btr_cur_get_page_zip
0000000000a2ebee l     F .text	0000000000000026              btr_cur_get_page
0000000000a2ec14 l     F .text	0000000000000011              btr_cur_get_index
0000000000a2ec25 l     F .text	000000000000008d              btr_cur_position
0000000000a2ecb2 l     F .text	000000000000007e              lock_get_min_heap_no
0000000000a2ed30 l     F .text	0000000000000108              ibuf_index_page_calc_free_bits
0000000000a2ee38 l     F .text	000000000000010e              ibuf_index_page_calc_free_zip
0000000000a2ef46 l     F .text	0000000000000094              ibuf_index_page_calc_free
0000000000a2efda l     F .text	00000000000000e6              ibuf_update_free_bits_if_full
0000000000a2f187 l     F .text	00000000000000c0              btr_root_fseg_validate
0000000000a2f247 l     F .text	000000000000018d              btr_root_block_get
0000000000a2f835 l     F .text	00000000000000fe              btr_page_create
0000000000a2f933 l     F .text	0000000000000159              btr_page_alloc_for_ibuf
0000000000a2fa8c l     F .text	0000000000000082              btr_page_alloc_low
0000000000a2fd05 l     F .text	00000000000000da              btr_page_free_for_ibuf
0000000000a2ff7b l     F .text	00000000000001ca              btr_node_ptr_set_child_page_no
0000000000a30145 l     F .text	00000000000000cb              btr_node_ptr_get_child
0000000000a30210 l     F .text	00000000000004c2              btr_page_get_father_node_ptr_func
0000000000a306d2 l     F .text	000000000000009a              btr_page_get_father_block
0000000000a3076c l     F .text	00000000000000cb              btr_page_get_father
0000000000a30e89 l     F .text	00000000000005a5              btr_page_reorganize_low
0000000000a314e5 l     F .text	0000000000000137              btr_page_empty
0000000000a31ea6 l     F .text	0000000000000358              btr_page_get_split_rec
0000000000a321fe l     F .text	00000000000002f9              btr_page_insert_fits
0000000000a326c1 l     F .text	00000000000007d5              btr_attach_half_pages
0000000000a32e96 l     F .text	00000000000000d7              btr_page_tuple_smaller
0000000000a33dbb l     F .text	0000000000000334              btr_level_list_remove_func
0000000000a340ef l     F .text	0000000000000051              btr_set_min_rec_mark_log
0000000000a343da l     F .text	00000000000008cd              btr_lift_page_up
0000000000a35843 l     F .text	0000000000000488              btr_discard_only_page_on_level
0000000000a3638e l     F .text	000000000000009a              btr_index_rec_validate_report
0000000000a36985 l     F .text	000000000000022c              btr_index_page_validate
0000000000a36bb1 l     F .text	000000000000009f              btr_validate_report1
0000000000a36c50 l     F .text	00000000000000bb              btr_validate_report2
0000000000a36d0b l     F .text	0000000000001450              btr_validate_level
0000000000000000 l    df *ABS*	0000000000000000              btr0cur.c
0000000000a38529 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a38540 l     F .text	0000000000000017              os_atomic_clear
0000000000a38557 l     F .text	000000000000001b              ut_min
0000000000a38572 l     F .text	000000000000001b              ut_max
0000000000a3858d l     F .text	0000000000000080              ut_ull_create
0000000000a3860d l     F .text	00000000000000b4              ut_align_down
0000000000a386c1 l     F .text	00000000000000b2              ut_align_offset
0000000000a38773 l     F .text	0000000000000080              mach_write_to_1
0000000000a387f3 l     F .text	0000000000000045              mach_read_from_1
0000000000a38838 l     F .text	0000000000000096              mach_write_to_2
0000000000a388ce l     F .text	000000000000002c              mach_read_from_2
0000000000a388fa l     F .text	00000000000000a8              mach_write_to_3
0000000000a389a2 l     F .text	0000000000000082              mach_write_to_4
0000000000a38a24 l     F .text	0000000000000087              mach_read_from_4
0000000000a38aab l     F .text	0000000000000116              mach_write_compressed
0000000000a38bc1 l     F .text	000000000000003a              mach_read_from_8
0000000000a38bfb l     F .text	0000000000000071              mach_write_to_7
0000000000a38c6c l     F .text	0000000000000071              mach_write_to_6
0000000000a38cdd l     F .text	000000000000006b              mach_read_from_6
0000000000a38d48 l     F .text	000000000000007f              mach_ull_write_compressed
0000000000a38dc7 l     F .text	0000000000000015              dtype_get_charset_coll
0000000000a38ddc l     F .text	0000000000000244              dtype_get_fixed_size_low
0000000000a39020 l     F .text	0000000000000052              dtype_get_sql_null_size
0000000000a39072 l     F .text	000000000000001e              mutex_test_and_set
0000000000a39090 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a390af l     F .text	000000000000004e              mutex_get_waiters
0000000000a390fd l     F .text	000000000000007b              mutex_exit_func
0000000000a39178 l     F .text	00000000000000d1              mutex_enter_func
0000000000a39249 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a39357 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a393c4 l     F .text	0000000000000012              mem_block_get_len
0000000000a393d6 l     F .text	0000000000000084              mem_block_set_free
0000000000a3945a l     F .text	0000000000000012              mem_block_get_free
0000000000a3946c l     F .text	000000000000009f              mem_heap_zalloc
0000000000a3950b l     F .text	0000000000000143              mem_heap_alloc
0000000000a3964e l     F .text	000000000000016b              mem_heap_create_func
0000000000a397b9 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a3985c l     F .text	0000000000000022              rw_lock_reset_waiter_flag
0000000000a3987e l     F .text	0000000000000074              rw_lock_get_writer
0000000000a398f2 l     F .text	0000000000000051              rw_lock_get_x_lock_count
0000000000a39943 l     F .text	0000000000000058              rw_lock_lock_word_decr
0000000000a3999b l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000a399bd l     F .text	0000000000000072              rw_lock_s_lock_low
0000000000a39a2f l     F .text	0000000000000053              rw_lock_s_lock_func
0000000000a39a82 l     F .text	00000000000000b5              rw_lock_s_unlock_func
0000000000a39b37 l     F .text	00000000000000e9              rw_lock_x_unlock_func
0000000000a39c20 l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000a39d26 l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
0000000000a39e2c l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
0000000000a39e93 l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
0000000000a39efa l     F .text	0000000000000043              dfield_get_type
0000000000a39f3d l     F .text	0000000000000090              dfield_get_data
0000000000a39fcd l     F .text	0000000000000092              dfield_get_len
0000000000a3a05f l     F .text	0000000000000049              dfield_is_ext
0000000000a3a0a8 l     F .text	000000000000004a              dfield_set_ext
0000000000a3a0f2 l     F .text	000000000000006a              dfield_set_data
0000000000a3a15c l     F .text	0000000000000042              dtuple_get_info_bits
0000000000a3a19e l     F .text	0000000000000043              dtuple_get_n_fields
0000000000a3a1e1 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000a3a270 l     F .text	0000000000000139              dtuple_get_data_size
0000000000a3a3a9 l     F .text	0000000000000114              dict_col_get_clust_pos
0000000000a3a4bd l     F .text	0000000000000085              dict_index_is_clust
0000000000a3a542 l     F .text	0000000000000085              dict_index_is_unique
0000000000a3a5c7 l     F .text	0000000000000085              dict_index_is_ibuf
0000000000a3a64c l     F .text	00000000000000be              dict_index_is_sec_or_ibuf
0000000000a3a70a l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000a3a7db l     F .text	000000000000014a              dict_table_get_sys_col
0000000000a3a925 l     F .text	00000000000000c5              dict_table_get_sys_col_no
0000000000a3a9ea l     F .text	000000000000004c              dict_table_is_comp
0000000000a3aa36 l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000a3aaa4 l     F .text	0000000000000051              dict_table_zip_size
0000000000a3aaf5 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000a3ab7c l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000a3ac34 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000a3ad08 l     F .text	0000000000000118              dict_index_get_sys_col_pos
0000000000a3ae20 l     F .text	000000000000007d              dict_index_get_space
0000000000a3ae9d l     F .text	000000000000007d              dict_index_get_page
0000000000a3af1a l     F .text	000000000000007c              dict_index_get_lock
0000000000a3af96 l     F .text	000000000000000b              dict_index_get_space_reserve
0000000000a3afa1 l     F .text	0000000000000049              dyn_block_get_used
0000000000a3afea l     F .text	0000000000000074              dyn_array_create
0000000000a3b05e l     F .text	00000000000001a0              dyn_array_push
0000000000a3b1fe l     F .text	0000000000000205              dyn_array_open
0000000000a3b403 l     F .text	000000000000013b              dyn_array_close
0000000000a3b53e l     F .text	000000000000015f              dyn_array_get_element
0000000000a3b69d l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000a3b776 l     F .text	0000000000000096              mtr_start
0000000000a3b80c l     F .text	0000000000000171              mtr_memo_push
0000000000a3b97d l     F .text	00000000000000c1              mtr_set_savepoint
0000000000a3ba3e l     F .text	000000000000018c              mtr_release_s_latch_at_savepoint
0000000000a3bbca l     F .text	0000000000000131              mtr_memo_contains
0000000000a3bcfb l     F .text	00000000000000b4              mtr_get_log_mode
0000000000a3bdaf l     F .text	00000000000000a6              mtr_s_lock_func
0000000000a3be55 l     F .text	00000000000000a6              mtr_x_lock_func
0000000000a3befb l     F .text	000000000000006e              buf_pool_from_bpage
0000000000a3bf69 l     F .text	000000000000001a              buf_pool_from_block
0000000000a3bf83 l     F .text	0000000000000046              buf_page_get_state
0000000000a3bfc9 l     F .text	000000000000001a              buf_block_get_state
0000000000a3bfe3 l     F .text	00000000000000ea              buf_block_get_frame
0000000000a3c0cd l     F .text	000000000000007a              buf_block_get_space
0000000000a3c147 l     F .text	000000000000007b              buf_block_get_page_no
0000000000a3c1c2 l     F .text	000000000000003b              buf_block_get_zip_size
0000000000a3c1fd l     F .text	00000000000001af              buf_page_release_zip
0000000000a3c3ac l     F .text	000000000000006d              rec_get_bit_field_1
0000000000a3c419 l     F .text	00000000000001bd              rec_set_bit_field_1
0000000000a3c5d6 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000a3c643 l     F .text	0000000000000161              rec_get_next_offs
0000000000a3c7a4 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000a3c85f l     F .text	0000000000000091              rec_get_status
0000000000a3c8f0 l     F .text	00000000000000f1              rec_get_n_fields
0000000000a3c9e1 l     F .text	000000000000003b              rec_get_info_bits
0000000000a3ca1c l     F .text	0000000000000033              rec_set_info_bits_old
0000000000a3ca4f l     F .text	0000000000000033              rec_set_info_bits_new
0000000000a3ca82 l     F .text	0000000000000053              rec_get_deleted_flag
0000000000a3cad5 l     F .text	000000000000004e              rec_set_deleted_flag_old
0000000000a3cb23 l     F .text	0000000000000072              rec_set_deleted_flag_new
0000000000a3cb95 l     F .text	0000000000000024              rec_get_node_ptr_flag
0000000000a3cbb9 l     F .text	0000000000000029              rec_get_heap_no_old
0000000000a3cbe2 l     F .text	0000000000000029              rec_get_heap_no_new
0000000000a3cc0b l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000a3cc82 l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000a3ccfa l     F .text	00000000000000ed              rec_offs_n_fields
0000000000a3cde7 l     F .text	00000000000002a6              rec_offs_validate
0000000000a3d08d l     F .text	000000000000010f              rec_offs_make_valid
0000000000a3d19c l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000a3d2aa l     F .text	000000000000005f              rec_offs_comp
0000000000a3d309 l     F .text	000000000000005f              rec_offs_any_extern
0000000000a3d368 l     F .text	00000000000000aa              rec_offs_nth_extern
0000000000a3d412 l     F .text	00000000000000aa              rec_offs_nth_sql_null
0000000000a3d4bc l     F .text	00000000000000ae              rec_offs_data_size
0000000000a3d56a l     F .text	000000000000009f              rec_offs_extra_size
0000000000a3d609 l     F .text	0000000000000032              rec_offs_size
0000000000a3d63b l     F .text	0000000000000035              rec_get_converted_extra_size
0000000000a3d670 l     F .text	00000000000001d3              rec_get_converted_size
0000000000a3d843 l     F .text	0000000000000026              trx_write_trx_id
0000000000a3d869 l     F .text	000000000000001a              trx_read_trx_id
0000000000a3d883 l     F .text	000000000000005b              mlog_open
0000000000a3d8de l     F .text	000000000000006c              mlog_close
0000000000a3d94a l     F .text	0000000000000227              mlog_write_initial_log_record_fast
0000000000a3db71 l     F .text	0000000000000010              recv_recovery_is_on
0000000000a3db81 l     F .text	00000000000000b3              page_zip_get_size
0000000000a3dc34 l     F .text	0000000000000126              page_zip_rec_needs_ext
0000000000a3ed18 l     F .text	000000000000001f              page_get_free_space_of_empty
0000000000a3dd5a l     F .text	00000000000001c3              page_zip_simple_validate
0000000000a3df1d l     F .text	0000000000000133              page_zip_get_trailer_len
0000000000a3e413 l     F .text	000000000000001e              page_is_leaf
0000000000a3e7af l     F .text	0000000000000024              page_dir_get_n_heap
0000000000a3e050 l     F .text	0000000000000056              page_zip_max_ins_size
0000000000a3e0a6 l     F .text	00000000000000a6              page_zip_available
0000000000a3e14c l     F .text	000000000000001f              page_align
0000000000a3e16b l     F .text	000000000000001f              page_offset
0000000000a3e18a l     F .text	000000000000004b              page_get_max_trx_id
0000000000a3e1d5 l     F .text	000000000000013c              page_update_max_trx_id
0000000000a3e311 l     F .text	0000000000000083              page_header_get_field
0000000000a3e394 l     F .text	0000000000000024              page_is_comp
0000000000a3e3b8 l     F .text	0000000000000022              page_rec_is_comp
0000000000a3e3da l     F .text	0000000000000039              page_rec_get_heap_no
0000000000a3e431 l     F .text	000000000000008f              page_get_infimum_offset
0000000000a3e4c0 l     F .text	000000000000008f              page_get_supremum_offset
0000000000a3e54f l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000a3e5e8 l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000a3e681 l     F .text	0000000000000022              page_rec_is_supremum
0000000000a3e6a3 l     F .text	0000000000000022              page_rec_is_infimum
0000000000a3e6c5 l     F .text	0000000000000056              page_get_page_no
0000000000a3e71b l     F .text	0000000000000056              page_get_space_id
0000000000a3e771 l     F .text	000000000000001f              page_get_n_recs
0000000000a3e790 l     F .text	000000000000001f              page_dir_get_n_slots
0000000000a3e7d3 l     F .text	0000000000000067              page_dir_get_nth_slot
0000000000a3e83a l     F .text	00000000000000d9              page_rec_check
0000000000a3e913 l     F .text	0000000000000032              page_dir_slot_get_rec
0000000000a3e945 l     F .text	000000000000001d              page_dir_calc_reserved_space
0000000000a3e962 l     F .text	0000000000000149              page_rec_get_next_low
0000000000a3eaab l     F .text	000000000000002c              page_rec_get_next
0000000000a3ead7 l     F .text	0000000000000190              page_rec_get_prev_const
0000000000a3ec67 l     F .text	000000000000001a              page_rec_get_prev
0000000000a3ec81 l     F .text	0000000000000097              page_get_data_size
0000000000a3ed37 l     F .text	00000000000000e2              page_get_max_insert_size
0000000000a3ee19 l     F .text	000000000000007d              page_get_max_insert_size_after_reorganize
0000000000a3ee96 l     F .text	0000000000000096              page_cur_get_page
0000000000a3ef2c l     F .text	000000000000008f              page_cur_get_block
0000000000a3efbb l     F .text	000000000000008e              page_cur_get_rec
0000000000a3f049 l     F .text	000000000000005b              page_cur_set_before_first
0000000000a3f0a4 l     F .text	000000000000005b              page_cur_set_after_last
0000000000a3f0ff l     F .text	0000000000000096              page_cur_is_before_first
0000000000a3f195 l     F .text	0000000000000096              page_cur_is_after_last
0000000000a3f22b l     F .text	000000000000005f              page_cur_move_to_next
0000000000a3f28a l     F .text	000000000000005f              page_cur_move_to_prev
0000000000a3f2e9 l     F .text	00000000000000d1              page_cur_search
0000000000a3f3ba l     F .text	0000000000000195              page_cur_tuple_insert
0000000000a3f54f l     F .text	000000000000005f              btr_block_get_func
0000000000a3f5ae l     F .text	000000000000001e              btr_page_get_index_id
0000000000a3f5cc l     F .text	0000000000000080              btr_page_get_level_low
0000000000a3f64c l     F .text	000000000000005b              btr_page_get_level
0000000000a3f6a7 l     F .text	00000000000000c8              btr_page_get_next
0000000000a3f76f l     F .text	000000000000005f              btr_page_get_prev
0000000000a3f7ce l     F .text	0000000000000156              btr_node_ptr_get_child_page_no
0000000000a3f924 l     F .text	0000000000000012              btr_cur_get_page_cur
0000000000a3f936 l     F .text	0000000000000022              btr_cur_get_block
0000000000a3f958 l     F .text	000000000000001e              btr_cur_get_rec
0000000000a3f976 l     F .text	0000000000000026              btr_cur_get_page
0000000000a3f99c l     F .text	0000000000000011              btr_cur_get_index
0000000000a3f9ad l     F .text	0000000000000129              btr_cur_compress_recommendation
0000000000a3fad6 l     F .text	0000000000000112              btr_cur_can_delete_without_compress
0000000000a3fbe8 l     F .text	0000000000000046              btr_blob_op_is_update
0000000000a3fc2e l     F .text	0000000000000026              trx_write_roll_ptr
0000000000a3fc54 l     F .text	0000000000000110              row_get_trx_id_offset
0000000000a3fd64 l     F .text	0000000000000047              thr_get_trx
0000000000a3fdab l     F .text	0000000000000043              upd_get_n_fields
0000000000a3fdee l     F .text	0000000000000090              upd_get_nth_field
0000000000a3fe7e l     F .text	0000000000000065              upd_get_field_by_field_no
0000000000a3fee3 l     F .text	00000000000001b9              row_upd_rec_sys_fields
0000000000a4009c l     F .text	0000000000000043              btr_search_get_info
0000000000a400df l     F .text	000000000000008c              btr_search_info_update
0000000000a4016b l     F .text	0000000000000088              ibuf_should_try
0000000000a401f3 l     F .text	0000000000000015              ibuf_inside
0000000000a40208 l     F .text	0000000000000108              ibuf_index_page_calc_free_bits
0000000000a40310 l     F .text	000000000000010e              ibuf_index_page_calc_free_zip
0000000000a4041e l     F .text	0000000000000094              ibuf_index_page_calc_free
0000000000a404b2 l     F .text	00000000000000e6              ibuf_update_free_bits_if_full
0000000000a40598 l     F .text	0000000000000081              btr_rec_set_deleted_flag
0000000000a40619 l     F .text	00000000000005b5              btr_cur_latch_leaves
0000000000a471f5 l     F .text	0000000000000132              btr_cur_add_path_info
0000000000a42612 l     F .text	0000000000000156              btr_cur_insert_if_possible
0000000000a42768 l     F .text	0000000000000151              btr_cur_ins_lock_and_undo
0000000000a428b9 l     F .text	000000000000008d              btr_cur_trx_report
0000000000a436c8 l     F .text	00000000000002d5              btr_cur_upd_lock_and_undo
0000000000a489a1 l     F .text	00000000000000f4              btr_cur_unmark_extern_fields
0000000000a44d00 l     F .text	00000000000001bd              btr_cur_pess_upd_restore_supremum
0000000000a4ad5c l     F .text	00000000000001d8              btr_rec_free_updated_extern_fields
0000000000a45ce5 l     F .text	00000000000001a1              btr_cur_del_mark_set_clust_rec_log
0000000000a46531 l     F .text	00000000000000cd              btr_cur_del_mark_set_sec_rec_log
0000000000a4abd3 l     F .text	0000000000000189              btr_rec_free_externally_stored_fields
0000000000a47327 l     F .text	000000000000030a              btr_estimate_n_rows_in_range_on_level
0000000000a47baf l     F .text	00000000000000a9              btr_record_not_null_field_in_rec
0000000000a48508 l     F .text	000000000000010d              btr_rec_get_externally_stored_len
0000000000a48407 l     F .text	0000000000000101              btr_rec_get_field_ref_offs
0000000000a48615 l     F .text	00000000000001f1              btr_cur_set_ownership_of_extern_field
0000000000a48d03 l     F .text	000000000000001a              btr_blob_get_part_len
0000000000a48d1d l     F .text	000000000000001e              btr_blob_get_next_page_no
0000000000a48d3b l     F .text	00000000000001cf              btr_blob_free
0000000000a4a356 l     F .text	000000000000013e              btr_check_blob_fil_page_type
0000000000a4af34 l     F .text	000000000000021b              btr_copy_blob_prefix
0000000000a4b14f l     F .text	0000000000000504              btr_copy_zblob_prefix
0000000000a4b653 l     F .text	0000000000000089              btr_copy_externally_stored_field_prefix_low
0000000000a4b850 l     F .text	0000000000000130              btr_copy_externally_stored_field
0000000000000000 l    df *ABS*	0000000000000000              btr0pcur.c
0000000000a4baae l     F .text	00000000000000b4              ut_align_down
0000000000a4bb62 l     F .text	00000000000000b2              ut_align_offset
0000000000a4bc14 l     F .text	000000000000002d              ut_memcpy
0000000000a4bc41 l     F .text	000000000000002c              mach_read_from_2
0000000000a4bc6d l     F .text	0000000000000087              mach_read_from_4
0000000000a4bcf4 l     F .text	0000000000000012              mem_block_get_len
0000000000a4bd06 l     F .text	0000000000000084              mem_block_set_free
0000000000a4bd8a l     F .text	0000000000000012              mem_block_get_free
0000000000a4bd9c l     F .text	0000000000000143              mem_heap_alloc
0000000000a4bedf l     F .text	000000000000016b              mem_heap_create_func
0000000000a4c04a l     F .text	00000000000000a3              mem_heap_free_func
0000000000a4c0ed l     F .text	00000000000000fd              mem_alloc_func
0000000000a4c1ea l     F .text	000000000000003a              mem_free_func
0000000000a4c224 l     F .text	0000000000000049              dyn_block_get_used
0000000000a4c26d l     F .text	0000000000000074              dyn_array_create
0000000000a4c2e1 l     F .text	000000000000015f              dyn_array_get_element
0000000000a4c440 l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000a4c519 l     F .text	0000000000000096              mtr_start
0000000000a4c5af l     F .text	0000000000000131              mtr_memo_contains
0000000000a4c6e0 l     F .text	0000000000000046              buf_page_get_state
0000000000a4c726 l     F .text	000000000000001a              buf_block_get_state
0000000000a4c740 l     F .text	00000000000000ea              buf_block_get_frame
0000000000a4c82a l     F .text	000000000000007a              buf_block_get_space
0000000000a4c8a4 l     F .text	000000000000007b              buf_block_get_page_no
0000000000a4c91f l     F .text	000000000000003b              buf_block_get_zip_size
0000000000a4c95a l     F .text	0000000000000015              buf_block_get_modify_clock
0000000000a4c96f l     F .text	0000000000000161              rec_get_next_offs
0000000000a4cad0 l     F .text	0000000000000081              cmp_rec_rec
0000000000a4cb51 l     F .text	000000000000001f              page_align
0000000000a4cb70 l     F .text	000000000000001f              page_offset
0000000000a4cb8f l     F .text	0000000000000083              page_header_get_field
0000000000a4cc12 l     F .text	0000000000000024              page_is_comp
0000000000a4cc36 l     F .text	0000000000000022              page_rec_is_comp
0000000000a4cc58 l     F .text	000000000000001e              page_is_leaf
0000000000a4cc76 l     F .text	000000000000008f              page_get_infimum_offset
0000000000a4cd05 l     F .text	000000000000008f              page_get_supremum_offset
0000000000a4cd94 l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000a4ce2d l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000a4cec6 l     F .text	0000000000000022              page_rec_is_supremum
0000000000a4cee8 l     F .text	0000000000000022              page_rec_is_infimum
0000000000a4cf0a l     F .text	0000000000000056              page_get_page_no
0000000000a4cf60 l     F .text	0000000000000056              page_get_space_id
0000000000a4cfb6 l     F .text	000000000000001f              page_get_n_recs
0000000000a4cfd5 l     F .text	000000000000001f              page_dir_get_n_slots
0000000000a4cff4 l     F .text	0000000000000067              page_dir_get_nth_slot
0000000000a4d05b l     F .text	00000000000000d9              page_rec_check
0000000000a4d134 l     F .text	0000000000000032              page_dir_slot_get_rec
0000000000a4d166 l     F .text	0000000000000149              page_rec_get_next_low
0000000000a4d2af l     F .text	000000000000002c              page_rec_get_next
0000000000a4d2db l     F .text	0000000000000190              page_rec_get_prev_const
0000000000a4d46b l     F .text	000000000000001a              page_rec_get_prev
0000000000a4d485 l     F .text	000000000000008f              page_cur_get_block
0000000000a4d514 l     F .text	000000000000008e              page_cur_get_rec
0000000000a4d5a2 l     F .text	000000000000005b              page_cur_set_before_first
0000000000a4d5fd l     F .text	000000000000005b              page_cur_set_after_last
0000000000a4d658 l     F .text	0000000000000096              page_cur_is_before_first
0000000000a4d6ee l     F .text	0000000000000096              page_cur_is_after_last
0000000000a4d784 l     F .text	000000000000005f              page_cur_move_to_next
0000000000a4d7e3 l     F .text	000000000000005f              page_cur_move_to_prev
0000000000a4d842 l     F .text	000000000000005f              btr_block_get_func
0000000000a4d8a1 l     F .text	00000000000000c8              btr_page_get_next
0000000000a4d969 l     F .text	000000000000005f              btr_page_get_prev
0000000000a4d9c8 l     F .text	00000000000000bd              btr_leaf_page_release
0000000000a4da85 l     F .text	0000000000000012              btr_cur_get_page_cur
0000000000a4da97 l     F .text	0000000000000022              btr_cur_get_block
0000000000a4dab9 l     F .text	000000000000001e              btr_cur_get_rec
0000000000a4dad7 l     F .text	0000000000000026              btr_cur_get_page
0000000000a4dafd l     F .text	0000000000000011              btr_cur_get_index
0000000000a4db0e l     F .text	0000000000000016              btr_pcur_get_btr_cur
0000000000a4db24 l     F .text	0000000000000022              btr_pcur_get_page_cur
0000000000a4db46 l     F .text	0000000000000057              btr_pcur_get_page
0000000000a4db9d l     F .text	0000000000000057              btr_pcur_get_block
0000000000a4dbf4 l     F .text	000000000000008e              btr_pcur_get_rec
0000000000a4dc82 l     F .text	000000000000008e              btr_pcur_is_after_last_on_page
0000000000a4dd10 l     F .text	000000000000008e              btr_pcur_is_before_first_on_page
0000000000a4dd9e l     F .text	00000000000000a8              btr_pcur_is_on_user_rec
0000000000a4de46 l     F .text	00000000000000c4              btr_pcur_is_before_first_in_tree
0000000000a4df0a l     F .text	00000000000000c4              btr_pcur_is_after_last_in_tree
0000000000a4dfce l     F .text	000000000000009e              btr_pcur_move_to_next_on_page
0000000000a4e06c l     F .text	000000000000009e              btr_pcur_move_to_prev_on_page
0000000000a4e10a l     F .text	00000000000000f4              btr_pcur_move_to_next_user_rec
0000000000a4e1fe l     F .text	0000000000000038              btr_pcur_init
0000000000a4e236 l     F .text	00000000000000b0              btr_pcur_open_func
0000000000a4e2e6 l     F .text	00000000000000b4              btr_pcur_open_with_no_init_func
0000000000000000 l    df *ABS*	0000000000000000              btr0sea.c
0000000000a4f6f8 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a4f70f l     F .text	0000000000000017              os_atomic_clear
0000000000a4f726 l     F .text	000000000000001b              ut_min
0000000000a4f741 l     F .text	000000000000001b              ut_max
0000000000a4f75c l     F .text	000000000000005f              ut_pair_cmp
0000000000a4f7bb l     F .text	00000000000000b4              ut_align_down
0000000000a4f86f l     F .text	00000000000000b2              ut_align_offset
0000000000a4f921 l     F .text	0000000000000045              mach_read_from_1
0000000000a4f966 l     F .text	000000000000002c              mach_read_from_2
0000000000a4f992 l     F .text	0000000000000087              mach_read_from_4
0000000000a4fa19 l     F .text	000000000000003a              mach_read_from_8
0000000000a4fa53 l     F .text	0000000000000057              ut_hash_ulint
0000000000a4faaa l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000a4fae4 l     F .text	0000000000000027              ut_fold_ull
0000000000a4fb0b l     F .text	0000000000000096              ut_fold_binary
0000000000a4fba1 l     F .text	000000000000001e              mutex_test_and_set
0000000000a4fbbf l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a4fbde l     F .text	000000000000004e              mutex_get_waiters
0000000000a4fc2c l     F .text	000000000000007b              mutex_exit_func
0000000000a4fca7 l     F .text	00000000000000d1              mutex_enter_func
0000000000a4fd78 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a4fe86 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a4fef3 l     F .text	0000000000000012              mem_block_get_len
0000000000a4ff05 l     F .text	0000000000000084              mem_block_set_free
0000000000a4ff89 l     F .text	0000000000000012              mem_block_get_free
0000000000a4ff9b l     F .text	0000000000000012              mem_block_get_start
0000000000a4ffad l     F .text	0000000000000143              mem_heap_alloc
0000000000a500f0 l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000a5022f l     F .text	000000000000004d              mem_heap_empty
0000000000a5027c l     F .text	000000000000016b              mem_heap_create_func
0000000000a503e7 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a5048a l     F .text	00000000000000fd              mem_alloc_func
0000000000a50587 l     F .text	000000000000003a              mem_free_func
0000000000a505c1 l     F .text	0000000000000090              dfield_get_data
0000000000a50651 l     F .text	0000000000000092              dfield_get_len
0000000000a506e3 l     F .text	0000000000000043              dtuple_get_n_fields
0000000000a50726 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000a507b5 l     F .text	00000000000001d0              dtuple_fold
0000000000a50985 l     F .text	0000000000000022              rw_lock_reset_waiter_flag
0000000000a509a7 l     F .text	0000000000000074              rw_lock_get_writer
0000000000a50a1b l     F .text	0000000000000046              rw_lock_get_reader_count
0000000000a50a61 l     F .text	0000000000000058              rw_lock_lock_word_decr
0000000000a50ab9 l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000a50adb l     F .text	0000000000000072              rw_lock_s_lock_low
0000000000a50b4d l     F .text	0000000000000053              rw_lock_s_lock_func
0000000000a50ba0 l     F .text	00000000000000b5              rw_lock_s_unlock_func
0000000000a50c55 l     F .text	00000000000000e9              rw_lock_x_unlock_func
0000000000a50d3e l     F .text	0000000000000079              pfs_rw_lock_create_func
0000000000a50db7 l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000a50ebd l     F .text	0000000000000070              pfs_rw_lock_free_func
0000000000a50f2d l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
0000000000a51033 l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
0000000000a5109a l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
0000000000a51101 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000a511bd l     F .text	0000000000000097              hash_table_clear
0000000000a51254 l     F .text	0000000000000079              hash_get_n_cells
0000000000a512cd l     F .text	000000000000008c              hash_calc_hash
0000000000a51359 l     F .text	00000000000000dc              hash_get_mutex_no
0000000000a51435 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000a51501 l     F .text	000000000000009f              hash_get_mutex
0000000000a515a0 l     F .text	000000000000007c              dict_table_get_first_index
0000000000a5161c l     F .text	000000000000007c              dict_table_get_next_index
0000000000a51698 l     F .text	0000000000000085              dict_index_is_clust
0000000000a5171d l     F .text	0000000000000085              dict_index_is_ibuf
0000000000a517a2 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000a51829 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000a518e1 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000a519b5 l     F .text	000000000000006d              rec_get_bit_field_1
0000000000a51a22 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000a51a8f l     F .text	0000000000000161              rec_get_next_offs
0000000000a51bf0 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000a51cab l     F .text	0000000000000091              rec_get_status
0000000000a51d3c l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000a51db3 l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000a51e2b l     F .text	00000000000000ed              rec_offs_n_fields
0000000000a51f18 l     F .text	00000000000002a6              rec_offs_validate
0000000000a521be l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000a522cc l     F .text	000000000000005f              rec_offs_comp
0000000000a5232b l     F .text	0000000000000297              rec_fold
0000000000a525c2 l     F .text	0000000000000049              dyn_block_get_used
0000000000a5260b l     F .text	0000000000000074              dyn_array_create
0000000000a5267f l     F .text	000000000000015f              dyn_array_get_element
0000000000a527de l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000a528b7 l     F .text	0000000000000096              mtr_start
0000000000a5294d l     F .text	0000000000000131              mtr_memo_contains
0000000000a52a7e l     F .text	0000000000000011              ha_chain_get_next
0000000000a52a8f l     F .text	000000000000003a              ha_chain_get_first
0000000000a52ac9 l     F .text	00000000000000ec              ha_search_and_get_data
0000000000a52bb5 l     F .text	00000000000000ec              ha_search_with_data
0000000000a52ca1 l     F .text	00000000000000e4              ha_search_and_delete_if_found
0000000000a52d85 l     F .text	000000000000006e              buf_pool_from_bpage
0000000000a52df3 l     F .text	0000000000000074              buf_page_peek_if_young
0000000000a52e67 l     F .text	00000000000000c9              buf_page_peek_if_too_old
0000000000a52ffa l     F .text	000000000000004f              buf_page_is_accessed
0000000000a52f30 l     F .text	0000000000000046              buf_page_get_state
0000000000a52f76 l     F .text	000000000000001a              buf_block_get_state
0000000000a52f90 l     F .text	000000000000006a              buf_page_in_file
0000000000a53049 l     F .text	0000000000000071              buf_page_get_block
0000000000a530ba l     F .text	00000000000000ea              buf_block_get_frame
0000000000a531a4 l     F .text	000000000000007a              buf_block_get_space
0000000000a5321e l     F .text	000000000000007b              buf_block_get_page_no
0000000000a53299 l     F .text	0000000000000129              buf_block_free
0000000000a533c2 l     F .text	0000000000000027              buf_page_address_fold
0000000000a533e9 l     F .text	0000000000000089              buf_pool_from_array
0000000000a53472 l     F .text	00000000000002b9              buf_page_hash_get_low
0000000000a5372b l     F .text	0000000000000074              buf_page_hash_get
0000000000a5379f l     F .text	000000000000003d              buf_block_hash_get
0000000000a537dc l     F .text	000000000000008f              buf_pool_mutex_enter_all
0000000000a5386b l     F .text	000000000000007c              buf_pool_mutex_exit_all
0000000000a538e7 l     F .text	000000000000001f              page_align
0000000000a53906 l     F .text	000000000000001f              page_offset
0000000000a53925 l     F .text	0000000000000083              page_header_get_field
0000000000a539a8 l     F .text	0000000000000024              page_is_comp
0000000000a539cc l     F .text	0000000000000022              page_rec_is_comp
0000000000a539ee l     F .text	000000000000008f              page_get_infimum_offset
0000000000a53a7d l     F .text	00000000000000b9              page_rec_is_user_rec_low
0000000000a53b36 l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000a53bcf l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000a53c68 l     F .text	0000000000000022              page_rec_is_user_rec
0000000000a53c8a l     F .text	0000000000000022              page_rec_is_supremum
0000000000a53cac l     F .text	0000000000000022              page_rec_is_infimum
0000000000a53cce l     F .text	0000000000000163              page_cmp_dtuple_rec_with_match
0000000000a53e31 l     F .text	0000000000000056              page_get_page_no
0000000000a53e87 l     F .text	0000000000000056              page_get_space_id
0000000000a53edd l     F .text	000000000000001f              page_get_n_recs
0000000000a53efc l     F .text	000000000000001f              page_dir_get_n_slots
0000000000a53f1b l     F .text	0000000000000067              page_dir_get_nth_slot
0000000000a53f82 l     F .text	00000000000000d9              page_rec_check
0000000000a5405b l     F .text	0000000000000032              page_dir_slot_get_rec
0000000000a5408d l     F .text	0000000000000149              page_rec_get_next_low
0000000000a541d6 l     F .text	000000000000002c              page_rec_get_next
0000000000a54202 l     F .text	0000000000000190              page_rec_get_prev_const
0000000000a54392 l     F .text	000000000000001a              page_rec_get_prev
0000000000a543ac l     F .text	000000000000008f              page_cur_get_block
0000000000a5443b l     F .text	000000000000008e              page_cur_get_rec
0000000000a544c9 l     F .text	00000000000000d0              page_cur_position
0000000000a54599 l     F .text	000000000000001e              btr_page_get_index_id
0000000000a545b7 l     F .text	00000000000000c8              btr_page_get_next
0000000000a5467f l     F .text	000000000000005f              btr_page_get_prev
0000000000a546de l     F .text	00000000000000bd              btr_leaf_page_release
0000000000a5479b l     F .text	0000000000000012              btr_cur_get_page_cur
0000000000a547ad l     F .text	0000000000000022              btr_cur_get_block
0000000000a547cf l     F .text	000000000000001e              btr_cur_get_rec
0000000000a547ed l     F .text	000000000000008d              btr_cur_position
0000000000a5487a l     F .text	0000000000000096              btr_search_check_free_space_in_heap
0000000000a54c8d l     F .text	00000000000002e7              btr_search_info_update_hash
0000000000a54f74 l     F .text	0000000000000347              btr_search_update_block_hash_info
0000000000a552bb l     F .text	0000000000000340              btr_search_update_hash_ref
0000000000a56933 l     F .text	000000000000094d              btr_search_build_page_hash_index
0000000000a55783 l     F .text	0000000000000585              btr_search_check_guess
0000000000000000 l    df *ABS*	0000000000000000              buf0buf.c
0000000000a58826 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a5883d l     F .text	0000000000000017              os_atomic_clear
0000000000a58854 l     F .text	00000000000000bc              ut_align
0000000000a58910 l     F .text	00000000000000b4              ut_align_down
0000000000a589c4 l     F .text	0000000000000096              mach_write_to_2
0000000000a58a5a l     F .text	000000000000002c              mach_read_from_2
0000000000a58a86 l     F .text	0000000000000087              mach_read_from_4
0000000000a58b0d l     F .text	000000000000003a              mach_read_from_8
0000000000a58b47 l     F .text	000000000000001e              mutex_test_and_set
0000000000a58b65 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a58b84 l     F .text	000000000000004e              mutex_get_waiters
0000000000a58bd2 l     F .text	000000000000007b              mutex_exit_func
0000000000a58c4d l     F .text	00000000000000d1              mutex_enter_func
0000000000a58d1e l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a58e2c l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a58e99 l     F .text	000000000000007c              pfs_mutex_create_func
0000000000a58f15 l     F .text	0000000000000022              rw_lock_reset_waiter_flag
0000000000a58f37 l     F .text	0000000000000058              rw_lock_lock_word_decr
0000000000a58f8f l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000a58fb1 l     F .text	0000000000000080              rw_lock_set_writer_id_and_recursion_flag
0000000000a59031 l     F .text	0000000000000072              rw_lock_s_lock_low
0000000000a590a3 l     F .text	0000000000000053              rw_lock_s_lock_func
0000000000a590f6 l     F .text	0000000000000141              rw_lock_x_lock_func_nowait
0000000000a59237 l     F .text	00000000000000b5              rw_lock_s_unlock_func
0000000000a592ec l     F .text	00000000000000e9              rw_lock_x_unlock_func
0000000000a593d5 l     F .text	0000000000000079              pfs_rw_lock_create_func
0000000000a5944e l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000a59554 l     F .text	0000000000000108              pfs_rw_lock_x_lock_func_nowait
0000000000a5965c l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
0000000000a59762 l     F .text	000000000000010d              pfs_rw_lock_s_lock_low
0000000000a5986f l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
0000000000a598d6 l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
0000000000a5993d l     F .text	0000000000000057              ut_hash_ulint
0000000000a59994 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000a599ce l     F .text	0000000000000096              ut_fold_binary
0000000000a59a64 l     F .text	0000000000000012              mem_block_get_len
0000000000a59a76 l     F .text	0000000000000084              mem_block_set_free
0000000000a59afa l     F .text	0000000000000012              mem_block_get_free
0000000000a59b0c l     F .text	0000000000000143              mem_heap_alloc
0000000000a59c4f l     F .text	000000000000016b              mem_heap_create_func
0000000000a59dba l     F .text	00000000000000a3              mem_heap_free_func
0000000000a59e5d l     F .text	00000000000000fd              mem_alloc_func
0000000000a59f5a l     F .text	000000000000003a              mem_free_func
0000000000a59f94 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000a5a050 l     F .text	000000000000008c              hash_calc_hash
0000000000a5a0dc l     F .text	00000000000000dc              hash_get_mutex_no
0000000000a5a1b8 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000a5a284 l     F .text	000000000000009f              hash_get_mutex
0000000000a5a323 l     F .text	0000000000000074              dyn_array_create
0000000000a5a397 l     F .text	00000000000001a0              dyn_array_push
0000000000a5a537 l     F .text	0000000000000096              mtr_start
0000000000a5a5cd l     F .text	0000000000000171              mtr_memo_push
0000000000a5a73e l     F .text	0000000000000010              buf_pool_get_curr_size
0000000000a5a74e l     F .text	000000000000009c              buf_pool_index
0000000000a5a7ea l     F .text	000000000000006b              buf_pool_from_bpage
0000000000a5a855 l     F .text	000000000000001a              buf_pool_from_block
0000000000a5a86f l     F .text	0000000000000074              buf_page_peek_if_young
0000000000a5a8e3 l     F .text	00000000000000c9              buf_page_peek_if_too_old
0000000000a5afcd l     F .text	000000000000004f              buf_page_is_accessed
0000000000a5a9ac l     F .text	0000000000000046              buf_page_get_state
0000000000a5a9f2 l     F .text	000000000000001a              buf_block_get_state
0000000000a5aa0c l     F .text	000000000000025a              buf_page_set_state
0000000000a5ac66 l     F .text	0000000000000023              buf_block_set_state
0000000000a5ac89 l     F .text	000000000000006a              buf_page_in_file
0000000000a5acf3 l     F .text	0000000000000071              buf_page_belongs_to_unzip_LRU
0000000000a5ad64 l     F .text	0000000000000066              buf_page_get_mutex
0000000000a5adca l     F .text	000000000000004c              buf_page_get_flush_type
0000000000a5ae16 l     F .text	0000000000000041              buf_block_set_file_page
0000000000a5ae57 l     F .text	000000000000004a              buf_page_get_io_fix
0000000000a5aea1 l     F .text	000000000000001a              buf_block_get_io_fix
0000000000a5aebb l     F .text	00000000000000ef              buf_page_set_io_fix
0000000000a5afaa l     F .text	0000000000000023              buf_block_set_io_fix
0000000000a5b01c l     F .text	00000000000000eb              buf_page_set_accessed
0000000000a5b107 l     F .text	0000000000000071              buf_page_get_block
0000000000a5b178 l     F .text	000000000000007a              buf_page_get_space
0000000000a5b1f2 l     F .text	000000000000007a              buf_block_get_space
0000000000a5b26c l     F .text	000000000000007b              buf_page_get_page_no
0000000000a5b2e7 l     F .text	000000000000007b              buf_block_get_page_no
0000000000a5b362 l     F .text	000000000000003b              buf_page_get_zip_size
0000000000a5b39d l     F .text	000000000000003b              buf_block_get_zip_size
0000000000a5b3d8 l     F .text	0000000000000037              buf_page_alloc_descriptor
0000000000a5b40f l     F .text	000000000000001b              buf_page_free_descriptor
0000000000a5b42a l     F .text	0000000000000129              buf_block_free
0000000000a5b553 l     F .text	0000000000000027              buf_page_address_fold
0000000000a5b57a l     F .text	000000000000007e              buf_block_buf_fix_inc_func
0000000000a5b5f8 l     F .text	0000000000000080              buf_block_buf_fix_dec
0000000000a5b678 l     F .text	0000000000000064              buf_pool_get
0000000000a5b6dc l     F .text	0000000000000086              buf_pool_from_array
0000000000a5b762 l     F .text	00000000000002b9              buf_page_hash_get_low
0000000000a5ba1b l     F .text	0000000000000074              buf_page_hash_get
0000000000a5ba8f l     F .text	000000000000003d              buf_block_hash_get
0000000000a5bacc l     F .text	000000000000008f              buf_pool_mutex_enter_all
0000000000a5bb5b l     F .text	000000000000007c              buf_pool_mutex_exit_all
0000000000a5bbd7 l     F .text	0000000000000010              recv_recovery_is_on
0000000000a5bbe7 l     F .text	00000000000000b3              page_zip_get_size
0000000000a5bc9a l     F .text	00000000000000d9              page_zip_set_size
0000000000a5bd73 l     F .text	0000000000000025              page_zip_des_init
0000000000a5bd98 l     F .text	000000000000001f              page_align
0000000000a5bdb7 l     F .text	0000000000000056              page_get_page_no
0000000000a5be0d l     F .text	0000000000000056              page_get_space_id
0000000000a5be63 l     F .text	000000000000001e              btr_page_get_index_id
0000000000a5be81 l     F .text	0000000000000094              buf_buddy_get_slot
0000000000a5bf15 l     F .text	0000000000000106              buf_buddy_alloc
0000000000a5c01b l     F .text	0000000000000107              buf_buddy_free
0000000000a5c122 l     F .text	0000000000000025              lock_rec_fold
0000000000a5c147 l     F .text	0000000000000043              lock_rec_hash
0000000000a5c18a l     F .text	000000000000002a              ibuf_mtr_start
0000000000a5c1b4 l     F .text	0000000000000060              ibuf_mtr_commit
0000000000a5c214 l     F .text	0000000000000015              ibuf_inside
0000000000a5c229 l     F .text	000000000000007b              ibuf_bitmap_page
0000000000d10b28 l     O .rodata	0000000000000004              WAIT_FOR_READ
0000000000d10b30 l     O .rodata	0000000000000008              BUF_PAGE_READ_MAX_RETRIES
00000000013910a0 l     O .bss	0000000000000008              buf_dbg_counter
00000000013910a8 l     O .bss	0000000000000008              buf_pool_index.18706
0000000000a5d15b l     F .text	00000000000001b6              buf_block_init
0000000000a5d311 l     F .text	00000000000002aa              buf_chunk_init
0000000000a5d5bb l     F .text	000000000000005a              buf_chunk_contains_zip
0000000000a5d6ea l     F .text	00000000000000f1              buf_chunk_not_freed
0000000000a5d7db l     F .text	000000000000007d              buf_pool_set_sizes
0000000000a5db83 l     F .text	00000000000001ae              buf_pool_free_instance
0000000000a5f0f1 l     F .text	000000000000019b              buf_pool_watch_remove
0000000000a5f755 l     F .text	00000000000000aa              buf_page_make_young_if_needed
0000000000a60134 l     F .text	0000000000000065              buf_block_init_low
0000000000a60763 l     F .text	0000000000000085              buf_pointer_is_block_field_instance
0000000000a6084a l     F .text	0000000000000099              buf_block_is_uncompressed
0000000000a62995 l     F .text	000000000000007f              buf_page_init_low
0000000000a62a14 l     F .text	000000000000047f              buf_page_init
0000000000a63f83 l     F .text	0000000000000228              buf_mark_space_corrupt
0000000000a64841 l     F .text	0000000000000170              buf_all_freed_instance
0000000000a649b1 l     F .text	000000000000037f              buf_pool_invalidate_instance
0000000000a64d6e l     F .text	00000000000008ff              buf_pool_validate_instance
0000000000a656b7 l     F .text	0000000000000557              buf_print_instance
0000000000a66149 l     F .text	0000000000000509              buf_stats_aggregate_pool_info
0000000000000000 l    df *ABS*	0000000000000000              buf0flu.c
0000000000a6743a l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a67451 l     F .text	0000000000000017              os_atomic_clear
0000000000a67468 l     F .text	000000000000001b              ut_min
0000000000a67483 l     F .text	000000000000002c              mach_read_from_2
0000000000a674af l     F .text	0000000000000082              mach_write_to_4
0000000000a67531 l     F .text	0000000000000087              mach_read_from_4
0000000000a675b8 l     F .text	0000000000000071              mach_write_to_8
0000000000a67629 l     F .text	000000000000001e              mutex_test_and_set
0000000000a67647 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a67666 l     F .text	000000000000004e              mutex_get_waiters
0000000000a676b4 l     F .text	000000000000007b              mutex_exit_func
0000000000a6772f l     F .text	00000000000000d1              mutex_enter_func
0000000000a67800 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a6790e l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a6797b l     F .text	0000000000000058              rw_lock_lock_word_decr
0000000000a679d3 l     F .text	0000000000000072              rw_lock_s_lock_low
0000000000a67a45 l     F .text	0000000000000053              rw_lock_s_lock_func
0000000000a67a98 l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
0000000000a67b9e l     F .text	0000000000000057              ut_hash_ulint
0000000000a67bf5 l     F .text	0000000000000058              log_get_lsn
0000000000a67c4d l     F .text	0000000000000017              log_get_capacity
0000000000a67c64 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000a67d20 l     F .text	000000000000008c              hash_calc_hash
0000000000a67dac l     F .text	00000000000000dc              hash_get_mutex_no
0000000000a67e88 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000a67f54 l     F .text	000000000000009f              hash_get_mutex
0000000000a67ff3 l     F .text	000000000000006e              buf_pool_from_bpage
0000000000a68061 l     F .text	0000000000000046              buf_page_get_state
0000000000a680a7 l     F .text	000000000000001a              buf_block_get_state
0000000000a680c1 l     F .text	000000000000025a              buf_page_set_state
0000000000a6831b l     F .text	000000000000006a              buf_page_in_file
0000000000a68385 l     F .text	0000000000000066              buf_page_get_mutex
0000000000a683eb l     F .text	000000000000004c              buf_page_get_flush_type
0000000000a68437 l     F .text	000000000000006b              buf_page_set_flush_type
0000000000a684a2 l     F .text	000000000000004a              buf_page_get_io_fix
0000000000a684ec l     F .text	000000000000001a              buf_block_get_io_fix
0000000000a68506 l     F .text	00000000000000ef              buf_page_set_io_fix
0000000000a685f5 l     F .text	000000000000009d              buf_page_is_old
0000000000a68692 l     F .text	000000000000007a              buf_page_get_space
0000000000a6870c l     F .text	000000000000007a              buf_block_get_space
0000000000a68786 l     F .text	000000000000007b              buf_page_get_page_no
0000000000a68801 l     F .text	000000000000007b              buf_block_get_page_no
0000000000a6887c l     F .text	000000000000003b              buf_page_get_zip_size
0000000000a688b7 l     F .text	0000000000000027              buf_page_address_fold
0000000000a688de l     F .text	0000000000000067              buf_pool_get
0000000000a68945 l     F .text	0000000000000089              buf_pool_from_array
0000000000a689ce l     F .text	00000000000002b9              buf_page_hash_get_low
0000000000a68c87 l     F .text	0000000000000074              buf_page_hash_get
0000000000a68cfb l     F .text	0000000000000083              page_header_get_field
0000000000a68d7e l     F .text	0000000000000024              page_is_comp
0000000000a68da2 l     F .text	00000000000000b3              page_zip_get_size
00000000013910c0 l     O .bss	0000000000000140              buf_flush_stat_arr
0000000001391200 l     O .bss	0000000000000008              buf_flush_stat_arr_ind
0000000001391210 l     O .bss	0000000000000010              buf_flush_stat_cur
0000000001391220 l     O .bss	0000000000000010              buf_flush_stat_sum
0000000001391230 l     O .bss	0000000000000008              buf_lru_flush_page_count
0000000000a68e55 l     F .text	00000000000000d0              incr_flush_list_size_in_bytes
0000000000a68f25 l     F .text	0000000000000044              buf_flush_validate_skip
00000000010f60dc l     O .data	0000000000000004              buf_flush_validate_count.17077
0000000000a6d941 l     F .text	000000000000050c              buf_flush_validate_low
0000000000a68f69 l     F .text	000000000000011f              buf_flush_insert_in_flush_rbt
0000000000a69088 l     F .text	00000000000000af              buf_flush_delete_from_flush_rbt
0000000000a69137 l     F .text	000000000000019e              buf_flush_block_cmp
0000000000a69e3a l     F .text	0000000000000147              buf_flush_ready_for_flush
0000000000a6a9d0 l     F .text	000000000000001b              buf_flush_sync_datafiles
0000000000a6a9eb l     F .text	0000000000000885              buf_flush_buffered_writes
0000000000a6b270 l     F .text	000000000000024a              buf_flush_post_to_doublewrite_buf
0000000000a6b7f4 l     F .text	00000000000003f2              buf_flush_write_block_low
0000000000a6bea6 l     F .text	00000000000003db              buf_flush_page
0000000000a6c281 l     F .text	00000000000003f5              buf_flush_try_neighbors
0000000000a6c676 l     F .text	000000000000023a              buf_flush_page_and_try_neighbors
0000000000a6c8b0 l     F .text	0000000000000117              buf_flush_LRU_list_batch
0000000000a6c9c7 l     F .text	00000000000002c6              buf_flush_flush_list_batch
0000000000a6cc8d l     F .text	00000000000001a5              buf_flush_batch
0000000000a6ce32 l     F .text	00000000000000b7              buf_flush_common
0000000000a6cee9 l     F .text	0000000000000134              buf_flush_start
0000000000a6d01d l     F .text	00000000000000e9              buf_flush_end
0000000000a6d383 l     F .text	0000000000000293              buf_flush_LRU_recommendation
0000000000000000 l    df *ABS*	0000000000000000              buf0lru.c
0000000000a6de9f l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a6deb6 l     F .text	0000000000000017              os_atomic_clear
0000000000a6decd l     F .text	000000000000001b              ut_min
0000000000a6dee8 l     F .text	0000000000000057              ut_hash_ulint
0000000000a6df3f l     F .text	0000000000000082              mach_write_to_4
0000000000a6dfc1 l     F .text	0000000000000087              mach_read_from_4
0000000000a6e048 l     F .text	000000000000003a              mach_read_from_8
0000000000a6e082 l     F .text	000000000000001e              mutex_test_and_set
0000000000a6e0a0 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a6e0bf l     F .text	000000000000004e              mutex_get_waiters
0000000000a6e10d l     F .text	000000000000007b              mutex_exit_func
0000000000a6e188 l     F .text	00000000000000d1              mutex_enter_func
0000000000a6e259 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a6e367 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a6e3d4 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000a6e490 l     F .text	000000000000008c              hash_calc_hash
0000000000a6e51c l     F .text	00000000000000dc              hash_get_mutex_no
0000000000a6e5f8 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000a6e6c4 l     F .text	000000000000009f              hash_get_mutex
0000000000a6e763 l     F .text	000000000000006e              buf_pool_from_bpage
0000000000a6e7d1 l     F .text	000000000000001a              buf_pool_from_block
0000000000a6e7eb l     F .text	0000000000000046              buf_page_get_state
0000000000a6e831 l     F .text	000000000000001a              buf_block_get_state
0000000000a6e84b l     F .text	000000000000025a              buf_page_set_state
0000000000a6eaa5 l     F .text	0000000000000023              buf_block_set_state
0000000000a6eac8 l     F .text	000000000000006a              buf_page_in_file
0000000000a6eb32 l     F .text	0000000000000071              buf_page_belongs_to_unzip_LRU
0000000000a6eba3 l     F .text	0000000000000066              buf_page_get_mutex
0000000000a6ec09 l     F .text	000000000000004a              buf_page_get_io_fix
0000000000a6ec53 l     F .text	00000000000000d9              buf_page_set_sticky
0000000000a6ed2c l     F .text	00000000000000da              buf_page_unset_sticky
0000000000a6ee06 l     F .text	000000000000012c              buf_page_can_relocate
0000000000a6ef32 l     F .text	000000000000009d              buf_page_is_old
0000000000a6efcf l     F .text	00000000000000e8              buf_page_set_old
0000000000a6f0b7 l     F .text	000000000000004f              buf_page_is_accessed
0000000000a6f106 l     F .text	00000000000000ea              buf_block_get_frame
0000000000a6f1f0 l     F .text	000000000000007a              buf_page_get_space
0000000000a6f26a l     F .text	000000000000007b              buf_page_get_page_no
0000000000a6f2e5 l     F .text	000000000000003b              buf_page_get_zip_size
0000000000a6f320 l     F .text	0000000000000037              buf_page_alloc_descriptor
0000000000a6f357 l     F .text	000000000000001b              buf_page_free_descriptor
0000000000a6f372 l     F .text	0000000000000027              buf_page_address_fold
0000000000a6f399 l     F .text	0000000000000025              buf_block_modify_clock_inc
0000000000a6f3be l     F .text	0000000000000089              buf_pool_from_array
0000000000a6f447 l     F .text	00000000000002b9              buf_page_hash_get_low
0000000000a6f700 l     F .text	00000000000000b3              page_zip_get_size
0000000000a6f7b3 l     F .text	00000000000000d9              page_zip_set_size
0000000000a6f88c l     F .text	000000000000001e              btr_page_get_index_id
0000000000a6f8aa l     F .text	0000000000000094              buf_buddy_get_slot
0000000000a6f93e l     F .text	0000000000000107              buf_buddy_free
0000000001391240 l     O .bss	0000000000000008              buf_lru_switched_on_innodb_mon
0000000001391260 l     O .bss	0000000000000320              buf_LRU_stat_arr
0000000001391580 l     O .bss	0000000000000008              buf_LRU_stat_arr_ind
0000000000a6fa45 l     F .text	00000000000000ca              incr_LRU_size_in_bytes
0000000000a6fb0f l     F .text	0000000000000127              buf_LRU_evict_from_unzip_LRU
0000000000a6fc36 l     F .text	00000000000000ba              buf_LRU_drop_page_hash_batch
0000000000a6fcf0 l     F .text	000000000000036a              buf_LRU_drop_page_hash_for_tablespace
0000000000a7005a l     F .text	000000000000018d              buf_flush_yield
0000000000a701e7 l     F .text	00000000000000c1              buf_flush_try_yield
0000000000a702a8 l     F .text	0000000000000198              buf_flush_or_remove_page
0000000000a70440 l     F .text	000000000000014e              buf_flush_or_remove_pages
0000000000a7058e l     F .text	0000000000000114              buf_flush_dirty_pages
0000000000a706a2 l     F .text	000000000000041b              buf_LRU_remove_all_pages
0000000000a7427d l     F .text	0000000000000c6d              buf_LRU_block_remove_hashed_page
0000000000a74eea l     F .text	00000000000000b0              buf_LRU_block_free_hashed_page
0000000000a70e31 l     F .text	00000000000001e4              buf_LRU_free_from_unzip_LRU_list
0000000000a71015 l     F .text	00000000000001b3              buf_LRU_free_from_common_LRU_list
0000000000a71d6d l     F .text	000000000000026e              buf_LRU_old_adjust_len
0000000000a71fdb l     F .text	0000000000000160              buf_LRU_old_init
0000000000a7213b l     F .text	0000000000000251              buf_unzip_LRU_remove_block_if_needed
0000000000a7238c l     F .text	00000000000003bf              buf_LRU_remove_block
0000000000a72a8f l     F .text	000000000000030f              buf_LRU_add_block_to_end_low
0000000000a72d9e l     F .text	00000000000004bc              buf_LRU_add_block_low
0000000000a750a8 l     F .text	0000000000000189              buf_LRU_old_ratio_update_instance
0000000000a7541a l     F .text	0000000000000bbb              buf_LRU_validate_instance
0000000000000000 l    df *ABS*	0000000000000000              buf0rea.c
0000000000a763b9 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a763d0 l     F .text	0000000000000017              os_atomic_clear
0000000000a763e7 l     F .text	000000000000001b              ut_min
0000000000a76402 l     F .text	0000000000000035              ut_ulint_cmp
0000000000a76437 l     F .text	000000000000001e              mutex_test_and_set
0000000000a76455 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a76474 l     F .text	000000000000004e              mutex_get_waiters
0000000000a764c2 l     F .text	000000000000007b              mutex_exit_func
0000000000a7653d l     F .text	00000000000000d1              mutex_enter_func
0000000000a7660e l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a7671c l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a76789 l     F .text	0000000000000022              rw_lock_reset_waiter_flag
0000000000a767ab l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000a767cd l     F .text	00000000000000e9              rw_lock_x_unlock_func
0000000000a768b6 l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
0000000000a7691d l     F .text	0000000000000057              ut_hash_ulint
0000000000a76974 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000a76a30 l     F .text	000000000000008c              hash_calc_hash
0000000000a76abc l     F .text	00000000000000dc              hash_get_mutex_no
0000000000a76b98 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000a76c64 l     F .text	000000000000009f              hash_get_mutex
0000000000a76d03 l     F .text	000000000000006e              buf_pool_from_bpage
0000000000a76d71 l     F .text	0000000000000074              buf_page_peek_if_young
0000000000a76de5 l     F .text	0000000000000046              buf_page_get_state
0000000000a76e2b l     F .text	000000000000006a              buf_page_in_file
0000000000a76e95 l     F .text	0000000000000066              buf_page_get_mutex
0000000000a76efb l     F .text	000000000000004a              buf_page_get_io_fix
0000000000a76f45 l     F .text	00000000000000ef              buf_page_set_io_fix
0000000000a77034 l     F .text	000000000000004f              buf_page_is_accessed
0000000000a77083 l     F .text	0000000000000027              buf_page_address_fold
0000000000a770aa l     F .text	0000000000000067              buf_pool_get
0000000000a77111 l     F .text	00000000000002b9              buf_page_hash_get_low
0000000000a773ca l     F .text	0000000000000074              buf_page_hash_get
0000000000a7743e l     F .text	0000000000000028              trx_sys_hdr_page
0000000000a77466 l     F .text	000000000000007b              ibuf_bitmap_page
0000000000a774e1 l     F .text	00000000000001f6              buf_read_page_handle_error
0000000000a776d7 l     F .text	0000000000000367              buf_read_page_low
0000000000000000 l    df *ABS*	0000000000000000              data0data.c
0000000000a78c4d l     F .text	000000000000001b              ut_min
0000000000a78c68 l     F .text	0000000000000080              ut_ull_create
0000000000a78ce8 l     F .text	0000000000000045              mach_read_from_1
0000000000a78d2d l     F .text	000000000000002c              mach_read_from_2
0000000000a78d59 l     F .text	0000000000000072              mach_read_from_3
0000000000a78dcb l     F .text	0000000000000087              mach_read_from_4
0000000000a78e52 l     F .text	0000000000000050              mach_get_compressed_size
0000000000a78ea2 l     F .text	00000000000000f2              mach_read_compressed
0000000000a78f94 l     F .text	000000000000003a              mach_read_from_8
0000000000a78fce l     F .text	000000000000006b              mach_read_from_7
0000000000a79039 l     F .text	000000000000006b              mach_read_from_6
0000000000a790a4 l     F .text	000000000000007b              mach_ull_read_compressed
0000000000a7911f l     F .text	0000000000000015              dtype_get_charset_coll
0000000000a79134 l     F .text	0000000000000045              dtype_get_mtype
0000000000a79179 l     F .text	0000000000000046              dtype_get_prtype
0000000000a791bf l     F .text	0000000000000244              dtype_get_fixed_size_low
0000000000a79403 l     F .text	0000000000000052              dtype_get_sql_null_size
0000000000a79455 l     F .text	0000000000000012              mem_block_get_len
0000000000a79467 l     F .text	0000000000000084              mem_block_set_free
0000000000a794eb l     F .text	0000000000000012              mem_block_get_free
0000000000a794fd l     F .text	0000000000000143              mem_heap_alloc
0000000000a79640 l     F .text	000000000000016b              mem_heap_create_func
0000000000a797ab l     F .text	00000000000000a3              mem_heap_free_func
0000000000a7984e l     F .text	0000000000000043              dfield_get_type
0000000000a79891 l     F .text	0000000000000090              dfield_get_data
0000000000a79921 l     F .text	0000000000000092              dfield_get_len
0000000000a799b3 l     F .text	000000000000004b              dfield_is_null
0000000000a799fe l     F .text	0000000000000049              dfield_is_ext
0000000000a79a47 l     F .text	000000000000004a              dfield_set_ext
0000000000a79a91 l     F .text	000000000000006a              dfield_set_data
0000000000a79afb l     F .text	0000000000000042              dtuple_get_info_bits
0000000000a79b3d l     F .text	0000000000000043              dtuple_get_n_fields
0000000000a79b80 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000a79c0f l     F .text	0000000000000139              dtuple_get_data_size
0000000000a79d48 l     F .text	0000000000000085              dict_index_is_clust
0000000000a79dcd l     F .text	000000000000004c              dict_table_is_comp
0000000000a79e19 l     F .text	0000000000000051              dict_table_get_format
0000000000a79e6a l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000a79ed8 l     F .text	0000000000000051              dict_table_zip_size
0000000000a79f29 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000a79fb0 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000a7a068 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000a7a13c l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000a7a20d l     F .text	0000000000000035              rec_get_converted_extra_size
0000000000a7a242 l     F .text	00000000000001d3              rec_get_converted_size
0000000000a7a415 l     F .text	0000000000000048              cmp_data_data
0000000000a7a45d l     F .text	00000000000000c9              cmp_dfield_dfield
0000000000a7a526 l     F .text	0000000000000126              page_zip_rec_needs_ext
0000000000a7a64c l     F .text	000000000000001f              page_get_free_space_of_empty
0000000000a7a90e l     F .text	0000000000000088              dfield_check_typed_no_assert
0000000000a7b49b l     F .text	00000000000000d5              dfield_print_raw
0000000000000000 l    df *ABS*	0000000000000000              data0type.c
0000000000a7bd6b l     F .text	0000000000000015              dtype_get_charset_coll
0000000000a7bd80 l     F .text	0000000000000069              dtype_get_mbminlen
0000000000a7bde9 l     F .text	000000000000005f              dtype_get_mbmaxlen
0000000000000000 l    df *ABS*	0000000000000000              dict0boot.c
0000000000a7c68d l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a7c6a4 l     F .text	0000000000000017              os_atomic_clear
0000000000a7c6bb l     F .text	0000000000000097              ut_uint64_align_up
0000000000a7c752 l     F .text	0000000000000087              mach_read_from_4
0000000000a7c7d9 l     F .text	000000000000003a              mach_read_from_8
0000000000a7c813 l     F .text	000000000000001e              mutex_test_and_set
0000000000a7c831 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a7c850 l     F .text	000000000000004e              mutex_get_waiters
0000000000a7c89e l     F .text	000000000000007b              mutex_exit_func
0000000000a7c919 l     F .text	00000000000000d1              mutex_enter_func
0000000000a7c9ea l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a7caf8 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a7cb65 l     F .text	0000000000000012              mem_block_get_len
0000000000a7cb77 l     F .text	0000000000000084              mem_block_set_free
0000000000a7cbfb l     F .text	0000000000000012              mem_block_get_free
0000000000a7cc0d l     F .text	0000000000000012              mem_block_get_start
0000000000a7cc1f l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000a7cd5e l     F .text	000000000000004d              mem_heap_empty
0000000000a7cdab l     F .text	000000000000016b              mem_heap_create_func
0000000000a7cf16 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a7cfb9 l     F .text	0000000000000074              dyn_array_create
0000000000a7d02d l     F .text	0000000000000096              mtr_start
0000000000a7d0c3 l     F .text	0000000000000046              buf_page_get_state
0000000000a7d109 l     F .text	000000000000001a              buf_block_get_state
0000000000a7d123 l     F .text	00000000000000ea              buf_block_get_frame
0000000000a7d20d l     F .text	000000000000007b              buf_block_get_page_no
0000000000a7d57b l     F .text	000000000000032b              dict_hdr_create
0000000000a7e494 l     F .text	0000000000000007              dict_insert_initial_data
0000000000000000 l    df *ABS*	0000000000000000              dict0crea.c
0000000000a7e503 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a7e51a l     F .text	0000000000000017              os_atomic_clear
0000000000a7e531 l     F .text	00000000000000b4              ut_align_down
0000000000a7e5e5 l     F .text	00000000000000b2              ut_align_offset
0000000000a7e697 l     F .text	000000000000001a              ut_strlen
0000000000a7e6b1 l     F .text	0000000000000025              ut_strcmp
0000000000a7e6d6 l     F .text	000000000000002c              mach_read_from_2
0000000000a7e702 l     F .text	0000000000000082              mach_write_to_4
0000000000a7e784 l     F .text	0000000000000087              mach_read_from_4
0000000000a7e80b l     F .text	0000000000000071              mach_write_to_8
0000000000a7e87c l     F .text	000000000000003a              mach_read_from_8
0000000000a7e8b6 l     F .text	0000000000000057              ut_hash_ulint
0000000000a7e90d l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000a7e947 l     F .text	0000000000000075              ut_fold_string
0000000000a7e9bc l     F .text	000000000000001e              mutex_test_and_set
0000000000a7e9da l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a7e9f9 l     F .text	000000000000004e              mutex_get_waiters
0000000000a7ea47 l     F .text	000000000000007b              mutex_exit_func
0000000000a7eac2 l     F .text	00000000000000d1              mutex_enter_func
0000000000a7eb93 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a7eca1 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a7ed0e l     F .text	0000000000000012              mem_block_get_len
0000000000a7ed20 l     F .text	0000000000000084              mem_block_set_free
0000000000a7eda4 l     F .text	0000000000000012              mem_block_get_free
0000000000a7edb6 l     F .text	000000000000009f              mem_heap_zalloc
0000000000a7ee55 l     F .text	0000000000000143              mem_heap_alloc
0000000000a7ef98 l     F .text	000000000000016b              mem_heap_create_func
0000000000a7f103 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a7f1a6 l     F .text	000000000000003a              mem_free_func
0000000000a7f1e0 l     F .text	0000000000000043              dfield_get_type
0000000000a7f223 l     F .text	000000000000005b              dfield_set_len
0000000000a7f27e l     F .text	000000000000006a              dfield_set_data
0000000000a7f2e8 l     F .text	0000000000000025              dfield_set_null
0000000000a7f30d l     F .text	000000000000002d              dfield_copy
0000000000a7f33a l     F .text	000000000000008f              dtuple_get_nth_field
0000000000a7f3c9 l     F .text	000000000000012d              dtuple_create_from_mem
0000000000a7f4f6 l     F .text	000000000000008e              dtuple_create
0000000000a7f584 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000a7f640 l     F .text	000000000000008c              hash_calc_hash
0000000000a7f6cc l     F .text	00000000000000dc              hash_get_mutex_no
0000000000a7f7a8 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000a7f874 l     F .text	000000000000009f              hash_get_mutex
0000000000a7f913 l     F .text	0000000000000085              dict_index_is_clust
0000000000a7f998 l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000a7fa69 l     F .text	000000000000004c              dict_table_is_comp
0000000000a7fab5 l     F .text	0000000000000051              dict_table_get_format
0000000000a7fb06 l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000a7fb74 l     F .text	0000000000000051              dict_table_zip_size
0000000000a7fbc5 l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000a7fc96 l     F .text	00000000000001b0              dict_table_check_if_in_cache_low
0000000000a7fe46 l     F .text	00000000000001c6              dict_table_get_low
0000000000a8000c l     F .text	000000000000002c              dict_foreign_rbt_cmp
0000000000a80038 l     F .text	00000000000000e1              dict_table_init_foreign_rbt
0000000000a80119 l     F .text	00000000000000e1              dict_table_init_referenced_rbt
0000000000a801fa l     F .text	0000000000000074              dyn_array_create
0000000000a8026e l     F .text	0000000000000096              mtr_start
0000000000a80304 l     F .text	0000000000000161              rec_get_next_offs
0000000000a80465 l     F .text	000000000000001f              page_align
0000000000a80484 l     F .text	000000000000001f              page_offset
0000000000a804a3 l     F .text	0000000000000083              page_header_get_field
0000000000a80526 l     F .text	0000000000000024              page_is_comp
0000000000a8054a l     F .text	0000000000000022              page_rec_is_comp
0000000000a8056c l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000a80605 l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000a8069e l     F .text	0000000000000022              page_rec_is_supremum
0000000000a806c0 l     F .text	0000000000000022              page_rec_is_infimum
0000000000a806e2 l     F .text	0000000000000056              page_get_page_no
0000000000a80738 l     F .text	0000000000000056              page_get_space_id
0000000000a8078e l     F .text	00000000000000d9              page_rec_check
0000000000a80867 l     F .text	0000000000000149              page_rec_get_next_low
0000000000a809b0 l     F .text	000000000000002c              page_rec_get_next
0000000000a809dc l     F .text	00000000000000af              page_rec_write_field
0000000000a80a8b l     F .text	000000000000008e              page_cur_get_rec
0000000000a80b19 l     F .text	0000000000000096              page_cur_is_before_first
0000000000a80baf l     F .text	0000000000000096              page_cur_is_after_last
0000000000a80c45 l     F .text	000000000000005f              page_cur_move_to_next
0000000000a80ca4 l     F .text	000000000000005f              btr_block_get_func
0000000000a80d03 l     F .text	00000000000000c8              btr_page_get_next
0000000000a80dcb l     F .text	0000000000000012              btr_cur_get_page_cur
0000000000a80ddd l     F .text	000000000000001e              btr_cur_get_rec
0000000000a80dfb l     F .text	0000000000000026              btr_cur_get_page
0000000000a80e21 l     F .text	0000000000000016              btr_pcur_get_btr_cur
0000000000a80e37 l     F .text	0000000000000022              btr_pcur_get_page_cur
0000000000a80e59 l     F .text	0000000000000057              btr_pcur_get_page
0000000000a80eb0 l     F .text	000000000000008e              btr_pcur_get_rec
0000000000a80f3e l     F .text	000000000000008e              btr_pcur_is_after_last_on_page
0000000000a80fcc l     F .text	000000000000008e              btr_pcur_is_before_first_on_page
0000000000a8105a l     F .text	00000000000000a8              btr_pcur_is_on_user_rec
0000000000a81102 l     F .text	00000000000000c4              btr_pcur_is_after_last_in_tree
0000000000a811c6 l     F .text	000000000000009e              btr_pcur_move_to_next_on_page
0000000000a81264 l     F .text	00000000000000f4              btr_pcur_move_to_next_user_rec
0000000000a81358 l     F .text	0000000000000038              btr_pcur_init
0000000000a81390 l     F .text	00000000000000b0              btr_pcur_open_func
0000000000a81440 l     F .text	00000000000000be              btr_pcur_close
0000000000a814fe l     F .text	0000000000000047              thr_get_trx
0000000000a81545 l     F .text	0000000000000042              que_node_get_type
0000000000a81587 l     F .text	0000000000000012              que_node_get_parent
0000000000a81599 l     F .text	000000000000002a              row_is_mysql_tmp_table_name
0000000000a815c3 l     F .text	0000000000000459              dict_create_sys_tables_tuple
0000000000a81a1c l     F .text	0000000000000329              dict_create_sys_columns_tuple
0000000000a81d45 l     F .text	0000000000000348              dict_build_table_def_step
0000000000a8208d l     F .text	0000000000000051              dict_build_col_def_step
0000000000a820de l     F .text	0000000000000362              dict_create_sys_indexes_tuple
0000000000a82440 l     F .text	0000000000000245              dict_create_sys_fields_tuple
0000000000a82685 l     F .text	0000000000000119              dict_create_search_tuple
0000000000a8279e l     F .text	000000000000018d              dict_build_index_def_step
0000000000a8292b l     F .text	000000000000005c              dict_build_field_def_step
0000000000a82987 l     F .text	0000000000000225              dict_create_index_tree_step
0000000000a83da0 l     F .text	0000000000000201              dict_foreign_eval_sql
0000000000a83fa1 l     F .text	00000000000000c9              dict_create_add_foreign_field_to_dictionary
0000000000a8406a l     F .text	0000000000000569              dict_create_add_foreign_to_dictionary
0000000000000000 l    df *ABS*	0000000000000000              dict0dict.c
0000000000a84736 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a8474d l     F .text	0000000000000017              os_atomic_clear
0000000000a84764 l     F .text	000000000000001b              ut_min
0000000000a8477f l     F .text	00000000000000b4              ut_align_down
0000000000a84833 l     F .text	000000000000002d              ut_memcpy
0000000000a84860 l     F .text	000000000000002d              ut_memcmp
0000000000a8488d l     F .text	000000000000001a              ut_strlen
0000000000a848a7 l     F .text	0000000000000025              ut_strcmp
0000000000a848cc l     F .text	000000000000002c              mach_read_from_2
0000000000a848f8 l     F .text	0000000000000082              mach_write_to_4
0000000000a8497a l     F .text	0000000000000071              mach_write_to_8
0000000000a849eb l     F .text	0000000000000015              dtype_get_charset_coll
0000000000a84a00 l     F .text	000000000000010a              dtype_get_mblen
0000000000a84b0a l     F .text	00000000000000ce              dtype_set_mbminmaxlen
0000000000a84bd8 l     F .text	00000000000000a5              dtype_set_mblen
0000000000a84c7d l     F .text	00000000000000b8              dtype_set
0000000000a84d35 l     F .text	0000000000000244              dtype_get_fixed_size_low
0000000000a84f79 l     F .text	0000000000000067              dtype_get_max_size_low
0000000000a84fe0 l     F .text	0000000000000057              ut_hash_ulint
0000000000a85037 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000a85071 l     F .text	0000000000000027              ut_fold_ull
0000000000a85098 l     F .text	0000000000000075              ut_fold_string
0000000000a8510d l     F .text	000000000000001e              mutex_test_and_set
0000000000a8512b l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a8514a l     F .text	000000000000004e              mutex_get_waiters
0000000000a85198 l     F .text	000000000000007b              mutex_exit_func
0000000000a85213 l     F .text	00000000000000d1              mutex_enter_func
0000000000a852e4 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a853f2 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a8545f l     F .text	000000000000007c              pfs_mutex_create_func
0000000000a854db l     F .text	0000000000000079              pfs_mutex_free_func
0000000000a85554 l     F .text	0000000000000012              mem_block_get_len
0000000000a85566 l     F .text	0000000000000084              mem_block_set_free
0000000000a855ea l     F .text	0000000000000012              mem_block_get_free
0000000000a855fc l     F .text	000000000000009f              mem_heap_zalloc
0000000000a8569b l     F .text	0000000000000143              mem_heap_alloc
0000000000a857de l     F .text	000000000000016b              mem_heap_create_func
0000000000a85949 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a859ec l     F .text	00000000000000fd              mem_alloc_func
0000000000a85ae9 l     F .text	000000000000003a              mem_free_func
0000000000a85b23 l     F .text	0000000000000072              mem_heap_get_size
0000000000a85b95 l     F .text	0000000000000055              mem_strdup
0000000000a85bea l     F .text	0000000000000056              mem_heap_strdupl
0000000000a85c40 l     F .text	0000000000000022              rw_lock_reset_waiter_flag
0000000000a85c62 l     F .text	0000000000000058              rw_lock_lock_word_decr
0000000000a85cba l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000a85cdc l     F .text	0000000000000072              rw_lock_s_lock_low
0000000000a85d4e l     F .text	0000000000000053              rw_lock_s_lock_func
0000000000a85da1 l     F .text	00000000000000b5              rw_lock_s_unlock_func
0000000000a85e56 l     F .text	00000000000000e9              rw_lock_x_unlock_func
0000000000a85f3f l     F .text	0000000000000079              pfs_rw_lock_create_func
0000000000a85fb8 l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000a860be l     F .text	0000000000000070              pfs_rw_lock_free_func
0000000000a8612e l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
0000000000a86234 l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
0000000000a8629b l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
0000000000a86302 l     F .text	0000000000000043              dfield_get_type
0000000000a86345 l     F .text	000000000000005b              dfield_set_len
0000000000a863a0 l     F .text	000000000000006a              dfield_set_data
0000000000a8640a l     F .text	0000000000000025              dfield_set_null
0000000000a8642f l     F .text	0000000000000042              dtuple_get_info_bits
0000000000a86471 l     F .text	000000000000004b              dtuple_set_info_bits
0000000000a864bc l     F .text	0000000000000043              dtuple_get_n_fields_cmp
0000000000a864ff l     F .text	0000000000000080              dtuple_set_n_fields_cmp
0000000000a8657f l     F .text	0000000000000043              dtuple_get_n_fields
0000000000a865c2 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000a86651 l     F .text	000000000000012d              dtuple_create_from_mem
0000000000a8677e l     F .text	000000000000008e              dtuple_create
0000000000a8680c l     F .text	0000000000000066              dtuple_set_types_binary
0000000000a86872 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000a8692e l     F .text	0000000000000079              hash_get_n_cells
0000000000a869a7 l     F .text	000000000000008c              hash_calc_hash
0000000000a86a33 l     F .text	00000000000000dc              hash_get_mutex_no
0000000000a86b0f l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000a86bdb l     F .text	000000000000009f              hash_get_mutex
0000000000a86c7a l     F .text	00000000000000ac              dict_col_copy_type
0000000000a86d26 l     F .text	000000000000002e              dict_col_get_max_size
0000000000a86d54 l     F .text	0000000000000052              dict_col_get_fixed_size
0000000000a86da6 l     F .text	000000000000004e              dict_col_get_no
0000000000a86df4 l     F .text	0000000000000114              dict_col_get_clust_pos
0000000000a87000 l     F .text	0000000000000085              dict_index_is_clust
0000000000a86f08 l     F .text	000000000000007c              dict_table_get_first_index
0000000000a86f84 l     F .text	000000000000007c              dict_table_get_next_index
0000000000a87085 l     F .text	0000000000000085              dict_index_is_unique
0000000000a8710a l     F .text	0000000000000085              dict_index_is_ibuf
0000000000a8718f l     F .text	0000000000000087              dict_table_get_n_cols
0000000000a87216 l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000a872e7 l     F .text	000000000000014a              dict_table_get_sys_col
0000000000a87431 l     F .text	000000000000004c              dict_table_is_comp
0000000000a8747d l     F .text	0000000000000051              dict_table_get_format
0000000000a874ce l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000a8753c l     F .text	0000000000000051              dict_table_zip_size
0000000000a8758d l     F .text	0000000000000087              dict_index_get_n_fields
0000000000a87614 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000a876cc l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000a877a0 l     F .text	000000000000001c              dict_index_get_n_ordering_defined_by_user
0000000000a877bc l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000a8788d l     F .text	0000000000000042              dict_field_get_col
0000000000a878cf l     F .text	000000000000002d              dict_index_get_nth_col
0000000000a878fc l     F .text	000000000000007c              dict_index_get_lock
0000000000a87978 l     F .text	00000000000001a1              dict_table_check_if_in_cache_low
0000000000a87b19 l     F .text	00000000000001c3              dict_table_get_low
0000000000a87cdc l     F .text	00000000000001c2              dict_table_get_on_id_low
0000000000a87e9e l     F .text	00000000000000e2              dict_index_is_corrupted
0000000000a87f80 l     F .text	000000000000002c              dict_foreign_rbt_cmp
0000000000a87fac l     F .text	00000000000000de              dict_table_init_foreign_rbt
0000000000a8808a l     F .text	00000000000000de              dict_table_init_referenced_rbt
0000000000a88168 l     F .text	0000000000000074              dyn_array_create
0000000000a881dc l     F .text	00000000000001a0              dyn_array_push
0000000000a8837c l     F .text	0000000000000096              mtr_start
0000000000a88412 l     F .text	0000000000000171              mtr_memo_push
0000000000a88583 l     F .text	00000000000000a6              mtr_s_lock_func
0000000000a88629 l     F .text	0000000000000010              buf_pool_get_curr_size
0000000000a88639 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000a886a6 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000a88761 l     F .text	000000000000001f              page_align
0000000000a88780 l     F .text	000000000000001f              page_get_free_space_of_empty
0000000000a8879f l     F .text	000000000000008e              page_cur_get_rec
0000000000a8882d l     F .text	000000000000001e              btr_cur_get_rec
00000000010f60e0 l     O .data	0000000000000007              dict_ibfk
00000000013915c0 l     O .bss	0000000000002000              dict_table_stats_latches
0000000000a8e044 l     F .text	00000000000003cc              dict_foreign_remove_from_cache
00000000010f60f0 l     O .data	0000000000000018              reserved_names.21296
0000000000a8bd4d l     F .text	0000000000000333              dict_index_too_big_for_undo
0000000000a8c080 l     F .text	0000000000000330              dict_index_too_big_for_tree
0000000000a8ce0d l     F .text	0000000000000239              dict_index_find_cols
0000000000a8d36f l     F .text	0000000000000657              dict_index_build_internal_clust
0000000000a8d9c6 l     F .text	000000000000049f              dict_index_build_internal_non_clust
0000000000a8d1c0 l     F .text	0000000000000075              dict_index_copy
0000000000a8dfe0 l     F .text	0000000000000064              dict_foreign_free
0000000000a8e410 l     F .text	0000000000000276              dict_foreign_find
0000000000a8e686 l     F .text	00000000000001bb              dict_foreign_find_index
0000000000a8e9ef l     F .text	0000000000000047              dict_foreign_error_report_low
0000000000a8ea36 l     F .text	0000000000000119              dict_foreign_error_report
0000000000a8f235 l     F .text	0000000000000127              dict_scan_to
0000000000a8f35c l     F .text	00000000000000b5              dict_accept
0000000000a8f411 l     F .text	0000000000000376              dict_scan_id
0000000000a8f787 l     F .text	0000000000000126              dict_scan_col
0000000000a8f8ad l     F .text	00000000000002d1              dict_scan_table_name
0000000000a8fb7e l     F .text	0000000000000088              dict_skip_word
0000000000a8fc06 l     F .text	00000000000002f6              dict_strip_comments
0000000000a8fefc l     F .text	00000000000001af              dict_table_get_highest_foreign_id
0000000000a900ab l     F .text	0000000000000079              dict_foreign_report_syntax_err
0000000000a90124 l     F .text	000000000000193d              dict_create_foreign_constraints_low
0000000000a92c40 l     F .text	0000000000000170              dict_foreign_print_low
0000000000a93083 l     F .text	00000000000000ce              dict_col_print_low
0000000000a93151 l     F .text	000000000000019f              dict_index_print_low
0000000000a932f0 l     F .text	00000000000000ad              dict_field_print_low
0000000000a93ca2 l     F .text	0000000000000075              dict_ind_free
0000000000a94309 l     F .text	00000000000000bb              dict_find_table_by_space
0000000000000000 l    df *ABS*	0000000000000000              dict0load.c
0000000000a94aa2 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000a94ab9 l     F .text	0000000000000017              os_atomic_clear
0000000000a94ad0 l     F .text	00000000000000b4              ut_align_down
0000000000a94b84 l     F .text	00000000000000b2              ut_align_offset
0000000000a94c36 l     F .text	0000000000000045              mach_read_from_1
0000000000a94c7b l     F .text	000000000000002c              mach_read_from_2
0000000000a94ca7 l     F .text	0000000000000082              mach_write_to_4
0000000000a94d29 l     F .text	0000000000000087              mach_read_from_4
0000000000a94db0 l     F .text	0000000000000071              mach_write_to_8
0000000000a94e21 l     F .text	000000000000003a              mach_read_from_8
0000000000a94e5b l     F .text	000000000000002d              ut_memcmp
0000000000a94e88 l     F .text	000000000000001a              ut_strlen
0000000000a94ea2 l     F .text	0000000000000057              ut_hash_ulint
0000000000a94ef9 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000a94f33 l     F .text	0000000000000075              ut_fold_string
0000000000a94fa8 l     F .text	000000000000001e              mutex_test_and_set
0000000000a94fc6 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000a94fe5 l     F .text	000000000000004e              mutex_get_waiters
0000000000a95033 l     F .text	000000000000007b              mutex_exit_func
0000000000a950ae l     F .text	00000000000000d1              mutex_enter_func
0000000000a9517f l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000a9528d l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000a952fa l     F .text	0000000000000012              mem_block_get_len
0000000000a9530c l     F .text	0000000000000084              mem_block_set_free
0000000000a95390 l     F .text	0000000000000012              mem_block_get_free
0000000000a953a2 l     F .text	0000000000000012              mem_block_get_start
0000000000a953b4 l     F .text	0000000000000143              mem_heap_alloc
0000000000a954f7 l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000a95636 l     F .text	000000000000004d              mem_heap_empty
0000000000a95683 l     F .text	000000000000016b              mem_heap_create_func
0000000000a957ee l     F .text	00000000000000a3              mem_heap_free_func
0000000000a95891 l     F .text	00000000000000fd              mem_alloc_func
0000000000a9598e l     F .text	000000000000003a              mem_free_func
0000000000a959c8 l     F .text	000000000000005c              mem_strdupl
0000000000a95a24 l     F .text	0000000000000056              mem_heap_strdupl
0000000000a95a7a l     F .text	0000000000000015              dtype_get_charset_coll
0000000000a95a8f l     F .text	0000000000000043              dfield_get_type
0000000000a95ad2 l     F .text	0000000000000090              dfield_get_data
0000000000a95b62 l     F .text	0000000000000092              dfield_get_len
0000000000a95bf4 l     F .text	000000000000005b              dfield_set_len
0000000000a95c4f l     F .text	000000000000006a              dfield_set_data
0000000000a95cb9 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000a95d48 l     F .text	000000000000012d              dtuple_create_from_mem
0000000000a95e75 l     F .text	000000000000008e              dtuple_create
0000000000a95f03 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000a95fbf l     F .text	000000000000008c              hash_calc_hash
0000000000a9604b l     F .text	00000000000000dc              hash_get_mutex_no
0000000000a96127 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000a961f3 l     F .text	000000000000009f              hash_get_mutex
0000000000a96292 l     F .text	0000000000000121              dict_mem_fill_index_struct
0000000000a963b3 l     F .text	000000000000004e              dict_col_get_no
0000000000a96401 l     F .text	000000000000007c              dict_table_get_first_index
0000000000a9647d l     F .text	000000000000007c              dict_table_get_next_index
0000000000a964f9 l     F .text	0000000000000085              dict_index_is_clust
0000000000a9657e l     F .text	000000000000004c              dict_table_is_comp
0000000000a965ca l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000a9669b l     F .text	0000000000000042              dict_field_get_col
0000000000a966dd l     F .text	00000000000001b0              dict_table_check_if_in_cache_low
0000000000a9688d l     F .text	00000000000001c3              dict_table_get_low
0000000000a96a50 l     F .text	00000000000000e2              dict_index_is_corrupted
0000000000a96b32 l     F .text	0000000000000074              dyn_array_create
0000000000a96ba6 l     F .text	0000000000000096              mtr_start
0000000000a96c3c l     F .text	000000000000006d              rec_get_bit_field_1
0000000000a96ca9 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000a96d16 l     F .text	0000000000000161              rec_get_next_offs
0000000000a96e77 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000a96f32 l     F .text	0000000000000053              rec_get_deleted_flag
0000000000a96f85 l     F .text	0000000000000048              cmp_data_data
0000000000a96fcd l     F .text	000000000000001f              page_align
0000000000a96fec l     F .text	000000000000001f              page_offset
0000000000a9700b l     F .text	0000000000000083              page_header_get_field
0000000000a9708e l     F .text	0000000000000024              page_is_comp
0000000000a970b2 l     F .text	0000000000000022              page_rec_is_comp
0000000000a970d4 l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000a9716d l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000a97206 l     F .text	0000000000000022              page_rec_is_supremum
0000000000a97228 l     F .text	0000000000000022              page_rec_is_infimum
0000000000a9724a l     F .text	0000000000000056              page_get_page_no
0000000000a972a0 l     F .text	0000000000000056              page_get_space_id
0000000000a972f6 l     F .text	00000000000000d9              page_rec_check
0000000000a973cf l     F .text	0000000000000149              page_rec_get_next_low
0000000000a97518 l     F .text	000000000000002c              page_rec_get_next
0000000000a97544 l     F .text	000000000000008e              page_cur_get_rec
0000000000a975d2 l     F .text	0000000000000096              page_cur_is_before_first
0000000000a97668 l     F .text	0000000000000096              page_cur_is_after_last
0000000000a976fe l     F .text	000000000000005f              page_cur_move_to_next
0000000000a9775d l     F .text	00000000000000c8              btr_page_get_next
0000000000a97825 l     F .text	0000000000000012              btr_cur_get_page_cur
0000000000a97837 l     F .text	000000000000001e              btr_cur_get_rec
0000000000a97855 l     F .text	0000000000000026              btr_cur_get_page
0000000000a9787b l     F .text	0000000000000016              btr_pcur_get_btr_cur
0000000000a97891 l     F .text	0000000000000022              btr_pcur_get_page_cur
0000000000a978b3 l     F .text	0000000000000057              btr_pcur_get_page
0000000000a9790a l     F .text	000000000000008e              btr_pcur_get_rec
0000000000a97998 l     F .text	000000000000008e              btr_pcur_is_after_last_on_page
0000000000a97a26 l     F .text	000000000000008e              btr_pcur_is_before_first_on_page
0000000000a97ab4 l     F .text	00000000000000a8              btr_pcur_is_on_user_rec
0000000000a97b5c l     F .text	00000000000000c4              btr_pcur_is_after_last_in_tree
0000000000a97c20 l     F .text	000000000000009e              btr_pcur_move_to_next_on_page
0000000000a97cbe l     F .text	00000000000000f4              btr_pcur_move_to_next_user_rec
0000000000a97db2 l     F .text	0000000000000038              btr_pcur_init
0000000000a97dea l     F .text	00000000000000d3              btr_pcur_open_at_index_side
0000000000a97ebd l     F .text	00000000000000be              btr_pcur_close
00000000010f6120 l     O .data	0000000000000030              SYSTEM_TABLE_NAME
0000000000a97f7b l     F .text	000000000000006e              name_of_col_is
0000000000a985c7 l     F .text	0000000000000097              dict_getnext_system_low
0000000000a98a3b l     F .text	0000000000000151              dict_sys_tables_get_flags
0000000000a995ad l     F .text	00000000000003be              dict_load_columns
00000000010f6150 l     O .data	0000000000000008              dict_load_field_del
00000000010f6158 l     O .data	0000000000000008              dict_load_field_too_big
0000000000a99e3f l     F .text	00000000000003e5              dict_load_fields
00000000010f6160 l     O .data	0000000000000008              dict_load_index_del
00000000010f6168 l     O .data	0000000000000008              dict_load_index_id_err
0000000000a9a6dd l     F .text	00000000000008eb              dict_load_indexes
0000000000a9c360 l     F .text	0000000000000558              dict_load_foreign_cols
0000000000a9c8b8 l     F .text	00000000000006df              dict_load_foreign
0000000000000000 l    df *ABS*	0000000000000000              dict0mem.c
0000000000a9d655 l     F .text	0000000000000015              dtype_get_charset_coll
0000000000a9d66a l     F .text	000000000000010a              dtype_get_mblen
0000000000a9d774 l     F .text	000000000000007c              pfs_mutex_create_func
0000000000a9d7f0 l     F .text	0000000000000079              pfs_mutex_free_func
0000000000a9d869 l     F .text	0000000000000012              mem_block_get_len
0000000000a9d87b l     F .text	0000000000000084              mem_block_set_free
0000000000a9d8ff l     F .text	0000000000000012              mem_block_get_free
0000000000a9d911 l     F .text	000000000000009f              mem_heap_zalloc
0000000000a9d9b0 l     F .text	0000000000000143              mem_heap_alloc
0000000000a9daf3 l     F .text	000000000000016b              mem_heap_create_func
0000000000a9dc5e l     F .text	00000000000000a3              mem_heap_free_func
0000000000a9dd01 l     F .text	0000000000000121              dict_mem_fill_index_struct
0000000000a9de22 l     F .text	00000000000000ce              dict_col_set_mbminmaxlen
0000000000a9def0 l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000a9dfc1 l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000a9e419 l     F .text	0000000000000124              dict_add_col_name
0000000000000000 l    df *ABS*	0000000000000000              dyn0dyn.c
0000000000a9ebec l     F .text	0000000000000012              mem_block_get_len
0000000000a9ebfe l     F .text	0000000000000084              mem_block_set_free
0000000000a9ec82 l     F .text	0000000000000012              mem_block_get_free
0000000000a9ec94 l     F .text	0000000000000143              mem_heap_alloc
0000000000a9edd7 l     F .text	000000000000016b              mem_heap_create_func
0000000000000000 l    df *ABS*	0000000000000000              eval0eval.c
0000000000a9f282 l     F .text	000000000000002d              ut_memcpy
0000000000a9f2af l     F .text	000000000000002d              ut_memcmp
0000000000a9f2dc l     F .text	0000000000000080              mach_write_to_1
0000000000a9f35c l     F .text	0000000000000045              mach_read_from_1
0000000000a9f3a1 l     F .text	0000000000000082              mach_write_to_4
0000000000a9f423 l     F .text	0000000000000087              mach_read_from_4
0000000000a9f4aa l     F .text	0000000000000045              dtype_get_mtype
0000000000a9f4ef l     F .text	00000000000000af              ut_rnd_gen_next_ulint
0000000000a9f59e l     F .text	0000000000000012              mem_block_get_len
0000000000a9f5b0 l     F .text	0000000000000084              mem_block_set_free
0000000000a9f634 l     F .text	0000000000000012              mem_block_get_free
0000000000a9f646 l     F .text	0000000000000143              mem_heap_alloc
0000000000a9f789 l     F .text	000000000000016b              mem_heap_create_func
0000000000a9f8f4 l     F .text	00000000000000a3              mem_heap_free_func
0000000000a9f997 l     F .text	00000000000000fd              mem_alloc_func
0000000000a9fa94 l     F .text	000000000000003a              mem_free_func
0000000000a9face l     F .text	0000000000000043              dfield_get_type
0000000000a9fb11 l     F .text	0000000000000090              dfield_get_data
0000000000a9fba1 l     F .text	0000000000000092              dfield_get_len
0000000000a9fc33 l     F .text	000000000000005b              dfield_set_len
0000000000a9fc8e l     F .text	000000000000004b              dfield_is_null
0000000000a9fcd9 l     F .text	000000000000006a              dfield_set_data
0000000000a9fd43 l     F .text	000000000000008e              dfield_copy_data
0000000000a9fdd1 l     F .text	0000000000000042              que_node_get_type
0000000000a9fe13 l     F .text	0000000000000043              que_node_get_val
0000000000a9fe56 l     F .text	0000000000000043              que_node_get_val_buf_size
0000000000a9fe99 l     F .text	000000000000004c              que_node_set_val_buf_size
0000000000a9fee5 l     F .text	000000000000004b              que_node_get_data_type
0000000000a9ff30 l     F .text	0000000000000012              que_node_get_next
0000000000a9ff42 l     F .text	0000000000000048              cmp_data_data
0000000000a9ff8a l     F .text	00000000000000c9              cmp_dfield_dfield
0000000000aa0053 l     F .text	0000000000000079              eval_node_ensure_val_buf
0000000000aa00cc l     F .text	0000000000000084              eval_sym
0000000000aa0150 l     F .text	000000000000003a              eval_exp
0000000000aa018a l     F .text	000000000000009a              eval_node_set_int_val
0000000000aa0224 l     F .text	000000000000006c              eval_node_get_int_val
0000000000aa0290 l     F .text	0000000000000067              eval_node_get_ibool_val
0000000000aa02f7 l     F .text	000000000000009a              eval_node_set_ibool_val
0000000000aa0391 l     F .text	000000000000006f              eval_node_copy_and_alloc_val
00000000010f6170 l     O .data	0000000000000008              eval_rnd
00000000013935c1 l     O .bss	0000000000000001              eval_dummy
0000000000aa0765 l     F .text	0000000000000118              eval_logical
0000000000aa087d l     F .text	0000000000000143              eval_arith
0000000000aa09c0 l     F .text	00000000000000d7              eval_aggregate
0000000000aa0a97 l     F .text	00000000000002cf              eval_predefined_2
0000000000aa0d66 l     F .text	0000000000000144              eval_notfound
0000000000aa0eaa l     F .text	00000000000000d6              eval_substr
0000000000aa0f80 l     F .text	000000000000014e              eval_replstr
0000000000aa10ce l     F .text	0000000000000165              eval_instr
0000000000aa1233 l     F .text	00000000000000f0              eval_binary_to_number
0000000000aa1323 l     F .text	00000000000000f2              eval_concat
0000000000aa1415 l     F .text	0000000000000106              eval_to_binary
0000000000aa151b l     F .text	000000000000021f              eval_predefined
0000000000000000 l    df *ABS*	0000000000000000              fil0fil.c
0000000000aa1968 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000aa197f l     F .text	0000000000000017              os_atomic_clear
0000000000aa1996 l     F .text	000000000000001b              ut_min
0000000000aa19b1 l     F .text	00000000000000bc              ut_align
0000000000aa1a6d l     F .text	00000000000000b4              ut_align_down
0000000000aa1b21 l     F .text	000000000000012e              pfs_os_file_create_simple_no_error_handling_func
0000000000aa1c4f l     F .text	0000000000000143              pfs_os_file_create_func
0000000000aa1d92 l     F .text	00000000000000e3              pfs_os_file_close_func
0000000000aa1e75 l     F .text	0000000000000168              pfs_os_aio_func
0000000000aa1fdd l     F .text	000000000000011b              pfs_os_file_read_func
0000000000aa20f8 l     F .text	0000000000000131              pfs_os_file_write_func
0000000000aa2229 l     F .text	00000000000000e3              pfs_os_file_flush_func
0000000000aa230c l     F .text	000000000000010e              pfs_os_file_rename_func
0000000000aa241a l     F .text	0000000000000080              mach_write_to_1
0000000000aa249a l     F .text	0000000000000096              mach_write_to_2
0000000000aa2530 l     F .text	000000000000002c              mach_read_from_2
0000000000aa255c l     F .text	00000000000000a8              mach_write_to_3
0000000000aa2604 l     F .text	0000000000000082              mach_write_to_4
0000000000aa2686 l     F .text	0000000000000087              mach_read_from_4
0000000000aa270d l     F .text	0000000000000116              mach_write_compressed
0000000000aa2823 l     F .text	0000000000000071              mach_write_to_8
0000000000aa2894 l     F .text	000000000000003a              mach_read_from_8
0000000000aa28ce l     F .text	000000000000001e              mutex_test_and_set
0000000000aa28ec l     F .text	000000000000001f              mutex_reset_lock_word
0000000000aa290b l     F .text	000000000000004e              mutex_get_waiters
0000000000aa2959 l     F .text	000000000000007b              mutex_exit_func
0000000000aa29d4 l     F .text	00000000000000d1              mutex_enter_func
0000000000aa2aa5 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000aa2bb3 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000aa2c20 l     F .text	000000000000007c              pfs_mutex_create_func
0000000000aa2c9c l     F .text	0000000000000022              rw_lock_reset_waiter_flag
0000000000aa2cbe l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000aa2ce0 l     F .text	00000000000000e9              rw_lock_x_unlock_func
0000000000aa2dc9 l     F .text	0000000000000079              pfs_rw_lock_create_func
0000000000aa2e42 l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000aa2f48 l     F .text	0000000000000070              pfs_rw_lock_free_func
0000000000aa2fb8 l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
0000000000aa301f l     F .text	0000000000000057              ut_hash_ulint
0000000000aa3076 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000aa30b0 l     F .text	0000000000000075              ut_fold_string
0000000000aa3125 l     F .text	0000000000000012              mem_block_get_len
0000000000aa3137 l     F .text	0000000000000084              mem_block_set_free
0000000000aa31bb l     F .text	0000000000000012              mem_block_get_free
0000000000aa31cd l     F .text	0000000000000143              mem_heap_alloc
0000000000aa3310 l     F .text	000000000000016b              mem_heap_create_func
0000000000aa347b l     F .text	00000000000000a3              mem_heap_free_func
0000000000aa351e l     F .text	00000000000000fd              mem_alloc_func
0000000000aa361b l     F .text	000000000000003a              mem_free_func
0000000000aa3655 l     F .text	0000000000000055              mem_strdup
0000000000aa36aa l     F .text	00000000000000bc              hash_get_nth_cell
0000000000aa3766 l     F .text	0000000000000079              hash_get_n_cells
0000000000aa37df l     F .text	000000000000008c              hash_calc_hash
0000000000aa386b l     F .text	00000000000000dc              hash_get_mutex_no
0000000000aa3947 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000aa3a13 l     F .text	000000000000009f              hash_get_mutex
0000000000aa3ab2 l     F .text	0000000000000074              dyn_array_create
0000000000aa3b26 l     F .text	0000000000000205              dyn_array_open
0000000000aa3d2b l     F .text	000000000000013b              dyn_array_close
0000000000aa3e66 l     F .text	0000000000000096              mtr_start
0000000000aa3efc l     F .text	00000000000000b4              mtr_get_log_mode
0000000000aa3fb0 l     F .text	000000000000005b              mlog_open
0000000000aa400b l     F .text	000000000000006c              mlog_close
0000000000aa4077 l     F .text	00000000000000af              mlog_write_initial_log_record_for_file_op
0000000000aa4126 l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000aa4194 l     F .text	00000000000000b3              page_zip_get_size
0000000000aa4247 l     F .text	00000000000000d9              page_zip_set_size
0000000000aa4320 l     F .text	0000000000000025              page_zip_des_init
0000000000aa4345 l     F .text	000000000000001f              page_align
0000000000aa4364 l     F .text	0000000000000056              page_get_page_no
0000000000aa43ba l     F .text	0000000000000056              page_get_space_id
0000000000aa4410 l     F .text	000000000000007b              ibuf_bitmap_page
00000000013935e0 l     O .bss	0000000000000008              fil_system
0000000000aa448b l     F .text	0000000000000035              fil_validate_skip
00000000010f6190 l     O .data	0000000000000004              fil_validate_count.16898
0000000000aa44c0 l     F .text	000000000000005a              fil_read
0000000000aa451a l     F .text	000000000000005a              fil_write
0000000000aa4574 l     F .text	000000000000015b              fil_space_get_by_id
0000000000aa46cf l     F .text	000000000000017a              fil_space_get_by_name
0000000000aa4a5c l     F .text	000000000000008a              fil_space_is_flushed
0000000000aa4e5d l     F .text	000000000000076a              fil_node_open_file
0000000000aa55c7 l     F .text	0000000000000366              fil_node_close_file
0000000000aa592d l     F .text	00000000000001fc              fil_try_to_close_file_in_LRU
0000000000aa5b29 l     F .text	0000000000000272              fil_mutex_enter_and_prepare_for_io
0000000000aa5d9b l     F .text	00000000000003b2              fil_node_free
0000000000aa6b12 l     F .text	000000000000071d              fil_space_free
0000000000aabf95 l     F .text	00000000000002d1              fil_node_prepare_for_io
0000000000aac266 l     F .text	00000000000003af              fil_node_complete_io
0000000000aa7a47 l     F .text	00000000000000de              fil_write_lsn_and_arch_no_to_file
0000000000aa7c43 l     F .text	00000000000000fa              fil_check_first_page
0000000000aa7fb4 l     F .text	000000000000017e              fil_create_directory_for_tablename
0000000000aa8132 l     F .text	0000000000000171              fil_op_write_log
0000000000aab84a l     F .text	00000000000000c6              fil_get_space_id_for_table
0000000000aa8cc4 l     F .text	0000000000000447              fil_rename_tablespace_in_mem
0000000000aa910b l     F .text	0000000000000125              fil_make_ibd_name
0000000000aaaa1c l     F .text	00000000000004b6              fil_load_single_table_tablespace
0000000000aaaed2 l     F .text	0000000000000087              fil_file_readdir_next_file
0000000000aac615 l     F .text	0000000000000061              fil_report_invalid_page_access
0000000000000000 l    df *ABS*	0000000000000000              fsp0fsp.c
0000000000aadf87 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000aadf9e l     F .text	0000000000000017              os_atomic_clear
0000000000aadfb5 l     F .text	00000000000000b4              ut_align_down
0000000000aae069 l     F .text	00000000000000b2              ut_align_offset
0000000000aae11b l     F .text	0000000000000051              ut_bit_get_nth
0000000000aae16c l     F .text	0000000000000079              ut_bit_set_nth
0000000000aae1e5 l     F .text	000000000000002c              mach_read_from_2
0000000000aae211 l     F .text	0000000000000082              mach_write_to_4
0000000000aae293 l     F .text	0000000000000087              mach_read_from_4
0000000000aae31a l     F .text	000000000000003a              mach_read_from_8
0000000000aae354 l     F .text	000000000000001e              mutex_test_and_set
0000000000aae372 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000aae391 l     F .text	000000000000004e              mutex_get_waiters
0000000000aae3df l     F .text	000000000000007b              mutex_exit_func
0000000000aae45a l     F .text	00000000000000d1              mutex_enter_func
0000000000aae52b l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000aae639 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000aae6a6 l     F .text	0000000000000049              dyn_block_get_used
0000000000aae6ef l     F .text	0000000000000074              dyn_array_create
0000000000aae763 l     F .text	00000000000001a0              dyn_array_push
0000000000aae903 l     F .text	000000000000015f              dyn_array_get_element
0000000000aaea62 l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000aaeb3b l     F .text	0000000000000051              rw_lock_get_x_lock_count
0000000000aaeb8c l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000aaec92 l     F .text	0000000000000096              mtr_start
0000000000aaed28 l     F .text	0000000000000171              mtr_memo_push
0000000000aaee99 l     F .text	0000000000000131              mtr_memo_contains
0000000000aaefca l     F .text	00000000000000a6              mtr_x_lock_func
0000000000aaf070 l     F .text	0000000000000046              buf_page_get_state
0000000000aaf0b6 l     F .text	000000000000001a              buf_block_get_state
0000000000aaf0d0 l     F .text	00000000000000ea              buf_block_get_frame
0000000000aaf1ba l     F .text	000000000000007a              buf_block_get_space
0000000000aaf234 l     F .text	000000000000007b              buf_block_get_page_no
0000000000aaf2af l     F .text	000000000000007e              buf_block_buf_fix_inc_func
0000000000aaf32d l     F .text	00000000000000ec              fut_get_ptr
0000000000aaf419 l     F .text	0000000000000164              flst_write_addr
0000000000aaf57d l     F .text	0000000000000114              flst_read_addr
0000000000aaf691 l     F .text	00000000000000bd              flst_init
0000000000aaf74e l     F .text	0000000000000027              flst_get_len
0000000000aaf775 l     F .text	0000000000000029              flst_get_first
0000000000aaf79e l     F .text	0000000000000029              flst_get_next_addr
0000000000aaf7c7 l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000aaf835 l     F .text	00000000000000b3              page_zip_get_size
0000000000aaf8e8 l     F .text	000000000000001f              page_align
0000000000aaf907 l     F .text	000000000000001f              page_offset
0000000000aaf926 l     F .text	0000000000000056              page_get_page_no
0000000000aaf97c l     F .text	0000000000000056              page_get_space_id
00000000013935e8 l     O .bss	0000000000000008              fsp_tbs_full_error_printed
0000000000aaf9f0 l     F .text	00000000000001d0              fsp_get_space_header
0000000000aafbc0 l     F .text	0000000000000127              xdes_get_bit
0000000000aafce7 l     F .text	0000000000000161              xdes_set_bit
0000000000aafe48 l     F .text	0000000000000176              xdes_find_bit
0000000000aaffbe l     F .text	00000000000000d7              xdes_get_n_used
0000000000ab0095 l     F .text	0000000000000036              xdes_is_free
0000000000ab00cb l     F .text	0000000000000037              xdes_is_full
0000000000ab0102 l     F .text	0000000000000111              xdes_set_state
0000000000ab0213 l     F .text	00000000000000ea              xdes_get_state
0000000000ab02fd l     F .text	00000000000000e0              xdes_init
0000000000ab03dd l     F .text	00000000000000b2              xdes_calc_descriptor_page
0000000000ab048f l     F .text	000000000000006f              xdes_calc_descriptor_index
0000000000ab04fe l     F .text	00000000000001fd              xdes_get_descriptor_with_space_hdr
0000000000ab06fb l     F .text	0000000000000088              xdes_get_descriptor
0000000000ab0783 l     F .text	00000000000000d2              xdes_lst_get_descriptor
0000000000ab0855 l     F .text	0000000000000085              xdes_get_offset
0000000000ab08da l     F .text	0000000000000161              fsp_init_file_page_low
0000000000ab0a3b l     F .text	0000000000000042              fsp_init_file_page
0000000000ab1660 l     F .text	0000000000000721              fsp_fill_free_list
0000000000ab1212 l     F .text	00000000000000fd              fsp_try_extend_data_file_with_pages
0000000000ab130f l     F .text	0000000000000351              fsp_try_extend_data_file
0000000000ab1d81 l     F .text	0000000000000179              fsp_alloc_free_extent
0000000000ab1efa l     F .text	0000000000000190              fsp_alloc_from_free_frag
0000000000ab208a l     F .text	0000000000000140              fsp_page_create
0000000000ab21ca l     F .text	0000000000000332              fsp_alloc_free_page
0000000000ab24fc l     F .text	000000000000038e              fsp_free_page
0000000000ab288a l     F .text	0000000000000121              fsp_free_extent
0000000000ab29ab l     F .text	00000000000000cf              fsp_seg_inode_page_get_nth_inode
0000000000ab2a7a l     F .text	00000000000000d1              fsp_seg_inode_page_find_used
0000000000ab2b4b l     F .text	00000000000000cd              fsp_seg_inode_page_find_free
0000000000ab2c18 l     F .text	00000000000001c5              fsp_alloc_seg_inode_page
0000000000ab2ddd l     F .text	000000000000024b              fsp_alloc_seg_inode
0000000000ab3028 l     F .text	0000000000000179              fsp_free_seg_inode
0000000000ab31a1 l     F .text	000000000000010c              fseg_inode_try_get
0000000000ab32ad l     F .text	0000000000000067              fseg_inode_get
0000000000ab3314 l     F .text	0000000000000120              fseg_get_nth_frag_page_no
0000000000ab3434 l     F .text	0000000000000136              fseg_set_nth_frag_page_no
0000000000ab356a l     F .text	0000000000000098              fseg_find_free_frag_page_slot
0000000000ab3602 l     F .text	00000000000000a5              fseg_find_last_used_frag_page_slot
0000000000ab36a7 l     F .text	000000000000009a              fseg_get_n_frag_pages
0000000000ab4380 l     F .text	0000000000000945              fseg_alloc_free_page_low
0000000000ab3c8e l     F .text	0000000000000195              fseg_n_reserved_pages_low
0000000000ab3f58 l     F .text	000000000000024d              fseg_fill_free_list
0000000000ab41a5 l     F .text	00000000000001db              fseg_alloc_free_extent
0000000000ab5680 l     F .text	00000000000002a3              fseg_mark_page_used
0000000000ab4e8d l     F .text	000000000000010c              fsp_reserve_free_pages
0000000000ab5923 l     F .text	0000000000000555              fseg_free_page_low
0000000000ab5fad l     F .text	00000000000002ff              fseg_free_extent
0000000000ab67cd l     F .text	00000000000001df              fseg_get_first_extent
0000000000ab69ac l     F .text	00000000000007e8              fseg_validate_low
0000000000ab7256 l     F .text	00000000000001e6              fseg_print_low
0000000000000000 l    df *ABS*	0000000000000000              fut0lst.c
0000000000ab8c79 l     F .text	00000000000000b4              ut_align_down
0000000000ab8d2d l     F .text	00000000000000b2              ut_align_offset
0000000000ab8ddf l     F .text	0000000000000087              mach_read_from_4
0000000000ab8e66 l     F .text	0000000000000074              dyn_array_create
0000000000ab8eda l     F .text	0000000000000096              mtr_start
0000000000ab8f70 l     F .text	0000000000000046              buf_page_get_state
0000000000ab8fb6 l     F .text	000000000000001a              buf_block_get_state
0000000000ab8fd0 l     F .text	00000000000000ea              buf_block_get_frame
0000000000ab90ba l     F .text	000000000000007c              buf_ptr_get_fsp_addr
0000000000ab9136 l     F .text	00000000000000ec              fut_get_ptr
0000000000ab9222 l     F .text	0000000000000164              flst_write_addr
0000000000ab9386 l     F .text	0000000000000114              flst_read_addr
0000000000ab949a l     F .text	0000000000000027              flst_get_len
0000000000ab94c1 l     F .text	0000000000000029              flst_get_first
0000000000ab94ea l     F .text	0000000000000029              flst_get_last
0000000000ab9513 l     F .text	0000000000000029              flst_get_next_addr
0000000000ab953c l     F .text	0000000000000025              flst_get_prev_addr
0000000000ab9561 l     F .text	000000000000001f              page_align
0000000000ab9580 l     F .text	000000000000001f              page_offset
0000000000ab959f l     F .text	0000000000000056              page_get_page_no
0000000000ab95f5 l     F .text	0000000000000056              page_get_space_id
0000000000ab964b l     F .text	0000000000000249              flst_add_to_empty
0000000000000000 l    df *ABS*	0000000000000000              ha0ha.c
0000000000abb12f l     F .text	000000000000001b              ut_min
0000000000abb14a l     F .text	00000000000000b4              ut_align_down
0000000000abb1fe l     F .text	0000000000000057              ut_hash_ulint
0000000000abb255 l     F .text	0000000000000012              mem_block_get_len
0000000000abb267 l     F .text	0000000000000084              mem_block_set_free
0000000000abb2eb l     F .text	0000000000000012              mem_block_get_free
0000000000abb2fd l     F .text	0000000000000012              mem_block_get_start
0000000000abb30f l     F .text	0000000000000143              mem_heap_alloc
0000000000abb452 l     F .text	0000000000000082              mem_heap_get_top
0000000000abb4d4 l     F .text	00000000000000c6              mem_heap_free_top
0000000000abb59a l     F .text	000000000000016b              mem_heap_create_func
0000000000abb705 l     F .text	00000000000000fd              mem_alloc_func
0000000000abb802 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000abb8be l     F .text	0000000000000079              hash_get_n_cells
0000000000abb937 l     F .text	000000000000008c              hash_calc_hash
0000000000abb9c3 l     F .text	00000000000000dc              hash_get_mutex_no
0000000000abba9f l     F .text	00000000000000bf              hash_get_nth_heap
0000000000abbb5e l     F .text	00000000000000b6              hash_get_heap
0000000000abbc14 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000abbce0 l     F .text	000000000000009f              hash_get_mutex
0000000000abbd7f l     F .text	0000000000000012              ha_node_get_data
0000000000abbd91 l     F .text	000000000000002b              ha_node_set_data_func
0000000000abbdbc l     F .text	0000000000000011              ha_chain_get_next
0000000000abbdcd l     F .text	000000000000003a              ha_chain_get_first
0000000000abbe07 l     F .text	00000000000000ef              ha_search_with_data
0000000000abbef6 l     F .text	000000000000001f              page_align
0000000000000000 l    df *ABS*	0000000000000000              hash0hash.c
0000000000abcf41 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000abcf58 l     F .text	0000000000000017              os_atomic_clear
0000000000abcf6f l     F .text	0000000000000057              ut_hash_ulint
0000000000abcfc6 l     F .text	000000000000001e              mutex_test_and_set
0000000000abcfe4 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000abd003 l     F .text	000000000000004e              mutex_get_waiters
0000000000abd051 l     F .text	000000000000007b              mutex_exit_func
0000000000abd0cc l     F .text	00000000000000d1              mutex_enter_func
0000000000abd19d l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000abd2ab l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000abd318 l     F .text	000000000000007c              pfs_mutex_create_func
0000000000abd394 l     F .text	0000000000000012              mem_block_get_len
0000000000abd3a6 l     F .text	0000000000000084              mem_block_set_free
0000000000abd42a l     F .text	0000000000000012              mem_block_get_free
0000000000abd43c l     F .text	0000000000000143              mem_heap_alloc
0000000000abd57f l     F .text	000000000000016b              mem_heap_create_func
0000000000abd6ea l     F .text	00000000000000a3              mem_heap_free_func
0000000000abd78d l     F .text	00000000000000fd              mem_alloc_func
0000000000abd88a l     F .text	000000000000003a              mem_free_func
0000000000abd8c4 l     F .text	0000000000000097              hash_table_clear
0000000000abd95b l     F .text	000000000000008c              hash_calc_hash
0000000000abd9e7 l     F .text	00000000000000dc              hash_get_mutex_no
0000000000abdac3 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000abdb8f l     F .text	000000000000009f              hash_get_mutex
0000000000000000 l    df *ABS*	0000000000000000              ha0storage.c
0000000000abe062 l     F .text	0000000000000057              ut_hash_ulint
0000000000abe0b9 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000abe0f3 l     F .text	0000000000000096              ut_fold_binary
0000000000abe189 l     F .text	0000000000000012              mem_block_get_len
0000000000abe19b l     F .text	0000000000000084              mem_block_set_free
0000000000abe21f l     F .text	0000000000000012              mem_block_get_free
0000000000abe231 l     F .text	0000000000000143              mem_heap_alloc
0000000000abe374 l     F .text	0000000000000072              mem_heap_get_size
0000000000abe3e6 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000abe4a2 l     F .text	0000000000000079              hash_get_n_cells
0000000000abe51b l     F .text	000000000000008c              hash_calc_hash
0000000000abe5a7 l     F .text	00000000000000dc              hash_get_mutex_no
0000000000abe683 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000abe74f l     F .text	000000000000009f              hash_get_mutex
0000000000abe7ee l     F .text	0000000000000042              ha_storage_get_size
0000000000abe830 l     F .text	000000000000011c              ha_storage_get
0000000000000000 l    df *ABS*	0000000000000000              ibuf0ibuf.c
0000000000abeb29 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000abeb40 l     F .text	0000000000000017              os_atomic_clear
0000000000abeb57 l     F .text	000000000000001b              ut_min
0000000000abeb72 l     F .text	000000000000001b              ut_max
0000000000abeb8d l     F .text	00000000000000b4              ut_align_down
0000000000abec41 l     F .text	00000000000000b2              ut_align_offset
0000000000abecf3 l     F .text	0000000000000051              ut_bit_get_nth
0000000000abed44 l     F .text	0000000000000079              ut_bit_set_nth
0000000000abedbd l     F .text	0000000000000080              mach_write_to_1
0000000000abee3d l     F .text	0000000000000045              mach_read_from_1
0000000000abee82 l     F .text	0000000000000096              mach_write_to_2
0000000000abef18 l     F .text	000000000000002c              mach_read_from_2
0000000000abef44 l     F .text	0000000000000082              mach_write_to_4
0000000000abefc6 l     F .text	0000000000000087              mach_read_from_4
0000000000abf04d l     F .text	000000000000003a              mach_read_from_8
0000000000abf087 l     F .text	0000000000000057              ut_hash_ulint
0000000000abf0de l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000abf118 l     F .text	0000000000000096              ut_fold_binary
0000000000abf1ae l     F .text	000000000000001e              mutex_test_and_set
0000000000abf1cc l     F .text	000000000000001f              mutex_reset_lock_word
0000000000abf1eb l     F .text	000000000000004e              mutex_get_waiters
0000000000abf239 l     F .text	000000000000007b              mutex_exit_func
0000000000abf2b4 l     F .text	00000000000000d1              mutex_enter_func
0000000000abf385 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000abf493 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000abf500 l     F .text	000000000000007c              pfs_mutex_create_func
0000000000abf57c l     F .text	0000000000000079              pfs_mutex_free_func
0000000000abf5f5 l     F .text	0000000000000012              mem_block_get_len
0000000000abf607 l     F .text	0000000000000084              mem_block_set_free
0000000000abf68b l     F .text	0000000000000012              mem_block_get_free
0000000000abf69d l     F .text	0000000000000143              mem_heap_alloc
0000000000abf7e0 l     F .text	000000000000016b              mem_heap_create_func
0000000000abf94b l     F .text	00000000000000a3              mem_heap_free_func
0000000000abf9ee l     F .text	00000000000000fd              mem_alloc_func
0000000000abfaeb l     F .text	000000000000003a              mem_free_func
0000000000abfb25 l     F .text	0000000000000049              dyn_block_get_used
0000000000abfb6e l     F .text	0000000000000074              dyn_array_create
0000000000abfbe2 l     F .text	00000000000001a0              dyn_array_push
0000000000abfd82 l     F .text	000000000000015f              dyn_array_get_element
0000000000abfee1 l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000abffba l     F .text	0000000000000051              rw_lock_get_x_lock_count
0000000000ac000b l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000ac0111 l     F .text	0000000000000096              mtr_start
0000000000ac01a7 l     F .text	0000000000000171              mtr_memo_push
0000000000ac0318 l     F .text	0000000000000131              mtr_memo_contains
0000000000ac0449 l     F .text	00000000000000a6              mtr_x_lock_func
0000000000ac04ef l     F .text	0000000000000015              dtype_get_charset_coll
0000000000ac0504 l     F .text	000000000000010a              dtype_get_mblen
0000000000ac060e l     F .text	00000000000000ce              dtype_set_mbminmaxlen
0000000000ac06dc l     F .text	00000000000000a5              dtype_set_mblen
0000000000ac0781 l     F .text	00000000000000b8              dtype_set
0000000000ac0839 l     F .text	0000000000000045              dtype_get_mtype
0000000000ac087e l     F .text	0000000000000046              dtype_get_prtype
0000000000ac08c4 l     F .text	0000000000000046              dtype_get_len
0000000000ac090a l     F .text	00000000000001b4              dtype_new_store_for_order_and_null_size
0000000000ac0abe l     F .text	00000000000000d4              dtype_read_for_order_and_null_size
0000000000ac0b92 l     F .text	0000000000000172              dtype_new_read_for_order_and_null_size
0000000000ac0d04 l     F .text	0000000000000244              dtype_get_fixed_size_low
0000000000ac0f48 l     F .text	0000000000000052              dtype_get_sql_null_size
0000000000ac0f9a l     F .text	0000000000000043              dfield_get_type
0000000000ac0fdd l     F .text	0000000000000090              dfield_get_data
0000000000ac106d l     F .text	0000000000000092              dfield_get_len
0000000000ac10ff l     F .text	000000000000005b              dfield_set_len
0000000000ac115a l     F .text	000000000000006a              dfield_set_data
0000000000ac11c4 l     F .text	000000000000002d              dfield_copy
0000000000ac11f1 l     F .text	0000000000000042              dtuple_get_info_bits
0000000000ac1233 l     F .text	0000000000000043              dtuple_get_n_fields
0000000000ac1276 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000ac1305 l     F .text	000000000000012d              dtuple_create_from_mem
0000000000ac1432 l     F .text	000000000000008e              dtuple_create
0000000000ac14c0 l     F .text	0000000000000139              dtuple_get_data_size
0000000000ac15f9 l     F .text	0000000000000066              dtuple_set_types_binary
0000000000ac165f l     F .text	00000000000000bc              hash_get_nth_cell
0000000000ac171b l     F .text	000000000000008c              hash_calc_hash
0000000000ac17a7 l     F .text	00000000000000dc              hash_get_mutex_no
0000000000ac1883 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000ac194f l     F .text	000000000000009f              hash_get_mutex
0000000000ac19ee l     F .text	0000000000000010              buf_pool_get_curr_size
0000000000ac19fe l     F .text	0000000000000046              buf_page_get_state
0000000000ac1a44 l     F .text	000000000000001a              buf_block_get_state
0000000000ac1a5e l     F .text	000000000000006a              buf_page_in_file
0000000000ac1ac8 l     F .text	000000000000004a              buf_page_get_io_fix
0000000000ac1b12 l     F .text	000000000000001a              buf_block_get_io_fix
0000000000ac1b2c l     F .text	00000000000000ea              buf_block_get_frame
0000000000ac1c16 l     F .text	000000000000007a              buf_block_get_space
0000000000ac1c90 l     F .text	000000000000007b              buf_block_get_page_no
0000000000ac1d0b l     F .text	000000000000003b              buf_block_get_zip_size
0000000000ac1d46 l     F .text	000000000000003a              buf_frame_get_page_zip
0000000000ac1d80 l     F .text	0000000000000027              buf_page_address_fold
0000000000ac1da7 l     F .text	0000000000000067              buf_pool_get
0000000000ac1e0e l     F .text	00000000000002b9              buf_page_hash_get_low
0000000000ac20c7 l     F .text	0000000000000074              buf_page_hash_get
0000000000ac213b l     F .text	00000000000000e6              buf_page_peek
0000000000ac2221 l     F .text	0000000000000028              trx_sys_hdr_page
0000000000ac2249 l     F .text	0000000000000114              flst_read_addr
0000000000ac235d l     F .text	0000000000000027              flst_get_len
0000000000ac2384 l     F .text	0000000000000029              flst_get_last
0000000000ac23ad l     F .text	0000000000000079              fsp_descr_page
0000000000ac2426 l     F .text	000000000000007c              dict_table_get_first_index
0000000000ac24a2 l     F .text	0000000000000085              dict_index_is_clust
0000000000ac2527 l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000ac25f8 l     F .text	000000000000004c              dict_table_is_comp
0000000000ac2644 l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000ac26b2 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000ac2739 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000ac27f1 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000ac28c5 l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000ac2996 l     F .text	000000000000007c              dict_index_get_lock
0000000000ac2a12 l     F .text	000000000000006d              rec_get_bit_field_1
0000000000ac2a7f l     F .text	000000000000006d              rec_get_bit_field_2
0000000000ac2aec l     F .text	0000000000000161              rec_get_next_offs
0000000000ac2c4d l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000ac2d08 l     F .text	0000000000000091              rec_get_status
0000000000ac2d99 l     F .text	00000000000000f1              rec_get_n_fields
0000000000ac2e8a l     F .text	000000000000003b              rec_get_info_bits
0000000000ac2ec5 l     F .text	0000000000000053              rec_get_deleted_flag
0000000000ac2f18 l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000ac2f8f l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000ac3007 l     F .text	00000000000000ed              rec_offs_n_fields
0000000000ac30f4 l     F .text	00000000000002a6              rec_offs_validate
0000000000ac339a l     F .text	00000000000000ae              rec_offs_data_size
0000000000ac3448 l     F .text	000000000000009f              rec_offs_extra_size
0000000000ac34e7 l     F .text	0000000000000032              rec_offs_size
0000000000ac3519 l     F .text	0000000000000035              rec_get_converted_extra_size
0000000000ac354e l     F .text	00000000000001d3              rec_get_converted_size
0000000000ac3721 l     F .text	0000000000000010              recv_recovery_is_on
0000000000ac3731 l     F .text	00000000000000b3              page_zip_get_size
0000000000ac37e4 l     F .text	00000000000001c3              page_zip_simple_validate
0000000000ac39a7 l     F .text	0000000000000133              page_zip_get_trailer_len
0000000000ac3f79 l     F .text	000000000000001e              page_is_leaf
0000000000ac43f0 l     F .text	0000000000000024              page_dir_get_n_heap
0000000000ac3ada l     F .text	0000000000000056              page_zip_max_ins_size
0000000000ac3b30 l     F .text	0000000000000109              page_zip_write_header
0000000000ac3c58 l     F .text	000000000000001f              page_offset
0000000000ac3c39 l     F .text	000000000000001f              page_align
0000000000ac3c77 l     F .text	000000000000004b              page_get_max_trx_id
0000000000ac3cc2 l     F .text	000000000000013c              page_update_max_trx_id
0000000000ac3dfe l     F .text	0000000000000083              page_header_get_field
0000000000ac3e81 l     F .text	00000000000000b2              page_header_reset_last_insert
0000000000ac3f33 l     F .text	0000000000000024              page_is_comp
0000000000ac3f57 l     F .text	0000000000000022              page_rec_is_comp
0000000000ac3f97 l     F .text	000000000000008f              page_get_infimum_offset
0000000000ac4026 l     F .text	000000000000008f              page_get_supremum_offset
0000000000ac40b5 l     F .text	00000000000000b9              page_rec_is_user_rec_low
0000000000ac416e l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000ac4207 l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000ac42a0 l     F .text	0000000000000022              page_rec_is_user_rec
0000000000ac42c2 l     F .text	0000000000000022              page_rec_is_supremum
0000000000ac42e4 l     F .text	0000000000000022              page_rec_is_infimum
0000000000ac4306 l     F .text	0000000000000056              page_get_page_no
0000000000ac435c l     F .text	0000000000000056              page_get_space_id
0000000000ac43b2 l     F .text	000000000000001f              page_get_n_recs
0000000000ac43d1 l     F .text	000000000000001f              page_dir_get_n_slots
0000000000ac4414 l     F .text	0000000000000067              page_dir_get_nth_slot
0000000000ac447b l     F .text	00000000000000d9              page_rec_check
0000000000ac4554 l     F .text	0000000000000032              page_dir_slot_get_rec
0000000000ac4586 l     F .text	000000000000001d              page_dir_calc_reserved_space
0000000000ac45a3 l     F .text	0000000000000149              page_rec_get_next_low
0000000000ac46ec l     F .text	000000000000002c              page_rec_get_next
0000000000ac4718 l     F .text	000000000000002c              page_rec_get_next_const
0000000000ac4744 l     F .text	0000000000000190              page_rec_get_prev_const
0000000000ac48d4 l     F .text	000000000000001a              page_rec_get_prev
0000000000ac48ee l     F .text	0000000000000097              page_get_data_size
0000000000ac4985 l     F .text	000000000000001f              page_get_free_space_of_empty
0000000000ac49a4 l     F .text	00000000000000e2              page_get_max_insert_size
0000000000ac4a86 l     F .text	000000000000007d              page_get_max_insert_size_after_reorganize
0000000000ac4b03 l     F .text	000000000000002a              ibuf_mtr_start
0000000000ac4b2d l     F .text	0000000000000060              ibuf_mtr_commit
0000000000ac4b8d l     F .text	0000000000000015              ibuf_inside
0000000000ac4ba2 l     F .text	000000000000007b              ibuf_bitmap_page
0000000000ac4c1d l     F .text	0000000000000108              ibuf_index_page_calc_free_bits
0000000000ac4d25 l     F .text	0000000000000124              ibuf_index_page_calc_free_from_bits
0000000000ac4e49 l     F .text	000000000000010e              ibuf_index_page_calc_free_zip
0000000000ac4f57 l     F .text	0000000000000094              ibuf_index_page_calc_free
0000000000ac4feb l     F .text	0000000000000096              page_cur_get_page
0000000000ac5081 l     F .text	000000000000008f              page_cur_get_block
0000000000ac5110 l     F .text	000000000000003a              page_cur_get_page_zip
0000000000ac514a l     F .text	000000000000008e              page_cur_get_rec
0000000000ac51d8 l     F .text	0000000000000096              page_cur_is_before_first
0000000000ac526e l     F .text	0000000000000096              page_cur_is_after_last
0000000000ac5304 l     F .text	000000000000005f              page_cur_move_to_prev
0000000000ac5363 l     F .text	00000000000000d1              page_cur_search
0000000000ac5434 l     F .text	0000000000000195              page_cur_tuple_insert
0000000000ac55c9 l     F .text	000000000000001e              btr_page_get_index_id
0000000000ac55e7 l     F .text	0000000000000080              btr_page_get_level_low
0000000000ac5667 l     F .text	000000000000005b              btr_page_get_level
0000000000ac56c2 l     F .text	00000000000000c8              btr_page_get_next
0000000000ac578a l     F .text	000000000000005f              btr_page_get_prev
0000000000ac57e9 l     F .text	0000000000000012              btr_cur_get_page_cur
0000000000ac57fb l     F .text	0000000000000022              btr_cur_get_block
0000000000ac581d l     F .text	000000000000001e              btr_cur_get_rec
0000000000ac583b l     F .text	0000000000000026              btr_cur_get_page
0000000000ac5861 l     F .text	0000000000000016              btr_pcur_get_btr_cur
0000000000ac5877 l     F .text	0000000000000022              btr_pcur_get_page_cur
0000000000ac5899 l     F .text	0000000000000057              btr_pcur_get_page
0000000000ac58f0 l     F .text	000000000000008e              btr_pcur_get_rec
0000000000ac597e l     F .text	000000000000008e              btr_pcur_is_after_last_on_page
0000000000ac5a0c l     F .text	000000000000008e              btr_pcur_is_before_first_on_page
0000000000ac5a9a l     F .text	00000000000000a8              btr_pcur_is_on_user_rec
0000000000ac5b42 l     F .text	00000000000000c4              btr_pcur_is_after_last_in_tree
0000000000ac5c06 l     F .text	0000000000000071              btr_pcur_commit_specify_mtr
0000000000ac5c77 l     F .text	0000000000000038              btr_pcur_init
0000000000ac5caf l     F .text	00000000000000b0              btr_pcur_open_func
0000000000ac5d5f l     F .text	00000000000000d3              btr_pcur_open_at_index_side
0000000000ac5e32 l     F .text	00000000000000b0              btr_pcur_open_at_rnd_pos_func
0000000000ac5ee2 l     F .text	00000000000000be              btr_pcur_close
0000000000ac5fa0 l     F .text	0000000000000047              thr_get_trx
0000000001393620 l     O .bss	0000000000000098              ibuf_pessimistic_insert_mutex
00000000013936c0 l     O .bss	0000000000000098              ibuf_mutex
0000000001393760 l     O .bss	0000000000000098              ibuf_bitmap_mutex
0000000000ac5fe7 l     F .text	0000000000000054              ibuf_enter
0000000000ac603b l     F .text	0000000000000054              ibuf_exit
0000000000ac608f l     F .text	0000000000000032              ibuf_btr_pcur_commit_specify_mtr
0000000000ac60c1 l     F .text	0000000000000092              ibuf_header_page_get
0000000000ac6153 l     F .text	00000000000001be              ibuf_tree_root_get
0000000000ac63a4 l     F .text	00000000000000be              ibuf_size_update
0000000000ac69c1 l     F .text	00000000000001f0              ibuf_bitmap_page_get_bits_low
0000000000ac6bb1 l     F .text	0000000000000294              ibuf_bitmap_page_set_bits
0000000000ac6e45 l     F .text	000000000000006f              ibuf_bitmap_page_no_calc
0000000000ac6eb4 l     F .text	000000000000007a              ibuf_bitmap_get_map_page_func
0000000000ac6f2e l     F .text	00000000000000a9              ibuf_set_free_bits_low
0000000000ac73b4 l     F .text	000000000000004a              ibuf_fixed_addr_page
0000000000ac76fd l     F .text	0000000000000260              ibuf_rec_get_page_no_func
0000000000ac795d l     F .text	0000000000000243              ibuf_rec_get_space_func
0000000000ac7ba0 l     F .text	00000000000002e6              ibuf_rec_get_info_func
0000000000ac7e86 l     F .text	000000000000015b              ibuf_rec_get_op_type_func
0000000000ac806f l     F .text	0000000000000052              ibuf_add_ops
0000000000ac80c1 l     F .text	0000000000000096              ibuf_print_ops
00000000010f61b0 l     O .data	0000000000000018              op_names.19246
0000000000ac8157 l     F .text	0000000000000082              ibuf_dummy_index_create
0000000000ac81d9 l     F .text	00000000000000c2              ibuf_dummy_index_add_col
0000000000ac829b l     F .text	0000000000000033              ibuf_dummy_index_free
0000000000ac82ce l     F .text	00000000000001f3              ibuf_build_entry_pre_4_1_x
0000000000ac84c1 l     F .text	00000000000003c8              ibuf_build_entry_from_ibuf_rec_func
0000000000ac8889 l     F .text	0000000000000132              ibuf_rec_get_size
0000000000ac89bb l     F .text	0000000000000456              ibuf_rec_get_volume_func
0000000000ac8e11 l     F .text	0000000000000531              ibuf_entry_build
0000000000ac9342 l     F .text	000000000000012c              ibuf_search_tuple_build
0000000000ac946e l     F .text	0000000000000172              ibuf_new_search_tuple_build
0000000000ac95e0 l     F .text	0000000000000078              ibuf_data_enough_free_for_insert
0000000000ac9658 l     F .text	000000000000007c              ibuf_data_too_much_free
0000000000ac96d4 l     F .text	00000000000002a4              ibuf_add_free_page
0000000000ac9978 l     F .text	00000000000003a3              ibuf_remove_free_page
0000000000ac9dc9 l     F .text	00000000000004a4              ibuf_get_merge_page_nos_func
0000000000aca26d l     F .text	00000000000002e6              ibuf_contract_ext
0000000000aca620 l     F .text	0000000000000087              ibuf_contract_after_insert
0000000000aca6a7 l     F .text	00000000000000ce              ibuf_get_volume_buffered_hash
0000000000aca775 l     F .text	0000000000000444              ibuf_get_volume_buffered_count_func
0000000000acabb9 l     F .text	0000000000000862              ibuf_get_volume_buffered
0000000000acb616 l     F .text	0000000000000399              ibuf_get_entry_counter_low_func
0000000000acb9af l     F .text	000000000000017a              ibuf_get_entry_counter_func
0000000000acbb29 l     F .text	0000000000000af3              ibuf_insert_low
0000000000acca7f l     F .text	0000000000000349              ibuf_insert_to_index_page_low
0000000000accdc8 l     F .text	000000000000071d              ibuf_insert_to_index_page
0000000000acd4e5 l     F .text	00000000000002d3              ibuf_set_del_mark
0000000000acd7b8 l     F .text	000000000000043e              ibuf_delete
0000000000acdbf6 l     F .text	0000000000000253              ibuf_restore_pos
0000000000acde49 l     F .text	0000000000000593              ibuf_delete_rec
0000000000000000 l    df *ABS*	0000000000000000              lexyy.c
00000000013937f8 l     O .bss	0000000000000004              yyleng
0000000001393800 l     O .bss	0000000000000008              yyin
0000000001393808 l     O .bss	0000000000000008              yyout
0000000001393810 l     O .bss	0000000000000008              yy_buffer_stack_top
0000000001393818 l     O .bss	0000000000000008              yy_buffer_stack_max
0000000001393820 l     O .bss	0000000000000008              yy_buffer_stack
0000000001393828 l     O .bss	0000000000000001              yy_hold_char
000000000139382c l     O .bss	0000000000000004              yy_n_chars
0000000001393830 l     O .bss	0000000000000008              yy_c_buf_p
00000000010f61c8 l     O .data	0000000000000004              yy_init
0000000001393838 l     O .bss	0000000000000004              yy_start
000000000139383c l     O .bss	0000000000000004              yy_did_buffer_switch_on_eof
00000000010f61cc l     O .data	0000000000000004              yylineno
0000000001393840 l     O .bss	0000000000000008              yytext
0000000000d28400 l     O .rodata	000000000000031e              yy_accept
0000000000d28720 l     O .rodata	0000000000000400              yy_ec
0000000000d28b20 l     O .rodata	00000000000000cc              yy_meta
0000000000d28c00 l     O .rodata	0000000000000332              yy_base
0000000000d28f40 l     O .rodata	0000000000000332              yy_def
0000000000d29280 l     O .rodata	00000000000003e6              yy_nxt
0000000000d29680 l     O .rodata	00000000000003e6              yy_chk
0000000001393848 l     O .bss	0000000000000004              yy_last_accepting_state
0000000001393850 l     O .bss	0000000000000008              yy_last_accepting_cpos
0000000001393858 l     O .bss	0000000000000004              yy_flex_debug
0000000000acf985 l     F .text	000000000000001a              ut_strlen
0000000001393860 l     O .bss	0000000000000008              stringbuf_len_alloc
0000000001393868 l     O .bss	0000000000000008              stringbuf_len
0000000001393870 l     O .bss	0000000000000008              stringbuf
0000000000acf99f l     F .text	00000000000000e1              string_append
0000000000ad1395 l     F .text	00000000000000fe              yyensure_buffer_stack
0000000000ad0f58 l     F .text	0000000000000093              yy_create_buffer
0000000000ad0ecd l     F .text	000000000000008b              yy_load_buffer_state
0000000000ad1493 l     F .text	0000000000000049              yy_fatal_error
0000000000ad0b07 l     F .text	0000000000000125              yy_get_previous_state
0000000000ad0c2c l     F .text	00000000000000ff              yy_try_NUL_trans
0000000000ad06ff l     F .text	0000000000000408              yy_get_next_buffer
0000000000ad163a l     F .text	0000000000000023              yyrealloc
0000000000ad0d2b l     F .text	00000000000000af              yyrestart
0000000000ad1077 l     F .text	000000000000009e              yy_init_buffer
0000000000ad0dda l     F .text	00000000000000f3              yy_switch_to_buffer
0000000000ad161d l     F .text	000000000000001d              yyalloc
0000000000ad0feb l     F .text	000000000000008c              yy_delete_buffer
0000000000ad165d l     F .text	000000000000001b              yyfree
0000000000ad1115 l     F .text	000000000000009d              yy_flush_buffer
0000000000ad11b2 l     F .text	0000000000000104              yypush_buffer_state
0000000000ad12b6 l     F .text	00000000000000df              yypop_buffer_state
0000000000ad14dc l     F .text	000000000000000c              yyget_lineno
0000000000ad14e8 l     F .text	000000000000000d              yyget_in
0000000000ad14f5 l     F .text	000000000000000d              yyget_out
0000000000ad1502 l     F .text	000000000000000c              yyget_leng
0000000000ad150e l     F .text	000000000000000d              yyget_text
0000000000ad151b l     F .text	0000000000000013              yyset_lineno
0000000000ad152e l     F .text	0000000000000016              yyset_in
0000000000ad1544 l     F .text	0000000000000016              yyset_out
0000000000ad155a l     F .text	000000000000000c              yyget_debug
0000000000ad1566 l     F .text	0000000000000013              yyset_debug
0000000000ad1579 l     F .text	00000000000000a4              yylex_destroy
0000000000000000 l    df *ABS*	0000000000000000              pars0grm.c
0000000000ad16b7 l     F .text	0000000000000062              que_node_list_add_last
0000000000d29d80 l     O .rodata	000000000000015f              yytranslate
0000000000d29ee0 l     O .rodata	00000000000000b0              yyr1
0000000000d29fa0 l     O .rodata	00000000000000b0              yyr2
0000000000d2a060 l     O .rodata	0000000000000153              yydefact
0000000000d2a1c0 l     O .rodata	000000000000008c              yydefgoto
0000000000d2a260 l     O .rodata	00000000000002a6              yypact
0000000000d2a520 l     O .rodata	000000000000008c              yypgoto
0000000000d2a5c0 l     O .rodata	00000000000005e2              yytable
0000000000d2abc0 l     O .rodata	00000000000005e2              yycheck
0000000000d2b1c0 l     O .rodata	0000000000000153              yystos
0000000000ad1719 l     F .text	0000000000000025              yydestruct
0000000001393878 l     O .bss	0000000000000004              yychar
000000000139387c l     O .bss	0000000000000004              yynerrs
0000000000000000 l    df *ABS*	0000000000000000              pars0pars.c
0000000000ad2d4a l     F .text	000000000000002d              ut_memcpy
0000000000ad2d77 l     F .text	000000000000002d              ut_memcmp
0000000000ad2da4 l     F .text	000000000000001a              ut_strlen
0000000000ad2dbe l     F .text	0000000000000082              mach_write_to_4
0000000000ad2e40 l     F .text	0000000000000087              mach_read_from_4
0000000000ad2ec7 l     F .text	0000000000000071              mach_write_to_8
0000000000ad2f38 l     F .text	0000000000000015              dtype_get_charset_coll
0000000000ad2f4d l     F .text	000000000000010a              dtype_get_mblen
0000000000ad3057 l     F .text	00000000000000ce              dtype_set_mbminmaxlen
0000000000ad3125 l     F .text	00000000000000a5              dtype_set_mblen
0000000000ad31ca l     F .text	00000000000000b8              dtype_set
0000000000ad3282 l     F .text	0000000000000058              dtype_copy
0000000000ad32da l     F .text	0000000000000045              dtype_get_mtype
0000000000ad331f l     F .text	0000000000000244              dtype_get_fixed_size_low
0000000000ad3563 l     F .text	0000000000000057              ut_hash_ulint
0000000000ad35ba l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000ad35f4 l     F .text	0000000000000075              ut_fold_string
0000000000ad3669 l     F .text	0000000000000012              mem_block_get_len
0000000000ad367b l     F .text	0000000000000084              mem_block_set_free
0000000000ad36ff l     F .text	0000000000000012              mem_block_get_free
0000000000ad3711 l     F .text	0000000000000143              mem_heap_alloc
0000000000ad3854 l     F .text	000000000000016b              mem_heap_create_func
0000000000ad39bf l     F .text	00000000000000a3              mem_heap_free_func
0000000000ad3a62 l     F .text	0000000000000043              dfield_get_type
0000000000ad3aa5 l     F .text	000000000000005f              dfield_set_type
0000000000ad3b04 l     F .text	0000000000000090              dfield_get_data
0000000000ad3b94 l     F .text	0000000000000092              dfield_get_len
0000000000ad3c26 l     F .text	000000000000005b              dfield_set_len
0000000000ad3c81 l     F .text	000000000000006a              dfield_set_data
0000000000ad3ceb l     F .text	000000000000008f              dtuple_get_nth_field
0000000000ad3d7a l     F .text	000000000000012d              dtuple_create_from_mem
0000000000ad3ea7 l     F .text	000000000000008e              dtuple_create
0000000000ad3f35 l     F .text	0000000000000012              ib_vector_size
0000000000ad3f47 l     F .text	000000000000005c              ib_vector_get
0000000000ad3fa3 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000ad405f l     F .text	000000000000008c              hash_calc_hash
0000000000ad40eb l     F .text	00000000000000dc              hash_get_mutex_no
0000000000ad41c7 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000ad4293 l     F .text	000000000000009f              hash_get_mutex
0000000000ad4332 l     F .text	00000000000000ac              dict_col_copy_type
0000000000ad43de l     F .text	0000000000000052              dict_col_get_fixed_size
0000000000ad4430 l     F .text	000000000000007c              dict_table_get_first_index
0000000000ad44ac l     F .text	0000000000000085              dict_index_is_clust
0000000000ad4531 l     F .text	000000000000008c              dict_table_get_n_user_cols
0000000000ad45bd l     F .text	0000000000000087              dict_table_get_n_cols
0000000000ad4644 l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000ad4715 l     F .text	000000000000004c              dict_table_is_comp
0000000000ad4761 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000ad47e8 l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000ad48b9 l     F .text	0000000000000042              dict_field_get_col
0000000000ad48fb l     F .text	000000000000002d              dict_index_get_nth_col
0000000000ad4928 l     F .text	00000000000001b0              dict_table_check_if_in_cache_low
0000000000ad4ad8 l     F .text	00000000000001c6              dict_table_get_low
0000000000ad4c9e l     F .text	0000000000000042              que_node_get_type
0000000000ad4ce0 l     F .text	0000000000000043              que_node_get_val
0000000000ad4d23 l     F .text	000000000000004c              que_node_set_parent
0000000000ad4d6f l     F .text	000000000000004b              que_node_get_data_type
0000000000ad4dba l     F .text	0000000000000062              que_node_list_add_last
0000000000ad4e1c l     F .text	0000000000000012              que_node_get_next
0000000000ad4e2e l     F .text	0000000000000038              que_node_list_get_len
0000000000ad4e66 l     F .text	000000000000006d              sel_node_get_nth_plan
0000000000ad4ed3 l     F .text	0000000000000071              upd_create
0000000000ad4f44 l     F .text	0000000000000090              upd_get_nth_field
0000000000ad4fd4 l     F .text	00000000000000f0              upd_field_set_field_no
0000000000ad50c4 l     F .text	000000000000006c              eval_node_get_int_val
0000000000ad5130 l     F .text	000000000000008d              pars_func_get_class
0000000000ad51bd l     F .text	0000000000000174              pars_func_low
0000000000ad544b l     F .text	0000000000000024              pars_is_string_type
0000000000ad546f l     F .text	00000000000004d6              pars_resolve_func_data_type
0000000000ad5945 l     F .text	0000000000000364              pars_resolve_exp_variables_and_types
0000000000ad5ca9 l     F .text	000000000000003f              pars_resolve_exp_list_variables_and_types
0000000000ad5ce8 l     F .text	0000000000000236              pars_resolve_exp_columns
0000000000ad5f1e l     F .text	000000000000003f              pars_resolve_exp_list_columns
0000000000ad5f5d l     F .text	00000000000000ef              pars_retrieve_table_def
0000000000ad604c l     F .text	000000000000004f              pars_retrieve_table_list_defs
0000000000ad609b l     F .text	00000000000000d9              pars_select_all_columns
0000000000ad61ca l     F .text	00000000000000cd              pars_check_aggregate
0000000000ad66af l     F .text	000000000000024c              pars_process_assign_list
0000000000ad6eac l     F .text	0000000000000207              pars_set_dfield_type
0000000000ad7193 l     F .text	0000000000000040              pars_set_parent_in_list
0000000000000000 l    df *ABS*	0000000000000000              pars0sym.c
0000000000ad86ce l     F .text	000000000000002d              ut_memcpy
0000000000ad86fb l     F .text	0000000000000082              mach_write_to_4
0000000000ad877d l     F .text	0000000000000015              dtype_get_charset_coll
0000000000ad8792 l     F .text	000000000000010a              dtype_get_mblen
0000000000ad889c l     F .text	00000000000000ce              dtype_set_mbminmaxlen
0000000000ad896a l     F .text	00000000000000a5              dtype_set_mblen
0000000000ad8a0f l     F .text	00000000000000b8              dtype_set
0000000000ad8ac7 l     F .text	0000000000000012              mem_block_get_len
0000000000ad8ad9 l     F .text	0000000000000084              mem_block_set_free
0000000000ad8b5d l     F .text	0000000000000012              mem_block_get_free
0000000000ad8b6f l     F .text	0000000000000143              mem_heap_alloc
0000000000ad8cb2 l     F .text	0000000000000056              mem_heap_strdupl
0000000000ad8d08 l     F .text	0000000000000043              dfield_get_type
0000000000ad8d4b l     F .text	000000000000006a              dfield_set_data
0000000000ad8db5 l     F .text	0000000000000025              dfield_set_null
0000000000000000 l    df *ABS*	0000000000000000              lock0lock.c
0000000000ad9bb1 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000ad9bc8 l     F .text	0000000000000017              os_atomic_clear
0000000000ad9bdf l     F .text	000000000000001b              ut_max
0000000000ad9bfa l     F .text	0000000000000080              ut_ull_create
0000000000ad9c7a l     F .text	00000000000000b4              ut_align_down
0000000000ad9d2e l     F .text	00000000000000b2              ut_align_offset
0000000000ad9de0 l     F .text	0000000000000045              mach_read_from_1
0000000000ad9e25 l     F .text	000000000000002c              mach_read_from_2
0000000000ad9e51 l     F .text	0000000000000087              mach_read_from_4
0000000000ad9ed8 l     F .text	000000000000003a              mach_read_from_8
0000000000ad9f12 l     F .text	000000000000006b              mach_read_from_6
0000000000ad9f7d l     F .text	0000000000000057              ut_hash_ulint
0000000000ad9fd4 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000ada00e l     F .text	000000000000001e              mutex_test_and_set
0000000000ada02c l     F .text	000000000000001f              mutex_reset_lock_word
0000000000ada04b l     F .text	000000000000004e              mutex_get_waiters
0000000000ada099 l     F .text	000000000000007b              mutex_exit_func
0000000000ada114 l     F .text	00000000000000d1              mutex_enter_func
0000000000ada1e5 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000ada2f3 l     F .text	0000000000000111              pfs_mutex_enter_nowait_func
0000000000ada404 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000ada471 l     F .text	0000000000000012              mem_block_get_len
0000000000ada483 l     F .text	0000000000000084              mem_block_set_free
0000000000ada507 l     F .text	0000000000000012              mem_block_get_free
0000000000ada519 l     F .text	0000000000000012              mem_block_get_start
0000000000ada52b l     F .text	0000000000000143              mem_heap_alloc
0000000000ada66e l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000ada7ad l     F .text	000000000000004d              mem_heap_empty
0000000000ada7fa l     F .text	000000000000016b              mem_heap_create_func
0000000000ada965 l     F .text	00000000000000a3              mem_heap_free_func
0000000000adaa08 l     F .text	00000000000000fd              mem_alloc_func
0000000000adab05 l     F .text	000000000000003a              mem_free_func
0000000000adab3f l     F .text	00000000000000bc              hash_get_nth_cell
0000000000adabfb l     F .text	0000000000000079              hash_get_n_cells
0000000000adac74 l     F .text	000000000000008c              hash_calc_hash
0000000000adad00 l     F .text	00000000000000dc              hash_get_mutex_no
0000000000adaddc l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000adaea8 l     F .text	000000000000009f              hash_get_mutex
0000000000adaf47 l     F .text	0000000000000012              ib_vector_size
0000000000adaf59 l     F .text	000000000000005c              ib_vector_get
0000000000adafb5 l     F .text	000000000000005f              ib_vector_get_last
0000000000adb014 l     F .text	0000000000000065              ib_vector_set
0000000000adb079 l     F .text	0000000000000095              ib_vector_pop
0000000000adb10e l     F .text	0000000000000023              ib_vector_is_empty
0000000000adb131 l     F .text	0000000000000114              dict_col_get_clust_pos
0000000000adb245 l     F .text	0000000000000085              dict_index_is_clust
0000000000adb2ca l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000adb39b l     F .text	000000000000014a              dict_table_get_sys_col
0000000000adb4e5 l     F .text	00000000000000c5              dict_table_get_sys_col_no
0000000000adb5aa l     F .text	000000000000004c              dict_table_is_comp
0000000000adb5f6 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000adb67d l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000adb735 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000adb809 l     F .text	0000000000000118              dict_index_get_sys_col_pos
0000000000adb921 l     F .text	0000000000000049              dyn_block_get_used
0000000000adb96a l     F .text	0000000000000074              dyn_array_create
0000000000adb9de l     F .text	000000000000015f              dyn_array_get_element
0000000000adbb3d l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000adbc16 l     F .text	0000000000000096              mtr_start
0000000000adbcac l     F .text	0000000000000131              mtr_memo_contains
0000000000adbddd l     F .text	000000000000006d              rec_get_bit_field_1
0000000000adbe4a l     F .text	000000000000006d              rec_get_bit_field_2
0000000000adbeb7 l     F .text	0000000000000161              rec_get_next_offs
0000000000adc018 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000adc0d3 l     F .text	0000000000000091              rec_get_status
0000000000adc164 l     F .text	0000000000000053              rec_get_deleted_flag
0000000000adc1b7 l     F .text	0000000000000029              rec_get_heap_no_old
0000000000adc1e0 l     F .text	0000000000000029              rec_get_heap_no_new
0000000000adc209 l     F .text	0000000000000029              rec_get_1byte_offs_flag
0000000000adc232 l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000adc2a9 l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000adc321 l     F .text	00000000000000ed              rec_offs_n_fields
0000000000adc40e l     F .text	00000000000002a6              rec_offs_validate
0000000000adc6b4 l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000adc7c2 l     F .text	000000000000005f              rec_offs_comp
0000000000adc821 l     F .text	000000000000009e              rec_1_get_prev_field_end_info
0000000000adc8bf l     F .text	00000000000000a1              rec_2_get_prev_field_end_info
0000000000adc960 l     F .text	00000000000000a4              rec_1_get_field_start_offs
0000000000adca04 l     F .text	00000000000000a5              rec_2_get_field_start_offs
0000000000adcaa9 l     F .text	00000000000000be              rec_get_field_start_offs
0000000000adcb67 l     F .text	0000000000000059              rec_get_data_size_old
0000000000adcbc0 l     F .text	0000000000000046              buf_page_get_state
0000000000adcc06 l     F .text	000000000000001a              buf_block_get_state
0000000000adcc20 l     F .text	000000000000006a              buf_page_in_file
0000000000adcc8a l     F .text	00000000000000ea              buf_block_get_frame
0000000000adcd74 l     F .text	000000000000007a              buf_block_get_space
0000000000adcdee l     F .text	000000000000007b              buf_block_get_page_no
0000000000adce69 l     F .text	000000000000007e              buf_block_get_lock_hash_val
0000000000adcee7 l     F .text	0000000000000040              trx_get_dict_operation
0000000000adcf27 l     F .text	000000000000001a              trx_read_trx_id
0000000000adcf41 l     F .text	0000000000000091              trx_get_on_id
0000000000adcfd2 l     F .text	000000000000007a              trx_list_get_min_trx_id
0000000000add04c l     F .text	00000000000000bf              trx_is_active
0000000000add10b l     F .text	0000000000000010              recv_recovery_is_on
0000000000add11b l     F .text	000000000000001f              page_align
0000000000add13a l     F .text	000000000000001f              page_offset
0000000000add159 l     F .text	000000000000004b              page_get_max_trx_id
0000000000add1a4 l     F .text	000000000000013c              page_update_max_trx_id
0000000000add3e2 l     F .text	000000000000001e              page_is_leaf
0000000000add2e0 l     F .text	0000000000000083              page_header_get_field
0000000000add363 l     F .text	0000000000000024              page_is_comp
0000000000add387 l     F .text	0000000000000022              page_rec_is_comp
0000000000add3a9 l     F .text	0000000000000039              page_rec_get_heap_no
0000000000add400 l     F .text	000000000000008f              page_get_infimum_offset
0000000000add48f l     F .text	00000000000000b9              page_rec_is_user_rec_low
0000000000add548 l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000add5e1 l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000add67a l     F .text	0000000000000022              page_rec_is_user_rec
0000000000add69c l     F .text	0000000000000022              page_rec_is_supremum
0000000000add6be l     F .text	0000000000000022              page_rec_is_infimum
0000000000add6e0 l     F .text	0000000000000056              page_get_page_no
0000000000add736 l     F .text	0000000000000056              page_get_space_id
0000000000add78c l     F .text	0000000000000024              page_dir_get_n_heap
0000000000add7b0 l     F .text	00000000000000d9              page_rec_check
0000000000add889 l     F .text	0000000000000149              page_rec_get_next_low
0000000000add9d2 l     F .text	000000000000002c              page_rec_get_next
0000000000add9fe l     F .text	000000000000002c              page_rec_get_next_const
0000000000adda2a l     F .text	0000000000000110              row_get_trx_id_offset
0000000000addb3a l     F .text	00000000000000d5              row_get_rec_trx_id
0000000000addc0f l     F .text	000000000000008e              page_cur_get_rec
0000000000addc9d l     F .text	000000000000005b              page_cur_set_before_first
0000000000addcf8 l     F .text	0000000000000096              page_cur_is_before_first
0000000000addd8e l     F .text	0000000000000096              page_cur_is_after_last
0000000000adde24 l     F .text	00000000000000d0              page_cur_position
0000000000addef4 l     F .text	000000000000005f              page_cur_move_to_next
0000000000addf53 l     F .text	000000000000005c              read_view_get_nth_trx_id
0000000000addfaf l     F .text	000000000000009f              read_view_sees_trx_id
0000000000ade04e l     F .text	0000000000000047              thr_get_trx
0000000000ade095 l     F .text	0000000000000025              lock_rec_fold
0000000000ade0ba l     F .text	0000000000000040              lock_rec_hash
0000000000ade0fa l     F .text	0000000000000100              lock_clust_rec_some_has_impl
0000000000ade1fa l     F .text	000000000000007e              lock_get_min_heap_no
0000000000ade278 l     F .text	0000000000000048              lock_get_type_low
0000000000ade2c0 l     F .text	00000000000000c5              lock_rec_get_nth_bit
0000000000ade7ba l     F .text	0000000000000046              lock_get_mode
0000000000ade800 l     F .text	0000000000000059              lock_get_wait
0000000000adeaab l     F .text	000000000000009b              lock_set_lock_and_trx_wait
0000000000adeb46 l     F .text	00000000000000f4              lock_reset_lock_and_trx_wait
0000000000adec3a l     F .text	0000000000000091              lock_rec_get_gap
0000000000adeccb l     F .text	0000000000000091              lock_rec_get_rec_not_gap
0000000000aded5c l     F .text	0000000000000091              lock_rec_get_insert_intention
0000000000adeded l     F .text	0000000000000161              lock_mode_stronger_or_eq
0000000000adef4e l     F .text	0000000000000161              lock_mode_compatible
0000000000adf0af l     F .text	0000000000000161              lock_rec_has_to_wait
0000000000adf32f l     F .text	0000000000000012              lock_rec_get_n_bits
0000000000adf341 l     F .text	00000000000000f9              lock_rec_set_nth_bit
0000000000adf48e l     F .text	00000000000000fb              lock_rec_reset_nth_bit
0000000000adf589 l     F .text	00000000000000d4              lock_rec_get_next_on_page_const
0000000000adf65d l     F .text	000000000000001a              lock_rec_get_next_on_page
0000000000adf677 l     F .text	00000000000000b9              lock_rec_get_first_on_page_addr
0000000000adf7a0 l     F .text	00000000000000d3              lock_rec_get_first_on_page
0000000000adf873 l     F .text	00000000000000ba              lock_rec_get_next
0000000000adf92d l     F .text	0000000000000097              lock_rec_get_first
0000000000adf9c4 l     F .text	00000000000000b1              lock_rec_bitmap_reset
0000000000adfa75 l     F .text	0000000000000079              lock_rec_copy
0000000000adfc1b l     F .text	00000000000000e4              lock_table_has
0000000000adfcff l     F .text	00000000000001cd              lock_rec_has_expl
0000000000adfecc l     F .text	00000000000001c5              lock_rec_other_has_expl_req
0000000000ae0091 l     F .text	0000000000000113              lock_rec_other_has_conflicting
0000000000ae01a4 l     F .text	00000000000000a6              lock_rec_find_similar_on_page
0000000000ae024a l     F .text	00000000000001a5              lock_sec_rec_some_has_impl_off_kernel
0000000000ae0485 l     F .text	0000000000000424              lock_rec_create
0000000000ae08a9 l     F .text	0000000000000341              lock_rec_enqueue_waiting
0000000000ae3b95 l     F .text	00000000000001aa              lock_deadlock_occurs
0000000000ae0bea l     F .text	0000000000000233              lock_rec_add_to_queue
0000000000ae0e1d l     F .text	00000000000002f9              lock_rec_lock_fast
0000000000ae1116 l     F .text	0000000000000335              lock_rec_lock_slow
0000000000ae144b l     F .text	0000000000000275              lock_rec_lock
0000000000ae16c0 l     F .text	0000000000000151              lock_rec_has_to_wait_in_queue
0000000000ae1811 l     F .text	000000000000014c              lock_grant
0000000000ae195d l     F .text	00000000000000f5              lock_rec_cancel
0000000000ae1a52 l     F .text	0000000000000335              lock_rec_dequeue_from_page
0000000000ae1d87 l     F .text	00000000000002d7              lock_rec_discard
0000000000ae205e l     F .text	0000000000000126              lock_rec_free_all_from_discard_page
0000000000ae2184 l     F .text	00000000000000f3              lock_rec_reset_and_release_wait
0000000000ae2277 l     F .text	000000000000013b              lock_rec_inherit_to_gap
0000000000ae23b2 l     F .text	00000000000000f6              lock_rec_inherit_to_gap_if_gap_lock
0000000000ae24a8 l     F .text	000000000000016c              lock_rec_move
0000000000ae39ec l     F .text	0000000000000068              lock_deadlock_start_print
0000000000ae3a54 l     F .text	000000000000004c              lock_deadlock_fputs
0000000000ae3aa0 l     F .text	0000000000000058              lock_deadlock_trx_print
0000000000ae3af8 l     F .text	000000000000009d              lock_deadlock_lock_print
0000000000ae3d3f l     F .text	0000000000000510              lock_deadlock_recursive
0000000000ae424f l     F .text	0000000000000373              lock_table_create
0000000000ae45c2 l     F .text	00000000000000cf              lock_table_pop_autoinc_locks
0000000000ae4691 l     F .text	00000000000001f8              lock_table_remove_autoinc_lock
0000000000ae4889 l     F .text	00000000000002f8              lock_table_remove_low
0000000000ae4b81 l     F .text	000000000000022c              lock_table_enqueue_waiting
0000000000ae4dad l     F .text	00000000000000c9              lock_table_other_has_incompatible
0000000000ae5059 l     F .text	00000000000000d9              lock_table_has_to_wait_in_queue
0000000000ae5132 l     F .text	00000000000000df              lock_table_dequeue
0000000000ae5760 l     F .text	0000000000000181              lock_remove_all_on_table_for_trx
0000000000ae614e l     F .text	00000000000000b4              lock_get_n_rec_locks
0000000000ae777a l     F .text	0000000000000185              lock_validate
0000000000ae697f l     F .text	000000000000018f              lock_table_queue_validate
0000000000ae6b0e l     F .text	0000000000000598              lock_rec_queue_validate
0000000000ae70a6 l     F .text	0000000000000476              lock_rec_validate_page
0000000000ae751c l     F .text	0000000000000143              lock_rec_validate
0000000000ae765f l     F .text	000000000000011b              lock_rec_block_validate
0000000000ae7d80 l     F .text	0000000000000214              lock_rec_convert_impl_to_expl
0000000000ae8d0d l     F .text	000000000000015c              lock_release_autoinc_last_lock
0000000000ae9114 l     F .text	0000000000000059              lock_get_table
0000000000000000 l    df *ABS*	0000000000000000              lock0iter.c
0000000000ae92f4 l     F .text	0000000000000048              lock_get_type_low
0000000000000000 l    df *ABS*	0000000000000000              log0log.c
0000000000ae950a l     F .text	0000000000000017              os_atomic_test_and_set
0000000000ae9521 l     F .text	0000000000000017              os_atomic_clear
0000000000ae9538 l     F .text	000000000000001b              ut_min
0000000000ae9553 l     F .text	0000000000000081              ut_uint64_align_down
0000000000ae95d4 l     F .text	00000000000000bc              ut_align
0000000000ae9690 l     F .text	00000000000000b4              ut_align_down
0000000000ae9744 l     F .text	0000000000000096              mach_write_to_2
0000000000ae97da l     F .text	000000000000002c              mach_read_from_2
0000000000ae9806 l     F .text	0000000000000082              mach_write_to_4
0000000000ae9888 l     F .text	0000000000000087              mach_read_from_4
0000000000ae990f l     F .text	0000000000000071              mach_write_to_8
0000000000ae9980 l     F .text	000000000000002d              ut_memcpy
0000000000ae99ad l     F .text	000000000000002d              ut_memmove
0000000000ae99da l     F .text	000000000000001e              mutex_test_and_set
0000000000ae99f8 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000ae9a17 l     F .text	000000000000004e              mutex_get_waiters
0000000000ae9a65 l     F .text	000000000000007b              mutex_exit_func
0000000000ae9ae0 l     F .text	00000000000000d1              mutex_enter_func
0000000000ae9bb1 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000ae9cbf l     F .text	0000000000000111              pfs_mutex_enter_nowait_func
0000000000ae9dd0 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000ae9e3d l     F .text	000000000000007c              pfs_mutex_create_func
0000000000ae9eb9 l     F .text	0000000000000079              pfs_mutex_free_func
0000000000ae9f32 l     F .text	0000000000000022              rw_lock_reset_waiter_flag
0000000000ae9f54 l     F .text	0000000000000058              rw_lock_lock_word_decr
0000000000ae9fac l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000ae9fce l     F .text	0000000000000072              rw_lock_s_lock_low
0000000000aea040 l     F .text	0000000000000053              rw_lock_s_lock_func
0000000000aea093 l     F .text	00000000000000b5              rw_lock_s_unlock_func
0000000000aea148 l     F .text	00000000000000e9              rw_lock_x_unlock_func
0000000000aea231 l     F .text	0000000000000079              pfs_rw_lock_create_func
0000000000aea2aa l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000aea3b0 l     F .text	0000000000000070              pfs_rw_lock_free_func
0000000000aea420 l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
0000000000aea526 l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
0000000000aea58d l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
0000000000aea5f4 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000aea62e l     F .text	0000000000000096              ut_fold_binary
0000000000aea6c4 l     F .text	0000000000000012              mem_block_get_len
0000000000aea6d6 l     F .text	0000000000000084              mem_block_set_free
0000000000aea75a l     F .text	0000000000000012              mem_block_get_free
0000000000aea76c l     F .text	0000000000000143              mem_heap_alloc
0000000000aea8af l     F .text	000000000000016b              mem_heap_create_func
0000000000aeaa1a l     F .text	00000000000000a3              mem_heap_free_func
0000000000aeaabd l     F .text	00000000000000fd              mem_alloc_func
0000000000aeabba l     F .text	000000000000003a              mem_free_func
0000000000aeabf4 l     F .text	0000000000000056              log_block_set_flush_bit
0000000000aeac4a l     F .text	000000000000002a              log_block_get_hdr_no
0000000000aeac74 l     F .text	0000000000000083              log_block_set_hdr_no
0000000000aeacf7 l     F .text	000000000000001e              log_block_get_data_len
0000000000aead15 l     F .text	000000000000002a              log_block_set_data_len
0000000000aead3f l     F .text	000000000000001e              log_block_get_first_rec_group
0000000000aead5d l     F .text	000000000000002a              log_block_set_first_rec_group
0000000000aead87 l     F .text	000000000000002a              log_block_set_checkpoint_no
0000000000aeadb1 l     F .text	000000000000001b              log_block_convert_lsn_to_no
0000000000aeadcc l     F .text	0000000000000083              log_block_calc_checksum
0000000000aeae4f l     F .text	000000000000002d              log_block_set_checksum
0000000000aeae7c l     F .text	0000000000000096              log_block_init
0000000000aeaf12 l     F .text	0000000000000010              recv_recovery_is_on
0000000000aeaf92 l     F .text	000000000000006b              log_buf_pool_get_oldest_modification
0000000000aeaffd l     F .text	00000000000003d5              log_buffer_extend
0000000000aebae0 l     F .text	0000000000000076              log_group_calc_size_offset
0000000000aebb56 l     F .text	000000000000007d              log_group_calc_real_offset
0000000000aebbd3 l     F .text	000000000000011e              log_group_calc_lsn_offset
0000000000aebe2b l     F .text	0000000000000259              log_calc_max_ages
0000000000aec8b3 l     F .text	0000000000000091              log_flush_do_unlocks
0000000000aec944 l     F .text	0000000000000115              log_group_check_flush_completion
0000000000aeca59 l     F .text	0000000000000171              log_sys_check_flush_completion
0000000000aedccc l     F .text	00000000000000a3              log_io_complete_checkpoint
0000000000aecc73 l     F .text	000000000000020f              log_group_file_header_flush
0000000000aece82 l     F .text	000000000000002d              log_block_store_checksum
0000000000aedafe l     F .text	000000000000009b              log_flush_margin
0000000000aedc04 l     F .text	00000000000000c8              log_complete_checkpoint
0000000000aedd6f l     F .text	0000000000000090              log_checkpoint_set_nth_group_info
0000000000aede95 l     F .text	0000000000000336              log_group_checkpoint
0000000000aee5c2 l     F .text	000000000000024f              log_checkpoint_margin
0000000000aef4df l     F .text	00000000000000c2              log_group_close
0000000000000000 l    df *ABS*	0000000000000000              log0recv.c
0000000000aef80f l     F .text	0000000000000017              os_atomic_test_and_set
0000000000aef826 l     F .text	0000000000000017              os_atomic_clear
0000000000aef83d l     F .text	0000000000000081              ut_uint64_align_down
0000000000aef8be l     F .text	0000000000000097              ut_uint64_align_up
0000000000aef955 l     F .text	00000000000000bc              ut_align
0000000000aefa11 l     F .text	0000000000000096              mach_write_to_2
0000000000aefaa7 l     F .text	000000000000002c              mach_read_from_2
0000000000aefad3 l     F .text	0000000000000082              mach_write_to_4
0000000000aefb55 l     F .text	0000000000000087              mach_read_from_4
0000000000aefbdc l     F .text	0000000000000071              mach_write_to_8
0000000000aefc4d l     F .text	000000000000003a              mach_read_from_8
0000000000aefc87 l     F .text	000000000000002d              ut_memcpy
0000000000aefcb4 l     F .text	000000000000002d              ut_memmove
0000000000aefce1 l     F .text	000000000000002d              ut_memcmp
0000000000aefd0e l     F .text	0000000000000057              ut_hash_ulint
0000000000aefd65 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000aefd9f l     F .text	0000000000000096              ut_fold_binary
0000000000aefe35 l     F .text	000000000000001e              mutex_test_and_set
0000000000aefe53 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000aefe72 l     F .text	000000000000004e              mutex_get_waiters
0000000000aefec0 l     F .text	000000000000007b              mutex_exit_func
0000000000aeff3b l     F .text	00000000000000d1              mutex_enter_func
0000000000af000c l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000af011a l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000af0187 l     F .text	000000000000007c              pfs_mutex_create_func
0000000000af0203 l     F .text	0000000000000079              pfs_mutex_free_func
0000000000af027c l     F .text	0000000000000012              mem_block_get_len
0000000000af028e l     F .text	0000000000000084              mem_block_set_free
0000000000af0312 l     F .text	0000000000000012              mem_block_get_free
0000000000af0324 l     F .text	0000000000000012              mem_block_get_start
0000000000af0336 l     F .text	0000000000000143              mem_heap_alloc
0000000000af0479 l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000af05b8 l     F .text	000000000000004d              mem_heap_empty
0000000000af0605 l     F .text	000000000000016b              mem_heap_create_func
0000000000af0770 l     F .text	00000000000000a3              mem_heap_free_func
0000000000af0813 l     F .text	00000000000000fd              mem_alloc_func
0000000000af0910 l     F .text	000000000000003a              mem_free_func
0000000000af094a l     F .text	0000000000000072              mem_heap_get_size
0000000000af09bc l     F .text	00000000000000bc              hash_get_nth_cell
0000000000af0a78 l     F .text	0000000000000079              hash_get_n_cells
0000000000af0af1 l     F .text	000000000000008c              hash_calc_hash
0000000000af0b7d l     F .text	00000000000000dc              hash_get_mutex_no
0000000000af0c59 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000af0d25 l     F .text	000000000000009f              hash_get_mutex
0000000000af0dc4 l     F .text	0000000000000058              rw_lock_lock_word_decr
0000000000af0e1c l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000af0e3e l     F .text	0000000000000072              rw_lock_s_lock_low
0000000000af0eb0 l     F .text	0000000000000053              rw_lock_s_lock_func
0000000000af0f03 l     F .text	00000000000000b5              rw_lock_s_unlock_func
0000000000af0fb8 l     F .text	0000000000000106              pfs_rw_lock_s_lock_func
0000000000af10be l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
0000000000af1125 l     F .text	0000000000000074              dyn_array_create
0000000000af1199 l     F .text	0000000000000096              mtr_start
0000000000af122f l     F .text	0000000000000123              mtr_set_log_mode
0000000000af1352 l     F .text	0000000000000030              log_block_get_flush_bit
0000000000af1382 l     F .text	000000000000002a              log_block_get_hdr_no
0000000000af13ac l     F .text	0000000000000083              log_block_set_hdr_no
0000000000af142f l     F .text	000000000000001e              log_block_get_data_len
0000000000af144d l     F .text	000000000000002a              log_block_set_data_len
0000000000af1477 l     F .text	000000000000001e              log_block_get_first_rec_group
0000000000af1495 l     F .text	000000000000002a              log_block_set_first_rec_group
0000000000af14bf l     F .text	000000000000001e              log_block_get_checkpoint_no
0000000000af14dd l     F .text	000000000000001b              log_block_convert_lsn_to_no
0000000000af14f8 l     F .text	0000000000000083              log_block_calc_checksum
0000000000af157b l     F .text	0000000000000020              log_block_get_checksum
0000000000af159b l     F .text	0000000000000099              log_block_init
0000000000af1634 l     F .text	0000000000000272              buf_flush_recv_note_modification
0000000000af1924 l     F .text	000000000000001a              buf_pool_from_block
0000000000af1993 l     F .text	000000000000001a              buf_block_get_state
0000000000af18a6 l     F .text	0000000000000010              buf_pool_get_curr_size
0000000000af18b6 l     F .text	000000000000006e              buf_pool_from_bpage
0000000000af193e l     F .text	000000000000000f              buf_pool_get_n_pages
0000000000af194d l     F .text	0000000000000046              buf_page_get_state
0000000000af19ad l     F .text	000000000000006a              buf_page_in_file
0000000000af1a17 l     F .text	0000000000000066              buf_page_get_mutex
0000000000af1a7d l     F .text	000000000000007a              buf_block_get_space
0000000000af1af7 l     F .text	000000000000007b              buf_block_get_page_no
0000000000af1b72 l     F .text	0000000000000027              buf_page_address_fold
0000000000af1b99 l     F .text	000000000000006d              buf_page_get_newest_modification
0000000000af1c06 l     F .text	0000000000000067              buf_pool_get
0000000000af1c6d l     F .text	00000000000002b9              buf_page_hash_get_low
0000000000af1f26 l     F .text	0000000000000074              buf_page_hash_get
0000000000af1f9a l     F .text	00000000000000e6              buf_page_peek
0000000000af2080 l     F .text	000000000000004c              dict_table_is_comp
0000000000af20cc l     F .text	0000000000000083              page_header_get_field
0000000000af214f l     F .text	0000000000000024              page_is_comp
00000000013938c8 l     O .bss	0000000000000008              recv_log_scan_is_startup_type
00000000013938d0 l     O .bss	0000000000000008              recv_scan_print_counter
00000000013938d8 l     O .bss	0000000000000008              recv_previous_parsed_rec_type
00000000013938e0 l     O .bss	0000000000000008              recv_previous_parsed_rec_offset
00000000013938e8 l     O .bss	0000000000000008              recv_previous_parsed_rec_is_multi
0000000000af265a l     F .text	00000000000000f7              recv_sys_empty_hash
0000000000af2751 l     F .text	00000000000000ee              recv_sys_debug_free
0000000000af283f l     F .text	0000000000000241              recv_truncate_group
0000000000af2a80 l     F .text	000000000000012c              recv_copy_group
0000000000af2bac l     F .text	0000000000000181              recv_synchronize_groups
0000000000af2d2d l     F .text	000000000000008f              recv_check_cp_is_consistent
0000000000af2dbc l     F .text	0000000000000212              recv_find_max_checkpoint
0000000000af2fce l     F .text	0000000000000067              log_block_checksum_is_ok_or_old_format
0000000000af3035 l     F .text	0000000000001153              recv_parse_or_apply_log_rec_body
0000000000af4188 l     F .text	0000000000000025              recv_fold
0000000000af41ad l     F .text	0000000000000044              recv_hash
0000000000af41f1 l     F .text	0000000000000082              recv_get_fil_addr_struct
0000000000af4273 l     F .text	00000000000003f4              recv_add_to_hash_table
0000000000af4667 l     F .text	0000000000000086              recv_data_copy_to_buf
0000000000af4d93 l     F .text	0000000000000176              recv_read_in_area
0000000000af5508 l     F .text	000000000000014d              recv_parse_log_rec
0000000000af5655 l     F .text	000000000000008d              recv_calc_lsn_on_data_add
0000000000af56e2 l     F .text	0000000000000214              recv_report_corrupt_log
0000000000af58f6 l     F .text	0000000000000658              recv_parse_log_recs
0000000000af5f4e l     F .text	000000000000026a              recv_sys_add_to_parsing_buf
0000000000af61b8 l     F .text	00000000000000a0              recv_sys_justify_left_parsing_buf
0000000000af6925 l     F .text	00000000000000de              recv_init_crash_recovery
0000000000af67fe l     F .text	0000000000000127              recv_group_scan_log_recs
0000000000000000 l    df *ABS*	0000000000000000              mach0data.c
0000000000af756c l     F .text	0000000000000045              mach_read_from_1
0000000000af75b1 l     F .text	000000000000002c              mach_read_from_2
0000000000af75dd l     F .text	0000000000000072              mach_read_from_3
0000000000af764f l     F .text	0000000000000087              mach_read_from_4
0000000000000000 l    df *ABS*	0000000000000000              mem0mem.c
0000000000af78ce l     F .text	0000000000000017              os_atomic_test_and_set
0000000000af78e5 l     F .text	0000000000000017              os_atomic_clear
0000000000af78fc l     F .text	000000000000001e              mutex_test_and_set
0000000000af791a l     F .text	000000000000001f              mutex_reset_lock_word
0000000000af7939 l     F .text	000000000000004e              mutex_get_waiters
0000000000af7987 l     F .text	000000000000007b              mutex_exit_func
0000000000af7a02 l     F .text	00000000000000d1              mutex_enter_func
0000000000af7ad3 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000af7be1 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000af7c4e l     F .text	000000000000004c              mem_block_set_len
0000000000af7c9a l     F .text	0000000000000012              mem_block_get_len
0000000000af7cac l     F .text	000000000000007c              mem_block_set_type
0000000000af7d28 l     F .text	0000000000000084              mem_block_set_free
0000000000af7dac l     F .text	0000000000000012              mem_block_get_free
0000000000af7dbe l     F .text	000000000000004c              mem_block_set_start
0000000000af7e0a l     F .text	0000000000000143              mem_heap_alloc
0000000000af7f4d l     F .text	000000000000006e              buf_pool_from_bpage
0000000000af7fbb l     F .text	0000000000000046              buf_page_get_state
0000000000af8001 l     F .text	000000000000001a              buf_block_get_state
0000000000af801b l     F .text	0000000000000129              buf_block_free
0000000000af8335 l     F .text	0000000000000108              mem_heap_print
0000000000af87db l     F .text	000000000000009e              mem_print_info_low
0000000000af89b6 l     F .text	00000000000002e8              mem_heap_printf_low
0000000000000000 l    df *ABS*	0000000000000000              mem0pool.c
0000000000af9581 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000af9598 l     F .text	0000000000000017              os_atomic_clear
0000000000af95af l     F .text	000000000000001b              ut_max
0000000000af95ca l     F .text	000000000000006a              ut_2_log
0000000000af9634 l     F .text	000000000000001b              ut_2_exp
0000000000af964f l     F .text	000000000000001e              mutex_test_and_set
0000000000af966d l     F .text	000000000000001f              mutex_reset_lock_word
0000000000af968c l     F .text	000000000000004e              mutex_get_waiters
0000000000af96da l     F .text	000000000000007b              mutex_exit_func
0000000000af9755 l     F .text	00000000000000d1              mutex_enter_func
0000000000af9826 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000af9934 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000af99a1 l     F .text	000000000000007c              pfs_mutex_create_func
0000000000af9a1d l     F .text	0000000000000039              mem_pool_mutex_enter
0000000000af9a56 l     F .text	000000000000002d              mem_pool_mutex_exit
0000000000af9a83 l     F .text	0000000000000015              mem_area_get_size
0000000000af9a98 l     F .text	0000000000000027              mem_area_set_size
0000000000af9abf l     F .text	0000000000000014              mem_area_get_free
0000000000af9ad3 l     F .text	0000000000000028              mem_area_set_free
0000000000af9ec8 l     F .text	0000000000000737              mem_pool_fill_free_list
0000000000afaab8 l     F .text	00000000000000cc              mem_area_get_buddy
0000000000000000 l    df *ABS*	0000000000000000              mtr0log.c
0000000000afb828 l     F .text	00000000000000b4              ut_align_down
0000000000afb8dc l     F .text	00000000000000b2              ut_align_offset
0000000000afb98e l     F .text	0000000000000080              mach_write_to_1
0000000000afba0e l     F .text	0000000000000045              mach_read_from_1
0000000000afba53 l     F .text	0000000000000096              mach_write_to_2
0000000000afbae9 l     F .text	000000000000002c              mach_read_from_2
0000000000afbb15 l     F .text	00000000000000a8              mach_write_to_3
0000000000afbbbd l     F .text	0000000000000072              mach_read_from_3
0000000000afbc2f l     F .text	0000000000000082              mach_write_to_4
0000000000afbcb1 l     F .text	0000000000000087              mach_read_from_4
0000000000afbd38 l     F .text	0000000000000116              mach_write_compressed
0000000000afbe4e l     F .text	0000000000000050              mach_get_compressed_size
0000000000afbe9e l     F .text	00000000000000f2              mach_read_compressed
0000000000afbf90 l     F .text	0000000000000071              mach_write_to_8
0000000000afc001 l     F .text	000000000000007f              mach_ull_write_compressed
0000000000afc080 l     F .text	000000000000013e              mach_ull_parse_compressed
0000000000afc1be l     F .text	0000000000000049              dyn_block_get_used
0000000000afc207 l     F .text	00000000000001a0              dyn_array_push
0000000000afc3a7 l     F .text	0000000000000205              dyn_array_open
0000000000afc5ac l     F .text	000000000000013b              dyn_array_close
0000000000afc6e7 l     F .text	000000000000015f              dyn_array_get_element
0000000000afc846 l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000afc91f l     F .text	0000000000000075              dyn_push_string
0000000000afc994 l     F .text	0000000000000171              mtr_memo_push
0000000000afcb05 l     F .text	0000000000000131              mtr_memo_contains
0000000000afcc36 l     F .text	00000000000000b4              mtr_get_log_mode
0000000000afccea l     F .text	000000000000005b              mlog_open
0000000000afcd45 l     F .text	000000000000006c              mlog_close
0000000000afcdb1 l     F .text	0000000000000227              mlog_write_initial_log_record_fast
0000000000afcfd8 l     F .text	0000000000000085              dict_index_is_clust
0000000000afd05d l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000afd12e l     F .text	000000000000004c              dict_table_is_comp
0000000000afd17a l     F .text	0000000000000087              dict_index_get_n_fields
0000000000afd201 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000afd2b9 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000afd38d l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000afd45e l     F .text	0000000000000042              dict_field_get_col
0000000000afd4a0 l     F .text	000000000000002d              dict_index_get_nth_col
0000000000afd4cd l     F .text	000000000000001f              page_align
0000000000afd4ec l     F .text	000000000000001f              page_offset
0000000000afd50b l     F .text	0000000000000083              page_header_get_field
0000000000afd58e l     F .text	0000000000000024              page_is_comp
0000000000afd5b2 l     F .text	0000000000000022              page_rec_is_comp
0000000000000000 l    df *ABS*	0000000000000000              mtr0mtr.c
0000000000afe847 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000afe85e l     F .text	0000000000000017              os_atomic_clear
0000000000afe875 l     F .text	00000000000000b4              ut_align_down
0000000000afe929 l     F .text	0000000000000080              mach_write_to_1
0000000000afe9a9 l     F .text	0000000000000045              mach_read_from_1
0000000000afe9ee l     F .text	0000000000000096              mach_write_to_2
0000000000afea84 l     F .text	000000000000002c              mach_read_from_2
0000000000afeab0 l     F .text	0000000000000082              mach_write_to_4
0000000000afeb32 l     F .text	0000000000000087              mach_read_from_4
0000000000afebb9 l     F .text	000000000000001e              mutex_test_and_set
0000000000afebd7 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000afebf6 l     F .text	000000000000004e              mutex_get_waiters
0000000000afec44 l     F .text	000000000000007b              mutex_exit_func
0000000000afecbf l     F .text	00000000000000d1              mutex_enter_func
0000000000afed90 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000afee9e l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000afef0b l     F .text	00000000000000a3              mem_heap_free_func
0000000000afefae l     F .text	0000000000000049              dyn_block_get_used
0000000000afeff7 l     F .text	0000000000000043              dyn_block_get_data
0000000000aff03a l     F .text	0000000000000045              dyn_array_free
0000000000aff07f l     F .text	00000000000001a0              dyn_array_push
0000000000aff21f l     F .text	000000000000015f              dyn_array_get_element
0000000000aff37e l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000aff457 l     F .text	0000000000000022              rw_lock_reset_waiter_flag
0000000000aff479 l     F .text	0000000000000022              rw_lock_lock_word_incr
0000000000aff49b l     F .text	00000000000000b5              rw_lock_s_unlock_func
0000000000aff550 l     F .text	00000000000000e9              rw_lock_x_unlock_func
0000000000aff639 l     F .text	0000000000000067              pfs_rw_lock_x_unlock_func
0000000000aff6a0 l     F .text	0000000000000067              pfs_rw_lock_s_unlock_func
0000000000aff707 l     F .text	0000000000000131              mtr_memo_contains
0000000000aff838 l     F .text	00000000000000b4              mtr_get_log_mode
0000000000aff8ec l     F .text	000000000000002a              log_block_set_data_len
0000000000aff916 l     F .text	00000000000001ad              log_reserve_and_write_fast
0000000000affac3 l     F .text	000000000000001d              log_release
0000000000affae0 l     F .text	00000000000002e7              buf_flush_note_modification
0000000000affe35 l     F .text	000000000000001a              buf_pool_from_block
0000000000affe95 l     F .text	000000000000001a              buf_block_get_state
0000000000affdc7 l     F .text	000000000000006e              buf_pool_from_bpage
0000000000affe4f l     F .text	0000000000000046              buf_page_get_state
0000000000affeaf l     F .text	0000000000000148              buf_page_release
0000000000affff7 l     F .text	00000000000000cc              mlog_catenate_ulint
0000000000b000c3 l     F .text	0000000000000145              mtr_memo_slot_release_func
0000000000b00208 l     F .text	000000000000017a              mtr_memo_pop_all
0000000000b00382 l     F .text	000000000000012b              mtr_memo_slot_note_modification
0000000000b004ad l     F .text	00000000000000fe              mtr_memo_note_modifications
0000000000b005ab l     F .text	0000000000000235              mtr_log_reserve_and_write
0000000000000000 l    df *ABS*	0000000000000000              os0file.c
0000000000b00ce9 l     F .text	000000000000001b              ut_min
0000000000b00d04 l     F .text	000000000000011b              pfs_os_file_read_func
0000000000b00e1f l     F .text	0000000000000131              pfs_os_file_write_func
0000000000b00f50 l     F .text	00000000000000e3              pfs_os_file_flush_func
0000000000b01033 l     F .text	00000000000000bc              ut_align
0000000000b010ef l     F .text	000000000000002d              ut_memcpy
0000000000b0111c l     F .text	0000000000000012              mem_block_get_len
0000000000b0112e l     F .text	0000000000000084              mem_block_set_free
0000000000b011b2 l     F .text	0000000000000012              mem_block_get_free
0000000000b011c4 l     F .text	0000000000000143              mem_heap_alloc
0000000000b01307 l     F .text	000000000000016b              mem_heap_create_func
0000000000b01472 l     F .text	00000000000000a3              mem_heap_free_func
0000000000b01515 l     F .text	00000000000000fd              mem_alloc_func
0000000000b01612 l     F .text	000000000000003a              mem_free_func
0000000000b0164c l     F .text	0000000000000055              mem_strdup
0000000000b016a1 l     F .text	000000000000005c              mem_strdupl
0000000000b016fd l     F .text	0000000000000076              io_prep_pread
0000000000b01773 l     F .text	0000000000000076              io_prep_pwrite
0000000001393968 l     O .bss	0000000000000008              os_aio_segment_wait_events
0000000001393970 l     O .bss	0000000000000008              os_aio_read_array
0000000001393978 l     O .bss	0000000000000008              os_aio_write_array
0000000001393980 l     O .bss	0000000000000008              os_aio_ibuf_array
0000000001393988 l     O .bss	0000000000000008              os_aio_log_array
0000000001393990 l     O .bss	0000000000000008              os_aio_sync_array
00000000010f6260 l     O .data	0000000000000008              os_aio_n_segments
0000000001393998 l     O .bss	0000000000000008              os_aio_recommend_sleep_for_read_threads
00000000013939a0 l     O .bss	0000000000000008              os_file_count_mutex
00000000010f6268 l     O .data	0000000000000004              os_aio_validate_count.13620
0000000000b01a0e l     F .text	00000000000001fd              os_file_handle_error_cond_exit
0000000000b01c0b l     F .text	000000000000002a              os_file_handle_error
0000000000b01c35 l     F .text	000000000000002a              os_file_handle_error_no_exit
0000000000b01c5f l     F .text	00000000000000dd              os_file_lock
0000000000b02e70 l     F .text	00000000000000cb              os_file_fsync
0000000000b02fe8 l     F .text	0000000000000119              os_file_pread
0000000000b03101 l     F .text	0000000000000119              os_file_pwrite
0000000000b039ac l     F .text	000000000000005c              os_aio_array_get_nth_slot
0000000000b03a08 l     F .text	00000000000001b3              os_aio_linux_create_io_ctx
0000000000b03bbb l     F .text	0000000000000240              os_aio_native_aio_supported
0000000000b03dfb l     F .text	0000000000000287              os_aio_array_create
0000000000b04082 l     F .text	0000000000000088              os_aio_array_free
0000000000b0459e l     F .text	0000000000000110              os_aio_get_segment_no_from_slot
0000000000b046ae l     F .text	00000000000000e3              os_aio_get_array_and_local_segment
0000000000b04791 l     F .text	000000000000035c              os_aio_array_reserve_slot
0000000000b04aed l     F .text	00000000000001d2              os_aio_array_free_slot
0000000000b04cbf l     F .text	000000000000012d              os_aio_simulated_wake_handler_thread
0000000000b04e41 l     F .text	000000000000014a              os_aio_linux_dispatch
0000000000b053f3 l     F .text	00000000000003a2              os_aio_linux_collect
0000000000b0676e l     F .text	0000000000000179              os_aio_array_validate
0000000000b0693d l     F .text	0000000000000161              os_aio_print_segment_info
0000000000000000 l    df *ABS*	0000000000000000              os0proc.c
0000000000000000 l    df *ABS*	0000000000000000              os0sync.c
00000000013939d0 l     O .bss	0000000000000008              os_sync_mutex_inited
00000000013939d8 l     O .bss	0000000000000008              os_sync_free_called
00000000013939e0 l     O .bss	0000000000000018              os_event_list
0000000001393a00 l     O .bss	0000000000000018              os_mutex_list
0000000000d36770 l     O .rodata	0000000000000008              MICROSECS_IN_A_SECOND
0000000000b078e4 l     F .text	0000000000000077              os_cond_init
0000000000b0795b l     F .text	00000000000000aa              os_cond_wait_timed
0000000000b07a05 l     F .text	00000000000000b3              os_cond_wait
0000000000b07ab8 l     F .text	0000000000000072              os_cond_broadcast
0000000000b07b2a l     F .text	0000000000000045              os_cond_destroy
0000000000b07b6f l     F .text	0000000000000007              os_cond_module_init
0000000000b07f48 l     F .text	000000000000016a              os_event_free_internal
0000000000000000 l    df *ABS*	0000000000000000              os0thread.c
0000000000000000 l    df *ABS*	0000000000000000              page0cur.c
0000000000b08d48 l     F .text	000000000000001b              ut_min
0000000000b08d63 l     F .text	000000000000001b              ut_max
0000000000b08d7e l     F .text	000000000000008f              ut_pair_min
0000000000b08e0d l     F .text	00000000000000b4              ut_align_down
0000000000b08ec1 l     F .text	00000000000000b2              ut_align_offset
0000000000b08f73 l     F .text	0000000000000080              mach_write_to_1
0000000000b08ff3 l     F .text	0000000000000045              mach_read_from_1
0000000000b09038 l     F .text	0000000000000096              mach_write_to_2
0000000000b090ce l     F .text	000000000000002c              mach_read_from_2
0000000000b090fa l     F .text	00000000000000a8              mach_write_to_3
0000000000b091a2 l     F .text	0000000000000082              mach_write_to_4
0000000000b09224 l     F .text	0000000000000087              mach_read_from_4
0000000000b092ab l     F .text	0000000000000116              mach_write_compressed
0000000000b093c1 l     F .text	000000000000002d              ut_memcpy
0000000000b093ee l     F .text	0000000000000012              mem_block_get_len
0000000000b09400 l     F .text	0000000000000084              mem_block_set_free
0000000000b09484 l     F .text	0000000000000012              mem_block_get_free
0000000000b09496 l     F .text	0000000000000143              mem_heap_alloc
0000000000b095d9 l     F .text	000000000000016b              mem_heap_create_func
0000000000b09744 l     F .text	00000000000000a3              mem_heap_free_func
0000000000b097e7 l     F .text	00000000000000fd              mem_alloc_func
0000000000b098e4 l     F .text	000000000000003a              mem_free_func
0000000000b0991e l     F .text	0000000000000049              dyn_block_get_used
0000000000b09967 l     F .text	00000000000001a0              dyn_array_push
0000000000b09b07 l     F .text	0000000000000205              dyn_array_open
0000000000b09d0c l     F .text	000000000000013b              dyn_array_close
0000000000b09e47 l     F .text	000000000000015f              dyn_array_get_element
0000000000b09fa6 l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000b0a07f l     F .text	0000000000000171              mtr_memo_push
0000000000b0a1f0 l     F .text	0000000000000131              mtr_memo_contains
0000000000b0a321 l     F .text	00000000000000b4              mtr_get_log_mode
0000000000b0a3d5 l     F .text	0000000000000123              mtr_set_log_mode
0000000000b0a4f8 l     F .text	0000000000000046              buf_page_get_state
0000000000b0a53e l     F .text	000000000000001a              buf_block_get_state
0000000000b0a558 l     F .text	00000000000000ea              buf_block_get_frame
0000000000b0a642 l     F .text	000000000000003a              buf_frame_get_page_zip
0000000000b0a67c l     F .text	0000000000000025              buf_block_modify_clock_inc
0000000000b0a6a1 l     F .text	0000000000000043              dtuple_get_n_fields_cmp
0000000000b0a6e4 l     F .text	0000000000000043              dtuple_get_n_fields
0000000000b0a727 l     F .text	0000000000000114              dict_col_get_clust_pos
0000000000b0a83b l     F .text	0000000000000085              dict_index_is_clust
0000000000b0a8c0 l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000b0a991 l     F .text	000000000000014a              dict_table_get_sys_col
0000000000b0aadb l     F .text	00000000000000c5              dict_table_get_sys_col_no
0000000000b0aba0 l     F .text	000000000000004c              dict_table_is_comp
0000000000b0abec l     F .text	0000000000000087              dict_index_get_n_fields
0000000000b0ac73 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000b0ad2b l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000b0adff l     F .text	0000000000000118              dict_index_get_sys_col_pos
0000000000b0af17 l     F .text	000000000000006d              rec_get_bit_field_1
0000000000b0af84 l     F .text	00000000000001bd              rec_set_bit_field_1
0000000000b0b141 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000b0b1ae l     F .text	000000000000024e              rec_set_bit_field_2
0000000000b0b3fc l     F .text	000000000000018f              rec_get_next_ptr_const
0000000000b0b58b l     F .text	0000000000000025              rec_get_next_ptr
0000000000b0b5b0 l     F .text	0000000000000161              rec_get_next_offs
0000000000b0b711 l     F .text	0000000000000087              rec_set_next_offs_old
0000000000b0b798 l     F .text	00000000000000ce              rec_set_next_offs_new
0000000000b0b866 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000b0b921 l     F .text	0000000000000091              rec_get_status
0000000000b0b9b2 l     F .text	00000000000000f1              rec_get_n_fields
0000000000b0baa3 l     F .text	0000000000000029              rec_get_n_owned_old
0000000000b0bacc l     F .text	0000000000000033              rec_set_n_owned_old
0000000000b0baff l     F .text	0000000000000029              rec_get_n_owned_new
0000000000b0bb28 l     F .text	0000000000000072              rec_set_n_owned_new
0000000000b0bb9a l     F .text	000000000000003b              rec_get_info_bits
0000000000b0bbd5 l     F .text	0000000000000033              rec_set_info_bits_old
0000000000b0bc08 l     F .text	0000000000000033              rec_set_info_bits_new
0000000000b0bc3b l     F .text	0000000000000033              rec_set_status
0000000000b0bc6e l     F .text	0000000000000094              rec_get_info_and_status_bits
0000000000b0bd02 l     F .text	0000000000000046              rec_set_info_and_status_bits
0000000000b0bd48 l     F .text	0000000000000024              rec_get_node_ptr_flag
0000000000b0bd6c l     F .text	0000000000000029              rec_get_heap_no_old
0000000000b0bd95 l     F .text	0000000000000033              rec_set_heap_no_old
0000000000b0bdc8 l     F .text	0000000000000029              rec_get_heap_no_new
0000000000b0bdf1 l     F .text	0000000000000033              rec_set_heap_no_new
0000000000b0be24 l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000b0be9b l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000b0bf13 l     F .text	00000000000000ed              rec_offs_n_fields
0000000000b0c000 l     F .text	00000000000002a6              rec_offs_validate
0000000000b0c2a6 l     F .text	000000000000010f              rec_offs_make_valid
0000000000b0c3b5 l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000b0c4c3 l     F .text	000000000000005f              rec_offs_comp
0000000000b0c522 l     F .text	00000000000000ae              rec_offs_data_size
0000000000b0c5d0 l     F .text	000000000000009f              rec_offs_extra_size
0000000000b0c66f l     F .text	0000000000000032              rec_offs_size
0000000000b0c6a1 l     F .text	0000000000000068              rec_get_end
0000000000b0c709 l     F .text	000000000000006b              rec_get_start
0000000000b0c774 l     F .text	0000000000000127              rec_copy
0000000000b0c89b l     F .text	000000000000005b              mlog_open
0000000000b0c8f6 l     F .text	000000000000006c              mlog_close
0000000000b0c962 l     F .text	0000000000000227              mlog_write_initial_log_record_fast
0000000000b0cb89 l     F .text	00000000000000b3              page_zip_get_size
0000000000b0cc3c l     F .text	00000000000001c3              page_zip_simple_validate
0000000000b0cdff l     F .text	0000000000000133              page_zip_get_trailer_len
0000000000b0d542 l     F .text	000000000000001e              page_is_leaf
0000000000b0db74 l     F .text	0000000000000024              page_dir_get_n_heap
0000000000b0cf32 l     F .text	00000000000000a6              page_zip_available
0000000000b0cfd8 l     F .text	0000000000000109              page_zip_write_header
0000000000b0d100 l     F .text	000000000000001f              page_offset
0000000000b0d0e1 l     F .text	000000000000001f              page_align
0000000000b0d11f l     F .text	0000000000000083              page_header_get_field
0000000000b0d1a2 l     F .text	0000000000000149              page_header_set_field
0000000000b0d2eb l     F .text	00000000000000f4              page_header_get_offs
0000000000b0d3df l     F .text	000000000000011d              page_header_set_ptr
0000000000b0d4fc l     F .text	0000000000000024              page_is_comp
0000000000b0d520 l     F .text	0000000000000022              page_rec_is_comp
0000000000b0d560 l     F .text	000000000000008f              page_get_infimum_offset
0000000000b0d5ef l     F .text	000000000000008f              page_get_supremum_offset
0000000000b0d67e l     F .text	00000000000000b9              page_rec_is_user_rec_low
0000000000b0d737 l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000b0d7d0 l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000b0d869 l     F .text	0000000000000022              page_rec_is_user_rec
0000000000b0d88b l     F .text	0000000000000022              page_rec_is_supremum
0000000000b0d8ad l     F .text	0000000000000022              page_rec_is_infimum
0000000000b0d8cf l     F .text	0000000000000025              page_rec_get_nth
0000000000b0d8f4 l     F .text	0000000000000163              page_cmp_dtuple_rec_with_match
0000000000b0da57 l     F .text	0000000000000056              page_get_page_no
0000000000b0daad l     F .text	0000000000000056              page_get_space_id
0000000000b0db03 l     F .text	000000000000001f              page_get_n_recs
0000000000b0db22 l     F .text	000000000000001f              page_dir_get_n_slots
0000000000b0db41 l     F .text	0000000000000033              page_dir_set_n_slots
0000000000b0db98 l     F .text	00000000000000d2              page_dir_set_n_heap
0000000000b0dc6a l     F .text	0000000000000067              page_dir_get_nth_slot
0000000000b0dcd1 l     F .text	00000000000000d9              page_rec_check
0000000000b0ddaa l     F .text	0000000000000032              page_dir_slot_get_rec
0000000000b0dddc l     F .text	0000000000000068              page_dir_slot_set_rec
0000000000b0de44 l     F .text	0000000000000049              page_dir_slot_get_n_owned
0000000000b0de8d l     F .text	0000000000000091              page_dir_slot_set_n_owned
0000000000b0df1e l     F .text	0000000000000149              page_rec_get_next_low
0000000000b0e067 l     F .text	000000000000002c              page_rec_get_next
0000000000b0e093 l     F .text	000000000000002c              page_rec_get_next_const
0000000000b0e0bf l     F .text	00000000000001b7              page_rec_set_next
0000000000b0e276 l     F .text	0000000000000190              page_rec_get_prev_const
0000000000b0e406 l     F .text	000000000000001a              page_rec_get_prev
0000000000b0e420 l     F .text	00000000000000a0              page_rec_find_owner_rec
0000000000b0e4c0 l     F .text	000000000000002b              page_rec_get_base_extra_size
0000000000b0e4eb l     F .text	000000000000016f              page_mem_alloc_free
0000000000b0e65a l     F .text	0000000000000161              page_mem_free
0000000000b0e7bb l     F .text	0000000000000096              page_cur_get_page
0000000000b0e851 l     F .text	000000000000008f              page_cur_get_block
0000000000b0e8e0 l     F .text	000000000000003a              page_cur_get_page_zip
0000000000b0e91a l     F .text	000000000000005b              page_cur_set_before_first
0000000000b0e975 l     F .text	0000000000000096              page_cur_is_after_last
0000000000b0ea0b l     F .text	00000000000000d0              page_cur_position
0000000000b0eadb l     F .text	000000000000005f              page_cur_move_to_next
0000000000b0eb3a l     F .text	000000000000008e              page_cur_rec_insert
0000000000b0ebc8 l     F .text	0000000000000050              page_cur_lcg_prng
0000000001393a18 l     O .bss	0000000000000008              initialized.16805
0000000001393a20 l     O .bss	0000000000000008              lcg_current.16804
0000000000b0ec18 l     F .text	00000000000003ee              page_cur_try_search_shortcut
0000000000b0f8cd l     F .text	00000000000007d4              page_cur_insert_rec_write_log
0000000000b112f5 l     F .text	000000000000017c              page_cur_insert_rec_zip_reorg
0000000000b1221d l     F .text	00000000000000d2              page_copy_rec_list_to_created_page_write_log
0000000000b12c4d l     F .text	00000000000000e6              page_cur_delete_rec_write_log
0000000000000000 l    df *ABS*	0000000000000000              page0page.c
0000000000b132d5 l     F .text	000000000000001b              ut_max
0000000000b132f0 l     F .text	00000000000000b4              ut_align_down
0000000000b133a4 l     F .text	00000000000000b2              ut_align_offset
0000000000b13456 l     F .text	0000000000000080              mach_write_to_1
0000000000b134d6 l     F .text	0000000000000045              mach_read_from_1
0000000000b1351b l     F .text	0000000000000096              mach_write_to_2
0000000000b135b1 l     F .text	000000000000002c              mach_read_from_2
0000000000b135dd l     F .text	0000000000000048              mach_encode_2
0000000000b13625 l     F .text	000000000000001c              mach_decode_2
0000000000b13641 l     F .text	0000000000000082              mach_write_to_4
0000000000b136c3 l     F .text	0000000000000087              mach_read_from_4
0000000000b1374a l     F .text	0000000000000071              mach_write_to_8
0000000000b137bb l     F .text	000000000000003a              mach_read_from_8
0000000000b137f5 l     F .text	0000000000000012              mem_block_get_len
0000000000b13807 l     F .text	0000000000000084              mem_block_set_free
0000000000b1388b l     F .text	0000000000000012              mem_block_get_free
0000000000b1389d l     F .text	000000000000009f              mem_heap_zalloc
0000000000b1393c l     F .text	0000000000000143              mem_heap_alloc
0000000000b13a7f l     F .text	000000000000016b              mem_heap_create_func
0000000000b13bea l     F .text	00000000000000a3              mem_heap_free_func
0000000000b13c8d l     F .text	0000000000000049              dyn_block_get_used
0000000000b13cd6 l     F .text	000000000000013b              dyn_array_close
0000000000b13e11 l     F .text	000000000000015f              dyn_array_get_element
0000000000b13f70 l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000b14049 l     F .text	0000000000000131              mtr_memo_contains
0000000000b1417a l     F .text	00000000000000b4              mtr_get_log_mode
0000000000b1422e l     F .text	0000000000000123              mtr_set_log_mode
0000000000b14351 l     F .text	0000000000000046              buf_page_get_state
0000000000b14397 l     F .text	000000000000001a              buf_block_get_state
0000000000b143b1 l     F .text	00000000000000ea              buf_block_get_frame
0000000000b1449b l     F .text	000000000000003a              buf_frame_get_page_zip
0000000000b144d5 l     F .text	0000000000000025              buf_block_modify_clock_inc
0000000000b144fa l     F .text	0000000000000015              dtype_get_charset_coll
0000000000b1450f l     F .text	000000000000010a              dtype_get_mblen
0000000000b14619 l     F .text	00000000000000ce              dtype_set_mbminmaxlen
0000000000b146e7 l     F .text	00000000000000a5              dtype_set_mblen
0000000000b1478c l     F .text	00000000000000b8              dtype_set
0000000000b14844 l     F .text	0000000000000043              dfield_get_type
0000000000b14887 l     F .text	000000000000005b              dfield_set_len
0000000000b148e2 l     F .text	000000000000006a              dfield_set_data
0000000000b1494c l     F .text	000000000000004b              dtuple_set_info_bits
0000000000b14997 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000b14a26 l     F .text	000000000000012d              dtuple_create_from_mem
0000000000b14b53 l     F .text	000000000000008e              dtuple_create
0000000000b14be1 l     F .text	0000000000000085              dict_index_is_clust
0000000000b14c66 l     F .text	00000000000000be              dict_index_is_sec_or_ibuf
0000000000b14d24 l     F .text	000000000000004c              dict_table_is_comp
0000000000b14d70 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000b14df7 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000b14eaf l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000b14f83 l     F .text	000000000000006d              rec_get_bit_field_1
0000000000b14ff0 l     F .text	00000000000001bd              rec_set_bit_field_1
0000000000b151ad l     F .text	000000000000006d              rec_get_bit_field_2
0000000000b1521a l     F .text	000000000000024e              rec_set_bit_field_2
0000000000b15468 l     F .text	000000000000018f              rec_get_next_ptr_const
0000000000b155f7 l     F .text	0000000000000025              rec_get_next_ptr
0000000000b1561c l     F .text	0000000000000161              rec_get_next_offs
0000000000b1577d l     F .text	0000000000000087              rec_set_next_offs_old
0000000000b15804 l     F .text	00000000000000ce              rec_set_next_offs_new
0000000000b158d2 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000b1598d l     F .text	0000000000000091              rec_get_status
0000000000b15a1e l     F .text	0000000000000029              rec_get_n_owned_old
0000000000b15a47 l     F .text	0000000000000033              rec_set_n_owned_old
0000000000b15a7a l     F .text	0000000000000029              rec_get_n_owned_new
0000000000b15aa3 l     F .text	0000000000000072              rec_set_n_owned_new
0000000000b15b15 l     F .text	0000000000000024              rec_get_node_ptr_flag
0000000000b15b39 l     F .text	0000000000000029              rec_get_heap_no_old
0000000000b15b62 l     F .text	0000000000000033              rec_set_heap_no_old
0000000000b15b95 l     F .text	0000000000000029              rec_get_heap_no_new
0000000000b15bbe l     F .text	0000000000000033              rec_set_heap_no_new
0000000000b15bf1 l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000b15c68 l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000b15ce0 l     F .text	00000000000000ed              rec_offs_n_fields
0000000000b15dcd l     F .text	00000000000002a6              rec_offs_validate
0000000000b16073 l     F .text	000000000000005f              rec_offs_comp
0000000000b160d2 l     F .text	00000000000000ae              rec_offs_data_size
0000000000b16180 l     F .text	000000000000009f              rec_offs_extra_size
0000000000b1621f l     F .text	0000000000000032              rec_offs_size
0000000000b16251 l     F .text	0000000000000068              rec_get_end
0000000000b162b9 l     F .text	000000000000006b              rec_get_start
0000000000b16324 l     F .text	000000000000006c              mlog_close
0000000000b16390 l     F .text	0000000000000010              recv_recovery_is_on
0000000000b163a0 l     F .text	0000000000000081              cmp_rec_rec
0000000000b16421 l     F .text	00000000000000b3              page_zip_get_size
0000000000b164d4 l     F .text	00000000000001c3              page_zip_simple_validate
0000000000b16697 l     F .text	0000000000000109              page_zip_write_header
0000000000b167bf l     F .text	000000000000001f              page_offset
0000000000b167a0 l     F .text	000000000000001f              page_align
0000000000b167de l     F .text	000000000000004b              page_get_max_trx_id
0000000000b16829 l     F .text	000000000000013c              page_update_max_trx_id
0000000000b16d88 l     F .text	000000000000001e              page_is_leaf
0000000000b16965 l     F .text	0000000000000083              page_header_get_field
0000000000b169e8 l     F .text	0000000000000149              page_header_set_field
0000000000b16b31 l     F .text	00000000000000f4              page_header_get_offs
0000000000b16c25 l     F .text	000000000000011d              page_header_set_ptr
0000000000b16d42 l     F .text	0000000000000024              page_is_comp
0000000000b16d66 l     F .text	0000000000000022              page_rec_is_comp
0000000000b16da6 l     F .text	000000000000008f              page_get_infimum_offset
0000000000b16e35 l     F .text	000000000000008f              page_get_supremum_offset
0000000000b16ec4 l     F .text	00000000000000b9              page_rec_is_user_rec_low
0000000000b16f7d l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000b17016 l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000b170af l     F .text	0000000000000022              page_rec_is_user_rec
0000000000b170d1 l     F .text	0000000000000022              page_rec_is_supremum
0000000000b170f3 l     F .text	0000000000000022              page_rec_is_infimum
0000000000b17115 l     F .text	0000000000000025              page_rec_get_nth
0000000000b1713a l     F .text	0000000000000056              page_get_page_no
0000000000b17190 l     F .text	0000000000000056              page_get_space_id
0000000000b171e6 l     F .text	000000000000001f              page_get_n_recs
0000000000b17205 l     F .text	000000000000001f              page_dir_get_n_slots
0000000000b17224 l     F .text	0000000000000033              page_dir_set_n_slots
0000000000b17257 l     F .text	0000000000000024              page_dir_get_n_heap
0000000000b1727b l     F .text	00000000000000d2              page_dir_set_n_heap
0000000000b1734d l     F .text	0000000000000067              page_dir_get_nth_slot
0000000000b173b4 l     F .text	00000000000000d9              page_rec_check
0000000000b1748d l     F .text	0000000000000032              page_dir_slot_get_rec
0000000000b174bf l     F .text	0000000000000068              page_dir_slot_set_rec
0000000000b17527 l     F .text	0000000000000049              page_dir_slot_get_n_owned
0000000000b17570 l     F .text	0000000000000091              page_dir_slot_set_n_owned
0000000000b17601 l     F .text	000000000000001d              page_dir_calc_reserved_space
0000000000b1761e l     F .text	0000000000000149              page_rec_get_next_low
0000000000b17767 l     F .text	000000000000002c              page_rec_get_next
0000000000b17793 l     F .text	000000000000002c              page_rec_get_next_const
0000000000b177bf l     F .text	00000000000001b7              page_rec_set_next
0000000000b17976 l     F .text	0000000000000190              page_rec_get_prev_const
0000000000b17b06 l     F .text	000000000000001a              page_rec_get_prev
0000000000b17b20 l     F .text	0000000000000097              page_get_data_size
0000000000b17bb7 l     F .text	000000000000001f              page_get_free_space_of_empty
0000000000b17bd6 l     F .text	00000000000000e2              page_get_max_insert_size
0000000000b17cb8 l     F .text	000000000000008e              page_cur_get_rec
0000000000b17d46 l     F .text	000000000000005b              page_cur_set_before_first
0000000000b17da1 l     F .text	0000000000000096              page_cur_is_before_first
0000000000b17e37 l     F .text	0000000000000096              page_cur_is_after_last
0000000000b17ecd l     F .text	00000000000000d0              page_cur_position
0000000000b17f9d l     F .text	000000000000005f              page_cur_move_to_next
0000000000b18371 l     F .text	000000000000027b              page_dir_slot_check
0000000000b187ff l     F .text	000000000000003c              page_create_write_log
0000000000b188b8 l     F .text	000000000000068d              page_create_low
0000000000b19d59 l     F .text	00000000000000f3              page_delete_rec_list_write_log
0000000000b1ad19 l     F .text	000000000000020c              page_dir_delete_slot
0000000000b1af25 l     F .text	00000000000000b3              page_dir_add_slot
0000000000000000 l    df *ABS*	0000000000000000              page0zip.c
0000000000b1d66d l     F .text	0000000000000017              os_atomic_test_and_set
0000000000b1d684 l     F .text	0000000000000017              os_atomic_clear
0000000000b1d69b l     F .text	000000000000001b              ut_min
0000000000b1d6b6 l     F .text	000000000000001b              ut_max
0000000000b1d6d1 l     F .text	00000000000000b4              ut_align_down
0000000000b1d785 l     F .text	00000000000000b2              ut_align_offset
0000000000b1d837 l     F .text	0000000000000080              mach_write_to_1
0000000000b1d8b7 l     F .text	0000000000000045              mach_read_from_1
0000000000b1d8fc l     F .text	0000000000000096              mach_write_to_2
0000000000b1d992 l     F .text	000000000000002c              mach_read_from_2
0000000000b1d9be l     F .text	00000000000000a8              mach_write_to_3
0000000000b1da66 l     F .text	0000000000000082              mach_write_to_4
0000000000b1dae8 l     F .text	0000000000000087              mach_read_from_4
0000000000b1db6f l     F .text	0000000000000116              mach_write_compressed
0000000000b1dc85 l     F .text	000000000000003a              mach_read_from_8
0000000000b1dcbf l     F .text	0000000000000071              mach_write_to_7
0000000000b1dd30 l     F .text	0000000000000071              mach_write_to_6
0000000000b1dda1 l     F .text	000000000000002d              ut_memcpy
0000000000b1ddce l     F .text	000000000000001e              mutex_test_and_set
0000000000b1ddec l     F .text	000000000000001f              mutex_reset_lock_word
0000000000b1de0b l     F .text	000000000000004e              mutex_get_waiters
0000000000b1de59 l     F .text	000000000000007b              mutex_exit_func
0000000000b1ded4 l     F .text	00000000000000d1              mutex_enter_func
0000000000b1dfa5 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000b1e0b3 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000b1e120 l     F .text	0000000000000079              pfs_mutex_free_func
0000000000b1e199 l     F .text	0000000000000012              mem_block_get_len
0000000000b1e1ab l     F .text	0000000000000084              mem_block_set_free
0000000000b1e22f l     F .text	0000000000000012              mem_block_get_free
0000000000b1e241 l     F .text	000000000000009f              mem_heap_zalloc
0000000000b1e2e0 l     F .text	0000000000000143              mem_heap_alloc
0000000000b1e423 l     F .text	000000000000016b              mem_heap_create_func
0000000000b1e58e l     F .text	00000000000000a3              mem_heap_free_func
0000000000b1e631 l     F .text	0000000000000049              dyn_block_get_used
0000000000b1e67a l     F .text	00000000000001a0              dyn_array_push
0000000000b1e81a l     F .text	0000000000000205              dyn_array_open
0000000000b1ea1f l     F .text	000000000000013b              dyn_array_close
0000000000b1eb5a l     F .text	000000000000015f              dyn_array_get_element
0000000000b1ecb9 l     F .text	00000000000000d9              dyn_array_get_data_size
0000000000b1ed92 l     F .text	0000000000000171              mtr_memo_push
0000000000b1ef03 l     F .text	0000000000000131              mtr_memo_contains
0000000000b1f034 l     F .text	00000000000000b4              mtr_get_log_mode
0000000000b1f0e8 l     F .text	0000000000000123              mtr_set_log_mode
0000000000b1f20b l     F .text	000000000000006e              buf_pool_from_bpage
0000000000b1f279 l     F .text	000000000000001a              buf_pool_from_block
0000000000b1f293 l     F .text	0000000000000046              buf_page_get_state
0000000000b1f2d9 l     F .text	000000000000001a              buf_block_get_state
0000000000b1f2f3 l     F .text	00000000000000ea              buf_block_get_frame
0000000000b1f3dd l     F .text	000000000000003a              buf_frame_get_page_zip
0000000000b1f417 l     F .text	0000000000000129              buf_block_free
0000000000b1f540 l     F .text	000000000000006b              buf_frame_copy
0000000000b1f5ab l     F .text	0000000000000114              dict_col_get_clust_pos
0000000000b1f6bf l     F .text	0000000000000085              dict_index_is_clust
0000000000b1f744 l     F .text	0000000000000085              dict_index_is_ibuf
0000000000b1f7c9 l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000b1f89a l     F .text	000000000000014a              dict_table_get_sys_col
0000000000b1f9e4 l     F .text	00000000000000c5              dict_table_get_sys_col_no
0000000000b1faa9 l     F .text	000000000000004c              dict_table_is_comp
0000000000b1faf5 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000b1fb7c l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000b1fc34 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000b1fd08 l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000b1fdd9 l     F .text	0000000000000118              dict_index_get_sys_col_pos
0000000000b1fef1 l     F .text	0000000000000042              dict_field_get_col
0000000000b1ff33 l     F .text	000000000000006d              rec_get_bit_field_1
0000000000b1ffa0 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000b2000d l     F .text	0000000000000161              rec_get_next_offs
0000000000b2016e l     F .text	00000000000000ce              rec_set_next_offs_new
0000000000b2023c l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000b202f7 l     F .text	0000000000000091              rec_get_status
0000000000b20388 l     F .text	00000000000000f1              rec_get_n_fields
0000000000b20479 l     F .text	0000000000000029              rec_get_n_owned_new
0000000000b204a2 l     F .text	000000000000003b              rec_get_info_bits
0000000000b204dd l     F .text	0000000000000053              rec_get_deleted_flag
0000000000b20530 l     F .text	0000000000000029              rec_get_heap_no_new
0000000000b20559 l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000b205d0 l     F .text	00000000000000ed              rec_offs_n_fields
0000000000b206bd l     F .text	00000000000002a6              rec_offs_validate
0000000000b20963 l     F .text	000000000000010f              rec_offs_make_valid
0000000000b20a72 l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000b20b80 l     F .text	000000000000005f              rec_offs_comp
0000000000b20bdf l     F .text	000000000000005f              rec_offs_any_extern
0000000000b20c3e l     F .text	00000000000000aa              rec_offs_nth_extern
0000000000b20ce8 l     F .text	000000000000006b              rec_offs_n_extern
0000000000b20d53 l     F .text	00000000000000ae              rec_offs_data_size
0000000000b20e01 l     F .text	000000000000009f              rec_offs_extra_size
0000000000b20ea0 l     F .text	0000000000000068              rec_get_end
0000000000b20f08 l     F .text	000000000000006b              rec_get_start
0000000000b20f73 l     F .text	000000000000005b              mlog_open
0000000000b20fce l     F .text	000000000000006c              mlog_close
0000000000b2103a l     F .text	0000000000000227              mlog_write_initial_log_record_fast
0000000000b21261 l     F .text	000000000000001f              page_align
0000000000b21280 l     F .text	000000000000001f              page_offset
0000000000b2129f l     F .text	000000000000004b              page_get_max_trx_id
0000000000b212ea l     F .text	0000000000000083              page_header_get_field
0000000000b2136d l     F .text	0000000000000149              page_header_set_field
0000000000b21dd0 l     F .text	0000000000000109              page_zip_write_header
0000000000b214b6 l     F .text	0000000000000024              page_is_comp
0000000000b214da l     F .text	0000000000000022              page_rec_is_comp
0000000000b214fc l     F .text	000000000000001e              page_is_leaf
0000000000b2151a l     F .text	000000000000008f              page_get_infimum_offset
0000000000b215a9 l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000b21642 l     F .text	0000000000000022              page_rec_is_infimum
0000000000b21664 l     F .text	0000000000000056              page_get_page_no
0000000000b216ba l     F .text	0000000000000056              page_get_space_id
0000000000b21710 l     F .text	000000000000001f              page_get_n_recs
0000000000b2172f l     F .text	000000000000001f              page_dir_get_n_slots
0000000000b2174e l     F .text	0000000000000024              page_dir_get_n_heap
0000000000b21772 l     F .text	0000000000000067              page_dir_get_nth_slot
0000000000b217d9 l     F .text	00000000000000d9              page_rec_check
0000000000b218b2 l     F .text	0000000000000149              page_rec_get_next_low
0000000000b219fb l     F .text	000000000000002c              page_rec_get_next
0000000000b21a27 l     F .text	00000000000000b3              page_zip_get_size
0000000000b21ada l     F .text	00000000000001c3              page_zip_simple_validate
0000000000b21c9d l     F .text	0000000000000133              page_zip_get_trailer_len
0000000000d3b9ed l     O .rodata	0000000000000003              infimum_extra
0000000000d3b9f0 l     O .rodata	0000000000000008              infimum_data
0000000000d3b9f8 l     O .rodata	000000000000000c              supremum_extra_data
0000000000b21ed9 l     F .text	0000000000000115              page_zip_fail_func
0000000000b22034 l     F .text	0000000000000021              page_zip_dir_elems
0000000000b22055 l     F .text	000000000000001d              page_zip_dir_size
0000000000b22072 l     F .text	0000000000000073              page_zip_dir_start_offs
0000000000b220e5 l     F .text	0000000000000060              page_zip_dir_user_size
0000000000b22145 l     F .text	0000000000000077              page_zip_dir_find_low
0000000000b221bc l     F .text	0000000000000096              page_zip_dir_find
0000000000b22252 l     F .text	00000000000000af              page_zip_dir_find_free
0000000000b22301 l     F .text	00000000000000bc              page_zip_dir_get
0000000000b223bd l     F .text	0000000000000285              page_zip_compress_write_log
0000000000b22642 l     F .text	000000000000023d              page_zip_get_n_prev_extern
0000000000b2287f l     F .text	0000000000000092              page_zip_fixed_field_encode
0000000000b22911 l     F .text	00000000000003b2              page_zip_fields_encode
0000000000b22cc3 l     F .text	00000000000004f6              page_zip_dir_encode
0000000000b231b9 l     F .text	000000000000002c              page_zip_zalloc
0000000000b231e5 l     F .text	000000000000000f              page_zip_free
0000000000b23235 l     F .text	00000000000000ba              page_zip_compress_deflate
0000000000b232ef l     F .text	0000000000000229              page_zip_compress_node_ptrs
0000000000b23518 l     F .text	000000000000014a              page_zip_compress_sec
0000000000b23662 l     F .text	00000000000004e1              page_zip_compress_clust_ext
0000000000b23b43 l     F .text	0000000000000579              page_zip_compress_clust
0000000000b2508e l     F .text	000000000000001c              page_zip_dir_cmp
0000000000b250aa l     F .text	000000000000036a              page_zip_dir_sort
0000000000b25414 l     F .text	000000000000007c              page_zip_fields_free
0000000000b25490 l     F .text	00000000000003bf              page_zip_fields_decode
0000000000b2584f l     F .text	00000000000002b6              page_zip_dir_decode
0000000000b25b05 l     F .text	0000000000000277              page_zip_set_extra_bytes
0000000000b25d7c l     F .text	0000000000000309              page_zip_apply_log_ext
0000000000b26085 l     F .text	000000000000067d              page_zip_apply_log
0000000000b26702 l     F .text	00000000000006fb              page_zip_decompress_node_ptrs
0000000000b26dfd l     F .text	0000000000000469              page_zip_decompress_sec
0000000000b27266 l     F .text	000000000000033b              page_zip_decompress_clust_ext
0000000000b275a1 l     F .text	0000000000000b0c              page_zip_decompress_clust
0000000000b289f6 l     F .text	00000000000000fe              page_zip_header_cmp
0000000000b28af4 l     F .text	000000000000084d              page_zip_write_rec_ext
0000000000b2af1f l     F .text	0000000000000510              page_zip_clear_rec
0000000000000000 l    df *ABS*	0000000000000000              que0que.c
0000000000b2cc96 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000b2ccad l     F .text	0000000000000017              os_atomic_clear
0000000000b2ccc4 l     F .text	000000000000001e              mutex_test_and_set
0000000000b2cce2 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000b2cd01 l     F .text	000000000000004e              mutex_get_waiters
0000000000b2cd4f l     F .text	000000000000007b              mutex_exit_func
0000000000b2cdca l     F .text	00000000000000d1              mutex_enter_func
0000000000b2ce9b l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000b2cfa9 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000b2d016 l     F .text	0000000000000012              mem_block_get_len
0000000000b2d028 l     F .text	0000000000000084              mem_block_set_free
0000000000b2d0ac l     F .text	0000000000000012              mem_block_get_free
0000000000b2d0be l     F .text	0000000000000143              mem_heap_alloc
0000000000b2d201 l     F .text	00000000000000a3              mem_heap_free_func
0000000000b2d2a4 l     F .text	000000000000008e              dfield_copy_data
0000000000b2d332 l     F .text	0000000000000022              log_free_check
0000000000b2d354 l     F .text	0000000000000047              thr_get_trx
0000000000b2d39b l     F .text	0000000000000042              que_node_get_type
0000000000b2d3dd l     F .text	0000000000000043              que_node_get_val
0000000000b2d420 l     F .text	0000000000000012              que_node_get_next
0000000000b2d432 l     F .text	0000000000000012              que_node_get_parent
0000000000b2d444 l     F .text	000000000000006d              que_thr_peek_stop
0000000000b2d4b1 l     F .text	0000000000000016              sel_node_reset_cursor
0000000000b2d4c7 l     F .text	0000000000000134              open_step
0000000000b2d5fb l     F .text	0000000000000084              eval_sym
0000000000b2d67f l     F .text	000000000000003a              eval_exp
0000000000b2d6b9 l     F .text	0000000000000136              proc_step
0000000000b2d7ef l     F .text	00000000000000ac              proc_eval_step
0000000000b2e9e9 l     F .text	0000000000000119              que_thr_move_to_run_state
0000000000b2df76 l     F .text	000000000000003d              que_thr_init_command
0000000000b2e2f9 l     F .text	0000000000000049              que_fork_all_thrs_in_state
0000000000b2e342 l     F .text	0000000000000034              que_graph_free_stat_list
0000000000b2e909 l     F .text	00000000000000e0              que_thr_node_step
0000000000b2eb02 l     F .text	000000000000033a              que_thr_dec_refer_count
0000000000b2f709 l     F .text	00000000000004ae              que_thr_step
0000000000b2fbb7 l     F .text	00000000000001bf              que_run_threads_low
0000000000000000 l    df *ABS*	0000000000000000              rem0cmp.c
0000000000b30002 l     F .text	000000000000001b              ut_max
0000000000b3001d l     F .text	0000000000000045              mach_read_from_1
0000000000b30062 l     F .text	000000000000002c              mach_read_from_2
0000000000b3008e l     F .text	000000000000006f              mach_double_read
0000000000b300fd l     F .text	000000000000006f              mach_float_read
0000000000b3016c l     F .text	0000000000000015              dtype_get_charset_coll
0000000000b30181 l     F .text	0000000000000085              dtype_get_pad_char
0000000000b30206 l     F .text	0000000000000043              dfield_get_type
0000000000b30249 l     F .text	0000000000000090              dfield_get_data
0000000000b302d9 l     F .text	0000000000000092              dfield_get_len
0000000000b3036b l     F .text	0000000000000042              dtuple_get_info_bits
0000000000b303ad l     F .text	0000000000000043              dtuple_get_n_fields_cmp
0000000000b303f0 l     F .text	0000000000000043              dtuple_get_n_fields
0000000000b30433 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000b304c2 l     F .text	0000000000000085              dict_index_is_clust
0000000000b30547 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000b305ce l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000b30686 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000b3075a l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000b3082b l     F .text	0000000000000042              dict_field_get_col
0000000000b3086d l     F .text	000000000000002d              dict_index_get_nth_col
0000000000b3089a l     F .text	000000000000006d              rec_get_bit_field_1
0000000000b30907 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000b30974 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000b30a2f l     F .text	0000000000000091              rec_get_status
0000000000b30ac0 l     F .text	000000000000003b              rec_get_info_bits
0000000000b30afb l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000b30b72 l     F .text	00000000000000ed              rec_offs_n_fields
0000000000b30c5f l     F .text	00000000000002a6              rec_offs_validate
0000000000b30f05 l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000b31013 l     F .text	000000000000005f              rec_offs_comp
0000000000b31072 l     F .text	00000000000000aa              rec_offs_nth_extern
0000000000b3111c l     F .text	0000000000000048              cmp_data_data
0000000000b31164 l     F .text	0000000000000021              cmp_collate
0000000000b312fc l     F .text	0000000000000319              cmp_whole_field
0000000000b32bee l     F .text	000000000000038b              cmp_debug_dtuple_rec_with_match
0000000000000000 l    df *ABS*	0000000000000000              rem0rec.c
0000000000b32f79 l     F .text	000000000000001b              ut_max
0000000000b32f94 l     F .text	000000000000002d              ut_memcpy
0000000000b32fc1 l     F .text	0000000000000080              mach_write_to_1
0000000000b33041 l     F .text	0000000000000045              mach_read_from_1
0000000000b33086 l     F .text	0000000000000096              mach_write_to_2
0000000000b3311c l     F .text	000000000000002c              mach_read_from_2
0000000000b33148 l     F .text	0000000000000015              dtype_get_charset_coll
0000000000b3315d l     F .text	0000000000000045              dtype_get_mtype
0000000000b331a2 l     F .text	0000000000000046              dtype_get_prtype
0000000000b331e8 l     F .text	0000000000000046              dtype_get_len
0000000000b3322e l     F .text	0000000000000244              dtype_get_fixed_size_low
0000000000b33472 l     F .text	0000000000000052              dtype_get_sql_null_size
0000000000b334c4 l     F .text	0000000000000012              mem_block_get_len
0000000000b334d6 l     F .text	0000000000000084              mem_block_set_free
0000000000b3355a l     F .text	0000000000000012              mem_block_get_free
0000000000b3356c l     F .text	0000000000000143              mem_heap_alloc
0000000000b336af l     F .text	000000000000016b              mem_heap_create_func
0000000000b3381a l     F .text	00000000000000a3              mem_heap_free_func
0000000000b338bd l     F .text	00000000000000fd              mem_alloc_func
0000000000b339ba l     F .text	000000000000003a              mem_free_func
0000000000b339f4 l     F .text	0000000000000043              dfield_get_type
0000000000b33a37 l     F .text	0000000000000090              dfield_get_data
0000000000b33ac7 l     F .text	0000000000000092              dfield_get_len
0000000000b33b59 l     F .text	000000000000004b              dfield_is_null
0000000000b33ba4 l     F .text	0000000000000049              dfield_is_ext
0000000000b33bed l     F .text	000000000000006a              dfield_set_data
0000000000b33c57 l     F .text	0000000000000025              dfield_set_null
0000000000b33c7c l     F .text	0000000000000042              dtuple_get_info_bits
0000000000b33cbe l     F .text	000000000000004b              dtuple_set_info_bits
0000000000b33d09 l     F .text	0000000000000043              dtuple_get_n_fields
0000000000b33d4c l     F .text	000000000000008f              dtuple_get_nth_field
0000000000b33ddb l     F .text	0000000000000139              dtuple_get_data_size
0000000000b33f14 l     F .text	0000000000000028              data_write_sql_null
0000000000b33f3c l     F .text	0000000000000164              dict_col_type_assert_equal
0000000000b340a0 l     F .text	0000000000000052              dict_col_get_fixed_size
0000000000b340f2 l     F .text	0000000000000085              dict_index_is_clust
0000000000b34177 l     F .text	000000000000004c              dict_table_is_comp
0000000000b341c3 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000b3424a l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000b34302 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000b343d6 l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000b344a7 l     F .text	0000000000000042              dict_field_get_col
0000000000b344e9 l     F .text	000000000000006d              rec_get_bit_field_1
0000000000b34556 l     F .text	00000000000001bd              rec_set_bit_field_1
0000000000b34713 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000b34780 l     F .text	000000000000024e              rec_set_bit_field_2
0000000000b349ce l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000b34a89 l     F .text	00000000000000bd              rec_set_n_fields_old
0000000000b34b46 l     F .text	0000000000000091              rec_get_status
0000000000b34bd7 l     F .text	00000000000000f1              rec_get_n_fields
0000000000b34cc8 l     F .text	000000000000003b              rec_get_info_bits
0000000000b34d03 l     F .text	0000000000000033              rec_set_info_bits_old
0000000000b34d36 l     F .text	0000000000000033              rec_set_info_bits_new
0000000000b34d69 l     F .text	0000000000000033              rec_set_status
0000000000b34d9c l     F .text	0000000000000046              rec_set_info_and_status_bits
0000000000b34de2 l     F .text	0000000000000029              rec_get_1byte_offs_flag
0000000000b34e0b l     F .text	0000000000000060              rec_set_1byte_offs_flag
0000000000b34e6b l     F .text	000000000000009e              rec_1_get_field_end_info
0000000000b34f09 l     F .text	00000000000000a1              rec_2_get_field_end_info
0000000000b34faa l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000b35021 l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000b35099 l     F .text	00000000000000ed              rec_offs_n_fields
0000000000b35186 l     F .text	00000000000002a6              rec_offs_validate
0000000000b3542c l     F .text	000000000000010f              rec_offs_make_valid
0000000000b3553b l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000b35649 l     F .text	000000000000005f              rec_offs_comp
0000000000b356a8 l     F .text	00000000000000aa              rec_offs_nth_extern
0000000000b35752 l     F .text	000000000000009e              rec_1_get_prev_field_end_info
0000000000b357f0 l     F .text	00000000000000a1              rec_2_get_prev_field_end_info
0000000000b35891 l     F .text	00000000000000aa              rec_1_set_field_end_info
0000000000b3593b l     F .text	00000000000000ad              rec_2_set_field_end_info
0000000000b359e8 l     F .text	00000000000000a4              rec_1_get_field_start_offs
0000000000b35a8c l     F .text	00000000000000a5              rec_2_get_field_start_offs
0000000000b35b31 l     F .text	00000000000000be              rec_get_field_start_offs
0000000000b35bef l     F .text	0000000000000082              rec_get_nth_field_size
0000000000b35c71 l     F .text	0000000000000059              rec_get_data_size_old
0000000000b35cca l     F .text	00000000000000f1              rec_offs_set_n_fields
0000000000b35dbb l     F .text	00000000000000ae              rec_offs_data_size
0000000000b35e69 l     F .text	0000000000000035              rec_get_converted_extra_size
0000000000b360e5 l     F .text	0000000000000347              rec_init_offsets_comp_ordinary
0000000000b3642c l     F .text	00000000000004b0              rec_init_offsets
0000000000b370c5 l     F .text	00000000000005a9              rec_get_converted_size_comp_prefix_low
0000000000b37a0d l     F .text	00000000000003e2              rec_convert_dtuple_to_rec_old
0000000000b37def l     F .text	0000000000000862              rec_convert_dtuple_to_rec_comp
0000000000b38651 l     F .text	00000000000000d1              rec_convert_dtuple_to_rec_new
0000000000b38dc6 l     F .text	0000000000000112              rec_copy_prefix_to_buf_old
0000000000b39273 l     F .text	00000000000001ec              rec_validate_old
0000000000000000 l    df *ABS*	0000000000000000              row0ext.c
0000000000b39cc3 l     F .text	0000000000000012              mem_block_get_len
0000000000b39cd5 l     F .text	0000000000000084              mem_block_set_free
0000000000b39d59 l     F .text	0000000000000012              mem_block_get_free
0000000000b39d6b l     F .text	0000000000000143              mem_heap_alloc
0000000000b39eae l     F .text	0000000000000090              dfield_get_data
0000000000b39f3e l     F .text	0000000000000092              dfield_get_len
0000000000b39fd0 l     F .text	0000000000000049              dfield_is_ext
0000000000b3a019 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000b3a0a8 l     F .text	000000000000006e              dict_table_flags_to_zip_size
0000000000b3a116 l     F .text	00000000000001a0              row_ext_cache_fill
0000000000000000 l    df *ABS*	0000000000000000              row0ins.c
0000000000b3a456 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000b3a46d l     F .text	0000000000000017              os_atomic_clear
0000000000b3a484 l     F .text	000000000000001b              ut_max
0000000000b3a49f l     F .text	00000000000000b4              ut_align_down
0000000000b3a553 l     F .text	00000000000000b2              ut_align_offset
0000000000b3a605 l     F .text	0000000000000045              mach_read_from_1
0000000000b3a64a l     F .text	0000000000000096              mach_write_to_2
0000000000b3a6e0 l     F .text	000000000000002c              mach_read_from_2
0000000000b3a70c l     F .text	0000000000000082              mach_write_to_4
0000000000b3a78e l     F .text	0000000000000087              mach_read_from_4
0000000000b3a815 l     F .text	0000000000000071              mach_write_to_6
0000000000b3a886 l     F .text	0000000000000015              dtype_get_charset_coll
0000000000b3a89b l     F .text	0000000000000263              dtype_get_min_size_low
0000000000b3aafe l     F .text	000000000000001e              mutex_test_and_set
0000000000b3ab1c l     F .text	000000000000001f              mutex_reset_lock_word
0000000000b3ab3b l     F .text	000000000000004e              mutex_get_waiters
0000000000b3ab89 l     F .text	000000000000007b              mutex_exit_func
0000000000b3ac04 l     F .text	00000000000000d1              mutex_enter_func
0000000000b3acd5 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000b3ade3 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000b3ae50 l     F .text	0000000000000012              mem_block_get_len
0000000000b3ae62 l     F .text	0000000000000084              mem_block_set_free
0000000000b3aee6 l     F .text	0000000000000012              mem_block_get_free
0000000000b3aef8 l     F .text	0000000000000012              mem_block_get_start
0000000000b3af0a l     F .text	000000000000009f              mem_heap_zalloc
0000000000b3afa9 l     F .text	0000000000000143              mem_heap_alloc
0000000000b3b0ec l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000b3b22b l     F .text	000000000000004d              mem_heap_empty
0000000000b3b278 l     F .text	000000000000016b              mem_heap_create_func
0000000000b3b3e3 l     F .text	00000000000000a3              mem_heap_free_func
0000000000b3b486 l     F .text	00000000000000fd              mem_alloc_func
0000000000b3b583 l     F .text	000000000000003a              mem_free_func
0000000000b3b5bd l     F .text	000000000000005c              mem_strdupl
0000000000b3b619 l     F .text	0000000000000090              dfield_get_data
0000000000b3b6a9 l     F .text	0000000000000092              dfield_get_len
0000000000b3b73b l     F .text	000000000000005b              dfield_set_len
0000000000b3b796 l     F .text	000000000000004b              dfield_is_null
0000000000b3b7e1 l     F .text	0000000000000049              dfield_is_ext
0000000000b3b82a l     F .text	000000000000004a              dfield_set_ext
0000000000b3b874 l     F .text	000000000000006a              dfield_set_data
0000000000b3b8de l     F .text	0000000000000025              dfield_set_null
0000000000b3b903 l     F .text	000000000000008e              dfield_copy_data
0000000000b3b991 l     F .text	0000000000000043              dtuple_get_n_fields_cmp
0000000000b3b9d4 l     F .text	0000000000000080              dtuple_set_n_fields_cmp
0000000000b3ba54 l     F .text	0000000000000043              dtuple_get_n_fields
0000000000b3ba97 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000b3bb26 l     F .text	000000000000002a              dtuple_big_rec_free
0000000000b3bb50 l     F .text	0000000000000038              dict_col_get_mbminlen
0000000000b3bb88 l     F .text	0000000000000044              dict_col_get_min_size
0000000000b3bbcc l     F .text	000000000000004e              dict_col_get_no
0000000000b3bc1a l     F .text	000000000000007c              dict_table_get_first_index
0000000000b3bc96 l     F .text	000000000000007c              dict_table_get_next_index
0000000000b3bd12 l     F .text	0000000000000085              dict_index_is_clust
0000000000b3bd97 l     F .text	0000000000000085              dict_index_is_unique
0000000000b3be1c l     F .text	0000000000000087              dict_table_get_n_cols
0000000000b3bea3 l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000b3bf74 l     F .text	000000000000014a              dict_table_get_sys_col
0000000000b3c0be l     F .text	000000000000004c              dict_table_is_comp
0000000000b3c10a l     F .text	0000000000000087              dict_index_get_n_fields
0000000000b3c191 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000b3c249 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000b3c31d l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000b3c3ee l     F .text	0000000000000042              dict_field_get_col
0000000000b3c430 l     F .text	000000000000002d              dict_index_get_nth_col
0000000000b3c45d l     F .text	000000000000002d              dict_index_get_nth_col_no
0000000000b3c48a l     F .text	00000000000000e2              dict_index_is_corrupted
0000000000b3c56c l     F .text	0000000000000074              dyn_array_create
0000000000b3c5e0 l     F .text	0000000000000096              mtr_start
0000000000b3c676 l     F .text	0000000000000022              log_free_check
0000000000b3c698 l     F .text	0000000000000063              trx_start_if_not_started
0000000000b3c6fb l     F .text	0000000000000026              trx_write_trx_id
0000000000b3c721 l     F .text	0000000000000080              dict_sys_get_new_row_id
0000000000b3c7a1 l     F .text	0000000000000026              dict_sys_write_row_id
0000000000b3c7c7 l     F .text	000000000000006d              rec_get_bit_field_1
0000000000b3c834 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000b3c8a1 l     F .text	0000000000000161              rec_get_next_offs
0000000000b3ca02 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000b3cabd l     F .text	0000000000000091              rec_get_status
0000000000b3cb4e l     F .text	00000000000000f1              rec_get_n_fields
0000000000b3cc3f l     F .text	0000000000000053              rec_get_deleted_flag
0000000000b3cc92 l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000b3cd09 l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000b3cd81 l     F .text	00000000000000ed              rec_offs_n_fields
0000000000b3ce6e l     F .text	00000000000002a6              rec_offs_validate
0000000000b3d114 l     F .text	000000000000005f              rec_offs_comp
0000000000b3d173 l     F .text	000000000000001f              page_align
0000000000b3d192 l     F .text	000000000000001f              page_offset
0000000000b3d1b1 l     F .text	0000000000000083              page_header_get_field
0000000000b3d234 l     F .text	0000000000000024              page_is_comp
0000000000b3d258 l     F .text	0000000000000022              page_rec_is_comp
0000000000b3d27a l     F .text	000000000000008f              page_get_infimum_offset
0000000000b3d309 l     F .text	00000000000000b9              page_rec_is_user_rec_low
0000000000b3d3c2 l     F .text	0000000000000099              page_rec_is_supremum_low
0000000000b3d45b l     F .text	0000000000000099              page_rec_is_infimum_low
0000000000b3d4f4 l     F .text	0000000000000022              page_rec_is_user_rec
0000000000b3d516 l     F .text	0000000000000022              page_rec_is_supremum
0000000000b3d538 l     F .text	0000000000000022              page_rec_is_infimum
0000000000b3d55a l     F .text	0000000000000056              page_get_page_no
0000000000b3d5b0 l     F .text	0000000000000056              page_get_space_id
0000000000b3d606 l     F .text	000000000000001f              page_dir_get_n_slots
0000000000b3d625 l     F .text	0000000000000067              page_dir_get_nth_slot
0000000000b3d68c l     F .text	00000000000000d9              page_rec_check
0000000000b3d765 l     F .text	0000000000000032              page_dir_slot_get_rec
0000000000b3d797 l     F .text	0000000000000149              page_rec_get_next_low
0000000000b3d8e0 l     F .text	000000000000002c              page_rec_get_next
0000000000b3d90c l     F .text	0000000000000190              page_rec_get_prev_const
0000000000b3da9c l     F .text	000000000000008f              page_cur_get_block
0000000000b3db2b l     F .text	000000000000008e              page_cur_get_rec
0000000000b3dbb9 l     F .text	0000000000000096              page_cur_is_after_last
0000000000b3dc4f l     F .text	00000000000000d0              page_cur_position
0000000000b3dd1f l     F .text	000000000000005f              page_cur_move_to_next
0000000000b3dd7e l     F .text	00000000000000c8              btr_page_get_next
0000000000b3de46 l     F .text	0000000000000012              btr_cur_get_page_cur
0000000000b3de58 l     F .text	0000000000000022              btr_cur_get_block
0000000000b3de7a l     F .text	000000000000001e              btr_cur_get_rec
0000000000b3de98 l     F .text	0000000000000026              btr_cur_get_page
0000000000b3debe l     F .text	000000000000008d              btr_cur_position
0000000000b3df4b l     F .text	0000000000000047              thr_get_trx
0000000000b3df92 l     F .text	0000000000000042              que_node_get_type
0000000000b3dfd4 l     F .text	0000000000000043              que_node_get_val
0000000000b3e017 l     F .text	000000000000004c              que_node_set_parent
0000000000b3e063 l     F .text	0000000000000012              que_node_get_next
0000000000b3e075 l     F .text	0000000000000012              que_node_get_parent
0000000000b3e087 l     F .text	0000000000000016              btr_pcur_get_btr_cur
0000000000b3e09d l     F .text	0000000000000022              btr_pcur_get_page_cur
0000000000b3e0bf l     F .text	0000000000000057              btr_pcur_get_page
0000000000b3e116 l     F .text	0000000000000057              btr_pcur_get_block
0000000000b3e16d l     F .text	000000000000008e              btr_pcur_get_rec
0000000000b3e1fb l     F .text	00000000000000a7              btr_pcur_get_low_match
0000000000b3e2a2 l     F .text	000000000000008e              btr_pcur_is_after_last_on_page
0000000000b3e330 l     F .text	00000000000000c4              btr_pcur_is_after_last_in_tree
0000000000b3e3f4 l     F .text	000000000000009e              btr_pcur_move_to_next_on_page
0000000000b3e492 l     F .text	00000000000000e8              btr_pcur_move_to_next
0000000000b3e57a l     F .text	0000000000000038              btr_pcur_init
0000000000b3e5b2 l     F .text	00000000000000b0              btr_pcur_open_func
0000000000b3e662 l     F .text	00000000000000b4              btr_pcur_open_with_no_init_func
0000000000b3e716 l     F .text	00000000000000be              btr_pcur_close
0000000000b3e7d4 l     F .text	0000000000000071              upd_create
0000000000b3e845 l     F .text	0000000000000084              eval_sym
0000000000b3e8c9 l     F .text	000000000000003a              eval_exp
0000000000b3eb7f l     F .text	0000000000000211              row_ins_alloc_sys_fields
0000000000b3ee0d l     F .text	0000000000000254              row_ins_sec_index_entry_by_modify
0000000000b3f061 l     F .text	0000000000000201              row_ins_clust_index_entry_by_modify
0000000000b3f262 l     F .text	00000000000000a2              row_ins_cascade_ancestor_updates_table
0000000000b3f304 l     F .text	0000000000000080              row_ins_cascade_n_ancestors
0000000000b3f384 l     F .text	000000000000058e              row_ins_cascade_calc_update_vec
0000000000b3f912 l     F .text	00000000000000d9              row_ins_set_detailed
0000000000b3f9eb l     F .text	00000000000002c3              row_ins_foreign_report_err
0000000000b3fcae l     F .text	0000000000000294              row_ins_foreign_report_add_err
0000000000b3ff42 l     F .text	00000000000000c1              row_ins_invalidate_query_cache
0000000000b40003 l     F .text	0000000000000c33              row_ins_foreign_check_on_constraint
0000000000b40c36 l     F .text	00000000000000e0              row_ins_set_shared_rec_lock
0000000000b40d16 l     F .text	00000000000000e0              row_ins_set_exclusive_rec_lock
0000000000b4181f l     F .text	00000000000001f5              row_ins_check_foreign_constraints
0000000000b41a14 l     F .text	0000000000000152              row_ins_dupl_error_with_rec
0000000000b41b66 l     F .text	000000000000042b              row_ins_scan_sec_index_for_duplicate
0000000000b41f91 l     F .text	0000000000000504              row_ins_duplicate_error_in_clust
0000000000b42495 l     F .text	000000000000005c              row_ins_must_modify
0000000000b424f1 l     F .text	0000000000000a00              row_ins_index_entry_low
0000000000b43038 l     F .text	0000000000000226              row_ins_index_entry_set_vals
0000000000b4325e l     F .text	00000000000000dc              row_ins_index_entry_step
0000000000b4333a l     F .text	0000000000000085              row_ins_alloc_row_id_step
0000000000b433bf l     F .text	000000000000008e              row_ins_get_row_from_values
0000000000b4344d l     F .text	0000000000000086              row_ins_get_row_from_select
0000000000b434d3 l     F .text	000000000000020e              row_ins
0000000000000000 l    df *ABS*	0000000000000000              row0purge.c
0000000000b4395e l     F .text	0000000000000017              os_atomic_test_and_set
0000000000b43975 l     F .text	0000000000000017              os_atomic_clear
0000000000b4398c l     F .text	000000000000001b              ut_max
0000000000b439a7 l     F .text	0000000000000080              ut_ull_create
0000000000b43a27 l     F .text	00000000000000b4              ut_align_down
0000000000b43adb l     F .text	0000000000000045              mach_read_from_1
0000000000b43b20 l     F .text	000000000000002c              mach_read_from_2
0000000000b43b4c l     F .text	0000000000000072              mach_read_from_3
0000000000b43bbe l     F .text	0000000000000087              mach_read_from_4
0000000000b43c45 l     F .text	000000000000006b              mach_read_from_7
0000000000b43cb0 l     F .text	0000000000000057              ut_hash_ulint
0000000000b43d07 l     F .text	000000000000003a              ut_fold_ulint_pair
0000000000b43d41 l     F .text	0000000000000027              ut_fold_ull
0000000000b43d68 l     F .text	000000000000001e              mutex_test_and_set
0000000000b43d86 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000b43da5 l     F .text	000000000000004e              mutex_get_waiters
0000000000b43df3 l     F .text	000000000000007b              mutex_exit_func
0000000000b43e6e l     F .text	00000000000000d1              mutex_enter_func
0000000000b43f3f l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000b4404d l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000b440ba l     F .text	0000000000000012              mem_block_get_len
0000000000b440cc l     F .text	0000000000000084              mem_block_set_free
0000000000b44150 l     F .text	0000000000000012              mem_block_get_free
0000000000b44162 l     F .text	0000000000000012              mem_block_get_start
0000000000b44174 l     F .text	0000000000000143              mem_heap_alloc
0000000000b442b7 l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000b443f6 l     F .text	000000000000004d              mem_heap_empty
0000000000b44443 l     F .text	000000000000016b              mem_heap_create_func
0000000000b445ae l     F .text	00000000000000a3              mem_heap_free_func
0000000000b44651 l     F .text	000000000000003a              mem_free_func
0000000000b4468b l     F .text	0000000000000090              dfield_get_data
0000000000b4471b l     F .text	0000000000000092              dfield_get_len
0000000000b447ad l     F .text	0000000000000049              dfield_is_ext
0000000000b447f6 l     F .text	0000000000000106              pfs_rw_lock_x_lock_func
0000000000b448fc l     F .text	00000000000000bc              hash_get_nth_cell
0000000000b449b8 l     F .text	000000000000008c              hash_calc_hash
0000000000b44a44 l     F .text	00000000000000dc              hash_get_mutex_no
0000000000b44b20 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000b44bec l     F .text	000000000000009f              hash_get_mutex
0000000000b44c8b l     F .text	0000000000000114              dict_col_get_clust_pos
0000000000b44e97 l     F .text	0000000000000085              dict_index_is_clust
0000000000b44d9f l     F .text	000000000000007c              dict_table_get_first_index
0000000000b44e1b l     F .text	000000000000007c              dict_table_get_next_index
0000000000b44f1c l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000b44fed l     F .text	000000000000014a              dict_table_get_sys_col
0000000000b45137 l     F .text	00000000000000c5              dict_table_get_sys_col_no
0000000000b451fc l     F .text	000000000000004c              dict_table_is_comp
0000000000b45248 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000b452cf l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000b45387 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000b4545b l     F .text	0000000000000118              dict_index_get_sys_col_pos
0000000000b45573 l     F .text	000000000000007c              dict_index_get_lock
0000000000b455ef l     F .text	00000000000001d1              dict_table_get_on_id_low
0000000000b457c0 l     F .text	00000000000000e2              dict_index_is_corrupted
0000000000b458a2 l     F .text	0000000000000074              dyn_array_create
0000000000b45916 l     F .text	00000000000001a0              dyn_array_push
0000000000b45ab6 l     F .text	0000000000000096              mtr_start
0000000000b45b4c l     F .text	0000000000000171              mtr_memo_push
0000000000b45cbd l     F .text	00000000000000a6              mtr_x_lock_func
0000000000b45d63 l     F .text	0000000000000022              log_free_check
0000000000b45d85 l     F .text	0000000000000046              buf_page_get_state
0000000000b45dcb l     F .text	000000000000001a              buf_block_get_state
0000000000b45de5 l     F .text	00000000000000ea              buf_block_get_frame
0000000000b45ecf l     F .text	000000000000006d              rec_get_bit_field_1
0000000000b45f3c l     F .text	000000000000006d              rec_get_bit_field_2
0000000000b45fa9 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000b46064 l     F .text	0000000000000091              rec_get_status
0000000000b460f5 l     F .text	000000000000003b              rec_get_info_bits
0000000000b46130 l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000b461a7 l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000b4621f l     F .text	00000000000000ed              rec_offs_n_fields
0000000000b4630c l     F .text	00000000000002a6              rec_offs_validate
0000000000b465b2 l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000b466c0 l     F .text	000000000000001f              page_align
0000000000b466df l     F .text	000000000000008e              page_cur_get_rec
0000000000b4676d l     F .text	000000000000001e              btr_cur_get_rec
0000000000b4678b l     F .text	0000000000000016              btr_pcur_get_btr_cur
0000000000b467a1 l     F .text	000000000000008e              btr_pcur_get_rec
0000000000b4682f l     F .text	0000000000000071              btr_pcur_commit_specify_mtr
0000000000b468a0 l     F .text	00000000000000be              btr_pcur_close
0000000000b4695e l     F .text	000000000000009b              trx_undo_decode_roll_ptr
0000000000b469f9 l     F .text	000000000000001a              trx_read_roll_ptr
0000000000b46a13 l     F .text	0000000000000047              thr_get_trx
0000000000b46a5a l     F .text	0000000000000042              que_node_get_type
0000000000b46a9c l     F .text	0000000000000012              que_node_get_parent
0000000000b46aae l     F .text	0000000000000110              row_get_trx_id_offset
0000000000b46bbe l     F .text	00000000000000d9              row_get_rec_roll_ptr
0000000000b46c97 l     F .text	0000000000000043              upd_get_n_fields
0000000000b46cda l     F .text	0000000000000090              upd_get_nth_field
0000000000b46e12 l     F .text	0000000000000125              row_purge_reposition_pcur
0000000000b46f37 l     F .text	00000000000002f2              row_purge_remove_clust_if_poss_low
0000000000b47229 l     F .text	0000000000000094              row_purge_remove_clust_if_poss
0000000000b4740b l     F .text	0000000000000202              row_purge_remove_sec_if_poss_tree
0000000000b4760d l     F .text	00000000000001e8              row_purge_remove_sec_if_poss_leaf
0000000000b477f5 l     F .text	00000000000000a2              row_purge_remove_sec_if_poss
0000000000b47897 l     F .text	0000000000000190              row_purge_del_mark
0000000000b47a27 l     F .text	0000000000000502              row_purge_upd_exist_or_extern_func
0000000000b47f29 l     F .text	00000000000002ec              row_purge_parse_undo_rec
0000000000b48215 l     F .text	0000000000000208              row_purge
0000000000000000 l    df *ABS*	0000000000000000              row0undo.c
0000000000b48612 l     F .text	000000000000001b              ut_max
0000000000b4862d l     F .text	0000000000000080              ut_ull_create
0000000000b486ad l     F .text	00000000000000b4              ut_align_down
0000000000b48761 l     F .text	0000000000000045              mach_read_from_1
0000000000b487a6 l     F .text	000000000000002c              mach_read_from_2
0000000000b487d2 l     F .text	0000000000000072              mach_read_from_3
0000000000b48844 l     F .text	0000000000000087              mach_read_from_4
0000000000b488cb l     F .text	0000000000000050              mach_get_compressed_size
0000000000b4891b l     F .text	00000000000000f2              mach_read_compressed
0000000000b48a0d l     F .text	000000000000006b              mach_read_from_7
0000000000b48a78 l     F .text	00000000000000a0              mach_ull_read_much_compressed
0000000000b48b18 l     F .text	0000000000000012              mem_block_get_len
0000000000b48b2a l     F .text	0000000000000084              mem_block_set_free
0000000000b48bae l     F .text	0000000000000012              mem_block_get_free
0000000000b48bc0 l     F .text	0000000000000012              mem_block_get_start
0000000000b48bd2 l     F .text	0000000000000143              mem_heap_alloc
0000000000b48d15 l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000b48e54 l     F .text	000000000000004d              mem_heap_empty
0000000000b48ea1 l     F .text	000000000000016b              mem_heap_create_func
0000000000b4900c l     F .text	00000000000000a3              mem_heap_free_func
0000000000b490af l     F .text	000000000000003a              mem_free_func
0000000000b490e9 l     F .text	0000000000000074              dyn_array_create
0000000000b4915d l     F .text	0000000000000096              mtr_start
0000000000b491f3 l     F .text	0000000000000043              dfield_get_type
0000000000b49236 l     F .text	000000000000005b              dfield_set_len
0000000000b49291 l     F .text	000000000000002d              dfield_copy
0000000000b492be l     F .text	0000000000000043              dtuple_get_n_fields
0000000000b49301 l     F .text	000000000000008f              dtuple_get_nth_field
0000000000b49390 l     F .text	000000000000012d              dtuple_create_from_mem
0000000000b494bd l     F .text	000000000000008e              dtuple_create
0000000000b4954b l     F .text	0000000000000090              dtuple_copy
0000000000b495db l     F .text	0000000000000114              dict_col_get_clust_pos
0000000000b4976b l     F .text	0000000000000085              dict_index_is_clust
0000000000b496ef l     F .text	000000000000007c              dict_table_get_first_index
0000000000b497f0 l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000b498c1 l     F .text	000000000000014a              dict_table_get_sys_col
0000000000b49a0b l     F .text	00000000000000c5              dict_table_get_sys_col_no
0000000000b49ad0 l     F .text	0000000000000051              dict_table_get_format
0000000000b49b21 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000b49ba8 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000b49c60 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000b49d34 l     F .text	0000000000000118              dict_index_get_sys_col_pos
0000000000b49e4c l     F .text	000000000000006d              rec_get_bit_field_1
0000000000b49eb9 l     F .text	000000000000006d              rec_get_bit_field_2
0000000000b49f26 l     F .text	00000000000000bb              rec_get_n_fields_old
0000000000b49fe1 l     F .text	0000000000000091              rec_get_status
0000000000b4a072 l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000b4a0e9 l     F .text	0000000000000078              rec_offs_set_n_alloc
0000000000b4a161 l     F .text	00000000000000ed              rec_offs_n_fields
0000000000b4a24e l     F .text	00000000000002a6              rec_offs_validate
0000000000b4a4f4 l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000b4a602 l     F .text	000000000000001f              page_align
0000000000b4a621 l     F .text	000000000000008e              page_cur_get_rec
0000000000b4a6af l     F .text	000000000000001e              btr_cur_get_rec
0000000000b4a6cd l     F .text	0000000000000016              btr_pcur_get_btr_cur
0000000000b4a6e3 l     F .text	000000000000008e              btr_pcur_get_rec
0000000000b4a771 l     F .text	0000000000000071              btr_pcur_commit_specify_mtr
0000000000b4a7e2 l     F .text	0000000000000038              btr_pcur_init
0000000000b4a81a l     F .text	00000000000000be              btr_pcur_close
0000000000b4a8d8 l     F .text	000000000000004c              trx_undo_roll_ptr_is_insert
0000000000b4a924 l     F .text	000000000000001a              trx_read_roll_ptr
0000000000b4a93e l     F .text	0000000000000026              trx_undo_rec_get_undo_no
0000000000b4a964 l     F .text	0000000000000047              thr_get_trx
0000000000b4a9ab l     F .text	0000000000000042              que_node_get_type
0000000000b4a9ed l     F .text	0000000000000012              que_node_get_parent
0000000000b4a9ff l     F .text	0000000000000110              row_get_trx_id_offset
0000000000b4ab0f l     F .text	00000000000000d9              row_get_rec_roll_ptr
0000000000b4b03d l     F .text	000000000000022f              row_undo
0000000000000000 l    df *ABS*	0000000000000000              ut0rbt.c
0000000000b4b3b8 l     F .text	0000000000000067              rbt_print_subtree
0000000000b4b41f l     F .text	0000000000000085              rbt_check_ordering
0000000000b4b4a4 l     F .text	00000000000000e6              rbt_count_black_nodes
0000000000b4b58a l     F .text	00000000000000a5              rbt_rotate_left
0000000000b4b62f l     F .text	00000000000000a5              rbt_rotate_right
0000000000b4b6d4 l     F .text	0000000000000095              rbt_tree_add_child
0000000000b4b769 l     F .text	0000000000000101              rbt_tree_insert
0000000000b4b86a l     F .text	00000000000001e1              rbt_balance_tree
0000000000b4ba4b l     F .text	00000000000000b4              rbt_find_successor
0000000000b4baff l     F .text	00000000000000b4              rbt_find_predecessor
0000000000b4bbb3 l     F .text	0000000000000088              rbt_eject_node
0000000000b4bc3b l     F .text	0000000000000084              rbt_replace_node
0000000000b4bcbf l     F .text	00000000000001dc              rbt_detach_node
0000000000b4be9b l     F .text	00000000000001d9              rbt_balance_right
0000000000b4c074 l     F .text	00000000000001d9              rbt_balance_left
0000000000b4c24d l     F .text	0000000000000165              rbt_remove_node_and_rebalance
0000000000b4c3b2 l     F .text	0000000000000057              rbt_free_node
0000000000000000 l    df *ABS*	0000000000000000              buf0buddy.c
0000000000b4cec0 l     F .text	0000000000000017              os_atomic_test_and_set
0000000000b4ced7 l     F .text	0000000000000017              os_atomic_clear
0000000000b4ceee l     F .text	00000000000000b4              ut_align_down
0000000000b4cfa2 l     F .text	00000000000000b2              ut_align_offset
0000000000b4d054 l     F .text	0000000000000087              mach_read_from_4
0000000000b4d0db l     F .text	000000000000001e              mutex_test_and_set
0000000000b4d0f9 l     F .text	000000000000001f              mutex_reset_lock_word
0000000000b4d118 l     F .text	000000000000004e              mutex_get_waiters
0000000000b4d166 l     F .text	000000000000007b              mutex_exit_func
0000000000b4d1e1 l     F .text	00000000000000d1              mutex_enter_func
0000000000b4d2b2 l     F .text	000000000000010e              pfs_mutex_enter_func
0000000000b4d3c0 l     F .text	000000000000006d              pfs_mutex_exit_func
0000000000b4d42d l     F .text	0000000000000057              ut_hash_ulint
0000000000b4d484 l     F .text	00000000000000bc              hash_get_nth_cell
0000000000b4d540 l     F .text	000000000000008c              hash_calc_hash
0000000000b4d5cc l     F .text	00000000000000dc              hash_get_mutex_no
0000000000b4d6a8 l     F .text	00000000000000cc              hash_get_nth_mutex
0000000000b4d774 l     F .text	000000000000009f              hash_get_mutex
0000000000b4d813 l     F .text	000000000000006e              buf_pool_from_bpage
0000000000b4d881 l     F .text	000000000000001a              buf_pool_from_block
0000000000b4d89b l     F .text	0000000000000046              buf_page_get_state
0000000000b4d8e1 l     F .text	000000000000001a              buf_block_get_state
0000000000b4d8fb l     F .text	000000000000025a              buf_page_set_state
0000000000b4db55 l     F .text	0000000000000023              buf_block_set_state
0000000000b4db78 l     F .text	000000000000006a              buf_page_in_file
0000000000b4dbe2 l     F .text	0000000000000066              buf_page_get_mutex
0000000000b4dc48 l     F .text	000000000000004a              buf_page_get_io_fix
0000000000b4dc92 l     F .text	000000000000012c              buf_page_can_relocate
0000000000b4ddbe l     F .text	0000000000000027              buf_page_address_fold
0000000000b4dde5 l     F .text	00000000000002b9              buf_page_hash_get_low
0000000000b4e09e l     F .text	0000000000000074              buf_page_hash_get
0000000000b4e112 l     F .text	0000000000000094              buf_buddy_get_slot
0000000000b4e1a6 l     F .text	00000000000000b3              page_zip_get_size
0000000000b4e259 l     F .text	0000000000000112              buf_buddy_get
0000000000b4e36b l     F .text	0000000000000299              buf_buddy_add_to_free
0000000000b4e604 l     F .text	0000000000000280              buf_buddy_remove_from_free
0000000000b4e884 l     F .text	00000000000004c1              buf_buddy_alloc_zip
0000000000b4ed45 l     F .text	00000000000004b9              buf_buddy_block_free
0000000000b4f1fe l     F .text	00000000000002eb              buf_buddy_block_register
0000000000b4f4e9 l     F .text	00000000000003ff              buf_buddy_alloc_from
0000000000b4fb4b l     F .text	0000000000000334              buf_buddy_relocate
0000000000000000 l    df *ABS*	0000000000000000              eval0proc.c
0000000000b5061e l     F .text	000000000000002d              ut_memcpy
0000000000b5064b l     F .text	0000000000000045              mach_read_from_1
0000000000b50690 l     F .text	0000000000000082              mach_write_to_4
0000000000b50712 l     F .text	0000000000000087              mach_read_from_4
0000000000b50799 l     F .text	0000000000000090              dfield_get_data
0000000000b50829 l     F .text	0000000000000092              dfield_get_len
0000000000b508bb l     F .text	000000000000005b              dfield_set_len
0000000000b50916 l     F .text	000000000000008e              dfield_copy_data
0000000000b509a4 l     F .text	0000000000000042              que_node_get_type
0000000000b509e6 l     F .text	0000000000000043              que_node_get_val
0000000000b50a29 l     F .text	0000000000000043              que_node_get_val_buf_size
0000000000b50a6c l     F .text	0000000000000012              que_node_get_next
0000000000b50a7e l     F .text	0000000000000012              que_node_get_parent
0000000000b50a90 l     F .text	0000000000000079              eval_node_ensure_val_buf
0000000000b50b09 l     F .text	0000000000000084              eval_sym
0000000000b50b8d l     F .text	000000000000003a              eval_exp
0000000000b50bc7 l     F .text	000000000000009a              eval_node_set_int_val
0000000000b50c61 l     F .text	000000000000006c              eval_node_get_int_val
0000000000b50ccd l     F .text	0000000000000067              eval_node_get_ibool_val
0000000000b50d34 l     F .text	000000000000006f              eval_node_copy_and_alloc_val
0000000000b50da3 l     F .text	0000000000000059              eval_node_copy_val
0000000000000000 l    df *ABS*	0000000000000000              pars0opt.c
0000000000b51593 l     F .text	000000000000002d              ut_memcpy
0000000000b515c0 l     F .text	0000000000000012              mem_block_get_len
0000000000b515d2 l     F .text	0000000000000084              mem_block_set_free
0000000000b51656 l     F .text	0000000000000012              mem_block_get_free
0000000000b51668 l     F .text	0000000000000143              mem_heap_alloc
0000000000b517ab l     F .text	0000000000000043              dfield_get_type
0000000000b517ee l     F .text	000000000000005b              dfield_set_len
0000000000b51849 l     F .text	0000000000000043              dtuple_get_n_fields
0000000000b5188c l     F .text	000000000000008f              dtuple_get_nth_field
0000000000b5191b l     F .text	000000000000012d              dtuple_create_from_mem
0000000000b51a48 l     F .text	000000000000008e              dtuple_create
0000000000b51ad6 l     F .text	000000000000004e              dict_col_get_no
0000000000b51b24 l     F .text	000000000000007c              dict_table_get_first_index
0000000000b51ba0 l     F .text	000000000000007c              dict_table_get_next_index
0000000000b51c1c l     F .text	0000000000000085              dict_index_is_clust
0000000000b51ca1 l     F .text	0000000000000087              dict_index_get_n_fields
0000000000b51d28 l     F .text	00000000000000b8              dict_index_get_n_unique
0000000000b51de0 l     F .text	00000000000000d4              dict_index_get_n_unique_in_tree
0000000000b51eb4 l     F .text	00000000000000d1              dict_index_get_nth_field
0000000000b51f85 l     F .text	0000000000000042              dict_field_get_col
0000000000b51fc7 l     F .text	000000000000002d              dict_index_get_nth_col
0000000000b51ff4 l     F .text	000000000000002d              dict_index_get_nth_col_no
0000000000b52021 l     F .text	00000000000000e2              dict_index_is_corrupted
0000000000b52103 l     F .text	0000000000000038              btr_pcur_init
0000000000b5213b l     F .text	0000000000000042              que_node_get_type
0000000000b5217d l     F .text	0000000000000062              que_node_list_add_last
0000000000b521df l     F .text	0000000000000012              que_node_get_next
0000000000b521f1 l     F .text	000000000000006d              sel_node_get_nth_plan
0000000000b5225e l     F .text	000000000000006f              opt_invert_cmp_op
0000000000b522cd l     F .text	0000000000000165              opt_check_exp_determined_before
0000000000b52432 l     F .text	00000000000002c2              opt_look_for_col_in_comparison_before
0000000000b526f4 l     F .text	000000000000020a              opt_look_for_col_in_cond_before
0000000000b528fe l     F .text	00000000000001b5              opt_calc_index_goodness
0000000000b52ab3 l     F .text	000000000000001b              opt_calc_n_fields_from_goodness
0000000000b52ace l     F .text	0000000000000147              opt_op_to_search_mode
0000000000b52c15 l     F .text	000000000000004d              opt_is_arg
0000000000b52c62 l     F .text	000000000000019d              opt_check_order_by
0000000000b52dff l     F .text	000000000000042b              opt_search_plan_for_table
0000000000b5322a l     F .text	0000000000000287              opt_classify_comparison
0000000000b534b1 l     F .text	00000000000002ae              opt_find_test_conds
0000000000b5375f l     F .text	00000000000000c9              opt_normalize_cmp_conds
0000000000b53828 l     F .text	0000000000000100              opt_determine_and_normalize_test_conds
0000000000b53c25 l     F .text	000000000000011e              opt_find_copy_cols
0000000000b53d43 l     F .text	0000000000000112              opt_classify_cols
0000000000b53e55 l     F .text	0000000000000236              opt_clust_access
0000000000000000 l    df *ABS*	0000000000000000              row0uins.c
0000000000b5448d l     F .text	00000000000000b4              ut_align_down
0000000000b54541 l     F .text	00000000000000a3              mem_heap_free_func
0000000000b545e4 l     F .text	000000000000003a              mem_free_func
0000000000b5461e l     F .text	0000000000000074              dyn_array_create
0000000000b54692 l     F .text	0000000000000096              mtr_start
0000000000b54728 l     F .text	000000000000007c              dict_table_get_first_index
0000000000b547a4 l     F .text	000000000000007c              dict_table_get_next_index
0000000000b54820 l     F .text	0000000000000085              dict_index_is_clust
0000000000b548a5 l     F .text	00000000000000e2              dict_index_is_corrupted
0000000000b54987 l     F .text	0000000000000022              log_free_check
0000000000b549a9 l     F .text	000000000000001f              page_align
0000000000b549c8 l     F .text	000000000000008e              page_cur_get_rec
0000000000b54a56 l     F .text	000000000000001e              btr_cur_get_rec
0000000000b54a74 l     F .text	0000000000000016              btr_pcur_get_btr_cur
0000000000b54a8a l     F .text	000000000000008e              btr_pcur_get_rec
0000000000b54b18 l     F .text	0000000000000071              btr_pcur_commit_specify_mtr
0000000000b54b89 l     F .text	00000000000000be              btr_pcur_close
0000000000b54c47 l     F .text	0000000000000392              row_undo_ins_remove_clust_rec
0000000000b54fd9 l     F .text	000000000000021d              row_undo_ins_remove_sec_low
0000000000b551f6 l     F .text	000000000000007c              row_undo_ins_remove_sec
0000000000b55272 l     F .text	0000000000000233              row_undo_ins_parse_undo_rec
0000000000000000 l    df *ABS*	0000000000000000              row0umod.c
0000000000b556ed l     F .text	0000000000000080              ut_ull_create
0000000000b5576d l     F .text	00000000000000b4              ut_align_down
0000000000b55821 l     F .text	0000000000000045              mach_read_from_1
0000000000b55866 l     F .text	000000000000002c              mach_read_from_2
0000000000b55892 l     F .text	0000000000000087              mach_read_from_4
0000000000b55919 l     F .text	000000000000006b              mach_read_from_6
0000000000b55984 l     F .text	0000000000000012              mem_block_get_len
0000000000b55996 l     F .text	0000000000000084              mem_block_set_free
0000000000b55a1a l     F .text	0000000000000012              mem_block_get_free
0000000000b55a2c l     F .text	0000000000000012              mem_block_get_start
0000000000b55a3e l     F .text	000000000000013f              mem_heap_free_heap_top
0000000000b55b7d l     F .text	000000000000004d              mem_heap_empty
0000000000b55bca l     F .text	000000000000016b              mem_heap_create_func
0000000000b55d35 l     F .text	00000000000000a3              mem_heap_free_func
0000000000b55dd8 l     F .text	000000000000003a              mem_free_func
0000000000b55e12 l     F .text	0000000000000074              dyn_array_create
0000000000b55e86 l     F .text	0000000000000096              mtr_start
0000000000b55f1c l     F .text	0000000000000114              dict_col_get_clust_pos
0000000000b56128 l     F .text	0000000000000085              dict_index_is_clust
0000000000b56030 l     F .text	000000000000007c              dict_table_get_first_index
0000000000b560ac l     F .text	000000000000007c              dict_table_get_next_index
0000000000b561ad l     F .text	00000000000000d1              dict_table_get_nth_col
0000000000b5627e l     F .text	000000000000014a              dict_table_get_sys_col
0000000000b563c8 l     F .text	00000000000000c5              dict_table_get_sys_col_no
0000000000b5648d l     F .text	000000000000004c              dict_table_is_comp
0000000000b564d9 l     F .text	0000000000000051              dict_table_get_format
0000000000b5652a l     F .text	0000000000000118              dict_index_get_sys_col_pos
0000000000b56642 l     F .text	00000000000000e2              dict_index_is_corrupted
0000000000b56724 l     F .text	0000000000000022              log_free_check
0000000000b56746 l     F .text	000000000000001a              trx_read_trx_id
0000000000b56760 l     F .text	000000000000006d              rec_get_bit_field_1
0000000000b567cd l     F .text	0000000000000053              rec_get_deleted_flag
0000000000b56820 l     F .text	0000000000000077              rec_offs_get_n_alloc
0000000000b56897 l     F .text	00000000000000ed              rec_offs_n_fields
0000000000b56984 l     F .text	000000000000010e              rec_get_nth_field_offs
0000000000b56a92 l     F .text	000000000000001f              page_align
0000000000b56ab1 l     F .text	000000000000008e              page_cur_get_rec
0000000000b56b3f l     F .text	000000000000001e              btr_cur_get_rec
0000000000b56b5d l     F .text	0000000000000011              btr_cur_get_index
0000000000b56b6e l     F .text	0000000000000016              btr_pcur_get_btr_cur
0000000000b56b84 l     F .text	000000000000008e              btr_pcur_get_rec
0000000000b56c12 l     F .text	0000000000000071              btr_pcur_commit_specify_mtr
0000000000b56c83 l     F .text	00000000000000be              btr_pcur_close
0000000000b56d41 l     F .text	0000000000000047              thr_get_trx
0000000000b56d88 l     F .text	0000000000000022              thr_is_recv
0000000000b56daa l     F .text	0000000000000043              upd_get_n_fields
0000000000b56ded l     F .text	00000000000001be              row_undo_mod_clust_low
0000000000b56fab l     F .text	000000000000036d              row_undo_mod_remove_clust_low
0000000000b57318 l     F .text	0000000000000249              row_undo_mod_clust
0000000000b57561 l     F .text	0000000000000396              row_undo_mod_del_mark_or_remove_sec_low
0000000000b578f7 l     F .text	000000000000006f              row_undo_mod_del_mark_or_remove_sec
0000000000b57966 l     F .text	000000000000050b              row_undo_mod_del_unmark_sec_and_undo_update
0000000000b57e71 l     F .text	000000000000020b              row_undo_mod_upd_del_sec
0000000000b5807c l     F .text	00000000000001ed              row_undo_mod_del_mark_sec
0000000000b58269 l     F .text	000000000000031b              row_undo_mod_upd_exist_sec
0000000000b58584 l     F .text	00000000000001e0              row_undo_mod_parse_undo_rec
0000000000000000 l    df *ABS*	0000000000000000              ha_tina.cc
0000000000b5897e l     F .text	0000000000000071              inline_mysql_mutex_init
0000000000b589ef l     F .text	0000000000000080              inline_mysql_mutex_destroy
0000000000b58a6f l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000b58b86 l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000b58c03 l     F .text	0000000000000067              bitmap_is_set
0000000000d45ee0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000b58c6a l     F .text	000000000000012e              inline_mysql_file_stat(unsigned int, char const*, unsigned int, char const*, stat*, int)
0000000000b58d98 l     F .text	0000000000000121              inline_mysql_file_chsize(char const*, unsigned int, int, unsigned long long, int, int)
0000000000b58eb9 l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
0000000000b58fe4 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
0000000000b5910e l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
0000000000b5920e l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
0000000000b5938a l     F .text	0000000000000174              inline_mysql_file_write(char const*, unsigned int, int, unsigned char const*, unsigned long, int)
0000000000b594fe l     F .text	000000000000011c              inline_mysql_file_seek(char const*, unsigned int, int, unsigned long long, int, int)
0000000000b5961a l     F .text	000000000000012e              inline_mysql_file_rename(unsigned int, char const*, unsigned int, char const*, char const*, int)
0000000000b59748 l     F .text	0000000000000107              inline_mysql_file_sync(char const*, unsigned int, int, int)
0000000000d45b78 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000d46070 l     O .rodata	000000000000001c              handler::~handler()::__PRETTY_FUNCTION__
0000000000d46040 l     O .rodata	000000000000002d              handler::exec_bulk_update(unsigned int*)::__PRETTY_FUNCTION__
0000000000d46000 l     O .rodata	0000000000000027              handler::end_bulk_delete()::__PRETTY_FUNCTION__
0000000000d45fa0 l     O .rodata	0000000000000042              handler::bulk_update_row(unsigned char const*, unsigned char*, unsigned int*)::__PRETTY_FUNCTION__
0000000000b5984f l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
0000000000b59881 l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000b5989b l     F .text	0000000000000025              dbug_tmp_use_all_columns(TABLE*, st_bitmap*)
0000000000b598c0 l     F .text	0000000000000026              dbug_tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000001393ac0 l     O .bss	0000000000000058              tina_open_tables
0000000000b5992d l     F .text	000000000000002d              tina_get_key(st_tina_share*, unsigned long*, char)
0000000001393b18 l     O .bss	0000000000000004              csv_key_mutex_tina
0000000001393b1c l     O .bss	0000000000000004              csv_key_mutex_TINA_SHARE_mutex
00000000010f6280 l     O .data	0000000000000030              all_tina_mutexes
0000000001393b20 l     O .bss	0000000000000004              csv_key_file_metadata
0000000001393b24 l     O .bss	0000000000000004              csv_key_file_data
0000000001393b28 l     O .bss	0000000000000004              csv_key_file_update
00000000010f62c0 l     O .data	0000000000000048              all_tina_files
0000000000b5995a l     F .text	0000000000000078              init_tina_psi_keys()
0000000000b599d2 l     F .text	00000000000000bd              tina_init_func(void*)
0000000000b5a7ec l     F .text	0000000000000050              tina_create_handler(handlerton*, TABLE_SHARE*, st_mem_root*)
0000000000b59a8f l     F .text	000000000000003a              tina_done_func(void*)
0000000000b59ac9 l     F .text	00000000000003d8              get_share(char const*, TABLE*)
0000000000b59ea1 l     F .text	0000000000000212              read_meta_file(int, unsigned long long*)
0000000000b5a0b3 l     F .text	0000000000000205              write_meta_file(int, unsigned long long, bool)
0000000000b5a537 l     F .text	00000000000001c9              free_share(st_tina_share*)
00000000010f6310 l     O .data	0000000000000018              ha_tina_exts
0000000000d45f20 l     O .rodata	0000000000000036              ha_tina::update_row(unsigned char const*, unsigned char*)::__PRETTY_FUNCTION__
0000000000d45f60 l     O .rodata	000000000000002e              ha_tina::delete_row(unsigned char const*)::__PRETTY_FUNCTION__
0000000000d45f8e l     O .rodata	0000000000000006              ha_tina::check(THD*, st_ha_check_opt*)::__FUNCTION__
0000000000000000 l    df *ABS*	0000000000000000              transparent_file.cc
0000000000b5df78 l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
0000000000b5e0f4 l     F .text	000000000000011c              inline_mysql_file_seek(char const*, unsigned int, int, unsigned long long, int, int)
0000000000000000 l    df *ABS*	0000000000000000              ha_partition.cc
0000000000b5e504 l     F .text	0000000000000071              inline_mysql_mutex_init
0000000000b5e575 l     F .text	0000000000000080              inline_mysql_mutex_destroy
0000000000b5e5f5 l     F .text	0000000000000117              inline_mysql_mutex_lock
0000000000b5e70c l     F .text	000000000000007d              inline_mysql_mutex_unlock
0000000000b5e789 l     F .text	0000000000000077              bitmap_set_bit
0000000000d48f40 l     O .rodata	0000000000000026              bitmap_set_bit::__PRETTY_FUNCTION__
0000000000b5e800 l     F .text	0000000000000067              bitmap_is_set
0000000000d48ec0 l     O .rodata	000000000000002b              bitmap_is_set::__PRETTY_FUNCTION__
0000000000b5e867 l     F .text	000000000000012b              inline_mysql_file_create(unsigned int, char const*, unsigned int, char const*, int, int, int)
0000000000b5e992 l     F .text	000000000000012a              inline_mysql_file_open(unsigned int, char const*, unsigned int, char const*, int, int)
0000000000b5eabc l     F .text	0000000000000100              inline_mysql_file_close(char const*, unsigned int, int, int)
0000000000b5ebbc l     F .text	000000000000017c              inline_mysql_file_read(char const*, unsigned int, int, unsigned char*, unsigned long, int)
0000000000b5ed38 l     F .text	0000000000000174              inline_mysql_file_write(char const*, unsigned int, int, unsigned char const*, unsigned long, int)
0000000000b5eeac l     F .text	000000000000011c              inline_mysql_file_seek(char const*, unsigned int, int, unsigned long long, int, int)
0000000000b5efc8 l     F .text	000000000000011f              inline_mysql_file_delete(unsigned int, char const*, unsigned int, char const*, int)
0000000000b5f0e7 l     F .text	000000000000012e              inline_mysql_file_rename(unsigned int, char const*, unsigned int, char const*, char const*, int)
0000000000d46158 l     O .rodata	0000000000000008              MDL_LOCKS_CACHE_SIZE_DEFAULT
0000000000d489e0 l     O .rodata	000000000000001c              handler::~handler()::__PRETTY_FUNCTION__
0000000000d49080 l     O .rodata	0000000000000027              handler::ha_index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000d490b0 l     O .rodata	000000000000001c              handler::ha_index_end()::__PRETTY_FUNCTION__
0000000000d48c00 l     O .rodata	000000000000001f              handler::ha_rnd_init(bool)::__PRETTY_FUNCTION__
0000000000d48c20 l     O .rodata	000000000000001a              handler::ha_rnd_end()::__PRETTY_FUNCTION__
0000000000d49780 l     O .rodata	000000000000002d              handler::exec_bulk_update(unsigned int*)::__PRETTY_FUNCTION__
0000000000d49740 l     O .rodata	0000000000000027              handler::end_bulk_delete()::__PRETTY_FUNCTION__
0000000000d496e0 l     O .rodata	0000000000000042              handler::bulk_update_row(unsigned char const*, unsigned char*, unsigned int*)::__PRETTY_FUNCTION__
0000000000b5f215 l     F .text	000000000000001f              ha_legacy_type(handlerton const*)
0000000000b5f234 l     F .text	0000000000000032              tmp_use_all_columns(TABLE*, st_bitmap*)
0000000000b5f266 l     F .text	000000000000001a              tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000b5f280 l     F .text	0000000000000025              dbug_tmp_use_all_columns(TABLE*, st_bitmap*)
0000000000b5f2a5 l     F .text	0000000000000026              dbug_tmp_restore_column_map(st_bitmap*, unsigned int*)
0000000000d46264 l     O .rodata	0000000000000004              SRID_SIZE
0000000000d46268 l     O .rodata	0000000000000004              SIZEOF_STORED_DOUBLE
0000000000d4626c l     O .rodata	0000000000000004              POINT_DATA_SIZE
0000000000d46270 l     O .rodata	0000000000000004              WKB_HEADER_SIZE
0000000000d46274 l     O .rodata	0000000000000004              GET_SIZE_ERROR
00000000010659e0 l     O .data.rel.ro	0000000000000050              sp_data_access_name
0000000000d49660 l     O .rodata	0000000000000033              THD::is_current_stmt_binlog_format_row() const::__PRETTY_FUNCTION__
0000000000d488e0 l     O .rodata	0000000000000031              ha_partition::lock_auto_increment()::__PRETTY_FUNCTION__
0000000000d48920 l     O .rodata	0000000000000033              ha_partition::unlock_auto_increment()::__PRETTY_FUNCTION__
0000000000d48960 l     O .rodata	0000000000000040              ha_partition::set_auto_increment_if_higher(Field*)::__PRETTY_FUNCTION__
00000000010f6420 l     O .data	0000000000000008              ha_par_ext
0000000000b5f2cb l     F .text	000000000000006d              partition_initialize(void*)
0000000000b5f338 l     F .text	00000000000000ac              partition_create_handler(handlerton*, TABLE_SHARE*, st_mem_root*)
0000000000b5f3e4 l     F .text	000000000000000b              partition_flags()
0000000000b5f3ef l     F .text	000000000000000e              alter_table_flags(unsigned int)
0000000000d489a0 l     O .rodata	0000000000000039              ha_partition::ha_partition(handlerton*, partition_info*)::__PRETTY_FUNCTION__
0000000000d48a00 l     O .rodata	0000000000000033              ha_partition::initialize_partition(st_mem_root*)::__PRETTY_FUNCTION__
0000000000d48a40 l     O .rodata	0000000000000047              ha_partition::create(char const*, TABLE*, st_ha_create_information*)::__PRETTY_FUNCTION__
0000000000d48aa0 l     O .rodata	0000000000000037              ha_partition::drop_partitions(char const*)::__PRETTY_FUNCTION__
0000000000d48ae0 l     O .rodata	0000000000000039              ha_partition::rename_partitions(char const*)::__PRETTY_FUNCTION__
00000000010f6440 l     O .data	0000000000000038              opt_op_name
0000000000d48b20 l     O .rodata	0000000000000043              ha_partition::handle_opt_part(THD*, st_ha_check_opt*, unsigned int, unsigned int)::__PRETTY_FUNCTION__
0000000000b616a7 l     F .text	0000000000000349              print_admin_msg(THD*, unsigned int, char const*, char const*, char const*, char const*, char const*, ...)
0000000000d48b80 l     O .rodata	0000000000000078              ha_partition::change_partitions(st_ha_create_information*, char const*, unsigned long long*, unsigned long long*, unsigned char const*, unsigned long)::__PRETTY_FUNCTION__
0000000000d48c40 l     O .rodata	0000000000000042              ha_partition::change_table_ptr(TABLE*, TABLE_SHARE*)::__PRETTY_FUNCTION__
0000000000d48ca0 l     O .rodata	0000000000000057              ha_partition::del_ren_cre_table(char const*, char const*, TABLE*, st_ha_create_information*)::__PRETTY_FUNCTION__
0000000000d48d00 l     O .rodata	000000000000003e              ha_partition::find_partition_element(unsigned int)::__PRETTY_FUNCTION__
0000000000b642e8 l     F .text	000000000000004f              name_add(char*, char const*, char const*)
0000000000d48d40 l     O .rodata	000000000000003a              ha_partition::new_handlers_from_part_info(st_mem_root*)::__PRETTY_FUNCTION__
0000000000d48d80 l     O .rodata	0000000000000031              ha_partition::setup_engine_array(st_mem_root*)::__PRETTY_FUNCTION__
0000000000d48dc0 l     O .rodata	0000000000000037              ha_partition::open(char const*, int, unsigned int)::__PRETTY_FUNCTION__
0000000000d48e00 l     O .rodata	0000000000000022              ha_partition::close()::__PRETTY_FUNCTION__
0000000000d48e40 l     O .rodata	0000000000000033              ha_partition::external_lock(THD*, int)::__PRETTY_FUNCTION__
0000000000d48e80 l     O .rodata	0000000000000036              ha_partition::was_semi_consistent_read()::__PRETTY_FUNCTION__
0000000000d48f00 l     O .rodata	000000000000002c              ha_partition::write_row(unsigned char*)::__PRETTY_FUNCTION__
0000000000d48f80 l     O .rodata	000000000000002b              ha_partition::rnd_next(unsigned char*)::__PRETTY_FUNCTION__
0000000000d48fc0 l     O .rodata	0000000000000032              ha_partition::rnd_pos(unsigned char*, unsigned char*)::__PRETTY_FUNCTION__
0000000000d49000 l     O .rodata	0000000000000030              ha_partition::init_record_priority_queue()::__PRETTY_FUNCTION__
0000000000d49040 l     O .rodata	0000000000000031              ha_partition::index_init(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000d490e0 l     O .rodata	0000000000000032              ha_partition::common_index_read(unsigned char*, bool)::__PRETTY_FUNCTION__
0000000000d49120 l     O .rodata	0000000000000069              ha_partition::index_read_idx_map(unsigned char*, unsigned int, unsigned char const*, unsigned long, ha_rkey_function)::__PRETTY_FUNCTION__
0000000000d491a0 l     O .rodata	000000000000002d              ha_partition::index_next(unsigned char*)::__PRETTY_FUNCTION__
0000000000d491e0 l     O .rodata	0000000000000046              ha_partition::index_next_same(unsigned char*, unsigned char const*, unsigned int)::__PRETTY_FUNCTION__
0000000000d49240 l     O .rodata	000000000000002d              ha_partition::index_prev(unsigned char*)::__PRETTY_FUNCTION__
0000000000d49280 l     O .rodata	0000000000000036              ha_partition::partition_scan_set_up(unsigned char*, bool)::__PRETTY_FUNCTION__
0000000000d492c0 l     O .rodata	0000000000000036              ha_partition::handle_unordered_next(unsigned char*, bool)::__PRETTY_FUNCTION__
0000000000d49300 l     O .rodata	000000000000003f              ha_partition::handle_unordered_scan_next_partition(unsigned char*)::__PRETTY_FUNCTION__
0000000000d49340 l     O .rodata	000000000000003a              ha_partition::handle_ordered_index_scan(unsigned char*, bool)::__PRETTY_FUNCTION__
0000000000d49380 l     O .rodata	000000000000003c              ha_partition::handle_ordered_index_scan_key_not_found()::__PRETTY_FUNCTION__
0000000000d493c0 l     O .rodata	0000000000000034              ha_partition::handle_ordered_next(unsigned char*, bool)::__PRETTY_FUNCTION__
0000000000d49400 l     O .rodata	0000000000000025              ha_partition::info(unsigned int)::__PRETTY_FUNCTION__
0000000000d49440 l     O .rodata	0000000000000033              ha_partition::extra(ha_extra_function)::__PRETTY_FUNCTION__
0000000000d49480 l     O .rodata	000000000000003e              ha_partition::extra_opt(ha_extra_function, unsigned long)::__PRETTY_FUNCTION__
0000000000d494c0 l     O .rodata	000000000000002d              ha_partition::late_extra_no_cache(unsigned int)::__PRETTY_FUNCTION__
0000000000d49500 l     O .rodata	0000000000000031              ha_partition::print_error(int, int)::__PRETTY_FUNCTION__
0000000000d49540 l     O .rodata	0000000000000044              ha_partition::final_add_index(handler_add_index*, bool)::__PRETTY_FUNCTION__
0000000001393b30 l     O .bss	0000000000000010              ha_partition_ext
0000000000d495a0 l     O .rodata	000000000000003e              ha_partition::cmp_ref(unsigned char const*, unsigned char const*)::__PRETTY_FUNCTION__
0000000000d495e0 l     O .rodata	0000000000000067              ha_partition::get_auto_increment(unsigned long long, unsigned long long, unsigned long long, unsigned long long*, unsigned long long*)::__PRETTY_FUNCTION__
0000000000d496a0 l     O .rodata	0000000000000033              ha_partition::check_misplaced_rows(unsigned int, bool)::__PRETTY_FUNCTION__
0000000000b71045 l     F .text	000000000000002a              __static_initialization_and_destruction_0(int, int)
0000000000b7106f l     F .text	0000000000000015              _GLOBAL__sub_I_ha_partition.cc
0000000000000000 l    df *ABS*	0000000000000000              my_compare.c
0000000000b7171e l     F .text	000000000000011e              compare_bin
0000000000000000 l    df *ABS*	0000000000000000              my_lock.c
0000000000000000 l    df *ABS*	0000000000000000              my_redel.c
0000000000000000 l    df *ABS*	0000000000000000              lf_alloc-pin.c
0000000000b738a8 l     F .text	000000000000004c              my_atomic_cas32
0000000000b738f4 l     F .text	0000000000000058              my_atomic_casptr
0000000000b7394c l     F .text	0000000000000022              my_atomic_add32
0000000000b7396e l     F .text	000000000000001d              my_atomic_storeptr
0000000000d499e8 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.9500
0000000000d49a00 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.9522
0000000000b73e53 l     F .text	0000000000000357              _lf_pinbox_real_free
0000000000b73c90 l     F .text	000000000000003f              ptr_cmp
0000000000b73d4e l     F .text	00000000000000a5              harvest_pins
0000000000b73df3 l     F .text	0000000000000060              match_pins
0000000000b741aa l     F .text	0000000000000082              alloc_free
0000000000d49a18 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.9605
0000000000000000 l    df *ABS*	0000000000000000              lf_dynarray.c
0000000000b74443 l     F .text	0000000000000058              my_atomic_casptr
0000000000b744cd l     F .text	000000000000007f              recursive_free
0000000000d49a40 l     O .rodata	0000000000000020              dynarray_idxes_in_prev_levels
0000000000d49a60 l     O .rodata	0000000000000020              dynarray_idxes_in_prev_level
0000000000b7493b l     F .text	00000000000000a9              recursive_iterate
0000000000000000 l    df *ABS*	0000000000000000              lf_hash.c
0000000000b74a48 l     F .text	0000000000000043              my_clear_highest_bit
0000000000b74a8b l     F .text	000000000000007a              my_reverse_bits
0000000000b74b05 l     F .text	000000000000004c              my_atomic_cas32
0000000000b74b51 l     F .text	0000000000000058              my_atomic_casptr
0000000000b74ba9 l     F .text	0000000000000022              my_atomic_add32
0000000000b74bcb l     F .text	000000000000001d              my_atomic_storeptr
0000000000b74be8 l     F .text	000000000000023e              my_lfind
0000000000b74e26 l     F .text	0000000000000185              linsert
0000000000d49b30 l     O .rodata	0000000000000008              __PRETTY_FUNCTION__.10202
0000000000b74fab l     F .text	0000000000000163              ldelete
0000000000b7510e l     F .text	00000000000000d3              my_lsearch
0000000000b751e1 l     F .text	000000000000006b              hash_key
0000000000b7524c l     F .text	0000000000000083              calc_hash
0000000000d49b38 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.10252
0000000000b758c8 l     F .text	000000000000016e              initialize_bucket
00000000010f6550 l     O .data	0000000000000008              dummy_key
0000000000000000 l    df *ABS*	0000000000000000              my_rdtsc.c
0000000001393b40 l     O .bss	0000000000000008              last_value.6557
0000000000b75b9a l     F .text	0000000000000084              my_timer_init_overhead
0000000000b75c1e l     F .text	0000000000000136              my_timer_init_resolution
0000000000b75d54 l     F .text	00000000000000a7              my_timer_init_frequency
0000000000000000 l    df *ABS*	0000000000000000              my_alarm.c
0000000000000000 l    df *ABS*	0000000000000000              dbug.c
0000000001393b60 l     O .bss	0000000000000001              init_done
0000000001393b80 l     O .bss	0000000000000248              init_settings
0000000001393dc8 l     O .bss	0000000000000008              db_process
0000000001393de0 l     O .bss	0000000000000028              THR_LOCK_dbug
0000000000b7657c l     F .text	000000000000012a              code_state
0000000000b7a40c l     F .text	0000000000000037              DbugMalloc
0000000000b7997d l     F .text	00000000000001e6              FreeState
0000000000b797b9 l     F .text	00000000000000b0              ListCopy
0000000000b7a443 l     F .text	0000000000000069              DbugStrTok
0000000000b79f31 l     F .text	0000000000000035              FreeList
0000000000b795b9 l     F .text	0000000000000200              ListAddDel
0000000000b7a304 l     F .text	0000000000000096              DBUGCloseFile
0000000000b7a187 l     F .text	000000000000017d              DBUGOpenFile
0000000000b798f5 l     F .text	0000000000000036              ListFlags
0000000000b79ca0 l     F .text	0000000000000129              DoTrace
0000000000b7992b l     F .text	0000000000000052              PushState
0000000000b79f66 l     F .text	0000000000000221              DoPrefix
0000000000b79e93 l     F .text	000000000000009e              Indent
0000000000b7a59b l     F .text	000000000000007a              DbugFlush
0000000000b7a39a l     F .text	0000000000000072              DbugExit
0000000000b792c3 l     F .text	000000000000008a              DbugVfprintf
0000000000b79869 l     F .text	000000000000008c              InList
0000000001393e20 l     O .bss	0000000000000248              tmp.8108
0000000000b7a4ac l     F .text	000000000000003b              BaseName
0000000000d49df0 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.8200
0000000000000000 l    df *ABS*	0000000000000000              bchange.c
0000000000000000 l    df *ABS*	0000000000000000              bmove_upp.c
0000000000000000 l    df *ABS*	0000000000000000              ctype-big5.c
00000000010f6560 l     O .data	0000000000000101              ctype_big5
00000000010f6680 l     O .data	0000000000000100              to_lower_big5
00000000010f6780 l     O .data	0000000000000100              to_upper_big5
00000000010f6880 l     O .data	0000000000000100              sort_order_big5
00000000010f6980 l     O .data	0000000000000c00              cA2
00000000010f7580 l     O .data	0000000000000c00              cA3
00000000010f8180 l     O .data	0000000000000c00              cC7
000000000110f180 l     O .data	0000000000000800              my_caseinfo_big5
0000000000b7a89c l     F .text	00000000000005d4              big5strokexfrm
0000000000b7ae70 l     F .text	000000000000023b              my_strnncoll_big5_internal
0000000000b7b0ab l     F .text	0000000000000076              my_strnncoll_big5
0000000000b7b121 l     F .text	00000000000000f3              my_strnncollsp_big5
0000000000b7b214 l     F .text	0000000000000189              my_strnxfrm_big5
0000000000b7b39d l     F .text	0000000000000084              ismbchar_big5
0000000000b7b421 l     F .text	0000000000000033              mbcharlen_big5
00000000010f8d80 l     O .data	0000000000004d7a              tab_big5_uni0
00000000010fdb00 l     O .data	000000000000613a              tab_big5_uni1
0000000000b7b454 l     F .text	000000000000006e              func_big5_uni_onechar
0000000001103c40 l     O .data	00000000000000ac              tab_uni_big50
0000000001103d00 l     O .data	0000000000000316              tab_uni_big51
0000000001104020 l     O .data	000000000000055a              tab_uni_big52
0000000001104580 l     O .data	00000000000003c6              tab_uni_big53
0000000001104960 l     O .data	0000000000000254              tab_uni_big54
0000000001104bb4 l     O .data	0000000000000002              tab_uni_big55
0000000001104bc0 l     O .data	0000000000000090              tab_uni_big56
0000000001104c60 l     O .data	0000000000008d08              tab_uni_big57
000000000110d980 l     O .data	000000000000145c              tab_uni_big58
000000000110eddc l     O .data	0000000000000004              tab_uni_big59
000000000110ede0 l     O .data	000000000000039c              tab_uni_big510
0000000000b7b4c2 l     F .text	0000000000000236              func_uni_big5_onechar
0000000000b7b6f8 l     F .text	0000000000000097              my_wc_mb_big5
0000000000b7b78f l     F .text	00000000000000a8              my_mb_wc_big5
0000000000b7b837 l     F .text	00000000000000eb              my_well_formed_len_big5
000000000110fa40 l     O .data	0000000000000058              my_collation_big5_chinese_ci_handler
000000000110faa0 l     O .data	00000000000000d8              my_charset_big5_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-bin.c
0000000000b7b922 l     F .text	0000000000000102              skip_trailing_space
0000000000d49e90 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.7145
000000000110fc40 l     O .data	0000000000000101              ctype_bin
000000000110fd60 l     O .data	0000000000000100              bin_char_array
0000000000b7ba24 l     F .text	0000000000000020              my_coll_init_8bit_bin
0000000000b7ba44 l     F .text	0000000000000076              my_strnncoll_binary
0000000000b7bad0 l     F .text	0000000000000049              my_strnncollsp_binary
0000000000b7bb19 l     F .text	0000000000000076              my_strnncoll_8bit_bin
0000000000b7bb8f l     F .text	0000000000000130              my_strnncollsp_8bit_bin
0000000000b7bcbf l     F .text	0000000000000013              my_case_str_bin
0000000000b7bcd2 l     F .text	000000000000001e              my_case_bin
0000000000b7bcf0 l     F .text	0000000000000029              my_strcasecmp_bin
0000000000b7bd2b l     F .text	000000000000003d              my_mb_wc_bin
0000000000b7bd68 l     F .text	0000000000000049              my_wc_mb_bin
0000000000b7bee8 l     F .text	00000000000002d3              my_wildcmp_bin_impl
0000000000b7c20f l     F .text	000000000000007c              my_strnxfrm_bin
0000000000b7c28b l     F .text	000000000000007c              my_strnxfrm_8bit_bin
0000000000b7c307 l     F .text	0000000000000187              my_instr_bin
000000000110fec0 l     O .data	0000000000000058              my_collation_binary_handler
000000000110ff20 l     O .data	00000000000000d8              my_charset_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-cp932.c
00000000011100c0 l     O .data	0000000000000101              ctype_cp932
00000000011101e0 l     O .data	0000000000000100              to_lower_cp932
00000000011102e0 l     O .data	0000000000000100              to_upper_cp932
00000000011103e0 l     O .data	0000000000000100              sort_order_cp932
0000000000b7c48e l     F .text	000000000000009a              ismbchar_cp932
0000000000b7c528 l     F .text	000000000000004d              mbcharlen_cp932
00000000011104e0 l     O .data	0000000000000c00              c81
00000000011110e0 l     O .data	0000000000000c00              c82
0000000001111ce0 l     O .data	0000000000000c00              c83
00000000011128e0 l     O .data	0000000000000c00              c84
00000000011134e0 l     O .data	0000000000000c00              c87
00000000011140e0 l     O .data	0000000000000c00              cEE
0000000001114ce0 l     O .data	0000000000000c00              cFA
00000000011558e0 l     O .data	0000000000000800              my_caseinfo_cp932
0000000000b7c575 l     F .text	000000000000019d              my_strnncoll_cp932_internal
0000000000b7c712 l     F .text	0000000000000077              my_strnncoll_cp932
0000000000b7c789 l     F .text	00000000000000fb              my_strnncollsp_cp932
0000000000b7c884 l     F .text	000000000000011c              my_strnxfrm_cp932
00000000011158e0 l     O .data	0000000000020000              cp932_to_unicode
00000000011358e0 l     O .data	0000000000020000              unicode_to_cp932
0000000000b7c9a0 l     F .text	0000000000000158              my_mb_wc_cp932
0000000000b7caf8 l     F .text	00000000000000da              my_wc_mb_cp932
0000000000b7cbd2 l     F .text	0000000000000085              my_numcells_cp932
0000000000b7cc57 l     F .text	000000000000011f              my_well_formed_len_cp932
00000000011561a0 l     O .data	0000000000000058              my_collation_ci_handler
0000000001156200 l     O .data	00000000000000d8              my_charset_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-czech.c
0000000001156b60 l     O .data	0000000000000020              CZ_SORT_TABLE
0000000001156b80 l     O .data	0000000000000050              doubles
0000000000b7cd76 l     F .text	000000000000060c              my_strnncoll_czech
0000000000b7d382 l     F .text	0000000000000091              my_strnncollsp_czech
0000000000b7d413 l     F .text	000000000000030d              my_strnxfrm_czech
0000000000b7d720 l     F .text	0000000000000178              my_like_range_czech
00000000011563a0 l     O .data	0000000000000101              ctype_czech
00000000011564c0 l     O .data	0000000000000100              to_lower_czech
00000000011565c0 l     O .data	0000000000000100              to_upper_czech
00000000011566c0 l     O .data	0000000000000100              sort_order_czech
00000000011567c0 l     O .data	0000000000000200              tab_8859_2_uni
00000000011569c0 l     O .data	00000000000000fe              tab_uni_8859_2_plane00
0000000001156ac0 l     O .data	000000000000007d              tab_uni_8859_2_plane01
0000000001156b40 l     O .data	0000000000000017              tab_uni_8859_2_plane02
0000000001156be0 l     O .data	0000000000000040              idx_uni_8859_2
0000000001156c20 l     O .data	0000000000000058              my_collation_latin2_czech_ci_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-euc_kr.c
0000000001156d40 l     O .data	0000000000000101              ctype_euc_kr
0000000001156e60 l     O .data	0000000000000100              to_lower_euc_kr
0000000001156f60 l     O .data	0000000000000100              to_upper_euc_kr
0000000001157060 l     O .data	0000000000000100              sort_order_euc_kr
0000000000b7d898 l     F .text	00000000000000bc              ismbchar_euc_kr
0000000000b7d954 l     F .text	0000000000000033              mbcharlen_euc_kr
0000000001157160 l     O .data	0000000000000c00              cA3
0000000001157d60 l     O .data	0000000000000c00              cA5
0000000001158960 l     O .data	0000000000000c00              cA7
0000000001159560 l     O .data	0000000000000c00              cA8
000000000115a160 l     O .data	0000000000000c00              cA9
000000000115ad60 l     O .data	0000000000000c00              cAC
000000000117c100 l     O .data	0000000000000800              my_caseinfo_euckr
000000000115b960 l     O .data	0000000000008f7c              tab_ksc5601_uni0
00000000011648e0 l     O .data	00000000000066bc              tab_ksc5601_uni1
0000000000b7d987 l     F .text	000000000000006e              func_ksc5601_uni_onechar
000000000116afa0 l     O .data	000000000000018e              tab_uni_ksc56010
000000000116b140 l     O .data	0000000000000316              tab_uni_ksc56011
000000000116b460 l     O .data	00000000000005fc              tab_uni_ksc56012
000000000116ba60 l     O .data	000000000000041c              tab_uni_ksc56013
000000000116be80 l     O .data	0000000000000500              tab_uni_ksc56014
000000000116c380 l     O .data	00000000000000bc              tab_uni_ksc56015
000000000116c440 l     O .data	0000000000008d00              tab_uni_ksc56016
0000000001175140 l     O .data	000000000000144c              tab_uni_ksc56017
00000000011765a0 l     O .data	0000000000005748              tab_uni_ksc56018
000000000117bd00 l     O .data	0000000000000218              tab_uni_ksc56019
000000000117bf20 l     O .data	00000000000001cc              tab_uni_ksc560110
0000000000b7d9f5 l     F .text	0000000000000236              func_uni_ksc5601_onechar
0000000000b7dc2b l     F .text	0000000000000097              my_wc_mb_euc_kr
0000000000b7dcc2 l     F .text	00000000000000a8              my_mb_wc_euc_kr
0000000000b7dd6a l     F .text	000000000000010c              my_well_formed_len_euckr
000000000117c9c0 l     O .data	0000000000000058              my_collation_ci_handler
000000000117ca20 l     O .data	00000000000000d8              my_charset_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-eucjpms.c
000000000117cbc0 l     O .data	0000000000000101              ctype_eucjpms
000000000117cce0 l     O .data	0000000000000100              to_lower_eucjpms
000000000117cde0 l     O .data	0000000000000100              to_upper_eucjpms
000000000117cee0 l     O .data	0000000000000100              sort_order_eucjpms
0000000000b7de76 l     F .text	0000000000000196              ismbchar_eucjpms
0000000000b7e00c l     F .text	000000000000005b              mbcharlen_eucjpms
000000000117cfe0 l     O .data	0000000000000c00              cA2
000000000117dbe0 l     O .data	0000000000000c00              cA3
000000000117e7e0 l     O .data	0000000000000c00              cA6
000000000117f3e0 l     O .data	0000000000000c00              cA7
000000000117ffe0 l     O .data	0000000000000c00              cAD
0000000001180be0 l     O .data	0000000000000c00              c8FA6
00000000011817e0 l     O .data	0000000000000c00              c8FA7
00000000011823e0 l     O .data	0000000000000c00              c8FA9
0000000001182fe0 l     O .data	0000000000000c00              c8FAA
0000000001183be0 l     O .data	0000000000000c00              c8FAB
00000000011847e0 l     O .data	0000000000000c00              c8FF3
00000000011853e0 l     O .data	0000000000000c00              c8FF4
0000000001205fe0 l     O .data	0000000000001000              my_caseinfo_eucjpms
0000000001185fe0 l     O .data	0000000000020000              jisx0208_eucjpms_to_unicode
00000000011a5fe0 l     O .data	0000000000020000              unicode_to_jisx0208_eucjpms
00000000011c5fe0 l     O .data	0000000000020000              jisx0212_eucjpms_to_unicode
00000000011e5fe0 l     O .data	0000000000020000              unicode_to_jisx0212_eucjpms
0000000000b7e067 l     F .text	0000000000000236              my_mb_wc_eucjpms
0000000000b7e29d l     F .text	0000000000000165              my_wc_mb_eucjpms
0000000000b7e402 l     F .text	0000000000000173              my_well_formed_len_eucjpms
0000000000b7e575 l     F .text	0000000000000089              my_numcells_eucjpms
00000000012070a0 l     O .data	0000000000000058              my_collation_ci_handler
0000000001207100 l     O .data	00000000000000d8              my_charset_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-extra.c
0000000000000000 l    df *ABS*	0000000000000000              ctype-gb2312.c
000000000121fbe0 l     O .data	0000000000000101              ctype_gb2312
000000000121fd00 l     O .data	0000000000000100              to_lower_gb2312
000000000121fe00 l     O .data	0000000000000100              to_upper_gb2312
000000000121ff00 l     O .data	0000000000000100              sort_order_gb2312
0000000000b7e5fe l     F .text	0000000000000066              ismbchar_gb2312
0000000000b7e664 l     F .text	0000000000000033              mbcharlen_gb2312
0000000001220000 l     O .data	0000000000000c00              cA2
0000000001220c00 l     O .data	0000000000000c00              cA3
0000000001221800 l     O .data	0000000000000c00              cA6
0000000001222400 l     O .data	0000000000000c00              cA7
0000000001223000 l     O .data	0000000000000c00              cA8
0000000001238c80 l     O .data	0000000000000800              my_caseinfo_gb2312
0000000001223c00 l     O .data	0000000000000a70              tab_gb2312_uni0
0000000001224680 l     O .data	000000000000049e              tab_gb2312_uni1
0000000001224b20 l     O .data	0000000000008ebc              tab_gb2312_uni2
0000000000b7e697 l     F .text	000000000000009e              func_gb2312_uni_onechar
000000000122d9e0 l     O .data	0000000000000272              tab_uni_gb23120
000000000122dc60 l     O .data	0000000000000316              tab_uni_gb23121
000000000122df80 l     O .data	00000000000005fc              tab_uni_gb23122
000000000122e580 l     O .data	00000000000003c6              tab_uni_gb23123
000000000122e960 l     O .data	0000000000000254              tab_uni_gb23124
000000000122ebc0 l     O .data	0000000000000014              tab_uni_gb23125
000000000122ebe0 l     O .data	0000000000009aaa              tab_uni_gb23126
00000000012386a0 l     O .data	00000000000000ce              tab_uni_gb23127
0000000001238780 l     O .data	0000000000000304              tab_uni_gb23128
0000000001238aa0 l     O .data	00000000000001ca              tab_uni_gb23129
0000000000b7e735 l     F .text	0000000000000203              func_uni_gb2312_onechar
0000000000b7e938 l     F .text	000000000000009e              my_wc_mb_gb2312
0000000000b7e9d6 l     F .text	00000000000000b0              my_mb_wc_gb2312
0000000000b7ea86 l     F .text	00000000000000c6              my_well_formed_len_gb2312
0000000001239540 l     O .data	0000000000000058              my_collation_ci_handler
00000000012395a0 l     O .data	00000000000000d8              my_charset_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-gbk.c
0000000001239740 l     O .data	0000000000000101              ctype_gbk
0000000001239860 l     O .data	0000000000000100              to_lower_gbk
0000000001239960 l     O .data	0000000000000100              to_upper_gbk
0000000001239a60 l     O .data	0000000000000c00              cA2
000000000123a660 l     O .data	0000000000000c00              cA3
000000000123b260 l     O .data	0000000000000c00              cA6
000000000123be60 l     O .data	0000000000000c00              cA7
0000000001263f00 l     O .data	0000000000000800              my_caseinfo_gbk
000000000123ca60 l     O .data	0000000000000100              sort_order_gbk
000000000123cb60 l     O .data	000000000000bb08              gbk_order
0000000000b7eb4c l     F .text	0000000000000055              gbksortorder
0000000000b7ee5e l     F .text	00000000000000f3              my_strnncollsp_gbk
0000000000b7ef51 l     F .text	0000000000000189              my_strnxfrm_gbk
0000000000b7f0da l     F .text	0000000000000084              ismbchar_gbk
0000000000b7f15e l     F .text	0000000000000033              mbcharlen_gbk
0000000001248680 l     O .data	000000000000fa20              tab_gbk_uni0
0000000000b7f191 l     F .text	000000000000003e              func_gbk_uni_onechar
00000000012580a0 l     O .data	000000000000075c              tab_uni_gbk0
0000000001258800 l     O .data	0000000000000606              tab_uni_gbk1
0000000001258e20 l     O .data	00000000000003c6              tab_uni_gbk2
0000000001259200 l     O .data	0000000000000254              tab_uni_gbk3
0000000001259460 l     O .data	0000000000000108              tab_uni_gbk4
0000000001259580 l     O .data	0000000000000090              tab_uni_gbk5
0000000001259620 l     O .data	000000000000a34c              tab_uni_gbk6
0000000001263980 l     O .data	00000000000001fc              tab_uni_gbk7
0000000001263b80 l     O .data	000000000000036c              tab_uni_gbk8
0000000000b7f1cf l     F .text	00000000000001d0              func_uni_gbk_onechar
0000000000b7f39f l     F .text	0000000000000097              my_wc_mb_gbk
0000000000b7f436 l     F .text	00000000000000a8              my_mb_wc_gbk
0000000000b7f4de l     F .text	00000000000000eb              my_well_formed_len_gbk
00000000012647c0 l     O .data	0000000000000058              my_collation_ci_handler
0000000001264820 l     O .data	00000000000000d8              my_charset_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-latin1.c
0000000000b7f5c9 l     F .text	0000000000000102              skip_trailing_space
0000000000d4a890 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.7145
00000000012649c0 l     O .data	0000000000000101              ctype_latin1
0000000001264ae0 l     O .data	0000000000000100              to_lower_latin1
0000000001264be0 l     O .data	0000000000000100              to_upper_latin1
0000000001264ce0 l     O .data	0000000000000100              sort_order_latin1
0000000000b7f6cb l     F .text	000000000000006d              my_mb_wc_latin1
0000000000b7f738 l     F .text	0000000000000085              my_wc_mb_latin1
0000000001266000 l     O .data	00000000000000d8              my_charset_handler
00000000012654e0 l     O .data	0000000000000100              sort_order_latin1_de
0000000000b7f7bd l     F .text	0000000000000163              my_strnncoll_latin1_de
0000000000b7f920 l     F .text	00000000000001d8              my_strnncollsp_latin1_de
0000000000b7faf8 l     F .text	00000000000000f5              my_strnxfrm_latin1_de
00000000012661a0 l     O .data	0000000000000058              my_collation_german2_ci_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-mb.c
0000000000b7fd19 l     F .text	0000000000000018              my_cs_have_contractions
0000000000b7fd31 l     F .text	000000000000002a              my_cs_can_be_contraction_head
0000000000b7fd5b l     F .text	000000000000002a              my_cs_can_be_contraction_tail
0000000000b7fd85 l     F .text	0000000000000039              my_cs_contraction2_weight
0000000000b7fdbe l     F .text	0000000000000102              skip_trailing_space
0000000000d4aaf0 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.7937
0000000000b80008 l     F .text	0000000000000065              get_case_info_for_ch
0000000000d4aa70 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.7987
0000000000d4aa80 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.8002
0000000000b80387 l     F .text	000000000000019d              my_casefold_mb_varlen
0000000000d4aa90 l     O .rodata	0000000000000016              __PRETTY_FUNCTION__.8018
0000000000d4aab0 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.8032
0000000000d4aad0 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.8040
0000000000b807de l     F .text	000000000000056b              my_wildcmp_mb_impl
0000000000b81297 l     F .text	000000000000007c              my_strnxfrm_mb_bin
0000000000b813e1 l     F .text	000000000000015b              pad_max_char
0000000000d4ab08 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.8205
0000000000b81f70 l     F .text	000000000000052b              my_wildcmp_mb_bin_impl
0000000001266380 l     O .data	0000000000000100              pg11
0000000001266480 l     O .data	0000000000000100              pg23
0000000001266580 l     O .data	0000000000000100              pg2E
0000000001266680 l     O .data	0000000000000100              pg2F
0000000001266780 l     O .data	0000000000000100              pg30
0000000001266880 l     O .data	0000000000000100              pg31
0000000001266980 l     O .data	0000000000000100              pg32
0000000001266a80 l     O .data	0000000000000100              pg4D
0000000001266b80 l     O .data	0000000000000100              pg9F
0000000001266c80 l     O .data	0000000000000100              pgA4
0000000001266d80 l     O .data	0000000000000100              pgD7
0000000001266e80 l     O .data	0000000000000100              pgFA
0000000001266f80 l     O .data	0000000000000100              pgFE
0000000001267080 l     O .data	0000000000000100              pgFF
0000000001267180 l     O .data	0000000000001000              utr11_data
0000000000000000 l    df *ABS*	0000000000000000              ctype-simple.c
0000000000b82725 l     F .text	0000000000000102              skip_trailing_space
0000000000d4ac10 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.7145
0000000000d4abe8 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.9701
0000000000d4abf8 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.9714
0000000000b83cfe l     F .text	000000000000031b              my_wildcmp_8bit_impl
0000000000b84610 l     F .text	0000000000000057              pcmp
0000000000b84667 l     F .text	00000000000005c6              create_fromuni
0000000000b84c2d l     F .text	0000000000000046              my_cset_init_8bit
0000000000b84c73 l     F .text	0000000000000089              set_max_sort_char
0000000000b84cfc l     F .text	0000000000000023              my_coll_init_simple
00000000012681e0 l     O .data	00000000000000a0              d10
0000000000000000 l    df *ABS*	0000000000000000              ctype-sjis.c
00000000012683c0 l     O .data	0000000000000101              ctype_sjis
00000000012684e0 l     O .data	0000000000000100              to_lower_sjis
00000000012685e0 l     O .data	0000000000000100              to_upper_sjis
00000000012686e0 l     O .data	0000000000000100              sort_order_sjis
0000000000b85471 l     F .text	000000000000009a              ismbchar_sjis
0000000000b8550b l     F .text	000000000000004d              mbcharlen_sjis
00000000012687e0 l     O .data	0000000000000c00              c81
00000000012693e0 l     O .data	0000000000000c00              c82
0000000001269fe0 l     O .data	0000000000000c00              c83
000000000126abe0 l     O .data	0000000000000c00              c84
00000000012ab7e0 l     O .data	0000000000000800              my_caseinfo_sjis
0000000000b85558 l     F .text	00000000000001a5              my_strnncoll_sjis_internal
0000000000b856fd l     F .text	0000000000000077              my_strnncoll_sjis
0000000000b85774 l     F .text	00000000000000fb              my_strnncollsp_sjis
0000000000b8586f l     F .text	000000000000011c              my_strnxfrm_sjis
000000000126b7e0 l     O .data	0000000000020000              sjis_to_unicode
000000000128b7e0 l     O .data	0000000000020000              unicode_to_sjis
0000000000b8598b l     F .text	0000000000000158              my_mb_wc_sjis
0000000000b85ae3 l     F .text	00000000000000ed              my_wc_mb_sjis
0000000000b85bd0 l     F .text	000000000000007d              my_numcells_sjis
0000000000b85c4d l     F .text	000000000000011f              my_well_formed_len_sjis
00000000012ac0a0 l     O .data	0000000000000058              my_collation_ci_handler
00000000012ac100 l     O .data	00000000000000d8              my_charset_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-tis620.c
00000000012ac2a0 l     O .data	0000000000001400              t_ctype
00000000012ad6a0 l     O .data	0000000000000101              ctype_tis620
00000000012ad7c0 l     O .data	0000000000000100              to_lower_tis620
00000000012ad8c0 l     O .data	0000000000000100              to_upper_tis620
00000000012ad9c0 l     O .data	0000000000000100              sort_order_tis620
0000000000b85d6c l     F .text	00000000000001a8              thai2sortable
0000000000b85f14 l     F .text	00000000000001a2              my_strnncoll_tis620
0000000000b860b6 l     F .text	000000000000030b              my_strnncollsp_tis620
0000000000b863c1 l     F .text	00000000000000a2              my_strnxfrm_tis620
00000000012adac0 l     O .data	0000000000000200              cs_to_uni
00000000012adcc0 l     O .data	0000000000000100              pl00
00000000012addc0 l     O .data	0000000000000100              pl0E
00000000012adec0 l     O .data	0000000000000100              plFF
00000000012adfc0 l     O .data	0000000000000800              uni_to_cs
0000000000b86463 l     F .text	0000000000000070              my_mb_wc_tis620
0000000000b864d3 l     F .text	000000000000008d              my_wc_mb_tis620
00000000012ae7c0 l     O .data	0000000000000058              my_collation_ci_handler
00000000012ae820 l     O .data	00000000000000d8              my_charset_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-uca.c
0000000000d4ac80 l     O .rodata	0000000000000127              icelandic
0000000000d4adc0 l     O .rodata	00000000000000d9              latvian
0000000000d4aea0 l     O .rodata	000000000000009f              romanian
0000000000d4af40 l     O .rodata	0000000000000049              slovenian
0000000000d4afa0 l     O .rodata	00000000000000d4              polish
0000000000d4b080 l     O .rodata	0000000000000097              estonian
0000000000d4b120 l     O .rodata	0000000000000019              spanish
0000000000d4b140 l     O .rodata	0000000000000083              swedish
0000000000d4b1e0 l     O .rodata	0000000000000091              turkish
0000000000d4b280 l     O .rodata	000000000000007e              czech
0000000000d4b300 l     O .rodata	00000000000000c2              danish
0000000000d4b3e0 l     O .rodata	0000000000000096              lithuanian
0000000000d4b480 l     O .rodata	000000000000008a              slovak
0000000000d4b520 l     O .rodata	0000000000000043              spanish2
0000000000d4b570 l     O .rodata	000000000000001f              roman
0000000000d4b5a0 l     O .rodata	000000000000034f              persian
0000000000d4b900 l     O .rodata	000000000000008b              esperanto
0000000000d4b9a0 l     O .rodata	0000000000000057              hungarian
0000000000d4ba00 l     O .rodata	0000000000000223              sinhala
0000000001394068 l     O .bss	0000000000000004              nochar
0000000000b86560 l     F .text	000000000000009e              my_uca_scanner_init_ucs2
0000000000b865fe l     F .text	0000000000000338              my_uca_scanner_next_ucs2
00000000012ccd10 l     O .data	0000000000000010              my_ucs2_uca_scanner_handler
0000000000b86936 l     F .text	0000000000000080              my_uca_scanner_init_any
0000000000b869b6 l     F .text	00000000000003a6              my_uca_scanner_next_any
00000000012ccd20 l     O .data	0000000000000010              my_any_uca_scanner_handler
0000000000b86d5c l     F .text	0000000000000123              my_strnncoll_uca
0000000000b86e7f l     F .text	0000000000000256              my_strnncollsp_uca
0000000000b870d5 l     F .text	0000000000000181              my_hash_sort_uca
0000000000b87256 l     F .text	0000000000000135              my_strnxfrm_uca
0000000000b8738b l     F .text	0000000000000099              my_char_weight_addr
0000000000b87424 l     F .text	0000000000000167              my_uca_charcmp
0000000000b8758b l     F .text	00000000000003ea              my_wildcmp_uca_impl
0000000000b879c9 l     F .text	000000000000004c              my_coll_lexem_init
0000000000b87a15 l     F .text	00000000000000c4              my_coll_lexem_print_error
0000000000b87ad9 l     F .text	000000000000004a              ch2x
0000000000b87b23 l     F .text	0000000000000213              my_coll_lexem_next
0000000000b87d36 l     F .text	0000000000000398              my_coll_rule_parse
0000000000b880ce l     F .text	0000000000000b13              create_tailoring
0000000000b88be1 l     F .text	0000000000000043              my_coll_init_uca
0000000000b88c24 l     F .text	000000000000005a              my_strnncoll_any_uca
0000000000b88c7e l     F .text	000000000000005a              my_strnncollsp_any_uca
0000000000b88cd8 l     F .text	0000000000000048              my_hash_sort_any_uca
0000000000b88d20 l     F .text	0000000000000047              my_strnxfrm_any_uca
0000000000b88d67 l     F .text	000000000000005a              my_strnncoll_ucs2_uca
0000000000b88dc1 l     F .text	000000000000005a              my_strnncollsp_ucs2_uca
0000000000b88e1b l     F .text	0000000000000048              my_hash_sort_ucs2_uca
0000000000b88e63 l     F .text	0000000000000047              my_strnxfrm_ucs2_uca
00000000012c7780 l     O .data	0000000000000101              ctype_utf8
0000000000000000 l    df *ABS*	0000000000000000              ctype-ucs2.c
00000000012ccd40 l     O .data	0000000000000048              lfactor
0000000000b88eaa l     F .text	0000000000000076              my_bincmp
0000000000b88f20 l     F .text	000000000000002f              my_caseup_str_mb2_or_mb4
0000000000d4c520 l     O .rodata	0000000000000019              __PRETTY_FUNCTION__.9636
0000000000b88f4f l     F .text	000000000000002f              my_casedn_str_mb2_or_mb4
0000000000d4c540 l     O .rodata	0000000000000019              __PRETTY_FUNCTION__.9641
0000000000b88f7e l     F .text	0000000000000033              my_strcasecmp_mb2_or_mb4
0000000000d4c560 l     O .rodata	0000000000000019              __PRETTY_FUNCTION__.9647
0000000000b88fb1 l     F .text	0000000000000307              my_strntol_mb2_or_mb4
0000000000b892b8 l     F .text	00000000000002ca              my_strntoul_mb2_or_mb4
0000000000b89582 l     F .text	0000000000000327              my_strntoll_mb2_or_mb4
0000000000b898a9 l     F .text	00000000000002e1              my_strntoull_mb2_or_mb4
0000000000b89b8a l     F .text	0000000000000197              my_strntod_mb2_or_mb4
0000000000b89d21 l     F .text	00000000000001c8              my_strntoull10rnd_mb2_or_mb4
0000000000b89ee9 l     F .text	00000000000001f0              my_l10tostr_mb2_or_mb4
0000000000b8a0d9 l     F .text	0000000000000238              my_ll10tostr_mb2_or_mb4
0000000000b8a311 l     F .text	000000000000060a              my_strtoll10_mb2
0000000000b8a91b l     F .text	000000000000006a              my_scan_mb2
0000000000b8a985 l     F .text	000000000000006e              my_fill_mb2
0000000000d4c580 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.9898
0000000000b8a9f3 l     F .text	0000000000000341              my_vsnprintf_mb2
0000000000d4c590 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.9929
0000000000b8ad34 l     F .text	00000000000000d7              my_snprintf_mb2
0000000000b8ae0b l     F .text	0000000000000062              my_lengthsp_mb2
0000000000b8ae6d l     F .text	0000000000000130              my_utf16_uni
0000000000b8af9d l     F .text	0000000000000109              my_uni_utf16
0000000000b8b0a6 l     F .text	000000000000008e              my_tolower_utf16
0000000000b8b134 l     F .text	000000000000008d              my_toupper_utf16
0000000000b8b1c1 l     F .text	000000000000009b              my_tosort_utf16
0000000000b8b25c l     F .text	00000000000000fa              my_caseup_utf16
0000000000d4c5b0 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.9984
0000000000b8b356 l     F .text	000000000000018f              my_hash_sort_utf16
0000000000b8b4e5 l     F .text	00000000000000fa              my_casedn_utf16
0000000000d4c5c0 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.10016
0000000000b8b5df l     F .text	0000000000000195              my_strnncoll_utf16
0000000000b8b774 l     F .text	00000000000002b2              my_strnncollsp_utf16
0000000000d4c5d0 l     O .rodata	0000000000000015              __PRETTY_FUNCTION__.10052
0000000000b8ba26 l     F .text	0000000000000095              my_ismbchar_utf16
0000000000b8babb l     F .text	0000000000000028              my_mbcharlen_utf16
0000000000b8bae3 l     F .text	0000000000000056              my_numchars_utf16
0000000000b8bb39 l     F .text	00000000000000a3              my_charpos_utf16
0000000000b8bbdc l     F .text	0000000000000092              my_well_formed_len_utf16
0000000000b8bc6e l     F .text	0000000000000061              my_wildcmp_utf16_ci
0000000000b8bccf l     F .text	0000000000000054              my_wildcmp_utf16_bin
0000000000b8bd23 l     F .text	0000000000000163              my_strnncoll_utf16_bin
0000000000b8be86 l     F .text	0000000000000280              my_strnncollsp_utf16_bin
0000000000d4c5f0 l     O .rodata	0000000000000019              __PRETTY_FUNCTION__.10155
0000000000b8c106 l     F .text	00000000000000c5              my_hash_sort_utf16_bin
00000000012cd0c0 l     O .data	0000000000000058              my_collation_utf16_general_ci_handler
00000000012cd120 l     O .data	0000000000000058              my_collation_utf16_bin_handler
0000000000b8c1cb l     F .text	000000000000007f              my_utf32_uni
0000000000b8c24a l     F .text	0000000000000072              my_uni_utf32
0000000000b8c2bc l     F .text	000000000000008e              my_tolower_utf32
0000000000b8c34a l     F .text	000000000000008d              my_toupper_utf32
0000000000b8c3d7 l     F .text	000000000000009b              my_tosort_utf32
0000000000b8c472 l     F .text	00000000000000fa              my_caseup_utf32
0000000000d4c610 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.10223
0000000000b8c56c l     F .text	0000000000000061              my_hash_add
0000000000b8c5cd l     F .text	0000000000000177              my_hash_sort_utf32
0000000000b8c744 l     F .text	00000000000000f0              my_casedn_utf32
0000000000d4c620 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.10260
0000000000b8c834 l     F .text	0000000000000195              my_strnncoll_utf32
0000000000b8c9c9 l     F .text	00000000000002b2              my_strnncollsp_utf32
0000000000d4c630 l     O .rodata	0000000000000015              __PRETTY_FUNCTION__.10296
0000000000b8cc7b l     F .text	0000000000000015              my_strnxfrmlen_utf32
0000000000b8cc90 l     F .text	0000000000000017              my_ismbchar_utf32
0000000000b8cca7 l     F .text	0000000000000012              my_mbcharlen_utf32
0000000000b8ccb9 l     F .text	00000000000003fe              my_vsnprintf_utf32
0000000000d4c650 l     O .rodata	0000000000000013              __PRETTY_FUNCTION__.10328
0000000000b8d0b7 l     F .text	00000000000000d7              my_snprintf_utf32
0000000000b8d18e l     F .text	0000000000000784              my_strtoll10_utf32
0000000000b8d912 l     F .text	0000000000000024              my_numchars_utf32
0000000000b8d936 l     F .text	0000000000000048              my_charpos_utf32
0000000000b8d97e l     F .text	00000000000000dc              my_well_formed_len_utf32
0000000000d4c670 l     O .rodata	0000000000000019              __PRETTY_FUNCTION__.10412
0000000000b8da5a l     F .text	00000000000000e2              my_fill_utf32
0000000000d4c690 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.10425
0000000000b8db3c l     F .text	00000000000000ad              my_lengthsp_utf32
0000000000d4c6a0 l     O .rodata	0000000000000012              __PRETTY_FUNCTION__.10435
0000000000b8dbe9 l     F .text	0000000000000061              my_wildcmp_utf32_ci
0000000000b8dc4a l     F .text	0000000000000054              my_wildcmp_utf32_bin
0000000000b8dc9e l     F .text	0000000000000163              my_strnncoll_utf32_bin
0000000000b8de01 l     F .text	0000000000000056              my_utf32_get
0000000000b8de57 l     F .text	000000000000017b              my_strnncollsp_utf32_bin
0000000000d4c6c0 l     O .rodata	0000000000000019              __PRETTY_FUNCTION__.10491
0000000000b8dfd2 l     F .text	00000000000000a1              my_scan_utf32
00000000012cd3e0 l     O .data	0000000000000058              my_collation_utf32_general_ci_handler
00000000012cd440 l     O .data	0000000000000058              my_collation_utf32_bin_handler
00000000012ccda0 l     O .data	0000000000000101              ctype_ucs2
00000000012ccec0 l     O .data	0000000000000100              to_lower_ucs2
00000000012ccfc0 l     O .data	0000000000000100              to_upper_ucs2
0000000000b8e073 l     F .text	0000000000000059              my_ucs2_uni
0000000000b8e0cc l     F .text	000000000000005f              my_uni_ucs2
0000000000b8e12b l     F .text	0000000000000157              my_caseup_ucs2
0000000000d4c6e0 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.10547
0000000000b8e282 l     F .text	00000000000001e5              my_hash_sort_ucs2
0000000000b8e467 l     F .text	0000000000000158              my_casedn_ucs2
0000000000d4c6f0 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.10581
0000000000b8e5bf l     F .text	0000000000000241              my_strnncoll_ucs2
0000000000b8e800 l     F .text	0000000000000234              my_strnncollsp_ucs2
0000000000b8ea34 l     F .text	0000000000000017              my_ismbchar_ucs2
0000000000b8ea4b l     F .text	0000000000000012              my_mbcharlen_ucs2
0000000000b8ea5d l     F .text	0000000000000023              my_numchars_ucs2
0000000000b8ea80 l     F .text	0000000000000043              my_charpos_ucs2
0000000000b8eac3 l     F .text	000000000000004b              my_well_formed_len_ucs2
0000000000b8eb0e l     F .text	0000000000000061              my_wildcmp_ucs2_ci
0000000000b8eb6f l     F .text	0000000000000054              my_wildcmp_ucs2_bin
0000000000b8ebc3 l     F .text	0000000000000163              my_strnncoll_ucs2_bin
0000000000b8ed26 l     F .text	0000000000000161              my_strnncollsp_ucs2_bin
0000000000b8ee87 l     F .text	00000000000000c5              my_hash_sort_ucs2_bin
00000000012cd700 l     O .data	0000000000000058              my_collation_ucs2_general_ci_handler
00000000012cd760 l     O .data	0000000000000058              my_collation_ucs2_bin_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-ujis.c
00000000012cdae0 l     O .data	0000000000000101              ctype_ujis
00000000012cdc00 l     O .data	0000000000000100              to_lower_ujis
00000000012cdd00 l     O .data	0000000000000100              to_upper_ujis
00000000012cde00 l     O .data	0000000000000100              sort_order_ujis
0000000000b8ef4c l     F .text	0000000000000196              ismbchar_ujis
0000000000b8f0e2 l     F .text	000000000000005b              mbcharlen_ujis
0000000000b8f13d l     F .text	0000000000000177              my_well_formed_len_ujis
0000000000b8f2b4 l     F .text	0000000000000089              my_numcells_eucjp
00000000012cdf00 l     O .data	0000000000020000              jisx0208_eucjp_to_unicode
00000000012edf00 l     O .data	0000000000020000              unicode_to_jisx0208_eucjp
000000000130df00 l     O .data	0000000000020000              jisx0212_eucjp_to_unicode
000000000132df00 l     O .data	0000000000020000              unicode_to_jisx0212_eucjp
0000000000b8f33d l     F .text	0000000000000236              my_mb_wc_euc_jp
0000000000b8f573 l     F .text	0000000000000165              my_wc_mb_euc_jp
000000000134df00 l     O .data	0000000000000c00              cA2
000000000134eb00 l     O .data	0000000000000c00              cA3
000000000134f700 l     O .data	0000000000000c00              cA6
0000000001350300 l     O .data	0000000000000c00              cA7
0000000001350f00 l     O .data	0000000000000c00              c8FA6
0000000001351b00 l     O .data	0000000000000c00              c8FA7
0000000001352700 l     O .data	0000000000000c00              c8FA9
0000000001353300 l     O .data	0000000000000c00              c8FAA
0000000001353f00 l     O .data	0000000000000c00              c8FAB
0000000001354b00 l     O .data	0000000000001000              my_caseinfo_ujis
0000000000b8f6d8 l     F .text	0000000000000063              get_case_info_for_ch
0000000000b8f73b l     F .text	00000000000001f0              my_casefold_ujis
0000000000d4c808 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.8048
0000000000d4c818 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.8056
0000000001355bc0 l     O .data	0000000000000058              my_collation_ci_handler
0000000001355c20 l     O .data	00000000000000d8              my_charset_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-utf8.c
0000000000b8faaf l     F .text	0000000000000127              my_valid_mbcharlen_utf8mb3
0000000000d4ca30 l     O .rodata	000000000000001b              __PRETTY_FUNCTION__.7956
0000000001355dc0 l     O .data	0000000000000100              uctype_page00
0000000001355ec0 l     O .data	0000000000000100              uctype_page01
0000000001355fc0 l     O .data	0000000000000100              uctype_page02
00000000013560c0 l     O .data	0000000000000100              uctype_page03
00000000013561c0 l     O .data	0000000000000100              uctype_page04
00000000013562c0 l     O .data	0000000000000100              uctype_page05
00000000013563c0 l     O .data	0000000000000100              uctype_page06
00000000013564c0 l     O .data	0000000000000100              uctype_page07
00000000013565c0 l     O .data	0000000000000100              uctype_page09
00000000013566c0 l     O .data	0000000000000100              uctype_page0A
00000000013567c0 l     O .data	0000000000000100              uctype_page0B
00000000013568c0 l     O .data	0000000000000100              uctype_page0C
00000000013569c0 l     O .data	0000000000000100              uctype_page0D
0000000001356ac0 l     O .data	0000000000000100              uctype_page0E
0000000001356bc0 l     O .data	0000000000000100              uctype_page0F
0000000001356cc0 l     O .data	0000000000000100              uctype_page10
0000000001356dc0 l     O .data	0000000000000100              uctype_page11
0000000001356ec0 l     O .data	0000000000000100              uctype_page12
0000000001356fc0 l     O .data	0000000000000100              uctype_page13
00000000013570c0 l     O .data	0000000000000100              uctype_page14
00000000013571c0 l     O .data	0000000000000100              uctype_page16
00000000013572c0 l     O .data	0000000000000100              uctype_page17
00000000013573c0 l     O .data	0000000000000100              uctype_page18
00000000013574c0 l     O .data	0000000000000100              uctype_page19
00000000013575c0 l     O .data	0000000000000100              uctype_page1A
00000000013576c0 l     O .data	0000000000000100              uctype_page1B
00000000013577c0 l     O .data	0000000000000100              uctype_page1D
00000000013578c0 l     O .data	0000000000000100              uctype_page1E
00000000013579c0 l     O .data	0000000000000100              uctype_page1F
0000000001357ac0 l     O .data	0000000000000100              uctype_page20
0000000001357bc0 l     O .data	0000000000000100              uctype_page21
0000000001357cc0 l     O .data	0000000000000100              uctype_page23
0000000001357dc0 l     O .data	0000000000000100              uctype_page24
0000000001357ec0 l     O .data	0000000000000100              uctype_page26
0000000001357fc0 l     O .data	0000000000000100              uctype_page27
00000000013580c0 l     O .data	0000000000000100              uctype_page2B
00000000013581c0 l     O .data	0000000000000100              uctype_page2C
00000000013582c0 l     O .data	0000000000000100              uctype_page2D
00000000013583c0 l     O .data	0000000000000100              uctype_page2E
00000000013584c0 l     O .data	0000000000000100              uctype_page2F
00000000013585c0 l     O .data	0000000000000100              uctype_page30
00000000013586c0 l     O .data	0000000000000100              uctype_page31
00000000013587c0 l     O .data	0000000000000100              uctype_page32
00000000013588c0 l     O .data	0000000000000100              uctype_page4D
00000000013589c0 l     O .data	0000000000000100              uctype_page9F
0000000001358ac0 l     O .data	0000000000000100              uctype_pageA4
0000000001358bc0 l     O .data	0000000000000100              uctype_pageA7
0000000001358cc0 l     O .data	0000000000000100              uctype_pageA8
0000000001358dc0 l     O .data	0000000000000100              uctype_pageD7
0000000001358ec0 l     O .data	0000000000000100              uctype_pageD8
0000000001358fc0 l     O .data	0000000000000100              uctype_pageDB
00000000013590c0 l     O .data	0000000000000100              uctype_pageDC
00000000013591c0 l     O .data	0000000000000100              uctype_pageDF
00000000013592c0 l     O .data	0000000000000100              uctype_pageE0
00000000013593c0 l     O .data	0000000000000100              uctype_pageF8
00000000013594c0 l     O .data	0000000000000100              uctype_pageFA
00000000013595c0 l     O .data	0000000000000100              uctype_pageFB
00000000013596c0 l     O .data	0000000000000100              uctype_pageFD
00000000013597c0 l     O .data	0000000000000100              uctype_pageFE
00000000013598c0 l     O .data	0000000000000100              uctype_pageFF
00000000013599c0 l     O .data	0000000000000c00              plane00
000000000135a5c0 l     O .data	0000000000000c00              plane00_mysql500
000000000135b1c0 l     O .data	0000000000000c00              plane01
000000000135bdc0 l     O .data	0000000000000c00              plane02
000000000135c9c0 l     O .data	0000000000000c00              plane03
000000000135d5c0 l     O .data	0000000000000c00              plane04
000000000135e1c0 l     O .data	0000000000000c00              plane05
000000000135edc0 l     O .data	0000000000000c00              plane1E
000000000135f9c0 l     O .data	0000000000000c00              plane1F
00000000013605c0 l     O .data	0000000000000c00              plane21
00000000013611c0 l     O .data	0000000000000c00              plane24
0000000001361dc0 l     O .data	0000000000000c00              planeFF
00000000013629c0 l     O .data	0000000000000c00              turk00
0000000000b8fbd6 l     F .text	000000000000009b              my_tosort_unicode
0000000000b8fc71 l     F .text	000000000000044f              my_wildcmp_unicode_impl
0000000000d4c990 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.8097
0000000000d4c9b0 l     O .rodata	000000000000001d              __PRETTY_FUNCTION__.8115
00000000013635c0 l     O .data	0000000000000101              ctype_utf8
00000000013636e0 l     O .data	0000000000000100              to_lower_utf8
00000000013637e0 l     O .data	0000000000000100              to_upper_utf8
0000000000b90478 l     F .text	0000000000000076              bincmp
0000000000b904ee l     F .text	000000000000017a              my_utf8_uni
0000000000b90668 l     F .text	0000000000000132              my_utf8_uni_no_range
0000000000b9079a l     F .text	00000000000000ec              my_uni_utf8
0000000000b90886 l     F .text	00000000000000b4              my_uni_utf8_no_range
0000000000b9093a l     F .text	000000000000018e              my_caseup_utf8
0000000000d4c9d0 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.8186
0000000000b90ac8 l     F .text	00000000000001ce              my_hash_sort_utf8
0000000000b90c96 l     F .text	0000000000000164              my_caseup_str_utf8
0000000000d4c9e0 l     O .rodata	0000000000000013              __PRETTY_FUNCTION__.8219
0000000000b90dfa l     F .text	000000000000018f              my_casedn_utf8
0000000000d4c9f8 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.8238
0000000000b90f89 l     F .text	0000000000000165              my_casedn_str_utf8
0000000000d4ca10 l     O .rodata	0000000000000013              __PRETTY_FUNCTION__.8253
0000000000b910ee l     F .text	0000000000000239              my_strnncoll_utf8
0000000000b91327 l     F .text	00000000000002b6              my_strnncollsp_utf8
0000000000b915dd l     F .text	000000000000027b              my_strcasecmp_utf8
0000000000b91858 l     F .text	0000000000000061              my_wildcmp_utf8
0000000000b918b9 l     F .text	000000000000002c              my_strnxfrmlen_utf8
0000000000b918e5 l     F .text	0000000000000051              my_valid_mbcharlen_utf8
0000000000b91936 l     F .text	000000000000008b              my_well_formed_len_utf8
0000000000b919c1 l     F .text	0000000000000040              my_ismbchar_utf8
0000000000b91a01 l     F .text	000000000000004f              my_mbcharlen_utf8
000000000136a420 l     O .data	0000000000000058              my_collation_ci_handler
00000000013638e0 l     O .data	0000000000002ed4              touni
00000000013667c0 l     O .data	0000000000000a80              uni_0C00_05FF
0000000001367240 l     O .data	0000000000000400              uni_1E00_1FFF
0000000001367640 l     O .data	0000000000000040              uni_2160_217F
0000000001367680 l     O .data	0000000000000080              uni_24B0_24EF
0000000001367700 l     O .data	0000000000000080              uni_FF20_FF5F
0000000000b91a50 l     F .text	000000000000001c              hexlo
0000000001367b20 l     O .data	0000000000000100              hex_lo_digit.8373
0000000001367780 l     O .data	0000000000000080              filename_safe_char
0000000000b91a6c l     F .text	000000000000022c              my_mb_wc_filename
0000000000b91c98 l     F .text	00000000000002ef              my_wc_mb_filename
000000000136a7a0 l     O .data	0000000000000058              my_collation_filename_handler
000000000136a800 l     O .data	00000000000000d8              my_charset_filename_handler
0000000001367800 l     O .data	0000000000000101              ctype_utf8mb4
0000000001367920 l     O .data	0000000000000100              to_lower_utf8mb4
0000000001367a20 l     O .data	0000000000000100              to_upper_utf8mb4
0000000000b91f87 l     F .text	0000000000000076              bincmp_utf8mb4
0000000000b91ffd l     F .text	0000000000000269              my_mb_wc_utf8mb4
0000000000b92266 l     F .text	0000000000000209              my_mb_wc_utf8mb4_no_range
0000000000b9246f l     F .text	000000000000012d              my_wc_mb_utf8mb4
0000000000b9259c l     F .text	00000000000000f5              my_wc_mb_utf8mb4_no_range
0000000000b92691 l     F .text	000000000000008e              my_tolower_utf8mb4
0000000000b9271f l     F .text	000000000000008d              my_toupper_utf8mb4
0000000000b927ac l     F .text	000000000000012d              my_caseup_utf8mb4
0000000000d4ca50 l     O .rodata	0000000000000012              __PRETTY_FUNCTION__.8468
0000000000b928d9 l     F .text	0000000000000061              my_hash_add
0000000000b9293a l     F .text	0000000000000126              my_hash_sort_utf8mb4
0000000000b92a60 l     F .text	0000000000000107              my_caseup_str_utf8mb4
0000000000d4ca70 l     O .rodata	0000000000000016              __PRETTY_FUNCTION__.8504
0000000000b92b67 l     F .text	000000000000012d              my_casedn_utf8mb4
0000000000d4ca90 l     O .rodata	0000000000000012              __PRETTY_FUNCTION__.8522
0000000000b92c94 l     F .text	0000000000000107              my_casedn_str_utf8mb4
0000000000d4cab0 l     O .rodata	0000000000000016              __PRETTY_FUNCTION__.8536
0000000000b92d9b l     F .text	0000000000000185              my_strnncoll_utf8mb4
0000000000b92f20 l     F .text	0000000000000202              my_strnncollsp_utf8mb4
0000000000b93122 l     F .text	00000000000001bc              my_strcasecmp_utf8mb4
0000000000b932de l     F .text	000000000000005b              my_wildcmp_utf8mb4
0000000000b93339 l     F .text	000000000000001d              my_strnxfrmlen_utf8mb4
0000000000b93356 l     F .text	00000000000000e4              my_valid_mbcharlen_utf8mb4
0000000000b9343a l     F .text	000000000000008b              my_well_formed_len_utf8mb4
0000000000b934c5 l     F .text	0000000000000040              my_ismbchar_utf8mb4
0000000000b93505 l     F .text	000000000000005f              my_mbcharlen_utf8mb4
000000000136a9a0 l     O .data	0000000000000058              my_collation_utf8mb4_general_ci_handler
000000000136aa00 l     O .data	0000000000000058              my_collation_utf8mb4_bin_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype-win1250ch.c
000000000136acc0 l     O .data	0000000000000200              tab_cp1250_uni
000000000136aec0 l     O .data	00000000000000fe              tab_uni_cp1250_plane00
000000000136afc0 l     O .data	000000000000007d              tab_uni_cp1250_plane01
000000000136b040 l     O .data	000000000000009a              tab_uni_cp1250_plane20
000000000136b0e0 l     O .data	0000000000000017              tab_uni_cp1250_plane02
000000000136b0f7 l     O .data	0000000000000001              tab_uni_cp1250_plane21
000000000136b920 l     O .data	0000000000000060              idx_uni_cp1250
000000000136b100 l     O .data	0000000000000101              ctype_win1250ch
000000000136b220 l     O .data	0000000000000100              to_lower_win1250ch
000000000136b320 l     O .data	0000000000000100              to_upper_win1250ch
000000000136b420 l     O .data	0000000000000100              sort_order_win1250ch
000000000136b520 l     O .data	0000000000000100              _sort_order_win1250ch1
000000000136b620 l     O .data	0000000000000100              _sort_order_win1250ch2
000000000136b980 l     O .data	0000000000000050              doubles
0000000000b93564 l     F .text	0000000000000349              my_strnncoll_win1250ch
0000000000b938ad l     F .text	0000000000000091              my_strnncollsp_win1250ch
0000000000b9393e l     F .text	00000000000001f5              my_strnxfrm_win1250ch
000000000136b720 l     O .data	0000000000000100              like_range_prefix_min_win1250ch
000000000136b820 l     O .data	0000000000000100              like_range_prefix_max_win1250ch
0000000000b93b33 l     F .text	0000000000000175              my_like_range_win1250ch
000000000136b9e0 l     O .data	0000000000000058              my_collation_czech_ci_handler
0000000000000000 l    df *ABS*	0000000000000000              ctype.c
0000000000b93ca8 l     F .text	0000000000000054              mstr
000000000136bb00 l     O .data	0000000000000200              sec
0000000000b93cfc l     F .text	000000000000005b              cs_file_sec
0000000000b93d57 l     F .text	00000000000000f0              fill_uchar
0000000000b93e47 l     F .text	00000000000000f5              fill_uint16
0000000000b93f3c l     F .text	0000000000000090              cs_enter
0000000000b93fcc l     F .text	000000000000009c              cs_leave
0000000000b94068 l     F .text	00000000000004b1              cs_value
0000000000000000 l    df *ABS*	0000000000000000              decimal.c
0000000000d4cec0 l     O .rodata	0000000000000028              powers10
0000000000d4cf00 l     O .rodata	0000000000000028              dig2bytes
0000000000d4cf40 l     O .rodata	0000000000000020              frac_max
0000000000d4d368 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.9738
0000000000b949b8 l     F .text	0000000000000112              remove_leading_zeroes
0000000000d4d380 l     O .rodata	0000000000000016              __PRETTY_FUNCTION__.9760
0000000000d4d398 l     O .rodata	000000000000000f              __PRETTY_FUNCTION__.9794
0000000000b950c3 l     F .text	000000000000027e              digits_bounds
0000000000d4d3b0 l     O .rodata	0000000000000013              __PRETTY_FUNCTION__.9851
0000000000d4d3d0 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.9864
0000000000d4d3e8 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.9888
0000000000d4d400 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.9927
0000000000b9678d l     F .text	0000000000000134              ull2dec
0000000000d4d418 l     O .rodata	0000000000000008              __PRETTY_FUNCTION__.9971
0000000000d4d420 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.10058
0000000000d4d430 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.10102
0000000000d4d440 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.10130
0000000000d4d450 l     O .rodata	0000000000000011              __PRETTY_FUNCTION__.10140
0000000000d4d468 l     O .rodata	000000000000000e              __PRETTY_FUNCTION__.10159
0000000000d4d480 l     O .rodata	0000000000000014              __PRETTY_FUNCTION__.10215
0000000000b989a3 l     F .text	00000000000005ab              do_add
0000000000d4d494 l     O .rodata	0000000000000007              __PRETTY_FUNCTION__.10235
0000000000b98f4e l     F .text	000000000000084e              do_sub
0000000000d4d49b l     O .rodata	0000000000000007              __PRETTY_FUNCTION__.10283
0000000000d4d4a8 l     O .rodata	000000000000000c              __PRETTY_FUNCTION__.10364
0000000000b9a1b7 l     F .text	00000000000010e8              do_div_mod
0000000000d4d4b8 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.10426
0000000000000000 l    df *ABS*	0000000000000000              dtoa.c
0000000000d4d7f8 l     O .rodata	0000000000000008              __PRETTY_FUNCTION__.9835
0000000000b9f187 l     F .text	00000000000019c4              dtoa
0000000000b9c4e7 l     F .text	000000000000003e              dtoa_free
0000000000d4d800 l     O .rodata	0000000000000008              __PRETTY_FUNCTION__.9867
0000000000d4d808 l     O .rodata	000000000000000a              __PRETTY_FUNCTION__.9890
0000000000b9d547 l     F .text	00000000000019d2              my_strtod_int
0000000000b9c2a5 l     F .text	0000000000000144              Balloc
0000000000d4d812 l     O .rodata	0000000000000007              __PRETTY_FUNCTION__.9925
0000000000b9c3e9 l     F .text	0000000000000089              Bfree
0000000000b9c472 l     F .text	0000000000000075              dtoa_alloc
0000000000b9c525 l     F .text	000000000000012e              multadd
0000000000b9c653 l     F .text	0000000000000125              s2b
0000000000b9c778 l     F .text	0000000000000072              hi0bits
0000000000b9c7ea l     F .text	00000000000000c5              lo0bits
0000000000b9c8af l     F .text	0000000000000041              i2b
0000000000b9c8f0 l     F .text	000000000000021a              mult
000000000136bd00 l     O .data	00000000000000a4              powers5
000000000136bdc0 l     O .data	00000000000000a8              p5_a
0000000000b9cb0a l     F .text	000000000000017d              pow5mult
000000000136bda8 l     O .data	000000000000000c              p05.10034
0000000000b9cc87 l     F .text	0000000000000186              lshift
0000000000b9ce0d l     F .text	00000000000000c6              cmp
0000000000b9ced3 l     F .text	00000000000001e7              diff
0000000000b9d0ba l     F .text	000000000000005b              ulp
0000000000b9d115 l     F .text	0000000000000198              b2d
0000000000b9d2ad l     F .text	00000000000001d4              d2b
0000000000b9d481 l     F .text	00000000000000c6              ratio
0000000000d4d620 l     O .rodata	00000000000000b8              tens
0000000000d4d6e0 l     O .rodata	0000000000000028              bigtens
0000000000d4d720 l     O .rodata	0000000000000028              tinytens
0000000000b9ef19 l     F .text	000000000000026e              quorem
0000000000000000 l    df *ABS*	0000000000000000              int2str.c
0000000000000000 l    df *ABS*	0000000000000000              is_prefix.c
0000000000000000 l    df *ABS*	0000000000000000              llstr.c
0000000000000000 l    df *ABS*	0000000000000000              my_strtoll10.c
000000000136bf00 l     O .data	0000000000000048              lfactor
0000000000000000 l    df *ABS*	0000000000000000              my_vsnprintf.c
0000000000ba143f l     F .text	0000000000000093              get_length
0000000000ba14d2 l     F .text	0000000000000072              get_width
0000000000ba1544 l     F .text	000000000000006e              check_longlong
0000000000ba15b2 l     F .text	0000000000000153              backtick_string
0000000000ba1705 l     F .text	0000000000000128              process_str_arg
0000000000ba182d l     F .text	0000000000000091              process_bin_arg
0000000000d4dac0 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.8020
0000000000ba18be l     F .text	00000000000000bf              process_dbl_arg
0000000000ba197d l     F .text	000000000000028d              process_int_arg
0000000000d4dad0 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.8041
0000000000ba1c0a l     F .text	000000000000164e              process_args
0000000000d4dae0 l     O .rodata	000000000000000d              __PRETTY_FUNCTION__.8056
0000000000d4daf0 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.8123
0000000000000000 l    df *ABS*	0000000000000000              str2int.c
0000000000000000 l    df *ABS*	0000000000000000              str_alloc.c
0000000000ba3e6e l     F .text	0000000000000033              my_str_malloc_default
0000000000ba3ea1 l     F .text	000000000000001b              my_str_free_default
0000000000000000 l    df *ABS*	0000000000000000              strcend.c
0000000000000000 l    df *ABS*	0000000000000000              strend.c
0000000000000000 l    df *ABS*	0000000000000000              strfill.c
0000000000000000 l    df *ABS*	0000000000000000              strmake.c
0000000000000000 l    df *ABS*	0000000000000000              strmov.c
0000000000000000 l    df *ABS*	0000000000000000              strnmov.c
0000000000000000 l    df *ABS*	0000000000000000              strxmov.c
0000000000000000 l    df *ABS*	0000000000000000              strxnmov.c
0000000000000000 l    df *ABS*	0000000000000000              xml.c
000000000136bf60 l     O .data	0000000000000100              my_xml_ctype
0000000000ba42d4 l     F .text	00000000000000ae              lex2str
0000000000ba4382 l     F .text	00000000000000ac              my_xml_norm_text
0000000000ba442e l     F .text	0000000000000066              my_xml_parser_prefix_cmp
0000000000ba4494 l     F .text	00000000000004d9              my_xml_scan
0000000000ba496d l     F .text	0000000000000049              my_xml_value
0000000000ba49b6 l     F .text	000000000000019a              my_xml_enter
0000000000ba4b50 l     F .text	0000000000000051              mstr
0000000000ba4ba1 l     F .text	000000000000022c              my_xml_leave
0000000000000000 l    df *ABS*	0000000000000000              my_strchr.c
0000000000d4dd88 l     O .rodata	000000000000000b              __PRETTY_FUNCTION__.7971
0000000000000000 l    df *ABS*	0000000000000000              vio.c
0000000000ba5739 l     F .text	000000000000000f              has_no_data
0000000000ba5748 l     F .text	00000000000003ab              vio_init
0000000000000000 l    df *ABS*	0000000000000000              viosocket.c
0000000000d4e180 l     O .rodata	0000000000000009              __PRETTY_FUNCTION__.11680
0000000000d4e190 l     O .rodata	000000000000000a              __PRETTY_FUNCTION__.11743
0000000000ba6824 l     F .text	0000000000000182              vio_get_normalized_ip
0000000000ba6d90 l     F .text	00000000000000c0              socket_poll_read
0000000000ba6e50 l     F .text	000000000000006b              socket_peek_read
0000000000000000 l    df *ABS*	0000000000000000              viossl.c
0000000000ba7244 l     F .text	00000000000001b4              report_errors
0000000000ba777d l     F .text	00000000000004ee              ssl_do
0000000000000000 l    df *ABS*	0000000000000000              viosslfactories.c
0000000001394078 l     O .bss	0000000000000001              ssl_algorithms_added
0000000001394079 l     O .bss	0000000000000001              ssl_error_strings_loaded
000000000136c060 l     O .data	0000000000000100              dh2048_p
000000000136c160 l     O .data	0000000000000001              dh2048_g
0000000000ba7dd3 l     F .text	000000000000008c              get_dh2048
0000000000ba7e5f l     F .text	0000000000000125              report_errors
000000000136c180 l     O .data	0000000000000040              ssl_error_string
0000000000d4e700 l     O .rodata	0000000000000010              __PRETTY_FUNCTION__.11694
0000000000ba7fd2 l     F .text	00000000000003a3              vio_set_cert_stuff
0000000000ba8375 l     F .text	000000000000003f              check_ssl_init
0000000000ba83b4 l     F .text	0000000000000599              new_VioSSLFd
0000000000000000 l    df *ABS*	0000000000000000              regcomp.c
000000000136c1c0 l     O .data	0000000000000600              cnames
0000000001394088 l     O .bss	000000000000000a              nuls
0000000000bab594 l     F .text	0000000000000081              doemit
0000000000ba8e9b l     F .text	0000000000000184              p_ere
0000000000ba964e l     F .text	0000000000000055              p_str
0000000000ba96a3 l     F .text	000000000000014f              p_bre
0000000000bab445 l     F .text	00000000000000b1              categorize
0000000000bab833 l     F .text	000000000000005c              stripsnug
0000000000bab88f l     F .text	00000000000001f6              findmust
0000000000baba85 l     F .text	000000000000009d              pluscount
0000000000baaf01 l     F .text	0000000000000033              seterr
0000000000ba901f l     F .text	000000000000062f              p_ere_exp
0000000000bab615 l     F .text	0000000000000130              doinsert
0000000000bab745 l     F .text	0000000000000042              dofwd
0000000000baab7c l     F .text	0000000000000078              nonnewline
0000000000ba9e1f l     F .text	00000000000004d0              p_bracket
0000000000baaabf l     F .text	00000000000000bd              ordinary
0000000000ba9d86 l     F .text	0000000000000099              p_count
0000000000baabf4 l     F .text	000000000000030d              repeat
0000000000ba97f2 l     F .text	0000000000000594              p_simp_re
0000000000bab4f6 l     F .text	000000000000009e              dupl
0000000000baaf34 l     F .text	00000000000001fe              allocset
0000000000baa2ef l     F .text	000000000000031a              p_b_term
0000000000baa992 l     F .text	00000000000000b4              othercase
0000000000bab351 l     F .text	0000000000000007              mccase
0000000000bab34a l     F .text	0000000000000007              mcinvert
0000000000bab2f7 l     F .text	0000000000000053              nch
0000000000bab2a9 l     F .text	000000000000004e              firstch
0000000000bab132 l     F .text	000000000000008e              freeset
0000000000bab1c0 l     F .text	00000000000000e9              freezeset
0000000000baa609 l     F .text	0000000000000139              p_b_cclass
0000000000baa742 l     F .text	0000000000000052              p_b_eclass
0000000000baa794 l     F .text	00000000000000f3              p_b_symbol
0000000000baa887 l     F .text	000000000000010b              p_b_coll_elem
0000000000baaa46 l     F .text	0000000000000079              bothcases
0000000000bab358 l     F .text	000000000000006b              isinsets
0000000000bab3c3 l     F .text	0000000000000082              samesets
0000000000bab787 l     F .text	00000000000000ac              enlarge
0000000000000000 l    df *ABS*	0000000000000000              regerror.c
000000000136c960 l     O .data	0000000000000198              rerrs
0000000000babc51 l     F .text	0000000000000076              regatoi
0000000000000000 l    df *ABS*	0000000000000000              regexec.c
0000000000babcc7 l     F .text	00000000000005ee              smatcher
0000000000bad1dc l     F .text	000000000000031b              sfast
0000000000bad4f7 l     F .text	0000000000000306              sslow
0000000000bac2b5 l     F .text	000000000000059c              sdissect
0000000000bac851 l     F .text	000000000000098b              sbackref
0000000000bad7fd l     F .text	0000000000000569              sstep
0000000000badd66 l     F .text	00000000000006ca              lmatcher
0000000000baf357 l     F .text	0000000000000380              lfast
0000000000baf6d7 l     F .text	0000000000000359              lslow
0000000000bae430 l     F .text	000000000000059c              ldissect
0000000000bae9cc l     F .text	000000000000098b              lbackref
0000000000bafa30 l     F .text	0000000000000733              lstep
0000000000000000 l    df *ABS*	0000000000000000              regfree.c
0000000000000000 l    df *ABS*	0000000000000000              reginit.c
0000000001394092 l     O .bss	0000000000000001              regex_inited
0000000000000000 l    df *ABS*	0000000000000000              ssl.cpp
0000000000bb080a l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d4ef00 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d4ef04 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d4ef08 l     O .rodata	0000000000000004              yaSSL::ID_LEN
0000000000d4ef0c l     O .rodata	0000000000000004              yaSSL::SUITE_LEN
0000000000d4ef10 l     O .rodata	0000000000000004              yaSSL::SECRET_LEN
0000000000d4ef14 l     O .rodata	0000000000000004              yaSSL::MASTER_ROUNDS
0000000000d4ef18 l     O .rodata	0000000000000004              yaSSL::RAN_LEN
0000000000d4ef1c l     O .rodata	0000000000000004              yaSSL::MAC_BLOCK_SZ
0000000000d4ef20 l     O .rodata	0000000000000004              yaSSL::MD5_LEN
0000000000d4ef24 l     O .rodata	0000000000000004              yaSSL::SHA_LEN
0000000000d4ef28 l     O .rodata	0000000000000004              yaSSL::RMD_LEN
0000000000d4ef2c l     O .rodata	0000000000000004              yaSSL::PREFIX
0000000000d4ef30 l     O .rodata	0000000000000004              yaSSL::KEY_PREFIX
0000000000d4ef34 l     O .rodata	0000000000000004              yaSSL::FORTEZZA_MAX
0000000000d4ef38 l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_SZ
0000000000d4ef3c l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_NAME
0000000000d4ef40 l     O .rodata	0000000000000004              yaSSL::MAX_CIPHERS
0000000000d4ef44 l     O .rodata	0000000000000004              yaSSL::SIZEOF_ENUM
0000000000d4ef48 l     O .rodata	0000000000000004              yaSSL::SIZEOF_SENDER
0000000000d4ef4c l     O .rodata	0000000000000004              yaSSL::PAD_MD5
0000000000d4ef50 l     O .rodata	0000000000000004              yaSSL::PAD_SHA
0000000000d4ef54 l     O .rodata	0000000000000004              yaSSL::PAD_RMD
0000000000d4ef58 l     O .rodata	0000000000000004              yaSSL::CERT_HEADER
0000000000d4ef5c l     O .rodata	0000000000000004              yaSSL::CERT_TYPES
0000000000d4ef60 l     O .rodata	0000000000000004              yaSSL::REQUEST_HEADER
0000000000d4ef64 l     O .rodata	0000000000000004              yaSSL::VERIFY_HEADER
0000000000d4ef68 l     O .rodata	0000000000000004              yaSSL::MIN_CERT_TYPES
0000000000d4ef6c l     O .rodata	0000000000000004              yaSSL::MIN_DIS_NAMES
0000000000d4ef70 l     O .rodata	0000000000000004              yaSSL::MIN_DIS_SIZE
0000000000d4ef74 l     O .rodata	0000000000000004              yaSSL::RECORD_HEADER
0000000000d4ef78 l     O .rodata	0000000000000004              yaSSL::HANDSHAKE_HEADER
0000000000d4ef7c l     O .rodata	0000000000000004              yaSSL::FINISHED_SZ
0000000000d4ef80 l     O .rodata	0000000000000004              yaSSL::TLS_FINISHED_SZ
0000000000d4ef84 l     O .rodata	0000000000000004              yaSSL::SEQ_SZ
0000000000d4ef88 l     O .rodata	0000000000000004              yaSSL::LENGTH_SZ
0000000000d4ef8c l     O .rodata	0000000000000004              yaSSL::VERSION_SZ
0000000000d4ef90 l     O .rodata	0000000000000004              yaSSL::DES_KEY_SZ
0000000000d4ef94 l     O .rodata	0000000000000004              yaSSL::DES_EDE_KEY_SZ
0000000000d4ef98 l     O .rodata	0000000000000004              yaSSL::DES_BLOCK
0000000000d4ef9c l     O .rodata	0000000000000004              yaSSL::DES_IV_SZ
0000000000d4efa0 l     O .rodata	0000000000000004              yaSSL::RC4_KEY_SZ
0000000000d4efa4 l     O .rodata	0000000000000004              yaSSL::AES_128_KEY_SZ
0000000000d4efa8 l     O .rodata	0000000000000004              yaSSL::AES_192_KEY_SZ
0000000000d4efac l     O .rodata	0000000000000004              yaSSL::AES_256_KEY_SZ
0000000000d4efb0 l     O .rodata	0000000000000004              yaSSL::AES_BLOCK_SZ
0000000000d4efb4 l     O .rodata	0000000000000004              yaSSL::AES_IV_SZ
0000000000d4efb8 l     O .rodata	0000000000000004              yaSSL::DSS_SIG_SZ
0000000000d4efbc l     O .rodata	0000000000000004              yaSSL::DSS_ENCODED_EXTRA
0000000000d4efc0 l     O .rodata	0000000000000004              yaSSL::EVP_SALT_SZ
0000000000d4efc4 l     O .rodata	0000000000000004              yaSSL::MASTER_LABEL_SZ
0000000000d4efc8 l     O .rodata	0000000000000004              yaSSL::KEY_LABEL_SZ
0000000000d4efcc l     O .rodata	0000000000000004              yaSSL::FINISHED_LABEL_SZ
0000000000d4efd0 l     O .rodata	0000000000000004              yaSSL::SEED_LEN
0000000000d4efd4 l     O .rodata	0000000000000004              yaSSL::DEFAULT_TIMEOUT
0000000000d4efd8 l     O .rodata	0000000000000004              yaSSL::MAX_RECORD_SIZE
0000000000d4efdc l     O .rodata	0000000000000004              yaSSL::COMPRESS_EXTRA
0000000000d4efe0 l     O .rodata	0000000000000004              yaSSL::SESSION_FLUSH_COUNT
0000000000d4efe4 l     O .rodata	0000000000000004              yaSSL::MAX_PAD_SIZE
0000000000d4efe8 l     O .rodata	0000000000000004              yaSSL::COMPRESS_CONSTANT
0000000000d4efec l     O .rodata	0000000000000004              yaSSL::COMPRESS_UPPER
0000000000d4eff0 l     O .rodata	0000000000000004              yaSSL::COMPRESS_LOWER
0000000000d4eff4 l     O .rodata	0000000000000004              yaSSL::COMPRESS_DUMMY_SIZE
0000000000d4eff8 l     O .rodata	0000000000000001              yaSSL::SSL_NULL_WITH_NULL_NULL
0000000000d4eff9 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_MD5
0000000000d4effa l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_SHA
0000000000d4effb l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC4_40_MD5
0000000000d4effc l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_MD5
0000000000d4effd l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_SHA
0000000000d4effe l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5
0000000000d4efff l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_IDEA_CBC_SHA
0000000000d4f000 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d4f001 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_DES_CBC_SHA
0000000000d4f002 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d4f003 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d4f004 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_DES_CBC_SHA
0000000000d4f005 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d4f006 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d4f007 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_DES_CBC_SHA
0000000000d4f008 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d4f009 l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d4f00a l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_DES_CBC_SHA
0000000000d4f00b l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d4f00c l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d4f00d l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_DES_CBC_SHA
0000000000d4f00e l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d4f00f l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
0000000000d4f010 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_RC4_128_MD5
0000000000d4f011 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
0000000000d4f012 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_DES_CBC_SHA
0000000000d4f013 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
0000000000d4f014 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_NULL_SHA
0000000000d4f015 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA
0000000000d4f016 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_RC4_128_SHA
0000000000d4f017 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_SHA
0000000000d4f018 l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_128_CBC_SHA
0000000000d4f019 l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_128_CBC_SHA
0000000000d4f01a l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_SHA
0000000000d4f01b l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_SHA
0000000000d4f01c l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_128_CBC_SHA
0000000000d4f01d l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_SHA
0000000000d4f01e l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_256_CBC_SHA
0000000000d4f01f l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_256_CBC_SHA
0000000000d4f020 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_SHA
0000000000d4f021 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_SHA
0000000000d4f022 l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_256_CBC_SHA
0000000000d4f023 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD160
0000000000d4f024 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_RMD160
0000000000d4f025 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_RMD160
0000000000d4f026 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d4f027 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_RMD160
0000000000d4f028 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_RMD160
0000000000d4f029 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d4f02a l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_RMD160
0000000000d4f02b l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_RMD160
0000000001065a40 l     O .data.rel.ro	0000000000000008              yaSSL::null_str
0000000001065a60 l     O .data.rel.ro	0000000000000400              yaSSL::cipher_names
0000000000d4f1c0 l     O .rodata	0000000000000030              yaSSL::PAD1
0000000000d4f200 l     O .rodata	0000000000000030              yaSSL::PAD2
0000000000d4f230 l     O .rodata	0000000000000004              yaSSL::client
0000000000d4f234 l     O .rodata	0000000000000004              yaSSL::server
0000000000d4f240 l     O .rodata	0000000000000010              yaSSL::tls_client
0000000000d4f250 l     O .rodata	0000000000000010              yaSSL::tls_server
0000000000d4f260 l     O .rodata	000000000000000e              yaSSL::master_label
0000000000d4f270 l     O .rodata	000000000000000e              yaSSL::key_label
0000000000d4f280 l     O .rodata	0000000000000004              yaSSL::AUTO
0000000000d4f284 l     O .rodata	0000000000000004              yaSSL::INVALID_SOCKET
0000000000d4f288 l     O .rodata	0000000000000004              yaSSL::SD_RECEIVE
0000000000d4f28c l     O .rodata	0000000000000004              yaSSL::SD_SEND
0000000000d4f290 l     O .rodata	0000000000000004              yaSSL::SD_BOTH
0000000000d4f294 l     O .rodata	0000000000000004              yaSSL::SOCKET_ERROR
000000000136caf8 l     O .data	0000000000000008              yaSSL_get_version::version31
000000000136cb00 l     O .data	0000000000000008              yaSSL_get_version::version3
000000000136cb08 l     O .data	0000000000000008              yaSSLeay_version::version
000000000136cb10 l     O .data	0000000000000008              yaERR_error_string::msg
000000000136cb18 l     O .data	0000000000000008              yaX509_verify_cert_error_string::msg
000000000136cb20 l     O .data	0000000000000008              yaEVP_md5::type
000000000136cb28 l     O .data	0000000000000008              yaEVP_des_ede3_cbc::type
0000000000000000 l    df *ABS*	0000000000000000              yassl_error.cpp
0000000000bb4c6c l     F .text	000000000000000b              __cxa_pure_virtual
0000000000000000 l    df *ABS*	0000000000000000              yassl_imp.cpp
0000000000bb554a l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d4f9a0 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d4f9a4 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d4f9a8 l     O .rodata	0000000000000004              yaSSL::ID_LEN
0000000000d4f9ac l     O .rodata	0000000000000004              yaSSL::SUITE_LEN
0000000000d4f9b0 l     O .rodata	0000000000000004              yaSSL::SECRET_LEN
0000000000d4f9b4 l     O .rodata	0000000000000004              yaSSL::MASTER_ROUNDS
0000000000d4f9b8 l     O .rodata	0000000000000004              yaSSL::RAN_LEN
0000000000d4f9bc l     O .rodata	0000000000000004              yaSSL::MAC_BLOCK_SZ
0000000000d4f9c0 l     O .rodata	0000000000000004              yaSSL::MD5_LEN
0000000000d4f9c4 l     O .rodata	0000000000000004              yaSSL::SHA_LEN
0000000000d4f9c8 l     O .rodata	0000000000000004              yaSSL::RMD_LEN
0000000000d4f9cc l     O .rodata	0000000000000004              yaSSL::PREFIX
0000000000d4f9d0 l     O .rodata	0000000000000004              yaSSL::KEY_PREFIX
0000000000d4f9d4 l     O .rodata	0000000000000004              yaSSL::FORTEZZA_MAX
0000000000d4f9d8 l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_SZ
0000000000d4f9dc l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_NAME
0000000000d4f9e0 l     O .rodata	0000000000000004              yaSSL::MAX_CIPHERS
0000000000d4f9e4 l     O .rodata	0000000000000004              yaSSL::SIZEOF_ENUM
0000000000d4f9e8 l     O .rodata	0000000000000004              yaSSL::SIZEOF_SENDER
0000000000d4f9ec l     O .rodata	0000000000000004              yaSSL::PAD_MD5
0000000000d4f9f0 l     O .rodata	0000000000000004              yaSSL::PAD_SHA
0000000000d4f9f4 l     O .rodata	0000000000000004              yaSSL::PAD_RMD
0000000000d4f9f8 l     O .rodata	0000000000000004              yaSSL::CERT_HEADER
0000000000d4f9fc l     O .rodata	0000000000000004              yaSSL::CERT_TYPES
0000000000d4fa00 l     O .rodata	0000000000000004              yaSSL::REQUEST_HEADER
0000000000d4fa04 l     O .rodata	0000000000000004              yaSSL::VERIFY_HEADER
0000000000d4fa08 l     O .rodata	0000000000000004              yaSSL::MIN_CERT_TYPES
0000000000d4fa0c l     O .rodata	0000000000000004              yaSSL::MIN_DIS_NAMES
0000000000d4fa10 l     O .rodata	0000000000000004              yaSSL::MIN_DIS_SIZE
0000000000d4fa14 l     O .rodata	0000000000000004              yaSSL::RECORD_HEADER
0000000000d4fa18 l     O .rodata	0000000000000004              yaSSL::HANDSHAKE_HEADER
0000000000d4fa1c l     O .rodata	0000000000000004              yaSSL::FINISHED_SZ
0000000000d4fa20 l     O .rodata	0000000000000004              yaSSL::TLS_FINISHED_SZ
0000000000d4fa24 l     O .rodata	0000000000000004              yaSSL::SEQ_SZ
0000000000d4fa28 l     O .rodata	0000000000000004              yaSSL::LENGTH_SZ
0000000000d4fa2c l     O .rodata	0000000000000004              yaSSL::VERSION_SZ
0000000000d4fa30 l     O .rodata	0000000000000004              yaSSL::DES_KEY_SZ
0000000000d4fa34 l     O .rodata	0000000000000004              yaSSL::DES_EDE_KEY_SZ
0000000000d4fa38 l     O .rodata	0000000000000004              yaSSL::DES_BLOCK
0000000000d4fa3c l     O .rodata	0000000000000004              yaSSL::DES_IV_SZ
0000000000d4fa40 l     O .rodata	0000000000000004              yaSSL::RC4_KEY_SZ
0000000000d4fa44 l     O .rodata	0000000000000004              yaSSL::AES_128_KEY_SZ
0000000000d4fa48 l     O .rodata	0000000000000004              yaSSL::AES_192_KEY_SZ
0000000000d4fa4c l     O .rodata	0000000000000004              yaSSL::AES_256_KEY_SZ
0000000000d4fa50 l     O .rodata	0000000000000004              yaSSL::AES_BLOCK_SZ
0000000000d4fa54 l     O .rodata	0000000000000004              yaSSL::AES_IV_SZ
0000000000d4fa58 l     O .rodata	0000000000000004              yaSSL::DSS_SIG_SZ
0000000000d4fa5c l     O .rodata	0000000000000004              yaSSL::DSS_ENCODED_EXTRA
0000000000d4fa60 l     O .rodata	0000000000000004              yaSSL::EVP_SALT_SZ
0000000000d4fa64 l     O .rodata	0000000000000004              yaSSL::MASTER_LABEL_SZ
0000000000d4fa68 l     O .rodata	0000000000000004              yaSSL::KEY_LABEL_SZ
0000000000d4fa6c l     O .rodata	0000000000000004              yaSSL::FINISHED_LABEL_SZ
0000000000d4fa70 l     O .rodata	0000000000000004              yaSSL::SEED_LEN
0000000000d4fa74 l     O .rodata	0000000000000004              yaSSL::DEFAULT_TIMEOUT
0000000000d4fa78 l     O .rodata	0000000000000004              yaSSL::MAX_RECORD_SIZE
0000000000d4fa7c l     O .rodata	0000000000000004              yaSSL::COMPRESS_EXTRA
0000000000d4fa80 l     O .rodata	0000000000000004              yaSSL::SESSION_FLUSH_COUNT
0000000000d4fa84 l     O .rodata	0000000000000004              yaSSL::MAX_PAD_SIZE
0000000000d4fa88 l     O .rodata	0000000000000004              yaSSL::COMPRESS_CONSTANT
0000000000d4fa8c l     O .rodata	0000000000000004              yaSSL::COMPRESS_UPPER
0000000000d4fa90 l     O .rodata	0000000000000004              yaSSL::COMPRESS_LOWER
0000000000d4fa94 l     O .rodata	0000000000000004              yaSSL::COMPRESS_DUMMY_SIZE
0000000000d4fa98 l     O .rodata	0000000000000001              yaSSL::SSL_NULL_WITH_NULL_NULL
0000000000d4fa99 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_MD5
0000000000d4fa9a l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_SHA
0000000000d4fa9b l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC4_40_MD5
0000000000d4fa9c l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_MD5
0000000000d4fa9d l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_SHA
0000000000d4fa9e l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5
0000000000d4fa9f l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_IDEA_CBC_SHA
0000000000d4faa0 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d4faa1 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_DES_CBC_SHA
0000000000d4faa2 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d4faa3 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d4faa4 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_DES_CBC_SHA
0000000000d4faa5 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d4faa6 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d4faa7 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_DES_CBC_SHA
0000000000d4faa8 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d4faa9 l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d4faaa l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_DES_CBC_SHA
0000000000d4faab l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d4faac l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d4faad l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_DES_CBC_SHA
0000000000d4faae l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d4faaf l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
0000000000d4fab0 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_RC4_128_MD5
0000000000d4fab1 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
0000000000d4fab2 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_DES_CBC_SHA
0000000000d4fab3 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
0000000000d4fab4 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_NULL_SHA
0000000000d4fab5 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA
0000000000d4fab6 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_RC4_128_SHA
0000000000d4fab7 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_SHA
0000000000d4fab8 l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_128_CBC_SHA
0000000000d4fab9 l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_128_CBC_SHA
0000000000d4faba l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_SHA
0000000000d4fabb l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_SHA
0000000000d4fabc l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_128_CBC_SHA
0000000000d4fabd l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_SHA
0000000000d4fabe l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_256_CBC_SHA
0000000000d4fabf l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_256_CBC_SHA
0000000000d4fac0 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_SHA
0000000000d4fac1 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_SHA
0000000000d4fac2 l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_256_CBC_SHA
0000000000d4fac3 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD160
0000000000d4fac4 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_RMD160
0000000000d4fac5 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_RMD160
0000000000d4fac6 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d4fac7 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_RMD160
0000000000d4fac8 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_RMD160
0000000000d4fac9 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d4faca l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_RMD160
0000000000d4facb l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_RMD160
0000000001065e60 l     O .data.rel.ro	0000000000000008              yaSSL::null_str
0000000001065e80 l     O .data.rel.ro	0000000000000400              yaSSL::cipher_names
0000000000d4fc60 l     O .rodata	0000000000000030              yaSSL::PAD1
0000000000d4fca0 l     O .rodata	0000000000000030              yaSSL::PAD2
0000000000d4fcd0 l     O .rodata	0000000000000004              yaSSL::client
0000000000d4fcd4 l     O .rodata	0000000000000004              yaSSL::server
0000000000d4fce0 l     O .rodata	0000000000000010              yaSSL::tls_client
0000000000d4fcf0 l     O .rodata	0000000000000010              yaSSL::tls_server
0000000000d4fd00 l     O .rodata	000000000000000e              yaSSL::master_label
0000000000d4fd10 l     O .rodata	000000000000000e              yaSSL::key_label
0000000000d4fd20 l     O .rodata	0000000000000004              yaSSL::AUTO
0000000000d4fd24 l     O .rodata	0000000000000004              yaSSL::INVALID_SOCKET
0000000000d4fd28 l     O .rodata	0000000000000004              yaSSL::SD_RECEIVE
0000000000d4fd2c l     O .rodata	0000000000000004              yaSSL::SD_SEND
0000000000d4fd30 l     O .rodata	0000000000000004              yaSSL::SD_BOTH
0000000000d4fd34 l     O .rodata	0000000000000004              yaSSL::SOCKET_ERROR
0000000000bb5555 l     F .text	0000000000000026              yaSSL::(anonymous namespace)::isTLS(yaSSL::ProtocolVersion)
0000000000bb89d0 l     F .text	0000000000000076              yaSSL::constant_compare(unsigned char const*, unsigned char const*, int)
0000000000bb8a46 l     F .text	0000000000000068              yaSSL::pad_check(unsigned char const*, unsigned char, int)
0000000000bb8aae l     F .text	000000000000009b              yaSSL::get_rounds(int, int, int)
0000000000bb8b49 l     F .text	0000000000000149              yaSSL::compress_rounds(yaSSL::SSL&, int, unsigned char const*)
0000000000bb8c92 l     F .text	00000000000003e5              yaSSL::timing_verify(yaSSL::SSL&, unsigned char const*, int, int, int)
0000000000000000 l    df *ABS*	0000000000000000              yassl_int.cpp
0000000000bbffae l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d4fd80 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d4fd84 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d4fd88 l     O .rodata	0000000000000004              yaSSL::ID_LEN
0000000000d4fd8c l     O .rodata	0000000000000004              yaSSL::SUITE_LEN
0000000000d4fd90 l     O .rodata	0000000000000004              yaSSL::SECRET_LEN
0000000000d4fd94 l     O .rodata	0000000000000004              yaSSL::MASTER_ROUNDS
0000000000d4fd98 l     O .rodata	0000000000000004              yaSSL::RAN_LEN
0000000000d4fd9c l     O .rodata	0000000000000004              yaSSL::MAC_BLOCK_SZ
0000000000d4fda0 l     O .rodata	0000000000000004              yaSSL::MD5_LEN
0000000000d4fda4 l     O .rodata	0000000000000004              yaSSL::SHA_LEN
0000000000d4fda8 l     O .rodata	0000000000000004              yaSSL::RMD_LEN
0000000000d4fdac l     O .rodata	0000000000000004              yaSSL::PREFIX
0000000000d4fdb0 l     O .rodata	0000000000000004              yaSSL::KEY_PREFIX
0000000000d4fdb4 l     O .rodata	0000000000000004              yaSSL::FORTEZZA_MAX
0000000000d4fdb8 l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_SZ
0000000000d4fdbc l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_NAME
0000000000d4fdc0 l     O .rodata	0000000000000004              yaSSL::MAX_CIPHERS
0000000000d4fdc4 l     O .rodata	0000000000000004              yaSSL::SIZEOF_ENUM
0000000000d4fdc8 l     O .rodata	0000000000000004              yaSSL::SIZEOF_SENDER
0000000000d4fdcc l     O .rodata	0000000000000004              yaSSL::PAD_MD5
0000000000d4fdd0 l     O .rodata	0000000000000004              yaSSL::PAD_SHA
0000000000d4fdd4 l     O .rodata	0000000000000004              yaSSL::PAD_RMD
0000000000d4fdd8 l     O .rodata	0000000000000004              yaSSL::CERT_HEADER
0000000000d4fddc l     O .rodata	0000000000000004              yaSSL::CERT_TYPES
0000000000d4fde0 l     O .rodata	0000000000000004              yaSSL::REQUEST_HEADER
0000000000d4fde4 l     O .rodata	0000000000000004              yaSSL::VERIFY_HEADER
0000000000d4fde8 l     O .rodata	0000000000000004              yaSSL::MIN_CERT_TYPES
0000000000d4fdec l     O .rodata	0000000000000004              yaSSL::MIN_DIS_NAMES
0000000000d4fdf0 l     O .rodata	0000000000000004              yaSSL::MIN_DIS_SIZE
0000000000d4fdf4 l     O .rodata	0000000000000004              yaSSL::RECORD_HEADER
0000000000d4fdf8 l     O .rodata	0000000000000004              yaSSL::HANDSHAKE_HEADER
0000000000d4fdfc l     O .rodata	0000000000000004              yaSSL::FINISHED_SZ
0000000000d4fe00 l     O .rodata	0000000000000004              yaSSL::TLS_FINISHED_SZ
0000000000d4fe04 l     O .rodata	0000000000000004              yaSSL::SEQ_SZ
0000000000d4fe08 l     O .rodata	0000000000000004              yaSSL::LENGTH_SZ
0000000000d4fe0c l     O .rodata	0000000000000004              yaSSL::VERSION_SZ
0000000000d4fe10 l     O .rodata	0000000000000004              yaSSL::DES_KEY_SZ
0000000000d4fe14 l     O .rodata	0000000000000004              yaSSL::DES_EDE_KEY_SZ
0000000000d4fe18 l     O .rodata	0000000000000004              yaSSL::DES_BLOCK
0000000000d4fe1c l     O .rodata	0000000000000004              yaSSL::DES_IV_SZ
0000000000d4fe20 l     O .rodata	0000000000000004              yaSSL::RC4_KEY_SZ
0000000000d4fe24 l     O .rodata	0000000000000004              yaSSL::AES_128_KEY_SZ
0000000000d4fe28 l     O .rodata	0000000000000004              yaSSL::AES_192_KEY_SZ
0000000000d4fe2c l     O .rodata	0000000000000004              yaSSL::AES_256_KEY_SZ
0000000000d4fe30 l     O .rodata	0000000000000004              yaSSL::AES_BLOCK_SZ
0000000000d4fe34 l     O .rodata	0000000000000004              yaSSL::AES_IV_SZ
0000000000d4fe38 l     O .rodata	0000000000000004              yaSSL::DSS_SIG_SZ
0000000000d4fe3c l     O .rodata	0000000000000004              yaSSL::DSS_ENCODED_EXTRA
0000000000d4fe40 l     O .rodata	0000000000000004              yaSSL::EVP_SALT_SZ
0000000000d4fe44 l     O .rodata	0000000000000004              yaSSL::MASTER_LABEL_SZ
0000000000d4fe48 l     O .rodata	0000000000000004              yaSSL::KEY_LABEL_SZ
0000000000d4fe4c l     O .rodata	0000000000000004              yaSSL::FINISHED_LABEL_SZ
0000000000d4fe50 l     O .rodata	0000000000000004              yaSSL::SEED_LEN
0000000000d4fe54 l     O .rodata	0000000000000004              yaSSL::DEFAULT_TIMEOUT
0000000000d4fe58 l     O .rodata	0000000000000004              yaSSL::MAX_RECORD_SIZE
0000000000d4fe5c l     O .rodata	0000000000000004              yaSSL::COMPRESS_EXTRA
0000000000d4fe60 l     O .rodata	0000000000000004              yaSSL::SESSION_FLUSH_COUNT
0000000000d4fe64 l     O .rodata	0000000000000004              yaSSL::MAX_PAD_SIZE
0000000000d4fe68 l     O .rodata	0000000000000004              yaSSL::COMPRESS_CONSTANT
0000000000d4fe6c l     O .rodata	0000000000000004              yaSSL::COMPRESS_UPPER
0000000000d4fe70 l     O .rodata	0000000000000004              yaSSL::COMPRESS_LOWER
0000000000d4fe74 l     O .rodata	0000000000000004              yaSSL::COMPRESS_DUMMY_SIZE
0000000000d4fe78 l     O .rodata	0000000000000001              yaSSL::SSL_NULL_WITH_NULL_NULL
0000000000d4fe79 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_MD5
0000000000d4fe7a l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_SHA
0000000000d4fe7b l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC4_40_MD5
0000000000d4fe7c l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_MD5
0000000000d4fe7d l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_SHA
0000000000d4fe7e l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5
0000000000d4fe7f l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_IDEA_CBC_SHA
0000000000d4fe80 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d4fe81 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_DES_CBC_SHA
0000000000d4fe82 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d4fe83 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d4fe84 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_DES_CBC_SHA
0000000000d4fe85 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d4fe86 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d4fe87 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_DES_CBC_SHA
0000000000d4fe88 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d4fe89 l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d4fe8a l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_DES_CBC_SHA
0000000000d4fe8b l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d4fe8c l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d4fe8d l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_DES_CBC_SHA
0000000000d4fe8e l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d4fe8f l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
0000000000d4fe90 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_RC4_128_MD5
0000000000d4fe91 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
0000000000d4fe92 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_DES_CBC_SHA
0000000000d4fe93 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
0000000000d4fe94 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_NULL_SHA
0000000000d4fe95 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA
0000000000d4fe96 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_RC4_128_SHA
0000000000d4fe97 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_SHA
0000000000d4fe98 l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_128_CBC_SHA
0000000000d4fe99 l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_128_CBC_SHA
0000000000d4fe9a l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_SHA
0000000000d4fe9b l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_SHA
0000000000d4fe9c l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_128_CBC_SHA
0000000000d4fe9d l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_SHA
0000000000d4fe9e l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_256_CBC_SHA
0000000000d4fe9f l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_256_CBC_SHA
0000000000d4fea0 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_SHA
0000000000d4fea1 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_SHA
0000000000d4fea2 l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_256_CBC_SHA
0000000000d4fea3 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD160
0000000000d4fea4 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_RMD160
0000000000d4fea5 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_RMD160
0000000000d4fea6 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d4fea7 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_RMD160
0000000000d4fea8 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_RMD160
0000000000d4fea9 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d4feaa l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_RMD160
0000000000d4feab l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_RMD160
0000000001066820 l     O .data.rel.ro	0000000000000008              yaSSL::null_str
0000000001066840 l     O .data.rel.ro	0000000000000400              yaSSL::cipher_names
0000000000d50040 l     O .rodata	0000000000000030              yaSSL::PAD1
0000000000d50080 l     O .rodata	0000000000000030              yaSSL::PAD2
0000000000d500b0 l     O .rodata	0000000000000004              yaSSL::client
0000000000d500b4 l     O .rodata	0000000000000004              yaSSL::server
0000000000d500c0 l     O .rodata	0000000000000010              yaSSL::tls_client
0000000000d500d0 l     O .rodata	0000000000000010              yaSSL::tls_server
0000000000d500e0 l     O .rodata	000000000000000e              yaSSL::master_label
0000000000d500f0 l     O .rodata	000000000000000e              yaSSL::key_label
0000000000d50100 l     O .rodata	0000000000000004              yaSSL::AUTO
0000000000d50104 l     O .rodata	0000000000000004              yaSSL::INVALID_SOCKET
0000000000d50108 l     O .rodata	0000000000000004              yaSSL::SD_RECEIVE
0000000000d5010c l     O .rodata	0000000000000004              yaSSL::SD_SEND
0000000000d50110 l     O .rodata	0000000000000004              yaSSL::SD_BOTH
0000000000d50114 l     O .rodata	0000000000000004              yaSSL::SOCKET_ERROR
0000000000bc2366 l     F .text	0000000000000107              yaSSL::(anonymous namespace)::setPrefix(unsigned char*, int)
0000000000d503c0 l     O .rodata	0000000000000020              yaSSL::(anonymous namespace)::handshake_order
00000000013940a0 l     O .bss	0000000000000008              yaSSL::sessionsInstance
00000000013940a8 l     O .bss	0000000000000008              yaSSL::sslFactoryInstance
00000000013940b0 l     O .bss	0000000000000008              yaSSL::errorsInstance
0000000000000000 l    df *ABS*	0000000000000000              buffer.cpp
0000000000bc8754 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d504e0 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d504e4 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d504e8 l     O .rodata	0000000000000004              yaSSL::ID_LEN
0000000000d504ec l     O .rodata	0000000000000004              yaSSL::SUITE_LEN
0000000000d504f0 l     O .rodata	0000000000000004              yaSSL::SECRET_LEN
0000000000d504f4 l     O .rodata	0000000000000004              yaSSL::MASTER_ROUNDS
0000000000d504f8 l     O .rodata	0000000000000004              yaSSL::RAN_LEN
0000000000d504fc l     O .rodata	0000000000000004              yaSSL::MAC_BLOCK_SZ
0000000000d50500 l     O .rodata	0000000000000004              yaSSL::MD5_LEN
0000000000d50504 l     O .rodata	0000000000000004              yaSSL::SHA_LEN
0000000000d50508 l     O .rodata	0000000000000004              yaSSL::RMD_LEN
0000000000d5050c l     O .rodata	0000000000000004              yaSSL::PREFIX
0000000000d50510 l     O .rodata	0000000000000004              yaSSL::KEY_PREFIX
0000000000d50514 l     O .rodata	0000000000000004              yaSSL::FORTEZZA_MAX
0000000000d50518 l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_SZ
0000000000d5051c l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_NAME
0000000000d50520 l     O .rodata	0000000000000004              yaSSL::MAX_CIPHERS
0000000000d50524 l     O .rodata	0000000000000004              yaSSL::SIZEOF_ENUM
0000000000d50528 l     O .rodata	0000000000000004              yaSSL::SIZEOF_SENDER
0000000000d5052c l     O .rodata	0000000000000004              yaSSL::PAD_MD5
0000000000d50530 l     O .rodata	0000000000000004              yaSSL::PAD_SHA
0000000000d50534 l     O .rodata	0000000000000004              yaSSL::PAD_RMD
0000000000d50538 l     O .rodata	0000000000000004              yaSSL::CERT_HEADER
0000000000d5053c l     O .rodata	0000000000000004              yaSSL::CERT_TYPES
0000000000d50540 l     O .rodata	0000000000000004              yaSSL::REQUEST_HEADER
0000000000d50544 l     O .rodata	0000000000000004              yaSSL::VERIFY_HEADER
0000000000d50548 l     O .rodata	0000000000000004              yaSSL::MIN_CERT_TYPES
0000000000d5054c l     O .rodata	0000000000000004              yaSSL::MIN_DIS_NAMES
0000000000d50550 l     O .rodata	0000000000000004              yaSSL::MIN_DIS_SIZE
0000000000d50554 l     O .rodata	0000000000000004              yaSSL::RECORD_HEADER
0000000000d50558 l     O .rodata	0000000000000004              yaSSL::HANDSHAKE_HEADER
0000000000d5055c l     O .rodata	0000000000000004              yaSSL::FINISHED_SZ
0000000000d50560 l     O .rodata	0000000000000004              yaSSL::TLS_FINISHED_SZ
0000000000d50564 l     O .rodata	0000000000000004              yaSSL::SEQ_SZ
0000000000d50568 l     O .rodata	0000000000000004              yaSSL::LENGTH_SZ
0000000000d5056c l     O .rodata	0000000000000004              yaSSL::VERSION_SZ
0000000000d50570 l     O .rodata	0000000000000004              yaSSL::DES_KEY_SZ
0000000000d50574 l     O .rodata	0000000000000004              yaSSL::DES_EDE_KEY_SZ
0000000000d50578 l     O .rodata	0000000000000004              yaSSL::DES_BLOCK
0000000000d5057c l     O .rodata	0000000000000004              yaSSL::DES_IV_SZ
0000000000d50580 l     O .rodata	0000000000000004              yaSSL::RC4_KEY_SZ
0000000000d50584 l     O .rodata	0000000000000004              yaSSL::AES_128_KEY_SZ
0000000000d50588 l     O .rodata	0000000000000004              yaSSL::AES_192_KEY_SZ
0000000000d5058c l     O .rodata	0000000000000004              yaSSL::AES_256_KEY_SZ
0000000000d50590 l     O .rodata	0000000000000004              yaSSL::AES_BLOCK_SZ
0000000000d50594 l     O .rodata	0000000000000004              yaSSL::AES_IV_SZ
0000000000d50598 l     O .rodata	0000000000000004              yaSSL::DSS_SIG_SZ
0000000000d5059c l     O .rodata	0000000000000004              yaSSL::DSS_ENCODED_EXTRA
0000000000d505a0 l     O .rodata	0000000000000004              yaSSL::EVP_SALT_SZ
0000000000d505a4 l     O .rodata	0000000000000004              yaSSL::MASTER_LABEL_SZ
0000000000d505a8 l     O .rodata	0000000000000004              yaSSL::KEY_LABEL_SZ
0000000000d505ac l     O .rodata	0000000000000004              yaSSL::FINISHED_LABEL_SZ
0000000000d505b0 l     O .rodata	0000000000000004              yaSSL::SEED_LEN
0000000000d505b4 l     O .rodata	0000000000000004              yaSSL::DEFAULT_TIMEOUT
0000000000d505b8 l     O .rodata	0000000000000004              yaSSL::MAX_RECORD_SIZE
0000000000d505bc l     O .rodata	0000000000000004              yaSSL::COMPRESS_EXTRA
0000000000d505c0 l     O .rodata	0000000000000004              yaSSL::SESSION_FLUSH_COUNT
0000000000d505c4 l     O .rodata	0000000000000004              yaSSL::MAX_PAD_SIZE
0000000000d505c8 l     O .rodata	0000000000000004              yaSSL::COMPRESS_CONSTANT
0000000000d505cc l     O .rodata	0000000000000004              yaSSL::COMPRESS_UPPER
0000000000d505d0 l     O .rodata	0000000000000004              yaSSL::COMPRESS_LOWER
0000000000d505d4 l     O .rodata	0000000000000004              yaSSL::COMPRESS_DUMMY_SIZE
0000000000d505d8 l     O .rodata	0000000000000001              yaSSL::SSL_NULL_WITH_NULL_NULL
0000000000d505d9 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_MD5
0000000000d505da l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_SHA
0000000000d505db l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC4_40_MD5
0000000000d505dc l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_MD5
0000000000d505dd l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_SHA
0000000000d505de l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5
0000000000d505df l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_IDEA_CBC_SHA
0000000000d505e0 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d505e1 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_DES_CBC_SHA
0000000000d505e2 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d505e3 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d505e4 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_DES_CBC_SHA
0000000000d505e5 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d505e6 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d505e7 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_DES_CBC_SHA
0000000000d505e8 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d505e9 l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d505ea l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_DES_CBC_SHA
0000000000d505eb l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d505ec l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d505ed l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_DES_CBC_SHA
0000000000d505ee l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d505ef l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
0000000000d505f0 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_RC4_128_MD5
0000000000d505f1 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
0000000000d505f2 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_DES_CBC_SHA
0000000000d505f3 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
0000000000d505f4 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_NULL_SHA
0000000000d505f5 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA
0000000000d505f6 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_RC4_128_SHA
0000000000d505f7 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_SHA
0000000000d505f8 l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_128_CBC_SHA
0000000000d505f9 l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_128_CBC_SHA
0000000000d505fa l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_SHA
0000000000d505fb l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_SHA
0000000000d505fc l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_128_CBC_SHA
0000000000d505fd l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_SHA
0000000000d505fe l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_256_CBC_SHA
0000000000d505ff l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_256_CBC_SHA
0000000000d50600 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_SHA
0000000000d50601 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_SHA
0000000000d50602 l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_256_CBC_SHA
0000000000d50603 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD160
0000000000d50604 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_RMD160
0000000000d50605 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_RMD160
0000000000d50606 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d50607 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_RMD160
0000000000d50608 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_RMD160
0000000000d50609 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d5060a l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_RMD160
0000000000d5060b l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_RMD160
0000000001066c40 l     O .data.rel.ro	0000000000000008              yaSSL::null_str
0000000001066c60 l     O .data.rel.ro	0000000000000400              yaSSL::cipher_names
0000000000d507a0 l     O .rodata	0000000000000030              yaSSL::PAD1
0000000000d507e0 l     O .rodata	0000000000000030              yaSSL::PAD2
0000000000d50810 l     O .rodata	0000000000000004              yaSSL::client
0000000000d50814 l     O .rodata	0000000000000004              yaSSL::server
0000000000d50820 l     O .rodata	0000000000000010              yaSSL::tls_client
0000000000d50830 l     O .rodata	0000000000000010              yaSSL::tls_server
0000000000d50840 l     O .rodata	000000000000000e              yaSSL::master_label
0000000000d50850 l     O .rodata	000000000000000e              yaSSL::key_label
0000000000d50860 l     O .rodata	0000000000000004              yaSSL::AUTO
0000000000000000 l    df *ABS*	0000000000000000              cert_wrapper.cpp
0000000000bc90dc l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d50880 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d50884 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d50888 l     O .rodata	0000000000000004              yaSSL::ID_LEN
0000000000d5088c l     O .rodata	0000000000000004              yaSSL::SUITE_LEN
0000000000d50890 l     O .rodata	0000000000000004              yaSSL::SECRET_LEN
0000000000d50894 l     O .rodata	0000000000000004              yaSSL::MASTER_ROUNDS
0000000000d50898 l     O .rodata	0000000000000004              yaSSL::RAN_LEN
0000000000d5089c l     O .rodata	0000000000000004              yaSSL::MAC_BLOCK_SZ
0000000000d508a0 l     O .rodata	0000000000000004              yaSSL::MD5_LEN
0000000000d508a4 l     O .rodata	0000000000000004              yaSSL::SHA_LEN
0000000000d508a8 l     O .rodata	0000000000000004              yaSSL::RMD_LEN
0000000000d508ac l     O .rodata	0000000000000004              yaSSL::PREFIX
0000000000d508b0 l     O .rodata	0000000000000004              yaSSL::KEY_PREFIX
0000000000d508b4 l     O .rodata	0000000000000004              yaSSL::FORTEZZA_MAX
0000000000d508b8 l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_SZ
0000000000d508bc l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_NAME
0000000000d508c0 l     O .rodata	0000000000000004              yaSSL::MAX_CIPHERS
0000000000d508c4 l     O .rodata	0000000000000004              yaSSL::SIZEOF_ENUM
0000000000d508c8 l     O .rodata	0000000000000004              yaSSL::SIZEOF_SENDER
0000000000d508cc l     O .rodata	0000000000000004              yaSSL::PAD_MD5
0000000000d508d0 l     O .rodata	0000000000000004              yaSSL::PAD_SHA
0000000000d508d4 l     O .rodata	0000000000000004              yaSSL::PAD_RMD
0000000000d508d8 l     O .rodata	0000000000000004              yaSSL::CERT_HEADER
0000000000d508dc l     O .rodata	0000000000000004              yaSSL::CERT_TYPES
0000000000d508e0 l     O .rodata	0000000000000004              yaSSL::REQUEST_HEADER
0000000000d508e4 l     O .rodata	0000000000000004              yaSSL::VERIFY_HEADER
0000000000d508e8 l     O .rodata	0000000000000004              yaSSL::MIN_CERT_TYPES
0000000000d508ec l     O .rodata	0000000000000004              yaSSL::MIN_DIS_NAMES
0000000000d508f0 l     O .rodata	0000000000000004              yaSSL::MIN_DIS_SIZE
0000000000d508f4 l     O .rodata	0000000000000004              yaSSL::RECORD_HEADER
0000000000d508f8 l     O .rodata	0000000000000004              yaSSL::HANDSHAKE_HEADER
0000000000d508fc l     O .rodata	0000000000000004              yaSSL::FINISHED_SZ
0000000000d50900 l     O .rodata	0000000000000004              yaSSL::TLS_FINISHED_SZ
0000000000d50904 l     O .rodata	0000000000000004              yaSSL::SEQ_SZ
0000000000d50908 l     O .rodata	0000000000000004              yaSSL::LENGTH_SZ
0000000000d5090c l     O .rodata	0000000000000004              yaSSL::VERSION_SZ
0000000000d50910 l     O .rodata	0000000000000004              yaSSL::DES_KEY_SZ
0000000000d50914 l     O .rodata	0000000000000004              yaSSL::DES_EDE_KEY_SZ
0000000000d50918 l     O .rodata	0000000000000004              yaSSL::DES_BLOCK
0000000000d5091c l     O .rodata	0000000000000004              yaSSL::DES_IV_SZ
0000000000d50920 l     O .rodata	0000000000000004              yaSSL::RC4_KEY_SZ
0000000000d50924 l     O .rodata	0000000000000004              yaSSL::AES_128_KEY_SZ
0000000000d50928 l     O .rodata	0000000000000004              yaSSL::AES_192_KEY_SZ
0000000000d5092c l     O .rodata	0000000000000004              yaSSL::AES_256_KEY_SZ
0000000000d50930 l     O .rodata	0000000000000004              yaSSL::AES_BLOCK_SZ
0000000000d50934 l     O .rodata	0000000000000004              yaSSL::AES_IV_SZ
0000000000d50938 l     O .rodata	0000000000000004              yaSSL::DSS_SIG_SZ
0000000000d5093c l     O .rodata	0000000000000004              yaSSL::DSS_ENCODED_EXTRA
0000000000d50940 l     O .rodata	0000000000000004              yaSSL::EVP_SALT_SZ
0000000000d50944 l     O .rodata	0000000000000004              yaSSL::MASTER_LABEL_SZ
0000000000d50948 l     O .rodata	0000000000000004              yaSSL::KEY_LABEL_SZ
0000000000d5094c l     O .rodata	0000000000000004              yaSSL::FINISHED_LABEL_SZ
0000000000d50950 l     O .rodata	0000000000000004              yaSSL::SEED_LEN
0000000000d50954 l     O .rodata	0000000000000004              yaSSL::DEFAULT_TIMEOUT
0000000000d50958 l     O .rodata	0000000000000004              yaSSL::MAX_RECORD_SIZE
0000000000d5095c l     O .rodata	0000000000000004              yaSSL::COMPRESS_EXTRA
0000000000d50960 l     O .rodata	0000000000000004              yaSSL::SESSION_FLUSH_COUNT
0000000000d50964 l     O .rodata	0000000000000004              yaSSL::MAX_PAD_SIZE
0000000000d50968 l     O .rodata	0000000000000004              yaSSL::COMPRESS_CONSTANT
0000000000d5096c l     O .rodata	0000000000000004              yaSSL::COMPRESS_UPPER
0000000000d50970 l     O .rodata	0000000000000004              yaSSL::COMPRESS_LOWER
0000000000d50974 l     O .rodata	0000000000000004              yaSSL::COMPRESS_DUMMY_SIZE
0000000000d50978 l     O .rodata	0000000000000001              yaSSL::SSL_NULL_WITH_NULL_NULL
0000000000d50979 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_MD5
0000000000d5097a l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_SHA
0000000000d5097b l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC4_40_MD5
0000000000d5097c l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_MD5
0000000000d5097d l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_SHA
0000000000d5097e l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5
0000000000d5097f l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_IDEA_CBC_SHA
0000000000d50980 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d50981 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_DES_CBC_SHA
0000000000d50982 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d50983 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d50984 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_DES_CBC_SHA
0000000000d50985 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d50986 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d50987 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_DES_CBC_SHA
0000000000d50988 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d50989 l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d5098a l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_DES_CBC_SHA
0000000000d5098b l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d5098c l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d5098d l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_DES_CBC_SHA
0000000000d5098e l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d5098f l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
0000000000d50990 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_RC4_128_MD5
0000000000d50991 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
0000000000d50992 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_DES_CBC_SHA
0000000000d50993 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
0000000000d50994 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_NULL_SHA
0000000000d50995 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA
0000000000d50996 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_RC4_128_SHA
0000000000d50997 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_SHA
0000000000d50998 l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_128_CBC_SHA
0000000000d50999 l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_128_CBC_SHA
0000000000d5099a l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_SHA
0000000000d5099b l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_SHA
0000000000d5099c l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_128_CBC_SHA
0000000000d5099d l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_SHA
0000000000d5099e l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_256_CBC_SHA
0000000000d5099f l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_256_CBC_SHA
0000000000d509a0 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_SHA
0000000000d509a1 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_SHA
0000000000d509a2 l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_256_CBC_SHA
0000000000d509a3 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD160
0000000000d509a4 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_RMD160
0000000000d509a5 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_RMD160
0000000000d509a6 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d509a7 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_RMD160
0000000000d509a8 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_RMD160
0000000000d509a9 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d509aa l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_RMD160
0000000000d509ab l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_RMD160
0000000001067060 l     O .data.rel.ro	0000000000000008              yaSSL::null_str
0000000001067080 l     O .data.rel.ro	0000000000000400              yaSSL::cipher_names
0000000000d50b40 l     O .rodata	0000000000000030              yaSSL::PAD1
0000000000d50b80 l     O .rodata	0000000000000030              yaSSL::PAD2
0000000000d50bb0 l     O .rodata	0000000000000004              yaSSL::client
0000000000d50bb4 l     O .rodata	0000000000000004              yaSSL::server
0000000000d50bc0 l     O .rodata	0000000000000010              yaSSL::tls_client
0000000000d50bd0 l     O .rodata	0000000000000010              yaSSL::tls_server
0000000000d50be0 l     O .rodata	000000000000000e              yaSSL::master_label
0000000000d50bf0 l     O .rodata	000000000000000e              yaSSL::key_label
0000000000d50c00 l     O .rodata	0000000000000004              yaSSL::AUTO
0000000000d50c04 l     O .rodata	0000000000000004              yaSSL::INVALID_SOCKET
0000000000d50c08 l     O .rodata	0000000000000004              yaSSL::SD_RECEIVE
0000000000d50c0c l     O .rodata	0000000000000004              yaSSL::SD_SEND
0000000000d50c10 l     O .rodata	0000000000000004              yaSSL::SD_BOTH
0000000000d50c14 l     O .rodata	0000000000000004              yaSSL::SOCKET_ERROR
0000000000000000 l    df *ABS*	0000000000000000              crypto_wrapper.cpp
0000000000bca8b0 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d50c20 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d50c24 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d50c28 l     O .rodata	0000000000000004              yaSSL::ID_LEN
0000000000d50c2c l     O .rodata	0000000000000004              yaSSL::SUITE_LEN
0000000000d50c30 l     O .rodata	0000000000000004              yaSSL::SECRET_LEN
0000000000d50c34 l     O .rodata	0000000000000004              yaSSL::MASTER_ROUNDS
0000000000d50c38 l     O .rodata	0000000000000004              yaSSL::RAN_LEN
0000000000d50c3c l     O .rodata	0000000000000004              yaSSL::MAC_BLOCK_SZ
0000000000d50c40 l     O .rodata	0000000000000004              yaSSL::MD5_LEN
0000000000d50c44 l     O .rodata	0000000000000004              yaSSL::SHA_LEN
0000000000d50c48 l     O .rodata	0000000000000004              yaSSL::RMD_LEN
0000000000d50c4c l     O .rodata	0000000000000004              yaSSL::PREFIX
0000000000d50c50 l     O .rodata	0000000000000004              yaSSL::KEY_PREFIX
0000000000d50c54 l     O .rodata	0000000000000004              yaSSL::FORTEZZA_MAX
0000000000d50c58 l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_SZ
0000000000d50c5c l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_NAME
0000000000d50c60 l     O .rodata	0000000000000004              yaSSL::MAX_CIPHERS
0000000000d50c64 l     O .rodata	0000000000000004              yaSSL::SIZEOF_ENUM
0000000000d50c68 l     O .rodata	0000000000000004              yaSSL::SIZEOF_SENDER
0000000000d50c6c l     O .rodata	0000000000000004              yaSSL::PAD_MD5
0000000000d50c70 l     O .rodata	0000000000000004              yaSSL::PAD_SHA
0000000000d50c74 l     O .rodata	0000000000000004              yaSSL::PAD_RMD
0000000000d50c78 l     O .rodata	0000000000000004              yaSSL::CERT_HEADER
0000000000d50c7c l     O .rodata	0000000000000004              yaSSL::CERT_TYPES
0000000000d50c80 l     O .rodata	0000000000000004              yaSSL::REQUEST_HEADER
0000000000d50c84 l     O .rodata	0000000000000004              yaSSL::VERIFY_HEADER
0000000000d50c88 l     O .rodata	0000000000000004              yaSSL::MIN_CERT_TYPES
0000000000d50c8c l     O .rodata	0000000000000004              yaSSL::MIN_DIS_NAMES
0000000000d50c90 l     O .rodata	0000000000000004              yaSSL::MIN_DIS_SIZE
0000000000d50c94 l     O .rodata	0000000000000004              yaSSL::RECORD_HEADER
0000000000d50c98 l     O .rodata	0000000000000004              yaSSL::HANDSHAKE_HEADER
0000000000d50c9c l     O .rodata	0000000000000004              yaSSL::FINISHED_SZ
0000000000d50ca0 l     O .rodata	0000000000000004              yaSSL::TLS_FINISHED_SZ
0000000000d50ca4 l     O .rodata	0000000000000004              yaSSL::SEQ_SZ
0000000000d50ca8 l     O .rodata	0000000000000004              yaSSL::LENGTH_SZ
0000000000d50cac l     O .rodata	0000000000000004              yaSSL::VERSION_SZ
0000000000d50cb0 l     O .rodata	0000000000000004              yaSSL::DES_KEY_SZ
0000000000d50cb4 l     O .rodata	0000000000000004              yaSSL::DES_EDE_KEY_SZ
0000000000d50cb8 l     O .rodata	0000000000000004              yaSSL::DES_BLOCK
0000000000d50cbc l     O .rodata	0000000000000004              yaSSL::DES_IV_SZ
0000000000d50cc0 l     O .rodata	0000000000000004              yaSSL::RC4_KEY_SZ
0000000000d50cc4 l     O .rodata	0000000000000004              yaSSL::AES_128_KEY_SZ
0000000000d50cc8 l     O .rodata	0000000000000004              yaSSL::AES_192_KEY_SZ
0000000000d50ccc l     O .rodata	0000000000000004              yaSSL::AES_256_KEY_SZ
0000000000d50cd0 l     O .rodata	0000000000000004              yaSSL::AES_BLOCK_SZ
0000000000d50cd4 l     O .rodata	0000000000000004              yaSSL::AES_IV_SZ
0000000000d50cd8 l     O .rodata	0000000000000004              yaSSL::DSS_SIG_SZ
0000000000d50cdc l     O .rodata	0000000000000004              yaSSL::DSS_ENCODED_EXTRA
0000000000d50ce0 l     O .rodata	0000000000000004              yaSSL::EVP_SALT_SZ
0000000000d50ce4 l     O .rodata	0000000000000004              yaSSL::MASTER_LABEL_SZ
0000000000d50ce8 l     O .rodata	0000000000000004              yaSSL::KEY_LABEL_SZ
0000000000d50cec l     O .rodata	0000000000000004              yaSSL::FINISHED_LABEL_SZ
0000000000d50cf0 l     O .rodata	0000000000000004              yaSSL::SEED_LEN
0000000000d50cf4 l     O .rodata	0000000000000004              yaSSL::DEFAULT_TIMEOUT
0000000000d50cf8 l     O .rodata	0000000000000004              yaSSL::MAX_RECORD_SIZE
0000000000d50cfc l     O .rodata	0000000000000004              yaSSL::COMPRESS_EXTRA
0000000000d50d00 l     O .rodata	0000000000000004              yaSSL::SESSION_FLUSH_COUNT
0000000000d50d04 l     O .rodata	0000000000000004              yaSSL::MAX_PAD_SIZE
0000000000d50d08 l     O .rodata	0000000000000004              yaSSL::COMPRESS_CONSTANT
0000000000d50d0c l     O .rodata	0000000000000004              yaSSL::COMPRESS_UPPER
0000000000d50d10 l     O .rodata	0000000000000004              yaSSL::COMPRESS_LOWER
0000000000d50d14 l     O .rodata	0000000000000004              yaSSL::COMPRESS_DUMMY_SIZE
0000000000d50d18 l     O .rodata	0000000000000001              yaSSL::SSL_NULL_WITH_NULL_NULL
0000000000d50d19 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_MD5
0000000000d50d1a l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_SHA
0000000000d50d1b l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC4_40_MD5
0000000000d50d1c l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_MD5
0000000000d50d1d l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_SHA
0000000000d50d1e l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5
0000000000d50d1f l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_IDEA_CBC_SHA
0000000000d50d20 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d50d21 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_DES_CBC_SHA
0000000000d50d22 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d50d23 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d50d24 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_DES_CBC_SHA
0000000000d50d25 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d50d26 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d50d27 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_DES_CBC_SHA
0000000000d50d28 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d50d29 l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d50d2a l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_DES_CBC_SHA
0000000000d50d2b l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d50d2c l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d50d2d l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_DES_CBC_SHA
0000000000d50d2e l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d50d2f l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
0000000000d50d30 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_RC4_128_MD5
0000000000d50d31 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
0000000000d50d32 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_DES_CBC_SHA
0000000000d50d33 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
0000000000d50d34 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_NULL_SHA
0000000000d50d35 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA
0000000000d50d36 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_RC4_128_SHA
0000000000d50d37 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_SHA
0000000000d50d38 l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_128_CBC_SHA
0000000000d50d39 l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_128_CBC_SHA
0000000000d50d3a l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_SHA
0000000000d50d3b l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_SHA
0000000000d50d3c l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_128_CBC_SHA
0000000000d50d3d l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_SHA
0000000000d50d3e l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_256_CBC_SHA
0000000000d50d3f l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_256_CBC_SHA
0000000000d50d40 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_SHA
0000000000d50d41 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_SHA
0000000000d50d42 l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_256_CBC_SHA
0000000000d50d43 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD160
0000000000d50d44 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_RMD160
0000000000d50d45 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_RMD160
0000000000d50d46 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d50d47 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_RMD160
0000000000d50d48 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_RMD160
0000000000d50d49 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d50d4a l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_RMD160
0000000000d50d4b l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_RMD160
0000000001067480 l     O .data.rel.ro	0000000000000008              yaSSL::null_str
00000000010674a0 l     O .data.rel.ro	0000000000000400              yaSSL::cipher_names
0000000000d50ee0 l     O .rodata	0000000000000030              yaSSL::PAD1
0000000000d50f20 l     O .rodata	0000000000000030              yaSSL::PAD2
0000000000d50f50 l     O .rodata	0000000000000004              yaSSL::client
0000000000d50f54 l     O .rodata	0000000000000004              yaSSL::server
0000000000d50f60 l     O .rodata	0000000000000010              yaSSL::tls_client
0000000000d50f70 l     O .rodata	0000000000000010              yaSSL::tls_server
0000000000d50f80 l     O .rodata	000000000000000e              yaSSL::master_label
0000000000d50f90 l     O .rodata	000000000000000e              yaSSL::key_label
0000000000d50fa0 l     O .rodata	0000000000000004              yaSSL::AUTO
0000000000000000 l    df *ABS*	0000000000000000              handshake.cpp
0000000000bd0248 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d51040 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d51044 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d51048 l     O .rodata	0000000000000004              yaSSL::ID_LEN
0000000000d5104c l     O .rodata	0000000000000004              yaSSL::SUITE_LEN
0000000000d51050 l     O .rodata	0000000000000004              yaSSL::SECRET_LEN
0000000000d51054 l     O .rodata	0000000000000004              yaSSL::MASTER_ROUNDS
0000000000d51058 l     O .rodata	0000000000000004              yaSSL::RAN_LEN
0000000000d5105c l     O .rodata	0000000000000004              yaSSL::MAC_BLOCK_SZ
0000000000d51060 l     O .rodata	0000000000000004              yaSSL::MD5_LEN
0000000000d51064 l     O .rodata	0000000000000004              yaSSL::SHA_LEN
0000000000d51068 l     O .rodata	0000000000000004              yaSSL::RMD_LEN
0000000000d5106c l     O .rodata	0000000000000004              yaSSL::PREFIX
0000000000d51070 l     O .rodata	0000000000000004              yaSSL::KEY_PREFIX
0000000000d51074 l     O .rodata	0000000000000004              yaSSL::FORTEZZA_MAX
0000000000d51078 l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_SZ
0000000000d5107c l     O .rodata	0000000000000004              yaSSL::MAX_SUITE_NAME
0000000000d51080 l     O .rodata	0000000000000004              yaSSL::MAX_CIPHERS
0000000000d51084 l     O .rodata	0000000000000004              yaSSL::SIZEOF_ENUM
0000000000d51088 l     O .rodata	0000000000000004              yaSSL::SIZEOF_SENDER
0000000000d5108c l     O .rodata	0000000000000004              yaSSL::PAD_MD5
0000000000d51090 l     O .rodata	0000000000000004              yaSSL::PAD_SHA
0000000000d51094 l     O .rodata	0000000000000004              yaSSL::PAD_RMD
0000000000d51098 l     O .rodata	0000000000000004              yaSSL::CERT_HEADER
0000000000d5109c l     O .rodata	0000000000000004              yaSSL::CERT_TYPES
0000000000d510a0 l     O .rodata	0000000000000004              yaSSL::REQUEST_HEADER
0000000000d510a4 l     O .rodata	0000000000000004              yaSSL::VERIFY_HEADER
0000000000d510a8 l     O .rodata	0000000000000004              yaSSL::MIN_CERT_TYPES
0000000000d510ac l     O .rodata	0000000000000004              yaSSL::MIN_DIS_NAMES
0000000000d510b0 l     O .rodata	0000000000000004              yaSSL::MIN_DIS_SIZE
0000000000d510b4 l     O .rodata	0000000000000004              yaSSL::RECORD_HEADER
0000000000d510b8 l     O .rodata	0000000000000004              yaSSL::HANDSHAKE_HEADER
0000000000d510bc l     O .rodata	0000000000000004              yaSSL::FINISHED_SZ
0000000000d510c0 l     O .rodata	0000000000000004              yaSSL::TLS_FINISHED_SZ
0000000000d510c4 l     O .rodata	0000000000000004              yaSSL::SEQ_SZ
0000000000d510c8 l     O .rodata	0000000000000004              yaSSL::LENGTH_SZ
0000000000d510cc l     O .rodata	0000000000000004              yaSSL::VERSION_SZ
0000000000d510d0 l     O .rodata	0000000000000004              yaSSL::DES_KEY_SZ
0000000000d510d4 l     O .rodata	0000000000000004              yaSSL::DES_EDE_KEY_SZ
0000000000d510d8 l     O .rodata	0000000000000004              yaSSL::DES_BLOCK
0000000000d510dc l     O .rodata	0000000000000004              yaSSL::DES_IV_SZ
0000000000d510e0 l     O .rodata	0000000000000004              yaSSL::RC4_KEY_SZ
0000000000d510e4 l     O .rodata	0000000000000004              yaSSL::AES_128_KEY_SZ
0000000000d510e8 l     O .rodata	0000000000000004              yaSSL::AES_192_KEY_SZ
0000000000d510ec l     O .rodata	0000000000000004              yaSSL::AES_256_KEY_SZ
0000000000d510f0 l     O .rodata	0000000000000004              yaSSL::AES_BLOCK_SZ
0000000000d510f4 l     O .rodata	0000000000000004              yaSSL::AES_IV_SZ
0000000000d510f8 l     O .rodata	0000000000000004              yaSSL::DSS_SIG_SZ
0000000000d510fc l     O .rodata	0000000000000004              yaSSL::DSS_ENCODED_EXTRA
0000000000d51100 l     O .rodata	0000000000000004              yaSSL::EVP_SALT_SZ
0000000000d51104 l     O .rodata	0000000000000004              yaSSL::MASTER_LABEL_SZ
0000000000d51108 l     O .rodata	0000000000000004              yaSSL::KEY_LABEL_SZ
0000000000d5110c l     O .rodata	0000000000000004              yaSSL::FINISHED_LABEL_SZ
0000000000d51110 l     O .rodata	0000000000000004              yaSSL::SEED_LEN
0000000000d51114 l     O .rodata	0000000000000004              yaSSL::DEFAULT_TIMEOUT
0000000000d51118 l     O .rodata	0000000000000004              yaSSL::MAX_RECORD_SIZE
0000000000d5111c l     O .rodata	0000000000000004              yaSSL::COMPRESS_EXTRA
0000000000d51120 l     O .rodata	0000000000000004              yaSSL::SESSION_FLUSH_COUNT
0000000000d51124 l     O .rodata	0000000000000004              yaSSL::MAX_PAD_SIZE
0000000000d51128 l     O .rodata	0000000000000004              yaSSL::COMPRESS_CONSTANT
0000000000d5112c l     O .rodata	0000000000000004              yaSSL::COMPRESS_UPPER
0000000000d51130 l     O .rodata	0000000000000004              yaSSL::COMPRESS_LOWER
0000000000d51134 l     O .rodata	0000000000000004              yaSSL::COMPRESS_DUMMY_SIZE
0000000000d51138 l     O .rodata	0000000000000001              yaSSL::SSL_NULL_WITH_NULL_NULL
0000000000d51139 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_MD5
0000000000d5113a l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_NULL_SHA
0000000000d5113b l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC4_40_MD5
0000000000d5113c l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_MD5
0000000000d5113d l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_RC4_128_SHA
0000000000d5113e l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5
0000000000d5113f l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_IDEA_CBC_SHA
0000000000d51140 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d51141 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_DES_CBC_SHA
0000000000d51142 l     O .rodata	0000000000000001              yaSSL::SSL_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d51143 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d51144 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_DES_CBC_SHA
0000000000d51145 l     O .rodata	0000000000000001              yaSSL::SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d51146 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d51147 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_DES_CBC_SHA
0000000000d51148 l     O .rodata	0000000000000001              yaSSL::SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d51149 l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
0000000000d5114a l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_DES_CBC_SHA
0000000000d5114b l     O .rodata	0000000000000001              yaSSL::SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
0000000000d5114c l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
0000000000d5114d l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_DES_CBC_SHA
0000000000d5114e l     O .rodata	0000000000000001              yaSSL::SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
0000000000d5114f l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
0000000000d51150 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_RC4_128_MD5
0000000000d51151 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
0000000000d51152 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_DES_CBC_SHA
0000000000d51153 l     O .rodata	0000000000000001              yaSSL::SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
0000000000d51154 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_NULL_SHA
0000000000d51155 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA
0000000000d51156 l     O .rodata	0000000000000001              yaSSL::SSL_FORTEZZA_KEA_WITH_RC4_128_SHA
0000000000d51157 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_SHA
0000000000d51158 l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_128_CBC_SHA
0000000000d51159 l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_128_CBC_SHA
0000000000d5115a l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_SHA
0000000000d5115b l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_SHA
0000000000d5115c l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_128_CBC_SHA
0000000000d5115d l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_SHA
0000000000d5115e l     O .rodata	0000000000000001              yaSSL::TLS_DH_DSS_WITH_AES_256_CBC_SHA
0000000000d5115f l     O .rodata	0000000000000001              yaSSL::TLS_DH_RSA_WITH_AES_256_CBC_SHA
0000000000d51160 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_SHA
0000000000d51161 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_SHA
0000000000d51162 l     O .rodata	0000000000000001              yaSSL::TLS_DH_anon_WITH_AES_256_CBC_SHA
0000000000d51163 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD160
0000000000d51164 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_128_CBC_RMD160
0000000000d51165 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_DSS_WITH_AES_256_CBC_RMD160
0000000000d51166 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d51167 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_128_CBC_RMD160
0000000000d51168 l     O .rodata	0000000000000001              yaSSL::TLS_DHE_RSA_WITH_AES_256_CBC_RMD160
0000000000d51169 l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_3DES_EDE_CBC_RMD160
0000000000d5116a l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_128_CBC_RMD160
0000000000d5116b l     O .rodata	0000000000000001              yaSSL::TLS_RSA_WITH_AES_256_CBC_RMD160
0000000001067c20 l     O .data.rel.ro	0000000000000008              yaSSL::null_str
0000000001067c40 l     O .data.rel.ro	0000000000000400              yaSSL::cipher_names
0000000000d51300 l     O .rodata	0000000000000030              yaSSL::PAD1
0000000000d51340 l     O .rodata	0000000000000030              yaSSL::PAD2
0000000000d51370 l     O .rodata	0000000000000004              yaSSL::client
0000000000d51374 l     O .rodata	0000000000000004              yaSSL::server
0000000000d51380 l     O .rodata	0000000000000010              yaSSL::tls_client
0000000000d51390 l     O .rodata	0000000000000010              yaSSL::tls_server
0000000000d513a0 l     O .rodata	000000000000000e              yaSSL::master_label
0000000000d513b0 l     O .rodata	000000000000000e              yaSSL::key_label
0000000000d513c0 l     O .rodata	0000000000000004              yaSSL::AUTO
0000000000d513c4 l     O .rodata	0000000000000004              yaSSL::INVALID_SOCKET
0000000000d513c8 l     O .rodata	0000000000000004              yaSSL::SD_RECEIVE
0000000000d513cc l     O .rodata	0000000000000004              yaSSL::SD_SEND
0000000000d513d0 l     O .rodata	0000000000000004              yaSSL::SD_BOTH
0000000000d513d4 l     O .rodata	0000000000000004              yaSSL::SOCKET_ERROR
0000000000bd05f9 l     F .text	000000000000005a              yaSSL::(anonymous namespace)::buildOutput(yaSSL::output_buffer&, yaSSL::RecordLayerHeader const&, yaSSL::Message const&)
0000000000bd0653 l     F .text	0000000000000070              yaSSL::(anonymous namespace)::buildOutput(yaSSL::output_buffer&, yaSSL::RecordLayerHeader const&, yaSSL::HandShakeHeader const&, yaSSL::HandShakeBase const&)
0000000000bd06c3 l     F .text	000000000000008c              yaSSL::(anonymous namespace)::buildHeader(yaSSL::SSL&, yaSSL::RecordLayerHeader&, yaSSL::Message const&)
0000000000bd074f l     F .text	00000000000000ab              yaSSL::(anonymous namespace)::buildHeaders(yaSSL::SSL&, yaSSL::HandShakeHeader&, yaSSL::RecordLayerHeader&, yaSSL::HandShakeBase const&)
0000000000bd07fa l     F .text	00000000000000cb              yaSSL::(anonymous namespace)::hashHandShake(yaSSL::SSL&, yaSSL::output_buffer const&, bool)
0000000000bd08c5 l     F .text	00000000000001fd              yaSSL::(anonymous namespace)::buildMD5(yaSSL::SSL&, yaSSL::Finished&, unsigned char const*)
0000000000bd0ac2 l     F .text	00000000000001ae              yaSSL::(anonymous namespace)::buildSHA(yaSSL::SSL&, yaSSL::Finished&, unsigned char const*)
0000000000bd0c70 l     F .text	00000000000000f4              yaSSL::(anonymous namespace)::sanity_check_message(yaSSL::SSL&, unsigned int)
0000000000bd0d64 l     F .text	0000000000000197              yaSSL::(anonymous namespace)::decrypt_message(yaSSL::SSL&, yaSSL::input_buffer&, unsigned int)
0000000000bd0efb l     F .text	000000000000004a              yaSSL::(anonymous namespace)::operator<<(yaSSL::output_buffer&, yaSSL::input_buffer const&)
0000000000bd0f45 l     F .text	0000000000000549              yaSSL::(anonymous namespace)::cipherFinished(yaSSL::SSL&, yaSSL::Finished&, yaSSL::output_buffer&)
0000000000bd148e l     F .text	000000000000050d              yaSSL::(anonymous namespace)::buildMessage(yaSSL::SSL&, yaSSL::output_buffer&, yaSSL::Message const&)
0000000000bd199b l     F .text	00000000000000ac              yaSSL::(anonymous namespace)::buildAlert(yaSSL::SSL&, yaSSL::output_buffer&, yaSSL::Alert const&)
0000000000bd1a47 l     F .text	0000000000000125              yaSSL::(anonymous namespace)::buildFinishedTLS(yaSSL::SSL&, yaSSL::Finished&, unsigned char const*)
0000000000bd1b6c l     F .text	00000000000002fb              yaSSL::(anonymous namespace)::p_hash(yaSSL::output_buffer&, yaSSL::output_buffer const&, yaSSL::output_buffer const&, yaSSL::MACAlgorithm)
0000000000bd1e67 l     F .text	0000000000000072              yaSSL::(anonymous namespace)::get_xor(unsigned char*, unsigned int, yaSSL::output_buffer&, yaSSL::output_buffer&)
0000000000bd1ed9 l     F .text	00000000000001b7              yaSSL::(anonymous namespace)::buildMD5_CertVerify(yaSSL::SSL&, unsigned char*)
0000000000bd2090 l     F .text	0000000000000165              yaSSL::(anonymous namespace)::buildSHA_CertVerify(yaSSL::SSL&, unsigned char*)
0000000000000000 l    df *ABS*	0000000000000000              lock.cpp
0000000000bd54ba l     F .text	000000000000000b              __cxa_pure_virtual
0000000000000000 l    df *ABS*	0000000000000000              log.cpp
0000000000bd554e l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d513d8 l     O .rodata	0000000000000004              yaSSL::INVALID_SOCKET
0000000000d513dc l     O .rodata	0000000000000004              yaSSL::SD_RECEIVE
0000000000d513e0 l     O .rodata	0000000000000004              yaSSL::SD_SEND
0000000000d513e4 l     O .rodata	0000000000000004              yaSSL::SD_BOTH
0000000000d513e8 l     O .rodata	0000000000000004              yaSSL::SOCKET_ERROR
0000000000000000 l    df *ABS*	0000000000000000              socket_wrapper.cpp
0000000000bd55ae l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d513ec l     O .rodata	0000000000000004              yaSSL::INVALID_SOCKET
0000000000d513f0 l     O .rodata	0000000000000004              yaSSL::SD_RECEIVE
0000000000d513f4 l     O .rodata	0000000000000004              yaSSL::SD_SEND
0000000000d513f8 l     O .rodata	0000000000000004              yaSSL::SD_BOTH
0000000000d513fc l     O .rodata	0000000000000004              yaSSL::SOCKET_ERROR
0000000000d51400 l     O .rodata	0000000000000004              SOCKET_EINVAL
0000000000d51404 l     O .rodata	0000000000000004              SOCKET_EWOULDBLOCK
0000000000d51408 l     O .rodata	0000000000000004              SOCKET_EAGAIN
0000000000000000 l    df *ABS*	0000000000000000              timer.cpp
0000000000bd58c9 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000000000 l    df *ABS*	0000000000000000              aes.cpp
0000000000bd597e l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d51420 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d51424 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              aestables.cpp
0000000000bd7bf8 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d53d40 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d53d44 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              arc4.cpp
0000000000bd7c04 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d53d88 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d53d8c l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000bd7ceb l     F .text	00000000000000aa              TaoCrypt::(anonymous namespace)::MakeByte(unsigned int&, unsigned int&, unsigned char*)
0000000000000000 l    df *ABS*	0000000000000000              asn.cpp
0000000000bd7ebe l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d53d90 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d53d94 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000bd7ec9 l     F .text	00000000000001c1              TaoCrypt::(anonymous namespace)::operator>(tm&, tm&)
0000000000bd808a l     F .text	0000000000000025              TaoCrypt::(anonymous namespace)::operator<(tm&, tm&)
0000000000bd80af l     F .text	0000000000000012              TaoCrypt::(anonymous namespace)::btoi(unsigned char)
0000000000bd80c1 l     F .text	0000000000000092              TaoCrypt::(anonymous namespace)::GetTime(int&, unsigned char const*, int&)
0000000000bd8153 l     F .text	0000000000000214              TaoCrypt::(anonymous namespace)::ValidateDate(unsigned char const*, unsigned char, TaoCrypt::CertDecoder::DateType)
0000000000d53dec l     O .rodata	0000000000000007              TaoCrypt::DER_Encoder::SetAlgoID(TaoCrypt::HashType, unsigned char*)::shaAlgoID
0000000000d53df8 l     O .rodata	000000000000000b              TaoCrypt::DER_Encoder::SetAlgoID(TaoCrypt::HashType, unsigned char*)::sha256AlgoID
0000000000d53e08 l     O .rodata	000000000000000b              TaoCrypt::DER_Encoder::SetAlgoID(TaoCrypt::HashType, unsigned char*)::sha384AlgoID
0000000000d53e18 l     O .rodata	000000000000000b              TaoCrypt::DER_Encoder::SetAlgoID(TaoCrypt::HashType, unsigned char*)::sha512AlgoID
0000000000d53e28 l     O .rodata	000000000000000a              TaoCrypt::DER_Encoder::SetAlgoID(TaoCrypt::HashType, unsigned char*)::md2AlgoID
0000000000d53e38 l     O .rodata	000000000000000a              TaoCrypt::DER_Encoder::SetAlgoID(TaoCrypt::HashType, unsigned char*)::md5AlgoID
0000000000000000 l    df *ABS*	0000000000000000              coding.cpp
0000000000bdc92c l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d53e60 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d53e64 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d53e68 l     O .rodata	0000000000000001              TaoCrypt::(anonymous namespace)::bad
0000000000d53e70 l     O .rodata	0000000000000010              TaoCrypt::(anonymous namespace)::hexEncode
0000000000d53e80 l     O .rodata	0000000000000017              TaoCrypt::(anonymous namespace)::hexDecode
0000000000d53ea0 l     O .rodata	0000000000000040              TaoCrypt::(anonymous namespace)::base64Encode
0000000000d53ee0 l     O .rodata	0000000000000050              TaoCrypt::(anonymous namespace)::base64Decode
0000000000d53f30 l     O .rodata	0000000000000001              TaoCrypt::(anonymous namespace)::pad
0000000000d53f34 l     O .rodata	0000000000000004              TaoCrypt::(anonymous namespace)::pemLineSz
0000000000000000 l    df *ABS*	0000000000000000              des.cpp
0000000000bdd24c l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d53f40 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d53f44 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d53f60 l     O .rodata	0000000000000038              TaoCrypt::pc1
0000000000d53fa0 l     O .rodata	0000000000000010              TaoCrypt::totrot
0000000000d53fc0 l     O .rodata	0000000000000030              TaoCrypt::pc2
0000000000d54000 l     O .rodata	0000000000000020              TaoCrypt::bytebit
0000000000d54020 l     O .rodata	0000000000000800              TaoCrypt::Spbox
0000000000bdd617 l     F .text	0000000000000180              TaoCrypt::IPERM(unsigned int&, unsigned int&)
0000000000bdd797 l     F .text	0000000000000180              TaoCrypt::FPERM(unsigned int&, unsigned int&)
0000000000000000 l    df *ABS*	0000000000000000              dh.cpp
0000000000bde15e l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54820 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54824 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000bde169 l     F .text	00000000000000cb              TaoCrypt::(anonymous namespace)::DiscreteLogWorkFactor(unsigned int)
0000000000000000 l    df *ABS*	0000000000000000              dsa.cpp
0000000000bde712 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54848 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d5484c l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              file.cpp
0000000000bdfd90 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54850 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54854 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              hash.cpp
0000000000be00e8 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54860 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54864 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              integer.cpp
0000000000be0c94 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54880 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54884 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d548a0 l     O .rodata	0000000000000024              TaoCrypt::RoundupSizeTable
0000000000be0c9f l     F .text	000000000000006c              TaoCrypt::RoundupSize(unsigned int)
0000000000be0d0b l     F .text	0000000000000094              TaoCrypt::Compare(unsigned long const*, unsigned long const*, unsigned int)
0000000000be0d9f l     F .text	000000000000008c              TaoCrypt::Increment(unsigned long*, unsigned int, unsigned long)
0000000000be0e2b l     F .text	0000000000000089              TaoCrypt::Decrement(unsigned long*, unsigned int, unsigned long)
0000000000be0eb4 l     F .text	000000000000006a              TaoCrypt::TwosComplement(unsigned long*, unsigned int)
0000000000be0f1e l     F .text	00000000000000c5              TaoCrypt::LinearMultiply(unsigned long*, unsigned long const*, unsigned long, unsigned int)
0000000000be0fe3 l     F .text	0000000000000048              TaoCrypt::AtomicInverseModPower2(unsigned long)
0000000000be82c0 l     F .text	000000000000005a              TaoCrypt::EvenWordCount(unsigned long const*, unsigned int)
00000000013940b8 l     O .bss	0000000000000008              TaoCrypt::zero
00000000013940c0 l     O .bss	0000000000000008              TaoCrypt::one
0000000000bea9ef l     F .text	0000000000000185              TaoCrypt::AtomicDivide(unsigned long*, unsigned long const*, unsigned long const*)
0000000000beab74 l     F .text	00000000000002b3              TaoCrypt::CorrectQuotientEstimate(unsigned long*, unsigned long*, unsigned long*, unsigned long const*, unsigned int)
0000000000000000 l    df *ABS*	0000000000000000              md2.cpp
0000000000bf0bae l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d548e0 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d548e4 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d54900 l     O .rodata	0000000000000100              TaoCrypt::MD2::Update(unsigned char const*, unsigned int)::S
0000000000000000 l    df *ABS*	0000000000000000              md4.cpp
0000000000bf1220 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54a00 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54a04 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              md5.cpp
0000000000bf1e54 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54a08 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54a0c l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              misc.cpp
0000000000bf2eeb l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54a10 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54a14 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              random.cpp
0000000000bf316c l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54a18 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54a1c l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              ripemd.cpp
0000000000bf33e0 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54a3c l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54a40 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              rsa.cpp
0000000000bf7334 l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54a44 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54a48 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              sha.cpp
0000000000bf7d1c l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54a60 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54a64 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000d54a80 l     O .rodata	0000000000000100              TaoCrypt::K256
0000000000bfa720 l     F .text	0000000000001a54              TaoCrypt::Transform256(unsigned int*, unsigned int*)
0000000000d54b80 l     O .rodata	0000000000000280              TaoCrypt::K512
0000000000bfc1c8 l     F .text	000000000000226b              TaoCrypt::Transform512(unsigned long*, unsigned long*)
0000000000000000 l    df *ABS*	0000000000000000              algebra.cpp
0000000000bfe5fa l     F .text	000000000000000b              __cxa_pure_virtual
0000000000d54e00 l     O .rodata	0000000000000004              TaoCrypt::WORD_SIZE
0000000000d54e04 l     O .rodata	0000000000000004              TaoCrypt::WORD_BITS
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000e5b2d0 l     O .eh_frame	0000000000000000              __FRAME_END__
000000000105c358 l     O .jcr	0000000000000000              __JCR_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000bdc194 l     F .text	0000000000000023              TaoCrypt::Source::grow(unsigned int)
0000000000ad8f07 l     F .text	00000000000001e1              sym_tab_add_int_lit
0000000000bc7516 l     F .text	0000000000000046              mySTL::list<yaSSL::SSL_SESSION*>::end() const
0000000000bcb23e l     F .text	00000000000000a2              yaSSL::HMAC_SHA::HMAC_SHA(unsigned char const*, unsigned int)
0000000000bbda2a l     F .text	000000000000000f              yaSSL::ServerKeyBase::build(yaSSL::SSL&)
0000000000a88994 l     F .text	0000000000000022              dict_mutex_enter_for_mysql
0000000000bea302 l     F .text	000000000000007a              TaoCrypt::Integer::Compare(TaoCrypt::Integer const&) const
0000000000bca32a l     F .text	0000000000000011              TaoCrypt::PublicKey::size() const
0000000000bba86c l     F .text	0000000000000187              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::ClientHello const&)
0000000000a89709 l     F .text	0000000000000177              dict_table_add_system_columns
0000000000bce2a0 l     F .text	000000000000001b              yaSSL::HMAC_SHA::HMAC_SHAImpl::HMAC_SHAImpl()
0000000000a17ff9 l     F .text	0000000000000056              trx_sys_file_format_id_to_name
00000000009ca833 l     F .text	000000000000038f              row_mysql_drop_temp_tables
00000000010f6198 l     O .data	0000000000000008              fil_path_to_mysql_datadir
0000000000bc4398 l     F .text	0000000000000014              yaSSL::SSL::useSocket()
00000000009965e2 l     F .text	0000000000000072              ha_innobase::ha_innobase(handlerton*, TABLE_SHARE*)
0000000000bcca88 l     F .text	000000000000001e              yaSSL::DiffieHellman::~DiffieHellman()
0000000000bdb06c l     F .text	0000000000000146              TaoCrypt::CertDecoder::ValidateSignature(mySTL::list<TaoCrypt::Signer*>*)
0000000000bf1fee l     F .text	00000000000000a2              TaoCrypt::MD5::Swap(TaoCrypt::MD5&)
000000000138e870 l     O .bss	0000000000000008              srv_truncated_status_writes
0000000000bc656e l     F .text	0000000000000016              yaSSL::DeCompress(yaSSL::input_buffer&, int, yaSSL::input_buffer&)
0000000000bee2a6 l     F .text	000000000000001a              TaoCrypt::Integer::IsZero() const
0000000000a7d8a6 l     F .text	0000000000000bee              dict_boot
0000000000bea46a l     F .text	000000000000005d              TaoCrypt::Integer::GetBits(unsigned int, unsigned int) const
0000000000995d1b l     F .text	00000000000000d6              innobase_mysql_tmpfile
0000000000999838 l     F .text	00000000000008ca              ha_innobase::open(char const*, int, unsigned int)
0000000000bc5006 l     F .text	00000000000000d5              yaSSL::Errors::Remove()
0000000000b38b20 l     F .text	00000000000002a6              rec_copy_prefix_to_dtuple
0000000000bd5442 l     F .text	0000000000000012              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::end() const
0000000000bbfa68 l     F .text	000000000000000b              void mySTL::destroy<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >(mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*)
0000000000bef242 l     F .text	000000000000000b              TaoCrypt::DWord::DWord()
0000000000adf43a l     F .text	0000000000000054              lock_rec_find_set_bit
0000000000bffd62 l     F .text	0000000000000030              void mySTL::destroy<TaoCrypt::WindowSlider*>(TaoCrypt::WindowSlider*, TaoCrypt::WindowSlider*)
0000000000bc8600 l     F .text	000000000000002e              mySTL::vector_base<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::vector_base()
0000000001396e68 l     O .bss	0000000000000008              pars_sym_tab_global
0000000000bb134d l     F .text	0000000000000080              yaTLSv1_client_method
0000000000a88936 l     F .text	000000000000005e              dict_get_db_name_len
0000000000a1e37d l     F .text	0000000000000309              trx_prepare_off_kernel
0000000000bc7260 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::output_buffer>::auto_ptr(yaSSL::output_buffer*)
0000000000af9549 l     F .text	0000000000000038              mem_heap_free_block_free
0000000000bd90fa l     F .text	0000000000000176              TaoCrypt::RSA_Public_Decoder::ReadHeaderOpenSSL()
0000000000a54a42 l     F .text	0000000000000103              btr_search_disable
0000000000bce967 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::DES::DESImpl>(yaSSL::DES::DESImpl*)
0000000000a30dc2 l     F .text	00000000000000c7              btr_free_root
0000000000bc52ca l     F .text	0000000000000011              yaSSL::SSL_METHOD::getSide() const
0000000000bf1284 l     F .text	00000000000000a3              TaoCrypt::MD4::MD4(TaoCrypt::MD4 const&)
0000000000a7274b l     F .text	0000000000000344              buf_unzip_LRU_add_block
0000000000a8c3b0 l     F .text	00000000000006dc              dict_index_add_to_cache
0000000000bea74e l     F .text	000000000000011f              TaoCrypt::Integer::Plus(TaoCrypt::Integer const&) const
0000000000bb9dc7 l     F .text	0000000000000126              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::ServerHello&)
0000000001396ce0 l     O .bss	0000000000000008              dict_ind_compact
0000000000bdeae6 l     F .text	0000000000000042              TaoCrypt::DSA_PrivateKey::DSA_PrivateKey(TaoCrypt::Source&)
0000000000bfe8d0 l     F .text	00000000000001c6              TaoCrypt::AbstractEuclideanDomain::Gcd(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bbdaf4 l     F .text	0000000000000029              yaSSL::ServerKeyBase::ServerKeyBase()
0000000000b513bb l     F .text	00000000000000dd              exit_step
0000000000bee938 l     F .text	0000000000000077              TaoCrypt::EuclideanDomainOf::Double(TaoCrypt::Integer const&) const
000000000136cb38 l     O .data	0000000000000008              TaoCrypt::AES::Te1
000000000099f08d l     F .text	0000000000000075              get_row_format_name(row_type)
0000000000af6258 l     F .text	00000000000005a6              recv_scan_log_recs
0000000000bc03e0 l     F .text	0000000000000018              yaSSL::States::SetError(yaSSL::YasslError)
0000000000b02b82 l     F .text	00000000000002ad              os_file_set_size
0000000000a4e3de l     F .text	00000000000000ae              btr_pcur_reset
0000000000bbda3a l     F .text	0000000000000013              yaSSL::ServerKeyBase::read(yaSSL::SSL&, yaSSL::input_buffer&)
0000000000bbd92d l     F .text	000000000000001b              mySTL::FreeMemory(void*)
0000000000bbf284 l     F .text	0000000000000039              void mySTL::construct<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>, mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >(mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*, mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> const&)
0000000000afd6e1 l     F .text	00000000000000db              mlog_parse_initial_log_record
0000000000bbf9b5 l     F .text	0000000000000023              void mySTL::FreeArrayMemory<mySTL::pair<int, yaSSL::Message* (*)()> >(mySTL::pair<int, yaSSL::Message* (*)()>*)
0000000001396fa0 l     O .bss	0000000000000004              page_zip_compress_log
0000000000be17b2 l     F .text	00000000000000c3              TaoCrypt::Portable::Multiply2Bottom(unsigned long*, unsigned long const*, unsigned long const*)
0000000000bcb8e2 l     F .text	000000000000003a              yaSSL::DES_EDE::set_encryptKey(unsigned char const*, unsigned char const*)
0000000000bb9d18 l     F .text	0000000000000048              yaSSL::ServerDHParams::alloc_g(int)
0000000001396e54 l     O .bss	0000000000000004              ibuf_bitmap_mutex_key
0000000000bceb64 l     F .text	000000000000001b              yaSSL::RMD::RMDImpl::~RMDImpl()
0000000000bbd9a8 l     F .text	0000000000000029              yaSSL::HandShakeHeader::HandShakeHeader()
00000000013940c8 l     O .bss	0000000000000001              TaoCrypt::tc
000000000099dc0a l     F .text	00000000000001da              ha_innobase::general_fetch(unsigned char*, unsigned int, unsigned int)
00000000010f5f30 l     O .data	0000000000000008              srv_lock_table_size
0000000000aabede l     F .text	00000000000000b7              fil_space_get_n_reserved_extents
0000000000bde796 l     F .text	0000000000000077              TaoCrypt::DSA_PublicKey::DSA_PublicKey(TaoCrypt::DSA_PublicKey const&)
0000000000aa7e73 l     F .text	00000000000000b4              fil_inc_pending_ops
0000000000bee72e l     F .text	0000000000000029              TaoCrypt::EuclideanDomainOf::Equal(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bc652a l     F .text	000000000000001f              yaSSL::StringHolder::~StringHolder()
0000000000bbd9d2 l     F .text	0000000000000031              yaSSL::ServerKeyBase::~ServerKeyBase()
0000000000bc41a2 l     F .text	00000000000000d3              yaSSL::SSL::set_session(yaSSL::SSL_SESSION*)
0000000000ae5472 l     F .text	00000000000001c7              lock_release_off_kernel
0000000000a9414e l     F .text	00000000000001bb              dict_close
000000000138e6c8 l     O .bss	0000000000000008              srv_monitor_active
0000000000a6bbe6 l     F .text	00000000000002c0              buf_flush_page_try
0000000000bc94ee l     F .text	0000000000000016              yaSSL::CertManager::setVerifyNone()
0000000000a9e53d l     F .text	00000000000001ef              dict_mem_table_add_col
0000000000bc75b4 l     F .text	0000000000000022              mySTL::list<yaSSL::SSL_SESSION*>::iterator::operator!=(mySTL::list<yaSSL::SSL_SESSION*>::iterator const&) const
0000000000bbfad5 l     F .text	0000000000000023              void mySTL::FreeArrayMemory<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >(mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*)
0000000000bcf064 l     F .text	0000000000000063              TaoCrypt::HMAC<TaoCrypt::RIPEMD160>::HMAC()
0000000000aaa62f l     F .text	00000000000003ed              fil_open_single_table_tablespace
0000000000bcd6ce l     F .text	0000000000000070              TaoCrypt::Mode_BASE::Mode_BASE(int, TaoCrypt::CipherDir, TaoCrypt::Mode)
0000000000bbfc8e l     F .text	000000000000003d              yaSSL::ServerHello::~ServerHello()
0000000000bdfc06 l     F .text	000000000000007b              TaoCrypt::ModularArithmetic::ModularArithmetic(TaoCrypt::Integer const&)
0000000000bef5ae l     F .text	000000000000000b              TaoCrypt::Word::Word()
0000000000ad5331 l     F .text	0000000000000026              pars_func
0000000000b02555 l     F .text	00000000000000c5              os_file_set_nocache
0000000000c00a14 l     F .text	000000000000005c              mySTL::vector_base<TaoCrypt::Integer>::Swap(mySTL::vector_base<TaoCrypt::Integer>&)
0000000000bc393a l     F .text	0000000000000063              yaSSL::SSL::get_SEQIncrement(bool)
00000000009e5405 l     F .text	00000000000001e1              row_upd_index_parse
0000000000af4f09 l     F .text	00000000000005ff              recv_apply_hashed_log_recs
000000000099b7c0 l     F .text	000000000000012a              ha_innobase::innobase_lock_autoinc()
0000000000bca3c0 l     F .text	0000000000000011              TaoCrypt::CertDecoder::GetSubjectCnStart() const
0000000000bdae4a l     F .text	0000000000000090              TaoCrypt::CertDecoder::ValidateSelfSignature()
0000000000bbee6a l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::capacity() const
00000000009a9806 l     F .text	000000000000006f              innobase_rec_reset
0000000000bbe848 l     F .text	0000000000000083              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::reserve(unsigned long)
0000000000bdddaa l     F .text	000000000000012e              TaoCrypt::DES_EDE2::ProcessAndXorBlock(unsigned char const*, unsigned char const*, unsigned char*) const
0000000000bcaff2 l     F .text	000000000000002d              yaSSL::RMD::get_digest(unsigned char*)
0000000000b4ce4d l     F .text	0000000000000041              rbt_validate
0000000000bd555a l     F .text	000000000000000f              yaSSL::Log::Log(char const*)
0000000000bee2c0 l     F .text	000000000000001d              TaoCrypt::Integer::NotZero() const
0000000000a890b1 l     F .text	000000000000002a              dict_index_get_nth_col_pos
0000000000bc683c l     F .text	000000000000003b              yaSSL::sslHashes::sslHashes()
0000000000ade60e l     F .text	00000000000000b1              lock_sec_rec_cons_read_sees
0000000000a36428 l     F .text	000000000000055d              btr_index_rec_validate
0000000000bce050 l     F .text	000000000000003d              TaoCrypt::DH::Initialize(TaoCrypt::Integer&, TaoCrypt::Integer&)
0000000000ae8fb4 l     F .text	000000000000001a              lock_get_type
0000000001396508 l     O .bss	0000000000000004              srv_master_thread_key
0000000000aa0400 l     F .text	0000000000000114              eval_node_alloc_val_buf
0000000000bbcf1f l     F .text	000000000000005a              yaSSL::CreateHandShake()
00000000010f6214 l     O .data	0000000000000004              pars_binary_token
0000000000bbe5be l     F .text	000000000000001a              mySTL::list<unsigned char*>::iterator::iterator(mySTL::list<unsigned char*>::node*)
0000000000bc7f46 l     F .text	000000000000001a              mySTL::list<yaSSL::output_buffer*>::iterator::iterator(mySTL::list<yaSSL::output_buffer*>::node*)
0000000000bcaf90 l     F .text	000000000000000f              yaSSL::RMD::get_padSize() const
0000000000bcf39a l     F .text	0000000000000049              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES, (TaoCrypt::Mode)1>::SetKey(unsigned char const*, unsigned int, unsigned char const*)
000000000099cf14 l     F .text	0000000000000079              ha_innobase::index_end()
0000000000a1db5a l     F .text	00000000000000a6              trx_commit_for_mysql
0000000000bb2f1e l     F .text	000000000000000d              yaEVP_des_ede3_cbc
0000000000bcf6b8 l     F .text	0000000000000031              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::AES, (TaoCrypt::Mode)1>::Process(unsigned char*, unsigned char const*, unsigned int)
0000000000a43273 l     F .text	0000000000000455              btr_cur_pessimistic_insert
0000000000beefe2 l     F .text	000000000000005d              TaoCrypt::ModularArithmetic::Divide(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000af9106 l     F .text	000000000000021e              mem_heap_add_block
00000000013966cc l     O .bss	0000000000000004              purge_sys_bh_mutex_key
000000000138e7f0 l     O .bss	0000000000000008              srv_fast_shutdown
0000000000bbb07c l     F .text	000000000000005d              yaSSL::ClientHello::ClientHello()
0000000000be0192 l     F .text	000000000000014c              TaoCrypt::HASHwithTransform::Update(unsigned char const*, unsigned int)
0000000000bc6aba l     F .text	000000000000005b              yaSSL::yassl_int_cpp_local1::SumBuffer mySTL::for_each<mySTL::list<yaSSL::output_buffer*>::iterator, yaSSL::yassl_int_cpp_local1::SumBuffer>(mySTL::list<yaSSL::output_buffer*>::iterator, mySTL::list<yaSSL::output_buffer*>::iterator, yaSSL::yassl_int_cpp_local1::SumBuffer)
00000000009d9a81 l     F .text	00000000000001ab              fetch_step
0000000000c005e8 l     F .text	00000000000000a7              TaoCrypt::WindowSlider::WindowSlider(TaoCrypt::WindowSlider const&)
0000000000aabcf6 l     F .text	00000000000000f1              fil_space_reserve_free_extents
000000000099d714 l     F .text	000000000000048e              ha_innobase::change_active_index(unsigned int)
0000000000a2794a l     F .text	000000000000007b              ut_print_filename
0000000000bf1eb8 l     F .text	00000000000000a3              TaoCrypt::MD5::MD5(TaoCrypt::MD5 const&)
0000000000bee4e0 l     F .text	0000000000000050              TaoCrypt::Integer::Squared() const
0000000000bf1dd0 l     F .text	000000000000000f              TaoCrypt::MD4::getDigestSize() const
0000000000bbf4d8 l     F .text	000000000000001e              mySTL::vector_base<mySTL::pair<int, yaSSL::Message* (*)()> >::~vector_base()
0000000001396e90 l     O .bss	0000000000000008              recv_max_page_lsn
0000000000bc6a5f l     F .text	000000000000005b              yaSSL::yassl_int_cpp_local1::SumData mySTL::for_each<mySTL::list<yaSSL::input_buffer*>::iterator, yaSSL::yassl_int_cpp_local1::SumData>(mySTL::list<yaSSL::input_buffer*>::iterator, mySTL::list<yaSSL::input_buffer*>::iterator, yaSSL::yassl_int_cpp_local1::SumData)
0000000000a16c0e l     F .text	0000000000000523              trx_sys_doublewrite_init_or_restore_pages
0000000000bce154 l     F .text	000000000000001b              yaSSL::MD5::MD5Impl::MD5Impl()
0000000000beec52 l     F .text	0000000000000037              TaoCrypt::EuclideanDomainOf::DivisionAlgorithm(TaoCrypt::Integer&, TaoCrypt::Integer&, TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bf0bba l     F .text	0000000000000074              TaoCrypt::MD2::MD2()
0000000001396540 l     O .bss	0000000000000018              rw_lock_list
0000000000beb458 l     F .text	00000000000000ff              TaoCrypt::Integer::Divide(TaoCrypt::Integer&, TaoCrypt::Integer&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bbe51c l     F .text	0000000000000012              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::end() const
0000000000bbdb72 l     F .text	0000000000000029              yaSSL::RSA_Server::RSA_Server()
0000000000bc7dc5 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::Sessions>(yaSSL::Sessions*)
0000000000a270f0 l     F .text	00000000000002c5              ut_find_prime
00000000010f61d4 l     O .data	0000000000000004              pars_to_number_token
0000000000aa7f27 l     F .text	000000000000008d              fil_decr_pending_ops
0000000000bd9668 l     F .text	000000000000005d              TaoCrypt::CertDecoder::~CertDecoder()
0000000000bec550 l     F .text	00000000000000dd              TaoCrypt::Integer::InverseMod(unsigned long) const
0000000000bb353b l     F .text	0000000000000007              yaEVP_cleanup
0000000000bcc48e l     F .text	000000000000001a              yaSSL::RSA::get_signatureLength() const
0000000000bf1db0 l     F .text	000000000000000f              TaoCrypt::MD4::getByteOrder() const
0000000000bbfc2a l     F .text	000000000000003d              yaSSL::ServerHelloDone::~ServerHelloDone()
0000000000bdc83e l     F .text	0000000000000026              TaoCrypt::DSA_Private_Decoder::~DSA_Private_Decoder()
0000000000bb8028 l     F .text	000000000000001e              yaSSL::HandShakeHeader::get_length() const
0000000000bb9cc0 l     F .text	0000000000000012              yaSSL::ServerDHParams::get_pub() const
0000000000afe05f l     F .text	00000000000003f7              mlog_open_and_write_index
0000000000bd46cc l     F .text	0000000000000183              yaSSL::receiveData(yaSSL::SSL&, yaSSL::Data&, bool)
0000000000ab743c l     F .text	00000000000010ff              fsp_validate
0000000000bc5fe0 l     F .text	0000000000000026              yaSSL::Buffers::TakeRawInput()
0000000000a25ee5 l     F .text	00000000000000b0              sess_open
00000000009a1d64 l     F .text	0000000000000027              ha_innobase::info(unsigned int)
0000000000bd4e51 l     F .text	00000000000001c9              yaSSL::sendCertificateRequest(yaSSL::SSL&, yaSSL::BufferOutput)
0000000000a26f6d l     F .text	0000000000000183              ut_strreplace
0000000000b51226 l     F .text	0000000000000195              for_step
0000000000b036a1 l     F .text	000000000000017e              os_file_get_status
0000000000a82dbb l     F .text	00000000000004b8              dict_truncate_index_tree
0000000001068160 l     O .data.rel.ro	0000000000000020              vtable for TaoCrypt::Signature_Encoder
00000000009e5e84 l     F .text	000000000000013f              row_upd_index_replace_new_col_vals_index_pos
00000000009d9f56 l     F .text	0000000000000589              row_sel_convert_mysql_key_to_innobase
0000000000acf7b3 l     F .text	00000000000000e8              ibuf_is_empty
0000000000bf3450 l     F .text	00000000000000a5              TaoCrypt::RIPEMD160::RIPEMD160(TaoCrypt::RIPEMD160 const&)
0000000000bf0b14 l     F .text	0000000000000026              TaoCrypt::MontgomeryRepresentation::~MontgomeryRepresentation()
0000000000bb3c41 l     F .text	000000000000000f              yaSSL_want_write
0000000000a660ab l     F .text	000000000000009e              buf_get_modified_ratio_pct
0000000000bf0b3a l     F .text	000000000000004d              TaoCrypt::EuclideanDomainOf::~EuclideanDomainOf()
0000000000bbdb48 l     F .text	0000000000000029              yaSSL::HelloRequest::HelloRequest()
0000000000aebcf1 l     F .text	00000000000000fd              log_calc_where_lsn_is
0000000000bc533c l     F .text	0000000000000012              yaSSL::SSL_METHOD::failNoCert() const
0000000000bce21e l     F .text	0000000000000026              yaSSL::RMD::RMDImpl::RMDImpl(TaoCrypt::RIPEMD160 const&)
0000000000a2386d l     F .text	0000000000000293              trx_undo_lists_init
0000000000bce784 l     F .text	000000000000001b              TaoCrypt::Base64Decoder::~Base64Decoder()
0000000000bce907 l     F .text	0000000000000024              void yaSSL::ysDelete<yaSSL::RC4::RC4Impl>(yaSSL::RC4::RC4Impl*)
0000000000bb47ee l     F .text	0000000000000038              TaoCrypt::AllocatorWithCleanup<unsigned char>::deallocate(void*, unsigned long)
0000000000ac7117 l     F .text	0000000000000020              ibuf_reset_free_bits
00000000009c8bed l     F .text	000000000000042c              row_import_tablespace_for_mysql
00000000009ef57b l     F .text	000000000000002a              srv_general_init
00000000010f5fd0 l     O .data	0000000000000008              srv_priority_boost
0000000000bbdf08 l     F .text	0000000000000026              unsigned short yaSSL::min<unsigned short>(unsigned short, unsigned short)
0000000000a6d66b l     F .text	0000000000000046              buf_flush_free_margins
0000000000bc0374 l     F .text	0000000000000012              yaSSL::States::useHandShake()
0000000000bbeaf0 l     F .text	00000000000000dc              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::push_back(mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> const&)
00000000009c6faa l     F .text	0000000000000483              row_unlock_for_mysql
0000000000bc79c4 l     F .text	000000000000004f              mySTL::list<yaSSL::x509*>::~list()
0000000000a98375 l     F .text	0000000000000252              dict_print
0000000000bc51de l     F .text	000000000000008a              yaSSL::Errors::Add(int)
0000000000a26e8e l     F .text	0000000000000075              ut_strlcpy_rev
0000000000bcba4c l     F .text	000000000000004d              yaSSL::RC4::~RC4()
0000000000bbf706 l     F .text	0000000000000052              mySTL::vector_base<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::vector_base(unsigned long)
0000000000bc6d2a l     F .text	000000000000002c              yaSSL::Factory<yaSSL::HandShakeBase, int, yaSSL::HandShakeBase* (*)()>::Factory(void (*)(yaSSL::Factory<yaSSL::HandShakeBase, int, yaSSL::HandShakeBase* (*)()>&))
00000000010cc9c8 l     O .data.rel.ro	0000000000000060              vtable for TaoCrypt::SHA512
000000000138e890 l     O .bss	0000000000000008              srv_print_innodb_table_monitor
0000000000a65c54 l     F .text	0000000000000384              buf_get_latched_pages_number_instance
0000000000ab7194 l     F .text	00000000000000c2              fseg_validate
0000000000bef969 l     F .text	0000000000000030              TaoCrypt::Add(unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
0000000000bc9340 l     F .text	0000000000000140              yaSSL::CertManager::~CertManager()
0000000000bc05f4 l     F .text	0000000000000012              yaSSL::sslFactory::getServerKey() const
0000000000a2753a l     F .text	0000000000000071              ut_time_ms
0000000000bb2693 l     F .text	0000000000000035              yaSSL_CTX_set_tmp_dh
00000000009bea2d l     F .text	00000000000003f1              row_merge_rename_tables
00000000013939b8 l     O .bss	0000000000000008              os_event_count
0000000000bee9b0 l     F .text	0000000000000013              TaoCrypt::EuclideanDomainOf::MultiplicativeIdentity() const
0000000000a035ee l     F .text	00000000000001d8              trx_purge_sys_close
00000000009f9174 l     F .text	000000000000029e              sync_array_print_long_waits
0000000000a2fb0e l     F .text	0000000000000077              btr_page_alloc
0000000000bf2090 l     F .text	0000000000000e1c              TaoCrypt::MD5::Transform()
0000000000bbee90 l     F .text	000000000000006d              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::vector(unsigned long, mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> > const&)
0000000000a77f00 l     F .text	0000000000000124              buf_read_page
0000000000bf7ce4 l     F .text	0000000000000038              TaoCrypt::RSA_Public_Decoder::RSA_Public_Decoder(TaoCrypt::Source&)
00000000009e4c65 l     F .text	00000000000000ec              row_upd_index_entry_sys_field
0000000000bbf92a l     F .text	000000000000005c              mySTL::vector_base<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::Swap(mySTL::vector_base<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >&)
0000000000be87c6 l     F .text	00000000000000a4              TaoCrypt::MultiplyByPower2Mod(unsigned long*, unsigned long const*, unsigned int, unsigned long const*, unsigned int)
0000000000be8eaa l     F .text	0000000000000159              TaoCrypt::Integer::Encode(unsigned char*, unsigned int, TaoCrypt::Integer::Signedness) const
0000000000bbd948 l     F .text	000000000000000b              yaSSL::virtual_base::virtual_base()
0000000000bbf4f6 l     F .text	0000000000000043              mySTL::pair<int, yaSSL::Message* (*)()>* mySTL::uninit_copy<mySTL::pair<int, yaSSL::Message* (*)()>*, mySTL::pair<int, yaSSL::Message* (*)()>*>(mySTL::pair<int, yaSSL::Message* (*)()>*, mySTL::pair<int, yaSSL::Message* (*)()>*, mySTL::pair<int, yaSSL::Message* (*)()>*)
0000000000bcdd56 l     F .text	0000000000000041              TaoCrypt::RSA_PublicKey::Initialize(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bc3898 l     F .text	00000000000000a2              yaSSL::SSL::SendWriteBuffered()
000000000099a102 l     F .text	0000000000000162              ha_innobase::clone(char const*, st_mem_root*)
0000000000bcecfe l     F .text	000000000000004b              TaoCrypt::HMAC<TaoCrypt::MD5>::Update(unsigned char const*, unsigned int)
00000000010f6228 l     O .data	0000000000000004              pars_update_token
00000000009fbc4b l     F .text	0000000000000102              sync_init
0000000000b0866d l     F .text	0000000000000094              os_mutex_exit
0000000000bc75d6 l     F .text	0000000000000015              mySTL::list<yaSSL::SSL_SESSION*>::iterator::operator*() const
0000000000bc6062 l     F .text	0000000000000012              yaSSL::Buffers::useHandShake()
0000000000beb892 l     F .text	000000000000020a              TaoCrypt::Integer::Divide(unsigned long&, TaoCrypt::Integer&, TaoCrypt::Integer const&, unsigned long)
0000000000a5dd31 l     F .text	000000000000018b              buf_pool_init
0000000000bc5c84 l     F .text	0000000000000011              yaSSL::Crypto::use_digest()
0000000000d53c40 l     O .rodata	0000000000000100              TaoCrypt::AES::CTd4
0000000000bcd63e l     F .text	0000000000000047              TaoCrypt::SHA::SHA()
0000000000a75fd5 l     F .text	000000000000004a              buf_LRU_validate
000000000138e828 l     O .bss	0000000000000008              srv_print_latch_waits
0000000000a2fddf l     F .text	0000000000000105              btr_page_free_low
0000000000bcb428 l     F .text	00000000000000a2              yaSSL::HMAC_RMD::HMAC_RMD(unsigned char const*, unsigned int)
0000000000bea52e l     F .text	000000000000005e              TaoCrypt::Integer::BitCount() const
0000000000bd54e6 l     F .text	000000000000001b              yaSSL::Mutex::~Mutex()
0000000000a00e27 l     F .text	000000000000002c              trx_i_s_cache_start_write
0000000000bcf764 l     F .text	000000000000002b              yaSSL::RSA::RSAImpl::~RSAImpl()
00000000009c67b9 l     F .text	00000000000000be              row_prebuild_sel_graph
0000000000bebafe l     F .text	000000000000017b              TaoCrypt::Integer::Modulo(unsigned long) const
0000000000bee6f4 l     F .text	0000000000000039              TaoCrypt::EuclideanDomainOf::EuclideanDomainOf()
0000000000bda38e l     F .text	000000000000082a              TaoCrypt::CertDecoder::GetName(TaoCrypt::CertDecoder::NameType)
00000000010f6250 l     O .data	0000000000000008              log_do_write
0000000000bdc800 l     F .text	000000000000003d              TaoCrypt::DSA_Private_Decoder::~DSA_Private_Decoder()
0000000000bef76e l     F .text	0000000000000017              TaoCrypt::Word::GetHighHalfAsBorrow() const
0000000000bb7d3d l     F .text	0000000000000030              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::Message const&)
0000000000ae5211 l     F .text	0000000000000261              lock_rec_unlock
0000000000bde9da l     F .text	000000000000000e              TaoCrypt::DSA_PublicKey::GetModulus() const
00000000009d6967 l     F .text	000000000000004c              sel_node_create
00000000009d9c2c l     F .text	0000000000000170              row_fetch_print
0000000000bf7304 l     F .text	000000000000000f              TaoCrypt::RIPEMD160::getBlockSize() const
0000000000bb4502 l     F .text	000000000000003b              yaSSL::sslHashes::~sslHashes()
0000000000bc8e68 l     F .text	000000000000007f              yaSSL::output_buffer::output_buffer(unsigned int, unsigned char const*, unsigned int)
0000000000a93ff1 l     F .text	000000000000015d              dict_table_check_for_dup_indexes
0000000000bc78a8 l     F .text	00000000000000ee              mySTL::list<yaSSL::ThreadError>::push_back(yaSSL::ThreadError)
0000000000a6d6b1 l     F .text	0000000000000167              buf_flush_stat_update
0000000000a6b4ba l     F .text	000000000000033a              buf_flush_init_for_writing
0000000000bea624 l     F .text	0000000000000089              TaoCrypt::Integer::IsConvertableToLong() const
0000000000bffd92 l     F .text	000000000000002f              TaoCrypt::WindowSlider* mySTL::GetArrayMemory<TaoCrypt::WindowSlider>(unsigned long)
0000000001396600 l     O .bss	0000000000000018              mutex_list
0000000001396558 l     O .bss	0000000000000004              rw_lock_list_mutex_key
0000000000bed8c0 l     F .text	000000000000013d              TaoCrypt::MontgomeryRepresentation::Square(TaoCrypt::Integer const&) const
0000000000bdf6dc l     F .text	0000000000000038              TaoCrypt::DSA_Private_Decoder::DSA_Private_Decoder(TaoCrypt::Source&)
0000000000bbb06a l     F .text	0000000000000012              yaSSL::ClientHello::get_random() const
0000000000bcdcb2 l     F .text	000000000000001a              TaoCrypt::PK_Lengths::PK_Lengths(TaoCrypt::Integer const&)
0000000000bb232c l     F .text	000000000000002e              yaSSL_get_shared_ciphers
0000000000b3a2b6 l     F .text	00000000000001a0              row_ext_create
0000000000be0b0c l     F .text	0000000000000028              unsigned int const& TaoCrypt::min<unsigned int>(unsigned int const&, unsigned int const&)
0000000000bbb14e l     F .text	000000000000004a              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::ServerKeyExchange const&)
0000000000beeda4 l     F .text	00000000000000a9              TaoCrypt::ModularArithmetic::Multiply(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bcf87c l     F .text	000000000000001a              TaoCrypt::RSA_Encryptor<TaoCrypt::RSA_BlockType2>::RSA_Encryptor(TaoCrypt::RSA_PublicKey const&)
0000000000a6d26c l     F .text	0000000000000117              buf_flush_list
0000000000bd5648 l     F .text	0000000000000056              yaSSL::Socket::get_ready() const
0000000000995c04 l     F .text	000000000000003e              innobase_strcasecmp
0000000000a18422 l     F .text	000000000000059b              trx_sys_close
0000000000bd5472 l     F .text	0000000000000047              void yaSSL::ysDelete<yaSSL::Message>(yaSSL::Message*)
0000000000bca988 l     F .text	0000000000000026              yaSSL::MD5::~MD5()
0000000000bbb41c l     F .text	0000000000000012              yaSSL::ServerKeyExchange::set(yaSSL::input_buffer&)
00000000008cd700 l     F .text	0000000000000047              TaoCrypt::SHA512::SHA512()
0000000000ae5c89 l     F .text	00000000000004c5              lock_rec_print
0000000000bba5bc l     F .text	0000000000000012              yaSSL::ServerHelloDone::get(yaSSL::output_buffer&) const
0000000000ab9ac7 l     F .text	0000000000000233              flst_add_first
00000000009f3416 l     F .text	0000000000000165              srv_que_task_enqueue_low
0000000001396e98 l     O .bss	0000000000000008              recv_lsn_checks_on
0000000000995e4a l     F .text	00000000000000e0              innobase_raw_format
00000000010f5f90 l     O .data	0000000000000008              srv_rollback_segments
0000000000bb41a2 l     F .text	000000000000002b              TaoCrypt::DSA_PrivateKey::~DSA_PrivateKey()
0000000000bce504 l     F .text	000000000000002f              TaoCrypt::DSA_Signer::~DSA_Signer()
0000000000a273e0 l     F .text	00000000000000ec              ut_usectime
0000000001396f78 l     O .bss	0000000000000008              os_use_large_pages
00000000010f5ec8 l     O .data	0000000000000008              srv_fatal_semaphore_wait_threshold
0000000000bc8f3c l     F .text	000000000000003a              yaSSL::output_buffer::set_current(unsigned int)
00000000009a0f52 l     F .text	0000000000000190              ha_innobase::read_time(unsigned int, unsigned int, unsigned long long)
0000000000bcf322 l     F .text	000000000000002d              yaSSL::DES::DESImpl::~DESImpl()
0000000000bcb77c l     F .text	0000000000000038              yaSSL::DES::encrypt(unsigned char*, unsigned char const*, unsigned int)
0000000000bc5d9e l     F .text	000000000000001a              yaSSL::Crypto::setDigest(yaSSL::Digest*)
000000000099702b l     F .text	000000000000005a              trx_is_strict
0000000000c00780 l     F .text	000000000000001b              void mySTL::destroy<TaoCrypt::WindowSlider>(TaoCrypt::WindowSlider*)
0000000000bce79f l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::DiffieHellman::DHImpl>(yaSSL::DiffieHellman::DHImpl*)
00000000009c764a l     F .text	000000000000005e              row_mysql_unfreeze_data_dictionary
0000000000a54b82 l     F .text	0000000000000092              btr_search_info_create
0000000000bcd6ce l     F .text	0000000000000070              TaoCrypt::Mode_BASE::Mode_BASE(int, TaoCrypt::CipherDir, TaoCrypt::Mode)
0000000001390f40 l     O .bss	0000000000000008              trx_sys_multiple_tablespace_format
0000000000bd7454 l     F .text	0000000000000039              TaoCrypt::ByteReverse(unsigned int)
0000000000bdfa50 l     F .text	000000000000006c              TaoCrypt::AbstractRing::MultiplicativeGroupT::ScalarMultiply(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bcd770 l     F .text	0000000000000026              TaoCrypt::Mode_BASE::~Mode_BASE()
0000000000bbf706 l     F .text	0000000000000052              mySTL::vector_base<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::vector_base(unsigned long)
0000000000bde0fa l     F .text	000000000000003d              TaoCrypt::DES_EDE2::~DES_EDE2()
0000000000bc7144 l     F .text	0000000000000012              mySTL::list<yaSSL::output_buffer*>::size() const
0000000001066280 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::Finished
0000000000a715d0 l     F .text	00000000000002a4              buf_LRU_get_free_only
0000000000bc5508 l     F .text	000000000000002a              yaSSL::SSL_CTX::AddCA(yaSSL::x509*)
0000000000ad68fb l     F .text	0000000000000388              pars_update_statement
000000000138e788 l     O .bss	0000000000000008              srv_log_waits
0000000000a0549b l     F .text	000000000000001b              trx_purge_rec_release
0000000000bcfe28 l     F .text	000000000000001a              TaoCrypt::RSA_Encryptor<TaoCrypt::RSA_BlockType1>::RSA_Encryptor(TaoCrypt::RSA_PublicKey const&)
0000000000acf89b l     F .text	00000000000000ea              ibuf_print
0000000001396e78 l     O .bss	0000000000000004              log_flush_order_mutex_key
0000000000bc9546 l     F .text	0000000000000016              yaSSL::CertManager::setSendBlankCert()
0000000000bbd573 l     F .text	00000000000000c7              yaSSL::InitMessageFactory(yaSSL::Factory<yaSSL::Message, int, yaSSL::Message* (*)()>&)
00000000013935c0 l     O .bss	0000000000000001              srv_load_corrupted
000000000099630d l     F .text	00000000000000e0              innobase_trx_allocate
0000000000bcbc2a l     F .text	000000000000004d              yaSSL::AES::~AES()
0000000000afdcfc l     F .text	00000000000000b6              mlog_write_string
0000000000bcd4c0 l     F .text	0000000000000031              yaSSL::BulkCipher::~BulkCipher()
0000000000b38ab1 l     F .text	0000000000000030              rec_init_offsets_temp
0000000000aa75fb l     F .text	0000000000000030              fil_check_adress_in_tablespace
0000000000bc5430 l     F .text	00000000000000d7              yaSSL::SSL_CTX::~SSL_CTX()
0000000000bb46c6 l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::BIGNUM>::~auto_ptr()
0000000000b068e7 l     F .text	0000000000000056              os_aio_validate
0000000000bbe76c l     F .text	00000000000000dc              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::push_back(mySTL::pair<int, yaSSL::Message* (*)()> const&)
0000000001390238 l     O .bss	0000000000000008              sync_initialized
0000000000bbf0d8 l     F .text	000000000000002e              mySTL::pair<int, yaSSL::HandShakeBase* (*)()>::pair(int const&, yaSSL::HandShakeBase* (* const&)())
0000000000aed33f l     F .text	00000000000006f8              log_write_up_to
0000000000bf1df0 l     F .text	000000000000003d              TaoCrypt::MD4::~MD4()
0000000000bbecb2 l     F .text	00000000000000dc              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::push_back(mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> const&)
0000000000aa4849 l     F .text	0000000000000099              fil_space_get_version
0000000000bb74ca l     F .text	00000000000000ea              yaSSL::Parameters::Parameters(yaSSL::ConnectionEnd, yaSSL::Ciphers const&, yaSSL::ProtocolVersion, bool)
0000000001067b48 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::RMD
0000000000bc862e l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::SSL_SESSION>(yaSSL::SSL_SESSION*)
0000000000a1a3b2 l     F .text	0000000000000520              trx_free
00000000009deb7b l     F .text	000000000000011f              row_search_check_if_query_cache_permitted
0000000000bde580 l     F .text	0000000000000042              TaoCrypt::DH::DH(TaoCrypt::Source&)
0000000000b1bc1b l     F .text	00000000000006b4              page_simple_validate_old
0000000000bbef34 l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::Swap(mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >&)
0000000000bce853 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::DSS::DSSImpl>(yaSSL::DSS::DSSImpl*)
0000000000a5ec4f l     F .text	00000000000004a2              buf_pool_watch_set
0000000000bee9c4 l     F .text	000000000000007f              TaoCrypt::EuclideanDomainOf::Multiply(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bb3b55 l     F .text	000000000000000b              yaX509_LOOKUP_file
0000000000ad6174 l     F .text	0000000000000056              pars_select_list
0000000000bbfaf8 l     F .text	000000000000000b              void mySTL::destroy<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >(mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*)
0000000000beed4a l     F .text	0000000000000013              TaoCrypt::ModularArithmetic::Identity() const
0000000000a60199 l     F .text	000000000000028c              buf_zip_decompress
0000000000bc66d4 l     F .text	000000000000002b              yaSSL::Errors::Errors()
0000000000bee370 l     F .text	000000000000001f              TaoCrypt::Integer::IsOdd() const
0000000000bb40da l     F .text	000000000000002b              TaoCrypt::DSA_PrivateKey::DSA_PrivateKey()
0000000000bdabb8 l     F .text	0000000000000208              TaoCrypt::CertDecoder::GetDate(TaoCrypt::CertDecoder::DateType)
0000000000a24d84 l     F .text	00000000000001b8              trx_undo_set_state_at_prepare
0000000000bb35b7 l     F .text	000000000000000b              yaGENERAL_NAMES_free
000000000099b8ea l     F .text	0000000000000062              ha_innobase::innobase_reset_autoinc(unsigned long long)
000000000138e8b0 l     O .bss	0000000000000008              srv_sys
00000000010f5f11 l     O .data	0000000000000001              srv_use_sys_malloc
0000000000bcfd0e l     F .text	0000000000000027              TaoCrypt::HMAC<TaoCrypt::MD5>::Init()
0000000000bc7f46 l     F .text	000000000000001a              mySTL::list<yaSSL::output_buffer*>::iterator::iterator(mySTL::list<yaSSL::output_buffer*>::node*)
0000000000bc2942 l     F .text	000000000000035f              yaSSL::SSL::deriveKeys()
0000000000bd0178 l     F .text	0000000000000041              TaoCrypt::DES_EDE3::~DES_EDE3()
0000000000bc016f l     F .text	0000000000000040              yaSSL::ato24(unsigned char const*, unsigned char (&) [3])
0000000000a18186 l     F .text	0000000000000093              trx_sys_file_format_max_set
0000000000be8b18 l     F .text	0000000000000042              TaoCrypt::Integer::Integer(TaoCrypt::Source&)
0000000000bccaa6 l     F .text	00000000000000a4              yaSSL::DiffieHellman::DiffieHellman(yaSSL::DiffieHellman const&)
0000000000ae9258 l     F .text	000000000000004e              lock_rec_get_space_id
0000000000be9534 l     F .text	000000000000005a              TaoCrypt::Integer::operator!() const
0000000001396c80 l     O .bss	0000000000000004              buf_pool_mutex_key
0000000000a607e8 l     F .text	0000000000000062              buf_pointer_is_block_field
00000000009aa7ea l     F .text	0000000000000be4              ha_innobase::add_index(TABLE*, st_key*, unsigned int, handler_add_index**)
0000000000bed356 l     F .text	00000000000000fd              TaoCrypt::MontgomeryReduce(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned long const*, unsigned int)
0000000000bfff86 l     F .text	000000000000001b              mySTL::vector<TaoCrypt::WindowSlider>::vector()
0000000000bcddf6 l     F .text	0000000000000041              TaoCrypt::RSA_PublicKey::RSA_PublicKey(TaoCrypt::RSA_PublicKey const&)
000000000138e6e0 l     O .bss	0000000000000008              srv_file_format
00000000010f5f10 l     O .data	0000000000000001              srv_adaptive_flushing
0000000000bbb3ee l     F .text	000000000000002d              yaSSL::ServerKeyExchange::getKeyLength() const
0000000000bc9122 l     F .text	000000000000001f              yaSSL::x509::~x509()
00000000013901f0 l     O .bss	0000000000000008              rw_s_spin_wait_count
0000000000b58764 l     F .text	000000000000021a              row_undo_mod
000000000138e860 l     O .bss	0000000000000008              srv_n_lock_wait_time
0000000000bcf54e l     F .text	0000000000000031              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::Process(unsigned char*, unsigned char const*, unsigned int)
00000000013938a0 l     O .bss	0000000000000008              log_sys
0000000000bcde38 l     F .text	0000000000000074              TaoCrypt::RSA_PublicKey::operator=(TaoCrypt::RSA_PublicKey const&)
0000000000bb32a0 l     F .text	00000000000000f1              yaDES_ede3_cbc_encrypt
0000000000af8879 l     F .text	0000000000000011              mem_print_info
0000000000bebefa l     F .text	0000000000000045              TaoCrypt::Integer::IsUnit() const
0000000000bcacc4 l     F .text	0000000000000034              yaSSL::SHA::operator=(yaSSL::SHA const&)
0000000000bfffa2 l     F .text	0000000000000035              mySTL::vector<TaoCrypt::WindowSlider>::~vector()
0000000000ad53a8 l     F .text	00000000000000a3              pars_order_by
0000000000bc43c0 l     F .text	0000000000000027              yaSSL::SSL::isTLS() const
0000000000bc85a4 l     F .text	000000000000002e              mySTL::vector_base<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::vector_base()
0000000000bc447a l     F .text	0000000000000037              yaSSL::SSL::addBuffer(yaSSL::output_buffer*)
0000000000bbde70 l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::HandShakeBase>::~auto_ptr()
000000000139650c l     O .bss	0000000000000004              srv_purge_thread_key
00000000009f1f31 l     F .text	0000000000000052              srv_wake_master_thread
0000000001393900 l     O .bss	0000000000000008              os_aio_print_debug
0000000000bbf679 l     F .text	0000000000000030              void mySTL::destroy<mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*>(mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*, mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*)
0000000000bdea44 l     F .text	000000000000002a              TaoCrypt::DSA_PublicKey::SetSubGroupOrder(TaoCrypt::Integer const&)
00000000010f60d0 l     O .data	0000000000000008              ut_rnd_ulint_counter
0000000000bbdbc6 l     F .text	0000000000000029              yaSSL::FortezzaKeys::FortezzaKeys()
0000000000d54e08 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000bf86c8 l     F .text	00000000000000a4              TaoCrypt::SHA256::Swap(TaoCrypt::SHA256&)
0000000000bbcb3a l     F .text	0000000000000025              yaSSL::Finished::get(yaSSL::output_buffer&) const
0000000000bdb870 l     F .text	000000000000004d              TaoCrypt::Signature_Encoder::SetDigest(unsigned char const*, unsigned int, unsigned char*)
0000000000bf2f32 l     F .text	0000000000000022              operator delete(void*, TaoCrypt::new_t)
00000000008cd83a l     F .text	0000000000000026              TaoCrypt::SHA384::~SHA384()
00000000009d0b6b l     F .text	0000000000000193              row_get_clust_rec
0000000000bb43a6 l     F .text	0000000000000037              mySTL::auto_ptr<yaSSL::BulkCipher>::reset(yaSSL::BulkCipher*)
0000000000bb84e1 l     F .text	0000000000000050              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::Alert const&)
00000000009969e2 l     F .text	0000000000000039              innobase_invalidate_query_cache
0000000000b2c27c l     F .text	00000000000002a2              page_zip_reorganize
0000000000bc8a6e l     F .text	0000000000000022              yaSSL::input_buffer::get_size() const
0000000000bdff8a l     F .text	0000000000000053              TaoCrypt::FileSink::FileSink(char const*, TaoCrypt::Source&)
0000000000bd2e38 l     F .text	000000000000021d              yaSSL::PRF(unsigned char*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int)
0000000000998c54 l     F .text	000000000000000f              ha_innobase::table_cache_type()
0000000000bbe37a l     F .text	000000000000006c              yaSSL::Factory<yaSSL::HandShakeBase, int, yaSSL::HandShakeBase* (*)()>::Register(int const&, yaSSL::HandShakeBase* (*)())
0000000000bf771e l     F .text	00000000000000d8              TaoCrypt::RSA_BlockType2::Pad(unsigned char const*, unsigned int, unsigned char*, unsigned int, TaoCrypt::RandomNumberGenerator&) const
000000000099f4fe l     F .text	0000000000000a93              ha_innobase::create(char const*, TABLE*, st_ha_create_information*)
0000000000beb79a l     F .text	000000000000007b              TaoCrypt::Integer::DividedBy(TaoCrypt::Integer const&) const
0000000000bc2154 l     F .text	00000000000000c1              yaSSL::SSL::set_preMaster(unsigned char const*, unsigned int)
0000000000a1727e l     F .text	0000000000000156              trx_sys_update_mysql_binlog_offset
0000000000b4cadd l     F .text	0000000000000049              rbt_first
0000000000bc5cfa l     F .text	000000000000008b              yaSSL::Crypto::SetDH(yaSSL::DH_Parms const&)
0000000000bc9846 l     F .text	0000000000000011              yaSSL::CertManager::get_peerKeyType() const
0000000000bc2276 l     F .text	000000000000003d              yaSSL::SSL::set_masterSecret(unsigned char const*)
00000000009a6bae l     F .text	0000000000000124              ha_innobase::check_if_incompatible_data(st_ha_create_information*, unsigned int)
0000000000bcb6de l     F .text	0000000000000026              yaSSL::DES::~DES()
0000000000bc603e l     F .text	0000000000000012              yaSSL::Buffers::getHandShake() const
0000000000bfe4f8 l     F .text	000000000000000f              TaoCrypt::SHA256::getPadSize() const
0000000001066588 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::Alert
0000000000bce35e l     F .text	0000000000000029              yaSSL::BulkCipher::BulkCipher()
0000000000bbec4f l     F .text	0000000000000062              mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> mySTL::make_pair<int, yaSSL::ClientKeyBase* (*)()>(int const&, yaSSL::ClientKeyBase* (* const&)())
0000000000bdfed4 l     F .text	000000000000001f              TaoCrypt::FileSource::size_left()
0000000000bcdb08 l     F .text	000000000000004e              TaoCrypt::DES::DES(TaoCrypt::CipherDir, TaoCrypt::Mode)
0000000000bb3ca0 l     F .text	0000000000000031              yaSSL::Message::~Message()
0000000000a2830f l     F .text	00000000000000ca              ib_vector_push
0000000000bef4c6 l     F .text	000000000000007e              TaoCrypt::DWord::operator-(unsigned long)
0000000000bc48c4 l     F .text	0000000000000011              yaSSL::SSL_SESSION::GetBornOn() const
0000000000abc4b7 l     F .text	0000000000000362              ha_delete_hash_node
0000000000bdf7e6 l     F .text	0000000000000029              TaoCrypt::AbstractRing::MultiplicativeGroupT::MultiplicativeGroupT()
0000000000a26c09 l     F .text	0000000000000214              ut_free_all_mem
0000000000bb2ae2 l     F .text	000000000000000f              yaSSL_CTX_check_private_key
0000000001067a70 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::HMAC_RMD
0000000000bfc19e l     F .text	000000000000002a              TaoCrypt::SHA224::Transform()
0000000000bcf62c l     F .text	0000000000000045              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::AES, (TaoCrypt::Mode)1>::SetKey(unsigned char const*, unsigned int, unsigned char const*)
0000000000bdf4de l     F .text	0000000000000012              TaoCrypt::DSA_Signer::GetS() const
0000000000bd52e2 l     F .text	000000000000007c              yaSSL::Factory<yaSSL::Message, int, yaSSL::Message* (*)()>::CreateObject(int const&) const
0000000000bd8367 l     F .text	00000000000000b2              TaoCrypt::GetLength(TaoCrypt::Source&)
0000000000a2fee4 l     F .text	0000000000000097              btr_page_free
0000000000a21d8c l     F .text	00000000000000e1              trx_undo_parse_page_header
0000000000a5ea81 l     F .text	00000000000001ce              buf_pool_watch_is_sentinel
00000000010f6244 l     O .data	0000000000000004              pars_clustered_token
000000000136cb30 l     O .data	0000000000000008              TaoCrypt::AES::Te0
00000000013956e0 l     O .bss	0000000000000008              srv_misc_tmpfile
0000000000bdeb90 l     F .text	0000000000000059              TaoCrypt::DSA_PrivateKey::Initialize(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
00000000010f61ec l     O .data	0000000000000004              pars_instr_token
0000000000bdc4f8 l     F .text	000000000000002d              TaoCrypt::RSA_PrivateKey::SetMultiplicativeInverseOfPrime2ModPrime1(TaoCrypt::Integer const&)
0000000001393930 l     O .bss	0000000000000008              os_n_file_writes_old
0000000000a46843 l     F .text	0000000000000049              btr_cur_set_deleted_flag_for_ibuf
000000000138e798 l     O .bss	0000000000000008              srv_dblwr_pages_written
0000000001393928 l     O .bss	0000000000000008              os_n_file_reads_old
00000000013939c8 l     O .bss	0000000000000008              os_fast_mutex_count
0000000000bc248e l     F .text	00000000000003a8              yaSSL::SSL::makeMasterSecret()
0000000000a10b13 l     F .text	0000000000000086              trx_rollback_or_clean_all_recovered
0000000000bd00a8 l     F .text	0000000000000041              TaoCrypt::RIPEMD160::~RIPEMD160()
0000000000bbd40b l     F .text	000000000000005a              yaSSL::CreateFortezzaServerKEA()
0000000000bbd913 l     F .text	000000000000001a              mySTL::GetMemory(unsigned long)
0000000000be0a44 l     F .text	0000000000000014              TaoCrypt::HASHwithTransform::GetBitCountLo() const
0000000000bd9444 l     F .text	000000000000001b              TaoCrypt::DH_Decoder::ReadHeader()
0000000000bc7e8c l     F .text	000000000000001b              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::vector()
0000000000bb9b5a l     F .text	0000000000000035              yaSSL::Certificate::Certificate()
0000000000a6d1f7 l     F .text	0000000000000075              buf_flush_LRU
0000000000bbf106 l     F .text	0000000000000039              void mySTL::construct<mySTL::pair<int, yaSSL::HandShakeBase* (*)()>, mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >(mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*, mySTL::pair<int, yaSSL::HandShakeBase* (*)()> const&)
0000000000bcee56 l     F .text	00000000000000fd              TaoCrypt::HMAC<TaoCrypt::SHA>::SetKey(unsigned char const*, unsigned int)
00000000010f50e0 l     O .data	0000000000000068              i_s_innodb_cmpmem_reset
00000000009eea59 l     F .text	0000000000000071              srv_get_n_threads
0000000000bcbe30 l     F .text	000000000000001d              yaSSL::RandomPool::GetError() const
0000000000bcadcc l     F .text	000000000000007e              yaSSL::RMD::RMD()
0000000000bcfdf2 l     F .text	0000000000000036              TaoCrypt::HMAC<TaoCrypt::RIPEMD160>::KeyInnerHash()
0000000000bf086a l     F .text	000000000000001a              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::begin() const
0000000000a4399d l     F .text	00000000000001c6              btr_cur_update_in_place_log
0000000000bce5d2 l     F .text	000000000000005a              yaSSL::DiffieHellman::DHImpl::DHImpl(TaoCrypt::RandomNumberGenerator&)
00000000009a1432 l     F .text	0000000000000931              ha_innobase::info_low(unsigned int, bool)
0000000000bb4b34 l     F .text	0000000000000041              yaSSL::Finished::~Finished()
0000000000bec084 l     F .text	000000000000007e              TaoCrypt::Integer::Gcd(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bbf462 l     F .text	0000000000000024              void yaSSL::ysDelete<unsigned char>(unsigned char*)
0000000000b1ab9c l     F .text	000000000000010e              page_move_rec_list_end
0000000000bb25f3 l     F .text	000000000000001a              yaX509_get_issuer_name
0000000000bee490 l     F .text	0000000000000050              TaoCrypt::Integer::Doubled() const
0000000000bd5412 l     F .text	000000000000001e              mySTL::auto_ptr<yaSSL::Digest>::Destroy()
0000000000bb68be l     F .text	0000000000000040              yaSSL::ClientDiffieHellmanPublic::ClientDiffieHellmanPublic()
0000000000d53d60 l     O .rodata	0000000000000028              TaoCrypt::AES::rcon_
0000000000bf04b3 l     F .text	0000000000000028              unsigned int const& TaoCrypt::max<unsigned int>(unsigned int const&, unsigned int const&)
0000000000b03413 l     F .text	0000000000000145              os_file_write_func
0000000000a31cdd l     F .text	00000000000000e7              btr_page_get_split_rec_to_left
0000000000bb3788 l     F .text	000000000000003d              yaMD4_Update
00000000010cc4d0 l     O .data.rel.ro	0000000000000060              vtable for TaoCrypt::HASH64withTransform
0000000000bb48dc l     F .text	000000000000001e              mySTL::auto_ptr<yaSSL::BulkCipher>::Destroy()
0000000000bd84b8 l     F .text	0000000000000056              TaoCrypt::PublicKey::PublicKey(unsigned char const*, unsigned int)
0000000000ae3254 l     F .text	000000000000005d              lock_update_root_raise
0000000000be1db6 l     F .text	000000000000096f              TaoCrypt::Portable::Multiply4(unsigned long*, unsigned long const*, unsigned long const*)
0000000000bdc5ba l     F .text	000000000000001b              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::operator[](unsigned int) const
0000000000bb2c1c l     F .text	000000000000001e              yaSSL_CTX_sess_timeouts
0000000001066400 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::ClientKeyBase
0000000000995cb8 l     F .text	000000000000001a              innobase_get_charset
0000000000bbcd2a l     F .text	0000000000000046              yaSSL::Connection::AllocPreSecret(unsigned int)
0000000000a34140 l     F .text	00000000000000b0              btr_parse_set_min_rec_mark
0000000000bb22b8 l     F .text	0000000000000032              yaSSL_flush_sessions
0000000000a83ae7 l     F .text	00000000000002b9              dict_create_or_check_foreign_constraint_tables
0000000000bb80be l     F .text	0000000000000025              yaSSL::HandShakeHeader::get(yaSSL::output_buffer&) const
0000000000a7b662 l     F .text	000000000000059d              dtuple_convert_big_rec
00000000009a5afc l     F .text	00000000000000c5              ha_innobase::innobase_get_autoinc(unsigned long long*)
0000000000bcdf6e l     F .text	000000000000002b              TaoCrypt::DH::~DH()
0000000000b1b810 l     F .text	0000000000000163              page_rec_print
00000000010680c0 l     O .data.rel.ro	0000000000000028              vtable for TaoCrypt::DSA_Public_Decoder
0000000001391090 l     O .bss	0000000000000008              btr_search_this_is_zero
00000000013966c4 l     O .bss	0000000000000004              cache_last_read_mutex_key
0000000000bce388 l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000c0087f l     F .text	0000000000000023              void mySTL::FreeArrayMemory<mySTL::vector<TaoCrypt::Integer> >(mySTL::vector<TaoCrypt::Integer>*)
0000000000bc8914 l     F .text	000000000000001f              yaSSL::input_buffer::~input_buffer()
0000000000bf33ec l     F .text	0000000000000063              TaoCrypt::RIPEMD160::Init()
0000000000be974c l     F .text	00000000000000cf              TaoCrypt::Integer::operator-=(TaoCrypt::Integer const&)
000000000138e878 l     O .bss	0000000000000008              srv_print_innodb_monitor
0000000001066658 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::HandShakeHeader
0000000000c00bd0 l     F .text	000000000000000f              fstat64
0000000000bcb992 l     F .text	000000000000003c              yaSSL::DES_EDE::decrypt(unsigned char*, unsigned char const*, unsigned int)
0000000000bce88f l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::RandomPool::RandomImpl>(yaSSL::RandomPool::RandomImpl*)
0000000001066480 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::ServerHello
0000000000c006ec l     F .text	000000000000006d              mySTL::vector<TaoCrypt::Integer>::vector(unsigned long, mySTL::vector<TaoCrypt::Integer> const&)
0000000000bca544 l     F .text	0000000000000057              yaSSL::del_ptr_zero mySTL::for_each<mySTL::list<TaoCrypt::Signer*>::iterator, yaSSL::del_ptr_zero>(mySTL::list<TaoCrypt::Signer*>::iterator, mySTL::list<TaoCrypt::Signer*>::iterator, yaSSL::del_ptr_zero)
0000000000bc7260 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::output_buffer>::auto_ptr(yaSSL::output_buffer*)
0000000001066440 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::ServerHelloDone
0000000000bd9460 l     F .text	000000000000010b              TaoCrypt::DH_Decoder::Decode(TaoCrypt::DH&)
0000000000bef24e l     F .text	0000000000000026              TaoCrypt::DWord::DWord(unsigned long)
0000000000bbdf72 l     F .text	000000000000002e              mySTL::list<unsigned char*>::list()
0000000000bbf846 l     F .text	0000000000000052              mySTL::vector_base<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::vector_base(unsigned long)
0000000000a17a2c l     F .text	0000000000000332              trx_sys_init_at_db_start
0000000000bbfc68 l     F .text	0000000000000026              yaSSL::ServerHelloDone::~ServerHelloDone()
0000000000bf3450 l     F .text	00000000000000a5              TaoCrypt::RIPEMD160::RIPEMD160(TaoCrypt::RIPEMD160 const&)
0000000000bf7ce4 l     F .text	0000000000000038              TaoCrypt::RSA_Public_Decoder::RSA_Public_Decoder(TaoCrypt::Source&)
00000000008cd670 l     F .text	0000000000000047              TaoCrypt::SHA256::SHA256()
0000000000bcf764 l     F .text	000000000000002b              yaSSL::RSA::RSAImpl::~RSAImpl()
0000000000bbff4a l     F .text	000000000000003d              yaSSL::Fortezza_Server::~Fortezza_Server()
00000000013966d0 l     O .bss	0000000000000004              trx_purge_latch_key
0000000000bc91a8 l     F .text	0000000000000041              yaSSL::x509::Swap(yaSSL::x509&)
0000000000b39a30 l     F .text	0000000000000144              rec_print_new
0000000000a93b09 l     F .text	0000000000000199              dict_ind_init
0000000000be9a48 l     F .text	00000000000000c0              TaoCrypt::Integer::operator<<=(unsigned int)
0000000000bb3ad5 l     F .text	000000000000000f              yaRAND_write_file
0000000000bc8876 l     F .text	000000000000009d              yaSSL::input_buffer::input_buffer(unsigned int, unsigned char const*, unsigned int)
0000000000bf3350 l     F .text	000000000000001c              TaoCrypt::OS_Seed::~OS_Seed()
0000000000a69f81 l     F .text	00000000000003ec              buf_flush_remove
0000000000afdafd l     F .text	0000000000000110              mlog_write_ulint
0000000000bdfef4 l     F .text	0000000000000095              TaoCrypt::FileSource::get(TaoCrypt::Source&)
0000000001393938 l     O .bss	0000000000000008              os_n_fsyncs_old
0000000000bce3ee l     F .text	000000000000002d              yaSSL::RC4::RC4Impl::RC4Impl()
0000000000bd8f8c l     F .text	0000000000000027              TaoCrypt::DSA_Private_Decoder::ReadHeader()
0000000000b368dc l     F .text	0000000000000237              rec_get_offsets_func
0000000000bb39fc l     F .text	0000000000000026              yaSSL_CTX_set_default_passwd_cb
0000000000bbf7b9 l     F .text	0000000000000030              void mySTL::destroy<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*>(mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*, mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*)
0000000000bca9ae l     F .text	000000000000008d              yaSSL::MD5::MD5(yaSSL::MD5 const&)
0000000000bbba90 l     F .text	000000000000000f              yaSSL::CertificateRequest::get_type() const
0000000000b39b74 l     F .text	000000000000014f              rec_print
0000000000bc87f6 l     F .text	0000000000000080              yaSSL::input_buffer::input_buffer(unsigned int)
00000000009fa4d9 l     F .text	000000000000005c              rw_lock_x_lock_move_ownership
0000000000bdbf72 l     F .text	0000000000000039              TaoCrypt::BER_Decoder::BER_Decoder(TaoCrypt::Source&)
0000000000bc6dae l     F .text	000000000000004b              mySTL::list<yaSSL::x509*>::begin() const
0000000000a1dd87 l     F .text	000000000000006e              trx_mark_sql_stat_end
0000000000b436e1 l     F .text	000000000000027d              row_ins_step
0000000000ae90d5 l     F .text	000000000000003f              lock_get_type_str
0000000000bd0040 l     F .text	0000000000000041              TaoCrypt::SHA::~SHA()
0000000000b05acf l     F .text	0000000000000c9f              os_aio_simulated_handle
0000000000bdf782 l     F .text	0000000000000026              TaoCrypt::AbstractGroup::~AbstractGroup()
0000000000bdeac2 l     F .text	0000000000000024              TaoCrypt::DSA_PublicKey::SignatureLength() const
0000000001068110 l     O .data.rel.ro	0000000000000028              vtable for TaoCrypt::DSA_Private_Decoder
0000000000bb235a l     F .text	00000000000000a1              yaSSL_get_cipher_list
0000000000bbe5d8 l     F .text	000000000000005d              void yaSSL::del_ptr_zero::operator()<unsigned char>(unsigned char*&) const
0000000000ab65c6 l     F .text	0000000000000207              fseg_free_step_not_header
0000000000c0075a l     F .text	0000000000000026              mySTL::vector<TaoCrypt::Integer>::Swap(mySTL::vector<TaoCrypt::Integer>&)
0000000000bcdd0e l     F .text	000000000000001d              TaoCrypt::PK_Lengths::FixedCiphertextLength() const
0000000000bb3dd4 l     F .text	0000000000000047              TaoCrypt::MD5::MD5()
00000000010f5060 l     O .data	0000000000000068              i_s_innodb_cmpmem
0000000000bc3026 l     F .text	0000000000000109              yaSSL::SSL::setKeys()
0000000000b023d8 l     F .text	000000000000017d              os_file_create_simple_no_error_handling_func
0000000000bb83e0 l     F .text	0000000000000043              yaSSL::Alert::Alert(yaSSL::AlertLevel, yaSSL::AlertDescription)
0000000000b472bd l     F .text	000000000000014e              row_purge_poss_sec
00000000009a06f8 l     F .text	0000000000000148              ha_innobase::rename_table(char const*, char const*)
0000000000ad793b l     F .text	0000000000000019              pars_rollback_statement
0000000000c00438 l     F .text	000000000000001e              mySTL::vector_base<mySTL::vector<TaoCrypt::Integer> >::~vector_base()
0000000000bc3aec l     F .text	00000000000000f2              yaSSL::SSL::verifyState(yaSSL::HandShakeHeader const&)
0000000000bc8d22 l     F .text	00000000000000a5              yaSSL::input_buffer::read(unsigned char*, unsigned int)
0000000000bce280 l     F .text	000000000000001f              TaoCrypt::HMAC<TaoCrypt::SHA>::~HMAC()
0000000000bba570 l     F .text	000000000000003a              yaSSL::ServerHelloDone::ServerHelloDone()
00000000013915a8 l     O .bss	0000000000000008              dict_foreign_err_file
0000000000a48a95 l     F .text	000000000000026e              btr_push_update_extern_fields
0000000000bb3a5a l     F .text	0000000000000041              err_helper
0000000000b2a05d l     F .text	0000000000000506              page_zip_write_blob_ptr
0000000000bcc4a8 l     F .text	0000000000000080              yaSSL::RSA::sign(unsigned char*, unsigned char const*, unsigned int, yaSSL::RandomPool const&)
0000000000a8bcf3 l     F .text	000000000000005a              dict_col_name_is_reserved
00000000009d9d9c l     F .text	00000000000001ba              row_printf_step
0000000000bcb86e l     F .text	000000000000004d              yaSSL::DES_EDE::~DES_EDE()
0000000000ab0aee l     F .text	0000000000000072              fsp_header_init_fields
00000000008cd538 l     F .text	000000000000000b              TaoCrypt::virtual_base::operator delete(void*)
0000000000a9339d l     F .text	00000000000003c0              dict_print_info_on_foreign_key_in_create_format
0000000000bdf714 l     F .text	0000000000000038              TaoCrypt::DSA_Public_Decoder::DSA_Public_Decoder(TaoCrypt::Source&)
00000000009f13d5 l     F .text	0000000000000420              srv_monitor_thread
0000000000bf3061 l     F .text	0000000000000069              TaoCrypt::BitPrecision(unsigned long)
0000000000a1d7a8 l     F .text	00000000000001de              trx_sig_remove
0000000001396cd8 l     O .bss	0000000000000008              data_mysql_default_charset_coll
0000000000bb13cd l     F .text	0000000000000080              yaTLSv1_1_server_method
0000000000bc8ad0 l     F .text	0000000000000016              yaSSL::input_buffer::set_error()
0000000000bd789b l     F .text	0000000000000048              TaoCrypt::BlockGetAndPut<unsigned int, TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 1>, true>::Get(void const*)
000000000138e7c0 l     O .bss	0000000000000008              srv_force_recovery
0000000000bb3640 l     F .text	000000000000004b              yaX509_NAME_get_index_by_NID
0000000000b00c53 l     F .text	0000000000000038              mtr_memo_contains_page
0000000001068040 l     O .data.rel.ro	0000000000000030              vtable for TaoCrypt::AES
0000000001396e48 l     O .bss	0000000000000004              fil_system_mutex_key
0000000000bb3bb4 l     F .text	000000000000000f              yaSSL_state_string_long
0000000000bd01e0 l     F .text	0000000000000041              TaoCrypt::AES::~AES()
0000000000bf834a l     F .text	0000000000000092              TaoCrypt::SHA::operator=(TaoCrypt::SHA const&)
0000000000bcd468 l     F .text	0000000000000031              yaSSL::Digest::~Digest()
000000000138e838 l     O .bss	0000000000000008              srv_n_rows_updated
0000000000a5c78e l     F .text	0000000000000030              buf_calc_page_old_checksum
0000000000bbf8b6 l     F .text	0000000000000043              mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>* mySTL::uninit_copy<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*, mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*>(mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*, mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*, mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*)
0000000000bcb4ca l     F .text	000000000000004d              yaSSL::HMAC_RMD::~HMAC_RMD()
000000000138e820 l     O .bss	0000000000000008              srv_print_log_io
00000000008cd5a0 l     F .text	0000000000000041              TaoCrypt::HASHwithTransform::~HASHwithTransform()
0000000000bf117c l     F .text	000000000000000f              TaoCrypt::MD2::getDigestSize() const
0000000000a9e92b l     F .text	0000000000000093              dict_mem_foreign_table_name_lookup_set
0000000000bc674c l     F .text	0000000000000033              yaSSL::DH_Parms::DH_Parms()
0000000000bdfdf0 l     F .text	000000000000002a              TaoCrypt::FileSource::~FileSource()
00000000009a0232 l     F .text	000000000000022c              ha_innobase::delete_table(char const*)
0000000000bc68b0 l     F .text	000000000000001b              yaSSL::Factory<yaSSL::ServerKeyBase, int, yaSSL::ServerKeyBase* (*)()>::~Factory()
0000000000bc7e3d l     F .text	000000000000000b              void mySTL::destroy<mySTL::list<yaSSL::SSL_SESSION*>::node>(mySTL::list<yaSSL::SSL_SESSION*>::node*)
0000000000bca859 l     F .text	000000000000001b              void yaSSL::checked_delete<TaoCrypt::Signer>(TaoCrypt::Signer*)
0000000000bbd13b l     F .text	000000000000005a              yaSSL::CreateServerKeyExchange()
0000000000aee30b l     F .text	0000000000000276              log_checkpoint
00000000010f5f20 l     O .data	0000000000000008              srv_buf_pool_instances
00000000009a6152 l     F .text	0000000000000070              ha_innobase::get_error_message(int, String*)
0000000000bb438a l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::BulkCipher>::~auto_ptr()
000000000138e6f8 l     O .bss	0000000000000008              srv_data_file_names
0000000000bfe76c l     F .text	0000000000000031              TaoCrypt::AbstractRing::Square(TaoCrypt::Integer const&) const
0000000000bf0628 l     F .text	000000000000001f              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::operator+(unsigned int) const
0000000000bbe636 l     F .text	0000000000000032              mySTL::list<unsigned char*>::node::node(unsigned char*)
0000000000bb7412 l     F .text	000000000000006d              yaSSL::DH_Server::~DH_Server()
0000000000bdc11e l     F .text	0000000000000075              TaoCrypt::Source::remaining()
0000000000bef734 l     F .text	0000000000000011              TaoCrypt::Word::GetWhole() const
0000000000ad8139 l     F .text	000000000000002a              pars_info_free
0000000000bee161 l     F .text	0000000000000092              TaoCrypt::ShiftWordsLeftByWords(unsigned long*, unsigned int, unsigned int)
0000000000bc7ef8 l     F .text	0000000000000022              mySTL::list<yaSSL::input_buffer*>::iterator::operator!=(mySTL::list<yaSSL::input_buffer*>::iterator const&) const
0000000000bc5cde l     F .text	000000000000001b              yaSSL::Crypto::SetDH(yaSSL::DiffieHellman*)
0000000000bb3d2a l     F .text	0000000000000026              yaSSL::HandShakeBase::~HandShakeBase()
0000000000b2e848 l     F .text	00000000000000c1              que_graph_free
0000000000a16600 l     F .text	00000000000000f4              trx_sys_mark_upgraded_to_multiple_tablespaces
00000000010cc8a8 l     O .data.rel.ro	0000000000000060              vtable for TaoCrypt::MD5
0000000000be9004 l     F .text	0000000000000071              TaoCrypt::Integer::Zero()
0000000000a9e81a l     F .text	00000000000000c4              dict_mem_index_create
0000000000bb8532 l     F .text	0000000000000309              yaSSL::Alert::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000a255ec l     F .text	00000000000003c9              trx_undo_free_prepared
00000000009a0156 l     F .text	00000000000000dc              ha_innobase::truncate()
0000000000a7aea7 l     F .text	00000000000005f4              dfield_print_also_hex
0000000000bc33c6 l     F .text	000000000000021f              yaSSL::SSL::PeekData(yaSSL::Data&)
0000000000bcab44 l     F .text	000000000000007e              yaSSL::SHA::SHA()
0000000000bdfc94 l     F .text	000000000000003d              TaoCrypt::AbstractRing::MultiplicativeGroupT::~MultiplicativeGroupT()
0000000000bf744a l     F .text	00000000000001d5              TaoCrypt::RSA_PrivateKey::CalculateInverse(TaoCrypt::RandomNumberGenerator&, TaoCrypt::Integer const&) const
0000000000a213fd l     F .text	00000000000000bc              trx_undo_get_first_rec
000000000138e720 l     O .bss	0000000000000008              srv_created_new_raw
0000000000bbb0da l     F .text	0000000000000074              yaSSL::ClientHello::ClientHello(yaSSL::ProtocolVersion, bool)
0000000000bb8130 l     F .text	0000000000000012              yaSSL::HandShakeBase::get(yaSSL::output_buffer&) const
0000000000bb88e0 l     F .text	000000000000002d              yaSSL::Data::SetData(unsigned short, unsigned char const*)
0000000000bc635e l     F .text	000000000000001e              yaSSL::X509::GetBefore()
0000000000bb2c58 l     F .text	000000000000001e              yaSSL_CTX_sess_get_cache_size
0000000001396e4c l     O .bss	0000000000000004              fil_space_latch_key
0000000000a28615 l     F .text	000000000000001b              ib_bh_free
0000000000bc904c l     F .text	0000000000000078              yaSSL::output_buffer::write(unsigned char const*, unsigned int)
0000000000bbcfd3 l     F .text	000000000000005a              yaSSL::CreateHelloRequest()
00000000008cd748 l     F .text	0000000000000047              TaoCrypt::SHA384::SHA384()
0000000000ae9192 l     F .text	0000000000000026              lock_get_table_name
0000000000bf83dc l     F .text	0000000000000092              TaoCrypt::SHA256::operator=(TaoCrypt::SHA256 const&)
0000000000bfc174 l     F .text	000000000000002a              TaoCrypt::SHA256::Transform()
0000000000a104be l     F .text	000000000000001d              trx_savept_take
0000000000bb9c68 l     F .text	0000000000000010              yaSSL::ServerDHParams::get_pSize() const
0000000000bbeefe l     F .text	0000000000000035              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::~vector()
0000000001396bc0 l     O .bss	0000000000000004              btr_search_enabled_mutex_key
0000000000a42946 l     F .text	000000000000092d              btr_cur_optimistic_insert
0000000000a78a08 l     F .text	0000000000000245              buf_read_recv_pages
0000000000bef71c l     F .text	0000000000000017              TaoCrypt::Word::operator!() const
0000000000c008d0 l     F .text	0000000000000036              void mySTL::construct<mySTL::vector<TaoCrypt::Integer>, mySTL::vector<TaoCrypt::Integer> >(mySTL::vector<TaoCrypt::Integer>*, mySTL::vector<TaoCrypt::Integer> const&)
0000000000a8931a l     F .text	00000000000000a6              dict_table_get_on_id
0000000000a8ca8c l     F .text	0000000000000381              dict_index_remove_from_cache
00000000009d69b3 l     F .text	00000000000000a8              sel_node_free_private
0000000001396c88 l     O .bss	0000000000000008              buf_pool_ptr
0000000000ad825a l     F .text	0000000000000046              pars_info_add_str_literal
0000000000b35e9e l     F .text	0000000000000247              rec_get_n_extern_new
0000000000bc90d0 l     F .text	000000000000000b              yaSSL::NoCheck::NoCheck()
0000000000bbfa73 l     F .text	0000000000000033              void mySTL::swap<mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*>(mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*&, mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*&)
0000000000bbee90 l     F .text	000000000000006d              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::vector(unsigned long, mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> > const&)
0000000000bcd632 l     F .text	000000000000000b              TaoCrypt::virtual_base::virtual_base()
0000000000a9b561 l     F .text	00000000000009bb              dict_load_table
0000000000bc85d2 l     F .text	000000000000002e              mySTL::vector_base<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::vector_base()
0000000000bb661c l     F .text	000000000000004d              yaSSL::EncryptedPreMasterSecret::~EncryptedPreMasterSecret()
000000000136cb40 l     O .data	0000000000000008              TaoCrypt::AES::Te2
0000000000bbbf99 l     F .text	00000000000000f6              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::CertificateVerify&)
0000000000bc824e l     F .text	0000000000000015              mySTL::list<yaSSL::ThreadError>::iterator::operator*() const
0000000000bee758 l     F .text	0000000000000013              TaoCrypt::EuclideanDomainOf::Identity() const
00000000009f8fd3 l     F .text	00000000000000db              sync_array_free_cell
0000000000a65fd8 l     F .text	0000000000000055              buf_get_latched_pages_number
0000000000bcd558 l     F .text	000000000000000f              yaSSL::DES_EDE::get_keySize() const
00000000010f5f88 l     O .data	0000000000000008              srv_purge_batch_size
0000000000bca826 l     F .text	0000000000000033              void mySTL::swap<TaoCrypt::Signer*>(TaoCrypt::Signer*&, TaoCrypt::Signer*&)
0000000000a275ab l     F .text	0000000000000033              ut_difftime
0000000000bbd357 l     F .text	000000000000005a              yaSSL::CreateRSAServerKEA()
0000000000aa82a3 l     F .text	00000000000002ca              fil_op_log_parse_or_replay
0000000000bb3bf8 l     F .text	0000000000000016              yaSSL_CTX_use_RSAPrivateKey_file
0000000000a91b8e l     F .text	0000000000000579              dict_foreign_parse_drop_constraints
0000000000bbf6aa l     F .text	000000000000005c              mySTL::vector_base<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::Swap(mySTL::vector_base<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >&)
0000000000a2690d l     F .text	00000000000001cd              ut_free
00000000010f5fb0 l     O .data	0000000000000008              srv_n_spin_wait_rounds
0000000000bf118c l     F .text	000000000000006d              TaoCrypt::MD2::~MD2()
0000000000bdec64 l     F .text	000000000000042d              TaoCrypt::DSA_Signer::Sign(unsigned char const*, unsigned char*, TaoCrypt::RandomNumberGenerator&)
0000000000afb2a7 l     F .text	0000000000000420              mem_pool_validate
0000000000bcb5de l     F .text	0000000000000033              yaSSL::HMAC_RMD::update(unsigned char const*, unsigned int)
0000000000bcbeee l     F .text	00000000000000cc              yaSSL::DSS::DSSImpl::SetPrivate(unsigned char const*, unsigned int)
00000000010f5f18 l     O .data	0000000000000008              srv_buf_pool_size
0000000000bdfb8e l     F .text	0000000000000051              TaoCrypt::AbstractRing::~AbstractRing()
0000000000bc957a l     F .text	000000000000002a              yaSSL::CertManager::AddPeerCert(yaSSL::x509*)
00000000009f88cd l     F .text	00000000000001de              sync_array_reserve_cell
0000000000bca360 l     F .text	0000000000000012              TaoCrypt::CertDecoder::GetIssuer() const
0000000000bcd518 l     F .text	000000000000000f              yaSSL::DES::get_blockSize() const
0000000000bc64be l     F .text	000000000000006b              yaSSL::StringHolder::StringHolder(char const*, int)
0000000000a711c8 l     F .text	000000000000012c              buf_LRU_search_and_free_block
0000000000bd7a03 l     F .text	0000000000000062              void TaoCrypt::ByteReverseIf<unsigned int>(unsigned int*, unsigned int const*, unsigned int, TaoCrypt::ByteOrder)
0000000001396ee0 l     O .bss	0000000000000080              os_file_seek_mutexes
00000000009b45b5 l     F .text	000000000000036c              read_cursor_view_create_for_mysql
0000000000bd3c6d l     F .text	00000000000001f8              yaSSL::sendServerKeyExchange(yaSSL::SSL&, yaSSL::BufferOutput)
0000000000bcb95a l     F .text	0000000000000038              yaSSL::DES_EDE::encrypt(unsigned char*, unsigned char const*, unsigned int)
0000000000bbee1c l     F .text	0000000000000033              void mySTL::swap<unsigned char*>(unsigned char*&, unsigned char*&)
0000000000aec572 l     F .text	0000000000000341              log_group_init
0000000000a273d0 l     F .text	0000000000000010              ut_time
0000000000bb3534 l     F .text	0000000000000007              yaERR_free_strings
0000000000a555fb l     F .text	0000000000000188              btr_search_info_update_slow
00000000010f5ee0 l     O .data	0000000000000008              srv_auto_extend_increment
00000000013966d8 l     O .bss	0000000000000004              rseg_mutex_key
0000000000a1172b l     F .text	000000000000005d              trx_undo_rec_reserve
0000000000bdf4cc l     F .text	0000000000000012              TaoCrypt::DSA_Signer::GetR() const
0000000000bde9e8 l     F .text	0000000000000012              TaoCrypt::DSA_PublicKey::GetSubGroupOrder() const
0000000000bee67c l     F .text	0000000000000051              TaoCrypt::AbstractEuclideanDomain::~AbstractEuclideanDomain()
0000000000bc6c80 l     F .text	000000000000002e              mySTL::list<yaSSL::ThreadError>::list()
0000000000bfff50 l     F .text	0000000000000035              mySTL::vector<mySTL::vector<TaoCrypt::Integer> >::~vector()
0000000000a46181 l     F .text	00000000000003b0              btr_cur_del_mark_set_clust_rec
0000000000a40bce l     F .text	00000000000011b7              btr_cur_search_to_nth_level
0000000000bb73b6 l     F .text	000000000000005c              yaSSL::DH_Server::DH_Server()
0000000000bbe92e l     F .text	00000000000000dc              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::push_back(mySTL::pair<int, yaSSL::HandShakeBase* (*)()> const&)
0000000000aecbca l     F .text	00000000000000a9              log_io_complete
0000000000a00c0b l     F .text	0000000000000107              trx_i_s_cache_init
0000000000a030eb l     F .text	000000000000003c              trx_purge_update_undo_must_exist
0000000000bce454 l     F .text	000000000000003d              yaSSL::AES::AESImpl::AESImpl(unsigned int)
0000000000bca874 l     F .text	000000000000003c              void yaSSL::ysDelete<TaoCrypt::Signer>(TaoCrypt::Signer*)
0000000000bc70b2 l     F .text	000000000000004b              mySTL::list<yaSSL::output_buffer*>::begin() const
00000000010f5f80 l     O .data	0000000000000008              srv_max_buf_pool_modified_pct
0000000000bbf758 l     F .text	000000000000001e              mySTL::vector_base<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::~vector_base()
0000000000bf34f6 l     F .text	0000000000000092              TaoCrypt::RIPEMD160::operator=(TaoCrypt::RIPEMD160 const&)
0000000000bf7d28 l     F .text	0000000000000063              TaoCrypt::SHA::Init()
0000000000bcf672 l     F .text	0000000000000045              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::AES, (TaoCrypt::Mode)1>::SetKey(unsigned char const*, unsigned int, unsigned char const*)
0000000000bba4f6 l     F .text	000000000000000f              yaSSL::ServerHello::get_type() const
0000000000bcdc3c l     F .text	000000000000001b              TaoCrypt::RandomNumberGenerator::~RandomNumberGenerator()
00000000010f5f40 l     O .data	0000000000000008              srv_n_read_io_threads
00000000010f5f50 l     O .data	0000000000000008              srv_read_ahead_threshold
0000000000bdc3f8 l     F .text	000000000000002a              TaoCrypt::RSA_PublicKey::SetPublicExponent(TaoCrypt::Integer const&)
0000000000bcf5fe l     F .text	000000000000002d              yaSSL::AES::AESImpl::~AESImpl()
0000000000ab3e23 l     F .text	0000000000000135              fseg_n_reserved_pages
0000000000bdbf5a l     F .text	0000000000000017              TaoCrypt::Error::SetError(TaoCrypt::ErrorNumber)
0000000000a8d046 l     F .text	000000000000017a              dict_index_add_col
0000000000bf05d4 l     F .text	0000000000000053              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::New(unsigned int)
0000000000a5fba6 l     F .text	000000000000058e              buf_page_get_zip
0000000000bd8758 l     F .text	000000000000001e              TaoCrypt::BER_Decoder::GetError()
0000000000bd7960 l     F .text	000000000000007c              TaoCrypt::PutBlock<unsigned int, TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 1>, true>& TaoCrypt::PutBlock<unsigned int, TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 1>, true>::operator()<unsigned int>(unsigned int)
0000000000b02a7b l     F .text	000000000000003d              os_file_close_func
0000000000af8df0 l     F .text	0000000000000316              mem_heap_create_block
0000000000bb3f6a l     F .text	000000000000002b              TaoCrypt::RSA_PublicKey::RSA_PublicKey()
0000000000b4acdb l     F .text	0000000000000362              row_undo_search_clust_to_pcur
0000000000bb3b02 l     F .text	000000000000001a              yaRSA_generate_key
00000000009a61c2 l     F .text	00000000000001d7              ha_innobase::cmp_ref(unsigned char const*, unsigned char const*)
0000000000ad82a0 l     F .text	0000000000000067              pars_info_add_int4_literal
0000000000bcdc00 l     F .text	0000000000000029              TaoCrypt::AES::SetIV(unsigned char const*)
0000000000bc55fe l     F .text	0000000000000015              yaSSL::SSL_CTX::GetUserData() const
0000000000bbe082 l     F .text	0000000000000057              yaSSL::del_ptr_zero mySTL::for_each<mySTL::list<unsigned char*>::iterator, yaSSL::del_ptr_zero>(mySTL::list<unsigned char*>::iterator, mySTL::list<unsigned char*>::iterator, yaSSL::del_ptr_zero)
0000000000bc8fbe l     F .text	0000000000000012              yaSSL::output_buffer::get_buffer() const
0000000000bb3542 l     F .text	0000000000000028              yaX509_get_notBefore
0000000000af46ed l     F .text	00000000000006a6              recv_recover_page_func
0000000000bbbaa0 l     F .text	0000000000000035              yaSSL::CertificateVerify::CertificateVerify()
0000000000bb8058 l     F .text	0000000000000018              yaSSL::HandShakeHeader::set_type(yaSSL::HandShakeType)
00000000010f5f60 l     O .data	0000000000000008              srv_unix_file_flush_method
0000000000b08b30 l     F .text	00000000000000ef              os_thread_create
0000000000bdc6d4 l     F .text	000000000000003d              TaoCrypt::DH_Decoder::~DH_Decoder()
0000000000bc4734 l     F .text	000000000000008b              yaSSL::SSL_SESSION::SSL_SESSION(yaSSL::RandomPool&)
000000000099e014 l     F .text	0000000000000095              ha_innobase::rnd_init(bool)
0000000000bb3c32 l     F .text	000000000000000f              yaSSL_want_read
00000000010f56a0 l     O .data	0000000000000068              i_s_innodb_buffer_stats
0000000000bc5ccc l     F .text	0000000000000012              yaSSL::Crypto::use_certManager()
0000000001395700 l     O .bss	0000000000000098              srv_monitor_file_mutex
0000000000a8a255 l     F .text	00000000000011ea              dict_table_rename_in_cache
0000000000bc5e26 l     F .text	0000000000000012              yaSSL::sslHashes::use_SHA()
00000000009f8aab l     F .text	0000000000000155              sync_array_wait_event
0000000000bee1f3 l     F .text	00000000000000b2              TaoCrypt::ShiftWordsRightByWords(unsigned long*, unsigned int, unsigned int)
0000000000a1a378 l     F .text	000000000000003a              trx_search_latch_release_if_reserved
0000000000bc7a37 l     F .text	0000000000000057              yaSSL::del_ptr_zero mySTL::for_each<mySTL::list<yaSSL::x509*>::iterator, yaSSL::del_ptr_zero>(mySTL::list<yaSSL::x509*>::iterator, mySTL::list<yaSSL::x509*>::iterator, yaSSL::del_ptr_zero)
0000000000af856e l     F .text	000000000000026d              mem_analyze_corruption
0000000000bc6cfe l     F .text	000000000000002c              yaSSL::Factory<yaSSL::Message, int, yaSSL::Message* (*)()>::Factory(void (*)(yaSSL::Factory<yaSSL::Message, int, yaSSL::Message* (*)()>&))
0000000000a834ad l     F .text	000000000000028a              dict_create_table_step
0000000000bc4944 l     F .text	0000000000000071              yaSSL::GetSessions()
0000000000a7be48 l     F .text	0000000000000163              dtype_get_at_most_n_mbchars
0000000001066618 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::HelloRequest
0000000000a7c05b l     F .text	0000000000000084              dtype_form_prtype
0000000000bc557e l     F .text	0000000000000011              yaSSL::SSL_CTX::getMethod() const
0000000000a55d08 l     F .text	0000000000000579              btr_search_guess_on_hash
0000000000bcf448 l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::BlockCipher()
0000000000afb7de l     F .text	000000000000004a              mem_pool_get_reserved
0000000000a324f7 l     F .text	00000000000001ca              btr_insert_on_non_leaf_level_func
000000000138e8b8 l     O .bss	0000000000000008              srv_max_purge_lag
0000000000bcfe42 l     F .text	0000000000000195              TaoCrypt::RSA_Encryptor<TaoCrypt::RSA_BlockType1>::Encrypt(unsigned char const*, unsigned int, unsigned char*, TaoCrypt::RandomNumberGenerator&)
0000000000c00182 l     F .text	0000000000000137              mySTL::vector<TaoCrypt::Integer>::resize(unsigned long, TaoCrypt::Integer const&)
0000000000bf80b2 l     F .text	00000000000000a5              TaoCrypt::SHA256::SHA256(TaoCrypt::SHA256 const&)
0000000000bd535e l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::Message>::auto_ptr(yaSSL::Message*)
0000000000bdffde l     F .text	000000000000002a              TaoCrypt::FileSink::~FileSink()
0000000000bdc1fc l     F .text	0000000000000023              TaoCrypt::Source::get_current() const
0000000000be098c l     F .text	000000000000007b              TaoCrypt::ByteReverse(unsigned long)
0000000001396510 l     O .bss	0000000000000004              srv_error_monitor_thread_key
00000000009ece6f l     F .text	0000000000000055              row_vers_must_preserve_del_marked
0000000000bce2bc l     F .text	000000000000001f              TaoCrypt::HMAC<TaoCrypt::RIPEMD160>::~HMAC()
0000000000bcbba4 l     F .text	0000000000000086              yaSSL::AES::AES(unsigned int)
0000000000bc8776 l     F .text	0000000000000024              yaSSL::Check::check(unsigned int, unsigned int)
0000000000bdc660 l     F .text	0000000000000011              mySTL::auto_ptr<TaoCrypt::HASH>::operator->() const
0000000000bb4918 l     F .text	000000000000001e              mySTL::auto_ptr<yaSSL::BIGNUM>::Destroy()
0000000000bc8914 l     F .text	000000000000001f              yaSSL::input_buffer::~input_buffer()
0000000000bb68fe l     F .text	000000000000004d              yaSSL::ClientDiffieHellmanPublic::~ClientDiffieHellmanPublic()
0000000000ac6fd7 l     F .text	0000000000000140              ibuf_set_free_bits_func
0000000000bbc580 l     F .text	000000000000002d              yaSSL::ClientKeyExchange::getKey() const
00000000009c5fd5 l     F .text	000000000000005c              row_unlock_table_autoinc_for_mysql
0000000000a88866 l     F .text	0000000000000078              dict_tables_have_same_db
0000000000bc617a l     F .text	0000000000000014              yaSSL::Security::use_parms()
00000000010cc530 l     O .data.rel.ro	0000000000000060              vtable for TaoCrypt::HASHwithTransform
0000000000bce3a4 l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000bed18e l     F .text	00000000000001c8              TaoCrypt::ModularArithmetic::SimultaneousExponentiate(TaoCrypt::Integer*, TaoCrypt::Integer const&, TaoCrypt::Integer const*, unsigned int) const
0000000000bb12cd l     F .text	0000000000000080              yaTLSv1_server_method
0000000000aa8c68 l     F .text	000000000000005c              fil_discard_tablespace
0000000000a0c56d l     F .text	000000000000008b              trx_undo_update_rec_get_sys_cols
0000000000bb8294 l     F .text	000000000000000f              yaSSL::ChangeCipherSpec::get_length() const
0000000000b02f3b l     F .text	00000000000000ad              os_file_flush_func
0000000000bddf82 l     F .text	0000000000000131              TaoCrypt::DES_EDE3::ProcessAndXorBlock(unsigned char const*, unsigned char const*, unsigned char*) const
0000000000a74f9a l     F .text	000000000000010e              buf_LRU_free_one_page
0000000000bc7a13 l     F .text	0000000000000024              void yaSSL::ysDelete<yaSSL::SSL_METHOD>(yaSSL::SSL_METHOD*)
0000000000bce4da l     F .text	0000000000000029              yaSSL::Auth::Auth()
0000000000be13b6 l     F .text	00000000000003fb              TaoCrypt::Portable::Multiply2(unsigned long*, unsigned long const*, unsigned long const*)
0000000000a7bfd6 l     F .text	000000000000003d              dtype_is_binary_string_type
0000000000a9ef42 l     F .text	0000000000000340              dyn_array_add_block
0000000000bc90d0 l     F .text	000000000000000b              yaSSL::NoCheck::NoCheck()
0000000000bcdafc l     F .text	000000000000000b              TaoCrypt::BasicDES::BasicDES()
0000000000bc68fe l     F .text	000000000000002f              yaSSL::yassl_int_cpp_local1::SumData::operator()(yaSSL::input_buffer*)
0000000000bdf8d0 l     F .text	0000000000000039              TaoCrypt::AbstractRing::MultiplicativeGroupT::Add(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bc7b57 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::DiffieHellman>(yaSSL::DiffieHellman*)
0000000000bef6a4 l     F .text	0000000000000058              TaoCrypt::Word::operator-(unsigned int)
0000000000bb66a2 l     F .text	0000000000000012              yaSSL::EncryptedPreMasterSecret::get_clientKey() const
0000000000bbdb9c l     F .text	0000000000000029              yaSSL::Fortezza_Server::Fortezza_Server()
00000000009957d9 l     F .text	00000000000001fa              innobase_get_cset_width
0000000000bc03bc l     F .text	0000000000000012              yaSSL::States::UseAccept()
0000000000a054b6 l     F .text	00000000000003ad              trx_purge
0000000000bb2f2b l     F .text	0000000000000358              yaEVP_BytesToKey
0000000000998bf6 l     F .text	0000000000000011              ha_innobase::bas_ext() const
00000000009cc3ee l     F .text	0000000000000128              row_is_magic_monitor_table
0000000000bdfcd2 l     F .text	0000000000000026              TaoCrypt::AbstractRing::MultiplicativeGroupT::~MultiplicativeGroupT()
0000000000bef274 l     F .text	000000000000002a              TaoCrypt::DWord::DWord(unsigned long, unsigned long)
0000000000bb8098 l     F .text	0000000000000025              yaSSL::HandShakeHeader::set(yaSSL::input_buffer&)
0000000000ae38c5 l     F .text	00000000000000b7              lock_rec_store_on_page_infimum
0000000000bca3ac l     F .text	0000000000000014              TaoCrypt::CertDecoder::GetAfterDate() const
0000000000bb2f00 l     F .text	0000000000000011              yaX509_verify_cert_error_string
0000000000bc56c6 l     F .text	000000000000001e              yaSSL::SSL_CTX::setFailNoCert()
0000000000a4a494 l     F .text	000000000000073f              btr_free_externally_stored_field
0000000000bb4474 l     F .text	0000000000000024              mySTL::auto_ptr<yaSSL::x509>::release()
0000000000bfe558 l     F .text	000000000000000f              TaoCrypt::SHA512::getBlockSize() const
0000000000bf7620 l     F .text	0000000000000096              TaoCrypt::RSA_PrivateKey::RSA_PrivateKey(TaoCrypt::Source&)
0000000001391058 l     O .bss	0000000000000008              ut_always_false
0000000000bc434e l     F .text	000000000000000e              yaSSL::SSL::useCrypto()
0000000000bbe668 l     F .text	000000000000001e              mySTL::auto_array<unsigned char>::Destroy()
0000000000bbb07c l     F .text	000000000000005d              yaSSL::ClientHello::ClientHello()
0000000000a8df2c l     F .text	00000000000000b4              dict_table_get_foreign_constraint
0000000000b07b76 l     F .text	000000000000007b              os_sync_init
0000000000aedb99 l     F .text	000000000000006b              log_preflush_pool_modified_pages
0000000000bccaa6 l     F .text	00000000000000a4              yaSSL::DiffieHellman::DiffieHellman(yaSSL::DiffieHellman const&)
0000000000bbfb88 l     F .text	000000000000000b              void mySTL::destroy<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >(mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*)
0000000000bceb64 l     F .text	000000000000001b              yaSSL::RMD::RMDImpl::~RMDImpl()
0000000000bec102 l     F .text	000000000000044e              TaoCrypt::Integer::InverseMod(TaoCrypt::Integer const&) const
000000000099a264 l     F .text	0000000000000021              ha_innobase::max_supported_key_part_length() const
0000000000a13f6f l     F .text	000000000000009d              trx_rseg_get_on_id
0000000000bdbfde l     F .text	0000000000000026              TaoCrypt::BER_Decoder::~BER_Decoder()
0000000000bcbc9e l     F .text	0000000000000018              yaSSL::AES::get_keySize() const
0000000000bffba8 l     F .text	000000000000014b              TaoCrypt::WindowSlider::FindNextWindow()
0000000000bbdd6c l     F .text	0000000000000037              mySTL::auto_ptr<yaSSL::Auth>::reset(yaSSL::Auth*)
0000000000bb4300 l     F .text	0000000000000011              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::size() const
0000000000bbb87b l     F .text	0000000000000175              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::CertificateRequest const&)
0000000000a1e686 l     F .text	00000000000000a6              trx_prepare_for_mysql
0000000000bef5ba l     F .text	000000000000001a              TaoCrypt::Word::Word(unsigned long)
0000000000aa78e0 l     F .text	00000000000000c0              fil_close_all_files
0000000000abcbfb l     F .text	00000000000001dc              ha_validate
0000000001395798 l     O .bss	0000000000000008              srv_error_event
0000000001396e58 l     O .bss	0000000000000004              ibuf_pessimistic_insert_mutex_key
0000000000bca372 l     F .text	0000000000000014              TaoCrypt::CertDecoder::GetCommonName() const
00000000009efda1 l     F .text	000000000000002d              srv_conc_exit_innodb
0000000000beae27 l     F .text	0000000000000474              TaoCrypt::Divide(unsigned long*, unsigned long*, unsigned long*, unsigned long const*, unsigned int, unsigned long const*, unsigned int)
00000000010f5f78 l     O .data	0000000000000008              srv_io_capacity
0000000000bb80f6 l     F .text	0000000000000018              yaSSL::HandShakeBase::set_length(int)
0000000000bcc3fc l     F .text	000000000000004d              yaSSL::RSA::~RSA()
0000000000aa762b l     F .text	0000000000000180              fil_init
0000000000bdf74c l     F .text	0000000000000035              TaoCrypt::AbstractGroup::~AbstractGroup()
0000000000bc727a l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::output_buffer>::~auto_ptr()
0000000000b2c12f l     F .text	000000000000014d              page_zip_write_header_log
0000000001396ce8 l     O .bss	0000000000000004              index_tree_rw_lock_key
0000000000bbb05a l     F .text	000000000000000f              yaSSL::ClientHello::get_type() const
0000000000aad5dd l     F .text	0000000000000673              fil_validate
0000000000be0a07 l     F .text	000000000000003c              TaoCrypt::ByteReverse(unsigned char*, unsigned char const*, unsigned int)
0000000001068070 l     O .data.rel.ro	0000000000000028              vtable for TaoCrypt::CertDecoder
00000000010f61f4 l     O .data	0000000000000004              pars_sysdate_token
00000000013957a0 l     O .bss	0000000000000010              srv_n_threads
0000000000bb26c8 l     F .text	000000000000002d              yaSSL_CTX_use_certificate_file
0000000000bf81fe l     F .text	00000000000000a5              TaoCrypt::SHA512::SHA512(TaoCrypt::SHA512 const&)
0000000000bbfdba l     F .text	000000000000003d              yaSSL::HelloRequest::~HelloRequest()
0000000000bc9504 l     F .text	0000000000000015              yaSSL::CertManager::sendBlankCert() const
0000000000bca398 l     F .text	0000000000000014              TaoCrypt::CertDecoder::GetBeforeDate() const
0000000000bbc30e l     F .text	000000000000011f              yaSSL::ClientKeyExchange::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000bbdb1e l     F .text	0000000000000029              yaSSL::HandShakeBase::HandShakeBase()
0000000000bb2acc l     F .text	0000000000000016              yaSSL_CTX_set_session_id_context
0000000000b12d33 l     F .text	0000000000000246              page_cur_parse_delete_rec
0000000000bcb364 l     F .text	000000000000000f              yaSSL::HMAC_SHA::get_padSize() const
0000000000bb3abb l     F .text	0000000000000007              yaRAND_screen
000000000099b9ae l     F .text	00000000000007c4              ha_innobase::write_row(unsigned char*)
0000000000ae4e76 l     F .text	00000000000001e3              lock_table
0000000000bedd0c l     F .text	0000000000000127              TaoCrypt::ModularRoot(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bbbad6 l     F .text	000000000000004d              yaSSL::CertificateVerify::~CertificateVerify()
00000000010663c0 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::ClientHello
0000000000bca3e4 l     F .text	0000000000000011              TaoCrypt::CertDecoder::GetSubjectCnLength() const
0000000000be89e0 l     F .text	000000000000006b              TaoCrypt::Integer::Integer(TaoCrypt::Integer::Sign, unsigned long, unsigned long)
00000000010681d0 l     O .data.rel.ro	0000000000000030              vtable for TaoCrypt::DES_EDE2
00000000013957c0 l     O .bss	0000000000000098              srv_innodb_monitor_mutex
0000000000bc866a l     F .text	0000000000000033              void mySTL::swap<yaSSL::x509*>(yaSSL::x509*&, yaSSL::x509*&)
0000000000a18335 l     F .text	000000000000000d              trx_sys_file_format_max_get
0000000000ab105b l     F .text	00000000000000ec              fsp_header_get_free_limit
0000000000bd03dd l     F .text	000000000000017c              yaSSL::buildServerHello(yaSSL::SSL&, yaSSL::ServerHello&)
0000000000bfe4d8 l     F .text	000000000000000f              TaoCrypt::SHA256::getBlockSize() const
0000000000a0caab l     F .text	0000000000000336              trx_undo_rec_get_partial_row
0000000000aef7d1 l     F .text	000000000000003e              log_mem_free
0000000000ad7922 l     F .text	0000000000000019              pars_commit_statement
00000000009e4ef0 l     F .text	00000000000001b3              row_upd_rec_in_place
0000000000beb29b l     F .text	00000000000001bc              TaoCrypt::PositiveDivide(TaoCrypt::Integer&, TaoCrypt::Integer&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000c008a2 l     F .text	000000000000002e              mySTL::vector_base<TaoCrypt::Integer>::vector_base()
0000000000a17674 l     F .text	00000000000000a4              trx_sysf_rseg_find_free
0000000000bb4b76 l     F .text	0000000000000026              yaSSL::Finished::~Finished()
0000000000bce62c l     F .text	000000000000004b              yaSSL::DiffieHellman::DHImpl::~DHImpl()
00000000009a3450 l     F .text	000000000000014d              ha_innobase::get_parent_foreign_key_list(THD*, List<st_foreign_key_info>*)
0000000000bbf00e l     F .text	000000000000006d              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::vector(unsigned long, mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> > const&)
0000000000bce5d2 l     F .text	000000000000005a              yaSSL::DiffieHellman::DHImpl::DHImpl(TaoCrypt::RandomNumberGenerator&)
0000000000bc42e8 l     F .text	0000000000000020              yaSSL::SSL::GetError() const
0000000001396fc0 l     O .bss	00000000000000c8              page_zip_stat
0000000000bcb020 l     F .text	0000000000000033              yaSSL::RMD::update(unsigned char const*, unsigned int)
0000000000bd6492 l     F .text	0000000000000058              TaoCrypt::AES::ProcessAndXorBlock(unsigned char const*, unsigned char const*, unsigned char*) const
00000000009d0fe1 l     F .text	00000000000001d2              row_raw_format
00000000009b4a58 l     F .text	00000000000000ab              read_cursor_set_for_mysql
0000000000bf13ba l     F .text	00000000000000a2              TaoCrypt::MD4::Swap(TaoCrypt::MD4&)
0000000000a88bee l     F .text	00000000000000d5              dict_table_decrement_handle_count
00000000009c4aa2 l     F .text	00000000000000e2              row_mysql_store_true_var_len
0000000000bf2ebc l     F .text	000000000000000f              TaoCrypt::MD5::getBlockSize() const
0000000000b00b3c l     F .text	0000000000000117              mtr_read_ulint
0000000000bcaebe l     F .text	000000000000008d              yaSSL::RMD::RMD(yaSSL::RMD const&)
0000000001068200 l     O .data.rel.ro	0000000000000030              vtable for TaoCrypt::DES
0000000000af888a l     F .text	0000000000000011              mem_print_new_info
0000000000bcb054 l     F .text	00000000000000a2              yaSSL::HMAC_MD5::HMAC_MD5(unsigned char const*, unsigned int)
0000000000b08606 l     F .text	0000000000000067              os_mutex_enter
0000000001068180 l     O .data.rel.ro	0000000000000020              vtable for TaoCrypt::DER_Encoder
0000000000ad8032 l     F .text	000000000000008a              pars_complete_graph_for_exec
0000000000bc5c96 l     F .text	0000000000000012              yaSSL::Crypto::use_cipher()
0000000000bb4630 l     F .text	000000000000001b              yaSSL::BIGNUM::~BIGNUM()
00000000008cd64a l     F .text	0000000000000026              TaoCrypt::HASH64withTransform::~HASH64withTransform()
0000000000be8954 l     F .text	000000000000008b              TaoCrypt::Integer::Integer(long)
0000000000bd01ba l     F .text	0000000000000026              TaoCrypt::DES_EDE3::~DES_EDE3()
0000000000bd8419 l     F .text	000000000000009f              TaoCrypt::SetLength(unsigned int, unsigned char*)
0000000000b46d6a l     F .text	00000000000000a8              row_purge_node_create
0000000000bb37f9 l     F .text	0000000000000028              yaMD5_Init
0000000000bc4c4a l     F .text	000000000000018e              yaSSL::Sessions::lookup(unsigned char const*, yaSSL::SSL_SESSION*)
0000000000bd8fb4 l     F .text	0000000000000146              TaoCrypt::RSA_Public_Decoder::Decode(TaoCrypt::RSA_PublicKey&)
0000000001067b00 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::HMAC_MD5
0000000000bce702 l     F .text	0000000000000081              yaSSL::DiffieHellman::DHImpl::AllocKeys(unsigned int, unsigned int, unsigned int)
0000000000bdb8be l     F .text	00000000000001c3              TaoCrypt::DER_Encoder::SetAlgoID(TaoCrypt::HashType, unsigned char*)
0000000000bcf790 l     F .text	000000000000001a              TaoCrypt::RSA_Decryptor<TaoCrypt::RSA_BlockType2>::RSA_Decryptor(TaoCrypt::RSA_PrivateKey const&)
0000000000adfaee l     F .text	000000000000012d              lock_rec_get_prev
0000000000bd8d80 l     F .text	0000000000000027              TaoCrypt::RSA_Private_Decoder::ReadHeader()
0000000000bb7b62 l     F .text	00000000000000d1              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::RecordLayerHeader&)
0000000000bce08e l     F .text	0000000000000026              TaoCrypt::DH::SetP(TaoCrypt::Integer const&)
0000000000be8cfa l     F .text	00000000000001b0              TaoCrypt::Integer::Decode(unsigned char const*, unsigned int, TaoCrypt::Integer::Signedness)
0000000000bc62a8 l     F .text	0000000000000095              yaSSL::X509::X509(char const*, unsigned long, char const*, unsigned long, char const*, int, char const*, int, int, int, int, int)
00000000010f5ff8 l     O .data	0000000000000008              trx_sys_mysql_bin_log_pos
0000000000a692d5 l     F .text	0000000000000089              buf_flush_init_flush_rbt
0000000000bdffde l     F .text	000000000000002a              TaoCrypt::FileSink::~FileSink()
0000000000a1d587 l     F .text	0000000000000221              trx_sig_reply
0000000001396b90 l     O .bss	0000000000000014              field_ref_zero
0000000001396514 l     O .bss	0000000000000004              io_handler_thread_key
00000000009ed2bb l     F .text	00000000000004c7              row_vers_build_for_consistent_read
0000000000bdca2a l     F .text	0000000000000135              TaoCrypt::HexDecoder::Decode()
0000000000a88cc3 l     F .text	00000000000000f9              dict_table_get_col_name
0000000000a73346 l     F .text	0000000000000ad1              buf_LRU_free_block
0000000000bd424f l     F .text	00000000000003c9              yaSSL::sendData(yaSSL::SSL&, void const*, int)
0000000000bc788e l     F .text	000000000000001a              mySTL::list<yaSSL::ThreadError>::iterator::operator->() const
0000000000bcb690 l     F .text	000000000000004d              yaSSL::DES::~DES()
0000000000bc6050 l     F .text	0000000000000012              yaSSL::Buffers::useData()
0000000000bc6e62 l     F .text	0000000000000015              mySTL::list<yaSSL::x509*>::iterator::operator*() const
00000000009b43a7 l     F .text	00000000000000b9              read_view_close_for_mysql
0000000000b4f8e8 l     F .text	0000000000000263              buf_buddy_alloc_low
0000000000bc6d2a l     F .text	000000000000002c              yaSSL::Factory<yaSSL::HandShakeBase, int, yaSSL::HandShakeBase* (*)()>::Factory(void (*)(yaSSL::Factory<yaSSL::HandShakeBase, int, yaSSL::HandShakeBase* (*)()>&))
0000000000bd9fe0 l     F .text	00000000000001d4              TaoCrypt::CertDecoder::GetSignature()
0000000000bc7046 l     F .text	0000000000000015              mySTL::list<yaSSL::input_buffer*>::iterator::operator*() const
0000000000bcdf9a l     F .text	0000000000000074              TaoCrypt::DH::operator=(TaoCrypt::DH const&)
0000000000b31185 l     F .text	0000000000000177              cmp_cols_are_equal
0000000000becfe6 l     F .text	00000000000001a7              TaoCrypt::ModularArithmetic::CascadeExponentiate(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bc8760 l     F .text	0000000000000015              yaSSL::NoCheck::check(unsigned int, unsigned int)
0000000000ad7604 l     F .text	000000000000003e              pars_procedure_call
0000000000aeddff l     F .text	0000000000000096              log_checkpoint_get_nth_group_info
00000000010f6204 l     O .data	0000000000000004              pars_rnd_str_token
0000000000becd46 l     F .text	0000000000000162              TaoCrypt::ModularArithmetic::Reduce(TaoCrypt::Integer&, TaoCrypt::Integer const&) const
0000000000bee7ec l     F .text	0000000000000029              TaoCrypt::EuclideanDomainOf::Accumulate(TaoCrypt::Integer&, TaoCrypt::Integer const&) const
0000000000bd9270 l     F .text	000000000000001b              TaoCrypt::RSA_Public_Decoder::ReadHeader()
0000000000bdc044 l     F .text	000000000000003e              TaoCrypt::DER_Encoder::DER_Encoder()
0000000000bf0518 l     F .text	000000000000009c              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::CleanGrow(unsigned int)
0000000000bca4b2 l     F .text	000000000000004b              mySTL::list<TaoCrypt::Signer*>::begin() const
0000000000bb3b60 l     F .text	0000000000000013              yaX509_STORE_add_lookup
0000000000a7b570 l     F .text	00000000000000f2              dtuple_print
0000000001391078 l     O .bss	0000000000000008              btr_cur_n_non_sea_old
0000000000bc5db8 l     F .text	000000000000001b              yaSSL::Crypto::setCipher(yaSSL::BulkCipher*)
00000000008cd8c8 l     F .text	0000000000000041              TaoCrypt::SHA224::~SHA224()
0000000000bf03b6 l     F .text	0000000000000059              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::Block(unsigned int)
0000000000a27a0a l     F .text	00000000000000e1              ut_print_namel
000000000139655c l     O .bss	0000000000000004              rw_lock_mutex_key
0000000000bb81d1 l     F .text	0000000000000033              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::ChangeCipherSpec const&)
0000000000bcb53e l     F .text	000000000000000f              yaSSL::HMAC_RMD::get_digestSize() const
0000000000bb26f5 l     F .text	000000000000002d              yaSSL_CTX_use_PrivateKey_file
0000000000a00d12 l     F .text	0000000000000081              trx_i_s_cache_free
0000000000be5904 l     F .text	000000000000041b              TaoCrypt::Portable::Multiply4Bottom(unsigned long*, unsigned long const*, unsigned long const*)
0000000000bc5360 l     F .text	00000000000000cf              yaSSL::SSL_CTX::SSL_CTX(yaSSL::SSL_METHOD*)
0000000000b5408b l     F .text	0000000000000170              opt_search_plan
0000000000bde3b6 l     F .text	00000000000000ad              TaoCrypt::DH::GeneratePublic(unsigned char const*, unsigned char*)
0000000000a22b1d l     F .text	000000000000021f              trx_undo_truncate_start
0000000000c0005c l     F .text	00000000000000dc              mySTL::vector<TaoCrypt::WindowSlider>::push_back(TaoCrypt::WindowSlider const&)
0000000000bbb2ae l     F .text	0000000000000035              yaSSL::ServerKeyExchange::ServerKeyExchange()
0000000000bcb20a l     F .text	0000000000000033              yaSSL::HMAC_MD5::update(unsigned char const*, unsigned int)
0000000000bf73e2 l     F .text	0000000000000068              TaoCrypt::RSA_PublicKey::Initialize(TaoCrypt::Source&)
0000000000bbcaf0 l     F .text	0000000000000012              yaSSL::Finished::set_md5()
0000000000a28755 l     F .text	0000000000000196              ib_bh_pop
00000000009f9c16 l     F .text	0000000000000257              rw_lock_create_func
0000000000bcd4f2 l     F .text	0000000000000026              yaSSL::BulkCipher::~BulkCipher()
0000000000bbd195 l     F .text	000000000000005a              yaSSL::CreateCertificateRequest()
0000000000bc6118 l     F .text	0000000000000015              yaSSL::Security::GetContext() const
00000000010cd8a8 l     O .data	0000000000000000              __dso_handle
0000000000bbf256 l     F .text	000000000000002e              mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>::pair(int const&, yaSSL::ServerKeyBase* (* const&)())
000000000138e760 l     O .bss	0000000000000008              srv_data_written
0000000000bbf8f9 l     F .text	0000000000000030              void mySTL::destroy<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*>(mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*, mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*)
0000000000bb73b6 l     F .text	000000000000005c              yaSSL::DH_Server::DH_Server()
0000000000bba4d0 l     F .text	0000000000000025              yaSSL::ServerHello::get(yaSSL::output_buffer&) const
0000000000a2660d l     F .text	0000000000000300              ut_malloc_low
0000000000bc91ea l     F .text	0000000000000074              yaSSL::x509::operator=(yaSSL::x509 const&)
0000000000bf1284 l     F .text	00000000000000a3              TaoCrypt::MD4::MD4(TaoCrypt::MD4 const&)
0000000000bc5268 l     F .text	000000000000004f              yaSSL::SSL_METHOD::SSL_METHOD(yaSSL::ConnectionEnd, yaSSL::ProtocolVersion, bool)
0000000000bc8bd4 l     F .text	000000000000002e              yaSSL::input_buffer::eof()
0000000000bbeefe l     F .text	0000000000000035              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::~vector()
0000000000bce4ae l     F .text	000000000000002b              yaSSL::DSS::DSSImpl::DSSImpl()
0000000000bd7936 l     F .text	000000000000002a              TaoCrypt::PutBlock<unsigned int, TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 1>, true>::PutBlock(void const*, void*)
0000000000bb260d l     F .text	000000000000001a              yaX509_get_subject_name
0000000000bb883c l     F .text	000000000000004b              yaSSL::Data::Data()
0000000000b04dec l     F .text	000000000000004e              os_aio_simulated_wake_handler_threads
0000000000bfe4e8 l     F .text	000000000000000f              TaoCrypt::SHA256::getDigestSize() const
0000000000bc90c4 l     F .text	000000000000000b              yaSSL::Check::Check()
000000000138e7d8 l     O .bss	0000000000000008              srv_conc_n_threads
0000000000bc668e l     F .text	0000000000000046              yaSSL::Sessions::Sessions()
0000000000bce118 l     F .text	000000000000003c              TaoCrypt::Base64Decoder::Base64Decoder(TaoCrypt::Source&)
0000000000bb1721 l     F .text	00000000000003fd              yaSSL_connect
0000000000ae8b95 l     F .text	0000000000000178              lock_clust_rec_read_check_and_lock_alt
0000000000bbc46e l     F .text	0000000000000035              yaSSL::ClientKeyExchange::ClientKeyExchange()
00000000009f90c8 l     F .text	00000000000000ac              sync_arr_wake_threads_if_sema_free
0000000000bbdb72 l     F .text	0000000000000029              yaSSL::RSA_Server::RSA_Server()
0000000000bce1c0 l     F .text	000000000000001b              yaSSL::SHA::SHAImpl::SHAImpl()
0000000000bd854e l     F .text	0000000000000032              TaoCrypt::PublicKey::SetKey(unsigned char const*)
0000000000b2f4d5 l     F .text	0000000000000234              que_node_print_info
0000000000a2f61b l     F .text	000000000000021a              btr_get_next_user_rec
0000000000bc0342 l     F .text	0000000000000012              yaSSL::States::getString() const
0000000000bcbc2a l     F .text	000000000000004d              yaSSL::AES::~AES()
0000000000bcdf6e l     F .text	000000000000002b              TaoCrypt::DH::~DH()
0000000000a620c5 l     F .text	00000000000003f6              buf_page_get_known_nowait
0000000000b03558 l     F .text	0000000000000149              os_file_status
0000000000bd0110 l     F .text	0000000000000041              TaoCrypt::DES::~DES()
0000000000bb124d l     F .text	0000000000000080              yaSSLv3_client_method
0000000000acc61c l     F .text	0000000000000463              ibuf_insert
0000000000bb46c6 l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::BIGNUM>::~auto_ptr()
0000000000bf846e l     F .text	0000000000000092              TaoCrypt::SHA224::operator=(TaoCrypt::SHA224 const&)
0000000000bc7ec4 l     F .text	000000000000001a              mySTL::list<yaSSL::x509*>::iterator::iterator(mySTL::list<yaSSL::x509*>::node*)
0000000000bbc6b8 l     F .text	00000000000003fd              yaSSL::Finished::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000bcbcb6 l     F .text	0000000000000040              yaSSL::AES::set_encryptKey(unsigned char const*, unsigned char const*)
0000000000bbb464 l     F .text	000000000000005e              yaSSL::CertificateRequest::CertificateRequest()
0000000000bdea0c l     F .text	0000000000000012              TaoCrypt::DSA_PublicKey::GetPublicPart() const
0000000001395858 l     O .bss	0000000000000008              srv_latin1_ordering
0000000000bdeb28 l     F .text	0000000000000068              TaoCrypt::DSA_PrivateKey::Initialize(TaoCrypt::Source&)
0000000000bd501a l     F .text	000000000000021e              yaSSL::sendCertificateVerify(yaSSL::SSL&, yaSSL::BufferOutput)
0000000000bf1df0 l     F .text	000000000000003d              TaoCrypt::MD4::~MD4()
0000000000995a3f l     F .text	0000000000000102              innobase_check_identifier_length
0000000000aa75bd l     F .text	000000000000003e              fil_space_get_zip_size
0000000000bcd5b8 l     F .text	000000000000000f              yaSSL::AES::get_ivSize() const
0000000000bdfd9c l     F .text	0000000000000053              TaoCrypt::FileSource::FileSource(char const*, TaoCrypt::Source&)
0000000000ad7c3b l     F .text	000000000000010e              pars_procedure_definition
0000000000bb40da l     F .text	000000000000002b              TaoCrypt::DSA_PrivateKey::DSA_PrivateKey()
0000000000bdc79c l     F .text	000000000000003d              TaoCrypt::RSA_Public_Decoder::~RSA_Public_Decoder()
0000000000a278f5 l     F .text	0000000000000055              ut_2_power_up
0000000000bca462 l     F .text	000000000000004f              mySTL::list<TaoCrypt::Signer*>::~list()
0000000000bdc264 l     F .text	000000000000004c              TaoCrypt::Source::next()
0000000000bee2de l     F .text	0000000000000017              TaoCrypt::Integer::IsNegative() const
0000000000bd5400 l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::output_buffer>::operator->() const
0000000000bb3ef6 l     F .text	000000000000001b              TaoCrypt::Source::~Source()
0000000000bb3e1c l     F .text	0000000000000047              TaoCrypt::MD4::MD4()
0000000000bcca88 l     F .text	000000000000001e              yaSSL::DiffieHellman::~DiffieHellman()
0000000000bc74ca l     F .text	000000000000004b              mySTL::list<yaSSL::SSL_SESSION*>::begin() const
0000000000bdc906 l     F .text	0000000000000026              TaoCrypt::Signature_Encoder::~Signature_Encoder()
0000000000b1acaa l     F .text	000000000000006f              page_move_rec_list_start
0000000000bbf378 l     F .text	0000000000000035              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::~vector()
0000000000b06a9e l     F .text	0000000000000793              os_aio_print
00000000008cd670 l     F .text	0000000000000047              TaoCrypt::SHA256::SHA256()
0000000000bbfaa6 l     F .text	000000000000002f              mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>* mySTL::GetArrayMemory<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >(unsigned long)
0000000000ad6538 l     F .text	0000000000000052              pars_cursor_declaration
0000000000b32525 l     F .text	00000000000006c9              cmp_rec_rec_with_match
0000000000c00158 l     F .text	0000000000000029              mySTL::vector<mySTL::vector<TaoCrypt::Integer> >::operator[](unsigned long)
0000000000bf0884 l     F .text	000000000000003f              TaoCrypt::AllocatorWithCleanup<unsigned long>::reallocate(unsigned long*, unsigned long, unsigned long, bool)
0000000000ae8e69 l     F .text	0000000000000060              lock_trx_holds_autoinc_locks
0000000000bb24f4 l     F .text	0000000000000010              yaX509_STORE_CTX_get_error
0000000000bcc6fe l     F .text	000000000000001e              yaSSL::Integer::~Integer()
0000000000b53928 l     F .text	00000000000002fd              opt_find_all_cols
00000000010c9b80 l     O .data.rel.ro	0000000000000048              vtable for TaoCrypt::HASH
0000000000bbf30a l     F .text	000000000000006d              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::vector(unsigned long, mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> > const&)
0000000000b4ca28 l     F .text	00000000000000b5              rbt_search_cmp
0000000000bcb1dc l     F .text	000000000000002d              yaSSL::HMAC_MD5::get_digest(unsigned char*)
0000000000bdc1b8 l     F .text	0000000000000044              TaoCrypt::Source::IsLeft(unsigned int)
0000000000bc776e l     F .text	0000000000000046              mySTL::list<yaSSL::ThreadError>::end() const
0000000000995c7e l     F .text	000000000000003a              innobase_casedn_str
0000000000bd5858 l     F .text	0000000000000024              yaSSL::Socket::shutDown(int)
0000000000a221be l     F .text	00000000000002d1              trx_undo_add_page
0000000000bc6074 l     F .text	0000000000000096              yaSSL::Security::Security(yaSSL::ProtocolVersion, yaSSL::RandomPool&, yaSSL::ConnectionEnd, yaSSL::Ciphers const&, yaSSL::SSL_CTX*, bool)
0000000000a56851 l     F .text	00000000000000e2              btr_search_drop_page_hash_when_freed
0000000000bea6ae l     F .text	000000000000005e              TaoCrypt::Integer::ConvertToLong() const
0000000000bf0ab6 l     F .text	000000000000005d              TaoCrypt::MontgomeryRepresentation::~MontgomeryRepresentation()
0000000000bb56ee l     F .text	0000000000000206              yaSSL::EncryptedPreMasterSecret::build(yaSSL::SSL&)
0000000000bc6156 l     F .text	0000000000000015              yaSSL::Security::get_resuming() const
0000000000bb6972 l     F .text	0000000000000011              yaSSL::ClientDiffieHellmanPublic::get_length() const
0000000000bf80b2 l     F .text	00000000000000a5              TaoCrypt::SHA256::SHA256(TaoCrypt::SHA256 const&)
0000000000bbb698 l     F .text	0000000000000025              yaSSL::CertificateRequest::set(yaSSL::input_buffer&)
0000000000bc8046 l     F .text	0000000000000032              mySTL::list<yaSSL::SSL_SESSION*>::node::node(yaSSL::SSL_SESSION*)
0000000000a82bac l     F .text	000000000000020f              dict_drop_index_tree
0000000000bcf494 l     F .text	000000000000002d              yaSSL::DES_EDE::DES_EDEImpl::~DES_EDEImpl()
0000000000aba071 l     F .text	0000000000000377              flst_insert_before
0000000000bd5530 l     F .text	000000000000001e              yaSSL::Mutex::Lock::~Lock()
0000000000b4c8dd l     F .text	0000000000000096              rbt_upper_bound
0000000000bd99fa l     F .text	000000000000014e              TaoCrypt::CertDecoder::GetKey()
0000000000a9bf1c l     F .text	00000000000003a9              dict_load_table_on_id
0000000000bb7c33 l     F .text	00000000000000de              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::RecordLayerHeader const&)
0000000000bbe25a l     F .text	0000000000000024              mySTL::auto_array<unsigned char>::release()
0000000000bbdf2e l     F .text	0000000000000043              void yaSSL::ysDelete<yaSSL::ServerKeyBase>(yaSSL::ServerKeyBase*)
0000000000bffde4 l     F .text	0000000000000086              mySTL::vector<TaoCrypt::Integer>::vector(unsigned long)
0000000000bd484f l     F .text	000000000000029c              yaSSL::sendServerHello(yaSSL::SSL&, yaSSL::BufferOutput)
0000000000bce504 l     F .text	000000000000002f              TaoCrypt::DSA_Signer::~DSA_Signer()
0000000000bdf514 l     F .text	0000000000000077              TaoCrypt::Integer::operator%=(TaoCrypt::Integer const&)
00000000010f5e60 l     O .data	0000000000000068              i_s_innodb_buffer_page_lru
0000000000bbf07c l     F .text	0000000000000035              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::~vector()
0000000001396cec l     O .bss	0000000000000004              dict_foreign_err_mutex_key
0000000000bcf5d8 l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::AES, (TaoCrypt::Mode)1>::BlockCipher()
0000000000bf3178 l     F .text	00000000000000b8              TaoCrypt::RandomNumberGenerator::RandomNumberGenerator()
0000000000bc55e0 l     F .text	000000000000001e              yaSSL::SSL_CTX::SetPasswordCb(int (*)(char*, int, int, void*))
0000000000bc012f l     F .text	0000000000000040              yaSSL::ato16(unsigned char const*, unsigned short&)
0000000000bc5c3c l     F .text	0000000000000012              yaSSL::Crypto::get_cipher() const
0000000000b4c409 l     F .text	0000000000000044              rbt_free
0000000000a9215b l     F .text	000000000000005f              dict_index_get_if_in_cache
0000000000bc8739 l     F .text	000000000000001b              void yaSSL::checked_delete<yaSSL::input_buffer>(yaSSL::input_buffer*)
000000000099a5db l     F .text	0000000000000275              get_innobase_type_from_mysql_type
0000000000bd5576 l     F .text	000000000000000f              yaSSL::Log::Trace(char const*)
0000000000beba9c l     F .text	0000000000000062              TaoCrypt::Integer::DividedBy(unsigned long) const
0000000000a9e092 l     F .text	0000000000000280              dict_mem_table_create
0000000000a2286f l     F .text	00000000000002ae              trx_undo_truncate_end_func
0000000001396518 l     O .bss	0000000000000004              srv_lock_timeout_thread_key
0000000001397088 l     O .bss	0000000000000008              page_zip_compress_dbg
0000000000bb2af1 l     F .text	000000000000001d              yaSSL_CTX_sess_accept
0000000000bbde8c l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::HandShakeBase>::get() const
0000000000bbd2fd l     F .text	000000000000005a              yaSSL::CreateFinished()
0000000000bb16cd l     F .text	0000000000000032              yaSSL_set_fd
0000000000bb817a l     F .text	0000000000000013              yaSSL::HelloRequest::Process(yaSSL::input_buffer&, yaSSL::SSL&)
00000000010f5ed8 l     O .data	0000000000000001              srv_use_native_aio
0000000000c002f2 l     F .text	000000000000005c              mySTL::vector_base<TaoCrypt::Integer>::vector_base(unsigned long)
0000000000be86e0 l     F .text	00000000000000e6              TaoCrypt::DivideByPower2Mod(unsigned long*, unsigned long const*, unsigned int, unsigned long const*, unsigned int)
0000000000b4cbd5 l     F .text	000000000000005c              rbt_clear
0000000000bffd1f l     F .text	0000000000000043              TaoCrypt::WindowSlider* mySTL::uninit_copy<TaoCrypt::WindowSlider*, TaoCrypt::WindowSlider*>(TaoCrypt::WindowSlider*, TaoCrypt::WindowSlider*, TaoCrypt::WindowSlider*)
0000000000bd560a l     F .text	000000000000000b              yaSSL::Socket::~Socket()
0000000000b100a1 l     F .text	00000000000008b4              page_cur_parse_insert_rec
0000000000bca34e l     F .text	0000000000000011              TaoCrypt::CertDecoder::GetKeyType() const
0000000000bc55b6 l     F .text	0000000000000014              yaSSL::SSL_CTX::GetStats() const
0000000000a6602d l     F .text	000000000000007e              buf_get_n_pending_ios
0000000000befa06 l     F .text	0000000000000031              TaoCrypt::Square(unsigned long*, unsigned long*, unsigned long const*, unsigned int)
0000000000bdc082 l     F .text	0000000000000031              TaoCrypt::DER_Encoder::~DER_Encoder()
0000000000bedf4d l     F .text	0000000000000012              TaoCrypt::BytesToWords(unsigned int)
0000000000bca386 l     F .text	0000000000000012              TaoCrypt::CertDecoder::GetHash() const
0000000000bd7814 l     F .text	0000000000000087              void TaoCrypt::GetUserKey<unsigned int>(TaoCrypt::ByteOrder, unsigned int*, unsigned int, unsigned char const*, unsigned int)
0000000000bbde56 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::HandShakeBase>::auto_ptr(yaSSL::HandShakeBase*)
0000000000bce264 l     F .text	000000000000001b              yaSSL::HMAC_MD5::HMAC_MD5Impl::HMAC_MD5Impl()
00000000009a1dd6 l     F .text	0000000000000a02              ha_innobase::check(THD*, st_ha_check_opt*)
0000000000a24bf5 l     F .text	000000000000018f              trx_undo_set_state_at_finish
00000000010f620c l     O .data	0000000000000004              pars_sum_token
0000000000bce244 l     F .text	000000000000001f              TaoCrypt::HMAC<TaoCrypt::MD5>::~HMAC()
0000000000bd770a l     F .text	0000000000000041              TaoCrypt::AES::PreFetchCTd4() const
0000000000bceb2c l     F .text	000000000000001b              yaSSL::MD5::MD5Impl::~MD5Impl()
0000000000aef5a1 l     F .text	0000000000000230              log_shutdown
0000000000b0388f l     F .text	000000000000011d              os_file_create_subdirs_if_needed
0000000000b2d89b l     F .text	000000000000012c              que_graph_publish
0000000000af24b8 l     F .text	00000000000001a2              recv_sys_init
0000000000bb818e l     F .text	000000000000000f              yaSSL::HelloRequest::get_type() const
0000000000bce2dc l     F .text	000000000000001b              yaSSL::HMAC_RMD::HMAC_RMDImpl::HMAC_RMDImpl()
0000000000bc5e5c l     F .text	000000000000005c              yaSSL::Buffers::Buffers()
0000000001395860 l     O .bss	0000000000000004              srv_misc_tmpfile_mutex_key
0000000001396e60 l     O .bss	0000000000000008              yylval
0000000000bb3b4a l     F .text	000000000000000b              yaX509_LOOKUP_hash_dir
0000000000b02e2f l     F .text	0000000000000041              os_file_set_eof
0000000000bb9078 l     F .text	00000000000005e2              yaSSL::Data::Process(yaSSL::input_buffer&, yaSSL::SSL&)
00000000009e8d87 l     F .text	000000000000026b              row_upd_step
0000000000afd7bc l     F .text	0000000000000341              mlog_parse_nbytes
00000000009cfe36 l     F .text	0000000000000173              row_rec_to_index_entry
0000000000bc8f76 l     F .text	0000000000000047              yaSSL::output_buffer::allocate(unsigned int)
00000000010cca88 l     O .data.rel.ro	0000000000000060              vtable for TaoCrypt::SHA256
0000000000bbdd36 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::Auth>::auto_ptr(yaSSL::Auth*)
0000000000a88e9e l     F .text	0000000000000070              dict_table_autoinc_update_if_greater
0000000000b185ec l     F .text	00000000000000fb              page_set_max_trx_id
0000000000bb2671 l     F .text	0000000000000013              yaSSL_CTX_sess_set_cache_size
0000000000bee88e l     F .text	000000000000007f              TaoCrypt::EuclideanDomainOf::Subtract(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bccc40 l     F .text	0000000000000015              yaSSL::DiffieHellman::get_publicKey() const
0000000000bdfa18 l     F .text	0000000000000037              TaoCrypt::AbstractRing::MultiplicativeGroupT::Double(TaoCrypt::Integer const&) const
0000000000bdbb57 l     F .text	000000000000017f              TaoCrypt::EncodeDSA_Signature(TaoCrypt::Integer const&, TaoCrypt::Integer const&, unsigned char*)
0000000001396ea0 l     O .bss	0000000000000008              recv_n_pool_free_frames
0000000000bffa42 l     F .text	0000000000000055              TaoCrypt::AbstractRing::SimultaneousExponentiate(TaoCrypt::Integer*, TaoCrypt::Integer const&, TaoCrypt::Integer const*, unsigned int) const
0000000000bbde70 l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::HandShakeBase>::~auto_ptr()
00000000008cd7d2 l     F .text	0000000000000026              TaoCrypt::SHA512::~SHA512()
0000000000a639c2 l     F .text	00000000000005c1              buf_page_create
0000000000bca7da l     F .text	0000000000000032              mySTL::list<TaoCrypt::Signer*>::node::node(TaoCrypt::Signer*)
0000000000b2f088 l     F .text	0000000000000180              que_thr_stop_for_mysql
0000000000bb4122 l     F .text	000000000000007f              TaoCrypt::RSA_PrivateKey::~RSA_PrivateKey()
0000000000998c64 l     F .text	000000000000000f              ha_innobase::primary_key_is_clustered()
0000000000bb4b34 l     F .text	0000000000000041              yaSSL::Finished::~Finished()
0000000000a712f4 l     F .text	00000000000001ae              buf_LRU_try_free_flushed_blocks
0000000000bf77f6 l     F .text	000000000000013b              TaoCrypt::RSA_BlockType2::UnPad(unsigned char const*, unsigned int, unsigned char*) const
0000000000a88e48 l     F .text	0000000000000056              dict_table_autoinc_read
0000000000bb2bc2 l     F .text	000000000000001e              yaSSL_CTX_sess_cb_hits
0000000000bb55a6 l     F .text	00000000000000a4              yaSSL::ClientKeyExchange::createKey(yaSSL::SSL&)
0000000000be008c l     F .text	000000000000005c              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::Swap(TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >&)
0000000000bb3a9b l     F .text	0000000000000010              yaERR_peek_error
0000000000a2524e l     F .text	000000000000039e              trx_undo_insert_cleanup
0000000000bb24d7 l     F .text	000000000000000b              yaX509_free
0000000000bca93a l     F .text	000000000000004d              yaSSL::MD5::~MD5()
0000000000bb68fe l     F .text	000000000000004d              yaSSL::ClientDiffieHellmanPublic::~ClientDiffieHellmanPublic()
0000000000bcf2fc l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES, (TaoCrypt::Mode)1>::BlockCipher()
0000000000bb2bfe l     F .text	000000000000001e              yaSSL_CTX_sess_misses
0000000000a67252 l     F .text	00000000000000c4              buf_refresh_io_stats
0000000000bebcd2 l     F .text	000000000000019c              TaoCrypt::Integer::SquareRoot() const
0000000000c007d3 l     F .text	0000000000000023              void mySTL::FreeArrayMemory<TaoCrypt::Integer>(TaoCrypt::Integer*)
0000000000bc5d86 l     F .text	0000000000000018              yaSSL::Crypto::DhSet()
0000000000bc5fc4 l     F .text	000000000000001b              yaSSL::Buffers::SetRawInput(yaSSL::input_buffer*)
0000000001391098 l     O .bss	0000000000000008              buf_debug_prints
0000000000bc6284 l     F .text	0000000000000011              yaSSL::X509_NAME::GetName() const
0000000000bc6cfe l     F .text	000000000000002c              yaSSL::Factory<yaSSL::Message, int, yaSSL::Message* (*)()>::Factory(void (*)(yaSSL::Factory<yaSSL::Message, int, yaSSL::Message* (*)()>&))
0000000001396bc8 l     O .bss	0000000000000008              btr_search_latch_temp
0000000000bb2ebb l     F .text	000000000000000b              yaERR_print_errors_fp
00000000009a962d l     F .text	00000000000001d9              innobase_rec_to_mysql
0000000000bdc864 l     F .text	000000000000003d              TaoCrypt::RSA_Private_Decoder::~RSA_Private_Decoder()
0000000000bb557c l     F .text	000000000000002a              yaSSL::ProtocolVersion::ProtocolVersion(unsigned char, unsigned char)
0000000000bc00e8 l     F .text	0000000000000047              yaSSL::c24to32(unsigned char const*)
00000000009f9e6d l     F .text	0000000000000241              rw_lock_free_func
00000000009a3772 l     F .text	0000000000000196              ha_innobase::extra(ha_extra_function)
0000000000bbe248 l     F .text	0000000000000011              mySTL::auto_array<unsigned char>::get() const
0000000000a5fa73 l     F .text	0000000000000133              buf_page_reset_file_page_was_freed
0000000000bc5c4e l     F .text	0000000000000012              yaSSL::Crypto::get_dh() const
0000000000bc733e l     F .text	00000000000000a7              mySTL::list<yaSSL::output_buffer*>::push_back(yaSSL::output_buffer*)
0000000000bd7bb9 l     F .text	000000000000002a              unsigned int TaoCrypt::UnalignedGetWord<unsigned int>(TaoCrypt::ByteOrder, unsigned char const*, unsigned int*)
00000000009d0a2f l     F .text	000000000000013c              row_search_on_row_ref
0000000000bbf230 l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::Swap(mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >&)
0000000000bb2d85 l     F .text	000000000000003a              yaDH_free
0000000000bc431e l     F .text	0000000000000030              yaSSL::SSL::GetMultiProtocol() const
0000000000a0ff30 l     F .text	0000000000000067              trx_roll_savepoints_free
0000000000bb3b73 l     F .text	000000000000001a              yaX509_STORE_get_by_subject
0000000000bb2138 l     F .text	000000000000001d              yaSSL_get_quiet_shutdown
0000000000bd8776 l     F .text	0000000000000078              TaoCrypt::BER_Decoder::GetInteger(TaoCrypt::Integer&)
00000000009fa1c6 l     F .text	0000000000000313              rw_lock_s_lock_spin
0000000000bb3e64 l     F .text	000000000000004c              TaoCrypt::Source::Source(unsigned char const*, unsigned int)
00000000009fb7c7 l     F .text	0000000000000083              mutex_own
0000000000bc43ac l     F .text	0000000000000014              yaSSL::SSL::useLog()
0000000000bb9d60 l     F .text	0000000000000048              yaSSL::ServerDHParams::alloc_pub(int)
0000000000bedfc2 l     F .text	000000000000003b              TaoCrypt::CountWords(unsigned long const*, unsigned int)
0000000000bb3d50 l     F .text	000000000000001e              yaSSL::EncryptedInfo::EncryptedInfo()
0000000000bb2c76 l     F .text	000000000000001d              yaSSL_CTX_get_verify_mode
0000000000bbe40c l     F .text	000000000000006c              yaSSL::Factory<yaSSL::ServerKeyBase, int, yaSSL::ServerKeyBase* (*)()>::Register(int const&, yaSSL::ServerKeyBase* (*)())
0000000000bbe354 l     F .text	0000000000000026              yaSSL::Factory<yaSSL::HandShakeBase, int, yaSSL::HandShakeBase* (*)()>::Reserve(unsigned long)
0000000000bcc336 l     F .text	00000000000000c6              yaSSL::RSA::RSA(unsigned char const*, unsigned int, bool)
0000000000bc4a26 l     F .text	0000000000000071              yaSSL::GetErrors()
0000000000bc6a34 l     F .text	000000000000002b              yaSSL::DH_Parms::~DH_Parms()
0000000001391070 l     O .bss	0000000000000008              btr_cur_n_sea
0000000000bb24e2 l     F .text	0000000000000012              yaX509_STORE_CTX_get_current_cert
0000000000bc4284 l     F .text	0000000000000014              yaSSL::SSL::getSecurity() const
00000000009fbda9 l     F .text	000000000000017b              sync_print_wait_info
0000000000bec9c6 l     F .text	00000000000001b8              TaoCrypt::ModularArithmetic::Accumulate(TaoCrypt::Integer&, TaoCrypt::Integer const&) const
0000000000bc52f0 l     F .text	0000000000000013              yaSSL::SSL_METHOD::setVerifyNone()
0000000000bd2b81 l     F .text	00000000000002b7              yaSSL::TLS_hmac(yaSSL::SSL&, unsigned char*, unsigned char const*, unsigned int, yaSSL::ContentType, bool)
0000000000bb65dc l     F .text	0000000000000040              yaSSL::EncryptedPreMasterSecret::EncryptedPreMasterSecret()
0000000000bcd588 l     F .text	000000000000000f              yaSSL::RC4::get_keySize() const
0000000000bcf46e l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::BlockCipher()
0000000000bc0017 l     F .text	0000000000000023              operator new[](unsigned long, yaSSL::new_t)
0000000000afe456 l     F .text	00000000000003f1              mlog_parse_index
0000000000b51157 l     F .text	00000000000000cf              assign_step
0000000000bb4c04 l     F .text	0000000000000041              yaSSL::Alert::~Alert()
0000000000a7c20f l     F .text	000000000000047e              dtype_print
0000000000a17131 l     F .text	0000000000000088              trx_in_trx_list
00000000008cd700 l     F .text	0000000000000047              TaoCrypt::SHA512::SHA512()
0000000001396cf0 l     O .bss	0000000000000004              dict_sys_mutex_key
0000000000bc534e l     F .text	0000000000000012              yaSSL::SSL_METHOD::multipleProtocol() const
0000000000c005c2 l     F .text	0000000000000026              mySTL::vector<TaoCrypt::WindowSlider>::Swap(mySTL::vector<TaoCrypt::WindowSlider>&)
0000000000aa73e8 l     F .text	00000000000001d5              fil_space_get_flags
0000000000bc9834 l     F .text	0000000000000012              yaSSL::CertManager::get_peerX509() const
0000000001393898 l     O .bss	0000000000000008              log_fsp_current_free_limit
00000000009cf5a5 l     F .text	0000000000000643              row_build
0000000000bde898 l     F .text	0000000000000062              TaoCrypt::DSA_PublicKey::DSA_PublicKey(TaoCrypt::Source&)
0000000000a1124f l     F .text	00000000000004dc              trx_roll_pop_top_rec_of_trx
0000000000be886a l     F .text	0000000000000063              TaoCrypt::Integer::Integer()
0000000000becb7e l     F .text	00000000000001c8              TaoCrypt::ModularArithmetic::Subtract(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bbf846 l     F .text	0000000000000052              mySTL::vector_base<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::vector_base(unsigned long)
0000000000a0528f l     F .text	000000000000020c              trx_purge_fetch_next_rec
0000000000bbdaf4 l     F .text	0000000000000029              yaSSL::ServerKeyBase::ServerKeyBase()
0000000000bce1dc l     F .text	0000000000000026              yaSSL::SHA::SHAImpl::SHAImpl(TaoCrypt::SHA const&)
0000000000a6735c l     F .text	0000000000000056              buf_all_freed
0000000000bc9480 l     F .text	0000000000000015              yaSSL::CertManager::verifyPeer() const
0000000000bdba81 l     F .text	0000000000000030              TaoCrypt::SetSequence(unsigned int, unsigned char*)
0000000000bc8c74 l     F .text	00000000000000ad              yaSSL::input_buffer::assign(unsigned char const*, unsigned int)
0000000000bbcab6 l     F .text	000000000000003a              yaSSL::Finished::Finished()
0000000000bcaae2 l     F .text	000000000000002d              yaSSL::MD5::get_digest(unsigned char*)
00000000013938b0 l     O .bss	0000000000000008              log_debug_writes
0000000000bc7ede l     F .text	000000000000001a              mySTL::list<yaSSL::input_buffer*>::iterator::iterator(mySTL::list<yaSSL::input_buffer*>::node*)
0000000000b2fd76 l     F .text	0000000000000132              que_run_threads
0000000000bb3f4e l     F .text	000000000000001b              TaoCrypt::Integer::~Integer()
0000000001396e80 l     O .bss	0000000000000008              log_last_warning_time
0000000000b04f8b l     F .text	0000000000000468              os_aio_func
0000000001396f88 l     O .bss	0000000000000008              os_sync_mutex
00000000009eefd5 l     F .text	00000000000000ce              srv_thread_has_reserved_slot
00000000010f621c l     O .data	0000000000000004              pars_int_token
0000000000aee1cb l     F .text	00000000000000c4              log_group_read_checkpoint_info
00000000009f90ae l     F .text	000000000000001a              sync_array_object_signalled
000000000138e868 l     O .bss	0000000000000008              srv_n_lock_max_wait_time
0000000000bb3bd2 l     F .text	0000000000000013              yaSSL_CTX_set_timeout
0000000000abdcf9 l     F .text	0000000000000057              hash_mutex_exit_all
0000000000bcdafc l     F .text	000000000000000b              TaoCrypt::BasicDES::BasicDES()
0000000000bcc78e l     F .text	0000000000000032              yaSSL::Integer::operator=(yaSSL::Integer const&)
0000000000bc674c l     F .text	0000000000000033              yaSSL::DH_Parms::DH_Parms()
0000000000ae81e3 l     F .text	0000000000000327              lock_sec_rec_modify_check_and_lock
0000000000bd55ba l     F .text	0000000000000027              yaSSL::Socket::Socket(int)
0000000000bf0188 l     F .text	0000000000000053              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::resize(unsigned int)
0000000000bb74b8 l     F .text	0000000000000012              yaSSL::DH_Server::get_serverKey() const
0000000000bca4fe l     F .text	0000000000000046              mySTL::list<TaoCrypt::Signer*>::end() const
0000000000bf3102 l     F .text	0000000000000069              TaoCrypt::XorWords(unsigned long*, unsigned long const*, unsigned int)
0000000000b08476 l     F .text	0000000000000190              os_mutex_create
00000000009e4a11 l     F .text	000000000000011e              upd_node_create
0000000000bbfb36 l     F .text	000000000000002f              mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>* mySTL::GetArrayMemory<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >(unsigned long)
0000000000bc3ee8 l     F .text	000000000000018b              yaSSL::SSL::verifyServerState(yaSSL::HandShakeType)
0000000000be9622 l     F .text	00000000000000cf              TaoCrypt::Integer::operator+=(TaoCrypt::Integer const&)
0000000001396ea8 l     O .bss	0000000000000004              trx_rollback_clean_thread_key
0000000000bbda80 l     F .text	0000000000000026              yaSSL::ClientKeyBase::~ClientKeyBase()
0000000000ac687b l     F .text	00000000000000d1              ibuf_bitmap_page_init
0000000000ade98d l     F .text	000000000000011e              lock_is_table_exclusive
0000000000bef9c9 l     F .text	000000000000003d              TaoCrypt::Multiply(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
0000000000a2826e l     F .text	00000000000000a1              ib_vector_create
0000000000bbf18c l     F .text	000000000000006d              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::vector(unsigned long, mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> > const&)
0000000000bef242 l     F .text	000000000000000b              TaoCrypt::DWord::DWord()
0000000000bd5298 l     F .text	0000000000000037              mySTL::auto_ptr<yaSSL::Digest>::reset(yaSSL::Digest*)
0000000000bc4ba6 l     F .text	0000000000000098              yaSSL::Sessions::~Sessions()
000000000099e0d2 l     F .text	00000000000000e7              ha_innobase::rnd_next(unsigned char*)
00000000009fb21c l     F .text	0000000000000243              mutex_create_func
000000000136cb48 l     O .data	0000000000000008              TaoCrypt::AES::Te3
0000000000be0ab0 l     F .text	0000000000000029              TaoCrypt::HASH::HASH()
0000000000bc68b0 l     F .text	000000000000001b              yaSSL::Factory<yaSSL::ServerKeyBase, int, yaSSL::ServerKeyBase* (*)()>::~Factory()
0000000001396be0 l     O .bss	0000000000000040              btr_sea_pad1
0000000000bce2a0 l     F .text	000000000000001b              yaSSL::HMAC_SHA::HMAC_SHAImpl::HMAC_SHAImpl()
00000000009a0d7a l     F .text	000000000000018d              ha_innobase::estimate_rows_upper_bound()
0000000000bb3c5e l     F .text	000000000000000f              yaSSL_get_current_cipher
0000000000bc4c3e l     F .text	000000000000000b              yaSSL::yassl_int_cpp_local2::GetSelf()
0000000000bbe1f4 l     F .text	000000000000001b              mySTL::auto_array<unsigned char>::~auto_array()
0000000000a92453 l     F .text	00000000000000c2              dict_index_copy_rec_order_prefix
0000000000998b7c l     F .text	0000000000000054              ha_innobase::table_flags() const
00000000010f5fe8 l     O .data	0000000000000008              trx_i_s_cache
0000000000bbdda4 l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::Auth>::operator->() const
0000000000bf82a4 l     F .text	00000000000000a5              TaoCrypt::SHA384::SHA384(TaoCrypt::SHA384 const&)
0000000000ac7fe1 l     F .text	000000000000008e              ibuf_rec_get_counter
0000000000c006ec l     F .text	000000000000006d              mySTL::vector<TaoCrypt::Integer>::vector(unsigned long, mySTL::vector<TaoCrypt::Integer> const&)
0000000000ade74a l     F .text	0000000000000065              lock_sys_close
0000000000bcf738 l     F .text	000000000000002b              yaSSL::DSS::DSSImpl::~DSSImpl()
0000000000bb2722 l     F .text	0000000000000067              yaSSL_CTX_set_verify
0000000000a91a61 l     F .text	000000000000012d              dict_create_foreign_constraints
0000000000bc90c4 l     F .text	000000000000000b              yaSSL::Check::Check()
0000000000bd5262 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::Digest>::auto_ptr(yaSSL::Digest*)
0000000000bc7ec4 l     F .text	000000000000001a              mySTL::list<yaSSL::x509*>::iterator::iterator(mySTL::list<yaSSL::x509*>::node*)
0000000000bcd49a l     F .text	0000000000000026              yaSSL::Digest::~Digest()
000000000136cb50 l     O .data	0000000000000008              TaoCrypt::AES::Td0
0000000000bb3b98 l     F .text	000000000000000e              yaSSL_alert_type_string_long
0000000000bb968a l     F .text	0000000000000030              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::HandShakeBase const&)
0000000000bba3a6 l     F .text	0000000000000077              yaSSL::ServerHello::ServerHello()
0000000000a24638 l     F .text	00000000000005bd              trx_undo_assign_undo
0000000000bbdd50 l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::Auth>::~auto_ptr()
0000000000a25f95 l     F .text	00000000000000a7              sess_close
0000000000beeabc l     F .text	000000000000001e              TaoCrypt::EuclideanDomainOf::IsUnit(TaoCrypt::Integer const&) const
0000000000bb36bb l     F .text	000000000000008b              yaASN1_STRING_to_UTF8
0000000000bb7df2 l     F .text	000000000000004f              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::HandShakeHeader const&)
0000000000bc5df4 l     F .text	0000000000000012              yaSSL::sslHashes::get_verify() const
0000000000ab3741 l     F .text	0000000000000513              fseg_create_general
0000000000bcf494 l     F .text	000000000000002d              yaSSL::DES_EDE::DES_EDEImpl::~DES_EDEImpl()
0000000000bbd1ef l     F .text	000000000000005a              yaSSL::CreateServerHelloDone()
0000000000be912c l     F .text	0000000000000044              TaoCrypt::Integer::Integer(TaoCrypt::RandomNumberGenerator&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bc6006 l     F .text	0000000000000026              yaSSL::Buffers::TakeOutput()
0000000000bedffd l     F .text	0000000000000040              TaoCrypt::SetWords(unsigned long*, unsigned long, unsigned int)
0000000000abdc68 l     F .text	000000000000002e              hash_mutex_exit
0000000001067bd8 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::MD5
0000000000ae916d l     F .text	0000000000000025              lock_get_table_id
0000000000bbf07c l     F .text	0000000000000035              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::~vector()
0000000000bb5a20 l     F .text	0000000000000959              yaSSL::DH_Server::build(yaSSL::SSL&)
0000000000bb3603 l     F .text	000000000000001f              yaASN1_STRING_length
0000000000bc6642 l     F .text	000000000000004b              yaSSL::X509::~X509()
0000000000c004e2 l     F .text	000000000000002e              mySTL::vector_base<TaoCrypt::WindowSlider>::vector_base()
0000000000bc6f3c l     F .text	0000000000000028              mySTL::list<yaSSL::input_buffer*>::front() const
0000000000bc8abe l     F .text	0000000000000011              yaSSL::input_buffer::get_error() const
0000000000bb41ce l     F .text	000000000000001b              yaSSL::BIGNUM::BIGNUM()
000000000138e6b0 l     O .bss	0000000000000008              srv_activity_count
0000000000bce280 l     F .text	000000000000001f              TaoCrypt::HMAC<TaoCrypt::SHA>::~HMAC()
0000000001396c90 l     O .bss	0000000000000004              buf_pool_zip_mutex_key
0000000000bbfb65 l     F .text	0000000000000023              void mySTL::FreeArrayMemory<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >(mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*)
0000000000bcef54 l     F .text	000000000000001b              yaSSL::HMAC_SHA::HMAC_SHAImpl::~HMAC_SHAImpl()
0000000001396c20 l     O .bss	0000000000000004              btr_search_latch_key
0000000000be8a4c l     F .text	000000000000008b              TaoCrypt::Integer::Integer(unsigned long, unsigned int)
0000000000bdc6d4 l     F .text	000000000000003d              TaoCrypt::DH_Decoder::~DH_Decoder()
0000000000bdff8a l     F .text	0000000000000053              TaoCrypt::FileSink::FileSink(char const*, TaoCrypt::Source&)
0000000000b3945f l     F .text	000000000000029b              rec_validate
0000000000a7a996 l     F .text	0000000000000102              dtuple_check_typed_no_assert
00000000010f5f70 l     O .data	0000000000000008              srv_max_n_open_files
0000000000bbf9d8 l     F .text	000000000000000b              void mySTL::destroy<mySTL::pair<int, yaSSL::Message* (*)()> >(mySTL::pair<int, yaSSL::Message* (*)()>*)
0000000000bba570 l     F .text	000000000000003a              yaSSL::ServerHelloDone::ServerHelloDone()
0000000000bbcd70 l     F .text	0000000000000021              yaSSL::Connection::TurnOffTLS()
0000000000bc4410 l     F .text	0000000000000015              yaSSL::SSL::HasData() const
0000000000af9afb l     F .text	00000000000003a3              mem_pool_create
0000000000bb8156 l     F .text	0000000000000012              yaSSL::HelloRequest::set(yaSSL::input_buffer&)
00000000013935c8 l     O .bss	0000000000000008              fil_n_log_flushes
00000000009f4905 l     F .text	0000000000000137              srv_parse_log_group_home_dirs
0000000000bdf74c l     F .text	0000000000000035              TaoCrypt::AbstractGroup::~AbstractGroup()
0000000000bb2155 l     F .text	000000000000003d              yaSSL_CTX_set_session_cache_mode
0000000001066540 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::Data
0000000000b07c80 l     F .text	0000000000000186              os_event_create
0000000000bbd249 l     F .text	000000000000005a              yaSSL::CreateCertificateVerify()
0000000000998a86 l     F .text	00000000000000f5              ha_innobase::get_row_type() const
0000000000bbc623 l     F .text	0000000000000012              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::Finished&)
0000000000bc7d3e l     F .text	000000000000004b              yaSSL::sslFactory::~sslFactory()
0000000000a9260d l     F .text	0000000000000179              dict_index_calc_min_rec_len
0000000000a3161c l     F .text	00000000000006c1              btr_root_raise_and_insert
00000000010664c0 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::ServerKeyBase
0000000000bb4324 l     F .text	000000000000002f              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::~Block()
0000000000bc43e8 l     F .text	0000000000000027              yaSSL::SSL::isTLSv1_1() const
0000000000bd7b8c l     F .text	000000000000002d              unsigned int TaoCrypt::ByteReverseIf<unsigned int>(unsigned int, TaoCrypt::ByteOrder)
0000000000a66cf8 l     F .text	00000000000002cc              buf_print_io_instance
00000000010f61dc l     O .data	0000000000000004              pars_binary_to_number_token
0000000000bffe6a l     F .text	0000000000000035              mySTL::vector<TaoCrypt::Integer>::~vector()
0000000000bee67c l     F .text	0000000000000051              TaoCrypt::AbstractEuclideanDomain::~AbstractEuclideanDomain()
0000000000aca553 l     F .text	0000000000000044              ibuf_contract
0000000000bbd63a l     F .text	000000000000018d              yaSSL::InitHandShakeFactory(yaSSL::Factory<yaSSL::HandShakeBase, int, yaSSL::HandShakeBase* (*)()>&)
000000000138e6e8 l     O .bss	0000000000000008              srv_locks_unsafe_for_binlog
0000000000a5c2a4 l     F .text	000000000000012e              buf_pool_get_oldest_modification
0000000001396e44 l     O .bss	0000000000000004              autoinc_mutex_key
0000000000bd589c l     F .text	0000000000000012              yaSSL::Socket::IsNonBlocking() const
00000000009efe80 l     F .text	000000000000002f              srv_boot
0000000000b0771f l     F .text	00000000000001c5              os_mem_free_large
0000000000ab530e l     F .text	0000000000000372              fsp_get_available_space_in_free_extents
0000000000bc8876 l     F .text	000000000000009d              yaSSL::input_buffer::input_buffer(unsigned int, unsigned char const*, unsigned int)
0000000000bcba4c l     F .text	000000000000004d              yaSSL::RC4::~RC4()
0000000000af2216 l     F .text	0000000000000108              recv_sys_close
00000000009c7755 l     F .text	0000000000000070              row_mysql_unlock_data_dictionary
0000000001068230 l     O .data.rel.ro	0000000000000080              vtable for TaoCrypt::AbstractRing::MultiplicativeGroupT
0000000000bf7f50 l     F .text	00000000000000bc              TaoCrypt::SHA384::Init()
0000000000bce00e l     F .text	0000000000000041              TaoCrypt::DH::Swap(TaoCrypt::DH&)
00000000013966c8 l     O .bss	0000000000000004              trx_i_s_cache_lock_key
0000000000ab4f99 l     F .text	0000000000000375              fsp_reserve_free_extents
0000000001066380 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::ServerKeyExchange
0000000000b2dae0 l     F .text	00000000000001b3              que_thr_create
0000000000bd86ac l     F .text	0000000000000090              TaoCrypt::Signer::Signer(unsigned char const*, unsigned int, char const*, unsigned char const*)
00000000008cd748 l     F .text	0000000000000047              TaoCrypt::SHA384::SHA384()
0000000000bb2684 l     F .text	000000000000000f              yaSSL_CTX_get_session_cache_mode
0000000000bc7a8e l     F .text	00000000000000a7              mySTL::list<yaSSL::x509*>::push_back(yaSSL::x509*)
00000000009c5c5f l     F .text	0000000000000177              row_update_prebuilt_trx
0000000000b190fd l     F .text	0000000000000407              page_copy_rec_list_end_no_locks
0000000000b4fe7f l     F .text	000000000000079f              buf_buddy_free_low
0000000000bdc738 l     F .text	000000000000003d              TaoCrypt::DSA_Public_Decoder::~DSA_Public_Decoder()
0000000000aca597 l     F .text	0000000000000089              ibuf_contract_for_n_pages
0000000000bb4ac2 l     F .text	0000000000000047              void yaSSL::ysDelete<yaSSL::BulkCipher>(yaSSL::BulkCipher*)
00000000008cd90a l     F .text	0000000000000026              TaoCrypt::SHA224::~SHA224()
0000000000bb3b8d l     F .text	000000000000000b              yaX509_STORE_new
0000000000a26e1d l     F .text	0000000000000071              ut_strlcpy
0000000000bc80e0 l     F .text	00000000000000a5              mySTL::list<yaSSL::SSL_SESSION*>::pop_front()
0000000000bee6f4 l     F .text	0000000000000039              TaoCrypt::EuclideanDomainOf::EuclideanDomainOf()
0000000000be00f4 l     F .text	000000000000002f              TaoCrypt::HASHwithTransform::HASHwithTransform(unsigned int, unsigned int)
0000000000bb8444 l     F .text	0000000000000025              yaSSL::Alert::set(yaSSL::input_buffer&)
0000000000bd0110 l     F .text	0000000000000041              TaoCrypt::DES::~DES()
0000000000a89880 l     F .text	0000000000000949              dict_table_add_to_cache
0000000000bb3622 l     F .text	000000000000001e              yaASN1_STRING_type
0000000000be94f8 l     F .text	000000000000003b              TaoCrypt::Integer::Negate()
0000000000bf7cac l     F .text	0000000000000038              TaoCrypt::RSA_Private_Decoder::RSA_Private_Decoder(TaoCrypt::Source&)
0000000000bc83d8 l     F .text	0000000000000047              mySTL::list<yaSSL::ThreadError>::node::node(yaSSL::ThreadError)
0000000000bd4aeb l     F .text	0000000000000193              yaSSL::sendServerHelloDone(yaSSL::SSL&, yaSSL::BufferOutput)
0000000000bf8500 l     F .text	0000000000000092              TaoCrypt::SHA512::operator=(TaoCrypt::SHA512 const&)
0000000000bdf9ca l     F .text	000000000000004e              TaoCrypt::AbstractRing::MultiplicativeGroupT::Reduce(TaoCrypt::Integer&, TaoCrypt::Integer const&) const
0000000000bc9340 l     F .text	0000000000000140              yaSSL::CertManager::~CertManager()
0000000000bcdc58 l     F .text	000000000000004c              TaoCrypt::RandomNumberGenerator::GetError() const
0000000000bce454 l     F .text	000000000000003d              yaSSL::AES::AESImpl::AESImpl(unsigned int)
00000000010f61d0 l     O .data	0000000000000004              pars_to_char_token
0000000000bbf486 l     F .text	0000000000000052              mySTL::vector_base<mySTL::pair<int, yaSSL::Message* (*)()> >::vector_base(unsigned long)
0000000000bbfff5 l     F .text	0000000000000022              operator delete(void*, yaSSL::new_t)
0000000000a00dbf l     F .text	0000000000000068              trx_i_s_cache_end_read
0000000000bc5640 l     F .text	000000000000001e              yaSSL::SSL_CTX::SetUserData(void*)
0000000000bd598a l     F .text	0000000000000b08              TaoCrypt::AES::SetKey(unsigned char const*, unsigned int, TaoCrypt::CipherDir)
0000000000bd7b4b l     F .text	0000000000000041              unsigned int TaoCrypt::RoundDownToMultipleOf<unsigned int>(unsigned int, unsigned int)
0000000000c002f2 l     F .text	000000000000005c              mySTL::vector_base<TaoCrypt::Integer>::vector_base(unsigned long)
000000000138e780 l     O .bss	0000000000000008              srv_os_log_pending_writes
0000000000be0008 l     F .text	0000000000000052              TaoCrypt::FileSink::put(TaoCrypt::Source&)
0000000000ad7e14 l     F .text	0000000000000077              yyerror
0000000000bdc232 l     F .text	0000000000000032              TaoCrypt::Source::set_index(unsigned int)
0000000000bc6dfa l     F .text	0000000000000046              mySTL::list<yaSSL::x509*>::end() const
00000000013966e0 l     O .bss	0000000000000200              trx_sys_mysql_master_log_name
0000000000bb2430 l     F .text	000000000000002e              yaSSL_get_version
0000000000bbb332 l     F .text	0000000000000026              yaSSL::ServerKeyExchange::~ServerKeyExchange()
0000000000bcab10 l     F .text	0000000000000033              yaSSL::MD5::update(unsigned char const*, unsigned int)
0000000000a7601f l     F .text	0000000000000354              buf_LRU_print_instance
0000000000b1afd8 l     F .text	0000000000000234              page_dir_split_slot
0000000000a7a6de l     F .text	00000000000001d8              dtuple_coll_cmp
0000000001391008 l     O .bss	0000000000000008              trx_dummy_sess
0000000000bc6974 l     F .text	000000000000001a              yaSSL::yassl_int_cpp_local2::sess_match::sess_match(unsigned char const*)
0000000000bd0222 l     F .text	0000000000000026              TaoCrypt::AES::~AES()
0000000000bbefe8 l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::capacity() const
0000000000bd9b48 l     F .text	0000000000000160              TaoCrypt::CertDecoder::StoreKey()
00000000009c75d2 l     F .text	0000000000000078              row_mysql_freeze_data_dictionary_func
0000000000bce0de l     F .text	000000000000000e              TaoCrypt::DH::GetP()
0000000000af843d l     F .text	00000000000000e9              mem_heap_validate
0000000000a00b8f l     F .text	0000000000000067              trx_i_s_possibly_fetch_data_into_cache
0000000000bce3c0 l     F .text	000000000000002d              yaSSL::DES_EDE::DES_EDEImpl::DES_EDEImpl()
0000000000c006c6 l     F .text	0000000000000026              mySTL::vector<TaoCrypt::WindowSlider>::size() const
000000000136cb68 l     O .data	0000000000000008              TaoCrypt::AES::Td3
0000000000b554a5 l     F .text	0000000000000248              row_undo_ins
0000000000bef999 l     F .text	0000000000000030              TaoCrypt::Subtract(unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
0000000000bcb354 l     F .text	000000000000000f              yaSSL::HMAC_SHA::get_digestSize() const
0000000000afdeda l     F .text	0000000000000185              mlog_parse_string
0000000001396cf4 l     O .bss	0000000000000004              dict_table_stats_latch_key
0000000000bb22ea l     F .text	000000000000001a              yaSSL_get_cipher_name
0000000000a61b92 l     F .text	0000000000000533              buf_page_optimistic_get
0000000000bcc71c l     F .text	0000000000000071              yaSSL::Integer::Integer(yaSSL::Integer const&)
00000000009965e2 l     F .text	0000000000000072              ha_innobase::ha_innobase(handlerton*, TABLE_SHARE*)
000000000138e830 l     O .bss	0000000000000008              srv_n_rows_inserted
0000000000bcac10 l     F .text	0000000000000026              yaSSL::SHA::~SHA()
0000000000b08b17 l     F .text	000000000000000e              os_thread_pf
0000000000bb2d33 l     F .text	000000000000000b              yaSSL_library_init
0000000000c00bc0 l     F .text	0000000000000010              stat64
0000000000ab0f31 l     F .text	000000000000002a              fsp_header_get_zip_size
0000000000ae8ec9 l     F .text	00000000000000eb              lock_release_autoinc_locks
0000000000bb3d6e l     F .text	0000000000000017              TaoCrypt::Error::Error(TaoCrypt::ErrorNumber)
00000000013968e0 l     O .bss	0000000000000004              trx_doublewrite_mutex_key
00000000009fb751 l     F .text	0000000000000076              mutex_validate
0000000000bcb0f6 l     F .text	000000000000004d              yaSSL::HMAC_MD5::~HMAC_MD5()
0000000000af2173 l     F .text	00000000000000a3              recv_sys_create
0000000000bd58ae l     F .text	000000000000001b              yaSSL::Socket::set_lastError(int)
0000000000bbce6b l     F .text	000000000000005a              yaSSL::CreateCipherSpec()
0000000000a60425 l     F .text	00000000000002c7              buf_block_align_instance
0000000000bf118c l     F .text	000000000000006d              TaoCrypt::MD2::~MD2()
0000000000bde234 l     F .text	0000000000000049              TaoCrypt::DH::GenerateKeyPair(TaoCrypt::RandomNumberGenerator&, unsigned char*, unsigned char*)
0000000000b51012 l     F .text	0000000000000145              while_step
0000000000bedf5f l     F .text	0000000000000012              TaoCrypt::BitsToWords(unsigned int)
0000000000bcf4c2 l     F .text	0000000000000045              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::SetKey(unsigned char const*, unsigned int, unsigned char const*)
0000000000bc005e l     F .text	0000000000000037              yaSSL::c32to24(unsigned int, unsigned char (&) [3])
0000000000ad173e l     F .text	000000000000160c              yyparse
0000000000bb9bc8 l     F .text	000000000000000f              yaSSL::Certificate::get_type() const
0000000000bd7be3 l     F .text	0000000000000015              unsigned int TaoCrypt::ModPowerOf2<unsigned int, unsigned int>(unsigned int, unsigned int)
0000000000bb3f96 l     F .text	000000000000002b              TaoCrypt::RSA_PublicKey::~RSA_PublicKey()
0000000000bb245e l     F .text	0000000000000010              yaSSLeay_version
0000000000bb359d l     F .text	000000000000001a              yaSSL_get1_session
0000000000be912c l     F .text	0000000000000044              TaoCrypt::Integer::Integer(TaoCrypt::RandomNumberGenerator&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bcf46e l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::BlockCipher()
0000000000bcf2d6 l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES, (TaoCrypt::Mode)1>::BlockCipher()
0000000000bea58c l     F .text	0000000000000060              TaoCrypt::Integer::ByteCount() const
0000000000a4e39a l     F .text	0000000000000044              btr_pcur_create_for_mysql
00000000010f6220 l     O .data	0000000000000004              pars_char_token
0000000000bcf87c l     F .text	000000000000001a              TaoCrypt::RSA_Encryptor<TaoCrypt::RSA_BlockType2>::RSA_Encryptor(TaoCrypt::RSA_PublicKey const&)
0000000000bc568a l     F .text	000000000000001e              yaSSL::SSL_CTX::setVerifyPeer()
0000000000bc03aa l     F .text	0000000000000012              yaSSL::States::UseConnect()
0000000000bbf618 l     F .text	000000000000001e              mySTL::vector_base<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::~vector_base()
0000000000b0299e l     F .text	000000000000004e              os_file_delete_if_exists
0000000000b541fb l     F .text	0000000000000292              opt_print_query_plan
0000000000bc6c30 l     F .text	000000000000004f              mySTL::list<yaSSL::SSL_SESSION*>::~list()
0000000000a8eb4f l     F .text	00000000000006e6              dict_foreign_add_to_cache
0000000000a83273 l     F .text	0000000000000115              tab_create_graph_create
0000000000c003ac l     F .text	0000000000000030              void mySTL::destroy<TaoCrypt::Integer*>(TaoCrypt::Integer*, TaoCrypt::Integer*)
0000000000bd2874 l     F .text	000000000000030d              yaSSL::hmac(yaSSL::SSL&, unsigned char*, unsigned char const*, unsigned int, yaSSL::ContentType, bool)
0000000000ab0e69 l     F .text	0000000000000073              fsp_header_get_space_id
0000000000bcb86e l     F .text	000000000000004d              yaSSL::DES_EDE::~DES_EDE()
00000000009e521c l     F .text	00000000000001e9              row_upd_index_write_log
0000000000bb3391 l     F .text	000000000000000b              yaRAND_status
0000000000bf2ef6 l     F .text	000000000000003c              operator new(unsigned long, TaoCrypt::new_t)
0000000000bcc69a l     F .text	0000000000000063              yaSSL::Integer::Integer()
0000000000bb8238 l     F .text	0000000000000025              yaSSL::ChangeCipherSpec::set(yaSSL::input_buffer&)
0000000000b033b2 l     F .text	0000000000000061              os_file_read_string
0000000000bce564 l     F .text	000000000000002b              yaSSL::RSA::RSAImpl::RSAImpl()
0000000000bb2d2c l     F .text	0000000000000007              yaOpenSSL_add_all_algorithms
0000000000bc0366 l     F .text	000000000000000e              yaSSL::States::useRecord()
0000000000bdbfac l     F .text	0000000000000031              TaoCrypt::BER_Decoder::~BER_Decoder()
0000000000bce590 l     F .text	000000000000001b              yaSSL::Integer::IntegerImpl::IntegerImpl()
00000000010f5a80 l     O .data	0000000000000068              i_s_innodb_buffer_page
0000000000a5c9dd l     F .text	000000000000077e              buf_page_print
0000000000c008a2 l     F .text	000000000000002e              mySTL::vector_base<TaoCrypt::Integer>::vector_base()
0000000000bb44d4 l     F .text	000000000000002d              yaSSL::Security::~Security()
0000000000bee55a l     F .text	0000000000000054              TaoCrypt::operator/(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bc955c l     F .text	000000000000001e              yaSSL::CertManager::setVerifyCallback(int (*)(int, yaSSL::X509_STORE_CTX*))
0000000000b186e7 l     F .text	0000000000000118              page_mem_alloc_heap
00000000010681a0 l     O .data.rel.ro	0000000000000030              vtable for TaoCrypt::DES_EDE3
0000000000bd7431 l     F .text	000000000000000b              TaoCrypt::GetHostByteOrder()
0000000000bc4426 l     F .text	0000000000000054              yaSSL::SSL::addData(yaSSL::input_buffer*)
0000000000a01063 l     F .text	000000000000010a              trx_i_s_create_lock_id
0000000000bb4042 l     F .text	000000000000004b              TaoCrypt::DSA_PublicKey::DSA_PublicKey()
0000000000bdc5f2 l     F .text	000000000000001a              mySTL::auto_ptr<TaoCrypt::HASH>::auto_ptr(TaoCrypt::HASH*)
0000000000a62e93 l     F .text	0000000000000b2f              buf_page_init_for_read
0000000000bbd954 l     F .text	0000000000000029              yaSSL::Message::Message()
0000000000bcb9ce l     F .text	000000000000007e              yaSSL::RC4::RC4()
0000000000bcbb68 l     F .text	000000000000003c              yaSSL::RC4::decrypt(unsigned char*, unsigned char const*, unsigned int)
0000000000bc692e l     F .text	0000000000000015              yaSSL::yassl_int_cpp_local1::SumBuffer::SumBuffer()
0000000000bbd9a8 l     F .text	0000000000000029              yaSSL::HandShakeHeader::HandShakeHeader()
0000000000bd2733 l     F .text	0000000000000141              yaSSL::buildFinished(yaSSL::SSL&, yaSSL::Finished&, unsigned char const*)
0000000001391080 l     O .bss	0000000000000008              btr_cur_n_sea_old
0000000000bed453 l     F .text	00000000000001f4              TaoCrypt::RecursiveInverseModPower2(unsigned long*, unsigned long*, unsigned long const*, unsigned int)
0000000000befde8 l     F .text	00000000000003a0              unsigned long TaoCrypt::DivideThreeWordsByTwo<unsigned long, TaoCrypt::DWord>(unsigned long*, unsigned long, unsigned long, TaoCrypt::DWord*)
0000000000bb2d3e l     F .text	0000000000000047              yaDH_new
0000000000bf8810 l     F .text	00000000000000a4              TaoCrypt::SHA512::Swap(TaoCrypt::SHA512&)
0000000000bbb454 l     F .text	000000000000000f              yaSSL::ServerKeyExchange::get_type() const
0000000000bc0618 l     F .text	000000000000044e              yaSSL::SSL::SSL(yaSSL::SSL_CTX*)
000000000099e3c4 l     F .text	000000000000011a              ha_innobase::position(unsigned char const*)
0000000000a5c56e l     F .text	0000000000000159              buf_get_total_stat
0000000000b2dfb3 l     F .text	000000000000012d              que_fork_start_command
0000000000bb3f4e l     F .text	000000000000001b              TaoCrypt::Integer::~Integer()
0000000000bb8284 l     F .text	000000000000000f              yaSSL::ChangeCipherSpec::get_type() const
0000000000bd569e l     F .text	00000000000000db              yaSSL::Socket::send(unsigned char const*, unsigned int, unsigned int&, int)
0000000000bef948 l     F .text	000000000000000b              TaoCrypt::Portable::MultiplyRecursionLimit()
0000000000bc755c l     F .text	0000000000000057              yaSSL::del_ptr_zero mySTL::for_each<mySTL::list<yaSSL::SSL_SESSION*>::iterator, yaSSL::del_ptr_zero>(mySTL::list<yaSSL::SSL_SESSION*>::iterator, mySTL::list<yaSSL::SSL_SESSION*>::iterator, yaSSL::del_ptr_zero)
0000000000bdfbe0 l     F .text	0000000000000026              TaoCrypt::AbstractRing::~AbstractRing()
0000000000bb2c93 l     F .text	000000000000002d              yaSSL_get_verify_mode
00000000009b3c6b l     F .text	000000000000030f              read_view_oldest_copy_or_open_new
000000000099a45a l     F .text	0000000000000181              innobase_mysql_cmp
0000000000bbdb9c l     F .text	0000000000000029              yaSSL::Fortezza_Server::Fortezza_Server()
0000000001390f30 l     O .bss	0000000000000008              trx_doublewrite_must_reset_space_ids
0000000000bf0422 l     F .text	0000000000000033              void mySTL::swap<unsigned long*>(unsigned long*&, unsigned long*&)
0000000000a24f3c l     F .text	0000000000000312              trx_undo_update_cleanup
0000000000bcffd8 l     F .text	0000000000000041              TaoCrypt::MD5::~MD5()
0000000000bb3c20 l     F .text	0000000000000012              yaSSL_set_wfd
0000000000bbc2b4 l     F .text	000000000000000f              yaSSL::CertificateVerify::get_type() const
0000000000bdc672 l     F .text	000000000000001e              mySTL::auto_ptr<TaoCrypt::HASH>::Destroy()
0000000000bf3024 l     F .text	000000000000003d              TaoCrypt::BytePrecision(unsigned long)
0000000000bdc3aa l     F .text	0000000000000027              TaoCrypt::Source::SetError(TaoCrypt::ErrorNumber)
0000000000a56281 l     F .text	00000000000005d0              btr_search_drop_page_hash_index
0000000000bccc2c l     F .text	0000000000000014              yaSSL::DiffieHellman::get_publicKeyLength() const
0000000000a117ed l     F .text	0000000000000226              trx_rollback
00000000009d9802 l     F .text	000000000000027f              row_sel_step
0000000000bc026e l     F .text	000000000000006b              yaSSL::States::States()
0000000000bb8956 l     F .text	0000000000000012              yaSSL::Data::get_length() const
0000000000bb15cd l     F .text	0000000000000065              yaSSL_CTX_new
0000000000bde80e l     F .text	0000000000000089              TaoCrypt::DSA_PublicKey::operator=(TaoCrypt::DSA_PublicKey const&)
0000000000bc3bde l     F .text	0000000000000057              yaSSL::SSL::verifyState(yaSSL::ClientState)
0000000000bde5c2 l     F .text	0000000000000068              TaoCrypt::DH::Initialize(TaoCrypt::Source&)
0000000000a78024 l     F .text	00000000000007c2              buf_read_ahead_linear
0000000000a10b99 l     F .text	00000000000000b2              trx_undo_arr_create
0000000000bb2192 l     F .text	0000000000000068              yaSSL_get_session
0000000000bcbba4 l     F .text	0000000000000086              yaSSL::AES::AES(unsigned int)
0000000000bba3a6 l     F .text	0000000000000077              yaSSL::ServerHello::ServerHello()
0000000000bef5ae l     F .text	000000000000000b              TaoCrypt::Word::Word()
0000000000bb8070 l     F .text	0000000000000027              yaSSL::HandShakeHeader::set_length(unsigned int)
0000000000c0034e l     F .text	000000000000001e              mySTL::vector_base<TaoCrypt::Integer>::~vector_base()
0000000000bc7bc2 l     F .text	000000000000004f              mySTL::list<yaSSL::input_buffer*>::~list()
000000000138e7b0 l     O .bss	0000000000000008              srv_buf_pool_flushed
000000000138e880 l     O .bss	0000000000000008              srv_print_innodb_lock_monitor
0000000000ab62ac l     F .text	000000000000031a              fseg_free_step
0000000000a58111 l     F .text	0000000000000715              btr_search_validate
0000000000bce202 l     F .text	000000000000001b              yaSSL::RMD::RMDImpl::RMDImpl()
0000000000bc7ea8 l     F .text	000000000000001b              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::vector()
0000000000bb4c46 l     F .text	0000000000000026              yaSSL::Alert::~Alert()
00000000009e581f l     F .text	00000000000002ed              row_upd_build_difference_binary
0000000000bcadcc l     F .text	000000000000007e              yaSSL::RMD::RMD()
0000000000bde580 l     F .text	0000000000000042              TaoCrypt::DH::DH(TaoCrypt::Source&)
0000000000a93d17 l     F .text	0000000000000061              dict_table_get_index_on_name
00000000009f7b02 l     F .text	00000000000003f7              innobase_shutdown_for_mysql
0000000000bcbe12 l     F .text	000000000000001e              yaSSL::RandomPool::~RandomPool()
0000000000bebe6e l     F .text	000000000000008c              TaoCrypt::Integer::IsSquare() const
0000000000ab5e78 l     F .text	0000000000000135              fseg_free_page
0000000000bdc2b0 l     F .text	0000000000000049              TaoCrypt::Source::prev()
0000000000c00510 l     F .text	000000000000001e              mySTL::vector_base<TaoCrypt::WindowSlider>::~vector_base()
0000000000b29ef0 l     F .text	000000000000016d              page_zip_parse_write_blob_ptr
0000000000bb3a22 l     F .text	000000000000000b              yaSSLeay_add_ssl_algorithms
0000000000bb3c50 l     F .text	000000000000000e              yaSSL_set_shutdown
0000000000bca59c l     F .text	00000000000000a7              mySTL::list<TaoCrypt::Signer*>::push_back(TaoCrypt::Signer*)
0000000001396cf8 l     O .bss	0000000000000008              dict_ind_redundant
0000000000bce314 l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000bd748d l     F .text	000000000000009f              TaoCrypt::UnalignedGetWordNonTemplate(TaoCrypt::ByteOrder, unsigned char const*, unsigned int*)
0000000000be2726 l     F .text	000000000000024c              TaoCrypt::Portable::Square2(unsigned long*, unsigned long const*)
00000000013935d8 l     O .bss	0000000000000008              fil_n_pending_tablespace_flushes
0000000000bbe2c2 l     F .text	0000000000000026              yaSSL::Factory<yaSSL::Message, int, yaSSL::Message* (*)()>::Reserve(unsigned long)
0000000000bb819d l     F .text	0000000000000034              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::ChangeCipherSpec&)
0000000000c0052e l     F .text	0000000000000026              mySTL::vector<TaoCrypt::WindowSlider>::capacity() const
0000000000bce4da l     F .text	0000000000000029              yaSSL::Auth::Auth()
0000000000beeb52 l     F .text	000000000000007f              TaoCrypt::EuclideanDomainOf::Divide(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
00000000009a0f08 l     F .text	0000000000000049              ha_innobase::scan_time()
0000000000bc5bcc l     F .text	000000000000005e              yaSSL::Crypto::~Crypto()
0000000000ac7137 l     F .text	00000000000000b4              ibuf_update_free_bits_low
0000000001390f48 l     O .bss	0000000000000004              trx_rseg_n_slots_debug
0000000000ad8445 l     F .text	00000000000000c7              pars_info_add_id
0000000000bdf86c l     F .text	0000000000000039              TaoCrypt::AbstractRing::MultiplicativeGroupT::Equal(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bc31be l     F .text	0000000000000208              yaSSL::SSL::fillData(yaSSL::Data&)
0000000001066500 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::Certificate
0000000000bce1dc l     F .text	0000000000000026              yaSSL::SHA::SHAImpl::SHAImpl(TaoCrypt::SHA const&)
0000000000bc3cde l     F .text	0000000000000209              yaSSL::SSL::verifyClientState(yaSSL::HandShakeType)
0000000000a18342 l     F .text	0000000000000050              trx_sys_file_format_init
000000000099ff92 l     F .text	00000000000001c4              ha_innobase::discard_or_import_tablespace(char)
0000000000bc8dc8 l     F .text	000000000000003d              yaSSL::output_buffer::output_buffer()
0000000000bbb6be l     F .text	0000000000000025              yaSSL::CertificateRequest::get(yaSSL::output_buffer&) const
0000000000bc8f08 l     F .text	0000000000000010              yaSSL::output_buffer::get_size() const
0000000000bfe488 l     F .text	000000000000000f              TaoCrypt::SHA::getByteOrder() const
0000000000bc83d8 l     F .text	0000000000000047              mySTL::list<yaSSL::ThreadError>::node::node(yaSSL::ThreadError)
0000000000c002ba l     F .text	0000000000000037              mySTL::vector<TaoCrypt::Integer>::size() const
0000000000bbbaa0 l     F .text	0000000000000035              yaSSL::CertificateVerify::CertificateVerify()
0000000000bb7a6a l     F .text	00000000000000f8              yaSSL::Parameters::SetCipherNames()
0000000000aee581 l     F .text	0000000000000041              log_make_checkpoint_at
0000000000bdadc0 l     F .text	000000000000008a              TaoCrypt::CertDecoder::GetValidity()
0000000001067968 l     O .data.rel.ro	0000000000000058              vtable for yaSSL::RC4
0000000000bdc738 l     F .text	000000000000003d              TaoCrypt::DSA_Public_Decoder::~DSA_Public_Decoder()
00000000008cd608 l     F .text	0000000000000041              TaoCrypt::HASH64withTransform::~HASH64withTransform()
0000000000b2b42f l     F .text	0000000000000093              page_zip_rec_set_deleted
0000000000bcdda6 l     F .text	0000000000000050              TaoCrypt::RSA_PublicKey::FixedCiphertextLength()
0000000000a98988 l     F .text	00000000000000b3              dict_process_sys_fields_rec
0000000000b0899e l     F .text	0000000000000144              os_fast_mutex_free
0000000000bdf5df l     F .text	0000000000000054              TaoCrypt::operator+(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bcf3e4 l     F .text	0000000000000031              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES, (TaoCrypt::Mode)1>::Process(unsigned char*, unsigned char const*, unsigned int)
0000000000be05dc l     F .text	0000000000000155              TaoCrypt::HASH64withTransform::Update(unsigned char const*, unsigned int)
0000000000a1dc00 l     F .text	0000000000000187              trx_commit_complete_for_mysql
0000000000bbf1fa l     F .text	0000000000000035              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::~vector()
0000000000bbf43c l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::size() const
0000000000bc66d4 l     F .text	000000000000002b              yaSSL::Errors::Errors()
0000000000bb2ea0 l     F .text	000000000000001b              yaERR_get_error_line_data
0000000000bcbb30 l     F .text	0000000000000038              yaSSL::RC4::encrypt(unsigned char*, unsigned char const*, unsigned int)
0000000000b36f10 l     F .text	00000000000001b5              rec_get_nth_field_offs_old
0000000001396900 l     O .bss	0000000000000200              trx_sys_mysql_bin_log_name
0000000000bbbf4e l     F .text	0000000000000025              yaSSL::CertificateVerify::set(yaSSL::input_buffer&)
0000000000bc576a l     F .text	00000000000001c8              yaSSL::SSL_CTX::SetCipherList(char const*)
0000000000bd3e65 l     F .text	00000000000001b1              yaSSL::sendChangeCipher(yaSSL::SSL&, yaSSL::BufferOutput)
0000000000bb3ba6 l     F .text	000000000000000e              yaSSL_alert_desc_string_long
00000000009d044e l     F .text	00000000000005e1              row_build_row_ref_in_tuple
0000000000ae397c l     F .text	0000000000000070              lock_rec_restore_from_page_infimum
0000000000a893f0 l     F .text	00000000000000bf              dict_table_col_in_clustered_key
0000000000bffa98 l     F .text	000000000000010f              TaoCrypt::WindowSlider::WindowSlider(TaoCrypt::Integer const&, bool, unsigned int)
0000000000bc5eb8 l     F .text	00000000000000f0              yaSSL::Buffers::~Buffers()
0000000000bcefbc l     F .text	00000000000000a8              TaoCrypt::HMAC<TaoCrypt::SHA>::Final(unsigned char*)
0000000000bc7fe2 l     F .text	0000000000000032              mySTL::list<yaSSL::input_buffer*>::node::node(yaSSL::input_buffer*)
0000000000bc3a36 l     F .text	00000000000000b6              yaSSL::SSL::verifyState(yaSSL::RecordLayerHeader const&)
0000000000aa173a l     F .text	000000000000022e              eval_func
0000000000a19caa l     F .text	0000000000000500              trx_create
0000000000bb246e l     F .text	0000000000000025              yaSSL_get_error
0000000000bc8488 l     F .text	0000000000000032              mySTL::list<yaSSL::x509*>::node::node(yaSSL::x509*)
0000000000bc77b4 l     F .text	0000000000000022              mySTL::list<yaSSL::ThreadError>::iterator::operator!=(mySTL::list<yaSSL::ThreadError>::iterator const&) const
0000000000af8c9e l     F .text	0000000000000152              mem_heap_printf
00000000009a63fa l     F .text	0000000000000010              ha_innobase::get_mysql_bin_log_pos()
0000000000bf093c l     F .text	0000000000000012              unsigned long TaoCrypt::SafeShifter<true>::RightShift<unsigned long>(unsigned long, unsigned int)
0000000000bd8ac4 l     F .text	00000000000002bb              TaoCrypt::RSA_Private_Decoder::Decode(TaoCrypt::RSA_PrivateKey&)
0000000000bb3c8e l     F .text	0000000000000012              operator new(unsigned long, Dummy*)
0000000000be02de l     F .text	0000000000000260              TaoCrypt::HASHwithTransform::Final(unsigned char*)
0000000000bd54e6 l     F .text	000000000000001b              yaSSL::Mutex::~Mutex()
0000000000bc5e38 l     F .text	0000000000000012              yaSSL::sslHashes::use_verify()
0000000000bb4353 l     F .text	000000000000001c              unsigned int yaSSL::min<unsigned int>(unsigned int, unsigned int)
0000000000a18219 l     F .text	000000000000002a              trx_sys_file_format_tag_init
0000000000beed5e l     F .text	0000000000000031              TaoCrypt::ModularArithmetic::Double(TaoCrypt::Integer const&) const
0000000000bdf7b8 l     F .text	000000000000002d              TaoCrypt::AbstractGroup::AbstractGroup()
0000000000a17d5e l     F .text	0000000000000063              trx_sys_create
0000000001390f38 l     O .bss	0000000000000008              trx_doublewrite_buf_is_being_created
0000000001396cc8 l     O .bss	0000000000000008              data_dummy
0000000001397090 l     O .bss	0000000000000008              rec_dummy
0000000000bb2b68 l     F .text	000000000000001e              yaSSL_CTX_sess_accept_renegotiate
0000000000bbf618 l     F .text	000000000000001e              mySTL::vector_base<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::~vector_base()
0000000000bef5d4 l     F .text	0000000000000025              TaoCrypt::Word::Word(unsigned int, unsigned int)
0000000000bc7996 l     F .text	000000000000002e              mySTL::list<yaSSL::x509*>::list()
0000000000996fe0 l     F .text	000000000000004b              trx_is_interrupted
00000000009fbd4d l     F .text	000000000000005c              sync_close
0000000000bdbcd6 l     F .text	0000000000000283              TaoCrypt::DecodeDSA_Signature(unsigned char*, unsigned char const*, unsigned int)
0000000000aab400 l     F .text	0000000000000085              fil_tablespace_exists_in_mem
0000000000bfff50 l     F .text	0000000000000035              mySTL::vector<mySTL::vector<TaoCrypt::Integer> >::~vector()
0000000000bb4bde l     F .text	0000000000000026              yaSSL::Data::~Data()
0000000000bee90e l     F .text	0000000000000029              TaoCrypt::EuclideanDomainOf::Reduce(TaoCrypt::Integer&, TaoCrypt::Integer const&) const
0000000000bb4122 l     F .text	000000000000007f              TaoCrypt::RSA_PrivateKey::~RSA_PrivateKey()
0000000000a77a3e l     F .text	00000000000004c2              buf_read_ahead_random
0000000000bcd9a4 l     F .text	0000000000000158              TaoCrypt::Mode_BASE::CBC_Decrypt(unsigned char*, unsigned char const*, unsigned int)
0000000000bdfe1a l     F .text	00000000000000ba              TaoCrypt::FileSource::size(bool)
0000000000bb3487 l     F .text	0000000000000026              yaSSL_CTX_set_default_passwd_cb_userdata
0000000000bef598 l     F .text	0000000000000015              TaoCrypt::DWord::GetHighHalfAsBorrow() const
0000000000bcbfba l     F .text	00000000000000c6              yaSSL::DSS::DSS(unsigned char const*, unsigned int, bool)
0000000000bdc220 l     F .text	0000000000000011              TaoCrypt::Source::get_index() const
0000000000bbe1ba l     F .text	0000000000000020              mySTL::list<unsigned char*>::iterator::operator++()
0000000000bee5d3 l     F .text	0000000000000059              TaoCrypt::ModularExponentiation(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000b08c1f l     F .text	0000000000000083              os_thread_exit
0000000000a11dcb l     F .text	0000000000000049              roll_node_create
0000000000a0fd9d l     F .text	0000000000000193              trx_roll_savepoint_free
0000000000ae850a l     F .text	0000000000000347              lock_sec_rec_read_check_and_lock
00000000010cc318 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::HandShakeBase
0000000000bcc59a l     F .text	000000000000007f              yaSSL::RSA::encrypt(unsigned char*, unsigned char const*, unsigned int, yaSSL::RandomPool const&)
0000000000beeef0 l     F .text	0000000000000072              TaoCrypt::ModularArithmetic::IsUnit(TaoCrypt::Integer const&) const
0000000000a787e6 l     F .text	0000000000000222              buf_read_ibuf_merge_pages
0000000000a948d4 l     F .text	00000000000001ce              dict_set_corrupted_index_cache_only
0000000000b42ef1 l     F .text	0000000000000147              row_ins_index_entry
0000000000bc5fa8 l     F .text	000000000000001b              yaSSL::Buffers::SetOutput(yaSSL::output_buffer*)
000000000138e8a8 l     O .bss	0000000000000008              srv_mysql_table
0000000000bcd620 l     F .text	0000000000000012              TaoCrypt::BitsToBytes(unsigned int)
0000000000bb8046 l     F .text	0000000000000011              yaSSL::HandShakeHeader::get_handshakeType() const
0000000000bbe210 l     F .text	0000000000000037              mySTL::auto_array<unsigned char>::reset(unsigned char*)
0000000000bb37c5 l     F .text	0000000000000034              yaMD4_Final
0000000000bce62c l     F .text	000000000000004b              yaSSL::DiffieHellman::DHImpl::~DHImpl()
0000000000bba506 l     F .text	0000000000000012              yaSSL::ServerHello::get_random() const
00000000009a3ca0 l     F .text	00000000000004e8              ha_innobase::external_lock(THD*, int)
0000000000a6a8da l     F .text	00000000000000f6              buf_flush_write_complete
0000000000a9375d l     F .text	000000000000031b              dict_print_info_on_foreign_keys
0000000000a0b54c l     F .text	00000000000000f2              trx_undo_rec_skip_row_ref
0000000000bdc7da l     F .text	0000000000000026              TaoCrypt::RSA_Public_Decoder::~RSA_Public_Decoder()
0000000000bcf5b2 l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::AES, (TaoCrypt::Mode)1>::BlockCipher()
0000000000abdd50 l     F .text	00000000000000c5              hash0_create
0000000000bbde56 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::HandShakeBase>::auto_ptr(yaSSL::HandShakeBase*)
0000000000bc6c30 l     F .text	000000000000004f              mySTL::list<yaSSL::SSL_SESSION*>::~list()
0000000001393608 l     O .bss	0000000000000008              ibuf_flush_count
0000000000bee62c l     F .text	0000000000000012              TaoCrypt::AbstractRing::MultiplicativeGroup() const
0000000000bc48d6 l     F .text	0000000000000011              yaSSL::SSL_SESSION::GetTimeOut() const
0000000000bce388 l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000bbf986 l     F .text	000000000000002f              mySTL::pair<int, yaSSL::Message* (*)()>* mySTL::GetArrayMemory<mySTL::pair<int, yaSSL::Message* (*)()> >(unsigned long)
0000000001390210 l     O .bss	0000000000000008              rw_x_spin_wait_count
0000000001395868 l     O .bss	0000000000000008              srv_last_monitor_time
0000000000bde962 l     F .text	0000000000000077              TaoCrypt::DSA_PublicKey::Initialize(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000a3815b l     F .text	000000000000014c              btr_validate_index
0000000000bb43f0 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::x509>::auto_ptr(yaSSL::x509*)
0000000000998c08 l     F .text	000000000000001a              ha_innobase::index_flags(unsigned int, unsigned int, bool) const
0000000000bdfc06 l     F .text	000000000000007b              TaoCrypt::ModularArithmetic::ModularArithmetic(TaoCrypt::Integer const&)
0000000000bbe1a4 l     F .text	0000000000000015              mySTL::list<unsigned char*>::iterator::operator*() const
00000000009cac5f l     F .text	0000000000000429              row_drop_database_for_mysql
0000000000aace75 l     F .text	0000000000000223              fil_aio_wait
0000000000bceb0b l     F .text	0000000000000021              unsigned int TaoCrypt::SaturatingSubtract<unsigned int, unsigned int>(unsigned int, unsigned int)
0000000000bbc635 l     F .text	0000000000000082              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::Finished const&)
0000000000bc668e l     F .text	0000000000000046              yaSSL::Sessions::Sessions()
0000000000bbc4a4 l     F .text	000000000000004d              yaSSL::ClientKeyExchange::~ClientKeyExchange()
0000000000bb3746 l     F .text	000000000000001a              yaX509_get_ext_d2i
0000000000a44ebd l     F .text	0000000000000e28              btr_cur_pessimistic_update
0000000000bdec26 l     F .text	000000000000003e              TaoCrypt::DSA_Signer::DSA_Signer(TaoCrypt::DSA_PrivateKey const&)
0000000000bbe3e6 l     F .text	0000000000000026              yaSSL::Factory<yaSSL::ServerKeyBase, int, yaSSL::ServerKeyBase* (*)()>::Reserve(unsigned long)
0000000000aa9230 l     F .text	0000000000000611              fil_rename_tablespace
0000000000bce0b4 l     F .text	000000000000002a              TaoCrypt::DH::SetG(TaoCrypt::Integer const&)
0000000000bc8600 l     F .text	000000000000002e              mySTL::vector_base<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::vector_base()
0000000000bc986a l     F .text	000000000000001e              yaSSL::CertManager::get_peerKeyLength() const
0000000001395870 l     O .bss	0000000000000008              srv_buf_pool_old_size
0000000000bbb358 l     F .text	0000000000000068              yaSSL::ServerKeyExchange::build(yaSSL::SSL&)
0000000000a18399 l     F .text	0000000000000089              trx_sys_create_rsegs
0000000000c0068f l     F .text	0000000000000036              void mySTL::construct<TaoCrypt::WindowSlider, TaoCrypt::WindowSlider>(TaoCrypt::WindowSlider*, TaoCrypt::WindowSlider const&)
0000000000b12454 l     F .text	00000000000007f9              page_copy_rec_list_end_to_created_page
0000000000bc224e l     F .text	0000000000000027              yaSSL::SSL::CompressionOn() const
0000000000bbc4f2 l     F .text	0000000000000026              yaSSL::ClientKeyExchange::~ClientKeyExchange()
0000000000bc637c l     F .text	000000000000001e              yaSSL::X509::GetAfter()
0000000000bd850e l     F .text	0000000000000040              TaoCrypt::PublicKey::SetSize(unsigned int)
0000000000a88f0e l     F .text	0000000000000021              dict_table_autoinc_unlock
0000000000bee03d l     F .text	0000000000000090              TaoCrypt::ShiftWordsLeftByBits(unsigned long*, unsigned int, unsigned int)
0000000000bcdbb6 l     F .text	000000000000000b              TaoCrypt::ARC4::ARC4()
0000000000bdea6e l     F .text	000000000000002a              TaoCrypt::DSA_PublicKey::SetSubGroupGenerator(TaoCrypt::Integer const&)
0000000000bc7c12 l     F .text	000000000000002e              mySTL::list<yaSSL::output_buffer*>::list()
0000000000b07bf1 l     F .text	000000000000008f              os_sync_free
0000000000bdbf72 l     F .text	0000000000000039              TaoCrypt::BER_Decoder::BER_Decoder(TaoCrypt::Source&)
0000000000bbdaca l     F .text	0000000000000029              yaSSL::ClientKeyBase::ClientKeyBase()
0000000000996d0c l     F .text	0000000000000223              innobase_convert_name
0000000000bf3350 l     F .text	000000000000001c              TaoCrypt::OS_Seed::~OS_Seed()
0000000000bb66b4 l     F .text	000000000000003d              yaSSL::EncryptedPreMasterSecret::alloc(int)
0000000000bcb144 l     F .text	0000000000000026              yaSSL::HMAC_MD5::~HMAC_MD5()
0000000000bb43de l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::BulkCipher>::operator->() const
0000000000a93a78 l     F .text	0000000000000091              dict_index_name_print
0000000001390220 l     O .bss	0000000000000008              rw_x_os_wait_count
0000000000bb489c l     F .text	0000000000000040              TaoCrypt::AllocatorWithCleanup<unsigned long>::deallocate(void*, unsigned long)
0000000000b01d88 l     F .text	0000000000000087              os_file_create_tmpfile
0000000000bbf758 l     F .text	000000000000001e              mySTL::vector_base<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::~vector_base()
0000000000bc705c l     F .text	0000000000000055              mySTL::list<yaSSL::input_buffer*>::iterator::operator++(int)
0000000000bc555a l     F .text	0000000000000012              yaSSL::SSL_CTX::getCert() const
0000000000bef29e l     F .text	0000000000000059              TaoCrypt::DWord::Multiply(unsigned long, unsigned long)
0000000000bf0ab6 l     F .text	000000000000005d              TaoCrypt::MontgomeryRepresentation::~MontgomeryRepresentation()
00000000009c8086 l     F .text	000000000000015b              row_table_add_foreign_constraints
0000000000bb75b4 l     F .text	00000000000004b6              yaSSL::Parameters::SetSuites(yaSSL::ProtocolVersion, bool, bool, bool)
0000000000bc5614 l     F .text	0000000000000015              yaSSL::SSL_CTX::GetSessionCacheOff() const
0000000001395878 l     O .bss	0000000000000004              kernel_mutex_key
0000000000ad734c l     F .text	0000000000000079              pars_while_statement
0000000000bbf5c6 l     F .text	0000000000000052              mySTL::vector_base<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::vector_base(unsigned long)
0000000000bdc5d6 l     F .text	000000000000001b              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::operator[](unsigned int)
0000000000bbed8e l     F .text	0000000000000047              void yaSSL::ysDelete<yaSSL::Auth>(yaSSL::Auth*)
00000000013939c0 l     O .bss	0000000000000008              os_mutex_count
0000000000bcb7b4 l     F .text	000000000000003c              yaSSL::DES::decrypt(unsigned char*, unsigned char const*, unsigned int)
0000000000b4cb26 l     F .text	0000000000000049              rbt_last
0000000000bce1c0 l     F .text	000000000000001b              yaSSL::SHA::SHAImpl::SHAImpl()
0000000000bdc022 l     F .text	000000000000000e              TaoCrypt::Signer::GetPublicKey() const
0000000000ad92e3 l     F .text	0000000000000381              sym_tab_add_bound_lit
0000000000bb9cae l     F .text	0000000000000012              yaSSL::ServerDHParams::get_g() const
0000000001391018 l     O .bss	0000000000000008              trx_n_prepared
0000000000bcb91c l     F .text	000000000000003e              yaSSL::DES_EDE::set_decryptKey(unsigned char const*, unsigned char const*)
0000000000be9454 l     F .text	00000000000000a3              TaoCrypt::Integer::SetByte(unsigned int, unsigned char)
0000000000bf2f9b l     F .text	0000000000000089              TaoCrypt::xorbuf(unsigned char*, unsigned char const*, unsigned int)
0000000000c003dc l     F .text	000000000000005c              mySTL::vector_base<mySTL::vector<TaoCrypt::Integer> >::vector_base(unsigned long)
0000000000bc65de l     F .text	0000000000000052              yaSSL::RecvdMessages::RecvdMessages()
0000000000bbff4a l     F .text	000000000000003d              yaSSL::Fortezza_Server::~Fortezza_Server()
0000000001396f60 l     O .bss	0000000000000004              innodb_file_temp_key
0000000000b2bcf6 l     F .text	000000000000028e              page_zip_dir_add_slot
0000000000bc68cc l     F .text	000000000000001b              yaSSL::Factory<yaSSL::ClientKeyBase, int, yaSSL::ClientKeyBase* (*)()>::~Factory()
0000000000bca6ff l     F .text	000000000000000b              void mySTL::destroy<mySTL::list<TaoCrypt::Signer*>::node>(mySTL::list<TaoCrypt::Signer*>::node*)
00000000013938b8 l     O .bss	0000000000000008              recv_sys
00000000009a27d8 l     F .text	0000000000000266              ha_innobase::update_table_comment(char const*)
0000000000bdc422 l     F .text	000000000000002a              TaoCrypt::RSA_PrivateKey::SetPrime1(TaoCrypt::Integer const&)
0000000000bb3e1c l     F .text	0000000000000047              TaoCrypt::MD4::MD4()
0000000000bcf1c6 l     F .text	000000000000001b              yaSSL::HMAC_RMD::HMAC_RMDImpl::~HMAC_RMDImpl()
0000000000bbc46e l     F .text	0000000000000035              yaSSL::ClientKeyExchange::ClientKeyExchange()
0000000000bc7f3a l     F .text	000000000000000b              void mySTL::destroy<mySTL::list<yaSSL::input_buffer*>::node>(mySTL::list<yaSSL::input_buffer*>::node*)
00000000009f94b2 l     F .text	000000000000003e              sync_array_print_info
0000000000bb45ef l     F .text	000000000000001c              int yaSSL::min<int>(int, int)
0000000000bb890e l     F .text	0000000000000012              yaSSL::Data::set(yaSSL::input_buffer&)
0000000001396ca0 l     O .bss	0000000000000010              buf_LRU_stat_cur
0000000000bc9622 l     F .text	00000000000001d9              yaSSL::CertManager::CopyCaCert(yaSSL::x509 const*)
0000000000bdfd9c l     F .text	0000000000000053              TaoCrypt::FileSource::FileSource(char const*, TaoCrypt::Source&)
0000000000bcd73e l     F .text	0000000000000031              TaoCrypt::Mode_BASE::~Mode_BASE()
0000000000bc0560 l     F .text	0000000000000073              yaSSL::sslFactory::sslFactory()
0000000000bca6ca l     F .text	0000000000000015              mySTL::list<yaSSL::x509*>::reverse_iterator::operator*() const
0000000000bc556c l     F .text	0000000000000012              yaSSL::SSL_CTX::getKey() const
0000000000ae03ef l     F .text	0000000000000096              lock_number_of_rows_locked
0000000000bc8186 l     F .text	00000000000000ad              mySTL::list<yaSSL::SSL_SESSION*>::pop_back()
0000000000bce5ac l     F .text	0000000000000026              yaSSL::Integer::IntegerImpl::IntegerImpl(TaoCrypt::Integer const&)
0000000000a214f8 l     F .text	0000000000000088              trx_undo_parse_page_init
0000000000ade385 l     F .text	0000000000000191              lock_check_trx_id_sanity
0000000000bcd5fa l     F .text	0000000000000026              yaSSL::Auth::~Auth()
0000000000bdb73a l     F .text	0000000000000135              TaoCrypt::Signature_Encoder::Signature_Encoder(unsigned char const*, unsigned int, TaoCrypt::HashType, TaoCrypt::Source&)
0000000000bb2cc0 l     F .text	000000000000001d              yaSSL_CTX_get_verify_depth
0000000000a6a36d l     F .text	000000000000056d              buf_flush_relocate_on_flush_list
000000000138e7e8 l     O .bss	0000000000000001              srv_print_all_deadlocks
0000000000bbc08f l     F .text	000000000000003b              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::CertificateVerify const&)
0000000000bce196 l     F .text	0000000000000029              yaSSL::Digest::Digest()
0000000000bef64a l     F .text	000000000000005a              TaoCrypt::Word::operator-(TaoCrypt::Word)
0000000000bdc44c l     F .text	000000000000002a              TaoCrypt::RSA_PrivateKey::SetPrime2(TaoCrypt::Integer const&)
0000000000bbf776 l     F .text	0000000000000043              mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>* mySTL::uninit_copy<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*, mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*>(mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*, mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*, mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*)
0000000000a1e72c l     F .text	0000000000000227              trx_recover_for_mysql
0000000000bb144d l     F .text	0000000000000080              yaTLSv1_1_client_method
0000000000bf0aa2 l     F .text	0000000000000014              TaoCrypt::AllocatorBase<unsigned long>::max_size() const
0000000000bfe724 l     F .text	0000000000000047              TaoCrypt::AbstractGroup::Reduce(TaoCrypt::Integer&, TaoCrypt::Integer const&) const
0000000000bdc476 l     F .text	000000000000002a              TaoCrypt::RSA_PrivateKey::SetPrivateExponent(TaoCrypt::Integer const&)
0000000000aadcb5 l     F .text	0000000000000057              fil_page_set_type
0000000000bd21f5 l     F .text	000000000000053e              yaSSL::ProcessOldClientHello(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000bb164d l     F .text	0000000000000065              yaSSL_new
0000000000aad098 l     F .text	00000000000003f9              fil_flush
0000000000ad73c5 l     F .text	00000000000000f2              pars_for_statement
0000000000bd4c7e l     F .text	00000000000001d3              yaSSL::sendCertificate(yaSSL::SSL&, yaSSL::BufferOutput)
0000000000beeada l     F .text	0000000000000077              TaoCrypt::EuclideanDomainOf::MultiplicativeInverse(TaoCrypt::Integer const&) const
0000000000bc4308 l     F .text	0000000000000015              yaSSL::SSL::GetQuietShutdown() const
0000000000bb202c l     F .text	0000000000000020              yaSSL_clear
0000000000bbd0e1 l     F .text	000000000000005a              yaSSL::CreateCertificate()
0000000000bff248 l     F .text	00000000000006fa              TaoCrypt::AbstractGroup::SimultaneousMultiply(TaoCrypt::Integer*, TaoCrypt::Integer const&, TaoCrypt::Integer const*, unsigned int) const
0000000000bcdbc2 l     F .text	000000000000003e              TaoCrypt::AES::AES(TaoCrypt::CipherDir, TaoCrypt::Mode)
0000000000bdaeda l     F .text	0000000000000191              TaoCrypt::CertDecoder::GetCompareHash(unsigned char const*, unsigned int, unsigned char*, unsigned int)
0000000000b4abe8 l     F .text	00000000000000f3              row_undo_node_create
0000000000bb3be5 l     F .text	0000000000000013              yaSSL_CTX_use_certificate_chain_file
0000000000a465fe l     F .text	00000000000000bd              btr_cur_parse_del_mark_set_sec_rec
0000000000bbb26e l     F .text	0000000000000040              yaSSL::ServerKeyExchange::ServerKeyExchange(yaSSL::SSL&)
000000000138e770 l     O .bss	0000000000000008              srv_log_writes
0000000001394098 l     O .bss	0000000000000001              yaSSL::ys
0000000000bb4502 l     F .text	000000000000003b              yaSSL::sslHashes::~sslHashes()
0000000000bf336c l     F .text	0000000000000073              TaoCrypt::OS_Seed::GenerateSeed(unsigned char*, unsigned int)
0000000000bb3592 l     F .text	000000000000000b              yaSSLv2_client_method
0000000000bb2ec6 l     F .text	000000000000003a              yaERR_error_string
0000000000a0d909 l     F .text	000000000000078c              trx_undo_prev_version_build
0000000000b01e0f l     F .text	0000000000000047              os_file_opendir
0000000000a70b48 l     F .text	00000000000002e9              buf_LRU_insert_zip_clean
0000000000bdc030 l     F .text	0000000000000014              TaoCrypt::Signer::GetHash() const
0000000000996654 l     F .text	0000000000000046              ha_innobase::~ha_innobase()
0000000000bcdb56 l     F .text	000000000000003e              TaoCrypt::DES_EDE3::DES_EDE3(TaoCrypt::CipherDir, TaoCrypt::Mode)
00000000010f4ca0 l     O .data	0000000000000068              i_s_innodb_lock_waits
0000000000bebf40 l     F .text	0000000000000040              TaoCrypt::Integer::MultiplicativeInverse() const
0000000000bcae4a l     F .text	000000000000004d              yaSSL::RMD::~RMD()
0000000000bc8706 l     F .text	0000000000000033              void mySTL::swap<yaSSL::input_buffer*>(yaSSL::input_buffer*&, yaSSL::input_buffer*&)
0000000000bbef88 l     F .text	0000000000000039              void mySTL::construct<mySTL::pair<int, yaSSL::Message* (*)()>, mySTL::pair<int, yaSSL::Message* (*)()> >(mySTL::pair<int, yaSSL::Message* (*)()>*, mySTL::pair<int, yaSSL::Message* (*)()> const&)
0000000000bcffd8 l     F .text	0000000000000041              TaoCrypt::MD5::~MD5()
00000000013966d4 l     O .bss	0000000000000001              trx_purge_dummy_rec
0000000000bb3a2d l     F .text	000000000000001c              yaERR_remove_state
0000000000bc9292 l     F .text	00000000000000ad              yaSSL::CertManager::CertManager()
0000000000bb499b l     F .text	0000000000000103              TaoCrypt::AllocatorWithCleanup<unsigned char>::pointer TaoCrypt::StdReallocate<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >(TaoCrypt::AllocatorWithCleanup<unsigned char>&, unsigned char*, TaoCrypt::AllocatorWithCleanup<unsigned char>::size_type, TaoCrypt::AllocatorWithCleanup<unsigned char>::size_type, bool)
0000000001396c94 l     O .bss	0000000000000004              buf_block_lock_key
0000000000be2972 l     F .text	00000000000009a9              TaoCrypt::Portable::Square4(unsigned long*, unsigned long const*)
0000000000bbf2be l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::size() const
0000000000afddb2 l     F .text	0000000000000128              mlog_log_string
0000000000bd97ea l     F .text	000000000000019a              TaoCrypt::CertDecoder::Decode(mySTL::list<TaoCrypt::Signer*>*, TaoCrypt::CertDecoder::CertType)
0000000000bcaa90 l     F .text	0000000000000051              yaSSL::MD5::get_digest(unsigned char*, unsigned char const*, unsigned int)
0000000000bc7ea8 l     F .text	000000000000001b              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::vector()
0000000000abdc96 l     F .text	0000000000000063              hash_mutex_enter_all
0000000000ad71d3 l     F .text	0000000000000066              pars_elsif_element
0000000000bcb518 l     F .text	0000000000000026              yaSSL::HMAC_RMD::~HMAC_RMD()
0000000000b231f4 l     F .text	0000000000000041              page_zip_set_alloc
00000000010f5fa0 l     O .data	0000000000000008              srv_use_doublewrite_buf
00000000009e60d6 l     F .text	0000000000000330              row_upd_replace
0000000000bcc69a l     F .text	0000000000000063              yaSSL::Integer::Integer()
0000000000bbfb03 l     F .text	0000000000000033              void mySTL::swap<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*>(mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*&, mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>*&)
0000000001390200 l     O .bss	0000000000000008              rw_s_os_wait_count
0000000000bb22a9 l     F .text	000000000000000f              yaSSL_get_default_timeout
0000000000bee34e l     F .text	0000000000000022              TaoCrypt::Integer::IsEven() const
0000000000bca644 l     F .text	0000000000000028              mySTL::list<yaSSL::x509*>::front() const
00000000009e5fc3 l     F .text	0000000000000113              row_upd_index_replace_new_col_vals
0000000000befabd l     F .text	000000000000032b              unsigned int TaoCrypt::DivideThreeWordsByTwo<unsigned int, TaoCrypt::Word>(unsigned int*, unsigned int, unsigned int, TaoCrypt::Word*)
0000000000bb33c8 l     F .text	00000000000000bf              yaDES_ecb_encrypt
0000000000be0ab0 l     F .text	0000000000000029              TaoCrypt::HASH::HASH()
0000000000bcbc78 l     F .text	0000000000000026              yaSSL::AES::~AES()
0000000000bb2cdd l     F .text	000000000000002d              yaSSL_get_verify_depth
0000000000bbcec5 l     F .text	000000000000005a              yaSSL::CreateAlert()
0000000000bffeca l     F .text	0000000000000086              mySTL::vector<mySTL::vector<TaoCrypt::Integer> >::vector(unsigned long)
0000000000bcdeac l     F .text	0000000000000041              TaoCrypt::RSA_PublicKey::Swap(TaoCrypt::RSA_PublicKey&)
0000000000b29341 l     F .text	0000000000000baf              page_zip_write_rec
0000000000bdfc82 l     F .text	0000000000000011              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::size() const
0000000000bca3d2 l     F .text	0000000000000011              TaoCrypt::CertDecoder::GetIssuerCnStart() const
000000000138e738 l     O .bss	0000000000000001              srv_random_read_ahead
0000000000bb440a l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::x509>::~auto_ptr()
0000000000bc86b8 l     F .text	0000000000000033              void mySTL::swap<yaSSL::output_buffer*>(yaSSL::output_buffer*&, yaSSL::output_buffer*&)
0000000000bf72f4 l     F .text	000000000000000f              TaoCrypt::RIPEMD160::getByteOrder() const
0000000000bb8204 l     F .text	0000000000000034              yaSSL::ChangeCipherSpec::ChangeCipherSpec()
0000000000bd8894 l     F .text	00000000000000a5              TaoCrypt::BER_Decoder::GetSet()
0000000000a43f80 l     F .text	00000000000005ba              btr_cur_update_in_place
0000000000bd7a66 l     F .text	000000000000001a              TaoCrypt::GetBlock<unsigned int, TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 1>, true>::GetBlock(void const*)
000000000099df60 l     F .text	00000000000000b3              ha_innobase::index_last(unsigned char*)
0000000000bb11c2 l     F .text	000000000000000b              yaSSLv3_method
0000000000bb464b l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::BIGNUM>(yaSSL::BIGNUM*)
0000000000bd55fa l     F .text	0000000000000010              yaSSL::Socket::get_fd() const
0000000000bce264 l     F .text	000000000000001b              yaSSL::HMAC_MD5::HMAC_MD5Impl::HMAC_MD5Impl()
0000000000bc030c l     F .text	0000000000000012              yaSSL::States::getServer() const
0000000000bcd686 l     F .text	0000000000000047              TaoCrypt::RIPEMD160::RIPEMD160()
0000000000a7bfab l     F .text	000000000000002b              dtype_is_string_type
0000000000bcc61a l     F .text	0000000000000080              yaSSL::RSA::decrypt(unsigned char*, unsigned char const*, unsigned int, yaSSL::RandomPool const&)
0000000000a1804f l     F .text	0000000000000137              trx_sys_file_format_max_check
0000000000bbfd56 l     F .text	000000000000003d              yaSSL::ChangeCipherSpec::~ChangeCipherSpec()
0000000000bc6b15 l     F .text	0000000000000074              mySTL::list<yaSSL::SSL_SESSION*>::iterator mySTL::find_if<mySTL::list<yaSSL::SSL_SESSION*>::iterator, yaSSL::yassl_int_cpp_local2::sess_match>(mySTL::list<yaSSL::SSL_SESSION*>::iterator, mySTL::list<yaSSL::SSL_SESSION*>::iterator, yaSSL::yassl_int_cpp_local2::sess_match)
0000000001396eb0 l     O .bss	0000000000000008              recv_no_ibuf_operations
00000000010ccae8 l     O .data.rel.ro	0000000000000060              vtable for TaoCrypt::SHA
0000000000bc90e8 l     F .text	000000000000003a              yaSSL::x509::x509(unsigned int)
0000000000bce7db l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::Integer::IntegerImpl>(yaSSL::Integer::IntegerImpl*)
0000000000bb2be0 l     F .text	000000000000001e              yaSSL_CTX_sess_cache_full
0000000000bc50dc l     F .text	0000000000000102              yaSSL::Errors::Lookup(bool)
0000000000bed9fe l     F .text	0000000000000139              TaoCrypt::MontgomeryRepresentation::ConvertOut(TaoCrypt::Integer const&) const
0000000000bc79c4 l     F .text	000000000000004f              mySTL::list<yaSSL::x509*>::~list()
0000000000bf876c l     F .text	00000000000000a4              TaoCrypt::SHA224::Swap(TaoCrypt::SHA224&)
0000000000bbdec1 l     F .text	0000000000000047              void yaSSL::ysDelete<yaSSL::Digest>(yaSSL::Digest*)
0000000000bcb2e0 l     F .text	000000000000004d              yaSSL::HMAC_SHA::~HMAC_SHA()
0000000000bd593c l     F .text	0000000000000042              yaSSL::lowResTimer()
0000000001396c98 l     O .bss	0000000000000004              flush_list_mutex_key
0000000000bd86ac l     F .text	0000000000000090              TaoCrypt::Signer::Signer(unsigned char const*, unsigned int, char const*, unsigned char const*)
0000000001396ed8 l     O .bss	0000000000000004              mem_pool_mutex_key
0000000000a69cad l     F .text	000000000000018d              buf_flush_ready_for_replace
0000000000b280ad l     F .text	0000000000000949              page_zip_decompress
0000000000aeba79 l     F .text	0000000000000067              log_group_get_capacity
00000000009ed782 l     F .text	0000000000000444              row_vers_build_for_semi_consistent_read
00000000009f06ab l     F .text	00000000000000a8              srv_release_mysql_thread_if_suspended
0000000000a16459 l     F .text	0000000000000088              trx_doublewrite_page_inside
0000000000bbf0b2 l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::Swap(mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >&)
0000000000b0410a l     F .text	0000000000000336              os_aio_init
0000000000ad850c l     F .text	0000000000000096              pars_info_get_user_func
0000000000bf7cac l     F .text	0000000000000038              TaoCrypt::RSA_Private_Decoder::RSA_Private_Decoder(TaoCrypt::Source&)
0000000000ad70b3 l     F .text	0000000000000067              pars_variable_declaration
0000000000bb41e9 l     F .text	0000000000000024              void TaoCrypt::tcArrayDelete<unsigned char>(unsigned char*)
00000000009a7fd4 l     F .text	0000000000000061              ha_innobase::update_thd(THD*)
00000000010680e8 l     O .data.rel.ro	0000000000000028              vtable for TaoCrypt::RSA_Public_Decoder
0000000000bdc3d2 l     F .text	0000000000000026              TaoCrypt::RSA_PublicKey::SetModulus(TaoCrypt::Integer const&)
0000000000bc69de l     F .text	000000000000001e              yaSSL::yassl_int_cpp_local2::thr_match::thr_match()
0000000000bc4644 l     F .text	00000000000000f0              yaSSL::SSL_SESSION::SSL_SESSION(yaSSL::SSL const&, yaSSL::RandomPool&)
000000000099deac l     F .text	00000000000000b3              ha_innobase::index_first(unsigned char*)
0000000000be831a l     F .text	00000000000003c6              TaoCrypt::AlmostInverse(unsigned long*, unsigned long*, unsigned long const*, unsigned int, unsigned long const*, unsigned int)
0000000000b3e903 l     F .text	00000000000000c9              ins_node_create
0000000000c00acd l     F .text	0000000000000033              void mySTL::swap<TaoCrypt::WindowSlider*>(TaoCrypt::WindowSlider*&, TaoCrypt::WindowSlider*&)
0000000000b3e9cc l     F .text	00000000000001b3              ins_node_create_entry_list
0000000000a279c5 l     F .text	0000000000000045              ut_print_name
0000000000bd577a l     F .text	000000000000008b              yaSSL::Socket::receive(unsigned char*, unsigned int, int)
0000000000a1e2ab l     F .text	00000000000000d2              trx_weight_ge
0000000000bcf2fc l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES, (TaoCrypt::Mode)1>::BlockCipher()
00000000009a640a l     F .text	0000000000000124              innobase_get_at_most_n_mbchars
00000000010f5ed0 l     O .data	0000000000000008              srv_max_file_format_at_startup
0000000000bceb80 l     F .text	0000000000000063              TaoCrypt::HMAC<TaoCrypt::MD5>::HMAC()
0000000000a8e8b7 l     F .text	0000000000000138              dict_table_get_index_by_max_id
0000000000bc8576 l     F .text	000000000000002e              mySTL::vector_base<mySTL::pair<int, yaSSL::Message* (*)()> >::vector_base()
0000000000bb8142 l     F .text	0000000000000013              yaSSL::HandShakeBase::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000bcf71c l     F .text	000000000000001b              yaSSL::RandomPool::RandomImpl::~RandomImpl()
0000000000bc6d56 l     F .text	000000000000002c              yaSSL::Factory<yaSSL::ServerKeyBase, int, yaSSL::ServerKeyBase* (*)()>::Factory(void (*)(yaSSL::Factory<yaSSL::ServerKeyBase, int, yaSSL::ServerKeyBase* (*)()>&))
0000000000befa37 l     F .text	000000000000003d              TaoCrypt::MultiplyBottom(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
0000000000bbfbc6 l     F .text	000000000000003d              yaSSL::ClientHello::~ClientHello()
0000000000bc6e98 l     F .text	000000000000004b              mySTL::list<yaSSL::input_buffer*>::begin() const
0000000000bb391d l     F .text	000000000000008a              yaSSL_peek
0000000000bc6256 l     F .text	000000000000002e              yaSSL::X509_NAME::~X509_NAME()
0000000000bf81fe l     F .text	00000000000000a5              TaoCrypt::SHA512::SHA512(TaoCrypt::SHA512 const&)
0000000000bf2ecc l     F .text	000000000000000f              TaoCrypt::MD5::getDigestSize() const
0000000000a00bf6 l     F .text	0000000000000015              trx_i_s_cache_is_truncated
0000000000bb2b4a l     F .text	000000000000001e              yaSSL_CTX_sess_connect_good
0000000000bb4c77 l     F .text	00000000000008d2              yaSSL::SetErrorString(yaSSL::YasslError, char*)
0000000001395880 l     O .bss	0000000000000008              srv_dict_tmpfile
00000000009f4a3c l     F .text	0000000000000087              srv_free_paths_and_sizes
0000000000bcc336 l     F .text	00000000000000c6              yaSSL::RSA::RSA(unsigned char const*, unsigned int, bool)
0000000000bb3f96 l     F .text	000000000000002b              TaoCrypt::RSA_PublicKey::~RSA_PublicKey()
0000000001396520 l     O .bss	0000000000000008              srv_shutdown_lsn
0000000000bc68cc l     F .text	000000000000001b              yaSSL::Factory<yaSSL::ClientKeyBase, int, yaSSL::ClientKeyBase* (*)()>::~Factory()
0000000000bc6944 l     F .text	000000000000002f              yaSSL::yassl_int_cpp_local1::SumBuffer::operator()(yaSSL::output_buffer*)
0000000000bc2216 l     F .text	000000000000000f              yaSSL::SSL::SetCompression()
0000000000ab4cc5 l     F .text	00000000000001c8              fseg_alloc_free_page_general
00000000009a3308 l     F .text	0000000000000147              ha_innobase::get_foreign_key_list(THD*, List<st_foreign_key_info>*)
0000000000b317f9 l     F .text	00000000000006f8              cmp_dtuple_rec_with_match
0000000000bef746 l     F .text	0000000000000011              TaoCrypt::Word::GetLowHalf() const
0000000000aade91 l     F .text	00000000000000f6              fil_mtr_rename_log
0000000000bf0410 l     F .text	0000000000000012              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::get_buffer() const
0000000001390230 l     O .bss	0000000000000008              mutex_exit_count
00000000009a4188 l     F .text	000000000000035a              ha_innobase::transactional_table_lock(THD*, int)
00000000009df031 l     F .text	0000000000000229              row_search_max_autoinc
0000000000a673b2 l     F .text	0000000000000088              buf_pool_check_num_pending_io
0000000000bef95e l     F .text	000000000000000b              TaoCrypt::Portable::SquareRecursionLimit()
00000000009f17f5 l     F .text	000000000000023f              srv_lock_timeout_thread
0000000000995210 l     F .text	000000000000001c              thd_has_edited_nontrans_tables
0000000000a9865e l     F .text	00000000000000b9              dict_startscan_system
0000000000bb2662 l     F .text	000000000000000f              yaSSL_get_verify_result
0000000000bc727a l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::output_buffer>::~auto_ptr()
0000000000bf01db l     F .text	000000000000015e              TaoCrypt::Word TaoCrypt::DivideFourWordsByTwo<unsigned int, TaoCrypt::Word>(unsigned int*, TaoCrypt::Word const&, TaoCrypt::Word const&, TaoCrypt::Word const&)
0000000000bde652 l     F .text	0000000000000054              TaoCrypt::operator-(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000b4cb6f l     F .text	0000000000000033              rbt_next
0000000000a9e9be l     F .text	0000000000000093              dict_mem_referenced_table_name_lookup_set
0000000000b19fee l     F .text	000000000000095e              page_delete_rec_list_end
0000000000d51440 l     O .rodata	0000000000001400              TaoCrypt::AES::Te
0000000000b08ca2 l     F .text	000000000000000c              os_thread_yield
0000000000bdf956 l     F .text	0000000000000037              TaoCrypt::AbstractRing::MultiplicativeGroupT::Inverse(TaoCrypt::Integer const&) const
0000000000ae933c l     F .text	0000000000000106              lock_queue_iterator_reset
0000000000bc5e5c l     F .text	000000000000005c              yaSSL::Buffers::Buffers()
0000000000b0381f l     F .text	0000000000000070              os_file_dirname
0000000000bcd796 l     F .text	0000000000000034              TaoCrypt::Mode_BASE::SetIV(unsigned char const*)
0000000000bb46ac l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::BIGNUM>::auto_ptr(yaSSL::BIGNUM*)
0000000000bc8014 l     F .text	0000000000000032              mySTL::list<yaSSL::output_buffer*>::node::node(yaSSL::output_buffer*)
0000000000ae8851 l     F .text	0000000000000344              lock_clust_rec_read_check_and_lock
0000000000bcc470 l     F .text	000000000000001e              yaSSL::RSA::get_cipherLength() const
0000000000bccd2e l     F .text	0000000000000109              yaSSL::DiffieHellman::get_parms(unsigned char*, unsigned char*, unsigned char*) const
0000000000bc6d82 l     F .text	000000000000002c              yaSSL::Factory<yaSSL::ClientKeyBase, int, yaSSL::ClientKeyBase* (*)()>::Factory(void (*)(yaSSL::Factory<yaSSL::ClientKeyBase, int, yaSSL::ClientKeyBase* (*)()>&))
0000000000bc65de l     F .text	0000000000000052              yaSSL::RecvdMessages::RecvdMessages()
0000000000ad8163 l     F .text	00000000000000f7              pars_info_add_literal
0000000000a73280 l     F .text	000000000000009f              buf_LRU_make_block_young
0000000000bde0fa l     F .text	000000000000003d              TaoCrypt::DES_EDE2::~DES_EDE2()
0000000000bdc79c l     F .text	000000000000003d              TaoCrypt::RSA_Public_Decoder::~RSA_Public_Decoder()
0000000000bb2504 l     F .text	0000000000000011              yaX509_STORE_CTX_get_error_depth
0000000000bc8234 l     F .text	000000000000001a              mySTL::list<yaSSL::ThreadError>::iterator::iterator(mySTL::list<yaSSL::ThreadError>::node*)
0000000000ab0b60 l     F .text	0000000000000309              fsp_header_init
0000000000a4f531 l     F .text	00000000000000e8              btr_pcur_move_to_prev
0000000000bba5fd l     F .text	000000000000026f              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::ClientHello&)
0000000000beed90 l     F .text	0000000000000013              TaoCrypt::ModularArithmetic::MultiplicativeIdentity() const
0000000000bbdeb0 l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::HandShakeBase>::operator*() const
0000000000bbd3b1 l     F .text	000000000000005a              yaSSL::CreateDHServerKEA()
0000000000bbddb5 l     F .text	0000000000000024              void yaSSL::ysArrayDelete<unsigned char>(unsigned char*)
0000000000bc35e6 l     F .text	00000000000001a3              yaSSL::SSL::flushBuffer()
0000000000ad7521 l     F .text	00000000000000e3              pars_assignment_statement
0000000000a00d93 l     F .text	000000000000002c              trx_i_s_cache_start_read
0000000000a26ada l     F .text	000000000000012f              ut_realloc
0000000000bca8bc l     F .text	000000000000007e              yaSSL::MD5::MD5()
0000000000a21352 l     F .text	00000000000000ab              trx_undo_get_next_rec
0000000000bdd258 l     F .text	00000000000003bf              TaoCrypt::BasicDES::SetKey(unsigned char const*, unsigned int, TaoCrypt::CipherDir)
00000000009fb8a1 l     F .text	000000000000036c              mutex_spin_wait
0000000000bcd5c8 l     F .text	0000000000000031              yaSSL::Auth::~Auth()
0000000000bcb32e l     F .text	0000000000000026              yaSSL::HMAC_SHA::~HMAC_SHA()
0000000000bf32c4 l     F .text	000000000000008b              TaoCrypt::OS_Seed::OS_Seed()
0000000000bbb574 l     F .text	0000000000000026              yaSSL::CertificateRequest::~CertificateRequest()
0000000000abc819 l     F .text	00000000000001f2              ha_search_and_update_if_found_func
0000000000bba4aa l     F .text	0000000000000025              yaSSL::ServerHello::set(yaSSL::input_buffer&)
0000000000bce118 l     F .text	000000000000003c              TaoCrypt::Base64Decoder::Base64Decoder(TaoCrypt::Source&)
0000000000bbce08 l     F .text	0000000000000063              yaSSL::Connection::CleanPreMaster()
0000000000a88de9 l     F .text	000000000000005f              dict_table_autoinc_initialize
0000000001393600 l     O .bss	0000000000000008              ibuf
0000000000bbd02d l     F .text	000000000000005a              yaSSL::CreateClientHello()
0000000000bbb198 l     F .text	00000000000000d5              yaSSL::ServerKeyExchange::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000adf210 l     F .text	000000000000011f              lock_has_to_wait
0000000000bc5532 l     F .text	0000000000000012              yaSSL::SSL_CTX::GetCA_List() const
0000000000bd588a l     F .text	0000000000000012              yaSSL::Socket::WouldBlock() const
0000000000bdc004 l     F .text	000000000000001e              TaoCrypt::PublicKey::~PublicKey()
0000000000bba5aa l     F .text	0000000000000012              yaSSL::ServerHelloDone::set(yaSSL::input_buffer&)
00000000009953a0 l     F .text	00000000000003a6              convert_error_code_to_mysql
0000000000bf3178 l     F .text	00000000000000b8              TaoCrypt::RandomNumberGenerator::RandomNumberGenerator()
0000000000bbfd30 l     F .text	0000000000000026              yaSSL::Certificate::~Certificate()
00000000010f6234 l     O .data	0000000000000004              pars_open_token
0000000000a8d2e3 l     F .text	000000000000008c              dict_table_copy_types
0000000000a7a66b l     F .text	0000000000000073              dfield_data_is_binary_equal
0000000000bc612e l     F .text	0000000000000014              yaSSL::Security::get_parms() const
0000000001393948 l     O .bss	0000000000000008              os_file_n_pending_preads
0000000000a943c4 l     F .text	000000000000003f              dict_set_corrupted_by_space
0000000000bdf6dc l     F .text	0000000000000038              TaoCrypt::DSA_Private_Decoder::DSA_Private_Decoder(TaoCrypt::Source&)
0000000000bcb17a l     F .text	000000000000000f              yaSSL::HMAC_MD5::get_padSize() const
0000000000bea4c8 l     F .text	0000000000000065              TaoCrypt::Integer::GetByte(unsigned int) const
0000000000aee9a4 l     F .text	00000000000000a3              log_check_margins
0000000000b2ee3c l     F .text	000000000000024c              que_thr_stop
0000000000bc8234 l     F .text	000000000000001a              mySTL::list<yaSSL::ThreadError>::iterator::iterator(mySTL::list<yaSSL::ThreadError>::node*)
0000000000bf7b21 l     F .text	000000000000018a              TaoCrypt::SSL_Decrypt(TaoCrypt::RSA_PublicKey const&, unsigned char const*, unsigned char*)
0000000000bc3c36 l     F .text	0000000000000057              yaSSL::SSL::verifyState(yaSSL::ServerState)
00000000010f6208 l     O .data	0000000000000004              pars_count_token
0000000000b17ffc l     F .text	0000000000000375              page_dir_find_owner_slot
000000000138e800 l     O .bss	0000000000000008              srv_replication_delay
0000000000bb3d6e l     F .text	0000000000000017              TaoCrypt::Error::Error(TaoCrypt::ErrorNumber)
0000000000b2b555 l     F .text	0000000000000331              page_zip_dir_insert
0000000000beecf2 l     F .text	000000000000002d              TaoCrypt::ModularArithmetic::ConvertOut(TaoCrypt::Integer const&) const
00000000010f5fa8 l     O .data	0000000000000008              srv_use_checksums
00000000010f4ec0 l     O .data	0000000000000068              i_s_innodb_cmp_reset
0000000000bbdcba l     F .text	000000000000007c              yaSSL::Factory<yaSSL::ServerKeyBase, int, yaSSL::ServerKeyBase* (*)()>::CreateObject(int const&) const
0000000000bba9f4 l     F .text	0000000000000619              yaSSL::ClientHello::Process(yaSSL::input_buffer&, yaSSL::SSL&)
00000000009f1e41 l     F .text	000000000000005e              srv_active_wake_master_thread
0000000000bb7d11 l     F .text	000000000000002c              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::Message&)
0000000000bcf2d6 l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES, (TaoCrypt::Mode)1>::BlockCipher()
0000000000b1883b l     F .text	000000000000007d              page_parse_create
0000000000bd7642 l     F .text	0000000000000064              TaoCrypt::AES::PreFetchTe() const
0000000000bce202 l     F .text	000000000000001b              yaSSL::RMD::RMDImpl::RMDImpl()
0000000000bb2639 l     F .text	0000000000000029              yaSSL_set_accept_state
0000000001396cd0 l     O .bss	0000000000000001              data_error
0000000000bb9b90 l     F .text	0000000000000012              yaSSL::Certificate::set(yaSSL::input_buffer&)
0000000000bdebfc l     F .text	000000000000002a              TaoCrypt::DSA_PrivateKey::SetPrivatePart(TaoCrypt::Integer const&)
0000000000bdc800 l     F .text	000000000000003d              TaoCrypt::DSA_Private_Decoder::~DSA_Private_Decoder()
0000000000be8a4c l     F .text	000000000000008b              TaoCrypt::Integer::Integer(unsigned long, unsigned int)
0000000000bc879a l     F .text	000000000000005b              yaSSL::input_buffer::input_buffer()
0000000000b38ed8 l     F .text	000000000000039b              rec_copy_prefix_to_buf
0000000000bceb2c l     F .text	000000000000001b              yaSSL::MD5::MD5Impl::~MD5Impl()
0000000000bd55e2 l     F .text	0000000000000017              yaSSL::Socket::set_fd(int)
0000000000bb3c6d l     F .text	0000000000000016              yaSSL_CIPHER_description
0000000000a1d27a l     F .text	00000000000000e6              trx_end_signal_handling
0000000000bb4370 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::BulkCipher>::auto_ptr(yaSSL::BulkCipher*)
0000000001066760 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::FortezzaKeys
0000000000bb262e l     F .text	000000000000000b              yaSSL_set_connect_state
0000000000b4c81e l     F .text	0000000000000029              rbt_remove_node
0000000000b2fea8 l     F .text	000000000000015a              que_eval_sql
0000000000996654 l     F .text	0000000000000046              ha_innobase::~ha_innobase()
0000000000bdc628 l     F .text	0000000000000037              mySTL::auto_ptr<TaoCrypt::HASH>::reset(TaoCrypt::HASH*)
0000000000bb4630 l     F .text	000000000000001b              yaSSL::BIGNUM::~BIGNUM()
00000000009a374c l     F .text	0000000000000026              ha_innobase::free_foreign_key_create_info(char*)
0000000000bc672c l     F .text	0000000000000020              yaSSL::Ciphers::Ciphers()
0000000000bca462 l     F .text	000000000000004f              mySTL::list<TaoCrypt::Signer*>::~list()
0000000000b017e9 l     F .text	0000000000000035              os_aio_validate_skip
00000000009d6f43 l     F .text	0000000000000084              sel_col_prefetch_buf_free
0000000000bb2ba4 l     F .text	000000000000001e              yaSSL_CTX_sess_hits
00000000010cc3a0 l     O .data.rel.ro	0000000000000030              vtable for TaoCrypt::Mode_BASE
0000000000bc6700 l     F .text	000000000000002b              yaSSL::Errors::~Errors()
0000000000b2a563 l     F .text	0000000000000215              page_zip_parse_write_node_ptr
000000000099524e l     F .text	000000000000002d              thd_supports_xa
0000000000ac9d1b l     F .text	00000000000000ae              ibuf_free_excess_pages
0000000000bca724 l     F .text	0000000000000022              mySTL::list<TaoCrypt::Signer*>::iterator::operator!=(mySTL::list<TaoCrypt::Signer*>::iterator const&) const
0000000000a10101 l     F .text	0000000000000333              trx_savepoint_for_mysql
0000000000bc0a66 l     F .text	000000000000167b              yaSSL::SSL::set_pending(unsigned char)
0000000000bbe5b2 l     F .text	000000000000000b              void mySTL::destroy<mySTL::list<unsigned char*>::node>(mySTL::list<unsigned char*>::node*)
000000000138e818 l     O .bss	0000000000000008              srv_print_buf_io
0000000000bbfa45 l     F .text	0000000000000023              void mySTL::FreeArrayMemory<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >(mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*)
0000000000bcaf4c l     F .text	0000000000000034              yaSSL::RMD::operator=(yaSSL::RMD const&)
0000000000bcc080 l     F .text	000000000000004d              yaSSL::DSS::~DSS()
0000000000abdc2e l     F .text	000000000000003a              hash_mutex_enter
0000000000cfa838 l     O .rodata	0000000000000009              srv_mysql50_table_name_prefix
0000000000bde0ce l     F .text	000000000000002b              unsigned int TaoCrypt::rotrFixed<unsigned int>(unsigned int, unsigned int)
000000000136cb60 l     O .data	0000000000000008              TaoCrypt::AES::Td2
0000000000bce534 l     F .text	000000000000002f              TaoCrypt::DSA_Verifier::~DSA_Verifier()
0000000000bea1a4 l     F .text	000000000000015d              TaoCrypt::Integer::MinEncodedSize(TaoCrypt::Integer::Signedness) const
0000000000bc7e54 l     F .text	000000000000001b              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::vector()
0000000000bb11cd l     F .text	0000000000000080              yaSSLv3_server_method
0000000000bbe1f4 l     F .text	000000000000001b              mySTL::auto_array<unsigned char>::~auto_array()
0000000000bbe1da l     F .text	000000000000001a              mySTL::auto_array<unsigned char>::auto_array(unsigned char*)
0000000000bc8576 l     F .text	000000000000002e              mySTL::vector_base<mySTL::pair<int, yaSSL::Message* (*)()> >::vector_base()
0000000000bb6984 l     F .text	0000000000000012              yaSSL::ClientDiffieHellmanPublic::get_clientKey() const
0000000000bbb034 l     F .text	0000000000000025              yaSSL::ClientHello::get(yaSSL::output_buffer&) const
0000000001396e70 l     O .bss	0000000000000008              lock_latest_err_file
0000000000bf11fa l     F .text	0000000000000026              TaoCrypt::MD2::~MD2()
0000000000bb224b l     F .text	0000000000000025              yaSSL_session_reused
0000000000bc2334 l     F .text	000000000000001e              yaSSL::SSL::SetQuietShutdown(bool)
0000000000bd84b8 l     F .text	0000000000000056              TaoCrypt::PublicKey::PublicKey(unsigned char const*, unsigned int)
0000000001396eb8 l     O .bss	0000000000000008              recv_recovery_on
0000000000bc9858 l     F .text	0000000000000011              yaSSL::CertManager::get_keyType() const
0000000000ad6297 l     F .text	00000000000002a1              pars_select_statement
0000000000ad8dda l     F .text	000000000000007b              sym_tab_create
0000000000bc68e8 l     F .text	0000000000000015              yaSSL::yassl_int_cpp_local1::SumData::SumData()
00000000013915a0 l     O .bss	0000000000000008              dict_sys
0000000000bedb38 l     F .text	00000000000001d4              TaoCrypt::MontgomeryRepresentation::MultiplicativeInverse(TaoCrypt::Integer const&) const
000000000138e938 l     O .bss	0000000000000008              srv_was_started
0000000000bbfbc6 l     F .text	000000000000003d              yaSSL::ClientHello::~ClientHello()
0000000000be331c l     F .text	00000000000025e7              TaoCrypt::Portable::Multiply8(unsigned long*, unsigned long const*, unsigned long const*)
0000000000ac7317 l     F .text	000000000000009d              ibuf_update_free_bits_for_two_pages_low
0000000000bceacf l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::MD5::MD5Impl>(yaSSL::MD5::MD5Impl*)
000000000099a286 l     F .text	000000000000013b              ha_innobase::close()
0000000000bdec26 l     F .text	000000000000003e              TaoCrypt::DSA_Signer::DSA_Signer(TaoCrypt::DSA_PrivateKey const&)
00000000008cd8c8 l     F .text	0000000000000041              TaoCrypt::SHA224::~SHA224()
0000000000bcc836 l     F .text	0000000000000155              yaSSL::DiffieHellman::DiffieHellman(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, yaSSL::RandomPool const&)
0000000000b2f2cb l     F .text	000000000000018d              que_thr_stop_for_mysql_no_error
0000000000a92107 l     F .text	0000000000000054              dict_index_get_if_in_cache_low
0000000000a8884b l     F .text	000000000000001b              dict_casedn_str
00000000010f5ff0 l     O .data	0000000000000008              trx_sys_mysql_master_log_pos
0000000000aeceaf l     F .text	0000000000000490              log_group_write_buf
0000000000bce330 l     F .text	000000000000002d              yaSSL::DES::DESImpl::DESImpl()
0000000000bc2836 l     F .text	000000000000010c              yaSSL::SSL::makeTLSMasterSecret()
0000000000b1c2cf l     F .text	00000000000006aa              page_simple_validate_new
0000000000a98717 l     F .text	0000000000000051              dict_getnext_system
0000000000a48f0a l     F .text	000000000000144c              btr_store_big_rec_extern_fields
0000000000be8954 l     F .text	000000000000008b              TaoCrypt::Integer::Integer(long)
0000000000bbd2a3 l     F .text	000000000000005a              yaSSL::CreateClientKeyExchange()
0000000000bf8592 l     F .text	0000000000000092              TaoCrypt::SHA384::operator=(TaoCrypt::SHA384 const&)
00000000009a2a3e l     F .text	00000000000001b5              ha_innobase::get_foreign_key_create_info()
00000000009efc55 l     F .text	000000000000014c              srv_conc_force_exit_innodb
0000000000a54c14 l     F .text	0000000000000079              btr_search_info_get_ref_count
0000000001395888 l     O .bss	0000000000000008              srv_monitor_event
0000000000bfffd8 l     F .text	0000000000000083              mySTL::vector<TaoCrypt::WindowSlider>::reserve(unsigned long)
0000000000bdfcf8 l     F .text	0000000000000071              TaoCrypt::ModularArithmetic::~ModularArithmetic()
0000000001396534 l     O .bss	0000000000000004              syn_arr_mutex_key
0000000000bf1eb8 l     F .text	00000000000000a3              TaoCrypt::MD5::MD5(TaoCrypt::MD5 const&)
0000000000bec62e l     F .text	0000000000000175              TaoCrypt::ModularArithmetic::Half(TaoCrypt::Integer const&) const
0000000000bb9c8a l     F .text	0000000000000011              yaSSL::ServerDHParams::get_pubSize() const
0000000000b198a0 l     F .text	00000000000004b9              page_copy_rec_list_start
0000000000bc75ec l     F .text	000000000000005d              void yaSSL::del_ptr_zero::operator()<yaSSL::SSL_SESSION>(yaSSL::SSL_SESSION*&) const
0000000000bc84ba l     F .text	000000000000005d              void yaSSL::del_ptr_zero::operator()<yaSSL::output_buffer>(yaSSL::output_buffer*&) const
00000000009f1ca2 l     F .text	000000000000007c              srv_get_active_thread_type
0000000000b4c589 l     F .text	00000000000000c3              rbt_insert
0000000000bffeca l     F .text	0000000000000086              mySTL::vector<mySTL::vector<TaoCrypt::Integer> >::vector(unsigned long)
0000000000bc62a8 l     F .text	0000000000000095              yaSSL::X509::X509(char const*, unsigned long, char const*, unsigned long, char const*, int, char const*, int, int, int, int, int)
0000000000bbf2e4 l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::capacity() const
0000000000bc8a90 l     F .text	000000000000002d              yaSSL::input_buffer::get_remaining() const
00000000009970ae l     F .text	0000000000000132              ha_innobase::init_table_handle_for_HANDLER()
0000000000bc95a4 l     F .text	000000000000007d              yaSSL::CertManager::CopySelfCert(yaSSL::x509 const*)
0000000000bcb9ce l     F .text	000000000000007e              yaSSL::RC4::RC4()
000000000099dde4 l     F .text	000000000000003d              ha_innobase::index_next(unsigned char*)
00000000009966c6 l     F .text	0000000000000068              ha_innobase::update_thd()
0000000000bc8092 l     F .text	0000000000000033              void mySTL::swap<yaSSL::SSL_SESSION*>(yaSSL::SSL_SESSION*&, yaSSL::SSL_SESSION*&)
0000000000bccbf8 l     F .text	000000000000001d              yaSSL::DiffieHellman::get_agreedKeyLength() const
00000000009ee96b l     F .text	000000000000005e              srv_set_io_thread_op_info
000000000099669a l     F .text	000000000000002b              ha_innobase::~ha_innobase()
000000000099d024 l     F .text	000000000000048c              ha_innobase::index_read(unsigned char*, unsigned char const*, unsigned int, ha_rkey_function)
0000000000a714a2 l     F .text	000000000000012e              buf_LRU_buf_pool_running_out
0000000000bd53a6 l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::Message>::operator*() const
0000000000a173d4 l     F .text	0000000000000140              trx_sys_print_mysql_binlog_offset
0000000000bbcbe6 l     F .text	000000000000010d              yaSSL::Connection::Connection(yaSSL::ProtocolVersion, yaSSL::RandomPool&)
0000000000bd5378 l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::Message>::~auto_ptr()
0000000000bef2f7 l     F .text	000000000000006e              TaoCrypt::DWord::MultiplyAndAdd(unsigned long, unsigned long, unsigned long)
00000000009c6877 l     F .text	0000000000000121              row_create_update_node_for_mysql
0000000000bcea93 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::SHA::SHAImpl>(yaSSL::SHA::SHAImpl*)
0000000000bcfe28 l     F .text	000000000000001a              TaoCrypt::RSA_Encryptor<TaoCrypt::RSA_BlockType1>::RSA_Encryptor(TaoCrypt::RSA_PublicKey const&)
0000000000bd956c l     F .text	00000000000000fc              TaoCrypt::CertDecoder::CertDecoder(TaoCrypt::Source&, bool, mySTL::list<TaoCrypt::Signer*>*, bool, TaoCrypt::CertDecoder::CertType)
0000000000bc0354 l     F .text	0000000000000011              yaSSL::States::What() const
000000000138e768 l     O .bss	0000000000000008              srv_log_write_requests
0000000000bd53b8 l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::Message>::operator->() const
0000000000bc5c72 l     F .text	0000000000000012              yaSSL::Crypto::get_certManager() const
0000000000bc4276 l     F .text	000000000000000e              yaSSL::SSL::getCrypto() const
0000000000bbd97e l     F .text	0000000000000029              yaSSL::Alert::Alert()
000000000099e1ba l     F .text	0000000000000209              ha_innobase::rnd_pos(unsigned char*, unsigned char*)
0000000000bbbb4a l     F .text	0000000000000403              yaSSL::CertificateVerify::Build(yaSSL::SSL&)
0000000000a0d8b5 l     F .text	0000000000000054              trx_undo_get_undo_rec
0000000000bce5ac l     F .text	0000000000000026              yaSSL::Integer::IntegerImpl::IntegerImpl(TaoCrypt::Integer const&)
0000000000bb3e64 l     F .text	000000000000004c              TaoCrypt::Source::Source(unsigned char const*, unsigned int)
0000000000bbfe1e l     F .text	000000000000003d              yaSSL::HandShakeHeader::~HandShakeHeader()
0000000000bd7a80 l     F .text	000000000000000b              TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 1>::ToEnum()
0000000000bc01af l     F .text	000000000000002f              yaSSL::c16toa(unsigned short, unsigned char*)
0000000000bc7996 l     F .text	000000000000002e              mySTL::list<yaSSL::x509*>::list()
0000000000a0cec6 l     F .text	00000000000008e5              trx_undo_report_row_operation
0000000001396620 l     O .bss	0000000000000098              mutex_list_mutex
0000000000a9ea51 l     F .text	000000000000010a              dict_mem_index_add_field
0000000000bb8986 l     F .text	0000000000000012              yaSSL::Data::set_buffer()
0000000000bb4042 l     F .text	000000000000004b              TaoCrypt::DSA_PublicKey::DSA_PublicKey()
0000000000bb4312 l     F .text	0000000000000012              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::get_buffer() const
0000000000bc4dd8 l     F .text	00000000000000fe              yaSSL::Sessions::remove(unsigned char const*)
0000000000bcea57 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::RMD::RMDImpl>(yaSSL::RMD::RMDImpl*)
0000000000a64d30 l     F .text	000000000000003e              buf_pool_invalidate
0000000000bc5dd4 l     F .text	000000000000000e              yaSSL::sslHashes::get_MD5() const
00000000010cc848 l     O .data.rel.ro	0000000000000060              vtable for TaoCrypt::MD4
00000000009cfbe8 l     F .text	000000000000024e              row_rec_to_index_entry_low
00000000010ccd80 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000aadc97 l     F .text	000000000000001e              fil_page_get_next
0000000000a275de l     F .text	00000000000000c9              ut_print_timestamp
0000000000bc6074 l     F .text	0000000000000096              yaSSL::Security::Security(yaSSL::ProtocolVersion, yaSSL::RandomPool&, yaSSL::ConnectionEnd, yaSSL::Ciphers const&, yaSSL::SSL_CTX*, bool)
0000000000bd0082 l     F .text	0000000000000026              TaoCrypt::SHA::~SHA()
0000000000a28630 l     F .text	0000000000000125              ib_bh_push
00000000009959d3 l     F .text	000000000000006c              innobase_convert_from_table_id
000000000136cb70 l     O .data	0000000000000000              __TMC_END__
0000000000bd556a l     F .text	000000000000000b              yaSSL::Log::~Log()
0000000000bf0b88 l     F .text	0000000000000026              TaoCrypt::EuclideanDomainOf::~EuclideanDomainOf()
0000000000bc6780 l     F .text	00000000000000bc              yaSSL::Stats::Stats()
0000000000bce8cb l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::AES::AESImpl>(yaSSL::AES::AESImpl*)
0000000000bb3d86 l     F .text	0000000000000010              TaoCrypt::Error::What() const
0000000000bb7d6d l     F .text	0000000000000085              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::HandShakeHeader&)
0000000000bd5806 l     F .text	0000000000000051              yaSSL::Socket::wait()
0000000000bbe27e l     F .text	0000000000000043              void yaSSL::ysDelete<yaSSL::ClientKeyBase>(yaSSL::ClientKeyBase*)
0000000000bb2f11 l     F .text	000000000000000d              yaEVP_md5
0000000000bd54c6 l     F .text	0000000000000020              yaSSL::Mutex::Mutex()
0000000000bda1b4 l     F .text	0000000000000130              TaoCrypt::CertDecoder::GetDigest()
0000000000bcac36 l     F .text	000000000000008d              yaSSL::SHA::SHA(yaSSL::SHA const&)
0000000000aab485 l     F .text	00000000000003c5              fil_space_for_table_exists_in_mem
0000000000aa69b5 l     F .text	000000000000015d              fil_assign_new_space_id
0000000000bb453e l     F .text	0000000000000075              yaSSL::SSL::~SSL()
0000000000bb3cd2 l     F .text	0000000000000026              yaSSL::Message::~Message()
0000000000bbfee6 l     F .text	000000000000003d              yaSSL::RSA_Server::~RSA_Server()
0000000000aac676 l     F .text	00000000000007ff              fil_io
0000000000bb3892 l     F .text	000000000000008b              yaRAND_bytes
0000000000bc4880 l     F .text	000000000000000e              yaSSL::SSL_SESSION::GetID() const
0000000000bef824 l     F .text	0000000000000124              TaoCrypt::DWord::operator%(unsigned long)
00000000013938f0 l     O .bss	0000000000000008              mem_comm_pool
0000000000bb34bc l     F .text	000000000000000f              yaSSL_get_privatekey
0000000000be88ce l     F .text	0000000000000086              TaoCrypt::Integer::Integer(TaoCrypt::Integer const&)
0000000000be0a8e l     F .text	0000000000000022              TaoCrypt::HASH64withTransform::GetBitCountHi() const
0000000000bc6894 l     F .text	000000000000001b              yaSSL::Factory<yaSSL::HandShakeBase, int, yaSSL::HandShakeBase* (*)()>::~Factory()
0000000000be0b50 l     F .text	0000000000000062              void TaoCrypt::ByteReverseIf<unsigned char>(unsigned char*, unsigned char const*, unsigned int, TaoCrypt::ByteOrder)
0000000000b4c44d l     F .text	000000000000013c              rbt_create
0000000000bf06c2 l     F .text	000000000000002d              void mySTL::swap<TaoCrypt::Integer::Sign>(TaoCrypt::Integer::Sign&, TaoCrypt::Integer::Sign&)
0000000000bc6296 l     F .text	0000000000000012              yaSSL::X509_NAME::GetLength() const
0000000000bf1072 l     F .text	00000000000000f9              TaoCrypt::MD2::Final(unsigned char*)
0000000000bcfcf2 l     F .text	000000000000001b              yaSSL::Integer::IntegerImpl::~IntegerImpl()
0000000000ad7642 l     F .text	00000000000001e3              pars_fetch_statement
0000000000bce92b l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::DES_EDE::DES_EDEImpl>(yaSSL::DES_EDE::DES_EDEImpl*)
0000000000bc52dc l     F .text	0000000000000013              yaSSL::SSL_METHOD::setVerifyPeer()
00000000009be887 l     F .text	00000000000001a6              row_merge_rename_indexes
0000000000bceb48 l     F .text	000000000000001b              yaSSL::SHA::SHAImpl::~SHAImpl()
0000000000bb6996 l     F .text	000000000000005a              yaSSL::ClientDiffieHellmanPublic::alloc(int, bool)
0000000000bcdd2c l     F .text	0000000000000029              TaoCrypt::PK_Lengths::FixedMaxPlaintextLength() const
0000000000bbedd5 l     F .text	0000000000000047              void yaSSL::ysDelete<yaSSL::HandShakeBase>(yaSSL::HandShakeBase*)
0000000000bf73a0 l     F .text	0000000000000042              TaoCrypt::RSA_PublicKey::RSA_PublicKey(TaoCrypt::Source&)
0000000000bc98c4 l     F .text	00000000000006ba              yaSSL::CertManager::Validate()
0000000000a104a3 l     F .text	000000000000001b              trx_is_recv
0000000000bd555a l     F .text	000000000000000f              yaSSL::Log::Log(char const*)
0000000000bd893a l     F .text	00000000000000dd              TaoCrypt::BER_Decoder::GetVersion()
00000000010f5f08 l     O .data	0000000000000008              srv_flush_log_at_trx_commit
0000000000bcb7f0 l     F .text	000000000000007e              yaSSL::DES_EDE::DES_EDE()
0000000000ad665a l     F .text	0000000000000055              pars_column_assignment
0000000000bb69f0 l     F .text	00000000000009c5              yaSSL::DH_Server::read(yaSSL::SSL&, yaSSL::input_buffer&)
0000000000bdf502 l     F .text	0000000000000012              TaoCrypt::DSA_Verifier::GetS() const
0000000000bd8a18 l     F .text	00000000000000ac              TaoCrypt::BER_Decoder::GetExplicitVersion()
0000000000bc77d6 l     F .text	00000000000000b8              mySTL::list<yaSSL::ThreadError>::erase(mySTL::list<yaSSL::ThreadError>::iterator)
0000000000beea44 l     F .text	0000000000000077              TaoCrypt::EuclideanDomainOf::Square(TaoCrypt::Integer const&) const
0000000000a6d106 l     F .text	00000000000000f1              buf_flush_wait_batch_end
0000000000ad7b11 l     F .text	000000000000012a              pars_create_index
000000000138e898 l     O .bss	0000000000000008              srv_main_thread_process_no
0000000000afab84 l     F .text	0000000000000723              mem_area_free
00000000010f5fc0 l     O .data	0000000000000008              srv_thread_sleep_delay
0000000000c00471 l     F .text	0000000000000040              mySTL::vector<TaoCrypt::Integer>* mySTL::uninit_fill_n<mySTL::vector<TaoCrypt::Integer>*, unsigned long, mySTL::vector<TaoCrypt::Integer> >(mySTL::vector<TaoCrypt::Integer>*, unsigned long, mySTL::vector<TaoCrypt::Integer> const&)
0000000000bbe52e l     F .text	0000000000000011              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::begin() const
0000000000bc4ed6 l     F .text	000000000000012f              yaSSL::Sessions::Flush()
0000000000a94403 l     F .text	00000000000004d1              dict_set_corrupted
0000000000bc562a l     F .text	0000000000000015              yaSSL::SSL_CTX::GetSessionCacheFlushOff() const
00000000009bdbd3 l     F .text	0000000000000272              row_merge_lock_table
0000000000bdf5b5 l     F .text	000000000000002a              TaoCrypt::operator>=(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000998c32 l     F .text	000000000000000f              ha_innobase::max_supported_key_length() const
0000000000bc48a0 l     F .text	0000000000000012              yaSSL::SSL_SESSION::GetSuite() const
0000000000bc6630 l     F .text	0000000000000011              yaSSL::X509_NAME::GetCnLength() const
0000000000b0727e l     F .text	000000000000012e              os_aio_all_slots_free
0000000000af7320 l     F .text	000000000000024c              recv_reset_logs
0000000000bccc16 l     F .text	0000000000000015              yaSSL::DiffieHellman::get_agreedKey() const
0000000000b4c72a l     F .text	0000000000000091              rbt_lookup
0000000000bca186 l     F .text	0000000000000192              yaSSL::CertManager::setPeerX509(yaSSL::X509*)
0000000000aabde7 l     F .text	00000000000000f7              fil_space_release_free_extents
0000000000bbf3ae l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::Swap(mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >&)
0000000000c007f6 l     F .text	0000000000000036              void mySTL::construct<TaoCrypt::Integer, TaoCrypt::Integer>(TaoCrypt::Integer*, TaoCrypt::Integer const&)
000000000099b94c l     F .text	0000000000000062              ha_innobase::innobase_set_max_autoinc(unsigned long long)
0000000000bb3f12 l     F .text	000000000000003c              TaoCrypt::HexDecoder::HexDecoder(TaoCrypt::Source&)
0000000000bb3d50 l     F .text	000000000000001e              yaSSL::EncryptedInfo::EncryptedInfo()
0000000000bdbab1 l     F .text	00000000000000a6              TaoCrypt::EncodeDSA_Signature(unsigned char const*, unsigned char*)
0000000000ab9cfa l     F .text	0000000000000377              flst_insert_after
0000000000bcbac0 l     F .text	0000000000000036              yaSSL::RC4::set_encryptKey(unsigned char const*, unsigned char const*)
0000000000be0a58 l     F .text	0000000000000022              TaoCrypt::HASHwithTransform::GetBitCountHi() const
0000000000b02ab8 l     F .text	000000000000005f              os_file_get_size
0000000000b1b624 l     F .text	00000000000001ec              page_rec_get_n_recs_before
0000000000ae331a l     F .text	000000000000006f              lock_update_split_left
0000000000bbd86d l     F .text	00000000000000a6              yaSSL::InitClientKeyFactory(yaSSL::Factory<yaSSL::ClientKeyBase, int, yaSSL::ClientKeyBase* (*)()>&)
0000000000bd0040 l     F .text	0000000000000041              TaoCrypt::SHA::~SHA()
0000000000b3ed90 l     F .text	000000000000007d              ins_node_set_new_row
0000000000b1b20c l     F .text	0000000000000256              page_dir_balance_slot
0000000000bce590 l     F .text	000000000000001b              yaSSL::Integer::IntegerImpl::IntegerImpl()
0000000000bc22b4 l     F .text	0000000000000056              yaSSL::SSL::set_sessionID(unsigned char const*)
000000000138e708 l     O .bss	0000000000000008              srv_auto_extend_last_data_file
0000000000b21fee l     F .text	0000000000000046              page_zip_empty_size
00000000009c9b3a l     F .text	0000000000000cf9              row_drop_table_for_mysql
0000000000bbebcc l     F .text	0000000000000083              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::reserve(unsigned long)
00000000009fa7f5 l     F .text	0000000000000317              rw_lock_x_lock_func
0000000000bc6700 l     F .text	000000000000002b              yaSSL::Errors::~Errors()
0000000000bb3ef6 l     F .text	000000000000001b              TaoCrypt::Source::~Source()
000000000138e808 l     O .bss	0000000000000008              srv_print_thread_releases
0000000000bcd7ca l     F .text	0000000000000085              TaoCrypt::Mode_BASE::Process(unsigned char*, unsigned char const*, unsigned int)
0000000000bca3f6 l     F .text	0000000000000011              TaoCrypt::CertDecoder::GetIssuerCnLength() const
0000000000bc6878 l     F .text	000000000000001b              yaSSL::Factory<yaSSL::Message, int, yaSSL::Message* (*)()>::~Factory()
0000000000bde796 l     F .text	0000000000000077              TaoCrypt::DSA_PublicKey::DSA_PublicKey(TaoCrypt::DSA_PublicKey const&)
0000000000bb1fe4 l     F .text	0000000000000048              yaSSL_do_handshake
0000000001396c9c l     O .bss	0000000000000004              buffer_block_mutex_key
0000000000bb3ac2 l     F .text	0000000000000013              yaRAND_file_name
0000000000be931a l     F .text	000000000000006f              TaoCrypt::Integer::Power2(unsigned int)
0000000000ad7825 l     F .text	00000000000000ac              pars_open_statement
0000000000bcd568 l     F .text	000000000000000f              yaSSL::DES_EDE::get_ivSize() const
0000000000bb44d4 l     F .text	000000000000002d              yaSSL::Security::~Security()
0000000000bc9816 l     F .text	000000000000001e              yaSSL::CertManager::get_peerKey() const
0000000000bc4900 l     F .text	0000000000000044              yaSSL::SSL_SESSION::~SSL_SESSION()
0000000000bc9020 l     F .text	000000000000002b              yaSSL::output_buffer::eof()
0000000000bd928c l     F .text	000000000000019b              TaoCrypt::DSA_Public_Decoder::Decode(TaoCrypt::DSA_PublicKey&)
0000000000bbd7c7 l     F .text	00000000000000a6              yaSSL::InitServerKeyFactory(yaSSL::Factory<yaSSL::ServerKeyBase, int, yaSSL::ServerKeyBase* (*)()>&)
0000000000a69788 l     F .text	0000000000000525              buf_flush_insert_sorted_into_flush_list
0000000000b2c51e l     F .text	0000000000000463              page_zip_copy_recs
0000000000bc03ce l     F .text	0000000000000012              yaSSL::States::useString()
0000000000bcbcf6 l     F .text	0000000000000044              yaSSL::AES::set_decryptKey(unsigned char const*, unsigned char const*)
0000000000bbc518 l     F .text	0000000000000068              yaSSL::ClientKeyExchange::build(yaSSL::SSL&)
000000000138e930 l     O .bss	0000000000000008              srv_is_being_started
0000000000bcb374 l     F .text	0000000000000051              yaSSL::HMAC_SHA::get_digest(unsigned char*, unsigned char const*, unsigned int)
0000000000bbc5ae l     F .text	000000000000002d              yaSSL::ClientKeyExchange::getKeyLength() const
0000000000beee4e l     F .text	00000000000000a1              TaoCrypt::ModularArithmetic::Square(TaoCrypt::Integer const&) const
0000000000a0fd31 l     F .text	000000000000006c              trx_rollback_last_sql_stat_for_mysql
0000000000bd873c l     F .text	000000000000001b              TaoCrypt::Signer::~Signer()
0000000000bffcf4 l     F .text	000000000000002b              TaoCrypt::WindowSlider::~WindowSlider()
0000000000be1876 l     F .text	000000000000053f              TaoCrypt::Portable::Multiply2Add(unsigned long*, unsigned long const*, unsigned long const*)
0000000000a0b0e2 l     F .text	00000000000000e7              trx_undo_rec_get_pars
0000000000bc0224 l     F .text	0000000000000049              yaSSL::c32toa(unsigned int, unsigned char*)
0000000000bee530 l     F .text	000000000000002a              TaoCrypt::operator>(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bcf508 l     F .text	0000000000000045              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::SetKey(unsigned char const*, unsigned int, unsigned char const*)
0000000000a6d616 l     F .text	0000000000000055              buf_flush_free_margin
0000000000ae3143 l     F .text	0000000000000089              lock_update_split_right
0000000000bdc0da l     F .text	0000000000000043              TaoCrypt::Source::Source(unsigned int)
0000000000bd560a l     F .text	000000000000000b              yaSSL::Socket::~Socket()
0000000000bbe5be l     F .text	000000000000001a              mySTL::list<unsigned char*>::iterator::iterator(mySTL::list<unsigned char*>::node*)
0000000001396b00 l     O .bss	0000000000000004              file_format_max_mutex_key
0000000000bbfb93 l     F .text	0000000000000033              void mySTL::swap<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*>(mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*&, mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*&)
0000000000bbf00e l     F .text	000000000000006d              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::vector(unsigned long, mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> > const&)
0000000000bcbdae l     F .text	0000000000000063              yaSSL::RandomPool::RandomPool()
0000000000a57aba l     F .text	0000000000000657              btr_search_update_hash_on_insert
0000000000b38722 l     F .text	0000000000000357              rec_convert_dtuple_to_rec
0000000000bfe79e l     F .text	00000000000000a5              TaoCrypt::AbstractRing::Divide(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bfe548 l     F .text	000000000000000f              TaoCrypt::SHA512::getByteOrder() const
0000000000bcd632 l     F .text	000000000000000b              TaoCrypt::virtual_base::virtual_base()
0000000000bb6690 l     F .text	0000000000000011              yaSSL::EncryptedPreMasterSecret::get_length() const
00000000009f0ef3 l     F .text	00000000000004e2              srv_export_innodb_status
0000000001391068 l     O .bss	0000000000000008              btr_cur_n_non_sea
0000000000bbe582 l     F .text	0000000000000012              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::end() const
0000000000bbef5a l     F .text	000000000000002e              mySTL::pair<int, yaSSL::Message* (*)()>::pair(int const&, yaSSL::Message* (* const&)())
0000000000bd0253 l     F .text	000000000000018a              yaSSL::buildClientHello(yaSSL::SSL&, yaSSL::ClientHello&)
0000000000a54910 l     F .text	000000000000009c              btr_search_sys_create
0000000000aa856d l     F .text	0000000000000676              fil_delete_tablespace
0000000000bc20e2 l     F .text	0000000000000072              yaSSL::SSL::set_random(unsigned char const*, yaSSL::ConnectionEnd)
0000000000bc692e l     F .text	0000000000000015              yaSSL::yassl_int_cpp_local1::SumBuffer::SumBuffer()
0000000000bca9ae l     F .text	000000000000008d              yaSSL::MD5::MD5(yaSSL::MD5 const&)
00000000009c77c5 l     F .text	00000000000005fe              row_create_table_for_mysql
0000000000c00922 l     F .text	0000000000000052              mySTL::vector_base<TaoCrypt::WindowSlider>::vector_base(unsigned long)
0000000000a0fcda l     F .text	0000000000000057              trx_rollback_for_mysql
0000000000bebc7a l     F .text	0000000000000058              TaoCrypt::Integer::AbsoluteValue() const
00000000009ab916 l     F .text	00000000000006d4              ha_innobase::prepare_drop_index(TABLE*, unsigned int*, unsigned int)
0000000000bf7e10 l     F .text	0000000000000084              TaoCrypt::SHA224::Init()
000000000138e6c0 l     O .bss	0000000000000008              srv_lock_timeout_active
0000000000bcfd6c l     F .text	0000000000000027              TaoCrypt::HMAC<TaoCrypt::SHA>::Init()
0000000000bd387e l     F .text	00000000000001fe              yaSSL::sendClientHello(yaSSL::SSL&)
0000000000bc5ca8 l     F .text	0000000000000012              yaSSL::Crypto::use_dh()
0000000001396ec0 l     O .bss	0000000000000008              recv_max_parsed_page_no
0000000000bc5c2a l     F .text	0000000000000011              yaSSL::Crypto::get_digest() const
000000000138e740 l     O .bss	0000000000000008              srv_file_flush_method_str
0000000000bc05e2 l     F .text	0000000000000012              yaSSL::sslFactory::getHandShake() const
0000000000bdf0d0 l     F .text	00000000000003fb              TaoCrypt::DSA_Verifier::Verify(unsigned char const*, unsigned char const*)
0000000000a26f03 l     F .text	000000000000006a              ut_strcount
0000000000a27770 l     F .text	0000000000000068              ut_delay
0000000000bd79dc l     F .text	0000000000000027              unsigned int TaoCrypt::RoundUpToMultipleOf<unsigned int>(unsigned int, unsigned int)
0000000000a0b3aa l     F .text	00000000000001a2              trx_undo_rec_get_row_ref
0000000000bcaa3c l     F .text	0000000000000034              yaSSL::MD5::operator=(yaSSL::MD5 const&)
0000000000bfe844 l     F .text	000000000000008c              TaoCrypt::AbstractEuclideanDomain::Mod(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000aad491 l     F .text	000000000000014c              fil_flush_file_spaces
0000000000b01e56 l     F .text	0000000000000037              os_file_closedir
0000000000a92515 l     F .text	00000000000000f8              dict_index_build_data_tuple
0000000000bcc98c l     F .text	00000000000000fc              yaSSL::DiffieHellman::DiffieHellman(yaSSL::Integer const&, yaSSL::Integer const&, yaSSL::RandomPool const&)
0000000000bdc082 l     F .text	0000000000000031              TaoCrypt::DER_Encoder::~DER_Encoder()
00000000008cd860 l     F .text	0000000000000041              TaoCrypt::SHA256::~SHA256()
0000000000ab9894 l     F .text	0000000000000233              flst_add_last
0000000000a1ceb4 l     F .text	00000000000003c6              trx_sig_send
0000000000ab0f5b l     F .text	0000000000000100              fsp_header_inc_size
0000000000bc7b94 l     F .text	000000000000002e              mySTL::list<yaSSL::input_buffer*>::list()
00000000008cd790 l     F .text	0000000000000041              TaoCrypt::SHA512::~SHA512()
0000000000bc951a l     F .text	0000000000000016              yaSSL::CertManager::setFailNoCert()
0000000000be056e l     F .text	000000000000006d              TaoCrypt::HASH64withTransform::AddLength(unsigned int)
0000000000bbd954 l     F .text	0000000000000029              yaSSL::Message::Message()
000000000138e7d0 l     O .bss	0000000000000008              srv_thread_concurrency
0000000000bb2789 l     F .text	0000000000000334              yaSSL_CTX_load_verify_locations
0000000000adf730 l     F .text	0000000000000070              lock_rec_expl_exist_on_page
0000000000bb4a9e l     F .text	0000000000000024              void TaoCrypt::tcArrayDelete<unsigned long>(unsigned long*)
000000000138e6f0 l     O .bss	0000000000000008              srv_n_data_files
0000000000bdfc94 l     F .text	000000000000003d              TaoCrypt::AbstractRing::MultiplicativeGroupT::~MultiplicativeGroupT()
0000000000bb96ba l     F .text	0000000000000076              yaSSL::Certificate::Certificate(yaSSL::x509 const*)
0000000000bf8624 l     F .text	00000000000000a4              TaoCrypt::SHA::Swap(TaoCrypt::SHA&)
0000000000ab0a7d l     F .text	000000000000006a              fsp_parse_init_file_page
0000000000a57280 l     F .text	0000000000000356              btr_search_move_or_delete_hash_entries
0000000000abaa7f l     F .text	000000000000024b              flst_truncate_end
0000000000998c42 l     F .text	0000000000000011              ha_innobase::keys_to_use_for_scanning()
0000000000bf122c l     F .text	0000000000000058              TaoCrypt::MD4::Init()
0000000000bb35d1 l     F .text	0000000000000012              yask_GENERAL_NAME_value
0000000000bb2c3a l     F .text	000000000000001e              yaSSL_CTX_sess_number
0000000001396e88 l     O .bss	0000000000000004              log_sys_mutex_key
0000000000bf036c l     F .text	0000000000000049              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::CleanNew(unsigned int)
0000000000bf145c l     F .text	0000000000000953              TaoCrypt::MD4::Transform()
00000000009952a4 l     F .text	000000000000002d              thd_set_lock_wait_time
000000000099cdce l     F .text	00000000000000cc              ha_innobase::try_semi_consistent_read(bool)
0000000000bbfd56 l     F .text	000000000000003d              yaSSL::ChangeCipherSpec::~ChangeCipherSpec()
0000000000bb35c2 l     F .text	000000000000000f              yask_GENERAL_NAME_num
0000000000bbb4c2 l     F .text	00000000000000b2              yaSSL::CertificateRequest::~CertificateRequest()
0000000000bfe598 l     F .text	000000000000000f              TaoCrypt::SHA384::getBlockSize() const
0000000000bce817 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::RSA::RSAImpl>(yaSSL::RSA::RSAImpl*)
0000000000bb74ca l     F .text	00000000000000ea              yaSSL::Parameters::Parameters(yaSSL::ConnectionEnd, yaSSL::Ciphers const&, yaSSL::ProtocolVersion, bool)
0000000000bc0095 l     F .text	0000000000000053              yaSSL::c24to32(unsigned char const*, unsigned int&)
0000000000bdf58b l     F .text	000000000000002a              TaoCrypt::operator==(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bf3276 l     F .text	000000000000004d              TaoCrypt::RandomNumberGenerator::GenerateByte()
0000000000bdc370 l     F .text	000000000000003a              TaoCrypt::Source::advance(unsigned int)
0000000000bd743c l     F .text	0000000000000018              TaoCrypt::HostByteOrderIs(TaoCrypt::ByteOrder)
0000000000bb3821 l     F .text	000000000000003d              yaMD5_Update
0000000000bbf7ea l     F .text	000000000000005c              mySTL::vector_base<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::Swap(mySTL::vector_base<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >&)
0000000000a75298 l     F .text	0000000000000182              buf_LRU_stat_update
0000000000bd5394 l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::Message>::get() const
0000000000bd5502 l     F .text	000000000000002d              yaSSL::Mutex::Lock::Lock(yaSSL::Mutex&)
0000000000bdf092 l     F .text	000000000000003e              TaoCrypt::DSA_Verifier::DSA_Verifier(TaoCrypt::DSA_PublicKey const&)
0000000000a88f82 l     F .text	000000000000012f              dict_index_get_nth_col_or_prefix_pos
000000000138e848 l     O .bss	0000000000000008              srv_n_rows_read
0000000000bdceae l     F .text	000000000000034a              TaoCrypt::Base64Decoder::Decode()
0000000000bcc220 l     F .text	000000000000006e              yaSSL::RSA::RSAImpl::SetPublic(unsigned char const*, unsigned int)
0000000000b08ae2 l     F .text	0000000000000035              os_thread_eq
00000000009f43ec l     F .text	0000000000000519              srv_parse_data_file_paths_and_sizes
0000000000bcb704 l     F .text	000000000000003a              yaSSL::DES::set_encryptKey(unsigned char const*, unsigned char const*)
0000000001396528 l     O .bss	0000000000000008              srv_start_lsn
00000000010f61fc l     O .data	0000000000000004              pars_assert_token
0000000000bbc4a4 l     F .text	000000000000004d              yaSSL::ClientKeyExchange::~ClientKeyExchange()
0000000000bbfcf2 l     F .text	000000000000003d              yaSSL::Certificate::~Certificate()
0000000000bc7fb8 l     F .text	000000000000000b              void mySTL::destroy<mySTL::list<yaSSL::output_buffer*>::node>(mySTL::list<yaSSL::output_buffer*>::node*)
0000000000bb3b33 l     F .text	0000000000000017              yaX509_LOOKUP_load_file
00000000009abfea l     F .text	00000000000003b5              ha_innobase::final_drop_index(TABLE*)
00000000009a3710 l     F .text	000000000000003b              ha_innobase::referenced_by_foreign_key()
0000000000bb16ff l     F .text	0000000000000022              yaSSL_get_fd
0000000000b073b9 l     F .text	0000000000000366              os_mem_alloc_large
0000000000bbcab6 l     F .text	000000000000003a              yaSSL::Finished::Finished()
0000000000bc5eb8 l     F .text	00000000000000f0              yaSSL::Buffers::~Buffers()
0000000000bb1bd3 l     F .text	0000000000000411              yaSSL_accept
0000000000a8b768 l     F .text	000000000000058b              dict_table_remove_from_cache
0000000000bbe686 l     F .text	0000000000000083              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::reserve(unsigned long)
0000000000bb4298 l     F .text	0000000000000068              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::Block(unsigned char const*, unsigned int)
0000000000bd96ec l     F .text	00000000000000fe              TaoCrypt::CertDecoder::ReadHeader()
0000000001393918 l     O .bss	0000000000000008              os_n_file_writes
00000000009bde45 l     F .text	000000000000018c              row_merge_drop_index
00000000010f622c l     O .data	0000000000000004              pars_asc_token
0000000000ae9442 l     F .text	00000000000000c8              lock_queue_iterator_get_prev
0000000000c00a70 l     F .text	000000000000005d              mySTL::vector<TaoCrypt::Integer>::vector(mySTL::vector<TaoCrypt::Integer> const&)
0000000000bb4268 l     F .text	000000000000002f              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::~Block()
0000000000bdfabc l     F .text	0000000000000082              TaoCrypt::AbstractRing::MultiplicativeGroupT::CascadeScalarMultiply(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000a41d85 l     F .text	00000000000004f1              btr_cur_open_at_index_side_func
0000000000bb35e3 l     F .text	0000000000000020              yaASN1_STRING_data
0000000000bcdbb6 l     F .text	000000000000000b              TaoCrypt::ARC4::ARC4()
0000000000a88dbc l     F .text	000000000000002d              dict_table_autoinc_lock
0000000000ad74b7 l     F .text	0000000000000035              pars_exit_statement
0000000000bb4426 l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::x509>::operator->() const
0000000000bb694c l     F .text	0000000000000026              yaSSL::ClientDiffieHellmanPublic::~ClientDiffieHellmanPublic()
0000000001393890 l     O .bss	0000000000000008              lock_deadlock_found
0000000000ade859 l     F .text	0000000000000134              lock_get_src_table
0000000000a1400c l     F .text	0000000000000203              trx_rseg_header_create
0000000000bb41a2 l     F .text	000000000000002b              TaoCrypt::DSA_PrivateKey::~DSA_PrivateKey()
0000000000a46988 l     F .text	0000000000000369              btr_cur_optimistic_delete
0000000000aeb3d2 l     F .text	0000000000000216              log_reserve_and_open
0000000000bcd598 l     F .text	000000000000000f              yaSSL::RC4::get_ivSize() const
0000000000bbc5dc l     F .text	0000000000000012              yaSSL::ClientKeyExchange::set(yaSSL::input_buffer&)
0000000000b0332b l     F .text	0000000000000087              os_file_read_no_error_handling_func
0000000000bfeb0a l     F .text	000000000000073e              TaoCrypt::AbstractGroup::CascadeScalarMultiply(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bd53ca l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::output_buffer>::get() const
0000000000bc7722 l     F .text	000000000000004b              mySTL::list<yaSSL::ThreadError>::begin() const
0000000000bc879a l     F .text	000000000000005b              yaSSL::input_buffer::input_buffer()
0000000000ab1147 l     F .text	00000000000000cb              fsp_header_get_tablespace_size
0000000000bc9530 l     F .text	0000000000000016              yaSSL::CertManager::setSendVerify()
0000000001396ec8 l     O .bss	0000000000000004              recv_sys_mutex_key
0000000000bcef70 l     F .text	000000000000004b              TaoCrypt::HMAC<TaoCrypt::SHA>::Update(unsigned char const*, unsigned int)
0000000000b0894b l     F .text	000000000000002c              os_fast_mutex_lock
0000000000bf0456 l     F .text	000000000000001f              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::operator[](unsigned int)
00000000010f4e40 l     O .data	0000000000000068              i_s_innodb_cmp
0000000000af890f l     F .text	00000000000000a7              mem_heap_strcat
000000000138e7c8 l     O .bss	0000000000000008              srv_max_n_threads
000000000099ce9a l     F .text	000000000000007a              ha_innobase::index_init(unsigned int, bool)
0000000000bbda4e l     F .text	0000000000000031              yaSSL::ClientKeyBase::~ClientKeyBase()
00000000009c63d5 l     F .text	00000000000003e4              row_insert_for_mysql
00000000009c4d42 l     F .text	0000000000000074              row_mysql_read_blob_ref
0000000000bce564 l     F .text	000000000000002b              yaSSL::RSA::RSAImpl::RSAImpl()
0000000000b3766e l     F .text	0000000000000073              rec_get_converted_size_comp_prefix
0000000000af8187 l     F .text	0000000000000027              mem_close
000000000138e6b8 l     O .bss	0000000000000008              srv_dml_needed_delay
0000000000b082ac l     F .text	00000000000001ca              os_event_wait_time_low
0000000000bca80c l     F .text	000000000000001a              mySTL::list<yaSSL::x509*>::reverse_iterator::reverse_iterator(mySTL::list<yaSSL::x509*>::node*)
0000000000bc7c12 l     F .text	000000000000002e              mySTL::list<yaSSL::output_buffer*>::list()
0000000001396d00 l     O .bss	0000000000000004              dict_operation_lock_key
000000000138e680 l     O .bss	0000000000000008              row_rollback_on_timeout
0000000000a2f0c0 l     F .text	00000000000000c7              btr_corruption_report
0000000000bea37c l     F .text	0000000000000082              TaoCrypt::Integer::PositiveCompare(TaoCrypt::Integer const&) const
0000000000bf32c4 l     F .text	000000000000008b              TaoCrypt::OS_Seed::OS_Seed()
0000000000bbdfa0 l     F .text	000000000000004f              mySTL::list<unsigned char*>::~list()
0000000000bdb73a l     F .text	0000000000000135              TaoCrypt::Signature_Encoder::Signature_Encoder(unsigned char const*, unsigned int, TaoCrypt::HashType, TaoCrypt::Source&)
0000000000bd5586 l     F .text	0000000000000013              yaSSL::Log::ShowTCP(int, bool)
00000000009e4d51 l     F .text	000000000000019f              row_upd_changes_field_size_or_external
0000000000ad8638 l     F .text	0000000000000096              pars_info_get_bound_id
0000000000bffea0 l     F .text	0000000000000029              mySTL::vector<TaoCrypt::Integer>::operator[](unsigned long)
0000000001066340 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::CertificateRequest
0000000000a0ce4b l     F .text	000000000000007b              trx_undo_parse_erase_page_end
0000000000ad7954 l     F .text	0000000000000089              pars_column_def
0000000000bb4c04 l     F .text	0000000000000041              yaSSL::Alert::~Alert()
0000000000af9e9e l     F .text	000000000000002a              mem_pool_free
0000000000bde27e l     F .text	0000000000000137              TaoCrypt::DH::GeneratePrivate(TaoCrypt::RandomNumberGenerator&, unsigned char*)
0000000000bb46ac l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::BIGNUM>::auto_ptr(yaSSL::BIGNUM*)
0000000000b240bc l     F .text	0000000000000fd2              page_zip_compress
0000000000bb3ae4 l     F .text	0000000000000013              yaRAND_load_file
0000000000bbfdf8 l     F .text	0000000000000026              yaSSL::HelloRequest::~HelloRequest()
0000000000a3145d l     F .text	0000000000000088              btr_parse_page_reorganize
0000000000b31ef1 l     F .text	00000000000000a8              cmp_dtuple_rec
0000000000bb4750 l     F .text	000000000000005c              TaoCrypt::AllocatorWithCleanup<unsigned char>::allocate(unsigned long, void const*)
0000000000bbe478 l     F .text	0000000000000026              yaSSL::Factory<yaSSL::ClientKeyBase, int, yaSSL::ClientKeyBase* (*)()>::Reserve(unsigned long)
0000000000ad65ff l     F .text	000000000000005b              pars_update_statement_start
00000000010f6258 l     O .data	0000000000000008              os_innodb_umask
00000000010f61d8 l     O .data	0000000000000004              pars_to_binary_token
0000000000be7e25 l     F .text	0000000000000323              TaoCrypt::AsymmetricMultiply(unsigned long*, unsigned long*, unsigned long const*, unsigned int, unsigned long const*, unsigned int)
0000000000a5f28c l     F .text	000000000000028c              buf_pool_watch_unset
00000000009f1a34 l     F .text	000000000000026e              srv_error_monitor_thread
0000000000a0d7ab l     F .text	000000000000010a              trx_undo_get_undo_rec_low
0000000000b1b462 l     F .text	00000000000001c2              page_rec_get_nth_const
0000000000bcd73e l     F .text	0000000000000031              TaoCrypt::Mode_BASE::~Mode_BASE()
0000000000bc7e70 l     F .text	000000000000001b              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::vector()
00000000009c4c0c l     F .text	0000000000000136              row_mysql_store_blob_ref
0000000000bc49b5 l     F .text	0000000000000071              yaSSL::GetSSL_Factory()
0000000000bcce37 l     F .text	0000000000000630              yaSSL::PemToDer(_IO_FILE*, yaSSL::CertType, yaSSL::EncryptedInfo*)
0000000000a9893b l     F .text	000000000000004d              dict_process_sys_columns_rec
0000000000bfe45e l     F .text	000000000000002a              TaoCrypt::SHA384::Transform()
0000000000bbd948 l     F .text	000000000000000b              yaSSL::virtual_base::virtual_base()
0000000000bcd578 l     F .text	000000000000000f              yaSSL::RC4::get_blockSize() const
0000000000bb39a7 l     F .text	0000000000000055              yaSSL_pending
0000000000b05795 l     F .text	000000000000033a              os_aio_linux_handle
00000000010f6224 l     O .data	0000000000000004              pars_float_token
0000000000bc0606 l     F .text	0000000000000012              yaSSL::sslFactory::getClientKey() const
0000000001066300 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::CertificateVerify
0000000000be9268 l     F .text	00000000000000b2              TaoCrypt::Integer::Randomize(TaoCrypt::RandomNumberGenerator&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bf800c l     F .text	00000000000000a5              TaoCrypt::SHA::SHA(TaoCrypt::SHA const&)
00000000009a639a l     F .text	0000000000000051              ha_innobase::register_query_cache_table(THD*, char*, unsigned int, char (**)(THD*, char*, unsigned int, unsigned long long*), unsigned long long*)
0000000000bc8078 l     F .text	000000000000001a              mySTL::list<yaSSL::SSL_SESSION*>::iterator::iterator(mySTL::list<yaSSL::SSL_SESSION*>::node*)
0000000000bc003a l     F .text	0000000000000024              operator delete[](void*, yaSSL::new_t)
0000000000a30837 l     F .text	000000000000032f              btr_create
0000000000bcf0c8 l     F .text	00000000000000fd              TaoCrypt::HMAC<TaoCrypt::RIPEMD160>::SetKey(unsigned char const*, unsigned int)
0000000001395890 l     O .bss	0000000000000010              srv_n_threads_active
0000000000b02226 l     F .text	00000000000001b2              os_file_create_simple_func
0000000000bbcdb4 l     F .text	0000000000000054              yaSSL::Connection::CleanMaster()
0000000000b376e1 l     F .text	0000000000000207              rec_get_converted_size_comp
00000000010cc4a8 l     O .data.rel.ro	0000000000000028              vtable for TaoCrypt::BER_Decoder
000000000138e7a0 l     O .bss	0000000000000008              srv_buf_pool_write_requests
0000000000bb34cb l     F .text	000000000000000b              yaSSL_SESSION_free
0000000000bcaf80 l     F .text	000000000000000f              yaSSL::RMD::get_digestSize() const
0000000000bed648 l     F .text	00000000000000ee              TaoCrypt::MontgomeryRepresentation::MontgomeryRepresentation(TaoCrypt::Integer const&)
0000000001390228 l     O .bss	0000000000000008              rw_x_exit_count
0000000000bcd63e l     F .text	0000000000000047              TaoCrypt::SHA::SHA()
0000000000bef5ba l     F .text	000000000000001a              TaoCrypt::Word::Word(unsigned long)
00000000010f5f98 l     O .data	0000000000000008              srv_stats_sample_pages
0000000000a19c78 l     F .text	0000000000000032              trx_set_detailed_error_from_file
0000000001390208 l     O .bss	0000000000000008              rw_s_exit_count
0000000000bdc4a0 l     F .text	000000000000002a              TaoCrypt::RSA_PrivateKey::SetModPrime1PrivateExponent(TaoCrypt::Integer const&)
0000000000bf88b4 l     F .text	00000000000000a4              TaoCrypt::SHA384::Swap(TaoCrypt::SHA384&)
0000000000a7bbff l     F .text	000000000000016c              dtuple_convert_back_big_rec
0000000000bfe638 l     F .text	00000000000000a3              TaoCrypt::AbstractGroup::Subtract(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000be958e l     F .text	0000000000000093              TaoCrypt::Integer::operator=(TaoCrypt::Integer const&)
0000000000b0f006 l     F .text	0000000000000848              page_cur_search_with_match
0000000000bb471a l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::BIGNUM>::get() const
0000000000a31dc4 l     F .text	00000000000000e2              btr_page_get_split_rec_to_right
0000000000bbff88 l     F .text	0000000000000026              yaSSL::Fortezza_Server::~Fortezza_Server()
0000000000bc8986 l     F .text	0000000000000012              yaSSL::input_buffer::get_buffer() const
00000000010f61f0 l     O .data	0000000000000004              pars_length_token
0000000000bcef54 l     F .text	000000000000001b              yaSSL::HMAC_SHA::HMAC_SHAImpl::~HMAC_SHAImpl()
0000000000a6d818 l     F .text	0000000000000129              buf_flush_get_desired_flush_rate
00000000010cc460 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::Digest
0000000000af7207 l     F .text	00000000000000b9              recv_recovery_from_checkpoint_finish
0000000000aef314 l     F .text	0000000000000186              log_print
0000000000bdc712 l     F .text	0000000000000026              TaoCrypt::DH_Decoder::~DH_Decoder()
0000000000bb210e l     F .text	000000000000002a              yaSSL_set_quiet_shutdown
0000000000bf7314 l     F .text	000000000000000f              TaoCrypt::RIPEMD160::getDigestSize() const
0000000000bbfc2a l     F .text	000000000000003d              yaSSL::ServerHelloDone::~ServerHelloDone()
0000000000bbf0d8 l     F .text	000000000000002e              mySTL::pair<int, yaSSL::HandShakeBase* (*)()>::pair(int const&, yaSSL::HandShakeBase* (* const&)())
0000000000bc0386 l     F .text	0000000000000012              yaSSL::States::useClient()
0000000000bbfe82 l     F .text	000000000000003d              yaSSL::FortezzaKeys::~FortezzaKeys()
0000000000bc7f82 l     F .text	0000000000000015              mySTL::list<yaSSL::output_buffer*>::iterator::operator*() const
00000000013958a0 l     O .bss	0000000000000008              srv_timeout_event
00000000010f6248 l     O .data	0000000000000008              pars_star_denoter
00000000010cc590 l     O .data.rel.ro	00000000000000e8              vtable for TaoCrypt::MontgomeryRepresentation
0000000000bcdbc2 l     F .text	000000000000003e              TaoCrypt::AES::AES(TaoCrypt::CipherDir, TaoCrypt::Mode)
0000000000bbee4f l     F .text	000000000000001b              void yaSSL::checked_delete<unsigned char>(unsigned char*)
0000000000bc9292 l     F .text	00000000000000ad              yaSSL::CertManager::CertManager()
0000000000bc8dc8 l     F .text	000000000000003d              yaSSL::output_buffer::output_buffer()
0000000000bf8158 l     F .text	00000000000000a5              TaoCrypt::SHA224::SHA224(TaoCrypt::SHA224 const&)
0000000000af8526 l     F .text	0000000000000048              mem_heap_check
00000000010f61e4 l     O .data	0000000000000004              pars_replstr_token
0000000000bdc004 l     F .text	000000000000001e              TaoCrypt::PublicKey::~PublicKey()
0000000000bcd850 l     F .text	0000000000000082              TaoCrypt::Mode_BASE::ECB_Process(unsigned char*, unsigned char const*, unsigned int)
000000000138e758 l     O .bss	0000000000000008              srv_innodb_stats_method
0000000000ad85a2 l     F .text	0000000000000096              pars_info_get_bound_lit
0000000000c00456 l     F .text	000000000000001b              mySTL::vector<TaoCrypt::Integer>::vector()
0000000000abb010 l     F .text	000000000000011f              flst_print
0000000000bd9e36 l     F .text	00000000000001aa              TaoCrypt::CertDecoder::GetAlgoId()
0000000000bbf402 l     F .text	0000000000000039              void mySTL::construct<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>, mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >(mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>*, mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> const&)
0000000000bc698e l     F .text	0000000000000050              yaSSL::yassl_int_cpp_local2::sess_match::operator()(yaSSL::SSL_SESSION*)
0000000000bf7e94 l     F .text	00000000000000bc              TaoCrypt::SHA512::Init()
0000000000bcd528 l     F .text	000000000000000f              yaSSL::DES::get_keySize() const
0000000000bc64be l     F .text	000000000000006b              yaSSL::StringHolder::StringHolder(char const*, int)
0000000000a7abb6 l     F .text	0000000000000131              dtuple_validate
00000000009f5eb3 l     F .text	0000000000001c4f              innobase_start_or_create_for_mysql
0000000000ae5639 l     F .text	0000000000000127              lock_cancel_waiting_and_release
0000000000bc6a34 l     F .text	000000000000002b              yaSSL::DH_Parms::~DH_Parms()
0000000000bc56e4 l     F .text	000000000000001e              yaSSL::SSL_CTX::setVerifyCallback(int (*)(int, yaSSL::X509_STORE_CTX*))
0000000000bca33c l     F .text	0000000000000012              TaoCrypt::CertDecoder::GetPublicKey() const
00000000013958a8 l     O .bss	0000000000000004              srv_innodb_monitor_mutex_key
0000000000bee76c l     F .text	000000000000007f              TaoCrypt::EuclideanDomainOf::Add(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
000000000138e810 l     O .bss	0000000000000008              srv_print_lock_waits
0000000000a4f04d l     F .text	000000000000029d              btr_pcur_move_to_next_page
0000000000bc6780 l     F .text	00000000000000bc              yaSSL::Stats::Stats()
0000000000aa49ad l     F .text	00000000000000af              fil_space_get_type
0000000000bbf166 l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::capacity() const
0000000000a990d3 l     F .text	00000000000004da              dict_load_column_low
0000000000bb4498 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::SSL_CTX>(yaSSL::SSL_CTX*)
000000000099de22 l     F .text	000000000000004b              ha_innobase::index_next_same(unsigned char*, unsigned char const*, unsigned int)
00000000009f00d0 l     F .text	00000000000005db              srv_suspend_mysql_thread
0000000000bb1b49 l     F .text	000000000000008a              yaSSL_read
0000000000bc3c8e l     F .text	0000000000000050              yaSSL::SSL::verfiyHandShakeComplete()
0000000000a93d78 l     F .text	00000000000001f5              dict_table_replace_index_in_foreign_list
0000000000bbdb1e l     F .text	0000000000000029              yaSSL::HandShakeBase::HandShakeBase()
0000000000bd5238 l     F .text	0000000000000029              yaSSL::RecordLayerHeader::RecordLayerHeader()
0000000000bc6f64 l     F .text	00000000000000a5              mySTL::list<yaSSL::input_buffer*>::pop_front()
0000000000bc4a98 l     F .text	000000000000010e              yaSSL::Sessions::add(yaSSL::SSL const&)
0000000000bd4618 l     F .text	00000000000000b4              yaSSL::sendAlert(yaSSL::SSL&, yaSSL::Alert const&)
0000000000d52840 l     O .rodata	0000000000001400              TaoCrypt::AES::Td
0000000001396f80 l     O .bss	0000000000000008              os_large_page_size
0000000000a4e4bf l     F .text	00000000000003a8              btr_pcur_store_position
0000000000bcc836 l     F .text	0000000000000155              yaSSL::DiffieHellman::DiffieHellman(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, yaSSL::RandomPool const&)
0000000000bb83e0 l     F .text	0000000000000043              yaSSL::Alert::Alert(yaSSL::AlertLevel, yaSSL::AlertDescription)
0000000000a11a13 l     F .text	00000000000000d2              trx_roll_graph_build
0000000000bc5932 l     F .text	0000000000000247              yaSSL::SSL_CTX::IncrementStats(yaSSL::StatsField)
0000000000a66fc4 l     F .text	000000000000028e              buf_print_io
0000000000bc7e54 l     F .text	000000000000001b              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::vector()
00000000009a5cbe l     F .text	0000000000000383              ha_innobase::get_auto_increment(unsigned long long, unsigned long long, unsigned long long, unsigned long long*, unsigned long long*)
0000000000bc5bcc l     F .text	000000000000005e              yaSSL::Crypto::~Crypto()
000000000099d4b0 l     F .text	0000000000000040              ha_innobase::index_read_last(unsigned char*, unsigned char const*, unsigned int)
0000000000bc2ca2 l     F .text	0000000000000196              yaSSL::SSL::deriveTLSKeys()
0000000000a3429e l     F .text	000000000000013c              btr_node_ptr_delete
0000000000bde464 l     F .text	000000000000011c              TaoCrypt::DH::Agree(unsigned char*, unsigned char const*, unsigned char const*, unsigned int)
0000000000bf06ef l     F .text	000000000000017a              TaoCrypt::DWord TaoCrypt::DivideFourWordsByTwo<unsigned long, TaoCrypt::DWord>(unsigned long*, TaoCrypt::DWord const&, TaoCrypt::DWord const&, TaoCrypt::DWord const&)
0000000000bbf18c l     F .text	000000000000006d              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::vector(unsigned long, mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> > const&)
0000000000bbf539 l     F .text	0000000000000030              void mySTL::destroy<mySTL::pair<int, yaSSL::Message* (*)()>*>(mySTL::pair<int, yaSSL::Message* (*)()>*, mySTL::pair<int, yaSSL::Message* (*)()>*)
0000000000bc5c60 l     F .text	0000000000000012              yaSSL::Crypto::get_random() const
00000000008cd7f8 l     F .text	0000000000000041              TaoCrypt::SHA384::~SHA384()
0000000000bf2edc l     F .text	000000000000000f              TaoCrypt::MD5::getPadSize() const
0000000000a18243 l     F .text	00000000000000f2              trx_sys_file_format_max_upgrade
0000000000bbc5ee l     F .text	0000000000000025              yaSSL::ClientKeyExchange::get(yaSSL::output_buffer&) const
0000000000bcebe4 l     F .text	00000000000000fd              TaoCrypt::HMAC<TaoCrypt::MD5>::SetKey(unsigned char const*, unsigned int)
0000000000bce3c0 l     F .text	000000000000002d              yaSSL::DES_EDE::DES_EDEImpl::DES_EDEImpl()
0000000000a921ba l     F .text	0000000000000090              dict_index_check_search_tuple
0000000000bc6c02 l     F .text	000000000000002e              mySTL::list<yaSSL::SSL_SESSION*>::list()
0000000000bc69de l     F .text	000000000000001e              yaSSL::yassl_int_cpp_local2::thr_match::thr_match()
00000000009e50a3 l     F .text	00000000000000e3              row_upd_write_sys_vals_to_log
00000000010cc968 l     O .data.rel.ro	0000000000000060              vtable for TaoCrypt::SHA384
00000000009f1e9f l     F .text	0000000000000092              srv_wake_purge_thread_if_not_active
0000000000bc2e38 l     F .text	00000000000001ee              yaSSL::SSL::storeKeys(unsigned char const*)
0000000000bb810e l     F .text	000000000000000f              yaSSL::HandShakeBase::get_type() const
0000000000bc70fe l     F .text	0000000000000046              mySTL::list<yaSSL::output_buffer*>::end() const
0000000000aa79a0 l     F .text	00000000000000a7              fil_set_max_space_id_if_bigger
0000000000c00847 l     F .text	0000000000000038              mySTL::vector<TaoCrypt::Integer>* mySTL::GetArrayMemory<mySTL::vector<TaoCrypt::Integer> >(unsigned long)
0000000000bb3283 l     F .text	000000000000001d              yaDES_set_key_unchecked
0000000000995cd2 l     F .text	0000000000000038              innobase_get_stmt
0000000000bbdaa6 l     F .text	000000000000000f              yaSSL::ClientKeyBase::build(yaSSL::SSL&)
0000000000bcdd98 l     F .text	000000000000000e              TaoCrypt::RSA_PublicKey::GetModulus() const
0000000000bb2627 l     F .text	0000000000000007              yaSSL_load_error_strings
0000000000bb0815 l     F .text	00000000000009ad              yaSSL::read_file(yaSSL::SSL_CTX*, char const*, int, yaSSL::CertType)
0000000000bb74a6 l     F .text	0000000000000011              yaSSL::DH_Server::get_length() const
0000000000ae78ff l     F .text	0000000000000481              lock_rec_insert_check_and_lock
0000000000bc5702 l     F .text	0000000000000067              yaSSL::SSL_CTX::SetDH(yaSSL::DH const&)
0000000000c00974 l     F .text	000000000000005c              mySTL::vector_base<TaoCrypt::WindowSlider>::Swap(mySTL::vector_base<TaoCrypt::WindowSlider>&)
0000000000bbf486 l     F .text	0000000000000052              mySTL::vector_base<mySTL::pair<int, yaSSL::Message* (*)()> >::vector_base(unsigned long)
0000000000ad1678 l     F .text	000000000000003f              pars_lexer_close
0000000000bca7da l     F .text	0000000000000032              mySTL::list<TaoCrypt::Signer*>::node::node(TaoCrypt::Signer*)
0000000000a171b9 l     F .text	00000000000000c5              trx_sys_flush_max_trx_id
0000000000bce2f8 l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000bb3cf8 l     F .text	0000000000000031              yaSSL::HandShakeBase::~HandShakeBase()
0000000000b122ef l     F .text	0000000000000165              page_parse_copy_rec_list_to_created_page
000000000138e6d8 l     O .bss	0000000000000008              srv_data_home
0000000000bf08c4 l     F .text	0000000000000078              TaoCrypt::AllocatorWithCleanup<unsigned long>::allocate(unsigned long, void const*)
00000000010f61e8 l     O .data	0000000000000004              pars_concat_token
0000000000bb9c9c l     F .text	0000000000000012              yaSSL::ServerDHParams::get_p() const
0000000000ad78d1 l     F .text	0000000000000051              pars_row_printf_statement
0000000000bbcbe6 l     F .text	000000000000010d              yaSSL::Connection::Connection(yaSSL::ProtocolVersion, yaSSL::RandomPool&)
00000000010667a0 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::RSA_Server
0000000000bbc42e l     F .text	0000000000000040              yaSSL::ClientKeyExchange::ClientKeyExchange(yaSSL::SSL&)
0000000000bdea1e l     F .text	0000000000000026              TaoCrypt::DSA_PublicKey::SetModulus(TaoCrypt::Integer const&)
0000000000a5f940 l     F .text	0000000000000133              buf_page_set_file_page_was_freed
0000000000bcdf2c l     F .text	0000000000000041              TaoCrypt::DH::DH(TaoCrypt::DH const&)
0000000000b08701 l     F .text	00000000000001aa              os_mutex_free
0000000000bc6e78 l     F .text	0000000000000020              mySTL::list<yaSSL::x509*>::iterator::operator++()
0000000000bbe50a l     F .text	0000000000000011              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::begin() const
0000000000ade6bf l     F .text	000000000000008b              lock_sys_create
0000000000bffe6a l     F .text	0000000000000035              mySTL::vector<TaoCrypt::Integer>::~vector()
0000000000bb8998 l     F .text	0000000000000038              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::Data const&)
0000000000bb965a l     F .text	0000000000000030              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::HandShakeBase&)
0000000000a7325a l     F .text	0000000000000026              buf_LRU_add_block
0000000000bdf810 l     F .text	0000000000000049              TaoCrypt::AbstractRing::AbstractRing()
000000000136cb58 l     O .data	0000000000000008              TaoCrypt::AES::Td1
0000000000bc80c5 l     F .text	000000000000001b              void yaSSL::checked_delete<yaSSL::SSL_SESSION>(yaSSL::SSL_SESSION*)
0000000000bfea96 l     F .text	0000000000000074              TaoCrypt::AbstractGroup::ScalarMultiply(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bb8424 l     F .text	000000000000000f              yaSSL::Alert::get_type() const
0000000000bbefc2 l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::size() const
0000000000beb816 l     F .text	000000000000007b              TaoCrypt::Integer::Modulo(TaoCrypt::Integer const&) const
0000000000bdb1b2 l     F .text	0000000000000587              TaoCrypt::CertDecoder::ConfirmSignature(TaoCrypt::Source&)
0000000000ad7d70 l     F .text	00000000000000a4              pars_get_lex_chars
0000000000a48806 l     F .text	000000000000019b              btr_cur_disown_inherited_fields
0000000000bb9c28 l     F .text	000000000000003f              yaSSL::ServerDHParams::~ServerDHParams()
00000000010f5ef8 l     O .data	0000000000000008              srv_log_file_size
00000000009c6998 l     F .text	0000000000000102              row_get_prebuilt_update_vector
000000000138e778 l     O .bss	0000000000000008              srv_os_log_written
0000000000bb47ac l     F .text	0000000000000041              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::CleanNew(unsigned int)
0000000000bb4370 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::BulkCipher>::auto_ptr(yaSSL::BulkCipher*)
0000000000bcd5a8 l     F .text	000000000000000f              yaSSL::AES::get_blockSize() const
00000000009e4b2f l     F .text	0000000000000136              row_upd_rec_sys_fields_in_recovery
0000000001396560 l     O .bss	0000000000000098              rw_lock_list_mutex
00000000013958b0 l     O .bss	0000000000000018              srv_conc_queue
0000000001393920 l     O .bss	0000000000000008              os_n_fsyncs
0000000000bcc71c l     F .text	0000000000000071              yaSSL::Integer::Integer(yaSSL::Integer const&)
0000000000ab3c54 l     F .text	000000000000003a              fseg_create
0000000000bd78e4 l     F .text	0000000000000051              TaoCrypt::GetBlock<unsigned int, TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 1>, true>& TaoCrypt::GetBlock<unsigned int, TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 1>, true>::operator()<unsigned int>(unsigned int&)
0000000000bdf7a8 l     F .text	000000000000000f              TaoCrypt::AbstractGroup::InversionIsFast() const
0000000000a1d9c3 l     F .text	0000000000000197              trx_commit_step
0000000000bc6cae l     F .text	000000000000004f              mySTL::list<yaSSL::ThreadError>::~list()
0000000000bc73e5 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::X509>(yaSSL::X509*)
0000000000bca6b8 l     F .text	0000000000000012              mySTL::list<yaSSL::x509*>::size() const
0000000000bcdb56 l     F .text	000000000000003e              TaoCrypt::DES_EDE3::DES_EDE3(TaoCrypt::CipherDir, TaoCrypt::Mode)
0000000000bbb2e4 l     F .text	000000000000004d              yaSSL::ServerKeyExchange::~ServerKeyExchange()
0000000000a27be8 l     F .text	000000000000049b              ut_strerr
0000000000bbddda l     F .text	000000000000007c              yaSSL::Factory<yaSSL::HandShakeBase, int, yaSSL::HandShakeBase* (*)()>::CreateObject(int const&) const
0000000000bc4900 l     F .text	0000000000000044              yaSSL::SSL_SESSION::~SSL_SESSION()
0000000000be90f1 l     F .text	000000000000003b              TaoCrypt::CleanUp()
0000000000b50dfc l     F .text	0000000000000216              if_step
0000000001396cb0 l     O .bss	0000000000000010              buf_LRU_stat_sum
0000000000bdc8c8 l     F .text	000000000000003d              TaoCrypt::Signature_Encoder::~Signature_Encoder()
0000000000a03399 l     F .text	0000000000000255              trx_purge_sys_create
0000000000a17514 l     F .text	0000000000000160              trx_sys_print_mysql_master_log_pos
00000000010cc908 l     O .data.rel.ro	0000000000000060              vtable for TaoCrypt::RIPEMD160
0000000000bf2f77 l     F .text	0000000000000024              operator delete[](void*, TaoCrypt::new_t)
0000000000a1c817 l     F .text	00000000000001b6              trx_end_lock_wait
0000000000b31f99 l     F .text	000000000000012a              cmp_dtuple_is_prefix_of_rec
0000000000bbea0a l     F .text	0000000000000083              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::reserve(unsigned long)
0000000000bd0152 l     F .text	0000000000000026              TaoCrypt::DES::~DES()
0000000000bbfd94 l     F .text	0000000000000026              yaSSL::ChangeCipherSpec::~ChangeCipherSpec()
0000000000bea86e l     F .text	000000000000011f              TaoCrypt::Integer::Minus(TaoCrypt::Integer const&) const
00000000009c5481 l     F .text	000000000000022f              row_mysql_handle_errors
0000000000bb9762 l     F .text	0000000000000104              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::Certificate const&)
0000000000bce314 l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000a0c676 l     F .text	0000000000000435              trx_undo_update_rec_get_update
00000000009c8243 l     F .text	00000000000002de              row_drop_tables_for_mysql_in_background
0000000000a575d6 l     F .text	00000000000002f3              btr_search_update_hash_on_delete
0000000000bc05d4 l     F .text	000000000000000e              yaSSL::sslFactory::getMessage() const
0000000000bc6584 l     F .text	000000000000005a              yayaSSL_CleanUp
0000000000aaf9d2 l     F .text	000000000000001e              fsp_get_size_low
0000000000bef758 l     F .text	0000000000000015              TaoCrypt::Word::GetHighHalf() const
0000000000bcfb28 l     F .text	00000000000001c9              TaoCrypt::RSA_Decryptor<TaoCrypt::RSA_BlockType2>::Decrypt(unsigned char const*, unsigned int, unsigned char*, TaoCrypt::RandomNumberGenerator&)
0000000000bc435c l     F .text	0000000000000014              yaSSL::SSL::useSecurity()
0000000000bbdc3e l     F .text	000000000000007c              yaSSL::Factory<yaSSL::ClientKeyBase, int, yaSSL::ClientKeyBase* (*)()>::CreateObject(int const&) const
0000000000bc618e l     F .text	0000000000000014              yaSSL::Security::use_resume()
0000000000bde62a l     F .text	0000000000000028              TaoCrypt::operator<(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bc7c8f l     F .text	0000000000000057              yaSSL::del_ptr_zero mySTL::for_each<mySTL::list<yaSSL::output_buffer*>::iterator, yaSSL::del_ptr_zero>(mySTL::list<yaSSL::output_buffer*>::iterator, mySTL::list<yaSSL::output_buffer*>::iterator, yaSSL::del_ptr_zero)
0000000000be0b34 l     F .text	000000000000001c              unsigned int TaoCrypt::SafeRightShift<32u, unsigned int>(unsigned int)
0000000000bc7e01 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::Errors>(yaSSL::Errors*)
0000000000b2b4c2 l     F .text	0000000000000093              page_zip_rec_set_owned
0000000000a75231 l     F .text	0000000000000067              buf_LRU_old_ratio_update
0000000000bb666a l     F .text	0000000000000026              yaSSL::EncryptedPreMasterSecret::~EncryptedPreMasterSecret()
0000000000a4f2ea l     F .text	0000000000000247              btr_pcur_move_backward_from_page
0000000000bbfe1e l     F .text	000000000000003d              yaSSL::HandShakeHeader::~HandShakeHeader()
0000000000c00554 l     F .text	000000000000006d              mySTL::vector<TaoCrypt::WindowSlider>::vector(unsigned long, mySTL::vector<TaoCrypt::WindowSlider> const&)
00000000010f60d8 l     O .data	0000000000000001              btr_search_enabled
0000000000bdc2fa l     F .text	0000000000000075              TaoCrypt::Source::add(unsigned char const*, unsigned int)
0000000000bd52d0 l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::Digest>::operator->() const
0000000000a1ace6 l     F .text	000000000000019c              trx_free_for_mysql
0000000000bee5ae l     F .text	0000000000000025              TaoCrypt::operator%(TaoCrypt::Integer const&, unsigned long)
0000000000ae378f l     F .text	0000000000000136              lock_update_delete
0000000000be0c14 l     F .text	0000000000000011              unsigned int TaoCrypt::SafeShifter<true>::RightShift<unsigned int>(unsigned int, unsigned int)
0000000001391060 l     O .bss	0000000000000008              btr_cur_print_record_ops
0000000000a42276 l     F .text	000000000000039c              btr_cur_open_at_rnd_pos_func
0000000000bf0475 l     F .text	000000000000001f              unsigned long TaoCrypt::SafeRightShift<64u, unsigned long>(unsigned long)
0000000000a4b6dc l     F .text	0000000000000174              btr_copy_externally_stored_field_prefix
0000000000bbf30a l     F .text	000000000000006d              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::vector(unsigned long, mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> > const&)
0000000000be0a7a l     F .text	0000000000000014              TaoCrypt::HASH64withTransform::GetBitCountLo() const
00000000010cca28 l     O .data.rel.ro	0000000000000060              vtable for TaoCrypt::SHA224
0000000000a4e48c l     F .text	0000000000000033              btr_pcur_free_for_mysql
0000000000bce678 l     F .text	0000000000000089              yaSSL::DiffieHellman::DHImpl::DHImpl(yaSSL::DiffieHellman::DHImpl const&)
0000000000a7ace7 l     F .text	00000000000001c0              dfield_print
0000000000a14b52 l     F .text	000000000000022d              trx_rseg_create
0000000000b080b2 l     F .text	0000000000000188              os_event_free
00000000013958e0 l     O .bss	0000000000000410              srv_io_thread_function
0000000000bc925e l     F .text	0000000000000010              yaSSL::x509::get_length() const
0000000000bc2226 l     F .text	0000000000000028              yaSSL::SSL::UnSetCompression()
00000000010f5fd8 l     O .data	0000000000000008              srv_print_verbose_log
0000000000abbf15 l     F .text	00000000000001b3              ha_create_func
0000000000bb9db8 l     F .text	000000000000000f              yaSSL::ServerKeyBase::get_serverKey() const
0000000000bf79e6 l     F .text	000000000000013b              TaoCrypt::RSA_BlockType1::UnPad(unsigned char const*, unsigned int, unsigned char*) const
0000000000bbbb24 l     F .text	0000000000000026              yaSSL::CertificateVerify::~CertificateVerify()
0000000000a7e49b l     F .text	0000000000000068              dict_create
0000000000bbccf4 l     F .text	0000000000000036              yaSSL::Connection::~Connection()
00000000009fb45f l     F .text	0000000000000279              mutex_free_func
0000000000bea98e l     F .text	0000000000000061              TaoCrypt::Integer::Times(TaoCrypt::Integer const&) const
0000000000bb2515 l     F .text	00000000000000de              yaX509_NAME_oneline
0000000000bef274 l     F .text	000000000000002a              TaoCrypt::DWord::DWord(unsigned long, unsigned long)
0000000000bb9eed l     F .text	0000000000000101              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::ServerHello const&)
00000000010f5ef0 l     O .data	0000000000000008              srv_n_log_files
00000000009995c2 l     F .text	0000000000000275              ha_innobase::innobase_initialize_autoinc()
0000000000bb8204 l     F .text	0000000000000034              yaSSL::ChangeCipherSpec::ChangeCipherSpec()
0000000000aadc50 l     F .text	0000000000000029              fil_addr_is_null
0000000000bc7bc2 l     F .text	000000000000004f              mySTL::list<yaSSL::input_buffer*>::~list()
0000000000bde6a6 l     F .text	0000000000000038              TaoCrypt::DH_Decoder::DH_Decoder(TaoCrypt::Source&)
0000000000bc61a2 l     F .text	000000000000001e              yaSSL::Security::set_resuming(bool)
0000000000c00906 l     F .text	000000000000001b              void mySTL::destroy<mySTL::vector<TaoCrypt::Integer> >(mySTL::vector<TaoCrypt::Integer>*)
0000000000bc68e8 l     F .text	0000000000000015              yaSSL::yassl_int_cpp_local1::SumData::SumData()
0000000000bea3fe l     F .text	000000000000006b              TaoCrypt::Integer::GetBit(unsigned int) const
0000000000bc4074 l     F .text	000000000000012e              yaSSL::SSL::matchSuite(unsigned char const*, unsigned int)
0000000000abacca l     F .text	0000000000000346              flst_validate
0000000000bbb2ae l     F .text	0000000000000035              yaSSL::ServerKeyExchange::ServerKeyExchange()
0000000000bfe6dc l     F .text	0000000000000047              TaoCrypt::AbstractGroup::Accumulate(TaoCrypt::Integer&, TaoCrypt::Integer const&) const
0000000000bf0996 l     F .text	000000000000010b              TaoCrypt::AllocatorWithCleanup<unsigned long>::pointer TaoCrypt::StdReallocate<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >(TaoCrypt::AllocatorWithCleanup<unsigned long>&, unsigned long*, TaoCrypt::AllocatorWithCleanup<unsigned long>::size_type, TaoCrypt::AllocatorWithCleanup<unsigned long>::size_type, bool)
0000000000bf82a4 l     F .text	00000000000000a5              TaoCrypt::SHA384::SHA384(TaoCrypt::SHA384 const&)
00000000009bdfd1 l     F .text	000000000000005d              row_merge_drop_indexes
0000000000bb4298 l     F .text	0000000000000068              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::Block(unsigned char const*, unsigned int)
0000000000bd9ca8 l     F .text	000000000000018e              TaoCrypt::CertDecoder::AddDSA()
0000000000bc639a l     F .text	0000000000000123              yaSSL::X509_NAME::GetEntry(int)
0000000000bb82a4 l     F .text	000000000000013c              yaSSL::ChangeCipherSpec::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000a890db l     F .text	0000000000000104              dict_index_contains_col_or_prefix
0000000000bc5e4a l     F .text	0000000000000012              yaSSL::sslHashes::use_certVerify()
0000000000bfe5c7 l     F .text	0000000000000033              unsigned long TaoCrypt::rotrFixed<unsigned long>(unsigned long, unsigned int)
0000000000bcf064 l     F .text	0000000000000063              TaoCrypt::HMAC<TaoCrypt::RIPEMD160>::HMAC()
0000000000ad7e8b l     F .text	00000000000001a7              pars_sql
00000000009ec6f6 l     F .text	0000000000000779              row_vers_impl_x_locked_off_kernel
0000000000bcf6ea l     F .text	0000000000000031              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::AES, (TaoCrypt::Mode)1>::Process(unsigned char*, unsigned char const*, unsigned int)
0000000000bca93a l     F .text	000000000000004d              yaSSL::MD5::~MD5()
00000000010f5fb8 l     O .data	0000000000000008              srv_n_free_tickets_to_enter
0000000000abcdd7 l     F .text	000000000000016a              ha_print_info
00000000010662c0 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::ClientKeyExchange
0000000000bc9496 l     F .text	0000000000000015              yaSSL::CertManager::verifyNone() const
0000000000b01d3c l     F .text	000000000000004c              os_io_init_simple
0000000000ab853b l     F .text	000000000000073e              fsp_print
0000000000a5d858 l     F .text	000000000000032b              buf_pool_init_instance
0000000001066720 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::EncryptedPreMasterSecret
0000000001391010 l     O .bss	0000000000000008              trx_n_mysql_transactions
0000000000b2c981 l     F .text	000000000000026a              page_zip_parse_compress
0000000000bddc56 l     F .text	00000000000000f5              TaoCrypt::DES::ProcessAndXorBlock(unsigned char const*, unsigned char const*, unsigned char*) const
0000000000af8144 l     F .text	0000000000000043              mem_init
0000000000bcf790 l     F .text	000000000000001a              TaoCrypt::RSA_Decryptor<TaoCrypt::RSA_BlockType2>::RSA_Decryptor(TaoCrypt::RSA_PrivateKey const&)
0000000000bb3fc2 l     F .text	000000000000007f              TaoCrypt::RSA_PrivateKey::RSA_PrivateKey()
0000000000c00be0 l     F .text	0000000000000010              lstat64
00000000010f5ee8 l     O .data	0000000000000008              srv_n_log_groups
0000000000bdbfac l     F .text	0000000000000031              TaoCrypt::BER_Decoder::~BER_Decoder()
0000000000bf7324 l     F .text	000000000000000f              TaoCrypt::RIPEMD160::getPadSize() const
00000000008cd790 l     F .text	0000000000000041              TaoCrypt::SHA512::~SHA512()
0000000000bbda04 l     F .text	0000000000000026              yaSSL::ServerKeyBase::~ServerKeyBase()
0000000000bfe498 l     F .text	000000000000000f              TaoCrypt::SHA::getBlockSize() const
0000000000bdf7e6 l     F .text	0000000000000029              TaoCrypt::AbstractRing::MultiplicativeGroupT::MultiplicativeGroupT()
000000000138e710 l     O .bss	0000000000000008              srv_last_file_size_max
000000000105c350 l       .init_array	0000000000000000              __init_array_end
0000000000bc87f6 l     F .text	0000000000000080              yaSSL::input_buffer::input_buffer(unsigned int)
0000000000bfe508 l     F .text	000000000000000f              TaoCrypt::SHA224::getByteOrder() const
0000000000bce170 l     F .text	0000000000000026              yaSSL::MD5::MD5Impl::MD5Impl(TaoCrypt::MD5 const&)
0000000000bd58d4 l     F .text	0000000000000068              yaSSL::timer()
00000000009bf1b1 l     F .text	0000000000000409              row_merge_build_indexes
0000000000bff942 l     F .text	0000000000000076              TaoCrypt::AbstractRing::Exponentiate(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000a1b31b l     F .text	00000000000004dd              trx_lists_init_at_db_start
0000000000be102c l     F .text	00000000000001c3              TaoCrypt::Portable::Add(unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
00000000009fb6d8 l     F .text	0000000000000079              mutex_enter_nowait_func
0000000000a1a8d2 l     F .text	0000000000000414              trx_free_prepared
0000000000bc42c0 l     F .text	0000000000000013              yaSSL::SSL::getFactory() const
0000000000bbfec0 l     F .text	0000000000000026              yaSSL::FortezzaKeys::~FortezzaKeys()
0000000000bc0330 l     F .text	0000000000000012              yaSSL::States::GetAccept() const
00000000009ab3ce l     F .text	0000000000000548              ha_innobase::final_add_index(handler_add_index*, bool)
0000000000aa4ae6 l     F .text	0000000000000377              fil_node_create
0000000000bd001a l     F .text	0000000000000026              TaoCrypt::MD5::~MD5()
0000000000bb154d l     F .text	0000000000000080              yaSSLv23_client_method
0000000000bc6642 l     F .text	000000000000004b              yaSSL::X509::~X509()
0000000000bc42ac l     F .text	0000000000000014              yaSSL::SSL::getHashes() const
00000000009c742d l     F .text	000000000000016b              row_update_cascade_for_mysql
0000000000bb14cd l     F .text	0000000000000080              yaSSLv23_server_method
0000000000a11e14 l     F .text	0000000000000197              trx_rollback_step
0000000001391020 l     O .bss	0000000000000008              ut_total_allocated_memory
0000000000b0823a l     F .text	0000000000000072              os_event_wait_low
0000000000bc8e68 l     F .text	000000000000007f              yaSSL::output_buffer::output_buffer(unsigned int, unsigned char const*, unsigned int)
00000000009c6031 l     F .text	00000000000001ca              row_lock_table_autoinc_for_mysql
0000000000bca6e0 l     F .text	000000000000001f              mySTL::list<yaSSL::x509*>::reverse_iterator::operator++()
0000000001395d00 l     O .bss	0000000000000410              srv_io_thread_op_info
0000000000bc4384 l     F .text	0000000000000014              yaSSL::SSL::useHashes()
0000000000bf05b4 l     F .text	000000000000001f              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::operator[](unsigned int) const
00000000009be65e l     F .text	0000000000000229              row_merge_create_temporary_table
0000000000b02a2e l     F .text	000000000000004d              os_file_rename_func
0000000000bc8014 l     F .text	0000000000000032              mySTL::list<yaSSL::output_buffer*>::node::node(yaSSL::output_buffer*)
0000000000bcedf2 l     F .text	0000000000000063              TaoCrypt::HMAC<TaoCrypt::SHA>::HMAC()
0000000000bc8ee8 l     F .text	000000000000001f              yaSSL::output_buffer::~output_buffer()
0000000000be981c l     F .text	00000000000000fc              TaoCrypt::Integer::operator++()
0000000000bcaa70 l     F .text	000000000000000f              yaSSL::MD5::get_digestSize() const
0000000000bb204c l     F .text	00000000000000c2              yaSSL_shutdown
00000000010f4900 l     O .data	0000000000000068              i_s_innodb_trx
0000000000bb472c l     F .text	0000000000000024              mySTL::auto_ptr<yaSSL::BIGNUM>::release()
0000000000bc4298 l     F .text	0000000000000014              yaSSL::SSL::getStates() const
0000000000c004e2 l     F .text	000000000000002e              mySTL::vector_base<TaoCrypt::WindowSlider>::vector_base()
0000000000bee390 l     F .text	000000000000007f              TaoCrypt::Integer::operator>>(unsigned int) const
0000000000bdc4ca l     F .text	000000000000002d              TaoCrypt::RSA_PrivateKey::SetModPrime2PrivateExponent(TaoCrypt::Integer const&)
0000000000bbfc04 l     F .text	0000000000000026              yaSSL::ClientHello::~ClientHello()
0000000000ae3680 l     F .text	000000000000010f              lock_update_insert
0000000000b4cba2 l     F .text	0000000000000033              rbt_prev
0000000000bcafa0 l     F .text	0000000000000051              yaSSL::RMD::get_digest(unsigned char*, unsigned char const*, unsigned int)
0000000000bbb26e l     F .text	0000000000000040              yaSSL::ServerKeyExchange::ServerKeyExchange(yaSSL::SSL&)
0000000000be5d20 l     F .text	000000000000118f              TaoCrypt::Portable::Multiply8Bottom(unsigned long*, unsigned long const*, unsigned long const*)
0000000000bba41e l     F .text	000000000000008b              yaSSL::ServerHello::ServerHello(yaSSL::ProtocolVersion, bool)
00000000008cd608 l     F .text	0000000000000041              TaoCrypt::HASH64withTransform::~HASH64withTransform()
0000000000bdf7b8 l     F .text	000000000000002d              TaoCrypt::AbstractGroup::AbstractGroup()
0000000000b1bb16 l     F .text	0000000000000105              page_check_dir
0000000000bef040 l     F .text	000000000000000f              TaoCrypt::MontgomeryRepresentation::IsMontgomeryRepresentation() const
0000000000a2859d l     F .text	0000000000000078              ib_bh_create
0000000000bcaebe l     F .text	000000000000008d              yaSSL::RMD::RMD(yaSSL::RMD const&)
0000000000a166f4 l     F .text	000000000000051a              trx_sys_create_doublewrite_buf
00000000009c4a65 l     F .text	000000000000003d              row_mysql_prebuilt_free_blob_heap
00000000009a3908 l     F .text	0000000000000066              ha_innobase::reset()
0000000000a11788 l     F .text	0000000000000065              trx_undo_rec_release
0000000000bb3cf8 l     F .text	0000000000000031              yaSSL::HandShakeBase::~HandShakeBase()
0000000000bc8a4a l     F .text	0000000000000023              yaSSL::input_buffer::get_current() const
0000000001393880 l     O .bss	0000000000000008              lock_print_waits
0000000000b4ce8e l     F .text	0000000000000032              rbt_print
0000000000bbf140 l     F .text	0000000000000026              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::size() const
0000000000bb3da8 l     F .text	000000000000002c              yaSSL::BIGNUM::assign(unsigned char const*, unsigned int)
0000000000bdf90a l     F .text	000000000000004b              TaoCrypt::AbstractRing::MultiplicativeGroupT::Accumulate(TaoCrypt::Integer&, TaoCrypt::Integer const&) const
0000000000bffdc1 l     F .text	0000000000000023              void mySTL::FreeArrayMemory<TaoCrypt::WindowSlider>(TaoCrypt::WindowSlider*)
0000000000abc0c8 l     F .text	00000000000003ef              ha_insert_for_fold_func
0000000000a1420f l     F .text	0000000000000358              trx_rseg_mem_free
0000000000abca0b l     F .text	00000000000001f0              ha_remove_all_nodes_to_page
0000000000a34ca7 l     F .text	0000000000000b9c              btr_compress
0000000000bddd4c l     F .text	000000000000005e              TaoCrypt::DES_EDE2::SetKey(unsigned char const*, unsigned int, TaoCrypt::CipherDir)
0000000000bcfdca l     F .text	0000000000000027              TaoCrypt::HMAC<TaoCrypt::RIPEMD160>::Init()
0000000000bd9668 l     F .text	000000000000005d              TaoCrypt::CertDecoder::~CertDecoder()
0000000000bbdb48 l     F .text	0000000000000029              yaSSL::HelloRequest::HelloRequest()
0000000000bc652a l     F .text	000000000000001f              yaSSL::StringHolder::~StringHolder()
0000000000a6566d l     F .text	000000000000004a              buf_validate
0000000000be00f4 l     F .text	000000000000002f              TaoCrypt::HASHwithTransform::HASHwithTransform(unsigned int, unsigned int)
0000000000bc5b7a l     F .text	0000000000000052              yaSSL::Crypto::Crypto()
0000000000bcdf2c l     F .text	0000000000000041              TaoCrypt::DH::DH(TaoCrypt::DH const&)
0000000000bbf1fa l     F .text	0000000000000035              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::~vector()
0000000000bce534 l     F .text	000000000000002f              TaoCrypt::DSA_Verifier::~DSA_Verifier()
000000000138e790 l     O .bss	0000000000000008              srv_dblwr_writes
0000000000bbe8cb l     F .text	0000000000000062              mySTL::pair<int, yaSSL::HandShakeBase* (*)()> mySTL::make_pair<int, yaSSL::HandShakeBase* (*)()>(int const&, yaSSL::HandShakeBase* (* const&)())
0000000000c005e8 l     F .text	00000000000000a7              TaoCrypt::WindowSlider::WindowSlider(TaoCrypt::WindowSlider const&)
0000000000bb66f2 l     F .text	00000000000001cb              yaSSL::ClientDiffieHellmanPublic::read(yaSSL::SSL&, yaSSL::input_buffer&)
0000000000bffde4 l     F .text	0000000000000086              mySTL::vector<TaoCrypt::Integer>::vector(unsigned long)
0000000000b19e4c l     F .text	00000000000001a2              page_parse_delete_rec_list
0000000000b4c973 l     F .text	00000000000000b5              rbt_search
0000000000bc4734 l     F .text	000000000000008b              yaSSL::SSL_SESSION::SSL_SESSION(yaSSL::RandomPool&)
0000000000bc94d8 l     F .text	0000000000000016              yaSSL::CertManager::setVerifyPeer()
00000000013966b8 l     O .bss	0000000000000008              sync_primary_wait_array
0000000000a276a7 l     F .text	00000000000000c9              ut_sprintf_timestamp
0000000001396d20 l     O .bss	0000000000000098              dict_foreign_err_mutex
0000000000bef24e l     F .text	0000000000000026              TaoCrypt::DWord::DWord(unsigned long)
0000000000ae3494 l     F .text	0000000000000076              lock_rec_reset_and_inherit_gap_locks
00000000009a5bc2 l     F .text	00000000000000fc              ha_innobase::innobase_peek_autoinc()
0000000000c0034e l     F .text	000000000000001e              mySTL::vector_base<TaoCrypt::Integer>::~vector_base()
0000000000bf2f54 l     F .text	0000000000000023              operator new[](unsigned long, TaoCrypt::new_t)
0000000000bcfd36 l     F .text	0000000000000036              TaoCrypt::HMAC<TaoCrypt::MD5>::KeyInnerHash()
0000000001396110 l     O .bss	0000000000000004              srv_monitor_file_mutex_key
0000000000bcb16a l     F .text	000000000000000f              yaSSL::HMAC_MD5::get_digestSize() const
0000000000bb3c83 l     F .text	000000000000000b              yaSSL::virtual_base::operator delete(void*)
0000000000be9076 l     F .text	000000000000007b              TaoCrypt::Integer::One()
0000000000bc86eb l     F .text	000000000000001b              void yaSSL::checked_delete<yaSSL::output_buffer>(yaSSL::output_buffer*)
0000000000bcfd94 l     F .text	0000000000000036              TaoCrypt::HMAC<TaoCrypt::SHA>::KeyInnerHash()
0000000000bd777e l     F .text	000000000000002b              unsigned int TaoCrypt::rotlFixed<unsigned int>(unsigned int, unsigned int)
000000000138e8a0 l     O .bss	0000000000000008              srv_main_thread_id
0000000000bb2b86 l     F .text	000000000000001e              yaSSL_CTX_sess_connect_renegotiate
0000000000bb8888 l     F .text	0000000000000057              yaSSL::Data::Data(unsigned short, unsigned char*)
0000000000bc5304 l     F .text	0000000000000013              yaSSL::SSL_METHOD::setFailNoCert()
0000000000bc230a l     F .text	000000000000002a              yaSSL::SSL::SetError(yaSSL::YasslError)
0000000000b1b973 l     F .text	00000000000001a3              page_rec_validate
000000000138e6d0 l     O .bss	0000000000000008              srv_error_monitor_active
0000000000bd6ca8 l     F .text	0000000000000789              TaoCrypt::AES::decrypt(unsigned char const*, unsigned char const*, unsigned char*) const
0000000000b4c64c l     F .text	00000000000000de              rbt_add_node
0000000000bbff24 l     F .text	0000000000000026              yaSSL::RSA_Server::~RSA_Server()
000000000099527b l     F .text	0000000000000029              thd_lock_wait_timeout
0000000000c00a70 l     F .text	000000000000005d              mySTL::vector<TaoCrypt::Integer>::vector(mySTL::vector<TaoCrypt::Integer> const&)
0000000000bca746 l     F .text	0000000000000015              mySTL::list<TaoCrypt::Signer*>::iterator::operator*() const
00000000010f4b40 l     O .data	0000000000000068              i_s_innodb_locks
0000000000a888de l     F .text	0000000000000058              dict_remove_db_name
0000000000bb385e l     F .text	0000000000000034              yaMD5_Final
0000000000bcb612 l     F .text	000000000000007e              yaSSL::DES::DES()
0000000000bbdaca l     F .text	0000000000000029              yaSSL::ClientKeyBase::ClientKeyBase()
0000000000a4e867 l     F .text	000000000000011a              btr_pcur_copy_stored_position
0000000000bb8018 l     F .text	000000000000000f              yaSSL::HandShakeHeader::get_type() const
0000000000bcf322 l     F .text	000000000000002d              yaSSL::DES::DESImpl::~DESImpl()
0000000000bb96ba l     F .text	0000000000000076              yaSSL::Certificate::Certificate(yaSSL::x509 const*)
0000000000bb4865 l     F .text	0000000000000036              void mySTL::swap<TaoCrypt::AllocatorWithCleanup<unsigned char> >(TaoCrypt::AllocatorWithCleanup<unsigned char>&, TaoCrypt::AllocatorWithCleanup<unsigned char>&)
0000000000bb848f l     F .text	0000000000000052              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::Alert&)
0000000000aaaf59 l     F .text	00000000000003cf              fil_load_single_table_tablespaces
0000000000bc8284 l     F .text	00000000000000a5              mySTL::list<yaSSL::ThreadError>::pop_front()
000000000138e7b8 l     O .bss	0000000000000008              srv_buf_pool_reads
0000000000ae5a3a l     F .text	000000000000024f              lock_table_print
0000000000be7632 l     F .text	00000000000001cb              TaoCrypt::RecursiveMultiplyBottom(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
0000000000bcf738 l     F .text	000000000000002b              yaSSL::DSS::DSSImpl::~DSSImpl()
0000000000be0732 l     F .text	000000000000025a              TaoCrypt::HASH64withTransform::Final(unsigned char*)
0000000000b0181e l     F .text	00000000000001f0              os_file_get_last_error
0000000000bc399e l     F .text	0000000000000097              yaSSL::SSL::get_macSecret(bool)
00000000010f623c l     O .data	0000000000000004              pars_share_token
0000000000c00b00 l     F .text	0000000000000033              void mySTL::swap<TaoCrypt::Integer*>(TaoCrypt::Integer*&, TaoCrypt::Integer*&)
0000000000bf1e2e l     F .text	0000000000000026              TaoCrypt::MD4::~MD4()
0000000000a037c6 l     F .text	000000000000039a              trx_purge_add_update_undo_to_history
0000000000bcea1b l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::HMAC_MD5::HMAC_MD5Impl>(yaSSL::HMAC_MD5::HMAC_MD5Impl*)
0000000000bbcb6f l     F .text	0000000000000077              yaSSL::clean(unsigned char volatile*, unsigned int, yaSSL::RandomPool&)
0000000000bbcb60 l     F .text	000000000000000f              yaSSL::Finished::get_type() const
0000000000bd96c6 l     F .text	0000000000000026              TaoCrypt::CertDecoder::~CertDecoder()
0000000000bdc0b4 l     F .text	0000000000000026              TaoCrypt::DER_Encoder::~DER_Encoder()
0000000000bcc080 l     F .text	000000000000004d              yaSSL::DSS::~DSS()
0000000000aa48e2 l     F .text	00000000000000cb              fil_space_get_latch
0000000000bbb2e4 l     F .text	000000000000004d              yaSSL::ServerKeyExchange::~ServerKeyExchange()
0000000000bc9122 l     F .text	000000000000001f              yaSSL::x509::~x509()
0000000000bb453e l     F .text	0000000000000075              yaSSL::SSL::~SSL()
0000000000bcbfba l     F .text	00000000000000c6              yaSSL::DSS::DSS(unsigned char const*, unsigned int, bool)
0000000000a889b6 l     F .text	0000000000000016              dict_mutex_exit_for_mysql
0000000000bd0559 l     F .text	00000000000000a0              yaSSL::hashHandShake(yaSSL::SSL&, yaSSL::input_buffer const&, unsigned int)
0000000000b2cbeb l     F .text	00000000000000ab              page_zip_calc_checksum
0000000000bfe5a8 l     F .text	000000000000000f              TaoCrypt::SHA384::getDigestSize() const
0000000000bbdc1a l     F .text	0000000000000023              void mySTL::FreeArrayMemory<void>(void*)
00000000010f6238 l     O .data	0000000000000004              pars_close_token
0000000000bb58f4 l     F .text	000000000000012b              yaSSL::ClientDiffieHellmanPublic::build(yaSSL::SSL&)
0000000000a1bf88 l     F .text	000000000000051c              trx_commit_off_kernel
0000000000bd3055 l     F .text	0000000000000172              yaSSL::build_certHashes(yaSSL::SSL&, yaSSL::Hashes&)
0000000000bd559a l     F .text	0000000000000013              yaSSL::Log::ShowData(unsigned int, bool)
00000000009c4b84 l     F .text	0000000000000088              row_mysql_read_true_varchar
0000000000bceb48 l     F .text	000000000000001b              yaSSL::SHA::SHAImpl::~SHAImpl()
00000000009a777f l     F .text	00000000000000c8              innobase_index_name_is_reserved
0000000000a1a327 l     F .text	0000000000000051              trx_allocate_for_background
0000000000ae350a l     F .text	0000000000000176              lock_update_discard
0000000000bc8b56 l     F .text	000000000000007e              yaSSL::input_buffer::operator[](unsigned int)
0000000000bd556a l     F .text	000000000000000b              yaSSL::Log::~Log()
0000000000bd5616 l     F .text	0000000000000031              yaSSL::Socket::closeSocket()
000000000138e7e0 l     O .bss	0000000000000008              srv_conc_n_waiting_threads
0000000000a4f619 l     F .text	00000000000000df              btr_pcur_open_on_user_rec_func
0000000000c00510 l     F .text	000000000000001e              mySTL::vector_base<TaoCrypt::WindowSlider>::~vector_base()
00000000010682b0 l     O .data.rel.ro	0000000000000048              vtable for TaoCrypt::MD2
0000000000a4e981 l     F .text	00000000000006cc              btr_pcur_restore_position_func
0000000000bda2e4 l     F .text	00000000000000aa              TaoCrypt::CertDecoder::AddTag(char*, char const*, char const*, unsigned int, unsigned int)
0000000000b073ac l     F .text	000000000000000d              os_proc_get_number
0000000000bbe540 l     F .text	0000000000000012              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::end() const
0000000000a8de65 l     F .text	000000000000001b              dict_table_is_referenced_by_foreign_key
00000000009efbba l     F .text	000000000000009b              srv_conc_force_enter_innodb
0000000000bcb54e l     F .text	000000000000000f              yaSSL::HMAC_RMD::get_padSize() const
0000000000bfe528 l     F .text	000000000000000f              TaoCrypt::SHA224::getDigestSize() const
0000000001393910 l     O .bss	0000000000000008              os_bytes_read_since_printout
0000000000bc9142 l     F .text	0000000000000066              yaSSL::x509::x509(yaSSL::x509 const&)
0000000000acf4a3 l     F .text	0000000000000310              ibuf_delete_for_discarded_space
00000000009a1d8c l     F .text	0000000000000031              ha_innobase::analyze(THD*, st_ha_check_opt*)
0000000000be6eaf l     F .text	00000000000005c7              TaoCrypt::RecursiveMultiply(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
0000000000aa614d l     F .text	0000000000000868              fil_space_create
0000000000a69428 l     F .text	0000000000000360              buf_flush_insert_into_flush_list
0000000000bb4b9c l     F .text	0000000000000041              yaSSL::Data::~Data()
00000000009c9019 l     F .text	0000000000000b21              row_truncate_table_for_mysql
0000000000bbdd50 l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::Auth>::~auto_ptr()
0000000000bc4ba6 l     F .text	0000000000000098              yaSSL::Sessions::~Sessions()
0000000000aba3e8 l     F .text	00000000000003c6              flst_remove
0000000000bbb4c2 l     F .text	00000000000000b2              yaSSL::CertificateRequest::~CertificateRequest()
000000000138e700 l     O .bss	0000000000000008              srv_data_file_sizes
0000000000a8a1c9 l     F .text	000000000000008c              dict_index_find_on_id_low
0000000000b38ae1 l     F .text	000000000000003f              rec_convert_dtuple_to_temp
0000000000ae92a6 l     F .text	000000000000004e              lock_rec_get_page_no
0000000000aeb841 l     F .text	0000000000000238              log_close
000000000138e748 l     O .bss	0000000000000008              srv_n_purge_threads
0000000000b2e0e0 l     F .text	0000000000000219              que_fork_error_handle
0000000000bb3b1c l     F .text	0000000000000017              yaX509_LOOKUP_add_dir
0000000000bbb3c0 l     F .text	000000000000002d              yaSSL::ServerKeyExchange::getKey() const
0000000000b07231 l     F .text	000000000000004d              os_aio_refresh_stats
0000000000ab0edc l     F .text	0000000000000055              fsp_header_get_flags
0000000000bee410 l     F .text	000000000000007f              TaoCrypt::Integer::operator<<(unsigned int) const
0000000000a76373 l     F .text	0000000000000046              buf_LRU_print
0000000000bf0c2e l     F .text	0000000000000080              TaoCrypt::MD2::Init()
0000000000bb4948 l     F .text	0000000000000053              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::New(unsigned int)
0000000000bef366 l     F .text	000000000000004b              TaoCrypt::DWord::operator+=(unsigned long)
0000000000bca80c l     F .text	000000000000001a              mySTL::list<yaSSL::x509*>::reverse_iterator::reverse_iterator(mySTL::list<yaSSL::x509*>::node*)
0000000000bf1e60 l     F .text	0000000000000058              TaoCrypt::MD5::Init()
0000000000bebffc l     F .text	0000000000000088              TaoCrypt::a_exp_b_mod_c(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bc633e l     F .text	000000000000000e              yaSSL::X509::GetIssuer()
0000000000be0ad9 l     F .text	0000000000000033              unsigned long TaoCrypt::rotlFixed<unsigned long>(unsigned long, unsigned int)
0000000000bcdb94 l     F .text	0000000000000021              TaoCrypt::DES_EDE3::SetIV(unsigned char const*)
0000000000bbef5a l     F .text	000000000000002e              mySTL::pair<int, yaSSL::Message* (*)()>::pair(int const&, yaSSL::Message* (* const&)())
0000000000bc98a6 l     F .text	000000000000001e              yaSSL::CertManager::get_privateKeyLength() const
0000000000a5d615 l     F .text	00000000000000d5              buf_pool_contains_zip
0000000000bd9428 l     F .text	000000000000001b              TaoCrypt::DSA_Public_Decoder::ReadHeader()
0000000000bca75c l     F .text	000000000000005d              void yaSSL::del_ptr_zero::operator()<TaoCrypt::Signer>(TaoCrypt::Signer*&) const
0000000001067b90 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::SHA
0000000001390f28 l     O .bss	0000000000000008              trx_doublewrite
0000000000bb3ca0 l     F .text	0000000000000031              yaSSL::Message::~Message()
0000000001396c28 l     O .bss	0000000000000008              btr_search_sys
0000000000bdc5f2 l     F .text	000000000000001a              mySTL::auto_ptr<TaoCrypt::HASH>::auto_ptr(TaoCrypt::HASH*)
0000000000bcdca4 l     F .text	000000000000000e              TaoCrypt::Integer::Ref()
0000000000bbdfa0 l     F .text	000000000000004f              mySTL::list<unsigned char*>::~list()
0000000001396f64 l     O .bss	0000000000000004              innodb_file_log_key
0000000000b02b17 l     F .text	000000000000006b              os_file_get_size_as_iblonglong
0000000000be9ef7 l     F .text	00000000000002ad              TaoCrypt::PositiveSubtract(TaoCrypt::Integer&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
00000000009c8773 l     F .text	000000000000047a              row_discard_tablespace_for_mysql
0000000000bc602c l     F .text	0000000000000012              yaSSL::Buffers::getData() const
00000000009dc0a6 l     F .text	0000000000002ad5              row_search_for_mysql
00000000008cd8a2 l     F .text	0000000000000026              TaoCrypt::SHA256::~SHA256()
0000000000bdc0da l     F .text	0000000000000043              TaoCrypt::Source::Source(unsigned int)
0000000000a0ac1c l     F .text	000000000000011c              trx_undo_parse_add_undo_rec
0000000000a4b980 l     F .text	000000000000012e              btr_rec_copy_externally_stored_field
0000000000a341f0 l     F .text	00000000000000ae              btr_set_min_rec_mark
00000000009f4b56 l     F .text	000000000000000b              srv_normalize_path_for_win
0000000000beef62 l     F .text	000000000000007f              TaoCrypt::ModularArithmetic::MultiplicativeInverse(TaoCrypt::Integer const&) const
0000000000bce678 l     F .text	0000000000000089              yaSSL::DiffieHellman::DHImpl::DHImpl(yaSSL::DiffieHellman::DHImpl const&)
0000000000bb3c0e l     F .text	0000000000000012              yaSSL_set_rfd
0000000000abde15 l     F .text	00000000000000cd              hash_table_free
000000000138e7a8 l     O .bss	0000000000000008              srv_buf_pool_wait_free
0000000000a7331f l     F .text	0000000000000027              buf_LRU_make_block_old
0000000000bb7480 l     F .text	0000000000000026              yaSSL::DH_Server::~DH_Server()
0000000000bdded8 l     F .text	00000000000000a9              TaoCrypt::DES_EDE3::SetKey(unsigned char const*, unsigned int, TaoCrypt::CipherDir)
0000000000bb356a l     F .text	0000000000000028              yaX509_get_notAfter
0000000000ae91b8 l     F .text	000000000000004e              lock_rec_get_index
0000000000bc90e8 l     F .text	000000000000003a              yaSSL::x509::x509(unsigned int)
0000000000be88ce l     F .text	0000000000000086              TaoCrypt::Integer::Integer(TaoCrypt::Integer const&)
0000000000b029ec l     F .text	0000000000000042              os_file_delete
0000000000bcdc3c l     F .text	000000000000001b              TaoCrypt::RandomNumberGenerator::~RandomNumberGenerator()
00000000009cf18e l     F .text	0000000000000417              row_build_index_entry
0000000000a606ec l     F .text	0000000000000077              buf_block_align
0000000000ac694c l     F .text	0000000000000075              ibuf_parse_bitmap_init
0000000000bb408e l     F .text	000000000000004b              TaoCrypt::DSA_PublicKey::~DSA_PublicKey()
0000000000bb9bd8 l     F .text	000000000000004f              yaSSL::ServerDHParams::ServerDHParams()
0000000000bdd1f8 l     F .text	0000000000000053              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::resize(unsigned int)
0000000000bf8158 l     F .text	00000000000000a5              TaoCrypt::SHA224::SHA224(TaoCrypt::SHA224 const&)
0000000000bc5430 l     F .text	00000000000000d7              yaSSL::SSL_CTX::~SSL_CTX()
0000000000bc0560 l     F .text	0000000000000073              yaSSL::sslFactory::sslFactory()
0000000000bb3bc3 l     F .text	000000000000000f              yaSSL_CTX_set_tmp_rsa_callback
0000000000bce438 l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::AES, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000bc616c l     F .text	000000000000000e              yaSSL::Security::use_connection()
0000000000acb41b l     F .text	00000000000001fb              ibuf_update_max_tablespace_id
0000000000bcd4c0 l     F .text	0000000000000031              yaSSL::BulkCipher::~BulkCipher()
0000000000bd55ba l     F .text	0000000000000027              yaSSL::Socket::Socket(int)
0000000000bf1dc0 l     F .text	000000000000000f              TaoCrypt::MD4::getBlockSize() const
0000000000a5f65c l     F .text	00000000000000f9              buf_page_make_young
0000000000bce196 l     F .text	0000000000000029              yaSSL::Digest::Digest()
0000000000bc55a2 l     F .text	0000000000000014              yaSSL::SSL_CTX::GetDH_Parms() const
0000000000be89e0 l     F .text	000000000000006b              TaoCrypt::Integer::Integer(TaoCrypt::Integer::Sign, unsigned long, unsigned long)
0000000000bceb80 l     F .text	0000000000000063              TaoCrypt::HMAC<TaoCrypt::MD5>::HMAC()
0000000000af231e l     F .text	00000000000000f9              recv_sys_mem_free
0000000000bbc42e l     F .text	0000000000000040              yaSSL::ClientKeyExchange::ClientKeyExchange(yaSSL::SSL&)
0000000001396b04 l     O .bss	0000000000000004              trx_undo_mutex_key
0000000000b12f79 l     F .text	000000000000035c              page_cur_delete_rec
0000000000bb3eca l     F .text	000000000000001a              TaoCrypt::Source::get_buffer() const
0000000000bbdf72 l     F .text	000000000000002e              mySTL::list<unsigned char*>::list()
00000000010f5f38 l     O .data	0000000000000008              srv_n_file_io_threads
0000000000b11471 l     F .text	0000000000000dac              page_cur_insert_rec_zip
0000000000afb6c7 l     F .text	0000000000000117              mem_pool_print_info
00000000009cffa9 l     F .text	00000000000004a5              row_build_row_ref
0000000000bcdc2a l     F .text	0000000000000011              TaoCrypt::OS_Seed::GetError() const
0000000000a2603c l     F .text	00000000000000c5              ut_dbg_assertion_failed
0000000000bdc044 l     F .text	000000000000003e              TaoCrypt::DER_Encoder::DER_Encoder()
0000000000bcd686 l     F .text	0000000000000047              TaoCrypt::RIPEMD160::RIPEMD160()
0000000000b2f458 l     F .text	000000000000007d              que_node_get_containing_loop_node
0000000000b36b13 l     F .text	00000000000003fd              rec_get_offsets_reverse
0000000000bf30ca l     F .text	0000000000000038              TaoCrypt::Crop(unsigned long, unsigned int)
0000000000b2e376 l     F .text	00000000000004d2              que_graph_free_recursive
0000000000aef2b1 l     F .text	0000000000000063              log_peek_lsn
0000000000bc8488 l     F .text	0000000000000032              mySTL::list<yaSSL::x509*>::node::node(yaSSL::x509*)
0000000000bca70a l     F .text	000000000000001a              mySTL::list<TaoCrypt::Signer*>::iterator::iterator(mySTL::list<TaoCrypt::Signer*>::node*)
0000000000a894af l     F .text	00000000000001bd              dict_init
0000000000bcb2e0 l     F .text	000000000000004d              yaSSL::HMAC_SHA::~HMAC_SHA()
0000000000bf04db l     F .text	000000000000003c              void TaoCrypt::tcDelete<TaoCrypt::Integer>(TaoCrypt::Integer*)
0000000000a211de l     F .text	000000000000005a              trx_undo_get_prev_rec
0000000000b04440 l     F .text	00000000000000eb              os_aio_free
0000000000aadd57 l     F .text	000000000000013a              fil_close
0000000000bb3699 l     F .text	0000000000000022              yaX509_NAME_get_entry
0000000000bb3d96 l     F .text	0000000000000011              yaSSL::X509_NAME::GetCnPosition() const
0000000000bc7f1a l     F .text	0000000000000020              mySTL::list<yaSSL::input_buffer*>::iterator::operator++()
0000000000bb2b2c l     F .text	000000000000001e              yaSSL_CTX_sess_accept_good
00000000009fa0ae l     F .text	0000000000000118              rw_lock_validate
0000000000bf0647 l     F .text	000000000000001f              unsigned long TaoCrypt::SafeLeftShift<64u, unsigned long>(unsigned long)
0000000000bb2d0a l     F .text	0000000000000013              yaSSL_CTX_set_options
0000000000bcaa80 l     F .text	000000000000000f              yaSSL::MD5::get_padSize() const
0000000000bc246e l     F .text	0000000000000020              yaSSL::SSL::order_error()
0000000001396118 l     O .bss	0000000000000008              kernel_mutex_temp
00000000009a6042 l     F .text	0000000000000110              ha_innobase::reset_auto_increment(unsigned long long)
0000000000a47631 l     F .text	000000000000057e              btr_estimate_n_rows_in_range
0000000000bb4268 l     F .text	000000000000002f              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::~Block()
0000000000b398e7 l     F .text	0000000000000149              rec_print_comp
0000000000be8ad8 l     F .text	0000000000000040              TaoCrypt::Integer::Integer(unsigned char const*, unsigned int, TaoCrypt::Integer::Signedness)
0000000000be8148 l     F .text	0000000000000115              TaoCrypt::PositiveMultiply(TaoCrypt::Integer&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000ac73fe l     F .text	00000000000002ff              ibuf_page_low
0000000000bb3eb0 l     F .text	000000000000001a              TaoCrypt::Source::size() const
0000000000a92df5 l     F .text	0000000000000087              dict_table_print_by_name
00000000010cc408 l     O .data.rel.ro	0000000000000058              vtable for yaSSL::BulkCipher
0000000000bc7009 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::input_buffer>(yaSSL::input_buffer*)
0000000000bb438a l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::BulkCipher>::~auto_ptr()
0000000000bef953 l     F .text	000000000000000b              TaoCrypt::Portable::MultiplyBottomRecursionLimit()
000000000105c268 l       .init_array	0000000000000000              __init_array_start
00000000009e5186 l     F .text	0000000000000096              row_upd_parse_sys_vals
0000000000bb34d6 l     F .text	000000000000000f              yaX509_get_pubkey
0000000000bcf7aa l     F .text	00000000000000d2              TaoCrypt::RSA_Decryptor<TaoCrypt::RSA_BlockType2>::SSL_Sign(unsigned char const*, unsigned int, unsigned char*, TaoCrypt::RandomNumberGenerator&)
0000000000bd4016 l     F .text	0000000000000239              yaSSL::sendFinished(yaSSL::SSL&, yaSSL::ConnectionEnd, yaSSL::BufferOutput)
0000000000a32f6d l     F .text	0000000000000e4e              btr_page_split_and_insert
00000000009cb186 l     F .text	0000000000000c61              row_rename_table_for_mysql
0000000000bc5268 l     F .text	000000000000004f              yaSSL::SSL_METHOD::SSL_METHOD(yaSSL::ConnectionEnd, yaSSL::ProtocolVersion, bool)
000000000138e718 l     O .bss	0000000000000008              srv_data_file_is_raw_partition
0000000001396120 l     O .bss	0000000000000098              srv_misc_tmpfile_mutex
0000000000aa8be3 l     F .text	0000000000000085              fil_tablespace_is_being_deleted
0000000000bb339c l     F .text	0000000000000021              yaDES_set_key
0000000000bb68be l     F .text	0000000000000040              yaSSL::ClientDiffieHellmanPublic::ClientDiffieHellmanPublic()
0000000000af76d6 l     F .text	00000000000001f8              mach_parse_compressed
0000000000a5c3d2 l     F .text	00000000000000bb              buf_get_total_list_len
00000000010cc3d0 l     O .data.rel.ro	0000000000000038              vtable for yaSSL::Auth
0000000000bb46e2 l     F .text	0000000000000037              mySTL::auto_ptr<yaSSL::BIGNUM>::reset(yaSSL::BIGNUM*)
0000000000bbe182 l     F .text	0000000000000022              mySTL::list<unsigned char*>::iterator::operator!=(mySTL::list<unsigned char*>::iterator const&) const
0000000000bcf416 l     F .text	0000000000000031              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES, (TaoCrypt::Mode)1>::Process(unsigned char*, unsigned char const*, unsigned int)
0000000000ad6c83 l     F .text	0000000000000229              pars_insert_statement
0000000000bf76b6 l     F .text	0000000000000068              TaoCrypt::RSA_PrivateKey::Initialize(TaoCrypt::Source&)
0000000000bce21e l     F .text	0000000000000026              yaSSL::RMD::RMDImpl::RMDImpl(TaoCrypt::RIPEMD160 const&)
0000000000a54b45 l     F .text	000000000000003d              btr_search_enable
0000000000bb440a l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::x509>::~auto_ptr()
0000000001393908 l     O .bss	0000000000000008              os_n_file_reads
00000000013938a8 l     O .bss	0000000000000008              log_has_printed_chkp_warning
0000000000bcad98 l     F .text	0000000000000033              yaSSL::SHA::update(unsigned char const*, unsigned int)
0000000000bdc690 l     F .text	0000000000000043              void TaoCrypt::tcDelete<TaoCrypt::HASH>(TaoCrypt::HASH*)
0000000000a5f7ff l     F .text	0000000000000141              buf_reset_check_index_page_at_flush
00000000008cd860 l     F .text	0000000000000041              TaoCrypt::SHA256::~SHA256()
0000000000bcd8d2 l     F .text	00000000000000d2              TaoCrypt::Mode_BASE::CBC_Encrypt(unsigned char*, unsigned char const*, unsigned int)
00000000009be02e l     F .text	0000000000000329              row_merge_drop_temp_indexes
0000000000be8ad8 l     F .text	0000000000000040              TaoCrypt::Integer::Integer(unsigned char const*, unsigned int, TaoCrypt::Integer::Signedness)
0000000000bee63e l     F .text	000000000000003d              TaoCrypt::AbstractEuclideanDomain::AbstractEuclideanDomain()
0000000000bb460b l     F .text	0000000000000024              void yaSSL::ysArrayDelete<char>(char*)
0000000000bbdbef l     F .text	000000000000002b              unsigned char* mySTL::GetArrayMemory<unsigned char>(unsigned long)
0000000000b07e06 l     F .text	00000000000000be              os_event_set
0000000000bcdcb2 l     F .text	000000000000001a              TaoCrypt::PK_Lengths::PK_Lengths(TaoCrypt::Integer const&)
0000000000a88f2f l     F .text	0000000000000053              dict_index_get_on_id_low
0000000000ae31cc l     F .text	0000000000000088              lock_update_merge_right
0000000000aeda99 l     F .text	0000000000000065              log_buffer_sync_in_background
0000000000aab328 l     F .text	00000000000000d8              fil_tablespace_deleted_or_being_deleted_in_mem
0000000000bcc7c0 l     F .text	0000000000000076              yaSSL::Integer::assign(unsigned char const*, unsigned int)
0000000000be053e l     F .text	000000000000002f              TaoCrypt::HASH64withTransform::HASH64withTransform(unsigned int, unsigned int)
0000000000bb564a l     F .text	00000000000000a4              yaSSL::ServerKeyExchange::createKey(yaSSL::SSL&)
0000000000b2b886 l     F .text	0000000000000470              page_zip_dir_delete
0000000000bba41e l     F .text	000000000000008b              yaSSL::ServerHello::ServerHello(yaSSL::ProtocolVersion, bool)
0000000000aadd0c l     F .text	000000000000004b              fil_page_get_type
0000000000af81ae l     F .text	0000000000000187              mem_heap_validate_or_print
0000000000bef5d4 l     F .text	0000000000000025              TaoCrypt::Word::Word(unsigned int, unsigned int)
0000000000bb4437 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::x509>(yaSSL::x509*)
0000000000bb3760 l     F .text	0000000000000028              yaMD4_Init
0000000000bc5e06 l     F .text	0000000000000012              yaSSL::sslHashes::get_certVerify() const
0000000000aa77ab l     F .text	0000000000000135              fil_open_log_and_system_tablespace_files
0000000000bce2f8 l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000995df1 l     F .text	0000000000000059              innobase_convert_string
0000000001396dc0 l     O .bss	0000000000000080              dict_operation_lock
0000000000be825d l     F .text	0000000000000063              TaoCrypt::Multiply(TaoCrypt::Integer&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bbb0da l     F .text	0000000000000074              yaSSL::ClientHello::ClientHello(yaSSL::ProtocolVersion, bool)
0000000000bcabc2 l     F .text	000000000000004d              yaSSL::SHA::~SHA()
0000000000bbffb9 l     F .text	000000000000003c              operator new(unsigned long, yaSSL::new_t)
0000000000a1c615 l     F .text	00000000000000f2              trx_assign_read_view
0000000000bcb55e l     F .text	0000000000000051              yaSSL::HMAC_RMD::get_digest(unsigned char*, unsigned char const*, unsigned int)
0000000000b38a79 l     F .text	0000000000000038              rec_get_converted_size_temp
0000000000bde6a6 l     F .text	0000000000000038              TaoCrypt::DH_Decoder::DH_Decoder(TaoCrypt::Source&)
0000000000bfe434 l     F .text	000000000000002a              TaoCrypt::SHA512::Transform()
0000000000b4841d l     F .text	0000000000000099              row_purge_step
0000000000a5c6c7 l     F .text	0000000000000072              buf_block_alloc
0000000000bc5de2 l     F .text	0000000000000012              yaSSL::sslHashes::get_SHA() const
0000000000b1d591 l     F .text	00000000000000dc              page_find_rec_with_heap_no
0000000000bc5674 l     F .text	0000000000000016              yaSSL::SSL_CTX::SetSessionCacheFlushOff()
0000000000b18f90 l     F .text	000000000000016d              page_create_zip
0000000000bed736 l     F .text	0000000000000189              TaoCrypt::MontgomeryRepresentation::Multiply(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
00000000010cc678 l     O .data.rel.ro	00000000000000e8              vtable for TaoCrypt::ModularArithmetic
0000000000a73e17 l     F .text	0000000000000466              buf_LRU_block_free_non_file_page
0000000000a27aeb l     F .text	00000000000000fd              ut_copy_file
0000000000be0c25 l     F .text	000000000000006e              void TaoCrypt::ByteReverse<unsigned long>(unsigned long*, unsigned long const*, unsigned int)
0000000000bbfcf2 l     F .text	000000000000003d              yaSSL::Certificate::~Certificate()
0000000000a71874 l     F .text	00000000000004f9              buf_LRU_get_free_block
0000000000a1bb64 l     F .text	000000000000007b              trx_start
0000000000af72c0 l     F .text	0000000000000060              recv_recovery_rollback_active
00000000010f5f00 l     O .data	0000000000000008              srv_log_buffer_size
0000000000bcd548 l     F .text	000000000000000f              yaSSL::DES_EDE::get_blockSize() const
0000000000b2d9c7 l     F .text	0000000000000119              que_fork_create
00000000010f6218 l     O .data	0000000000000004              pars_blob_token
0000000000bdc8a2 l     F .text	0000000000000026              TaoCrypt::RSA_Private_Decoder::~RSA_Private_Decoder()
000000000099f4b6 l     F .text	0000000000000047              ha_innobase::update_create_info(st_ha_create_information*)
0000000000be77fd l     F .text	0000000000000628              TaoCrypt::RecursiveMultiplyTop(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned long const*, unsigned int)
0000000000bd535e l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::Message>::auto_ptr(yaSSL::Message*)
0000000000aeb5e8 l     F .text	0000000000000259              log_write_low
0000000000bee816 l     F .text	0000000000000077              TaoCrypt::EuclideanDomainOf::Inverse(TaoCrypt::Integer const&) const
0000000000aa05ec l     F .text	0000000000000179              eval_cmp
00000000010678a0 l     O .data.rel.ro	0000000000000038              vtable for yaSSL::RSA
0000000000bb33bd l     F .text	000000000000000b              yaDES_set_odd_parity
0000000000bc61c0 l     F .text	0000000000000096              yaSSL::X509_NAME::X509_NAME(char const*, unsigned long, int, int)
0000000000bdc8c8 l     F .text	000000000000003d              TaoCrypt::Signature_Encoder::~Signature_Encoder()
0000000000bbd9d2 l     F .text	0000000000000031              yaSSL::ServerKeyBase::~ServerKeyBase()
00000000009a396e l     F .text	00000000000002cd              ha_innobase::start_stmt(THD*, thr_lock_type)
0000000000aa7d3d l     F .text	0000000000000136              fil_read_first_page
0000000000a8b43f l     F .text	0000000000000329              dict_table_change_id_in_cache
0000000000bcb428 l     F .text	00000000000000a2              yaSSL::HMAC_RMD::HMAC_RMD(unsigned char const*, unsigned int)
0000000000be9bd8 l     F .text	000000000000031f              TaoCrypt::PositiveAdd(TaoCrypt::Integer&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000b04e3a l     F .text	0000000000000007              os_aio_simulated_put_read_threads_to_sleep
0000000000bbb42e l     F .text	0000000000000025              yaSSL::ServerKeyExchange::get(yaSSL::output_buffer&) const
0000000000bcf5d8 l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::AES, (TaoCrypt::Mode)1>::BlockCipher()
0000000000bc47c0 l     F .text	00000000000000c0              yaSSL::SSL_SESSION::operator=(yaSSL::SSL_SESSION const&)
0000000000bc8518 l     F .text	000000000000005d              void yaSSL::del_ptr_zero::operator()<yaSSL::input_buffer>(yaSSL::input_buffer*&) const
0000000000a35ccb l     F .text	000000000000048e              btr_discard_page
0000000000c00438 l     F .text	000000000000001e              mySTL::vector_base<mySTL::vector<TaoCrypt::Integer> >::~vector_base()
00000000009a0840 l     F .text	000000000000053a              ha_innobase::records_in_range(unsigned int, st_key_range*, st_key_range*)
0000000000a274cc l     F .text	000000000000006e              ut_time_us
0000000000a00f0f l     F .text	0000000000000154              trx_i_s_cache_get_nth_row
0000000000be938a l     F .text	00000000000000c9              TaoCrypt::Integer::SetBit(unsigned int, bool)
0000000000a8de80 l     F .text	00000000000000ac              dict_table_get_referenced_constraint
0000000000bbe0da l     F .text	00000000000000a7              mySTL::list<unsigned char*>::push_back(unsigned char*)
00000000009f07fe l     F .text	00000000000006f5              srv_printf_innodb_monitor
0000000000b2f208 l     F .text	00000000000000c3              que_thr_move_to_run_state_for_mysql
0000000000bce9a3 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::HMAC_RMD::HMAC_RMDImpl>(yaSSL::HMAC_RMD::HMAC_RMDImpl*)
0000000000bcf71c l     F .text	000000000000001b              yaSSL::RandomPool::RandomImpl::~RandomImpl()
0000000000bcdb08 l     F .text	000000000000004e              TaoCrypt::DES::DES(TaoCrypt::CipherDir, TaoCrypt::Mode)
0000000000bc48e8 l     F .text	0000000000000018              yaSSL::SSL_SESSION::SetTimeOut(unsigned int)
0000000000bbfa16 l     F .text	000000000000002f              mySTL::pair<int, yaSSL::HandShakeBase* (*)()>* mySTL::GetArrayMemory<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >(unsigned long)
0000000000bef786 l     F .text	000000000000009d              TaoCrypt::DWord::operator/(unsigned long)
0000000000ad8307 l     F .text	0000000000000067              pars_info_add_ull_literal
0000000000aa7b25 l     F .text	000000000000011e              fil_write_flushed_lsn_to_data_files
0000000000aeea47 l     F .text	000000000000086a              logs_empty_and_mark_files_at_shutdown
0000000001390ee0 l     O .bss	0000000000000008              purge_sys
0000000000a19c46 l     F .text	0000000000000032              trx_set_detailed_error
0000000000bebf80 l     F .text	000000000000007c              TaoCrypt::a_times_b_mod_c(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bc02da l     F .text	000000000000000e              yaSSL::States::getRecord() const
0000000000b4c847 l     F .text	0000000000000096              rbt_lower_bound
0000000000bcb0f6 l     F .text	000000000000004d              yaSSL::HMAC_MD5::~HMAC_MD5()
0000000000a3142e l     F .text	000000000000002f              btr_page_reorganize
0000000000bc6142 l     F .text	0000000000000014              yaSSL::Security::get_resume() const
0000000000be11f0 l     F .text	00000000000001c6              TaoCrypt::Portable::Subtract(unsigned long*, unsigned long const*, unsigned long const*, unsigned int)
0000000000a5f518 l     F .text	0000000000000144              buf_pool_watch_occurred
0000000000c004b1 l     F .text	0000000000000030              void mySTL::destroy<mySTL::vector<TaoCrypt::Integer>*>(mySTL::vector<TaoCrypt::Integer>*, mySTL::vector<TaoCrypt::Integer>*)
000000000138e858 l     O .bss	0000000000000008              srv_n_lock_wait_current_count
00000000009b425d l     F .text	000000000000014a              read_view_close
0000000000af6a03 l     F .text	0000000000000804              recv_recovery_from_checkpoint_start_func
0000000000bede33 l     F .text	000000000000011a              TaoCrypt::CRT(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000a891df l     F .text	000000000000013b              dict_index_get_nth_field_pos
00000000009d0cfe l     F .text	0000000000000162              row_search_index_entry
0000000000a2659c l     F .text	0000000000000071              ut_mem_init
0000000000bbf56a l     F .text	000000000000005c              mySTL::vector_base<mySTL::pair<int, yaSSL::Message* (*)()> >::Swap(mySTL::vector_base<mySTL::pair<int, yaSSL::Message* (*)()> >&)
0000000000bc717e l     F .text	00000000000000a5              mySTL::list<yaSSL::output_buffer*>::pop_front()
0000000000a83388 l     F .text	0000000000000125              ind_create_graph_create
0000000000beec9a l     F .text	0000000000000058              TaoCrypt::ModularArithmetic::ConvertIn(TaoCrypt::Integer const&) const
00000000009eee21 l     F .text	00000000000001b4              srv_release_threads
0000000000bde138 l     F .text	0000000000000026              TaoCrypt::DES_EDE2::~DES_EDE2()
0000000000a0fb15 l     F .text	00000000000001c5              trx_general_rollback_for_mysql
0000000000bfe606 l     F .text	0000000000000031              TaoCrypt::AbstractGroup::Double(TaoCrypt::Integer const&) const
00000000009c76a8 l     F .text	00000000000000ad              row_mysql_lock_data_dictionary_func
0000000000bce4ae l     F .text	000000000000002b              yaSSL::DSS::DSSImpl::DSSImpl()
0000000000bb557c l     F .text	000000000000002a              yaSSL::ProtocolVersion::ProtocolVersion(unsigned char, unsigned char)
0000000000bca7ba l     F .text	0000000000000020              mySTL::list<TaoCrypt::Signer*>::iterator::operator++()
00000000009fbf24 l     F .text	0000000000000031              sync_print
0000000000bb8888 l     F .text	0000000000000057              yaSSL::Data::Data(unsigned short, unsigned char*)
0000000000bc55ca l     F .text	0000000000000015              yaSSL::SSL_CTX::GetPasswordCb() const
0000000000bbd465 l     F .text	000000000000005a              yaSSL::CreateRSAClient()
0000000000a5c48d l     F .text	00000000000000e1              buf_get_total_list_size_in_bytes
0000000000bc3130 l     F .text	000000000000008d              yaSSL::SSL::bufferedData()
0000000000bbea8d l     F .text	0000000000000062              mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> mySTL::make_pair<int, yaSSL::ServerKeyBase* (*)()>(int const&, yaSSL::ServerKeyBase* (* const&)())
0000000000bbfe82 l     F .text	000000000000003d              yaSSL::FortezzaKeys::~FortezzaKeys()
0000000000bc6256 l     F .text	000000000000002e              yaSSL::X509_NAME::~X509_NAME()
0000000000bce170 l     F .text	0000000000000026              yaSSL::MD5::MD5Impl::MD5Impl(TaoCrypt::MD5 const&)
0000000001393940 l     O .bss	0000000000000008              os_has_said_disk_full
0000000000bbf3d4 l     F .text	000000000000002e              mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>::pair(int const&, yaSSL::ClientKeyBase* (* const&)())
00000000009bf0e4 l     F .text	0000000000000067              row_merge_is_index_usable
0000000000bcd5c8 l     F .text	0000000000000031              yaSSL::Auth::~Auth()
000000000138e7f8 l     O .bss	0000000000000008              srv_innodb_status
00000000008cd544 l     F .text	0000000000000035              TaoCrypt::HASH::~HASH()
0000000000bc2352 l     F .text	0000000000000014              yaSSL::SSL::useBuffers()
00000000008cd7f8 l     F .text	0000000000000041              TaoCrypt::SHA384::~SHA384()
0000000000bc8998 l     F .text	000000000000007b              yaSSL::input_buffer::add_size(unsigned int)
0000000000bc48b2 l     F .text	0000000000000012              yaSSL::SSL_SESSION::GetPeerX509() const
0000000000bb16b2 l     F .text	000000000000001b              yaSSL_free
0000000000bc69fc l     F .text	0000000000000037              yaSSL::yassl_int_cpp_local2::thr_match::operator()(yaSSL::ThreadError)
0000000000ad711a l     F .text	0000000000000079              pars_parameter_declaration
00000000013961c0 l     O .bss	0000000000000040              srv_pad2
0000000000aeaf22 l     F .text	0000000000000070              log_fsp_current_free_limit_set_and_checkpoint
0000000000bcc44a l     F .text	0000000000000026              yaSSL::RSA::~RSA()
0000000000b10955 l     F .text	00000000000009a0              page_cur_insert_rec_low
00000000009f319e l     F .text	0000000000000278              srv_purge_thread
0000000000bb34f8 l     F .text	000000000000000b              yaEVP_PKEY_free
0000000000bc764a l     F .text	00000000000000b8              mySTL::list<yaSSL::SSL_SESSION*>::erase(mySTL::list<yaSSL::SSL_SESSION*>::iterator)
0000000000bdf092 l     F .text	000000000000003e              TaoCrypt::DSA_Verifier::DSA_Verifier(TaoCrypt::DSA_PublicKey const&)
0000000000afd5d4 l     F .text	0000000000000050              mlog_catenate_string
0000000000a624bb l     F .text	00000000000004da              buf_page_try_get_func
0000000000bc7e70 l     F .text	000000000000001b              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::vector()
0000000000bcc0ce l     F .text	0000000000000026              yaSSL::DSS::~DSS()
000000000138e730 l     O .bss	0000000000000008              srv_buf_pool_curr_size
0000000001393950 l     O .bss	0000000000000008              os_file_n_pending_pwrites
0000000000bb9bd8 l     F .text	000000000000004f              yaSSL::ServerDHParams::ServerDHParams()
0000000000a7aa98 l     F .text	000000000000009c              dfield_check_typed
0000000000bcf5b2 l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::AES, (TaoCrypt::Mode)1>::BlockCipher()
0000000000bc7ede l     F .text	000000000000001a              mySTL::list<yaSSL::input_buffer*>::iterator::iterator(mySTL::list<yaSSL::input_buffer*>::node*)
0000000000bc026e l     F .text	000000000000006b              yaSSL::States::States()
0000000000a1ae82 l     F .text	000000000000004b              trx_free_for_background
0000000000bd31c7 l     F .text	0000000000000621              yaSSL::DoProcessReply(yaSSL::SSL&)
0000000000bc7296 l     F .text	00000000000000a7              mySTL::list<yaSSL::input_buffer*>::push_back(yaSSL::input_buffer*)
0000000000bb2304 l     F .text	0000000000000028              yaSSL_get_cipher
0000000000bce784 l     F .text	000000000000001b              TaoCrypt::Base64Decoder::~Base64Decoder()
0000000000bcad08 l     F .text	000000000000000f              yaSSL::SHA::get_padSize() const
0000000000af9324 l     F .text	0000000000000225              mem_heap_block_free
0000000000a92786 l     F .text	00000000000004ba              dict_update_statistics
00000000009bef8b l     F .text	0000000000000159              row_merge_create_index
0000000000a93f6d l     F .text	0000000000000084              dict_table_get_index_on_name_and_min_id
00000000013966c0 l     O .bss	0000000000000004              mutex_list_mutex_key
0000000000b2ab08 l     F .text	0000000000000417              page_zip_write_trx_id_and_roll_ptr
0000000000bdebea l     F .text	0000000000000012              TaoCrypt::DSA_PrivateKey::GetPrivatePart() const
00000000010f61e0 l     O .data	0000000000000004              pars_substr_token
0000000000bdf98e l     F .text	000000000000003c              TaoCrypt::AbstractRing::MultiplicativeGroupT::Subtract(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
00000000009fab0c l     F .text	00000000000000ea              rw_lock_is_locked
0000000000bc8fd0 l     F .text	000000000000004f              yaSSL::output_buffer::operator[](unsigned int)
0000000000bc7b35 l     F .text	0000000000000022              unsigned long yaSSL::min<unsigned long>(unsigned long, unsigned long)
0000000000bce41c l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::AES, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000a10c4b l     F .text	000000000000005e              trx_undo_arr_free
0000000001390218 l     O .bss	0000000000000008              rw_x_spin_round_count
0000000000a88aee l     F .text	0000000000000100              dict_table_stats_unlock
0000000000bc4644 l     F .text	00000000000000f0              yaSSL::SSL_SESSION::SSL_SESSION(yaSSL::SSL const&, yaSSL::RandomPool&)
0000000001390f20 l     O .bss	0000000000000008              trx_sys
0000000000bc8046 l     F .text	0000000000000032              mySTL::list<yaSSL::SSL_SESSION*>::node::node(yaSSL::SSL_SESSION*)
0000000000bcc112 l     F .text	0000000000000086              yaSSL::DSS::sign(unsigned char*, unsigned char const*, unsigned int, yaSSL::RandomPool const&)
00000000008cd5e2 l     F .text	0000000000000026              TaoCrypt::HASHwithTransform::~HASHwithTransform()
0000000000b08977 l     F .text	0000000000000027              os_fast_mutex_unlock
0000000000bbd4bf l     F .text	000000000000005a              yaSSL::CreateDHClient()
00000000010f5fe0 l     O .data	0000000000000008              srv_main_thread_op_info
0000000000bf7620 l     F .text	0000000000000096              TaoCrypt::RSA_PrivateKey::RSA_PrivateKey(TaoCrypt::Source&)
0000000000ad7d49 l     F .text	0000000000000027              pars_stored_procedure_call
0000000000bc7ce6 l     F .text	0000000000000057              yaSSL::del_ptr_zero mySTL::for_each<mySTL::list<yaSSL::input_buffer*>::iterator, yaSSL::del_ptr_zero>(mySTL::list<yaSSL::input_buffer*>::iterator, mySTL::list<yaSSL::input_buffer*>::iterator, yaSSL::del_ptr_zero)
0000000000ae2b02 l     F .text	0000000000000293              lock_move_rec_list_end
0000000000a2f3d4 l     F .text	000000000000002d              btr_root_get
0000000000bfe578 l     F .text	000000000000000f              TaoCrypt::SHA512::getPadSize() const
0000000000bd53dc l     F .text	0000000000000024              mySTL::auto_ptr<yaSSL::output_buffer>::release()
0000000000c00456 l     F .text	000000000000001b              mySTL::vector<TaoCrypt::Integer>::vector()
0000000000bcb3f4 l     F .text	0000000000000033              yaSSL::HMAC_SHA::update(unsigned char const*, unsigned int)
0000000000b08b25 l     F .text	000000000000000b              os_thread_get_curr_id
000000000138e840 l     O .bss	0000000000000008              srv_n_rows_deleted
0000000000aebdee l     F .text	000000000000003d              log_group_set_fields
0000000000bb3a49 l     F .text	0000000000000011              yaERR_GET_REASON
0000000000bbcb14 l     F .text	0000000000000025              yaSSL::Finished::set(yaSSL::input_buffer&)
00000000010ccb48 l     O .data.rel.ro	00000000000000e8              vtable for TaoCrypt::AbstractEuclideanDomain
0000000000bdc526 l     F .text	0000000000000093              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::CleanGrow(unsigned int)
0000000000ad5357 l     F .text	0000000000000051              pars_op
0000000000bbf4d8 l     F .text	000000000000001e              mySTL::vector_base<mySTL::pair<int, yaSSL::Message* (*)()> >::~vector_base()
0000000001393958 l     O .bss	0000000000000008              os_n_pending_writes
0000000000a9cf97 l     F .text	0000000000000527              dict_load_foreigns
0000000000bee63e l     F .text	000000000000003d              TaoCrypt::AbstractEuclideanDomain::AbstractEuclideanDomain()
00000000009ef0a3 l     F .text	00000000000003fd              srv_init
00000000009a359e l     F .text	0000000000000171              ha_innobase::can_switch_engines()
0000000000be0124 l     F .text	000000000000006d              TaoCrypt::HASHwithTransform::AddLength(unsigned int)
00000000010665d0 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::ChangeCipherSpec
0000000000bb34ad l     F .text	000000000000000f              yaSSL_get_certificate
0000000000aab910 l     F .text	00000000000003e6              fil_extend_space_to_desired_size
0000000000bea5ec l     F .text	0000000000000038              TaoCrypt::Integer::WordCount() const
0000000000a9e312 l     F .text	0000000000000107              dict_mem_table_free
0000000000bc94ac l     F .text	0000000000000015              yaSSL::CertManager::failNoCert() const
0000000000bf0b3a l     F .text	000000000000004d              TaoCrypt::EuclideanDomainOf::~EuclideanDomainOf()
0000000000bb8434 l     F .text	000000000000000f              yaSSL::Alert::get_length() const
0000000000bc0398 l     F .text	0000000000000012              yaSSL::States::useServer()
0000000000aec084 l     F .text	00000000000004ee              log_init
0000000000bb2270 l     F .text	0000000000000039              yaSSL_SESSION_set_timeout
0000000000c0036c l     F .text	0000000000000040              TaoCrypt::Integer* mySTL::uninit_fill_n<TaoCrypt::Integer*, unsigned long, TaoCrypt::Integer>(TaoCrypt::Integer*, unsigned long, TaoCrypt::Integer const&)
00000000009a1dbe l     F .text	0000000000000017              ha_innobase::optimize(THD*, st_ha_check_opt*)
0000000000a30b66 l     F .text	000000000000025c              btr_free_but_not_root
0000000000bf03b6 l     F .text	0000000000000059              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::Block(unsigned int)
0000000000bd54c6 l     F .text	0000000000000020              yaSSL::Mutex::Mutex()
0000000000bd01e0 l     F .text	0000000000000041              TaoCrypt::AES::~AES()
000000000099d4f0 l     F .text	0000000000000224              ha_innobase::innobase_get_index(unsigned int)
0000000000bc42d4 l     F .text	0000000000000014              yaSSL::SSL::getSocket() const
0000000000bdf8a6 l     F .text	0000000000000029              TaoCrypt::AbstractRing::MultiplicativeGroupT::Identity() const
0000000000bcf448 l     F .text	0000000000000025              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::BlockCipher()
0000000000bc6b89 l     F .text	0000000000000078              mySTL::list<yaSSL::ThreadError>::iterator mySTL::find_if<mySTL::list<yaSSL::ThreadError>::iterator, yaSSL::yassl_int_cpp_local2::thr_match>(mySTL::list<yaSSL::ThreadError>::iterator, mySTL::list<yaSSL::ThreadError>::iterator, yaSSL::yassl_int_cpp_local2::thr_match)
0000000000bf1f5c l     F .text	0000000000000092              TaoCrypt::MD5::operator=(TaoCrypt::MD5 const&)
00000000010f61a0 l     O .data	0000000000000004              ibuf_use
0000000000ad99a8 l     F .text	0000000000000209              sym_tab_add_bound_id
0000000000bcab44 l     F .text	000000000000007e              yaSSL::SHA::SHA()
0000000000bd87ee l     F .text	00000000000000a5              TaoCrypt::BER_Decoder::GetSequence()
0000000000bef050 l     F .text	0000000000000096              TaoCrypt::MontgomeryRepresentation::ConvertIn(TaoCrypt::Integer const&) const
00000000009f8713 l     F .text	00000000000000c5              sync_array_free
0000000000bc7f60 l     F .text	0000000000000022              mySTL::list<yaSSL::output_buffer*>::iterator::operator!=(mySTL::list<yaSSL::output_buffer*>::iterator const&) const
0000000000c0082c l     F .text	000000000000001b              void mySTL::destroy<TaoCrypt::Integer>(TaoCrypt::Integer*)
0000000000bce2bc l     F .text	000000000000001f              TaoCrypt::HMAC<TaoCrypt::RIPEMD160>::~HMAC()
0000000000aeda37 l     F .text	0000000000000062              log_buffer_flush_to_disk
0000000000a4453a l     F .text	00000000000007c6              btr_cur_optimistic_update
0000000000a5debc l     F .text	0000000000000062              buf_pool_free
0000000000a22054 l     F .text	0000000000000065              trx_undo_parse_discard_latest
0000000000bdea98 l     F .text	000000000000002a              TaoCrypt::DSA_PublicKey::SetPublicPart(TaoCrypt::Integer const&)
0000000000bbe2e8 l     F .text	000000000000006c              yaSSL::Factory<yaSSL::Message, int, yaSSL::Message* (*)()>::Register(int const&, yaSSL::Message* (*)())
0000000000bbdab6 l     F .text	0000000000000013              yaSSL::ClientKeyBase::read(yaSSL::SSL&, yaSSL::input_buffer&)
0000000000a2f401 l     F .text	000000000000021a              btr_get_prev_user_rec
0000000000bce244 l     F .text	000000000000001f              TaoCrypt::HMAC<TaoCrypt::MD5>::~HMAC()
0000000000bc9888 l     F .text	000000000000001e              yaSSL::CertManager::get_privateKey() const
0000000000bf0494 l     F .text	000000000000001f              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::operator+(unsigned int)
0000000000bca407 l     F .text	000000000000002d              void mySTL::swap<unsigned int>(unsigned int&, unsigned int&)
0000000000bcdeee l     F .text	0000000000000012              TaoCrypt::RSA_PrivateKey::GetPrivateExponent() const
0000000000bcb054 l     F .text	00000000000000a2              yaSSL::HMAC_MD5::HMAC_MD5(unsigned char const*, unsigned int)
0000000000bc8e06 l     F .text	0000000000000062              yaSSL::output_buffer::output_buffer(unsigned int)
00000000010666e0 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::ClientDiffieHellmanPublic
0000000000bcabc2 l     F .text	000000000000004d              yaSSL::SHA::~SHA()
0000000000bb7412 l     F .text	000000000000006d              yaSSL::DH_Server::~DH_Server()
0000000000abe94c l     F .text	00000000000001dd              ha_storage_put_memlim
0000000000bb43f0 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::x509>::auto_ptr(yaSSL::x509*)
0000000000bfe4a8 l     F .text	000000000000000f              TaoCrypt::SHA::getDigestSize() const
0000000000bc6ee4 l     F .text	0000000000000046              mySTL::list<yaSSL::input_buffer*>::end() const
0000000000bdc776 l     F .text	0000000000000026              TaoCrypt::DSA_Public_Decoder::~DSA_Public_Decoder()
0000000000bb420e l     F .text	0000000000000059              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::Block(unsigned int)
0000000000a5c739 l     F .text	0000000000000055              buf_calc_page_new_checksum
0000000000a845d3 l     F .text	0000000000000163              dict_create_add_foreigns_to_dictionary
0000000000bf1de0 l     F .text	000000000000000f              TaoCrypt::MD4::getPadSize() const
0000000000a65c0e l     F .text	0000000000000046              buf_print
0000000000bbfe5c l     F .text	0000000000000026              yaSSL::HandShakeHeader::~HandShakeHeader()
0000000000bcf896 l     F .text	00000000000000fc              TaoCrypt::RSA_Encryptor<TaoCrypt::RSA_BlockType2>::SSL_Verify(unsigned char const*, unsigned int, unsigned char const*)
0000000000ad74ec l     F .text	0000000000000035              pars_return_statement
00000000013935d0 l     O .bss	0000000000000008              fil_n_pending_log_flushes
0000000000bdfb8e l     F .text	0000000000000051              TaoCrypt::AbstractRing::~AbstractRing()
0000000000a05863 l     F .text	00000000000000ed              trx_purge_sys_print
000000000138e928 l     O .bss	0000000000000008              srv_startup_is_before_trx_rollback_phase
0000000000bbdd36 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::Auth>::auto_ptr(yaSSL::Auth*)
0000000001396200 l     O .bss	0000000000000190              export_vars
0000000001396e5c l     O .bss	0000000000000004              ibuf_mutex_key
0000000000bc9142 l     F .text	0000000000000066              yaSSL::x509::x509(yaSSL::x509 const&)
0000000000bb23fb l     F .text	0000000000000035              yaSSL_CTX_set_cipher_list
0000000000bfe588 l     F .text	000000000000000f              TaoCrypt::SHA384::getByteOrder() const
000000000099de6e l     F .text	000000000000003d              ha_innobase::index_prev(unsigned char*)
0000000000a43b63 l     F .text	000000000000026b              btr_cur_parse_update_in_place
0000000000a70abd l     F .text	000000000000008b              buf_LRU_flush_or_remove_pages
00000000010f6180 l     O .data	0000000000000010              fil_addr_null
0000000000bc85d2 l     F .text	000000000000002e              mySTL::vector_base<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::vector_base()
00000000009e6406 l     F .text	0000000000000508              row_upd_changes_ord_field_binary_func
0000000000995d0a l     F .text	0000000000000011              innobase_get_lower_case_table_names
0000000000bd7ad1 l     F .text	000000000000007a              void TaoCrypt::PutWord<unsigned int>(bool, TaoCrypt::ByteOrder, unsigned char*, unsigned int, unsigned char const*)
0000000000bb4106 l     F .text	000000000000001b              TaoCrypt::HexDecoder::~HexDecoder()
00000000010f61f8 l     O .data	0000000000000004              pars_printf_token
0000000000bccc56 l     F .text	00000000000000d7              yaSSL::DiffieHellman::set_sizes(int&, int&, int&) const
000000000138e850 l     O .bss	0000000000000008              srv_n_lock_wait_count
0000000000bb8946 l     F .text	000000000000000f              yaSSL::Data::get_type() const
0000000000995746 l     F .text	0000000000000093              innobase_mysql_print_thd
0000000000c003dc l     F .text	000000000000005c              mySTL::vector_base<mySTL::vector<TaoCrypt::Integer> >::vector_base(unsigned long)
0000000000a43dce l     F .text	00000000000001b2              btr_cur_update_alloc_zip
0000000000bc61c0 l     F .text	0000000000000096              yaSSL::X509_NAME::X509_NAME(char const*, unsigned long, int, int)
0000000000bc6d56 l     F .text	000000000000002c              yaSSL::Factory<yaSSL::ServerKeyBase, int, yaSSL::ServerKeyBase* (*)()>::Factory(void (*)(yaSSL::Factory<yaSSL::ServerKeyBase, int, yaSSL::ServerKeyBase* (*)()>&))
0000000000bcb8bc l     F .text	0000000000000026              yaSSL::DES_EDE::~DES_EDE()
0000000000bbfccc l     F .text	0000000000000026              yaSSL::ServerHello::~ServerHello()
0000000000bbf256 l     F .text	000000000000002e              mySTL::pair<int, yaSSL::ServerKeyBase* (*)()>::pair(int const&, yaSSL::ServerKeyBase* (* const&)())
0000000000bc9f7e l     F .text	0000000000000207              yaSSL::CertManager::SetPrivateKey(yaSSL::x509 const&)
0000000000bca8bc l     F .text	000000000000007e              yaSSL::MD5::MD5()
0000000000bf3588 l     F .text	00000000000000a4              TaoCrypt::RIPEMD160::Swap(TaoCrypt::RIPEMD160&)
0000000000bcf580 l     F .text	0000000000000031              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::Process(unsigned char*, unsigned char const*, unsigned int)
0000000000bee0cd l     F .text	0000000000000094              TaoCrypt::ShiftWordsRightByBits(unsigned long*, unsigned int, unsigned int)
0000000000be9b08 l     F .text	00000000000000d0              TaoCrypt::Integer::operator>>=(unsigned int)
0000000000bb408e l     F .text	000000000000004b              TaoCrypt::DSA_PublicKey::~DSA_PublicKey()
0000000000bee6ce l     F .text	0000000000000026              TaoCrypt::AbstractEuclideanDomain::~AbstractEuclideanDomain()
00000000010f6210 l     O .data	0000000000000004              pars_distinct_token
0000000000bfe5b8 l     F .text	000000000000000f              TaoCrypt::SHA384::getPadSize() const
0000000001068098 l     O .data.rel.ro	0000000000000028              vtable for TaoCrypt::DH_Decoder
0000000000ad80bc l     F .text	000000000000007d              pars_info_create
0000000000be9170 l     F .text	00000000000000f7              TaoCrypt::Integer::Randomize(TaoCrypt::RandomNumberGenerator&, unsigned int)
0000000000b00c8b l     F .text	000000000000005e              mtr_print
0000000000bcb3c6 l     F .text	000000000000002d              yaSSL::HMAC_SHA::get_digest(unsigned char*)
0000000000bbfee6 l     F .text	000000000000003d              yaSSL::RSA_Server::~RSA_Server()
0000000000b1c979 l     F .text	0000000000000c18              page_validate
000000000099cc5a l     F .text	0000000000000150              ha_innobase::unlock_row()
0000000000ade7af l     F .text	000000000000000b              lock_get_size
0000000001396f68 l     O .bss	0000000000000008              os_last_printout
0000000000bde898 l     F .text	0000000000000062              TaoCrypt::DSA_PublicKey::DSA_PublicKey(TaoCrypt::Source&)
0000000000ade516 l     F .text	00000000000000f8              lock_clust_rec_cons_read_sees
0000000000bc56a8 l     F .text	000000000000001e              yaSSL::SSL_CTX::setVerifyNone()
0000000001067a18 l     O .data.rel.ro	0000000000000058              vtable for yaSSL::DES
0000000000bf8958 l     F .text	0000000000001dc8              TaoCrypt::SHA::Transform()
0000000000bcf350 l     F .text	0000000000000049              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::DES, (TaoCrypt::Mode)1>::SetKey(unsigned char const*, unsigned int, unsigned char const*)
0000000000bbd519 l     F .text	000000000000005a              yaSSL::CreateFortezzaClient()
0000000000bbde9e l     F .text	0000000000000011              mySTL::auto_ptr<yaSSL::HandShakeBase>::operator->() const
0000000000be9918 l     F .text	000000000000012f              TaoCrypt::Integer::operator--()
0000000000bc6894 l     F .text	000000000000001b              yaSSL::Factory<yaSSL::HandShakeBase, int, yaSSL::HandShakeBase* (*)()>::~Factory()
0000000001396390 l     O .bss	0000000000000008              srv_conc_slots
0000000000b4ccfd l     F .text	0000000000000150              rbt_merge_uniq_destructive
0000000000a1d360 l     F .text	0000000000000227              trx_sig_start_handle
0000000000bce492 l     F .text	000000000000001b              yaSSL::RandomPool::RandomImpl::RandomImpl()
0000000000bb4b09 l     F .text	000000000000002b              unsigned long const& TaoCrypt::min<unsigned long>(unsigned long const&, unsigned long const&)
0000000000bc8f18 l     F .text	0000000000000023              yaSSL::output_buffer::get_capacity() const
0000000000bde8fa l     F .text	0000000000000068              TaoCrypt::DSA_PublicKey::Initialize(TaoCrypt::Source&)
0000000000bc03f8 l     F .text	0000000000000168              yaSSL::States::SetMessageRecvd(yaSSL::HandShakeType)
0000000000bc7702 l     F .text	0000000000000020              mySTL::list<yaSSL::SSL_SESSION*>::iterator::operator++()
0000000000bb3f6a l     F .text	000000000000002b              TaoCrypt::RSA_PublicKey::RSA_PublicKey()
0000000000bd956c l     F .text	00000000000000fc              TaoCrypt::CertDecoder::CertDecoder(TaoCrypt::Source&, bool, mySTL::list<TaoCrypt::Signer*>*, bool, TaoCrypt::CertDecoder::CertType)
0000000000b4cc31 l     F .text	00000000000000cc              rbt_merge_uniq
0000000000a641ab l     F .text	0000000000000696              buf_page_io_complete
00000000009b3f7a l     F .text	00000000000002e3              read_view_open_now
0000000000bbb6e3 l     F .text	0000000000000198              yaSSL::operator>>(yaSSL::input_buffer&, yaSSL::CertificateRequest&)
0000000000bf7932 l     F .text	00000000000000b3              TaoCrypt::RSA_BlockType1::Pad(unsigned char const*, unsigned int, unsigned char*, unsigned int, TaoCrypt::RandomNumberGenerator&) const
0000000000bdc60c l     F .text	000000000000001b              mySTL::auto_ptr<TaoCrypt::HASH>::~auto_ptr()
0000000001396398 l     O .bss	0000000000000001              srv_file_per_table
0000000000bef3b2 l     F .text	0000000000000078              TaoCrypt::DWord::operator+(unsigned long)
0000000000bbc2c3 l     F .text	000000000000004a              yaSSL::operator<<(yaSSL::output_buffer&, yaSSL::ClientKeyExchange const&)
0000000000bcae4a l     F .text	000000000000004d              yaSSL::RMD::~RMD()
0000000000ae2614 l     F .text	00000000000004ee              lock_move_reorganize_page
0000000000bf0bba l     F .text	0000000000000074              TaoCrypt::MD2::MD2()
0000000000bcddf6 l     F .text	0000000000000041              TaoCrypt::RSA_PublicKey::RSA_PublicKey(TaoCrypt::RSA_PublicKey const&)
0000000000bc672c l     F .text	0000000000000020              yaSSL::Ciphers::Ciphers()
00000000010ccc30 l     O .data.rel.ro	00000000000000d0              vtable for TaoCrypt::AbstractRing
0000000000bdfb3e l     F .text	0000000000000050              TaoCrypt::AbstractRing::MultiplicativeGroupT::SimultaneousMultiply(TaoCrypt::Integer*, TaoCrypt::Integer const&, TaoCrypt::Integer const*, unsigned int) const
0000000000bb9866 l     F .text	00000000000002f3              yaSSL::Certificate::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000ae6202 l     F .text	000000000000018c              lock_print_info_summary
0000000000bcb23e l     F .text	00000000000000a2              yaSSL::HMAC_SHA::HMAC_SHA(unsigned char const*, unsigned int)
0000000000bc02e8 l     F .text	0000000000000012              yaSSL::States::getHandShake() const
0000000000bf7340 l     F .text	000000000000005f              TaoCrypt::RSA_PublicKey::ApplyFunction(TaoCrypt::Integer const&) const
0000000000a9e8de l     F .text	000000000000004d              dict_mem_foreign_create
00000000013938c0 l     O .bss	0000000000000008              recv_no_log_write
0000000000bca434 l     F .text	000000000000002e              mySTL::list<TaoCrypt::Signer*>::list()
0000000000bcac36 l     F .text	000000000000008d              yaSSL::SHA::SHA(yaSSL::SHA const&)
0000000000bbdbc6 l     F .text	0000000000000029              yaSSL::FortezzaKeys::FortezzaKeys()
0000000000bce3a4 l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::DES_EDE3, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000a608e3 l     F .text	00000000000012af              buf_page_get_gen
0000000000beec8a l     F .text	000000000000000f              TaoCrypt::ModularArithmetic::IsMontgomeryRepresentation() const
0000000000bcbe80 l     F .text	000000000000006e              yaSSL::DSS::DSSImpl::SetPublic(unsigned char const*, unsigned int)
0000000000bcb7f0 l     F .text	000000000000007e              yaSSL::DES_EDE::DES_EDE()
0000000000bb846a l     F .text	0000000000000025              yaSSL::Alert::get(yaSSL::output_buffer&) const
0000000000bc6c80 l     F .text	000000000000002e              mySTL::list<yaSSL::ThreadError>::list()
0000000000a9224a l     F .text	0000000000000209              dict_index_build_node_ptr
0000000000b0452b l     F .text	0000000000000054              os_aio_wake_all_threads_at_shutdown
0000000000b2a778 l     F .text	0000000000000390              page_zip_write_node_ptr
0000000000be7476 l     F .text	00000000000001bc              TaoCrypt::RecursiveSquare(unsigned long*, unsigned long*, unsigned long const*, unsigned int)
0000000000bcb18a l     F .text	0000000000000051              yaSSL::HMAC_MD5::get_digest(unsigned char*, unsigned char const*, unsigned int)
0000000000bb41ce l     F .text	000000000000001b              yaSSL::BIGNUM::BIGNUM()
0000000000bc634c l     F .text	0000000000000012              yaSSL::X509::GetSubject()
0000000000bc5318 l     F .text	0000000000000012              yaSSL::SSL_METHOD::verifyPeer() const
0000000000bf0339 l     F .text	0000000000000033              void mySTL::swap<unsigned long const*>(unsigned long const*&, unsigned long const*&)
0000000001396e8c l     O .bss	0000000000000004              checkpoint_lock_key
0000000000a7c0df l     F .text	0000000000000130              dtype_validate
0000000000bcc198 l     F .text	0000000000000087              yaSSL::DSS::verify(unsigned char const*, unsigned int, unsigned char const*, unsigned int)
0000000000b378e8 l     F .text	00000000000000b7              rec_set_nth_field_null_bit
0000000000be8b18 l     F .text	0000000000000042              TaoCrypt::Integer::Integer(TaoCrypt::Source&)
0000000000bbcb02 l     F .text	0000000000000012              yaSSL::Finished::set_sha()
0000000000ae7f94 l     F .text	000000000000024f              lock_clust_rec_modify_check_and_lock
0000000000bc5590 l     F .text	0000000000000012              yaSSL::SSL_CTX::GetCiphers() const
0000000000bb9cd2 l     F .text	0000000000000046              yaSSL::ServerDHParams::alloc_p(int)
0000000000bba5ee l     F .text	000000000000000f              yaSSL::ClientKeyBase::get_clientKey() const
0000000000bd7756 l     F .text	0000000000000028              bool TaoCrypt::IsPowerOf2<unsigned int>(unsigned int)
0000000000bc6558 l     F .text	0000000000000016              yaSSL::Compress(unsigned char const*, int, yaSSL::input_buffer&)
0000000000bc8ae6 l     F .text	000000000000006f              yaSSL::input_buffer::set_current(unsigned int)
0000000000ad97f5 l     F .text	00000000000001b3              sym_tab_add_id
0000000000bbcf79 l     F .text	000000000000005a              yaSSL::CreateData()
0000000000bb9da8 l     F .text	000000000000000f              yaSSL::ServerKeyBase::get_length() const
0000000000ae638e l     F .text	00000000000005f1              lock_print_info_all_transactions
0000000000bcf1c6 l     F .text	000000000000001b              yaSSL::HMAC_RMD::HMAC_RMDImpl::~HMAC_RMDImpl()
0000000000c0079b l     F .text	0000000000000038              TaoCrypt::Integer* mySTL::GetArrayMemory<TaoCrypt::Integer>(unsigned long)
0000000000bcfcf2 l     F .text	000000000000001b              yaSSL::Integer::IntegerImpl::~IntegerImpl()
0000000001396530 l     O .bss	0000000000000004              srv_monitor_thread_key
0000000000befa74 l     F .text	0000000000000049              TaoCrypt::MultiplyTop(unsigned long*, unsigned long*, unsigned long const*, unsigned long const*, unsigned long const*, unsigned int)
0000000000af889b l     F .text	0000000000000035              mem_heap_strdup
0000000001396cc0 l     O .bss	0000000000000004              buf_LRU_old_threshold_ms
0000000000bc7fe2 l     F .text	0000000000000032              mySTL::list<yaSSL::input_buffer*>::node::node(yaSSL::input_buffer*)
00000000010cc760 l     O .data.rel.ro	00000000000000e8              vtable for TaoCrypt::EuclideanDomainOf
0000000000ae9206 l     F .text	0000000000000052              lock_rec_get_index_name
0000000000bdf810 l     F .text	0000000000000049              TaoCrypt::AbstractRing::AbstractRing()
0000000000bc7f98 l     F .text	0000000000000020              mySTL::list<yaSSL::output_buffer*>::iterator::operator++()
0000000000bc8078 l     F .text	000000000000001a              mySTL::list<yaSSL::SSL_SESSION*>::iterator::iterator(mySTL::list<yaSSL::SSL_SESSION*>::node*)
00000000009ef5a5 l     F .text	0000000000000615              srv_conc_enter_innodb
0000000000bef6fc l     F .text	000000000000001f              TaoCrypt::Word::operator/(unsigned int)
0000000000bb9ba2 l     F .text	0000000000000025              yaSSL::Certificate::get(yaSSL::output_buffer&) const
0000000000bbdff0 l     F .text	000000000000004b              mySTL::list<unsigned char*>::begin() const
00000000009ecec4 l     F .text	00000000000003f7              row_vers_old_has_index_entry
0000000000b396fa l     F .text	00000000000001ed              rec_print_old
0000000000a00ee2 l     F .text	000000000000002d              trx_i_s_cache_get_rows_used
0000000000bcba9a l     F .text	0000000000000026              yaSSL::RC4::~RC4()
0000000000bc6c02 l     F .text	000000000000002e              mySTL::list<yaSSL::SSL_SESSION*>::list()
0000000000a92e7c l     F .text	0000000000000207              dict_table_print_low
0000000000bef574 l     F .text	0000000000000011              TaoCrypt::DWord::GetLowHalf() const
0000000001396ed0 l     O .bss	0000000000000008              recv_needed_recovery
0000000000ad7239 l     F .text	0000000000000113              pars_if_statement
0000000000bfe4c8 l     F .text	000000000000000f              TaoCrypt::SHA256::getByteOrder() const
0000000000bcedf2 l     F .text	0000000000000063              TaoCrypt::HMAC<TaoCrypt::SHA>::HMAC()
0000000000bce3ee l     F .text	000000000000002d              yaSSL::RC4::RC4Impl::RC4Impl()
0000000000beebd2 l     F .text	000000000000007f              TaoCrypt::EuclideanDomainOf::Mod(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bb8968 l     F .text	000000000000001d              yaSSL::Data::set_length(unsigned short)
0000000000bed648 l     F .text	00000000000000ee              TaoCrypt::MontgomeryRepresentation::MontgomeryRepresentation(TaoCrypt::Integer const&)
0000000000bce330 l     F .text	000000000000002d              yaSSL::DES::DESImpl::DESImpl()
00000000010f5fc8 l     O .data	0000000000000008              srv_spin_wait_delay
0000000000bf1328 l     F .text	0000000000000092              TaoCrypt::MD4::operator=(TaoCrypt::MD4 const&)
0000000000bd7d96 l     F .text	0000000000000127              TaoCrypt::ARC4::Process(unsigned char*, unsigned char const*, unsigned int)
00000000009a5810 l     F .text	00000000000002eb              ha_innobase::store_lock(THD*, st_thr_lock_data**, thr_lock_type)
0000000000a549ac l     F .text	0000000000000096              btr_search_sys_free
0000000000bc5360 l     F .text	00000000000000cf              yaSSL::SSL_CTX::SSL_CTX(yaSSL::SSL_METHOD*)
0000000000ae58e1 l     F .text	0000000000000159              lock_remove_all_on_table
0000000000bb368b l     F .text	000000000000000e              yaX509_NAME_ENTRY_get_data
0000000000bb3503 l     F .text	0000000000000031              yaERR_error_string_n
000000000099522c l     F .text	0000000000000022              thd_is_select
0000000000a10434 l     F .text	000000000000006f              trx_release_savepoint_for_mysql
0000000000a1b8a7 l     F .text	00000000000002bd              trx_start_low
0000000000bcdcec l     F .text	0000000000000021              TaoCrypt::PK_Lengths::PaddedBlockByteLength() const
0000000000bdf687 l     F .text	0000000000000054              TaoCrypt::operator%(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bf0cae l     F .text	00000000000003c4              TaoCrypt::MD2::Update(unsigned char const*, unsigned int)
0000000000bffa98 l     F .text	000000000000010f              TaoCrypt::WindowSlider::WindowSlider(TaoCrypt::Integer const&, bool, unsigned int)
0000000000bfe518 l     F .text	000000000000000f              TaoCrypt::SHA224::getBlockSize() const
0000000000bb8920 l     F .text	0000000000000025              yaSSL::Data::get(yaSSL::output_buffer&) const
000000000139639c l     O .bss	0000000000000004              srv_dict_tmpfile_mutex_key
0000000000bd527c l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::Digest>::~auto_ptr()
0000000000bc7e48 l     F .text	000000000000000b              void mySTL::destroy<mySTL::list<yaSSL::ThreadError>::node>(mySTL::list<yaSSL::ThreadError>::node*)
00000000010f6240 l     O .data	0000000000000004              pars_unique_token
0000000000bc842a l     F .text	000000000000005d              void yaSSL::del_ptr_zero::operator()<yaSSL::x509>(yaSSL::x509*&) const
0000000000bbb59a l     F .text	00000000000000fd              yaSSL::CertificateRequest::Build()
0000000000bd873c l     F .text	000000000000001b              TaoCrypt::Signer::~Signer()
0000000000bccb4a l     F .text	0000000000000065              yaSSL::DiffieHellman::operator=(yaSSL::DiffieHellman const&)
0000000000bd7a8b l     F .text	0000000000000046              unsigned int TaoCrypt::GetWord<unsigned int>(bool, TaoCrypt::ByteOrder, unsigned char const*)
0000000000bcdccc l     F .text	0000000000000020              TaoCrypt::PK_Lengths::PaddedBlockBitLength() const
0000000000bb8168 l     F .text	0000000000000012              yaSSL::HelloRequest::get(yaSSL::output_buffer&) const
0000000000bb661c l     F .text	000000000000004d              yaSSL::EncryptedPreMasterSecret::~EncryptedPreMasterSecret()
0000000000bca66c l     F .text	000000000000004c              mySTL::list<yaSSL::x509*>::rbegin() const
0000000000b19504 l     F .text	000000000000039c              page_copy_rec_list_end
0000000000a988c8 l     F .text	0000000000000073              dict_process_sys_indexes_rec
00000000009b4921 l     F .text	0000000000000137              read_cursor_view_close_for_mysql
0000000001068138 l     O .data.rel.ro	0000000000000028              vtable for TaoCrypt::RSA_Private_Decoder
0000000000bbe03c l     F .text	0000000000000046              mySTL::list<unsigned char*>::end() const
0000000000a23e12 l     F .text	0000000000000076              trx_undo_mem_free
00000000009fbc0d l     F .text	000000000000003e              mutex_signal_object
0000000000bd587c l     F .text	000000000000000d              yaSSL::Socket::get_lastError()
0000000000bc97fc l     F .text	000000000000001a              yaSSL::CertManager::get_cert() const
0000000000b0321a l     F .text	0000000000000111              os_file_read_func
0000000000bcbdae l     F .text	0000000000000063              yaSSL::RandomPool::RandomPool()
0000000000bb2d1d l     F .text	000000000000000f              yaSSL_CTX_set_info_callback
0000000000bdeae6 l     F .text	0000000000000042              TaoCrypt::DSA_PrivateKey::DSA_PrivateKey(TaoCrypt::Source&)
0000000000afa5ff l     F .text	00000000000004b9              mem_area_alloc
0000000000bc8e06 l     F .text	0000000000000062              yaSSL::output_buffer::output_buffer(unsigned int)
0000000000bc8934 l     F .text	0000000000000052              yaSSL::input_buffer::allocate(unsigned int)
0000000000a36159 l     F .text	0000000000000235              btr_check_node_ptr
00000000009b4460 l     F .text	0000000000000155              read_view_print
0000000000bc8ee8 l     F .text	000000000000001f              yaSSL::output_buffer::~output_buffer()
0000000000bcc3fc l     F .text	000000000000004d              yaSSL::RSA::~RSA()
00000000010f5f68 l     O .data	0000000000000008              srv_win_file_flush_method
0000000000b4c7bb l     F .text	0000000000000063              rbt_delete
00000000010f5f28 l     O .data	0000000000000008              srv_mem_pool_size
0000000000a7ab34 l     F .text	0000000000000082              dtuple_check_typed
0000000000bd5454 l     F .text	000000000000001e              mySTL::auto_ptr<yaSSL::Message>::Destroy()
0000000000b0457f l     F .text	000000000000001f              os_aio_wait_until_no_pending_writes
0000000000a273b5 l     F .text	000000000000001b              ut_get_high32
00000000009c6a9a l     F .text	0000000000000510              row_update_for_mysql
0000000000bc5b7a l     F .text	0000000000000052              yaSSL::Crypto::Crypto()
0000000000bdfcf8 l     F .text	0000000000000071              TaoCrypt::ModularArithmetic::~ModularArithmetic()
00000000009c56b0 l     F .text	0000000000000272              row_create_prebuilt
0000000000bca318 l     F .text	0000000000000011              TaoCrypt::PublicKey::GetKey() const
0000000000c00554 l     F .text	000000000000006d              mySTL::vector<TaoCrypt::WindowSlider>::vector(unsigned long, mySTL::vector<TaoCrypt::WindowSlider> const&)
00000000009a63ec l     F .text	000000000000000d              ha_innobase::get_mysql_bin_log_name()
0000000000a7c013 l     F .text	0000000000000048              dtype_is_non_binary_string_type
0000000000bcdf00 l     F .text	000000000000002b              TaoCrypt::DH::DH()
0000000000ac71eb l     F .text	000000000000012c              ibuf_update_free_bits_zip
0000000000ab0ae7 l     F .text	0000000000000007              fsp_init
0000000000bcf992 l     F .text	0000000000000195              TaoCrypt::RSA_Encryptor<TaoCrypt::RSA_BlockType2>::Encrypt(unsigned char const*, unsigned int, unsigned char*, TaoCrypt::RandomNumberGenerator&)
0000000000bcb690 l     F .text	000000000000004d              yaSSL::DES::~DES()
0000000000bb4687 l     F .text	0000000000000024              void yaSSL::ysDelete<yaSSL::DH>(yaSSL::DH*)
00000000013963a0 l     O .bss	0000000000000008              srv_monitor_file
0000000000bb811e l     F .text	0000000000000012              yaSSL::HandShakeBase::set(yaSSL::input_buffer&)
0000000000a1d986 l     F .text	000000000000003d              commit_node_create
0000000000bbbad6 l     F .text	000000000000004d              yaSSL::CertificateVerify::~CertificateVerify()
0000000000bced4a l     F .text	00000000000000a8              TaoCrypt::HMAC<TaoCrypt::MD5>::Final(unsigned char*)
0000000000ae3389 l     F .text	000000000000010b              lock_update_merge_left
0000000000bdf85a l     F .text	0000000000000012              TaoCrypt::AbstractRing::MultiplicativeGroupT::GetRing() const
00000000009c7dc3 l     F .text	00000000000002c3              row_create_index_for_mysql
00000000009c4f12 l     F .text	00000000000003f5              row_mysql_store_col_in_innobase_format
0000000000becea8 l     F .text	000000000000013d              TaoCrypt::ModularArithmetic::Inverse(TaoCrypt::Integer const&) const
0000000000bb2b0e l     F .text	000000000000001e              yaSSL_CTX_sess_connect
0000000000995b41 l     F .text	000000000000006a              innobase_convert_from_id
0000000000bce35e l     F .text	0000000000000029              yaSSL::BulkCipher::BulkCipher()
0000000000bb9730 l     F .text	0000000000000032              yaSSL::Certificate::get_buffer() const
0000000000bd0178 l     F .text	0000000000000041              TaoCrypt::DES_EDE3::~DES_EDE3()
0000000000bb4936 l     F .text	0000000000000011              TaoCrypt::AllocatorBase<unsigned char>::max_size() const
0000000000bde6de l     F .text	0000000000000033              TaoCrypt::Integer const& TaoCrypt::min<TaoCrypt::Integer>(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000bbd087 l     F .text	000000000000005a              yaSSL::CreateServerHello()
0000000000bd5262 l     F .text	000000000000001a              mySTL::auto_ptr<yaSSL::Digest>::auto_ptr(yaSSL::Digest*)
0000000000bea70c l     F .text	0000000000000041              TaoCrypt::Integer::Swap(TaoCrypt::Integer&)
00000000008cd544 l     F .text	0000000000000035              TaoCrypt::HASH::~HASH()
0000000000b01e8d l     F .text	000000000000033b              os_file_readdir_next_file
0000000000bbbf74 l     F .text	0000000000000025              yaSSL::CertificateVerify::get(yaSSL::output_buffer&) const
0000000000aee28f l     F .text	000000000000007c              log_groups_write_checkpoint_info
0000000000bcf22e l     F .text	00000000000000a8              TaoCrypt::HMAC<TaoCrypt::RIPEMD160>::Final(unsigned char*)
0000000001396e50 l     O .bss	0000000000000004              hash_table_mutex_key
0000000000bbe636 l     F .text	0000000000000032              mySTL::list<unsigned char*>::node::node(unsigned char*)
00000000009f213a l     F .text	0000000000001064              srv_master_thread
0000000000a9e72c l     F .text	00000000000000ee              dict_mem_fill_column_struct
00000000009c5922 l     F .text	000000000000033d              row_prebuilt_free
0000000000bbc0ca l     F .text	00000000000001ea              yaSSL::CertificateVerify::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000bd5430 l     F .text	0000000000000011              mySTL::vector<mySTL::pair<int, yaSSL::Message* (*)()> >::begin() const
0000000000b51498 l     F .text	00000000000000fb              return_step
0000000000b18f45 l     F .text	000000000000004b              page_create
0000000000bee2f6 l     F .text	000000000000001d              TaoCrypt::Integer::NotNegative() const
0000000000b1a94c l     F .text	0000000000000250              page_delete_rec_list_start
0000000000a45e86 l     F .text	00000000000002fb              btr_cur_parse_del_mark_set_clust_rec
0000000000b0f84e l     F .text	000000000000007f              page_cur_open_on_rnd_user_rec
0000000000bd8580 l     F .text	000000000000012c              TaoCrypt::PublicKey::AddToEnd(unsigned char const*, unsigned int)
0000000000a7d288 l     F .text	0000000000000064              dict_hdr_get
000000000138e940 l     O .bss	0000000000000004              srv_shutdown_state
0000000000bb4b9c l     F .text	0000000000000041              yaSSL::Data::~Data()
0000000000beed20 l     F .text	0000000000000029              TaoCrypt::ModularArithmetic::Equal(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
00000000010667e0 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::Fortezza_Server
0000000000b31615 l     F .text	00000000000001e4              cmp_data_data_slow
0000000000ad79dd l     F .text	0000000000000134              pars_create_table
0000000000bb4324 l     F .text	000000000000002f              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::~Block()
0000000000ad9664 l     F .text	0000000000000191              sym_tab_add_null_lit
0000000000bccbb0 l     F .text	0000000000000048              yaSSL::DiffieHellman::makeAgreement(unsigned char const*, unsigned int)
0000000000bcad6a l     F .text	000000000000002d              yaSSL::SHA::get_digest(unsigned char*)
0000000000bb9b5a l     F .text	0000000000000035              yaSSL::Certificate::Certificate()
0000000000b07ec4 l     F .text	0000000000000084              os_event_reset
0000000000bb1632 l     F .text	000000000000001b              yaSSL_CTX_free
0000000000c00922 l     F .text	0000000000000052              mySTL::vector_base<TaoCrypt::WindowSlider>::vector_base(unsigned long)
0000000000bc5544 l     F .text	0000000000000015              yaSSL::SSL_CTX::getVerifyCallback() const
0000000000bc44b2 l     F .text	0000000000000192              yaSSL::SSL_SESSION::CopyX509(yaSSL::X509*)
00000000009c61fb l     F .text	00000000000001da              row_lock_table_for_mysql
0000000000af88d0 l     F .text	000000000000003f              mem_heap_dup
0000000000a277d8 l     F .text	000000000000011d              ut_print_buf
0000000000a0ff97 l     F .text	000000000000016a              trx_rollback_to_savepoint_for_mysql
0000000000bc7e8c l     F .text	000000000000001b              mySTL::vector<mySTL::pair<int, yaSSL::ServerKeyBase* (*)()> >::vector()
0000000000be96f2 l     F .text	0000000000000059              TaoCrypt::Integer::operator-() const
00000000009f1f83 l     F .text	0000000000000086              srv_wake_purge_thread
0000000000bdf714 l     F .text	0000000000000038              TaoCrypt::DSA_Public_Decoder::DSA_Public_Decoder(TaoCrypt::Source&)
00000000009f85db l     F .text	0000000000000138              sync_array_create
00000000009e55e6 l     F .text	0000000000000239              row_upd_build_sec_rec_difference_binary
0000000000a14d7f l     F .text	0000000000000079              trx_rseg_list_and_array_init
0000000000bdcb60 l     F .text	000000000000034e              TaoCrypt::Base64Encoder::Encode()
0000000000bcb612 l     F .text	000000000000007e              yaSSL::DES::DES()
0000000000bb1b1e l     F .text	000000000000002b              yaSSL_write
00000000009f87d8 l     F .text	00000000000000a7              sync_array_validate
0000000000bb883c l     F .text	000000000000004b              yaSSL::Data::Data()
00000000010cc358 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::Message
0000000000bc7d3e l     F .text	000000000000004b              yaSSL::sslFactory::~sslFactory()
0000000000bc565e l     F .text	0000000000000016              yaSSL::SSL_CTX::SetSessionCacheOff()
0000000000ae32b1 l     F .text	0000000000000069              lock_update_copy_and_discard
0000000000bca70a l     F .text	000000000000001a              mySTL::list<TaoCrypt::Signer*>::iterator::iterator(mySTL::list<TaoCrypt::Signer*>::node*)
0000000000bc85a4 l     F .text	000000000000002e              mySTL::vector_base<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::vector_base()
0000000000a466bb l     F .text	0000000000000188              btr_cur_del_mark_set_sec_rec
0000000000a18392 l     F .text	0000000000000007              trx_sys_file_format_close
0000000000bb4826 l     F .text	000000000000003f              TaoCrypt::AllocatorWithCleanup<unsigned char>::reallocate(unsigned char*, unsigned long, unsigned long, bool)
0000000000bcb5b0 l     F .text	000000000000002d              yaSSL::HMAC_RMD::get_digest(unsigned char*)
0000000000b007e0 l     F .text	0000000000000185              mtr_commit
0000000000bcb73e l     F .text	000000000000003e              yaSSL::DES::set_decryptKey(unsigned char const*, unsigned char const*)
0000000000bcad18 l     F .text	0000000000000051              yaSSL::SHA::get_digest(unsigned char*, unsigned char const*, unsigned int)
0000000000bc6cae l     F .text	000000000000004f              mySTL::list<yaSSL::ThreadError>::~list()
0000000000bc6974 l     F .text	000000000000001a              yaSSL::yassl_int_cpp_local2::sess_match::sess_match(unsigned char const*)
0000000000bc841f l     F .text	000000000000000b              void mySTL::destroy<mySTL::list<yaSSL::x509*>::node>(mySTL::list<yaSSL::x509*>::node*)
0000000000a578c9 l     F .text	00000000000001f1              btr_search_update_hash_node_on_insert
0000000000bd774b l     F .text	000000000000000b              TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 0>::ToEnum()
0000000000bc7223 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::output_buffer>(yaSSL::output_buffer*)
0000000000bc926e l     F .text	0000000000000012              yaSSL::x509::get_buffer() const
0000000000af2417 l     F .text	00000000000000a1              recv_sys_var_init
0000000000be053e l     F .text	000000000000002f              TaoCrypt::HASH64withTransform::HASH64withTransform(unsigned int, unsigned int)
0000000000bffcf4 l     F .text	000000000000002b              TaoCrypt::WindowSlider::~WindowSlider()
0000000000bc8c02 l     F .text	0000000000000071              yaSSL::input_buffer::peek()
0000000000bba5ce l     F .text	000000000000000f              yaSSL::ServerHelloDone::get_type() const
0000000000bc7156 l     F .text	0000000000000028              mySTL::list<yaSSL::output_buffer*>::front() const
0000000000bbf3d4 l     F .text	000000000000002e              mySTL::pair<int, yaSSL::ClientKeyBase* (*)()>::pair(int const&, yaSSL::ClientKeyBase* (* const&)())
0000000000bb21fa l     F .text	0000000000000051              yaSSL_set_session
0000000000b08cae l     F .text	000000000000009a              os_thread_sleep
0000000000aa0514 l     F .text	00000000000000d8              eval_node_free_val_buf
0000000000bdfd6a l     F .text	0000000000000026              TaoCrypt::ModularArithmetic::~ModularArithmetic()
0000000001393888 l     O .bss	0000000000000008              lock_sys
0000000000bcbaf6 l     F .text	000000000000003a              yaSSL::RC4::set_decryptKey(unsigned char const*, unsigned char const*)
0000000000bb3f12 l     F .text	000000000000003c              TaoCrypt::HexDecoder::HexDecoder(TaoCrypt::Source&)
0000000000c009d0 l     F .text	0000000000000043              TaoCrypt::Integer* mySTL::uninit_copy<TaoCrypt::Integer*, TaoCrypt::Integer*>(TaoCrypt::Integer*, TaoCrypt::Integer*, TaoCrypt::Integer*)
0000000000bf0960 l     F .text	0000000000000036              void mySTL::swap<TaoCrypt::AllocatorWithCleanup<unsigned long> >(TaoCrypt::AllocatorWithCleanup<unsigned long>&, TaoCrypt::AllocatorWithCleanup<unsigned long>&)
0000000000a2fb85 l     F .text	0000000000000180              btr_get_size
0000000000bfff86 l     F .text	000000000000001b              mySTL::vector<TaoCrypt::WindowSlider>::vector()
0000000000bd5502 l     F .text	000000000000002d              yaSSL::Mutex::Lock::Lock(yaSSL::Mutex&)
0000000000bef544 l     F .text	000000000000002f              TaoCrypt::DWord::operator!() const
00000000009c4db6 l     F .text	000000000000015c              row_mysql_pad_col
0000000000bcbe4e l     F .text	0000000000000032              yaSSL::RandomPool::Fill(unsigned char*, unsigned int) const
0000000000bb420e l     F .text	0000000000000059              TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >::Block(unsigned int)
0000000000a00e53 l     F .text	000000000000001b              trx_i_s_cache_end_write
0000000000bbf9e3 l     F .text	0000000000000033              void mySTL::swap<mySTL::pair<int, yaSSL::Message* (*)()>*>(mySTL::pair<int, yaSSL::Message* (*)()>*&, mySTL::pair<int, yaSSL::Message* (*)()>*&)
0000000000bd37e8 l     F .text	0000000000000096              yaSSL::processReply(yaSSL::SSL&)
0000000000c00138 l     F .text	0000000000000020              mySTL::vector<TaoCrypt::WindowSlider>::operator[](unsigned long)
0000000000bbccf4 l     F .text	0000000000000036              yaSSL::Connection::~Connection()
0000000000bde9fa l     F .text	0000000000000012              TaoCrypt::DSA_PublicKey::GetSubGroupGenerator() const
00000000009c7598 l     F .text	000000000000003a              row_table_got_default_clust_index
00000000009ef4a0 l     F .text	00000000000000db              srv_free
000000000138e750 l     O .bss	0000000000000008              srv_data_read
0000000000bc7d89 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::sslFactory>(yaSSL::sslFactory*)
0000000000b021c8 l     F .text	000000000000005e              os_file_create_directory
0000000000bbf898 l     F .text	000000000000001e              mySTL::vector_base<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::~vector_base()
0000000000bb9c28 l     F .text	000000000000003f              yaSSL::ServerDHParams::~ServerDHParams()
0000000000995164 l     F .text	000000000000001c              thd_is_replication_slave_thread
0000000000aa722f l     F .text	00000000000001b9              fil_space_get_size
000000000138e728 l     O .bss	0000000000000008              srv_log_group_home_dirs
0000000000a98b8c l     F .text	0000000000000547              dict_check_tablespaces_and_store_max_id
0000000000a893c0 l     F .text	0000000000000030              dict_table_get_nth_col_pos
00000000009c8521 l     F .text	0000000000000082              row_get_background_drop_list_len_low
0000000000a11c21 l     F .text	00000000000001aa              trx_finish_rollback_off_kernel
0000000000a9c2c5 l     F .text	000000000000009b              dict_load_sys_table
0000000000bb4106 l     F .text	000000000000001b              TaoCrypt::HexDecoder::~HexDecoder()
0000000000a1c4a4 l     F .text	0000000000000171              trx_cleanup_at_db_startup
0000000000bc6f2a l     F .text	0000000000000012              mySTL::list<yaSSL::input_buffer*>::size() const
0000000000bd7936 l     F .text	000000000000002a              TaoCrypt::PutBlock<unsigned int, TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 1>, true>::PutBlock(void const*, void*)
0000000000a98768 l     F .text	0000000000000160              dict_process_sys_tables_rec
0000000000bcc98c l     F .text	00000000000000fc              yaSSL::DiffieHellman::DiffieHellman(yaSSL::Integer const&, yaSSL::Integer const&, yaSSL::RandomPool const&)
00000000010cd000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
000000000099cad8 l     F .text	0000000000000181              ha_innobase::delete_row(unsigned char const*)
0000000000bc6d82 l     F .text	000000000000002c              yaSSL::Factory<yaSSL::ClientKeyBase, int, yaSSL::ClientKeyBase* (*)()>::Factory(void (*)(yaSSL::Factory<yaSSL::ClientKeyBase, int, yaSSL::ClientKeyBase* (*)()>&))
0000000000bec7a4 l     F .text	0000000000000222              TaoCrypt::ModularArithmetic::Add(TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bbda4e l     F .text	0000000000000031              yaSSL::ClientKeyBase::~ClientKeyBase()
0000000000a1ddf5 l     F .text	00000000000004b6              trx_print
0000000000a9a224 l     F .text	00000000000004b9              dict_load_index_low
0000000000bb3fc2 l     F .text	000000000000007f              TaoCrypt::RSA_PrivateKey::RSA_PrivateKey()
0000000000bca434 l     F .text	000000000000002e              mySTL::list<TaoCrypt::Signer*>::list()
0000000000bef5f9 l     F .text	0000000000000051              TaoCrypt::Word::Multiply(unsigned int, unsigned int)
0000000000ad90e8 l     F .text	00000000000001fb              sym_tab_add_str_lit
0000000000ae2d95 l     F .text	00000000000003ae              lock_move_rec_list_start
0000000000bc654a l     F .text	000000000000000e              yaSSL::StringHolder::GetString()
0000000000a9afc8 l     F .text	0000000000000599              dict_load_table_low
0000000000bb24ad l     F .text	000000000000002a              yaSSL_get_peer_certificate
0000000000a5df1e l     F .text	000000000000011c              buf_pool_clear_hash_index
0000000000bc7c40 l     F .text	000000000000004f              mySTL::list<yaSSL::output_buffer*>::~list()
0000000000bdc60c l     F .text	000000000000001b              mySTL::auto_ptr<TaoCrypt::HASH>::~auto_ptr()
0000000000bc8a14 l     F .text	0000000000000035              yaSSL::input_buffer::get_capacity() const
0000000000bc7b94 l     F .text	000000000000002e              mySTL::list<yaSSL::input_buffer*>::list()
0000000000bb7e42 l     F .text	00000000000001d6              yaSSL::HandShakeHeader::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000bef0e6 l     F .text	00000000000000ad              TaoCrypt::MontgomeryRepresentation::MultiplicativeIdentity() const
0000000000aa9841 l     F .text	000000000000080c              fil_create_new_single_table_tablespace
0000000000bdd918 l     F .text	000000000000033e              TaoCrypt::BasicDES::RawProcessBlock(unsigned int&, unsigned int&) const
0000000000bdc938 l     F .text	00000000000000f2              TaoCrypt::HexEncoder::Encode()
00000000010f5f48 l     O .data	0000000000000008              srv_n_write_io_threads
0000000000bcf1e2 l     F .text	000000000000004b              TaoCrypt::HMAC<TaoCrypt::RIPEMD160>::Update(unsigned char const*, unsigned int)
0000000000bc5cba l     F .text	0000000000000012              yaSSL::Crypto::use_random()
0000000001393a28 l     O .bss	0000000000000008              que_trace_on
00000000010ccd00 l     O .data.rel.ro	0000000000000080              vtable for TaoCrypt::AbstractGroup
0000000000bbb9f0 l     F .text	00000000000000a0              yaSSL::CertificateRequest::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000001067910 l     O .data.rel.ro	0000000000000058              vtable for yaSSL::AES
0000000000beb558 l     F .text	0000000000000242              TaoCrypt::Integer::DivideByPowerOf2(TaoCrypt::Integer&, TaoCrypt::Integer&, TaoCrypt::Integer const&, unsigned int)
0000000000bbf378 l     F .text	0000000000000035              mySTL::vector<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::~vector()
0000000000bc7422 l     F .text	00000000000000a7              mySTL::list<yaSSL::SSL_SESSION*>::push_back(yaSSL::SSL_SESSION*)
0000000000bcd538 l     F .text	000000000000000f              yaSSL::DES::get_ivSize() const
0000000000a9eb5b l     F .text	0000000000000091              dict_mem_index_free
0000000000998bd0 l     F .text	0000000000000011              ha_innobase::table_type() const
00000000013963a8 l     O .bss	0000000000000008              srv_lock_timeout_thread_event
0000000000a7d4a1 l     F .text	00000000000000da              dict_hdr_flush_row_id
0000000000a8966c l     F .text	000000000000009d              dict_table_get
0000000000bbfc8e l     F .text	000000000000003d              yaSSL::ServerHello::~ServerHello()
0000000000bcb4ca l     F .text	000000000000004d              yaSSL::HMAC_RMD::~HMAC_RMD()
0000000000bc532a l     F .text	0000000000000012              yaSSL::SSL_METHOD::verifyNone() const
0000000000bce2dc l     F .text	000000000000001b              yaSSL::HMAC_RMD::HMAC_RMDImpl::HMAC_RMDImpl()
0000000000bff9b8 l     F .text	000000000000008a              TaoCrypt::AbstractRing::CascadeExponentiate(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000bba518 l     F .text	0000000000000058              yaSSL::ServerHelloDone::Process(yaSSL::input_buffer&, yaSSL::SSL&)
00000000009cbde7 l     F .text	0000000000000607              row_check_index_for_mysql
0000000000bc683c l     F .text	000000000000003b              yaSSL::sslHashes::sslHashes()
0000000000a46cf1 l     F .text	0000000000000504              btr_cur_pessimistic_delete
0000000000bce0ec l     F .text	0000000000000012              TaoCrypt::DH::GetG()
0000000001396c40 l     O .bss	0000000000000040              btr_sea_pad2
0000000000aee811 l     F .text	0000000000000193              log_group_read_log_seg
00000000010f6200 l     O .data	0000000000000004              pars_rnd_token
0000000000a889cc l     F .text	0000000000000122              dict_table_stats_lock
0000000000a5c7be l     F .text	000000000000021f              buf_page_is_corrupted
0000000000bf116c l     F .text	000000000000000f              TaoCrypt::MD2::getBlockSize() const
0000000000b4b26c l     F .text	000000000000014c              row_undo_step
0000000000bf094e l     F .text	0000000000000012              unsigned long TaoCrypt::SafeShifter<true>::LeftShift<unsigned long>(unsigned long, unsigned int)
0000000000bc7fc4 l     F .text	000000000000001e              mySTL::auto_ptr<yaSSL::output_buffer>::Destroy()
0000000000bf73a0 l     F .text	0000000000000042              TaoCrypt::RSA_PublicKey::RSA_PublicKey(TaoCrypt::Source&)
0000000000a4688c l     F .text	00000000000000fc              btr_cur_compress_if_useful
0000000000a226b4 l     F .text	0000000000000136              trx_undo_free_last_page_func
0000000000bbfdba l     F .text	000000000000003d              yaSSL::HelloRequest::~HelloRequest()
0000000000bcbe12 l     F .text	000000000000001e              yaSSL::RandomPool::~RandomPool()
00000000010679c0 l     O .data.rel.ro	0000000000000058              vtable for yaSSL::DES_EDE
0000000000bcc28e l     F .text	00000000000000a8              yaSSL::RSA::RSAImpl::SetPrivate(unsigned char const*, unsigned int)
00000000009e690e l     F .text	0000000000000092              row_upd_changes_some_index_ord_field_binary
00000000013963c0 l     O .bss	0000000000000040              srv_pad1
0000000000b2dc93 l     F .text	0000000000000197              que_thr_end_wait
0000000000b3799f l     F .text	000000000000006e              rec_set_nth_field_sql_null
0000000000bcd468 l     F .text	0000000000000031              yaSSL::Digest::~Digest()
0000000000bd76a6 l     F .text	0000000000000064              TaoCrypt::AES::PreFetchTd() const
0000000000bce0fe l     F .text	000000000000001a              TaoCrypt::DH::GetByteLength() const
0000000000abdee2 l     F .text	0000000000000180              hash_create_mutexes_func
0000000000bb825e l     F .text	0000000000000025              yaSSL::ChangeCipherSpec::get(yaSSL::output_buffer&) const
0000000000bc7c40 l     F .text	000000000000004f              mySTL::list<yaSSL::output_buffer*>::~list()
0000000000a66652 l     F .text	00000000000006a6              buf_stats_get_pool_info
0000000000bcae98 l     F .text	0000000000000026              yaSSL::RMD::~RMD()
0000000000bbc614 l     F .text	000000000000000f              yaSSL::ClientKeyExchange::get_type() const
0000000000bfe538 l     F .text	000000000000000f              TaoCrypt::SHA224::getPadSize() const
0000000000bd3a7c l     F .text	00000000000001f1              yaSSL::sendClientKeyExchange(yaSSL::SSL&, yaSSL::BufferOutput)
0000000000bb3af7 l     F .text	000000000000000b              yaRSA_free
0000000000bd527c l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::Digest>::~auto_ptr()
00000000013938f8 l     O .bss	0000000000000008              mem_n_threads_inside
0000000000bc6e40 l     F .text	0000000000000022              mySTL::list<yaSSL::x509*>::iterator::operator!=(mySTL::list<yaSSL::x509*>::iterator const&) const
0000000000bd5530 l     F .text	000000000000001e              yaSSL::Mutex::Lock::~Lock()
00000000013966d5 l     O .bss	0000000000000001              srv_purge_view_update_only_debug
00000000010678d8 l     O .data.rel.ro	0000000000000038              vtable for yaSSL::DSS
000000000099c64a l     F .text	000000000000048e              ha_innobase::update_row(unsigned char const*, unsigned char*)
0000000000bc8264 l     F .text	0000000000000020              mySTL::list<yaSSL::ThreadError>::iterator::operator++()
0000000000afd624 l     F .text	00000000000000bd              mlog_write_initial_log_record
0000000000bb9c78 l     F .text	0000000000000011              yaSSL::ServerDHParams::get_gSize() const
0000000000bcece2 l     F .text	000000000000001b              yaSSL::HMAC_MD5::HMAC_MD5Impl::~HMAC_MD5Impl()
0000000000a7d2ec l     F .text	00000000000001b5              dict_hdr_get_new_id
0000000000bcc0f4 l     F .text	000000000000001e              yaSSL::DSS::get_signatureLength() const
0000000000bc9280 l     F .text	0000000000000012              yaSSL::x509::use_buffer()
0000000000bc610a l     F .text	000000000000000e              yaSSL::Security::get_connection() const
0000000000a382a7 l     F .text	0000000000000282              btr_can_merge_with_page
0000000000a1a1aa l     F .text	000000000000017d              trx_allocate_for_mysql
0000000000bcc528 l     F .text	0000000000000071              yaSSL::RSA::verify(unsigned char const*, unsigned int, unsigned char const*, unsigned int)
0000000001396400 l     O .bss	0000000000000098              srv_dict_tmpfile_mutex
0000000000ac6311 l     F .text	0000000000000093              ibuf_close
00000000009fb84a l     F .text	0000000000000057              mutex_set_waiters
0000000000aba7ae l     F .text	00000000000002d1              flst_cut_end
0000000000bce438 l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)1, TaoCrypt::AES, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000bb3ee4 l     F .text	0000000000000011              TaoCrypt::Source::GetError()
0000000000bd5238 l     F .text	0000000000000029              yaSSL::RecordLayerHeader::RecordLayerHeader()
000000000138e920 l     O .bss	0000000000000008              srv_start_raw_disk_in_use
0000000000bd7a66 l     F .text	000000000000001a              TaoCrypt::GetBlock<unsigned int, TaoCrypt::EnumToType<TaoCrypt::ByteOrder, 1>, true>::GetBlock(void const*)
00000000010666a0 l     O .data.rel.ro	0000000000000040              vtable for yaSSL::DH_Server
0000000000bbe49e l     F .text	000000000000006c              yaSSL::Factory<yaSSL::ClientKeyBase, int, yaSSL::ClientKeyBase* (*)()>::Register(int const&, yaSSL::ClientKeyBase* (*)())
0000000000b00965 l     F .text	00000000000001d7              mtr_memo_release
0000000000a1092e l     F .text	00000000000001e5              trx_rollback_or_clean_recovered
0000000000bc52b8 l     F .text	0000000000000011              yaSSL::SSL_METHOD::getVersion() const
0000000000bcf5fe l     F .text	000000000000002d              yaSSL::AES::AESImpl::~AESImpl()
0000000000995c42 l     F .text	000000000000003c              innobase_basename
0000000000bb34e5 l     F .text	0000000000000013              yaEVP_PKEY_copy_parameters
0000000000bbd97e l     F .text	0000000000000029              yaSSL::Alert::Alert()
0000000000a83737 l     F .text	00000000000003b0              dict_create_index_step
0000000000a67316 l     F .text	0000000000000046              buf_refresh_io_stats_all
0000000000ac6462 l     F .text	0000000000000419              ibuf_init_at_db_start
0000000000bd752c l     F .text	0000000000000116              TaoCrypt::UnalignedPutWord(TaoCrypt::ByteOrder, unsigned char*, unsigned int, unsigned char const*)
0000000000bc378a l     F .text	000000000000010d              yaSSL::SSL::Send(unsigned char const*, unsigned int)
0000000000a7a8b6 l     F .text	0000000000000058              dtuple_set_n_fields
0000000001393960 l     O .bss	0000000000000008              os_n_pending_reads
0000000000bef204 l     F .text	000000000000003d              TaoCrypt::MontgomeryRepresentation::SimultaneousExponentiate(TaoCrypt::Integer*, TaoCrypt::Integer const&, TaoCrypt::Integer const*, unsigned int) const
0000000000bc0618 l     F .text	000000000000044e              yaSSL::SSL::SSL(yaSSL::SSL_CTX*)
0000000000ae8fce l     F .text	0000000000000018              lock_get_trx_id
000000000138e888 l     O .bss	0000000000000008              srv_print_innodb_tablespace_monitor
00000000010f6230 l     O .data	0000000000000004              pars_desc_token
0000000000bbe570 l     F .text	0000000000000011              mySTL::vector<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::begin() const
0000000000bcbd3a l     F .text	0000000000000038              yaSSL::AES::encrypt(unsigned char*, unsigned char const*, unsigned int)
0000000000bb637a l     F .text	0000000000000262              yaSSL::EncryptedPreMasterSecret::read(yaSSL::SSL&, yaSSL::input_buffer&)
00000000013964a0 l     O .bss	0000000000000068              srv_conc_mutex
0000000000bbf5c6 l     F .text	0000000000000052              mySTL::vector_base<mySTL::pair<int, yaSSL::HandShakeBase* (*)()> >::vector_base(unsigned long)
00000000013939b0 l     O .bss	0000000000000008              os_thread_count
00000000009bf14b l     F .text	0000000000000066              row_merge_drop_table
0000000000bc6878 l     F .text	000000000000001b              yaSSL::Factory<yaSSL::Message, int, yaSSL::Message* (*)()>::~Factory()
0000000000be8b5a l     F .text	000000000000019f              TaoCrypt::Integer::Decode(TaoCrypt::Source&)
0000000000bb45b3 l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::SSL>(yaSSL::SSL*)
0000000000bc4370 l     F .text	0000000000000014              yaSSL::SSL::useStates()
0000000000bf362c l     F .text	0000000000003cc8              TaoCrypt::RIPEMD160::Transform()
0000000000bfe4b8 l     F .text	000000000000000f              TaoCrypt::SHA::getPadSize() const
0000000000bd7c10 l     F .text	00000000000000db              TaoCrypt::ARC4::SetKey(unsigned char const*, unsigned int)
0000000000bdfdf0 l     F .text	000000000000002a              TaoCrypt::FileSource::~FileSource()
0000000000bb80e4 l     F .text	0000000000000011              yaSSL::HandShakeBase::get_length() const
0000000000be005a l     F .text	0000000000000031              TaoCrypt::Source::reset(TaoCrypt::Block<unsigned char, TaoCrypt::AllocatorWithCleanup<unsigned char> >&)
0000000000a6935e l     F .text	00000000000000ca              buf_flush_free_flush_rbt
0000000000bd8da8 l     F .text	00000000000001e3              TaoCrypt::DSA_Private_Decoder::Decode(TaoCrypt::DSA_PrivateKey&)
0000000000bc031e l     F .text	0000000000000012              yaSSL::States::GetConnect() const
0000000001396b20 l     O .bss	0000000000000068              ut_list_mutex
0000000000bb3dd4 l     F .text	0000000000000047              TaoCrypt::MD5::MD5()
0000000000bb2dbf l     F .text	00000000000000e1              yaBN_bin2bn
0000000001067ab8 l     O .data.rel.ro	0000000000000048              vtable for yaSSL::HMAC_SHA
0000000000be0bb2 l     F .text	0000000000000062              void TaoCrypt::ByteReverseIf<unsigned long>(unsigned long*, unsigned long const*, unsigned int, TaoCrypt::ByteOrder)
0000000000a47c58 l     F .text	00000000000007af              btr_estimate_number_of_different_key_vals
0000000000bef194 l     F .text	000000000000006f              TaoCrypt::MontgomeryRepresentation::CascadeExponentiate(TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&, TaoCrypt::Integer const&) const
0000000000998be2 l     F .text	0000000000000014              ha_innobase::index_type(unsigned int)
0000000000bcdf00 l     F .text	000000000000002b              TaoCrypt::DH::DH()
0000000000bcc6fe l     F .text	000000000000001e              yaSSL::Integer::~Integer()
0000000000bc869d l     F .text	000000000000001b              void yaSSL::checked_delete<yaSSL::x509>(yaSSL::x509*)
0000000000aadc79 l     F .text	000000000000001e              fil_page_get_prev
0000000000a5e03a l     F .text	0000000000000a47              buf_relocate
0000000000bf3230 l     F .text	0000000000000045              TaoCrypt::RandomNumberGenerator::GenerateBlock(unsigned char*, unsigned int)
0000000000aaa04d l     F .text	00000000000005e2              fil_reset_too_high_lsns
0000000000a1e953 l     F .text	000000000000013f              trx_get_trx_by_xid
0000000000bc832a l     F .text	00000000000000ad              mySTL::list<yaSSL::ThreadError>::pop_back()
0000000001396e40 l     O .bss	0000000000000004              ibuf_debug
0000000000bf2eac l     F .text	000000000000000f              TaoCrypt::MD5::getByteOrder() const
0000000000ad836e l     F .text	00000000000000d7              pars_info_add_function
0000000000bb2493 l     F .text	000000000000001a              yaSSL_set_compression
0000000000bcece2 l     F .text	000000000000001b              yaSSL::HMAC_MD5::HMAC_MD5Impl::~HMAC_MD5Impl()
0000000000bdc864 l     F .text	000000000000003d              TaoCrypt::RSA_Private_Decoder::~RSA_Private_Decoder()
0000000000bf0666 l     F .text	000000000000005c              TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >::Swap(TaoCrypt::Block<unsigned long, TaoCrypt::AllocatorWithCleanup<unsigned long> >&)
0000000000bd00a8 l     F .text	0000000000000041              TaoCrypt::RIPEMD160::~RIPEMD160()
00000000008cd5a0 l     F .text	0000000000000041              TaoCrypt::HASHwithTransform::~HASHwithTransform()
0000000000bfffa2 l     F .text	0000000000000035              mySTL::vector<TaoCrypt::WindowSlider>::~vector()
0000000000bb2abd l     F .text	000000000000000f              yaSSL_CTX_set_default_verify_paths
0000000000b088ab l     F .text	00000000000000a0              os_fast_mutex_init
0000000000bba5de l     F .text	000000000000000f              yaSSL::ClientKeyBase::get_length() const
0000000000bedf71 l     F .text	0000000000000051              TaoCrypt::CopyWords(unsigned long*, unsigned long const*, unsigned int)
000000000099cdaa l     F .text	0000000000000023              ha_innobase::was_semi_consistent_read()
0000000000bb48fa l     F .text	000000000000001e              mySTL::auto_ptr<yaSSL::x509>::Destroy()
0000000000bee314 l     F .text	000000000000003a              TaoCrypt::Integer::IsPositive() const
0000000000bc02fa l     F .text	0000000000000012              yaSSL::States::getClient() const
0000000000bbe552 l     F .text	000000000000001e              mySTL::auto_ptr<yaSSL::Auth>::Destroy()
0000000000ace3dc l     F .text	00000000000010c7              ibuf_merge_or_delete_for_page
0000000000bce154 l     F .text	000000000000001b              yaSSL::MD5::MD5Impl::MD5Impl()
0000000000b2de2a l     F .text	000000000000014c              que_thr_end_wait_no_next_thr
0000000000bbe709 l     F .text	0000000000000062              mySTL::pair<int, yaSSL::Message* (*)()> mySTL::make_pair<int, yaSSL::Message* (*)()>(int const&, yaSSL::Message* (* const&)())
0000000000bbf636 l     F .text	0000000000000043              mySTL::pair<int, yaSSL::HandShakeBase* (*)()>* mySTL::uninit_copy<mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*, mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*>(mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*, mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*, mySTL::pair<int, yaSSL::HandShakeBase* (*)()>*)
0000000000bde0b3 l     F .text	000000000000001b              TaoCrypt::ReverseDir(TaoCrypt::CipherDir)
0000000000bde71e l     F .text	0000000000000077              TaoCrypt::DSA_PublicKey::Swap(TaoCrypt::DSA_PublicKey&)
000000000099dba2 l     F .text	0000000000000067              ha_innobase::index_read_idx(unsigned char*, unsigned int, unsigned char const*, unsigned int, ha_rkey_function)
0000000000a97fe9 l     F .text	000000000000038c              dict_get_first_table_name_in_db
0000000001391088 l     O .bss	0000000000000004              btr_cur_limit_optimistic_insert_debug
0000000000a6de4d l     F .text	0000000000000052              buf_flush_validate
0000000000bc01de l     F .text	0000000000000046              yaSSL::c24toa(unsigned char const*, unsigned char*)
00000000008cd57a l     F .text	0000000000000026              TaoCrypt::HASH::~HASH()
0000000000acfa80 l     F .text	0000000000000c7f              yylex
0000000000bef586 l     F .text	0000000000000012              TaoCrypt::DWord::GetHighHalf() const
0000000000bce41c l     F .text	000000000000001b              TaoCrypt::BlockCipher<(TaoCrypt::CipherDir)0, TaoCrypt::AES, (TaoCrypt::Mode)1>::~BlockCipher()
0000000000bef42a l     F .text	000000000000009b              TaoCrypt::DWord::operator-(TaoCrypt::DWord)
0000000000bbb464 l     F .text	000000000000005e              yaSSL::CertificateRequest::CertificateRequest()
0000000000ad8e55 l     F .text	00000000000000b2              sym_tab_free_private
0000000000bfe568 l     F .text	000000000000000f              TaoCrypt::SHA512::getDigestSize() const
00000000010f5f58 l     O .data	0000000000000008              srv_insert_buffer_batch_size
000000000099e0aa l     F .text	0000000000000027              ha_innobase::rnd_end()
0000000000bce9df l     F .text	000000000000003c              void yaSSL::ysDelete<yaSSL::HMAC_SHA::HMAC_SHAImpl>(yaSSL::HMAC_SHA::HMAC_SHAImpl*)
0000000000bb65dc l     F .text	0000000000000040              yaSSL::EncryptedPreMasterSecret::EncryptedPreMasterSecret()
000000000099a8d8 l     F .text	00000000000008a8              ha_innobase::store_key_val_for_row(unsigned int, char*, unsigned int, unsigned char const*)
0000000000998c22 l     F .text	000000000000000f              ha_innobase::max_supported_keys() const
0000000000bcacf8 l     F .text	000000000000000f              yaSSL::SHA::get_digestSize() const
0000000000bf800c l     F .text	00000000000000a5              TaoCrypt::SHA::SHA(TaoCrypt::SHA const&)
00000000013901f8 l     O .bss	0000000000000008              rw_s_spin_round_count
0000000000bc488e l     F .text	0000000000000012              yaSSL::SSL_SESSION::GetSecret() const
0000000000bbe1da l     F .text	000000000000001a              mySTL::auto_array<unsigned char>::auto_array(unsigned char*)
0000000000a8d235 l     F .text	00000000000000ae              dict_index_copy_types
0000000000a10f96 l     F .text	000000000000014a              trx_roll_try_truncate
0000000000bd9984 l     F .text	0000000000000075              TaoCrypt::CertDecoder::DecodeToKey()
0000000000bc94c2 l     F .text	0000000000000015              yaSSL::CertManager::sendVerify() const
0000000000bd77a9 l     F .text	000000000000006b              void TaoCrypt::ByteReverse<unsigned int>(unsigned int*, unsigned int const*, unsigned int)
0000000000bbe594 l     F .text	000000000000001e              mySTL::auto_ptr<yaSSL::HandShakeBase>::Destroy()
0000000000bce492 l     F .text	000000000000001b              yaSSL::RandomPool::RandomImpl::RandomImpl()
0000000000b0261a l     F .text	0000000000000384              os_file_create_func
0000000000bd64ea l     F .text	00000000000007be              TaoCrypt::AES::encrypt(unsigned char const*, unsigned char const*, unsigned char*) const
0000000000bbb00e l     F .text	0000000000000025              yaSSL::ClientHello::set(yaSSL::input_buffer&)
0000000000bd5378 l     F .text	000000000000001b              mySTL::auto_ptr<yaSSL::Message>::~auto_ptr()
0000000000a8e841 l     F .text	0000000000000076              dict_foreign_find_equiv_index
0000000000bf7d8c l     F .text	0000000000000084              TaoCrypt::SHA256::Init()
0000000000bb9fee l     F .text	00000000000003b7              yaSSL::ServerHello::Process(yaSSL::input_buffer&, yaSSL::SSL&)
0000000000b2bf84 l     F .text	00000000000001ab              page_zip_parse_write_header
0000000000bbcd92 l     F .text	0000000000000021              yaSSL::Connection::TurnOffTLS1_1()
0000000000a92db0 l     F .text	0000000000000045              dict_table_print
0000000000a9996b l     F .text	00000000000004d4              dict_load_field_low
0000000000bdf633 l     F .text	0000000000000054              TaoCrypt::operator*(TaoCrypt::Integer const&, TaoCrypt::Integer const&)
0000000000be886a l     F .text	0000000000000063              TaoCrypt::Integer::Integer()
0000000000afdc0d l     F .text	00000000000000ef              mlog_write_ull
0000000000bbf898 l     F .text	000000000000001e              mySTL::vector_base<mySTL::pair<int, yaSSL::ClientKeyBase* (*)()> >::~vector_base()
0000000000bcbd72 l     F .text	000000000000003c              yaSSL::AES::decrypt(unsigned char*, unsigned char const*, unsigned int)
0000000000aef49a l     F .text	0000000000000045              log_refresh_stats
0000000000ae8fe6 l     F .text	00000000000000ef              lock_get_mode_str
0000000000ad658a l     F .text	0000000000000075              pars_function_declaration
0000000000bc5e18 l     F .text	000000000000000e              yaSSL::sslHashes::use_MD5()
0000000000b320c3 l     F .text	0000000000000462              cmp_rec_rec_simple
0000000000bdf4f0 l     F .text	0000000000000012              TaoCrypt::DSA_Verifier::GetR() const
0000000001396f70 l     O .bss	0000000000000004              innodb_file_data_key
0000000000b40df6 l     F .text	0000000000000a29              row_ins_check_foreign_constraint
0000000000bb3aab l     F .text	0000000000000010              yaERR_get_error
0000000000bd00ea l     F .text	0000000000000026              TaoCrypt::RIPEMD160::~RIPEMD160()
000000000059b63c  w    F .text	000000000000001b              Dynamic_array<GRANT_NAME*>::~Dynamic_array()
0000000001268180 g     O .data	0000000000000058              my_collation_mb_bin_handler
0000000000893a94  w    F .text	000000000000002d              Gis_multi_line_string::Gis_multi_line_string()
00000000007bf208  w    F .text	0000000000000026              Create_func_field::~Create_func_field()
00000000005690bc  w    F .text	0000000000000026              I_List_iterator<i_string_pair>::I_List_iterator(I_List<i_string_pair>&)
0000000000820b6e g     F .text	0000000000000221              MYSQL_LOG::close(unsigned int)
00000000005d9b76  w    F .text	000000000000001a              Diagnostics_area::is_disabled() const
0000000001213ac0 g     O .data	0000000000000101              ctype_cp1251_general_ci
00000000007ae46c  w    F .text	0000000000000015              Item_bool_func2::compare_collation()
0000000000891bba g     F .text	000000000000006c              Gis_multi_polygon::num_geometries(unsigned int*) const
0000000000766934  w    F .text	0000000000000037              Field_datetime::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000005ca9a2 g     F .text	0000000000000080              THD::set_query_and_id(char*, unsigned int, charset_info_st*, long long)
000000000136efa0 g     O .bss	0000000000000020              temp_pool
0000000000559b3e  w    F .text	000000000000001a              I_List<Statement>::head()
000000000136e300 g     O .bss	0000000000000020              global_date_format
00000000012c9d20 g     O .data	00000000000000b0              my_charset_utf8_esperanto_uca_ci
000000000109a550  w    O .data.rel.ro	00000000000003c8              vtable for Item_num_op
00000000007f5d0e g     F .text	0000000000000033              Item_singlerow_subselect::cols()
00000000007f0a20 g     F .text	000000000000017e              Item_func_uncompressed_length::val_int()
00000000008f570f g     F .text	0000000000000025              thr_set_sync_wait_callback
0000000000000000       F *UND*	0000000000000000              ftell@@GLIBC_2.2.5
0000000000989282 g     F .text	0000000000000108              hp_clear
000000000085183a g     F .text	000000000000007a              Write_rows_log_event_old::Write_rows_log_event_old(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
00000000008931d6  w    F .text	000000000000004e              String::q_append(char const*, unsigned int)
000000000064fc02 g     F .text	0000000000000088              setup_order(THD*, Item**, TABLE_LIST*, List<Item>&, List<Item>&, st_order*)
00000000006cf4e2 g     F .text	0000000000000423              partition_info::check_engine_mix(handlerton*, bool)
0000000000906643 g     F .text	0000000000000056              reset_per_thread_wait_stat()
000000000078d5bc g     F .text	0000000000000088              Item_float::save_in_field(Field*, bool)
0000000000737b60  w    F .text	0000000000000043              Item_sum_num::Item_sum_num(List<Item>&)
000000000070afde  w    F .text	00000000000002a0              Sys_var_set::do_check(THD*, set_var*)
00000000008ccdbc  w    F .text	000000000000001b              List_iterator_fast<st_foreign_key_info>::List_iterator_fast()
0000000001069828  w    O .data.rel.ro	0000000000000078              vtable for select_singlerow_subselect
000000000098e064 g     F .text	000000000000024a              ha_myisammrg::info(unsigned int)
00000000007a71ba g     F .text	000000000000015a              cmp_item_row::~cmp_item_row()
000000000136cd38 g     O .bss	0000000000000008              max_binlog_cache_size
00000000007c223a  w    F .text	000000000000002d              Create_func_substr_index::Create_func_substr_index()
0000000000607384  w    F .text	0000000000000057              THD::update_server_status()
00000000008490f6  w    F .text	000000000000000f              Rand_log_event::is_valid() const
0000000000000000       F *UND*	0000000000000000              pthread_cond_signal@@GLIBC_2.3.2
0000000001069298  w    O .data.rel.ro	0000000000000038              vtable for set_var_base
0000000000909a37 g     F .text	00000000000000a1              sanitize_file_class(PFS_file_class*)
000000000065c408  w    F .text	0000000000000026              List_iterator<Item_outer_ref>::List_iterator(List<Item_outer_ref>&)
00000000007d4f7e g     F .text	000000000000007f              Item_func_get_user_var::print(String*, enum_query_type)
0000000001069630  w    O .data.rel.ro	0000000000000060              vtable for Statement
00000000007eebba g     F .text	00000000000000e1              Item_func_charset::val_str(String*)
00000000007f2f3e  w    F .text	0000000000000046              Item_func_charset::~Item_func_charset()
0000000001076dc0  w    O .data.rel.ro	0000000000000360              vtable for Item_direct_view_ref
0000000000000000       F *UND*	0000000000000000              operator new[](unsigned long)@@GLIBCXX_3.4
00000000006f20e6 g     F .text	000000000000002d              MDL_ticket::destroy(MDL_ticket*)
00000000008ff561 g     F .text	00000000000000a1              safe_mutex_init
000000000057a807  w    F .text	000000000000001f              Log_event::operator delete(void*, unsigned long)
00000000005b0032  w    F .text	0000000000000017              Query_arena::is_conventional() const
000000000088c528 g     F .text	0000000000000046              sp_rcontext::set_variable(THD*, unsigned int, Item**)
00000000007be8fc  w    F .text	0000000000000041              Create_func_decode::~Create_func_decode()
00000000007fc5aa  w    F .text	0000000000000016              Item_in_subselect::top_level_item()
000000000091bf8e g     F .text	000000000000042b              ha_myisam::open(char const*, int, unsigned int)
0000000000979d16 g     F .text	00000000000002e3              sp_make_key
0000000001073c00  w    O .data.rel.ro	0000000000000468              vtable for handler
000000000070e98c  w    F .text	0000000000000041              Sys_var_set::~Sys_var_set()
000000000091be86 g     F .text	0000000000000011              ha_myisam::bas_ext() const
000000000073b800  w    F .text	000000000000002d              set_var_base::set_var_base()
000000000089e442 g     F .text	0000000000000385              multi_delete::send_data(List<Item>&)
00000000007e26f0  w    F .text	000000000000002b              Item_func_as_wkt::~Item_func_as_wkt()
00000000008694e4 g     F .text	0000000000000505              QUICK_ROR_INTERSECT_SELECT::get_next()
000000000090f456  w    F .text	0000000000000027              pos_events_waits_summary_by_thread_by_event_name::next_view()
00000000005f0154 g     F .text	000000000000002e              st_select_lex::set_index_hint_type(index_hint_type, unsigned char)
000000000055bd74 g     F .text	0000000000000055              get_key_cache(st_mysql_lex_string*)
0000000001370748 g     O .bss	0000000000000004              key_LOCK_active
000000000138e2e0 g     O .bss	0000000000000004              THR_PFS
0000000000bb02de g     F .text	00000000000004cb              my_regex_init
0000000001373d4c g     O .bss	0000000000000004              key_LOCK_event_queue
00000000005f112a  w    F .text	000000000000003f              Lex_input_stream::yyUnget()
00000000007dc1ee  w    F .text	000000000000002b              Item_func_is_free_lock::~Item_func_is_free_lock()
0000000000981c8e g     F .text	0000000000000053              ha_heap::truncate()
00000000007e122e  w    F .text	0000000000000177              MBR::overlaps(MBR const*)
000000000077bbdc  w    F .text	000000000000000f              handler::was_semi_consistent_read()
0000000000606c6e  w    F .text	0000000000000038              Item_func::find_function_processor(unsigned char*)
00000000006101a8 g     F .text	000000000000009a              sys_var_pluginvar::real_value_ptr(THD*, enum_var_type)
00000000007bc8c2  w    F .text	0000000000000038              Item_func_to_days::Item_func_to_days(Item*)
0000000001386590 g     O .bss	0000000000000008              Create_func_issimple::s_singleton
0000000000888ffe  w    F .text	0000000000000056              sp_instr_stmt::~sp_instr_stmt()
0000000000817c5c  w    F .text	0000000000000046              Item_func_curtime_utc::~Item_func_curtime_utc()
0000000000603822 g     F .text	0000000000000179              st_select_lex::init_nested_join(THD*)
00000000007adbec  w    F .text	0000000000000048              agg_item_charsets_for_comparison(DTCollation&, char const*, Item**, unsigned int, int)
00000000006bd10e g     F .text	000000000000005f              make_date(st_date_time_format const*, st_mysql_time const*, String*)
00000000006f5e1c  w    F .text	00000000000000d1              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >::swap(I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >&)
000000000087e966  w    F .text	0000000000000041              Lock_db_routines_error_handler::~Lock_db_routines_error_handler()
00000000005a5b30 g     F .text	0000000000000023              Alter_table_prelocking_strategy::handle_routine(THD*, Query_tables_list*, Sroutine_hash_entry*, sp_head*, bool*)
00000000010781f8  w    O .data.rel.ro	0000000000000358              vtable for Item_empty_string
0000000000678530  w    F .text	0000000000000026              I_List<thread_info>::move_elements_to(I_List<thread_info>*)
00000000010f194c g     O .data	0000000000000004              builtin_myisammrg_plugin_interface_version
000000000074e57c g     F .text	00000000000000b9              Field_short::val_int()
00000000005f26e2 g     F .text	00000000000000ef              mysql_manager_submit(void (*)())
00000000007f1d1a  w    F .text	0000000000000040              SQL_CRYPT::reinit()
00000000007b6dae g     F .text	0000000000000097              Create_func_version::create(THD*)
00000000005ca185 g     F .text	0000000000000014              thd_get_trx_isolation
00000000007ab14a g     F .text	00000000000002f0              Item_func_regex::regcomp(bool)
00000000010b2588  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_or
00000000012b7680 g     O .data	0000000000000600              page018data
0000000000816696  w    F .text	0000000000000011              Item_func_sysdate_local::func_name() const
0000000000902a1d g     F .text	000000000000019d              base64_encode
000000000082d6a2  w    F .text	0000000000000042              Mutex_sentry::Mutex_sentry(st_mysql_mutex*)
00000000006cfe87 g     F .text	0000000000000146              partition_info_compare_column_values
00000000007bd15e  w    F .text	000000000000002d              Create_func_arg0::Create_func_arg0()
00000000007beabe  w    F .text	0000000000000041              Create_func_des_encrypt::~Create_func_des_encrypt()
00000000005b141c  w    F .text	0000000000000046              Field_iterator_view::~Field_iterator_view()
0000000000838aa2 g     F .text	0000000000000013              Format_description_log_event::do_shall_skip(Relay_log_info*)
00000000008a005d g     F .text	0000000000000267              search_categories(THD*, TABLE*, st_find_field*, SQL_SELECT*, List<String>*, short*)
00000000007dac2a  w    F .text	0000000000000011              Item_func_ceiling::func_name() const
00000000009564f5 g     F .text	0000000000000365              mi_records_in_range
000000000087333e  w    F .text	000000000000004a              TRP_RANGE::TRP_RANGE(SEL_ARG*, unsigned int)
0000000000755540 g     F .text	00000000000000d1              Field_date::val_int()
00000000005afd52  w    F .text	0000000000000040              Item_func_eq::Item_func_eq(Item*, Item*)
00000000005557f1 g     F .text	0000000000000895              mysqld_get_one_option
0000000000796292  w    F .text	0000000000000104              Field_blob::Field_blob(unsigned int, bool, char const*, charset_info_st*, bool)
0000000000558f1c  w    F .text	0000000000000027              my_decimal::my_decimal()
0000000000b83b14 g     F .text	00000000000001ea              my_longlong10_to_str_8bit
00000000005b10c6  w    F .text	0000000000000026              List_iterator<Item_func_match>::List_iterator(List<Item_func_match>&)
000000000076ff3e  w    F .text	00000000000000ac              Field::pack(unsigned char*, unsigned char const*)
00000000007da53c  w    F .text	0000000000000044              Item_func_connection_id::val_int()
000000000098b4ac g     F .text	0000000000000011              ha_myisammrg::bas_ext() const
0000000001395140 g     O .bss	0000000000000070              THR_LOCK_open
00000000005d08fa  w    F .text	000000000000001d              List_iterator<Alter_drop>::operator++(int)
00000000012cc5a0 g     O .data	00000000000000b0              my_charset_utf16_czech_uca_ci
00000000010eee50 g     O .data	0000000000000008              fatal_error_handler_hook
0000000000849194  w    F .text	0000000000000040              Stop_log_event::Stop_log_event(char const*, Format_description_log_event const*)
000000000088dada g     F .text	00000000000000d2              Geometry::append_points(String*, unsigned int, char const*, unsigned int) const
00000000008a9ce7 g     F .text	0000000000000206              partition_default_handling(TABLE*, partition_info*, bool, char const*)
00000000007bc4b0  w    F .text	0000000000000050              Item_func_spatial_decomp_n::Item_func_spatial_decomp_n(Item*, Item*, Item_func::Functype)
0000000000766352  w    F .text	000000000000004d              Field_date::reset()
00000000010eb310 g     O .data	0000000000000008              cant_connect_sqlstate
000000000098b3a5 g     F .text	0000000000000106              myrg_print_wrong_table
0000000000757792 g     F .text	00000000000000bd              Field_datetime::sort_string(unsigned char*, unsigned int)
0000000001069508  w    O .data.rel.ro	0000000000000038              vtable for DML_prelocking_strategy
0000000000889be0  w    F .text	000000000000001b              Dynamic_array<Item_splocal*>::~Dynamic_array()
000000000077be7e  w    F .text	000000000000000f              handler::max_supported_key_part_length() const
00000000007bea28  w    F .text	0000000000000041              Create_func_des_decrypt::~Create_func_des_decrypt()
00000000009663d4 g     F .text	000000000000009e              rtree_insert
0000000000659ca6  w    F .text	0000000000000033              Item_func_rollup_const::result_type() const
00000000007bb598  w    F .text	000000000000004a              Item_func_reverse::Item_func_reverse(Item*)
00000000007741b3 g     F .text	000000000000007d              ha_release_temporary_latches(THD*)
00000000005af1ec  w    F .text	0000000000000048              TABLE_SHARE::get_table_ref_type() const
000000000065ab78  w    F .text	000000000000003f              FT_SELECT::init()
00000000006d3170 g     F .text	00000000000004ad              partition_info::fix_parser_data(THD*)
00000000010b3bd8  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_avg
000000000065dc05 g     F .text	0000000000000277              mysqld_show_contributors(THD*)
0000000000764f22  w    F .text	000000000000000f              Field_str::size_of() const
000000000083012e  w    F .text	0000000000000022              THD::set_time_after_lock()
00000000005afeb4  w    F .text	0000000000000070              Query_tables_list::get_stmt_unsafe_flags() const
00000000008c1d6e  w    F .text	0000000000000011              Item_nodeset_to_const_comparator::func_name() const
00000000005fffba g     F .text	000000000000010d              check_one_table_access(THD*, unsigned long, TABLE_LIST*)
000000000057b2d4 g     F .text	000000000000001b              sp_cache::cleanup()
00000000010edb60 g     O .data	0000000000000008              opt_tc_log_size
000000000073dc42 g     F .text	0000000000000151              opt_flush_ok_packet
00000000007ba322  w    F .text	0000000000000038              Item_func_tan::Item_func_tan(Item*)
0000000000880aba g     F .text	000000000000002c              cmp_splocal_locations(Item_splocal* const*, Item_splocal* const*)
00000000007661ca  w    F .text	000000000000006a              Field_year::Field_year(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*)
00000000008f26ea g     F .text	000000000000009c              directory_file_name
00000000007b0058  w    F .text	0000000000000058              Item_cond::~Item_cond()
000000000095adcf g     F .text	00000000000003d5              _mi_rec_pos
0000000000799f10  w    F .text	0000000000000025              List<List<Item> >::push_front(List<Item>*)
0000000000556f70 g     F .text	00000000000000d2              fn_format_relative_to_data_home(char*, char const*, char const*, char const*)
00000000010eb2c0 g     O .data	0000000000000038              mysql_mandatory_plugins
000000000079953a  w    F .text	000000000000000f              Item_cache_int::result_as_longlong()
00000000007c291c  w    F .text	0000000000000026              Create_func_uncompressed_length::~Create_func_uncompressed_length()
00000000007af25e  w    F .text	000000000000000f              in_decimal::result_type()
000000000073bd68  w    F .text	0000000000000088              sp_instr_set::sp_instr_set(unsigned int, sp_pcontext*, unsigned int, Item*, enum_field_types, LEX*, bool)
00000000010ef460 g     O .data	0000000000000058              table_events_waits_history_long::m_share
00000000006eaa7d  w    F .text	0000000000000053              max_my_decimal(my_decimal*, int, int)
000000000136eff0 g     O .bss	0000000000000008              my_default_lc_messages
00000000005b0e6e  w    F .text	0000000000000026              List_iterator<Item>::List_iterator(List<Item>&)
000000000136e360 g     O .bss	0000000000000008              default_tz
00000000006eab1c  w    F .text	000000000000006b              check_result_and_overflow(unsigned int, int, my_decimal*)
000000000138bf50 g     O .bss	0000000000000008              my_defaults_group_suffix
00000000007c52aa g     F .text	000000000000016f              Item_func::count_decimal_length()
00000000007dd402  w    F .text	0000000000000046              Item_func_cos::~Item_func_cos()
0000000000781a82 g     F .text	00000000000000f6              Item_name_const::type() const
00000000007c58ec g     F .text	0000000000000026              Item_func_connection_id::fix_length_and_dec()
00000000010e2dc0 g     O .data	0000000000000140              interval_type_to_name
00000000007dde10 g     F .text	00000000000000af              Item_geometry_func::tmp_table_field(TABLE*)
0000000000606df2  w    F .text	000000000000000f              Item_bool_func::decimal_precision() const
00000000005f1ef4  w    F .text	0000000000000026              List_iterator<Create_field>::List_iterator(List<Create_field>&)
00000000010e2fd8 g     O .data	0000000000000008              my_tz_UTC
000000000057262a g     F .text	000000000000045b              apply_event_and_update_pos(Log_event*, THD*, Relay_log_info*)
00000000005689f5 g     F .text	0000000000000032              get_table_key
000000000065a84c  w    F .text	0000000000000048              THD::read_first_successful_insert_id_in_prev_stmt()
00000000005e93aa  w    F .text	000000000000002b              Delayed_insert::~Delayed_insert()
000000000090e1fa  w    F .text	0000000000000041              table_events_waits_common::~table_events_waits_common()
0000000000606b5c  w    F .text	00000000000000f3              Item_func::has_timestamp_args()
0000000000b5f3fe g     F .text	000000000000009f              ha_partition::ha_partition(handlerton*, TABLE_SHARE*)
0000000000658ba1  w    F .text	000000000000005a              mark_as_null_row(TABLE*)
0000000000981bea g     F .text	0000000000000029              ha_heap::extra(ha_extra_function)
0000000000889d88  w    F .text	0000000000000026              List_iterator_fast<sp_head::bp_t>::List_iterator_fast(List<sp_head::bp_t>&)
0000000000919ec6 g     F .text	0000000000000f37              table2myisam(TABLE*, st_mi_keydef**, st_columndef**, unsigned int*)
00000000012cca20 g     O .data	00000000000000b0              my_charset_utf16_persian_uca_ci
000000000075cc94 g     F .text	00000000000001b4              Field_geom::store(char const*, unsigned int, charset_info_st*)
000000000064fc8a g     F .text	00000000000003ca              setup_group(THD*, Item**, TABLE_LIST*, List<Item>&, List<Item>&, st_order*, bool*)
000000000079ba2e  w    F .text	000000000000001a              List<Cached_item>::head()
000000000073bb20  w    F .text	000000000000005c              sp_head::last_instruction()
00000000008e3e61 g     F .text	0000000000000013              multi_keycache_free
00000000008f1715 g     F .text	00000000000001d7              my_getwd
0000000001095f48  w    O .data.rel.ro	0000000000000398              vtable for Item_func_exp
00000000008493a6  w    F .text	0000000000000014              Append_block_log_event::get_data_size()
000000000079ba62  w    F .text	000000000000001a              List<Cached_item>::pop()
00000000006b8cc6 g     F .text	00000000000000d1              Field_iterator_table_ref::next()
00000000007bfb8e  w    F .text	000000000000002d              Create_func_inet_aton::Create_func_inet_aton()
0000000000b95341 g     F .text	000000000000020a              do_mini_left_shift
0000000001077e98  w    O .data.rel.ro	0000000000000360              vtable for Item_int_with_ref
00000000010c4360  w    O .data.rel.ro	0000000000000050              vtable for analyse
00000000008c2722  w    F .text	0000000000000058              Item_xpath_cast_bool::~Item_xpath_cast_bool()
00000000006bb416  w    F .text	000000000000001d              I_P_List_iterator<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::rewind()
00000000008518b4 g     F .text	000000000000004b              Write_rows_log_event_old::Write_rows_log_event_old(char const*, unsigned int, Format_description_log_event const*)
00000000009854a3 g     F .text	0000000000000015              hp_rb_key_length
00000000006cafdc  w    F .text	0000000000000052              Event_creation_ctx::~Event_creation_ctx()
0000000000876ee8  w    F .text	0000000000000022              Item_proc_int::set(double)
00000000013707dc g     O .bss	0000000000000004              key_LOCK_error_messages
00000000007f4072  w    F .text	0000000000000046              Item_func_sha2::~Item_func_sha2()
00000000007aea38  w    F .text	000000000000002c              Item_func_opt_neg::neg_transformer(THD*)
000000000075c59e g     F .text	00000000000000f6              Field_blob::sql_type(String&) const
00000000007b693e g     F .text	0000000000000050              Create_func_to_seconds::create(THD*, Item*)
000000000055929e  w    F .text	000000000000002d              Gt_creator::Gt_creator()
00000000006056d9 g     F .text	0000000000000144              insert_precheck(THD*, TABLE_LIST*)
0000000000872972  w    F .text	0000000000000085              SEL_ARG::copy_max(SEL_ARG*)
00000000008728ee  w    F .text	0000000000000083              SEL_ARG::copy_min(SEL_ARG*)
00000000009111a2 g     F .text	0000000000000097              table_setup_consumers::rnd_next()
00000000007ba202  w    F .text	0000000000000038              Item_func_asin::Item_func_asin(Item*)
0000000000770096 g     F .text	000000000000063c              handle_fatal_signal
0000000000565330  w    F .text	0000000000000052              Field::is_null(long long)
0000000000679094 g     F .text	00000000000000a9              String::set_int(long long, bool, charset_info_st*)
00000000007108a3 g     F .text	00000000000000e5              case_stmt_action_then(LEX*)
00000000007b9a8a  w    F .text	0000000000000040              Item_sum_udf_str::Item_sum_udf_str(st_udf_func*, List<Item>&)
00000000006ef62c g     F .text	000000000000023a              Binlog_relay_IO_delegate::thread_start(THD*, Master_info*)
0000000000566ee4  w    F .text	0000000000000013              Item::set_no_const_sub(unsigned char*)
00000000007bb242  w    F .text	0000000000000063              Item_str_func::Item_str_func(Item*, Item*, Item*, Item*, Item*)
0000000000818070  w    F .text	0000000000000046              Item_func_yearweek::~Item_func_yearweek()
00000000008b01e3 g     F .text	00000000000001c9              get_partition_id_range_col(partition_info*, unsigned int*, long long*)
00000000007b1400  w    F .text	0000000000000046              Item_func_gt::~Item_func_gt()
000000000106bf20  w    O .data.rel.ro	0000000000000038              vtable for Time_zone_db
00000000007aecdc  w    F .text	0000000000000014              Item_func_if::field_type() const
0000000001376d68 g     O .bss	0000000000000004              have_partitioning
00000000007ba806  w    F .text	000000000000002b              Item_func_length::~Item_func_length()
00000000006cb578 g     F .text	00000000000007ce              Events::reconstruct_interval_expression(String*, interval_type, long long)
000000000075cc4e g     F .text	0000000000000046              Field_geom::store_decimal(my_decimal const*)
0000000000566816  w    F .text	0000000000000013              Item::val_nodeset(String*)
00000000005b5e98 g     F .text	0000000000000149              Query_cache::invalidate(st_changed_table_list*)
0000000000873b92  w    F .text	000000000000002e              List<QUICK_RANGE>::List(List<QUICK_RANGE> const&, st_mem_root*)
00000000010c4590  w    O .data.rel.ro	0000000000000060              vtable for field_info
0000000000766a5a  w    F .text	0000000000000037              Field_string::key_type() const
000000000098d9e6 g     F .text	00000000000000a1              ha_myisammrg::index_next(unsigned char*)
000000000138e36a g     O .bss	0000000000000001              myisam_single_user
00000000010c10f8  w    O .data.rel.ro	0000000000000098              vtable for Update_rows_log_event
00000000007bbf9c  w    F .text	0000000000000050              Item_func_export_set::Item_func_export_set(Item*, Item*, Item*, Item*)
000000000079fab6 g     F .text	0000000000000147              Arg_comparator::compare_real_fixed()
000000000088d2b0 g     F .text	00000000000000bd              Geometry::construct(Geometry_buffer*, char const*, unsigned int)
00000000010efe39 g     O .data	0000000000000001              flag_file_summary_by_instance
00000000007cefc8 g     F .text	0000000000000dc8              udf_handler::fix_fields(THD*, Item_result_field*, unsigned int, Item**)
0000000000ba5cda g     F .text	0000000000000011              vio_end
0000000000918735 g     F .text	00000000000000f3              ft_boolean_check_syntax_string
00000000005ce540  w    F .text	000000000000002a              xid_t::key_length()
000000000070e490  w    F .text	0000000000000042              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::session_save_default(THD*, set_var*)
00000000005aeddc  w    F .text	000000000000000b              I_P_List_null_counter::inc()
00000000007975b0  w    F .text	0000000000000032              Item_float::neg()
0000000000889f74 g     F .text	000000000000009e              sp_cond_check(st_mysql_lex_string*)
00000000007eafc0 g     F .text	0000000000000096              Item_func_database::val_str(String*)
00000000008cdff8 g     F .text	000000000000009e              get_dynamic
000000000061844a g     F .text	0000000000000048              Select_fetch_protocol_binary::Select_fetch_protocol_binary(THD*)
00000000006bb15a  w    F .text	0000000000000026              List<String>::disjoin(List<String>*)
0000000000000000       F *UND*	0000000000000000              __errno_location@@GLIBC_2.2.5
00000000010ca348  w    O .data.rel.ro	0000000000000048              vtable for table_events_waits_summary_by_thread_by_event_name
00000000006bb2a4  w    F .text	000000000000001b              List_iterator<String>::rewind()
000000000084d8f8 g     F .text	00000000000000da              Write_rows_log_event_old::do_before_row_operations(TABLE*)
000000000070e40a  w    F .text	000000000000003c              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::session_update(THD*, set_var*)
00000000006b502a g     F .text	00000000000007b4              Table_check_intact::check(TABLE*, st_table_field_def const*)
00000000006a1b82 g     F .text	000000000000011d              multi_update::multi_update(TABLE_LIST*, TABLE_LIST*, List<Item>*, List<Item>*, enum_duplicates, bool)
0000000000737c98  w    F .text	0000000000000047              Item_sum_count::Item_sum_count(Item*)
0000000000b8406d g     F .text	000000000000020f              my_like_range_simple
00000000007b21c2 g     F .text	000000000000007e              Create_native_func::create_func(THD*, st_mysql_lex_string, List<Item>*)
000000000067892e  w    F .text	0000000000000058              List<char>::delete_elements()
00000000010bf598  w    O .data.rel.ro	0000000000000398              vtable for Item_func_month
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
00000000007b9f08  w    F .text	0000000000000038              Item_func_abs::Item_func_abs(Item*)
0000000000b6b796 g     F .text	000000000000008e              ha_partition::return_top_record(unsigned char*)
00000000007b982e  w    F .text	000000000000007b              Item_sum::Item_sum()
00000000005afaba  w    F .text	00000000000000b3              Item_func::Item_func(Item*, Item*)
0000000000559786  w    F .text	000000000000001a              I_List<THD>::get()
0000000000808710  w    F .text	000000000000000f              Item_sum::keep_field_type() const
00000000013877a0 g     O .bss	0000000000000008              binlog_hton
00000000006f9fbe  w    F .text	0000000000000046              Optimize_table_statement::~Optimize_table_statement()
000000000106c4e0  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>
00000000007b5248 g     F .text	0000000000000050              Create_func_log2::create(THD*, Item*)
00000000006fa030  w    F .text	0000000000000046              Repair_table_statement::~Repair_table_statement()
00000000005c1f1c g     F .text	000000000000005f              THD::raise_error(unsigned int)
000000000070da3e  w    F .text	000000000000003c              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::session_update(THD*, set_var*)
000000000077b8ea  w    F .text	000000000000002e              handler::index_type(unsigned int)
0000000000756e68 g     F .text	0000000000000023              Field_datetime::val_real()
0000000000818362  w    F .text	000000000000002b              Item_func_monthname::~Item_func_monthname()
000000000079a144  w    F .text	000000000000002b              Item_cache_row::~Item_cache_row()
00000000007d9f18  w    F .text	0000000000000041              Item::fix_length_and_charset(unsigned int, charset_info_st*)
00000000006d6744 g     F .text	000000000000050f              table_def::create_conversion_table(THD*, Relay_log_info*, TABLE*) const
0000000000567166  w    F .text	000000000000003d              Item_num::Item_num()
00000000006edce3 g     F .text	000000000000020c              delegates_init()
00000000013940d0 g     O .bss	0000000000000018              plugin_list
0000000001207ee0 g     O .data	0000000000000101              ctype_latin1_german1_ci
000000000091ed6a g     F .text	000000000000003d              ha_myisam::delete_row(unsigned char const*)
0000000000777ab2 g     F .text	00000000000000e6              ha_enable_transaction(THD*, bool)
0000000000985545 g     F .text	00000000000000fa              hp_rb_var_key_length
00000000008175ac  w    F .text	000000000000002b              Item_func_add_time::~Item_func_add_time()
000000000080a184  w    F .text	000000000000011c              Unique::unique_add(void*)
00000000007f24d2  w    F .text	0000000000000038              Item_func_inet_ntoa::fix_length_and_dec()
00000000008f3388 g     F .text	000000000000005c              my_once_strdup
000000000089ac98  w    F .text	0000000000000046              field_longlong::~field_longlong()
0000000000798f6a  w    F .text	0000000000000014              Item_insert_value::used_tables() const
0000000000624802 g     F .text	0000000000000110              kill_zombie_dump_threads(unsigned int)
0000000000906907 g     F .text	0000000000000025              cleanup_file_hash()
0000000000000000       F *UND*	0000000000000000              symlink@@GLIBC_2.2.5
00000000007cd51e g     F .text	00000000000001ce              Item_func_min_max::val_int()
000000000076e32b g     F .text	000000000000041c              merge_many_buff(st_sort_param*, unsigned char*, st_buffpek*, unsigned int*, st_io_cache*)
00000000007999b2  w    F .text	000000000000000f              Item_cache_datetime::result_type() const
00000000006f53f6  w    F .text	000000000000005c              Deadlock_detection_visitor::Deadlock_detection_visitor(MDL_context*)
00000000008cb470  w    F .text	0000000000000046              Alter_table_truncate_partition_statement::~Alter_table_truncate_partition_statement()
00000000005cf904  w    F .text	000000000000001b              st_xid_state::st_xid_state()
0000000000838784 g     F .text	000000000000016a              Format_description_log_event::write(st_io_cache*)
000000000088c5c2 g     F .text	0000000000000022              sp_rcontext::get_item(unsigned int)
00000000007c2970  w    F .text	0000000000000041              Create_func_unhex::~Create_func_unhex()
00000000013863c0 g     O .bss	0000000000000008              Create_func_concat::s_singleton
000000000061c0f3  w    F .text	000000000000003b              is_param_null(unsigned char const*, unsigned long)
0000000000ba6814 g     F .text	0000000000000010              vio_fd
0000000000799e20  w    F .text	000000000000001b              List_iterator_fast<Item_field>::List_iterator_fast()
00000000006f0722  w    F .text	00000000000000f2              Delegate::remove_observer(void*, st_plugin_int*)
000000000074e8dc g     F .text	0000000000000061              Field_short::sort_string(unsigned char*, unsigned int)
0000000000b5dda0  w    F .text	00000000000000c7              ha_tina::~ha_tina()
00000000006c7c40 g     F .text	0000000000000026              Event_queue_element::~Event_queue_element()
000000000061bf62  w    F .text	000000000000001b              Ed_result_set::~Ed_result_set()
0000000000659692  w    F .text	0000000000000013              Item_null_result::check_partition_func_processor(unsigned char*)
000000000077bf92  w    F .text	0000000000000016              handler::check_if_incompatible_data(st_ha_create_information*, unsigned int)
00000000007bdd16  w    F .text	000000000000002d              Create_func_centroid::Create_func_centroid()
00000000006df4a6 g     F .text	000000000000015d              Relay_log_info::cleanup_context(THD*, bool)
00000000007dc7a8  w    F .text	0000000000000058              Item_func_get_lock::~Item_func_get_lock()
000000000106f660  w    O .data.rel.ro	0000000000000298              vtable for Field_set
00000000008f2e56 g     F .text	000000000000005c              my_strdup
0000000000883fbe g     F .text	00000000000001e9              sp_head::restore_lex(THD*)
0000000000816eb4  w    F .text	0000000000000011              Item_func_makedate::charset_for_protocol() const
00000000010c9b58  w    O .data.rel.ro	0000000000000028              vtable for Truncate_statement
000000000057b19f g     F .text	000000000000000d              sp_cache_version()
00000000008da21b g     F .text	00000000000000b0              my_b_safe_write
000000000090976b g     F .text	0000000000000051              find_thread_class(unsigned int)
000000000136efc8 g     O .bss	0000000000000008              files_charset_info
00000000007992e6  w    F .text	000000000000000f              Item_cache::type() const
000000000065a7b4  w    F .text	000000000000001e              st_select_lex::set_non_agg_field_used(bool)
00000000013742e0 g     O .bss	0000000000000060              my_locale_et_EE
000000000136fb80 g     O .bss	0000000000000008              file_parser_dummy_hook
000000000082ca90  w    F .text	000000000000001d              TC_LOG::TC_LOG()
00000000007e1ad4  w    F .text	0000000000000011              Item_func_dimension::func_name() const
00000000006760f5 g     F .text	000000000000041d              mysql_schema_table(THD*, LEX*, TABLE_LIST*)
0000000001386570 g     O .bss	0000000000000008              Create_func_is_used_lock::s_singleton
0000000000766e1e  w    F .text	0000000000000037              Field_blob::key_type() const
0000000000913454 g     F .text	0000000000000021              table_threads::reset_position()
0000000000831f38 g     F .text	000000000000002d              Log_event::pack_info(Protocol*)
000000000056b244  w    F .text	000000000000001d              PolyLock::PolyLock()
0000000000788bb2 g     F .text	00000000000000bf              Item_ref_null_helper::val_bool()
0000000000818680  w    F .text	000000000000002b              Item_func_period_add::~Item_func_period_add()
00000000006caf74  w    F .text	0000000000000041              Event_job_data::~Event_job_data()
000000000077ad2a g     F .text	00000000000000fa              handler::ha_update_row(unsigned char const*, unsigned char*)
000000000059b204  w    F .text	000000000000001a              List<LEX_COLUMN>::head_ref()
0000000000766a92  w    F .text	000000000000000f              Field_string::zero_pack() const
0000000001081538  w    O .data.rel.ro	00000000000003c0              vtable for Item_func_coalesce
00000000005e8cee  w    F .text	000000000000000f              select_create::prepare2()
00000000005ceb74  w    F .text	000000000000001b              List<Alter_column>::~List()
0000000000b6abf2 g     F .text	0000000000000238              ha_partition::handle_unordered_next(unsigned char*, bool)
0000000000b6864a g     F .text	0000000000000139              ha_partition::guess_bulk_insert_rows()
0000000000800676 g     F .text	00000000000000c0              Item_sum_sum::val_real()
000000000056b262  w    F .text	000000000000003d              PolyLock_mutex::PolyLock_mutex(st_mysql_mutex*)
000000000059b1c4  w    F .text	0000000000000025              List<LEX_COLUMN>::push_front(LEX_COLUMN*)
00000000007f1cea  w    F .text	000000000000001e              Item_func_encrypt::fix_length_and_dec()
00000000007b5dac g     F .text	000000000000007e              Create_func_release_lock::create(THD*, Item*)
000000000059af9c  w    F .text	000000000000001a              List_iterator<LEX_COLUMN>::ref()
000000000088b0c0  w    F .text	0000000000000025              List<sp_pcontext>::push_back(sp_pcontext*)
00000000009131f2  w    F .text	0000000000000041              table_mutex_instances::~table_mutex_instances()
000000000138cc90 g     O .bss	0000000000000008              file_handle_array
000000000089f08a g     F .text	0000000000000252              multi_delete::send_eof()
00000000007bce9e  w    F .text	000000000000004b              Item_func_str_to_date::Item_func_str_to_date(Item*, Item*)
000000000138cb78 g     O .bss	0000000000000001              thr_lock_inited
0000000001386750 g     O .bss	0000000000000008              Create_func_strcmp::s_singleton
000000000091f132 g     F .text	000000000000009d              ha_myisam::index_first(unsigned char*)
0000000001370744 g     O .bss	0000000000000004              key_LOCK_sync
000000000098de0a g     F .text	00000000000000b7              ha_myisammrg::rnd_pos(unsigned char*, unsigned char*)
0000000000608088  w    F .text	000000000000001a              List<TABLE_LIST>::pop()
000000000070a6a4  w    F .text	0000000000000026              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::~Sys_var_unsigned()
00000000005845be g     F .text	0000000000000056              GRANT_TABLE::~GRANT_TABLE()
00000000005d1b70  w    F .text	0000000000000046              select_send::~select_send()
00000000007f6b6a g     F .text	000000000000002f              Item_in_subselect::val_decimal(my_decimal*)
00000000007c113c  w    F .text	000000000000002d              Create_func_ord::Create_func_ord()
00000000007681de  w    F .text	0000000000000046              Field_timestamp::~Field_timestamp()
0000000000794ef2 g     F .text	0000000000000795              Item_type_holder::join_types(THD*, Item*)
00000000008da4d7 g     F .text	0000000000000451              my_b_flush_io_cache
00000000010efe48 g     O .data	0000000000000008              ft_max_word_len
000000000078b96a g     F .text	00000000000001e7              Item::check_well_formed_result(String*, bool, bool)
0000000000796f7a  w    F .text	0000000000000019              Item_field::tmp_table_field(TABLE*)
0000000000674034 g     F .text	0000000000000224              fill_variables(THD*, TABLE_LIST*, Item*)
00000000009926b8 g     F .text	000000000000016f              myrg_extra
00000000007f21d2  w    F .text	0000000000000011              Item_func_format::func_name() const
0000000000b6530c g     F .text	0000000000000543              ha_partition::read_par_file(char const*)
000000000080a604  w    F .text	000000000000002b              Item_sum_and::~Item_sum_and()
00000000006f0af4  w    F .text	000000000000002d              List<Observer_info>::push_back(Observer_info*, st_mem_root*)
00000000007bd34e  w    F .text	0000000000000041              Create_func_arg3::~Create_func_arg3()
00000000005e8784  w    F .text	000000000000001d              TABLEOP_HOOKS::TABLEOP_HOOKS()
000000000065c6ba  w    F .text	000000000000001b              List_iterator<Item>::rewind()
00000000007bd9c0  w    F .text	0000000000000041              Create_func_atan::~Create_func_atan()
00000000007bc96a  w    F .text	0000000000000038              Item_func_dayofyear::Item_func_dayofyear(Item*)
00000000007fc970  w    F .text	0000000000000046              subselect_union_engine::~subselect_union_engine()
00000000005b0540  w    F .text	0000000000000012              File_parser::type()
000000000055ba82 g     F .text	00000000000000c4              my_net_set_read_timeout
000000000087f0bd g     F .text	00000000000000e0              sp_get_flags_for_command(LEX*)
00000000008723fa  w    F .text	00000000000000f5              SEL_ARG::all_same(SEL_ARG const*) const
000000000055930e  w    F .text	0000000000000026              Gt_creator::~Gt_creator()
0000000000b6d4dc g     F .text	00000000000001ac              ha_partition::late_extra_cache(unsigned int)
00000000005f12ae  w    F .text	0000000000000012              Lex_input_stream::get_end_of_query()
00000000007dbc76  w    F .text	0000000000000011              Item_func_uuid_short::func_name() const
0000000000893466  w    F .text	0000000000000013              Geometry::geom_length(double*) const
00000000007672d6  w    F .text	0000000000000027              Field_enum::row_pack_length() const
000000000080e77c g     F .text	00000000000000d2              Item_func_year::val_int_endpoint(bool, bool*)
000000000074d4c4 g     F .text	0000000000000231              Field_new_decimal::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
000000000089e416 g     F .text	000000000000002b              multi_delete::~multi_delete()
00000000007f3dc4  w    F .text	000000000000002b              Item_func_concat_ws::~Item_func_concat_ws()
000000000057a0ec  w    F .text	0000000000000012              MYSQL_BIN_LOG::get_log_lock()
000000000078a558 g     F .text	0000000000000a3f              Item_field::fix_fields(THD*, Item**)
0000000001096678  w    O .data.rel.ro	0000000000000398              vtable for Item_func_log2
00000000012b3680 g     O .data	0000000000000600              page00Ddata
00000000007f3f8e  w    F .text	0000000000000046              Item_func_aes_decrypt::~Item_func_aes_decrypt()
00000000007e23fe  w    F .text	0000000000000046              Item_func_spatial_decomp_n::~Item_func_spatial_decomp_n()
0000000000889158  w    F .text	000000000000002b              sp_instr_set_trigger_field::~sp_instr_set_trigger_field()
0000000000765828  w    F .text	000000000000007a              Field_long::Field_long(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, bool, bool)
0000000000798c88  w    F .text	0000000000000038              Item_copy_float::Item_copy_float(Item*)
0000000000873020  w    F .text	000000000000005d              SEL_TREE::SEL_TREE(SEL_TREE::Type)
0000000000566f4e  w    F .text	0000000000000016              Item::this_item_addr(THD*, Item**)
000000000081bc68 g     F .text	0000000000000019              Log_to_csv_event_handler::cleanup()
000000000090950f g     F .text	000000000000005b              find_cond_class(unsigned int)
0000000000b968ee g     F .text	000000000000005d              longlong2decimal
0000000000652ec2 g     F .text	00000000000003a1              JOIN::rollup_init()
0000000000599c80  w    F .text	00000000000000f0              ACL_PROXY_USER::check_validity(bool)
000000000081838e  w    F .text	0000000000000046              Item_func_month::~Item_func_month()
00000000007e2360  w    F .text	000000000000002b              Item_func_spatial_collection::~Item_func_spatial_collection()
00000000007bf774  w    F .text	000000000000002d              Create_func_geometryn::Create_func_geometryn()
00000000007bffa8  w    F .text	000000000000002d              Create_func_isempty::Create_func_isempty()
00000000008577ae g     F .text	0000000000000095              QUICK_INDEX_MERGE_SELECT::push_quick_back(QUICK_RANGE_SELECT*)
000000000073d48d g     F .text	000000000000028c              cli_safe_read
0000000000000000       F *UND*	0000000000000000              getservbyname@@GLIBC_2.2.5
00000000008fe93d g     F .text	000000000000017a              thr_lock_merge_status
0000000000798874  w    F .text	0000000000000130              Item_copy::Item_copy(Item*)
00000000007641b2  w    F .text	0000000000000025              Field::cast_to_int_type() const
00000000005ca170 g     F .text	0000000000000015              thd_get_thread_id
0000000001268280 g     O .data	00000000000000d8              my_charset_8bit_handler
00000000007b70e8 g     F .text	0000000000000168              Create_func_year_week::create_native(THD*, st_mysql_lex_string, List<Item>*)
0000000000871be0  w    F .text	0000000000000012              Unique::get_max_in_memory_size() const
0000000000809ca6  w    F .text	0000000000000040              Item_sum_udf_str::Item_sum_udf_str(THD*, Item_sum_udf_str*)
000000000075e55e g     F .text	00000000000001e5              Field_enum::pack(unsigned char*, unsigned char const*, unsigned int, bool)
000000000079d3ac g     F .text	000000000000087a              Arg_comparator::set_compare_func(Item_result_field*, Item_result)
00000000012107c0 g     O .data	0000000000000100              to_upper_macroman_general_ci
000000000091eda8 g     F .text	00000000000000be              ha_myisam::index_read_map(unsigned char*, unsigned char const*, unsigned long, ha_rkey_function)
00000000007bd63c  w    F .text	0000000000000041              Create_func_aes_encrypt::~Create_func_aes_encrypt()
0000000000905206 g     F .text	00000000000000ec              ha_perfschema::delete_all_rows()
0000000001395690 g     O .bss	0000000000000004              mi_key_thread_find_all_keys
0000000000873f7e  w    F .text	000000000000001d              List_iterator<SEL_IMERGE>::operator++(int)
000000000061bbf6 g     F .text	0000000000000013              Protocol_local::send_out_parameters(List<Item_param>*)
000000000089a862  w    F .text	0000000000000224              field_ulonglong::std(String*, unsigned long long)
0000000000559a60  w    F .text	000000000000001b              I_List<Statement>::I_List()
0000000000000000       F *UND*	0000000000000000              syscall@@GLIBC_2.2.5
000000000056a3dd g     F .text	0000000000000146              enumerate_sys_vars(THD*, bool, enum_var_type)
0000000001212140 g     O .data	0000000000000200              to_uni_macce_bin
00000000007ee690 g     F .text	00000000000000b8              Item_func_set_collation::val_str(String*)
00000000013708c8 g     O .bss	0000000000000004              key_file_log_event_data
000000000080e036 g     F .text	0000000000000092              Item_func_quarter::val_int()
000000000106c028  w    O .data.rel.ro	0000000000000028              vtable for Event_job_data
000000000083dd06 g     F .text	0000000000000025              User_var_log_event::do_shall_skip(Relay_log_info*)
00000000007c25be  w    F .text	000000000000002d              Create_func_to_days::Create_func_to_days()
00000000008f15d0 g     F .text	000000000000005a              my_time
00000000007f19ca  w    F .text	0000000000000011              Item_func_replace::func_name() const
0000000000784d5a g     F .text	00000000000000b1              Item_decimal::Item_decimal(my_decimal*)
00000000005b04fc  w    F .text	0000000000000043              No_such_table_error_handler::No_such_table_error_handler()
00000000008160fc  w    F .text	0000000000000011              Item_date::charset_for_protocol() const
0000000000000000       F *UND*	0000000000000000              deflateInit2_
000000000059964e  w    F .text	000000000000000b              READ_RECORD::READ_RECORD()
000000000089347a  w    F .text	0000000000000017              Geometry::area(double*, char const**) const
00000000005f1ece  w    F .text	0000000000000025              List<Index_hint>::push_front(Index_hint*)
00000000008734ec  w    F .text	0000000000000046              TRP_ROR_INTERSECT::~TRP_ROR_INTERSECT()
000000000055e22c g     F .text	000000000000051d              sql_create_definition_file(st_mysql_lex_string const*, st_mysql_lex_string const*, st_mysql_lex_string const*, unsigned char*, File_option*)
00000000008163aa  w    F .text	0000000000000011              Item_func_curtime_local::func_name() const
0000000000b77403 g     F .text	000000000000009b              _db_set_
00000000010eee30 g     O .data	0000000000000008              my_time_to_wait_for_lock
0000000000766704  w    F .text	000000000000000f              Field_time::can_be_compared_as_longlong() const
0000000000791fda g     F .text	0000000000000074              Item_trigger_field::print(String*, enum_query_type)
0000000000566f1e  w    F .text	0000000000000013              Item::find_function_processor(unsigned char*)
00000000007c2e88  w    F .text	000000000000002d              Create_func_xml_extractvalue::Create_func_xml_extractvalue()
00000000006f5472  w    F .text	0000000000000023              MDL_lock::Ticket_list::Ticket_list()
0000000000b62424 g     F .text	0000000000000f08              ha_partition::change_partitions(st_ha_create_information*, char const*, unsigned long long*, unsigned long long*, unsigned char const*, unsigned long)
00000000008b7e78 g     F .text	0000000000000282              make_used_partitions_str(partition_info*, String*)
000000000109bb10  w    O .data.rel.ro	0000000000000398              vtable for Item_func_glength
00000000007e5822 g     F .text	0000000000000683              Item_func_des_encrypt::val_str(String*)
000000000078e82c g     F .text	000000000000008c              Item::cache_const_expr_transformer(unsigned char*)
0000000000784c08 g     F .text	00000000000000c3              Item_decimal::Item_decimal(double, int, int)
0000000000709fa6  w    F .text	0000000000000041              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::~Sys_var_unsigned()
0000000000000000       O *UND*	0000000000000000              stdout@@GLIBC_2.2.5
00000000005efed0 g     F .text	0000000000000284              st_select_lex::fix_prepare_information(THD*, Item**, Item**)
000000000078183c g     F .text	0000000000000080              Item_name_const::val_decimal(my_decimal*)
000000000090debe  w    F .text	000000000000003d              PFS_engine_table::PFS_engine_table(PFS_engine_table_share const*, void*)
000000000084f004 g     F .text	0000000000000f02              Old_rows_log_event::do_apply_event(Relay_log_info const*)
000000000070e71c  w    F .text	0000000000000041              Sys_var_struct::~Sys_var_struct()
000000000090846c  w    F .text	000000000000005b              pfs_lock::allocated_to_free()
0000000000000000       F *UND*	0000000000000000              tzset@@GLIBC_2.2.5
00000000008b9708 g     F .text	00000000000000d8              get_next_partition_id_list(st_partition_iter*)
00000000007bde70  w    F .text	0000000000000041              Create_func_coercibility::~Create_func_coercibility()
00000000005c551a g     F .text	000000000000002b              select_export::~select_export()
00000000006c1d52  w    F .text	0000000000000046              Time_zone_utc::~Time_zone_utc()
00000000008cd930 g     F .text	0000000000000152              _my_b_net_read
00000000007e1f30  w    F .text	0000000000000058              Item_func_numpoints::~Item_func_numpoints()
00000000005ce620  w    F .text	000000000000001b              List<String>::~List()
00000000008d3533 g     F .text	000000000000000d              get_global_errmsgs
00000000009913ec g     F .text	00000000000000e4              myrg_rnext_same
00000000007654ac  w    F .text	000000000000000f              Field_tiny::max_display_length()
00000000007c080a  w    F .text	0000000000000041              Create_func_log10::~Create_func_log10()
0000000000957dde g     F .text	000000000000040d              mi_rnext_same
0000000000709042  w    F .text	0000000000000034              Sys_var_mybool::global_update(THD*, set_var*)
00000000010efb20 g     O .data	0000000000000058              table_cond_instances::m_share
00000000005cafa1 g     F .text	00000000000000db              xid_cache_insert(st_xid_state*)
0000000000710988 g     F .text	000000000000006c              case_stmt_action_end_case(LEX*, bool)
000000000070cf1c  w    F .text	0000000000000013              Sys_var_tx_isolation::make_symbolic(void (*)(void*, unsigned long, char const*))
0000000000797498  w    F .text	000000000000009f              Item_float::val_int()
00000000007840bc g     F .text	00000000000000a3              Item_field::get_time(st_mysql_time*)
00000000012cd180 g     O .data	00000000000000d8              my_charset_utf16_handler
000000000075c23e g     F .text	0000000000000075              Field_blob::key_cmp(unsigned char const*, unsigned char const*)
00000000007eb9fa g     F .text	0000000000000118              Item_func_format::fix_length_and_dec()
00000000013708a8 g     O .bss	0000000000000004              key_file_des_key_file
0000000000738d50  w    F .text	000000000000005c              Item_func_truth::Item_func_truth(Item*, bool, bool)
000000000069876a  w    F .text	0000000000000012              Deprecated_trigger_syntax_handler::get_error_message()
000000000073b55e  w    F .text	0000000000000057              Table_ident::Table_ident(st_mysql_lex_string)
0000000000766b7e  w    F .text	0000000000000070              Field_string::pack_length_from_metadata(unsigned int)
0000000000564dbe  w    F .text	000000000000001a              Sql_alloc::operator new(unsigned long)
000000000057a6ec  w    F .text	0000000000000042              Relay_log_info::is_deferred_event(Log_event*)
00000000005e8da4  w    F .text	0000000000000066              delayed_row::~delayed_row()
000000000059b336  w    F .text	0000000000000026              List<st_lex_user>::List(List<st_lex_user> const&)
000000000067b542 g     F .text	0000000000000204              convert_to_printable(char*, unsigned long, char const*, unsigned long, charset_info_st*, unsigned long)
00000000007b4dbe g     F .text	0000000000000058              Create_func_like_range_min::create(THD*, Item*, Item*)
0000000000782ebc g     F .text	00000000000000f8              Item_field::Item_field(Field*)
00000000005d7cd5 g     F .text	000000000000003d              mysql_derived_cleanup(THD*, LEX*, TABLE_LIST*)
00000000007e158e  w    F .text	000000000000002b              Item_geometry_func::~Item_geometry_func()
00000000007e11a6  w    F .text	0000000000000088              MBR::dimension() const
00000000008c15aa  w    F .text	000000000000005d              Item_xpath_cast_bool::Item_xpath_cast_bool(Item*, String*)
000000000094fc87 g     F .text	0000000000000058              mi_uniquedef_read
00000000007dc8f6  w    F .text	000000000000002b              Item_func_udf_str::~Item_func_udf_str()
000000000088770e g     F .text	0000000000000135              sp_instr_copen::execute(THD*, unsigned int*)
00000000007bd0c8  w    F .text	000000000000002d              Create_native_func::Create_native_func()
00000000009010ca g     F .text	00000000000000c3              tree_search_edge
000000000084948c  w    F .text	0000000000000012              Delete_file_log_event::get_db()
00000000007e0c16  w    F .text	0000000000000034              String::q_append(char)
00000000012afe80 g     O .data	0000000000000800              page003data
00000000008c25ba  w    F .text	0000000000000058              Item_func_xpath_position::~Item_func_xpath_position()
00000000007c1d22  w    F .text	0000000000000041              Create_func_sin::~Create_func_sin()
00000000008882ce g     F .text	00000000000005a6              sp_head::merge_table_list(THD*, TABLE_LIST*, LEX*)
00000000007680fa  w    F .text	0000000000000046              Field_year::~Field_year()
00000000005c29cd g     F .text	0000000000000041              thd_make_lex_string
00000000008159ec  w    F .text	0000000000000030              Item_func_month::fix_length_and_dec()
0000000000000000       F *UND*	0000000000000000              msync@@GLIBC_2.2.5
000000000090c3ea  w    F .text	0000000000000026              PFS_internal_schema_access::~PFS_internal_schema_access()
000000000138c8a0 g     O .bss	0000000000000008              my_stream_opened
000000000087428c  w    F .text	000000000000001b              QUICK_RANGE::~QUICK_RANGE()
000000000078dfd6 g     F .text	0000000000000155              Item_bin_string::Item_bin_string(char const*, unsigned int)
00000000007ea48e g     F .text	0000000000000128              Item_func_old_password::val_str_ascii(String*)
00000000006d7092 g     F .text	000000000000001b              Deferred_log_events::~Deferred_log_events()
00000000010bdc70  w    O .data.rel.ro	0000000000000398              vtable for Item_func_yearweek
0000000000583f0a g     F .text	00000000000006b4              GRANT_TABLE::GRANT_TABLE(TABLE*, TABLE*)
00000000006c1b0c  w    F .text	000000000000002d              Time_zone::Time_zone()
0000000000598b26  w    F .text	000000000000003a              TABLE::use_all_columns()
000000000076696c  w    F .text	0000000000000046              Field_longstr::~Field_longstr()
00000000007e840a g     F .text	00000000000001c3              Item_func_right::val_str(String*)
000000000090af0e g     F .text	0000000000000037              PFS_engine_table::set_position(void const*)
000000000087307e  w    F .text	0000000000000087              SEL_TREE::SEL_TREE()
00000000007c8b2a g     F .text	0000000000000236              Item_func_div::fix_length_and_dec()
00000000010856b8  w    O .data.rel.ro	00000000000003a0              vtable for Item_bool_func2
00000000010df520 g     O .data	0000000000000398              triggers_fields_info
0000000000901f0f g     F .text	000000000000036c              find_type
000000000090dfe2  w    F .text	0000000000000038              PFS_atomic::load_32(int volatile*)
00000000008174f4  w    F .text	0000000000000046              Item_func_timediff::~Item_func_timediff()
00000000009828bc  w    F .text	0000000000000052              ha_heap::index_flags(unsigned int, unsigned int, bool) const
00000000008c1030  w    F .text	0000000000000038              Item_nodeset_func_rootelement::Item_nodeset_func_rootelement(String*)
000000000076441e  w    F .text	00000000000000c9              Field::set_default()
00000000007bfe14  w    F .text	0000000000000041              Create_func_is_free_lock::~Create_func_is_free_lock()
00000000007d5ab4 g     F .text	0000000000000034              Item_func_get_system_var::print(String*, enum_query_type)
000000000081d4ee g     F .text	00000000000000b0              LOGGER::init_log_tables()
000000000059856c  w    F .text	0000000000000057              base_list_iterator::after(void*)
00000000006bb302  w    F .text	000000000000001a              List_iterator<String>::ref()
0000000000873268  w    F .text	000000000000001b              SEL_ARG::~SEL_ARG()
0000000000b8249b g     F .text	0000000000000054              my_wildcmp_mb_bin
00000000005d0d26  w    F .text	000000000000001a              List_iterator<Alter_column>::ref()
0000000000b7ede8 g     F .text	0000000000000076              my_strnncoll_gbk
00000000007c061a  w    F .text	000000000000002d              Create_func_load_file::Create_func_load_file()
000000000073cb08  w    F .text	000000000000001b              List<sp_variable>::List()
00000000013866d0 g     O .bss	0000000000000008              Create_func_round::s_singleton
00000000005ee674 g     F .text	0000000000000045              st_select_lex::test_limit()
00000000007c2f4c  w    F .text	0000000000000041              Create_func_xml_update::~Create_func_xml_update()
00000000007fbfaa g     F .text	000000000000001d              subselect_single_select_engine::no_tables()
0000000000765b48  w    F .text	0000000000000037              Field_longlong::pack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000007fc2bc  w    F .text	000000000000000b              Item_subselect::reset_value_registration()
0000000000626ce0  w    F .text	0000000000000046              Begin_load_query_log_event::~Begin_load_query_log_event()
00000000005ce8ec  w    F .text	0000000000000044              Item::delete_self()
000000000065c6fc  w    F .text	000000000000001a              List<Item_equal>::pop()
00000000007d36ec g     F .text	00000000000002a4              Item_func_set_user_var::update()
00000000006f6118  w    F .text	0000000000000041              MDL_scoped_lock::~MDL_scoped_lock()
00000000005cf5be  w    F .text	0000000000000067              Statement::set_query_inner(char*, unsigned int, charset_info_st*)
000000000106c648  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_struct
0000000000899978  w    F .text	00000000000000ae              field_info::field_info(Item*, analyse*)
0000000000678bcc  w    F .text	0000000000000026              Trigger_error_handler::~Trigger_error_handler()
00000000010aabe8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_ucase
0000000000816626  w    F .text	000000000000002b              Item_func_now::~Item_func_now()
00000000007ba2b2  w    F .text	0000000000000038              Item_func_cos::Item_func_cos(Item*)
000000000138dfe0 g     O .bss	0000000000000100              table_cond_instances::m_table_lock
000000000078afc8 g     F .text	00000000000000aa              Item_field::cleanup()
00000000009138c6 g     F .text	000000000000001e              PFS_atomic::cleanup()
0000000000873b34  w    F .text	000000000000001b              List<QUICK_RANGE>::~List()
0000000000605ebe g     F .text	0000000000000168              check_string_char_length(st_mysql_lex_string*, char const*, unsigned int, charset_info_st*, bool)
00000000010f158c g     O .data	0000000000000004              myisam_quick_table_bits
000000000089a710  w    F .text	000000000000003a              field_ulonglong::get_min_arg(String*)
0000000000887a4c g     F .text	00000000000000e6              sp_instr_cclose::print(String*)
00000000007779d2 g     F .text	0000000000000063              handler::ha_change_partitions(st_ha_create_information*, char const*, unsigned long long*, unsigned long long*, unsigned char const*, unsigned long)
00000000005f73c0 g     F .text	0000000000000370              prepare_schema_table(THD*, LEX*, Table_ident*, enum_schema_tables)
00000000008f91df g     F .text	00000000000000fa              my_safe_printf_stderr
0000000000598e36  w    F .text	000000000000002c              Security_context::priv_host_name()
00000000006e03fc g     F .text	0000000000000047              change_master_server_id_cmp(unsigned long*, unsigned long*)
000000000091f92e g     F .text	000000000000006a              ha_myisam::extra(ha_extra_function)
0000000000566a9c  w    F .text	0000000000000017              Item::split_sum_func(THD*, Item**, List<Item>&)
00000000007ba6ae  w    F .text	000000000000003d              Item_func_min::Item_func_min(List<Item>&)
0000000000816774  w    F .text	0000000000000011              Item_func_from_unixtime::func_name() const
000000000060702e  w    F .text	000000000000004a              Item_func_unix_timestamp::Item_func_unix_timestamp(Item*)
000000000077ec8c g     F .text	000000000000009f              Item::save_date_in_field(Field*)
00000000007d3e66 g     F .text	00000000000000b2              Item_func_set_user_var::print(String*, enum_query_type)
00000000007caa64 g     F .text	00000000000000b7              Item_func_cos::val_real()
000000000082d866  w    F .text	0000000000000016              binlog_cache_data::set_incident()
0000000001209ea0 g     O .data	0000000000000100              to_lower_ascii_general_ci
000000000067949a g     F .text	00000000000000b9              String::needs_conversion_on_storage(unsigned int, charset_info_st*, charset_info_st*)
00000000006eeca0 g     F .text	00000000000001e0              Binlog_transmit_delegate::reserve_header(THD*, unsigned short, String*)
000000000073b33a  w    F .text	0000000000000012              Lex_input_stream::get_tok_end()
0000000000b5f952 g     F .text	000000000000003b              ha_partition::table_type() const
00000000007c9e0c g     F .text	00000000000000a7              Item_func_abs::int_op()
0000000001376560 g     O .bss	0000000000000060              my_locale_nl_BE
0000000001370774 g     O .bss	0000000000000004              key_LOCK_delayed_insert
00000000006f57c8  w    F .text	000000000000000f              MDL_object_lock::hog_lock_types_bitmap() const
000000000081d264 g     F .text	000000000000007e              LOGGER::error_log_print(loglevel, char const*, __va_list_tag*)
0000000000984b76 g     F .text	0000000000000177              hp_make_key
00000000007989da  w    F .text	0000000000000039              Item_copy::make_field(Send_field*)
00000000005666b1  w    F .text	000000000000000f              Item::operator delete(void*, unsigned long)
00000000009056d4  w    F .text	000000000000013b              handler::handler(handlerton*, TABLE_SHARE*)
0000000000678c64  w    F .text	0000000000000041              Show_create_error_handler::~Show_create_error_handler()
00000000007aed9a  w    F .text	000000000000002d              in_vector::in_vector()
0000000000738b5e  w    F .text	00000000000000d3              Item_func_match::Item_func_match(List<Item>&, unsigned int)
00000000005d0918  w    F .text	0000000000000025              List_iterator<Alter_drop>::replace(Alter_drop*)
00000000006bb3a8  w    F .text	0000000000000029              I_P_List_iterator<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> >::I_P_List_iterator(I_P_List<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> > const&)
000000000076751a  w    F .text	0000000000000011              Field_bit::max_display_length()
0000000001376020 g     O .bss	0000000000000060              my_locale_es_NI
00000000007fc2f4  w    F .text	000000000000004b              Item_singlerow_subselect::Item_singlerow_subselect()
000000000056c8a2 g     F .text	000000000000023b              init_slave_skip_errors(char const*)
0000000000886b62 g     F .text	0000000000000137              sp_instr_jump_if_not::opt_mark(sp_head*, List<sp_instr>*)
00000000010c33a8  w    O .data.rel.ro	0000000000000028              vtable for Proc_table_intact
00000000008f492d g     F .text	000000000000009a              my_sleep
0000000000607fbe  w    F .text	000000000000003d              SQL_I_List<TABLE_LIST>::save_and_clear(SQL_I_List<TABLE_LIST>*)
000000000120dbe0 g     O .data	0000000000000100              to_lower_latin2_croatian_ci
00000000005c2a3d g     F .text	0000000000000032              thd_get_xid
0000000000908899 g     F .text	00000000000000b2              cleanup_sync_class()
00000000008eb551 g     F .text	0000000000000072              bitmap_lock_clear_bit
00000000007f4000  w    F .text	0000000000000046              Item_func_aes_encrypt::~Item_func_aes_encrypt()
0000000000983fb2 g     F .text	0000000000000328              hp_rec_hashnr
00000000007376e0  w    F .text	00000000000000a8              Foreign_key::Foreign_key(st_mysql_lex_string const&, List<Key_part_spec>&, Table_ident*, List<Key_part_spec>&, unsigned int, unsigned int, unsigned int)
0000000001373d38 g     O .bss	0000000000000008              Events::db_repository
000000000091ec9c g     F .text	000000000000005b              ha_myisam::is_crashed() const
000000000080de76 g     F .text	00000000000000a0              Item_func_monthname::fix_length_and_dec()
000000000055bcb6 g     F .text	00000000000000be              NAMED_ILIST::delete_elements(void (*)(char const*, unsigned char*))
0000000001081220  w    O .data.rel.ro	0000000000000048              vtable for cmp_item_decimal
0000000000839644 g     F .text	0000000000000149              Load_log_event::write_data_body(st_io_cache*)
00000000007087da  w    F .text	000000000000003d              PolyLock_rwlock::PolyLock_rwlock(st_mysql_rwlock*)
00000000006f5a54  w    F .text	000000000000002a              I_P_List_iterator<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> >::I_P_List_iterator(I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> > const&)
00000000012c9060 g     O .data	00000000000000b0              my_charset_utf8_unicode_ci
00000000007663b0  w    F .text	000000000000000f              Field_date::can_be_compared_as_longlong() const
00000000007654ec  w    F .text	0000000000000030              Field_tiny::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
0000000000889f30  w    F .text	0000000000000026              List_iterator_fast<sp_variable>::List_iterator_fast(List<sp_variable>&)
00000000010b3820  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_std
0000000000564732 g     F .text	0000000000000060              Protocol_binary::store(Field*)
0000000000809b3e  w    F .text	0000000000000040              Item_sum_udf_float::Item_sum_udf_float(THD*, Item_sum_udf_float*)
00000000009183a6  w    F .text	0000000000000031              pos_all_instr::pos_all_instr()
000000000077b41e  w    F .text	000000000000004c              xid_t::quick_get_my_xid()
00000000005d2e23 g     F .text	000000000000002a              dboptions_get_key
00000000007558b2 g     F .text	0000000000000065              Field_date::sort_string(unsigned char*, unsigned int)
000000000077bf2e  w    F .text	000000000000000f              handler::primary_key_is_clustered()
00000000007bebea  w    F .text	0000000000000041              Create_func_disjoint::~Create_func_disjoint()
0000000000757ec4 g     F .text	00000000000000b5              Field_str::is_equal(Create_field*)
0000000000856e38 g     F .text	0000000000000091              SQL_SELECT::SQL_SELECT()
00000000007da89a  w    F .text	0000000000000013              Item_func_int_div::check_partition_func_processor(unsigned char*)
00000000007be73a  w    F .text	0000000000000041              Create_func_dayofmonth::~Create_func_dayofmonth()
0000000000000000       F *UND*	0000000000000000              atan2@@GLIBC_2.2.5
00000000006c1dc4  w    F .text	0000000000000046              Time_zone_system::~Time_zone_system()
0000000001086a90  w    O .data.rel.ro	0000000000000030              vtable for Create_func_ucase
00000000005d0694  w    F .text	0000000000000026              List<Alter_drop>::List(List<Alter_drop> const&)
00000000007ccdd2 g     F .text	0000000000000542              Item_func_min_max::val_str(String*)
000000000082d360  w    F .text	000000000000004f              Xid_log_event::Xid_log_event(THD*, unsigned long long)
000000000089b11e g     F .text	00000000000000be              SQL_CRYPT::decode(char*, unsigned int)
0000000000786a0e g     F .text	000000000000007c              Item_param::get_date(st_mysql_time*, unsigned int)
00000000006069d2  w    F .text	0000000000000012              Item_result_field::get_tmp_table_field()
00000000005f029e g     F .text	000000000000007c              unsafe_mixed_statement(Query_tables_list::enum_stmt_accessed_table, Query_tables_list::enum_stmt_accessed_table, unsigned int)
0000000001063b00 g     O .data.rel.ro	0000000000000080              partition_keywords
00000000008e7cf5 g     F .text	00000000000002f1              init_tmpdir
00000000005ca648 g     F .text	0000000000000295              THD::restore_sub_statement_state(Sub_statement_state*)
00000000007b4ebe g     F .text	00000000000000d1              Create_func_load_file::create(THD*, Item*)
00000000010a75c0  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_user
000000000090ac04 g     F .text	000000000000003c              PFS_engine_table_share::delete_all_locks()
00000000007e22dc  w    F .text	000000000000002b              Item_func_spatial_rel::~Item_func_spatial_rel()
00000000007c0648  w    F .text	0000000000000041              Create_func_load_file::~Create_func_load_file()
00000000007be48e  w    F .text	0000000000000026              Create_func_crc32::~Create_func_crc32()
00000000005677b0  w    F .text	000000000000004f              Item_partition_func_safe_string::Item_partition_func_safe_string(char const*, unsigned int, charset_info_st*)
0000000000764e70  w    F .text	000000000000000f              Field_num::size_of() const
00000000005596de  w    F .text	0000000000000025              I_List<THD>::is_last(THD*)
000000000083e528 g     F .text	00000000000000dc              Slave_log_event::Slave_log_event(char const*, unsigned int, Format_description_log_event const*)
0000000000658dd6  w    F .text	0000000000000099              Field_real::Field_real(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
000000000056a918 g     F .text	000000000000014c              set_var::light_check(THD*)
000000000136ce28 g     O .bss	0000000000000004              sync_binlog_period
0000000000678438  w    F .text	000000000000001b              I_List<thread_info>::I_List()
000000000059ac2c  w    F .text	000000000000002b              GRANT_NAME::~GRANT_NAME()
000000000061b9a0 g     F .text	000000000000003d              Protocol_local::store(char const*, unsigned long, charset_info_st*, charset_info_st*)
00000000007ba832  w    F .text	0000000000000038              Item_func_bit_length::Item_func_bit_length(Item*)
0000000001086e20  w    O .data.rel.ro	0000000000000030              vtable for Create_func_sign
0000000000799210  w    F .text	00000000000000d5              Item_cache::setup(Item*)
0000000001110000 g     O .data	00000000000000b0              my_charset_bin
00000000007bf004  w    F .text	0000000000000041              Create_func_exp::~Create_func_exp()
00000000007c006c  w    F .text	0000000000000041              Create_func_isnull::~Create_func_isnull()
00000000005f41e3 g     F .text	0000000000000055              is_log_table_write_query(enum_sql_command)
000000000106a0b0  w    O .data.rel.ro	0000000000000398              vtable for Item_bool_func
00000000008ea7a4 g     F .text	0000000000000061              bitmap_fast_test_and_clear
0000000000567adc g     F .text	000000000000010b              Rpl_filter::~Rpl_filter()
00000000006bb27e  w    F .text	0000000000000025              List_iterator<String>::replace(List<String>&)
0000000000935fe1 g     F .text	0000000000000859              mi_delete
00000000007f19ee  w    F .text	0000000000000058              Item_str_conv::~Item_str_conv()
0000000000843da6 g     F .text	000000000000061d              Table_map_log_event::Table_map_log_event(THD*, TABLE*, unsigned long, bool)
0000000001386760 g     O .bss	0000000000000008              Create_func_subtime::s_singleton
000000000089a252  w    F .text	000000000000001c              field_real::decimals()
000000000088098a g     F .text	0000000000000130              sp_head::create_result_field(unsigned int, char const*, TABLE*)
0000000000559902  w    F .text	000000000000001a              I_List<i_string>::head()
00000000005f0e76  w    F .text	00000000000000b2              Alter_info::Alter_info()
0000000000802ac2 g     F .text	0000000000000077              Item_sum_or::add()
00000000007c0908  w    F .text	000000000000002d              Create_func_lpad::Create_func_lpad()
000000000120c660 g     O .data	0000000000000200              to_uni_koi8u_general_ci
00000000008725a8  w    F .text	000000000000004a              SEL_ARG::cmp_min_to_max(SEL_ARG const*) const
0000000000843c70 g     F .text	0000000000000136              Table_map_log_event::save_field_metadata()
00000000012164c0 g     O .data	0000000000000100              to_upper_ascii_bin
00000000006bcf70 g     F .text	00000000000000e0              date_time_format_copy(THD*, st_date_time_format*)
000000000079e2e6 g     F .text	000000000000055c              Arg_comparator::set_cmp_func(Item_result_field*, Item**, Item**, Item_result)
00000000008157ce  w    F .text	0000000000000013              Item_func_to_days::check_partition_func_processor(unsigned char*)
0000000000603d36 g     F .text	00000000000000ac              st_select_lex::add_joined_table(TABLE_LIST*)
000000000073c366  w    F .text	000000000000004a              sp_instr_cclose::sp_instr_cclose(unsigned int, sp_pcontext*, unsigned int)
0000000000766fbe  w    F .text	0000000000000021              Field_blob::free()
0000000000980b74 g     F .text	000000000000001b              heap_panic(handlerton*, ha_panic_function)
00000000007be1f4  w    F .text	0000000000000041              Create_func_conv::~Create_func_conv()
0000000000817edc  w    F .text	000000000000002b              Item_func_time_to_sec::~Item_func_time_to_sec()
00000000009126c8 g     F .text	0000000000000192              table_mutex_instances::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000005655aa  w    F .text	00000000000000c7              Item_func_set_user_var::Item_func_set_user_var(st_mysql_lex_string, Item*, bool)
00000000007f476c g     F .text	000000000000007b              Item_subselect::~Item_subselect()
00000000005d7d12  w    F .text	0000000000000012              st_select_lex_unit::first_select()
00000000006d8407 g     F .text	0000000000000039              cleanup_errmsgs()
0000000000563c66 g     F .text	00000000000000c1              Protocol_text::store_date(st_mysql_time*)
0000000000893b84  w    F .text	0000000000000041              Gis_multi_polygon::~Gis_multi_polygon()
00000000006f4350 g     F .text	000000000000002d              MDL_ticket::accept_visitor(MDL_wait_for_graph_visitor*)
000000000136ce40 g     O .bss	0000000000000008              rpl_recovery_rank
0000000000902314 g     F .text	0000000000000043              get_type
00000000007afb6a  w    F .text	000000000000000f              Item_func_in::functype() const
00000000006c6a92  w    F .text	0000000000000026              Pack_header_error_handler::~Pack_header_error_handler()
00000000006f4b7e g     F .text	000000000000008e              MDL_context::release_transactional_locks()
00000000007c1908  w    F .text	0000000000000041              Create_func_row_count::~Create_func_row_count()
000000000087dad8 g     F .text	0000000000000138              sp_cache_routine(THD*, Sroutine_hash_entry*, bool, sp_head**)
000000000054e993 g     F .text	000000000000009c              flush_thread_cache()
0000000000768016  w    F .text	0000000000000046              Field_newdate::~Field_newdate()
000000000070c062  w    F .text	000000000000006b              Sys_var_bit::session_value_ptr(THD*, st_mysql_lex_string*)
0000000000558d84  w    F .text	0000000000000016              Bitmap<64u>::set_all()
00000000005ce930  w    F .text	0000000000000087              Item_float::Item_float(char const*, double, unsigned int, unsigned int)
00000000005cff72  w    F .text	0000000000000012              Rows_log_event::get_cols() const
0000000000583b36 g     F .text	00000000000000b5              GRANT_TABLE::GRANT_TABLE(char const*, char const*, char const*, char const*, unsigned long, unsigned long)
00000000008c22d8  w    F .text	0000000000000046              Item_nodeset_func_selfbyname::~Item_nodeset_func_selfbyname()
000000000056b648  w    F .text	0000000000000041              PolyLock_mutex::~PolyLock_mutex()
0000000000867cf8 g     F .text	000000000000027e              get_quick_select(PARAM*, unsigned int, SEL_ARG*, st_mem_root*)
000000000094fcdf g     F .text	0000000000000119              mi_recinfo_write
000000000060664c  w    F .text	000000000000002a              next_query_id()
00000000006c6a1a  w    F .text	0000000000000035              Pack_header_error_handler::Pack_header_error_handler()
0000000001087ab0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_from_unixtime
000000000055efa2 g     F .text	00000000000000b4              parse_escaped_string(char*, char*, st_mem_root*, st_mysql_lex_string*)
00000000007dddb4  w    F .text	000000000000002b              Item_func_connection_id::~Item_func_connection_id()
000000000075a93e g     F .text	00000000000000ea              Field_varstring::cmp_binary(unsigned char const*, unsigned char const*, unsigned int)
0000000000b613d0 g     F .text	0000000000000082              ha_partition::preload_keys(THD*, st_ha_check_opt*)
00000000007dd448  w    F .text	000000000000002b              Item_func_cos::~Item_func_cos()
00000000007af61e  w    F .text	0000000000000037              cmp_item_int::store_value(Item*)
000000000077b63c  w    F .text	0000000000000018              Ha_trx_info::is_started() const
00000000007daca0  w    F .text	0000000000000011              Item_func_rand::func_name() const
00000000010c5d60  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_childbyname
00000000007fc4ac  w    F .text	000000000000002b              Item_exists_subselect::~Item_exists_subselect()
00000000005678f2  w    F .text	000000000000005b              Item_return_int::Item_return_int(char const*, unsigned int, enum_field_types, long long)
00000000006e8c2e g     F .text	000000000000004e              PROF_MEASUREMENT::PROF_MEASUREMENT(QUERY_PROFILE*, char const*)
0000000000600b3f g     F .text	00000000000002b2              check_table_access(THD*, unsigned long, TABLE_LIST*, bool, unsigned int, bool)
0000000001087db0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_disjoint
000000000059adc4  w    F .text	0000000000000041              Silence_routine_definer_errors::~Silence_routine_definer_errors()
00000000007f1bce  w    F .text	0000000000000011              Item_func_rtrim::mode_name() const
000000000082d580  w    F .text	0000000000000046              Stop_log_event::~Stop_log_event()
000000000070c684  w    F .text	0000000000000033              Sys_var_have::do_check(THD*, set_var*)
0000000001077480  w    O .data.rel.ro	0000000000000360              vtable for Item_ref
000000000059ae6c  w    F .text	0000000000000026              List_iterator<LEX_COLUMN>::List_iterator(List<LEX_COLUMN>&)
00000000005d7d48  w    F .text	000000000000004f              st_select_lex_unit::is_union()
00000000010ef930 g     O .data	0000000000000010              table_setup_instruments::m_field_def
0000000000798006  w    F .text	0000000000000078              Item_ref::bring_value()
00000000006b3e15 g     F .text	0000000000000983              create_frm(THD*, char const*, char const*, char const*, unsigned int, unsigned char*, st_ha_create_information*, unsigned int, st_key*)
000000000061844a g     F .text	0000000000000048              Select_fetch_protocol_binary::Select_fetch_protocol_binary(THD*)
00000000007561d0 g     F .text	0000000000000106              Field_newdate::val_int()
000000000082272c g     F .text	0000000000000147              MYSQL_BIN_LOG::cleanup()
00000000007bf5b2  w    F .text	000000000000002d              Create_func_geometry_from_text::Create_func_geometry_from_text()
00000000009183d8  w    F .text	0000000000000020              pos_all_instr::reset()
0000000000794b1e g     F .text	00000000000000b1              Item_cache_row::bring_value()
00000000012105a0 g     O .data	0000000000000101              ctype_macroman_general_ci
000000000136fe70 g     O .bss	0000000000000001              opt_use_ssl
00000000005cf8d6  w    F .text	0000000000000015              Global_read_lock::is_acquired() const
00000000005b0e0c  w    F .text	000000000000001d              List_iterator_fast<Natural_join_column>::operator++(int)
00000000007dadb4  w    F .text	000000000000000f              Item_func_coercibility::not_null_tables() const
0000000000b96a53 g     F .text	000000000000016d              decimal2longlong
00000000005bd32e g     F .text	0000000000000522              Query_cache::queries_dump()
000000000058b127 g     F .text	00000000000000de              check_routine_level_acl(THD*, char const*, char const*, bool)
000000000073a690  w    F .text	000000000000000f              Item_date_func::field_type() const
00000000007c2c5e  w    F .text	0000000000000041              Create_func_weekday::~Create_func_weekday()
00000000005d18c2  w    F .text	000000000000001b              I_List<Item_change_record>::I_List()
00000000009099e3 g     F .text	0000000000000054              find_file_class(unsigned int)
00000000006eda5c  w    F .text	000000000000002b              Resignal_statement::~Resignal_statement()
0000000000000000       F *UND*	0000000000000000              rewind@@GLIBC_2.2.5
00000000005bf324  w    F .text	0000000000000012              Query_cache_query::tables_type()
00000000005985c4  w    F .text	0000000000000016              base_list_iterator::ref()
0000000000987716 g     F .text	0000000000000183              heap_rrnd
0000000000818400  w    F .text	0000000000000046              Item_func_dayofmonth::~Item_func_dayofmonth()
0000000000815188 g     F .text	0000000000000106              Item_func_last_day::get_date(st_mysql_time*, unsigned int)
00000000007add56  w    F .text	0000000000000034              Item_func_numhybrid::is_null()
00000000005b0fbc  w    F .text	0000000000000026              List_iterator_fast<TABLE_LIST>::List_iterator_fast(List<TABLE_LIST>&)
00000000006ed2ac g     F .text	00000000000001e1              Signal_common::raise_condition(THD*, MYSQL_ERROR*)
00000000005aed8c  w    F .text	0000000000000027              Bitmap<64u>::intersect(Bitmap<64u>&)
0000000000b71636  w    F .text	0000000000000026              List_iterator_fast<partition_element>::List_iterator_fast(List<partition_element>&)
000000000055c2e8  w    F .text	000000000000001a              I_List<NAMED_ILINK>::get()
000000000106f8f8  w    O .data.rel.ro	0000000000000298              vtable for Field_enum
00000000005cf83c  w    F .text	0000000000000020              Locked_tables_list::~Locked_tables_list()
00000000007e1900  w    F .text	0000000000000014              Item_func_spatial_rel::rev_functype() const
00000000007ddc4c  w    F .text	000000000000002b              Item_func_plus::~Item_func_plus()
0000000000562aa8 g     F .text	00000000000001d1              Protocol::send_result_set_row(List<Item>*)
00000000008f80a7 g     F .text	0000000000000105              resize_queue
00000000012c9420 g     O .data	00000000000000b0              my_charset_utf8_polish_uca_ci
0000000000797432  w    F .text	000000000000000f              Item_float::type() const
0000000000851e84 g     F .text	0000000000000069              Update_rows_log_event_old::Update_rows_log_event_old(char const*, unsigned int, Format_description_log_event const*)
0000000000898f5d g     F .text	0000000000000135              collect_longlong(long long*, unsigned int, st_tree_info*)
00000000006dd4ea g     F .text	000000000000008a              Relay_log_info::clear_until_condition()
0000000000847d2c g     F .text	00000000000000c0              Update_rows_log_event::init(st_bitmap const*)
000000000059ccc8 g     F .text	0000000000000276              release_table_share(TABLE_SHARE*)
000000000070ed34  w    F .text	0000000000000041              PolyLock_rwlock::~PolyLock_rwlock()
0000000000559824  w    F .text	000000000000001b              I_List<i_string>::I_List()
00000000008cd6b8  w    F .text	0000000000000047              TaoCrypt::SHA224::SHA224()
0000000000698430  w    F .text	0000000000000041              Trigger_creation_ctx::create_backup_ctx(THD*) const
00000000006eb080  w    F .text	0000000000000015              Queue<QUERY_PROFILE>::iterator_value(void*)
00000000005ee630 g     F .text	000000000000000f              st_select_lex_node::get_item_list()
00000000007bd552  w    F .text	0000000000000026              Create_func_acos::~Create_func_acos()
0000000000815d70  w    F .text	0000000000000011              Item_func_year::func_name() const
0000000001084f88  w    O .data.rel.ro	0000000000000398              vtable for Item_in_optimizer
0000000001214d40 g     O .data	0000000000000100              to_lower_cp1256_general_ci
00000000005cfc66  w    F .text	0000000000000015              select_result::field_count(List<Item>&) const
000000000065abb8  w    F .text	000000000000000f              FT_SELECT::reset()
00000000005b106a  w    F .text	0000000000000026              List_iterator<Item>::after(Item*)
00000000005a5a08 g     F .text	00000000000000ab              DML_prelocking_strategy::handle_view(THD*, Query_tables_list*, TABLE_LIST*, bool*)
0000000000659912  w    F .text	0000000000000026              Item_sum::reset_and_add()
00000000008eb97a g     F .text	0000000000000167              my_compress_alloc
0000000000797dbc  w    F .text	000000000000006e              Item_ref::cols()
0000000000872cec  w    F .text	0000000000000103              SEL_ARG::store_max_key(st_key_part*, unsigned char**, unsigned int*, unsigned int)
00000000007c24c0  w    F .text	0000000000000041              Create_func_time_to_sec::~Create_func_time_to_sec()
000000000070ec64  w    F .text	0000000000000041              Sys_var_external_user::~Sys_var_external_user()
000000000108a028  w    O .data.rel.ro	0000000000000398              vtable for Item_func_sp
0000000000b71488  w    F .text	00000000000000f8              ha_partition::set_auto_increment_if_higher(Field*)
0000000000000000       F *UND*	0000000000000000              pthread_kill@@GLIBC_2.2.5
000000000065c5d4  w    F .text	0000000000000026              List_iterator_fast<Item_equal>::List_iterator_fast(List<Item_equal>&)
0000000000677e8c  w    F .text	0000000000000012              Default_object_creation_ctx::get_connection_cl()
0000000000980f62 g     F .text	00000000000000af              ha_heap::clone(char const*, st_mem_root*)
000000000106ca80  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>
000000000083c02a g     F .text	0000000000000132              Rand_log_event::pack_info(Protocol*)
00000000007e3400  w    F .text	000000000000002b              Item_row::~Item_row()
0000000000000000       F *UND*	0000000000000000              bind@@GLIBC_2.2.5
0000000000767dca  w    F .text	0000000000000058              Field_set::~Field_set()
0000000000599d70  w    F .text	000000000000025d              ACL_PROXY_USER::matches(char const*, char const*, char const*, char const*)
00000000005bf442  w    F .text	0000000000000012              Query_cache_table::callback()
000000000138c490 g     O .bss	0000000000000008              my_progname
00000000008157e2  w    F .text	0000000000000021              Item_func_to_days::check_valid_arguments_processor(unsigned char*)
00000000006f5a54  w    F .text	000000000000002a              I_P_List_iterator<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> >::I_P_List_iterator(I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> > const&)
00000000008491e4  w    F .text	000000000000000f              Stop_log_event::is_valid() const
00000000006b7180 g     F .text	000000000000008a              TABLE_LIST::find_underlying_table(TABLE*)
00000000007bb5e2  w    F .text	000000000000004a              Item_str_conv::Item_str_conv(Item*)
00000000008fb2c1 g     F .text	0000000000000084              mysql_sha1_reset
0000000000709730  w    F .text	0000000000000088              Sys_var_proxy_user::Sys_var_proxy_user(char const*, char const*, charset_enum)
000000000073bf86  w    F .text	0000000000000041              sp_instr_jump::sp_instr_jump(unsigned int, sp_pcontext*, unsigned int)
0000000000981676 g     F .text	0000000000000084              ha_heap::index_read_idx_map(unsigned char*, unsigned int, unsigned char const*, unsigned long, ha_rkey_function)
0000000000b6124a g     F .text	0000000000000082              ha_partition::check(THD*, st_ha_check_opt*)
000000000057abb4  w    F .text	000000000000000f              Heartbeat_log_event::get_type_code()
00000000007c15ec  w    F .text	000000000000002d              Create_func_radians::Create_func_radians()
00000000008cbac6  w    F .text	000000000000002b              Alter_table_common::~Alter_table_common()
00000000006d793c g     F .text	000000000000015f              injector::transaction::update_row(unsigned int, injector::transaction::table, st_bitmap const*, unsigned long, unsigned char*, unsigned char*)
00000000005d05b4  w    F .text	0000000000000025              List_iterator<Key_part_spec>::replace(Key_part_spec*)
00000000010871e0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_oct
00000000005dd452  w    F .text	0000000000000025              List<Item>::push_front(Item*)
00000000007db74a  w    F .text	0000000000000011              Item_func_inet_aton::func_name() const
0000000000678aa0  w    F .text	000000000000001d              List_iterator_fast<st_foreign_key_info>::operator++(int)
00000000013707a0 g     O .bss	0000000000000004              key_LOCK_table_share
00000000007c2844  w    F .text	0000000000000041              Create_func_uncompress::~Create_func_uncompress()
000000000074d9b4 g     F .text	00000000000001bd              Field_tiny::store(long long, bool)
00000000005f1a80  w    F .text	000000000000001b              List<st_udf_func>::List()
00000000005d0070  w    F .text	0000000000000025              List<Key>::push_front(Key*)
00000000005f1e1a  w    F .text	000000000000001b              List<set_var_base>::List()
00000000007bd1f4  w    F .text	000000000000002d              Create_func_arg1::Create_func_arg1()
0000000000561e2c g     F .text	0000000000000030              Protocol::end_partial_result_set(THD*)
0000000000690d2e  w    F .text	0000000000000026              List_iterator<Create_field>::after(Create_field*)
00000000008a1d32 g     F .text	0000000000000071              XML_TAG::XML_TAG(int, String, String)
00000000007f42de g     F .text	00000000000002b1              Item_subselect::init(st_select_lex*, select_subselect*)
00000000010879c0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_get_lock
00000000007da7a8  w    F .text	000000000000002b              Item_func_additive_op::~Item_func_additive_op()
000000000087eae0  w    F .text	0000000000000026              Proc_table_intact::~Proc_table_intact()
0000000000b69f32 g     F .text	0000000000000095              ha_partition::index_first(unsigned char*)
000000000055bf2f g     F .text	0000000000000078              get_or_create_key_cache(char const*, unsigned int)
000000000088fefe g     F .text	0000000000000157              Gis_multi_point::init_from_wkt(Gis_read_stream*, String*)
0000000000820b00 g     F .text	000000000000006e              MYSQL_LOG::init_pthread_objects()
000000000090df8c  w    F .text	0000000000000029              PFS_double_index::set_at(PFS_double_index const*)
0000000001376380 g     O .bss	0000000000000060              my_locale_fr_BE
00000000005ef928 g     F .text	00000000000000c3              LEX::set_trg_event_type_for_tables()
00000000007a45a8 g     F .text	00000000000000ad              Item_func_nullif::val_real()
000000000074e116 g     F .text	00000000000001d2              Field_short::store(double)
00000000005d3534 g     F .text	00000000000004be              load_db_opt(THD*, char const*, st_ha_create_information*)
00000000007b9e2a  w    F .text	0000000000000040              Item_func_unsigned::Item_func_unsigned(Item*)
0000000000893c88  w    F .text	0000000000000026              Gis_geometry_collection::~Gis_geometry_collection()
0000000000ba7054 g     F .text	00000000000000e1              vio_timeout
00000000007dd1c8  w    F .text	0000000000000046              Item_func_shift_right::~Item_func_shift_right()
00000000007b2a9a g     F .text	0000000000000050              Create_func_bit_count::create(THD*, Item*)
00000000005c3dac g     F .text	0000000000000041              THD::make_lex_string(st_mysql_lex_string*, char const*, unsigned int, bool)
0000000000b70318 g     F .text	0000000000000068              ha_partition::indexes_are_disabled()
00000000007ae0a2  w    F .text	00000000000000d3              Arg_comparator::set_cmp_context_for_datetime()
0000000001214c20 g     O .data	0000000000000101              ctype_cp1256_general_ci
0000000000754c3a g     F .text	0000000000000023              Field_year::val_real()
000000000057a668  w    F .text	0000000000000012              Slave_reporting_capability::last_error() const
000000000065c44c  w    F .text	000000000000001b              Bitmap<4096u>::Bitmap()
00000000007eac8a g     F .text	0000000000000063              Item_func_encode::crypto_transform(String*)
0000000000558fc5  w    F .text	000000000000003a              my_decimal_set_zero(my_decimal*)
00000000008935c9  w    F .text	000000000000002d              Geometry::find_class(int)
0000000000817e24  w    F .text	0000000000000046              Item_func_from_days::~Item_func_from_days()
00000000006e127f g     F .text	000000000000058a              flush_master_info(Master_info*, bool, bool)
00000000007bee14  w    F .text	000000000000002d              Create_func_endpoint::Create_func_endpoint()
0000000000658906  w    F .text	0000000000000084              my_decimal::my_decimal(my_decimal const&)
000000000077c08c  w    F .text	0000000000000016              handler::external_lock(THD*, int)
000000000081de8c g     F .text	00000000000000af              LOGGER::init_slow_log(unsigned int)
0000000000795fe8  w    F .text	0000000000000061              string2my_decimal(unsigned int, String const*, my_decimal*)
000000000065989e  w    F .text	000000000000005e              Item_direct_ref::Item_direct_ref(Name_resolution_context*, Item**, char const*, char const*, bool)
00000000007af7fa  w    F .text	000000000000005d              cmp_item_real::compare(cmp_item*)
0000000000902516 g     F .text	0000000000000204              copy_typelib
000000000075aa28 g     F .text	0000000000000056              Field_varstring::new_field(st_mem_root*, TABLE*, bool)
0000000000671044 g     F .text	00000000000000cc              get_cs_converted_part_value_from_string(THD*, Item*, String*, String*, charset_info_st*, bool)
0000000001374460 g     O .bss	0000000000000060              my_locale_fr_FR
00000000010ddae0 g     O .data	00000000000000c8              charsets_fields_info
000000000065c756  w    F .text	000000000000001a              List<Item_equal>::head()
00000000007dd8e8  w    F .text	0000000000000046              Item_func_abs::~Item_func_abs()
00000000008ea87d g     F .text	0000000000000062              bitmap_set_next
00000000007bd28a  w    F .text	000000000000002d              Create_func_arg2::Create_func_arg2()
00000000007bd28a  w    F .text	000000000000002d              Create_func_arg2::Create_func_arg2()
0000000000737fb8  w    F .text	000000000000003d              Item_sum_or::Item_sum_or(Item*)
00000000012b1880 g     O .data	0000000000000600              page007data
00000000007bc5f2  w    F .text	000000000000004a              Item_func_x::Item_func_x(Item*)
000000000077f67c g     F .text	00000000000000b9              Item_ident::cleanup()
0000000001218160 g     O .data	0000000000000101              ctype_hebrew_bin
00000000007b9f40  w    F .text	0000000000000038              Item_dec_func::Item_dec_func(Item*)
00000000008bffb2 g     F .text	000000000000025a              Item_xml_str_func::parse_xml(String*, String*)
00000000010efca0 g     O .data	0000000000000188              PFS_v1
00000000007bcbb2  w    F .text	0000000000000045              Item_str_timefunc::Item_str_timefunc(Item*, Item*, Item*)
00000000005588cf  w    F .text	0000000000000021              ilink::operator new(unsigned long)
00000000007bd8d6  w    F .text	0000000000000026              Create_func_as_wkt::~Create_func_as_wkt()
00000000007bcbf8  w    F .text	0000000000000038              Item_func_from_days::Item_func_from_days(Item*)
00000000006ed922  w    F .text	0000000000000056              Signal_common::~Signal_common()
00000000007c7452 g     F .text	00000000000000f1              Item_func_plus::real_op()
00000000008490b6  w    F .text	000000000000000f              Intvar_log_event::get_data_size()
0000000000788ae6 g     F .text	00000000000000cb              Item_ref_null_helper::val_decimal(my_decimal*)
0000000000000000       F *UND*	0000000000000000              ceil@@GLIBC_2.2.5
0000000000910ddc g     F .text	0000000000000235              table_performance_timers::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000005ad97d g     F .text	0000000000000074              fill_record_n_invoke_before_triggers(THD*, Field**, List<Item>&, bool, Table_triggers_list*, trg_event_type)
000000000079b1c2 g     F .text	0000000000000046              Cached_item::~Cached_item()
00000000007da9b2  w    F .text	0000000000000011              Item_func_abs::func_name() const
000000000055c302  w    F .text	000000000000001b              NAMED_ILIST::~NAMED_ILIST()
00000000005b23fe g     F .text	0000000000000137              Query_cache::lock()
0000000000b6a3f6 g     F .text	00000000000000e8              ha_partition::index_next(unsigned char*)
000000000079917c  w    F .text	0000000000000082              Item_cache::Item_cache(enum_field_types)
0000000001386960 g     O .bss	0000000000000020              my_empty_string
0000000000618ae2 g     F .text	00000000000001cc              Prepared_statement::~Prepared_statement()
00000000007c7de8 g     F .text	00000000000001d7              Item_func_minus::decimal_op(my_decimal*)
00000000008c2920 g     F .text	000000000000006f              table_mapping::table_mapping()
00000000008eb020 g     F .text	00000000000000aa              bitmap_subtract
000000000069b13a g     F .text	0000000000000144              select_union::create_result_table(THD*, List<Item>*, bool, unsigned long long, char const*)
0000000000b900c0 g     F .text	0000000000000053              my_wildcmp_unicode
0000000000617714 g     F .text	00000000000001c8              mysql_sql_stmt_execute(THD*)
00000000007c21d2  w    F .text	0000000000000041              Create_func_strcmp::~Create_func_strcmp()
00000000008c5e5e g     F .text	00000000000000b0              Event_queue::deinit_queue()
00000000010a2dd8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_export_set
0000000000851b58 g     F .text	0000000000000098              Delete_rows_log_event_old::Delete_rows_log_event_old(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
0000000000871f2c  w    F .text	000000000000005b              QUICK_RANGE_SELECT_GEOM::QUICK_RANGE_SELECT_GEOM(THD*, TABLE*, unsigned int, bool, st_mem_root*)
00000000005b0d6a  w    F .text	0000000000000025              Hash_set<TABLE_LIST, &schema_set_get_key>::Iterator::Iterator(Hash_set<TABLE_LIST, &schema_set_get_key>&)
0000000000954953 g     F .text	00000000000000d6              _mi_unmap_file
00000000007bef40  w    F .text	000000000000002d              Create_func_equals::Create_func_equals()
00000000007fc88c  w    F .text	0000000000000046              Item_in_subselect::~Item_in_subselect()
00000000006980ce  w    F .text	000000000000001b              List<unsigned long long>::~List()
00000000007bbac4  w    F .text	0000000000000057              Item_func_format::Item_func_format(Item*, Item*, Item*)
00000000007da350  w    F .text	0000000000000026              Item_func::raise_decimal_overflow()
00000000008c77e8  w    F .text	000000000000000b              Event_queue_element_for_exec::Event_queue_element_for_exec()
000000000055943a  w    F .text	0000000000000026              Ge_creator::~Ge_creator()
00000000007b0e2c  w    F .text	0000000000000056              in_decimal::~in_decimal()
00000000008497de  w    F .text	000000000000003a              Update_rows_log_event::is_valid() const
0000000000665294 g     F .text	00000000000001a2              calc_lookup_values_from_cond(THD*, Item*, TABLE_LIST*, st_lookup_field_values*)
00000000010875a0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_like_range_max
000000000080db0c g     F .text	00000000000001bd              Item_func_to_days::val_int_endpoint(bool, bool*)
0000000001374760 g     O .bss	0000000000000060              my_locale_is_IS
000000000082ff56 g     F .text	000000000000014e              Global_read_lock::make_global_read_lock_block_commit(THD*)
000000000061ad22 g     F .text	0000000000000074              Ed_connection::Ed_connection(THD*)
0000000000659a50  w    F .text	0000000000000046              Item_func::~Item_func()
00000000007b00dc  w    F .text	0000000000000052              Item_cond_and::Item_cond_and(THD*, Item_cond_and*)
0000000000566dd2  w    F .text	0000000000000013              Item::remove_dependence_processor(unsigned char*)
000000000065c8a6  w    F .text	000000000000001b              List_iterator_fast<TABLE_LIST>::rewind()
000000000073c930  w    F .text	0000000000000038              Alter_table_repair_partition_statement::Alter_table_repair_partition_statement(LEX*)
00000000005c0bfd g     F .text	000000000000008e              mysql_tmpfile
000000000070dbb0  w    F .text	0000000000000223              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000008735d2  w    F .text	000000000000002b              TRP_ROR_UNION::~TRP_ROR_UNION()
000000000136e440 g     O .bss	0000000000000008              lt_creator
000000000108c080  w    O .data.rel.ro	0000000000000358              vtable for Item_user_var_as_out_param
0000000000b5fe98 g     F .text	0000000000000088              ha_partition::rename_table(char const*, char const*)
00000000007670ac  w    F .text	000000000000007a              Field_geom::Field_geom(unsigned char*, unsigned char*, unsigned int, Field::utype, char const*, TABLE_SHARE*, unsigned int, Field::geometry_type)
000000000070f5e1 g     F .text	000000000000018e              dd_recreate_table(THD*, char const*, char const*)
00000000005bf2ae  w    F .text	000000000000001a              Query_cache_query::found_rows(unsigned long long)
00000000007ba73c  w    F .text	0000000000000011              Item_func_max::func_name() const
0000000000918dd3 g     F .text	000000000000022f              ft_simple_get_word
000000000074d40a g     F .text	00000000000000b9              Field_new_decimal::is_equal(Create_field*)
000000000136cc20 g     O .bss	0000000000000008              myisam_hton
0000000000893a94  w    F .text	000000000000002d              Gis_multi_line_string::Gis_multi_line_string()
00000000007da7f8  w    F .text	0000000000000011              Item_func_mul::func_name() const
00000000007cabd4 g     F .text	00000000000000c3              Item_func_tan::val_real()
00000000007af76c  w    F .text	0000000000000039              cmp_item_real::store_value(Item*)
00000000006987e8  w    F .text	0000000000000026              List_iterator<unsigned long long>::List_iterator(List<unsigned long long>&)
00000000005cebac  w    F .text	000000000000001b              List<Create_field>::~List()
00000000007bbc80  w    F .text	0000000000000052              Item_func_unhex::Item_func_unhex(Item*)
0000000000816148  w    F .text	0000000000000028              Item_date::fix_length_and_dec()
00000000008db152 g     F .text	0000000000000192              my_b_fill
00000000005c75f8 g     F .text	00000000000003df              select_dump::send_data(List<Item>&)
000000000073bccc  w    F .text	0000000000000026              sp_lex_keeper::~sp_lex_keeper()
0000000001370824 g     O .bss	0000000000000004              key_COND_cache_status_changed
0000000000b749e4 g     F .text	0000000000000064              _lf_dynarray_iterate
00000000006bab90  w    F .text	000000000000001f              Field_iterator_table::next()
000000000074d08e g     F .text	000000000000014c              Field_new_decimal::val_str(String*, String*)
00000000005f1e6e  w    F .text	000000000000001b              List<Name_resolution_context>::List()
00000000005986a8  w    F .text	000000000000001f              MDL_request::MDL_request()
0000000001069498  w    O .data.rel.ro	0000000000000038              vtable for Alter_table_prelocking_strategy
00000000010dc5c0 g     O .data	0000000000000040              plugin_type_initialize
00000000008f29c5 g     F .text	00000000000001f6              my_malloc
000000000059a2ea  w    F .text	0000000000000199              ACL_PROXY_USER::print_grant(String*)
00000000007b9aca  w    F .text	0000000000000038              Item_sum_udf_decimal::Item_sum_udf_decimal(st_udf_func*)
0000000000815750  w    F .text	0000000000000016              Item_func_period_add::fix_length_and_dec()
0000000000793c6a g     F .text	000000000000008e              Item_cache_real::val_str(String*)
00000000010874e0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_log
00000000006f48bc g     F .text	0000000000000104              MDL_ticket::downgrade_exclusive_lock(enum_mdl_type)
00000000007f35aa  w    F .text	0000000000000046              Item_func_database::~Item_func_database()
0000000000000000       F *UND*	0000000000000000              sprintf@@GLIBC_2.2.5
00000000008109d0 g     F .text	000000000000009f              Item_func_convert_tz::val_str(String*)
000000000090e2a4  w    F .text	0000000000000026              table_events_waits_current::~table_events_waits_current()
000000000137077c g     O .bss	0000000000000004              key_LOCK_error_log
00000000008eca56 g     F .text	0000000000000027              my_message
000000000061c028  w    F .text	000000000000001c              Prepared_statement::is_sql_prepare() const
00000000010ef5a0 g     O .data	0000000000000010              table_ews_global_by_event_name::m_field_def
00000000005595f3  w    F .text	0000000000000036              parse_date_time_format(enum_mysql_timestamp_type, st_date_time_format*)
00000000007c0ebe  w    F .text	0000000000000026              Create_func_nullif::~Create_func_nullif()
000000000092f1e9 g     F .text	00000000000002c9              sort_ft_buf_flush
0000000000674d93 g     F .text	000000000000001f              get_schema_table(enum_schema_tables)
00000000008c17fe  w    F .text	0000000000000016              Item_nodeset_context_cache::fix_length_and_dec()
00000000007d8976 g     F .text	00000000000000d2              Item_func_sp::Item_func_sp(Name_resolution_context*, sp_name*)
00000000006bb5e0  w    F .text	000000000000000f              I_P_List_no_push_back<Wait_for_flush>::set_last(Wait_for_flush**)
0000000000888e5e  w    F .text	0000000000000021              Yacc_state::reset_before_substatement()
00000000007e004c g     F .text	0000000000000146              Item_func_isclosed::val_int()
00000000008c24b2  w    F .text	0000000000000058              Item_func_xpath_sum::~Item_func_xpath_sum()
00000000010efe33 g     O .data	0000000000000001              flag_events_waits_summary_by_thread_by_event_name
0000000000767cee  w    F .text	000000000000002b              Field_bit::~Field_bit()
000000000062569d g     F .text	00000000000000b5              reset_master(THD*)
0000000000815a78  w    F .text	0000000000000021              Item_func_monthname::check_valid_arguments_processor(unsigned char*)
00000000008108d6 g     F .text	00000000000000ca              Item_func_from_unixtime::get_date(st_mysql_time*, unsigned int)
00000000006972c2 g     F .text	00000000000002ac              Table_triggers_list::process_triggers(THD*, trg_event_type, trg_action_time_type, bool)
000000000084e522 g     F .text	00000000000005c7              Old_rows_log_event::Old_rows_log_event(char const*, unsigned int, Log_event_type, Format_description_log_event const*)
00000000007e71cc g     F .text	00000000000005e8              Item_func_replace::val_str(String*)
000000000077c656  w    F .text	00000000000000a8              handler::mark_trx_read_write()
0000000000659e8a  w    F .text	0000000000000093              Arg_comparator::set_cmp_func(Item_result_field*, Item**, Item**, bool)
00000000010b4b78  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_num
00000000007dd558  w    F .text	0000000000000046              Item_func_acos::~Item_func_acos()
000000000073caaa  w    F .text	000000000000001b              List<my_var>::List()
00000000009574cc g     F .text	00000000000000a6              mi_rlast
000000000107e308  w    O .data.rel.ro	00000000000003a8              vtable for Item_bool_rowready_func2
000000000080195e g     F .text	0000000000000214              Item_sum_variance::fix_length_and_dec()
00000000007ba2ea  w    F .text	0000000000000038              Item_func_sin::Item_func_sin(Item*)
00000000008f1568 g     F .text	0000000000000068              my_getsystime
00000000007c0774  w    F .text	0000000000000041              Create_func_log::~Create_func_log()
00000000008746f4 g     F .text	0000000000000a60              opt_sum_query(THD*, TABLE_LIST*, List<Item>&, Item*)
0000000000992d72 g     F .text	0000000000000183              _myrg_init_queue
00000000012cac20 g     O .data	00000000000000b0              my_charset_utf8mb4_esperanto_uca_ci
000000000070c748  w    F .text	0000000000000033              Sys_var_have::session_value_ptr(THD*, st_mysql_lex_string*)
000000000089a74a  w    F .text	000000000000003a              field_ulonglong::get_max_arg(String*)
000000000057a5a0  w    F .text	0000000000000051              THD::reset_query()
000000000080e13c g     F .text	0000000000000074              Item_func_minute::val_int()
0000000000738aea  w    F .text	0000000000000074              Item_user_var_as_out_param::Item_user_var_as_out_param(st_mysql_lex_string)
00000000009818bc g     F .text	000000000000009d              ha_heap::index_last(unsigned char*)
00000000010b97d8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_date_format
000000000059907a  w    F .text	000000000000001c              THD::get_invoker_host()
00000000006ced14 g     F .text	0000000000000124              partition_info::set_up_defaults_for_partitioning(handler*, st_ha_create_information*, unsigned int)
00000000007e2554  w    F .text	0000000000000046              Item_func_envelope::~Item_func_envelope()
00000000007b405c g     F .text	0000000000000050              Create_func_from_days::create(THD*, Item*)
0000000000893b2a  w    F .text	000000000000002c              Gis_multi_line_string::dimension(unsigned int*, char const**) const
0000000000873672  w    F .text	000000000000002b              TRP_INDEX_MERGE::~TRP_INDEX_MERGE()
00000000005d8df6 g     F .text	0000000000000060              Warning_info::merge_with_routine_info(THD*, Warning_info*)
00000000007810c8 g     F .text	0000000000000091              Item_sp_variable::val_decimal(my_decimal*)
00000000008ecfcc g     F .text	00000000000000c5              my_free_open_file_info
000000000079917c  w    F .text	0000000000000082              Item_cache::Item_cache(enum_field_types)
0000000000566ed2  w    F .text	0000000000000012              Item::equal_fields_propagator(unsigned char*)
0000000001385c28 g     O .bss	0000000000000001              libmysql_cleartext_plugin_enabled
00000000008ed225 g     F .text	000000000000030a              my_fopen
00000000007b9962  w    F .text	0000000000000038              Item_sum_udf_float::Item_sum_udf_float(st_udf_func*)
00000000007446cb g     F .text	000000000000012e              mysql_close
00000000007d26fe g     F .text	000000000000002a              Item_func_set_user_var::cleanup()
000000000090984d g     F .text	0000000000000196              register_file_class(char const*, unsigned int, int)
00000000007be130  w    F .text	000000000000002d              Create_func_contains::Create_func_contains()
00000000007dbc28  w    F .text	000000000000000f              Item_func_sp::functype() const
00000000005ee92e g     F .text	0000000000000015              st_select_lex::get_table_join_options()
00000000005caca0 g     F .text	0000000000000038              xid_get_hash_key
00000000007bb92e  w    F .text	000000000000001b              SQL_CRYPT::SQL_CRYPT()
000000000065a96a  w    F .text	000000000000000f              QUICK_SELECT_I::clustered_pk_range()
000000000065c3ec  w    F .text	000000000000001b              List<Cached_item>::List()
0000000000920256 g     F .text	00000000000000ce              ha_myisam::ft_read(unsigned char*)
00000000007885e4 g     F .text	0000000000000069              Item_copy_float::val_decimal(my_decimal*)
000000000080a7cc  w    F .text	000000000000002b              Item_sum_min::~Item_sum_min()
000000000065c2ca  w    F .text	000000000000001b              I_List<COND_CMP>::~I_List()
000000000082da22  w    F .text	00000000000000bf              binlog_cache_data::set_binlog_cache_info(unsigned long long, unsigned long*, unsigned long*)
00000000006df604 g     F .text	00000000000001d3              Relay_log_info::clear_tables_to_lock()
00000000005b0714  w    F .text	000000000000003d              Repair_mrg_table_error_handler::Repair_mrg_table_error_handler()
00000000008a72fe g     F .text	0000000000000534              READ_INFO::read_value(int, String*)
00000000005c0c8b g     F .text	0000000000000025              thd_in_lock_tables
0000000001370860 g     O .bss	0000000000000004              key_relay_log_info_sleep_cond
00000000005f1ab8  w    F .text	000000000000001b              List<char>::List()
00000000005c5394 g     F .text	000000000000006e              select_to_file::cleanup()
00000000007b5b02 g     F .text	000000000000005d              Create_func_pointn::create(THD*, Item*, Item*)
000000000055fc80  w    F .text	0000000000000026              List_iterator_fast<unsigned long long>::List_iterator_fast(List<unsigned long long>&)
00000000007bc3f8  w    F .text	0000000000000038              Item_func_centroid::Item_func_centroid(Item*)
00000000005b0e2a  w    F .text	0000000000000026              List_iterator<TABLE_LIST>::List_iterator(List<TABLE_LIST>&)
00000000005d070e  w    F .text	000000000000002d              List<Alter_drop>::push_back(Alter_drop*, st_mem_root*)
000000000090ffb6 g     F .text	0000000000000010              table_file_summary_by_event_name::delete_all_rows()
00000000013707c0 g     O .bss	0000000000000004              key_mutex_slave_reporting_capability_err_lock
0000000000759c2c g     F .text	00000000000000fb              Field_varstring::val_str(String*, String*)
00000000007b0bd2  w    F .text	0000000000000046              cmp_item_datetime::~cmp_item_datetime()
00000000007816ca g     F .text	000000000000007b              Item_name_const::val_real()
0000000001394cb8 g     O .bss	0000000000000004              key_BITMAP_mutex
000000000070e64c  w    F .text	0000000000000041              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::~Sys_var_unsigned()
0000000000765482  w    F .text	000000000000001a              Field_tiny::reset()
00000000005cf0d4  w    F .text	000000000000001b              List<List<Item> >::~List()
00000000007ba798  w    F .text	0000000000000016              Item_func_length::fix_length_and_dec()
0000000000765fb4  w    F .text	000000000000000f              Field_timestamp::binary() const
00000000010b4f30  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_int
00000000007afe8e  w    F .text	0000000000000026              Item_func_isnotnull::fix_length_and_dec()
00000000006f6033  w    F .text	0000000000000016              I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>::prev_ptr(MDL_ticket*)
00000000007bbd96  w    F .text	000000000000006a              Item_func_like_range::~Item_func_like_range()
000000000121a140 g     O .data	0000000000000100              to_lower_latin5_bin
0000000000737ba4  w    F .text	0000000000000038              Item_sum_int::Item_sum_int(Item*)
00000000006e88c6 g     F .text	000000000000000b              thd_scheduler::~thd_scheduler()
00000000007db156  w    F .text	0000000000000058              Item_udf_func::~Item_udf_func()
0000000000764356  w    F .text	0000000000000027              Field::data_length()
000000000076c2de g     F .text	0000000000000134              filesort_free_buffers(TABLE*, bool)
000000000061b422 g     F .text	000000000000000f              Protocol_local::write()
00000000006baa74  w    F .text	0000000000000044              View_creation_ctx::View_creation_ctx(THD*)
0000000000784b4c g     F .text	00000000000000bc              Item_decimal::Item_decimal(long long, bool)
000000000055fb5e  w    F .text	000000000000004d              String::String(char*, unsigned int, charset_info_st*)
00000000005bfab8  w    F .text	00000000000000a4              Query_cache_query::unlock_reading()
000000000073762a  w    F .text	0000000000000043              ErrConvString::ErrConvString(char const*, charset_info_st*)
0000000000808bee  w    F .text	000000000000000f              Item_sum_int::result_type() const
0000000000607ffc  w    F .text	000000000000001a              I_List<Item_change_record>::is_empty()
0000000001074068  w    O .data.rel.ro	0000000000000028              vtable for Ha_delete_table_error_handler
0000000001373d60 g     O .bss	0000000000000004              key_thread_event_worker
000000000078b81c g     F .text	000000000000003f              Item::make_field(Send_field*)
0000000000765f82  w    F .text	000000000000000f              Field_timestamp::derivation() const
00000000006bb03e  w    F .text	000000000000002e              List<String>::List(List<String> const&, st_mem_root*)
00000000006fa62a g     F .text	0000000000000169              trans_commit_implicit(THD*)
0000000000889baa  w    F .text	0000000000000036              Dynamic_array<Item_splocal*>::Dynamic_array(unsigned int, unsigned int)
000000000080dcca g     F .text	00000000000000b8              Item_func_dayofyear::val_int()
00000000007ea43c g     F .text	0000000000000051              Item_func_password::alloc(THD*, char const*, unsigned long)
00000000007f3f0a  w    F .text	0000000000000058              Item_func_concat::~Item_func_concat()
00000000007382da  w    F .text	0000000000000056              Item_func_numhybrid::Item_func_numhybrid(Item*)
0000000001370840 g     O .bss	0000000000000004              key_master_info_data_cond
0000000000856052 g     F .text	000000000000004a              TIME_to_ulonglong_date
0000000001373d58 g     O .bss	0000000000000004              key_COND_queue_state
000000000136fea0 g     O .bss	0000000000000008              des_key_file
00000000007bba72  w    F .text	0000000000000052              Item_func_format::Item_func_format(Item*, Item*)
00000000005e9964  w    F .text	000000000000002b              select_create::~select_create()
000000000076ffea  w    F .text	00000000000000ac              Field::unpack(unsigned char*, unsigned char const*)
00000000008c2000  w    F .text	000000000000002b              Item_nodeset_func_elementbyindex::~Item_nodeset_func_elementbyindex()
00000000007a1208 g     F .text	000000000000004d              Item_func_equal::val_int()
000000000078b70e g     F .text	000000000000010d              Item::init_make_field(Send_field*, enum_field_types)
0000000000799588  w    F .text	000000000000000f              Item_cache_real::result_type() const
00000000007640da  w    F .text	000000000000002d              get_set_pack_length(int)
0000000000618cf9 g     F .text	0000000000000006              non-virtual thunk to Prepared_statement::type() const
0000000000678d12  w    F .text	000000000000002b              Item_blob::~Item_blob()
0000000000852388  w    F .text	0000000000000029              Write_rows_log_event_old::do_apply_event(Relay_log_info const*)
00000000008606a8 g     F .text	00000000000002b3              TRP_ROR_INTERSECT::make_quick(PARAM*, bool, st_mem_root*)
0000000001217d60 g     O .data	0000000000000100              to_lower_greek_bin
00000000006d4b3a g     F .text	0000000000000499              table_def::calc_field_size(unsigned int, unsigned char*) const
0000000000817cce  w    F .text	0000000000000046              Item_func_curtime_local::~Item_func_curtime_local()
000000000074c8ac g     F .text	0000000000000201              Field_new_decimal::store(double)
00000000007d6e56 g     F .text	00000000000000e6              Item_func_get_system_var::eq(Item const*, bool) const
0000000000748b9a g     F .text	000000000000005f              Field::warn_if_overflow(int)
000000000083ded2 g     F .text	00000000000002cb              Slave_log_event::Slave_log_event(THD*, Relay_log_info*)
0000000000599348  w    F .text	000000000000012f              hash_filo::clear(bool)
00000000005e77f6 g     F .text	00000000000006b1              select_create::prepare(List<Item>&, st_select_lex_unit*)
0000000000828914 g     F .text	00000000000000df              MYSQL_BIN_LOG::rotate_and_purge(bool)
00000000005b88c8 g     F .text	0000000000000090              Query_cache::invalidate_query_block_list(THD*, Query_cache_block_table*)
00000000007658c2  w    F .text	0000000000000022              Field_long::key_type() const
0000000000851dec g     F .text	0000000000000098              Update_rows_log_event_old::Update_rows_log_event_old(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
00000000007dabb8  w    F .text	0000000000000046              Item_func_int_val::~Item_func_int_val()
000000000079a62a  w    F .text	000000000000002b              Item_direct_view_ref::~Item_direct_view_ref()
0000000000889ae8  w    F .text	000000000000001b              List<sp_head::bp_t>::~List()
0000000000b67152 g     F .text	0000000000000099              ha_partition::lock_count() const
000000000121cb20 g     O .data	0000000000000101              ctype_cp1250_polish_ci
000000000088ce28  w    F .text	000000000000002d              Select_fetch_into_spvars::Select_fetch_into_spvars()
000000000136cc74 g     O .bss	0000000000000004              ha_open_options
000000000073ae0e  w    F .text	0000000000000040              Item_typecast_maybe_null::Item_typecast_maybe_null(Item*)
00000000007f3ce8  w    F .text	0000000000000058              Item_func_reverse::~Item_func_reverse()
0000000000806794 g     F .text	000000000000033d              Item_func_group_concat::Item_func_group_concat(Name_resolution_context*, bool, List<Item>*, SQL_I_List<st_order> const&, String*)
00000000008131dc g     F .text	00000000000003d5              Item_func_add_time::val_datetime(st_mysql_time*, date_time_format_types*)
000000000057b0b9 g     F .text	000000000000006b              sp_cache_invalidate()
000000000066ba5e g     F .text	00000000000000b5              fill_schema_engines(THD*, TABLE_LIST*, Item*)
00000000007b2b8a g     F .text	0000000000000050              Create_func_centroid::create(THD*, Item*)
00000000007ae55a  w    F .text	0000000000000013              Item_bool_rowready_func2::subst_argument_checker(unsigned char**)
000000000073c7e0  w    F .text	0000000000000038              Check_table_statement::Check_table_statement(LEX*)
00000000007dbe44  w    F .text	000000000000004d              User_level_lock::~User_level_lock()
00000000007afb9c  w    F .text	0000000000000015              Item_func_in::compare_collation()
0000000000947519 g     F .text	00000000000001b4              mi_log
00000000012c9720 g     O .data	00000000000000b0              my_charset_utf8_turkish_uca_ci
000000000074558b g     F .text	0000000000000064              mysql_fetch_lengths
00000000013864f0 g     O .bss	0000000000000008              Create_func_from_unixtime::s_singleton
00000000005f0182 g     F .text	0000000000000051              st_select_lex::alloc_index_hints(THD*)
00000000008c0f76  w    F .text	0000000000000011              Item_nodeset_func::func_name() const
0000000000817410  w    F .text	0000000000000046              Item_func_microsecond::~Item_func_microsecond()
000000000098178c g     F .text	0000000000000091              ha_heap::index_prev(unsigned char*)
000000000073ca4a  w    F .text	0000000000000045              Resignal_statement::Resignal_statement(LEX*, sp_cond_type const*, Set_signal_information const&)
000000000136a8e0 g     O .data	00000000000000b0              my_charset_filename
00000000007f1baa  w    F .text	0000000000000011              Item_func_ltrim::mode_name() const
00000000007dda3e  w    F .text	0000000000000046              Item_func_int_div::~Item_func_int_div()
00000000005ee054 g     F .text	000000000000007d              st_select_lex_node::include_neighbour(st_select_lex_node*)
000000000138c996 g     O .bss	0000000000000001              my_disable_flush_key_blocks
0000000000802a0c g     F .text	0000000000000044              Item_sum_bit::val_int()
0000000000738a58  w    F .text	0000000000000091              Item_func_get_user_var::Item_func_get_user_var(st_mysql_lex_string)
00000000005586bb  w    F .text	0000000000000025              Sql_alloc::operator new(unsigned long, st_mem_root*)
00000000010ca170  w    O .data.rel.ro	0000000000000028              vtable for PFS_check_intact
00000000005a30c1 g     F .text	0000000000000225              tdc_open_view(THD*, TABLE_LIST*, char const*, char*, unsigned int, st_mem_root*, unsigned int)
0000000001215980 g     O .data	0000000000000100              to_upper_cp1257_general_ci
0000000000658906  w    F .text	0000000000000084              my_decimal::my_decimal(my_decimal const&)
00000000005ce4e6  w    F .text	0000000000000016              xid_t::null()
000000000081ccce g     F .text	00000000000001ab              Log_to_csv_event_handler::activate_log(THD*, unsigned int)
00000000007c702e g     F .text	00000000000000ad              Item_decimal_typecast::val_int()
0000000000942af8 g     F .text	0000000000000421              mi_status
00000000007c999e g     F .text	0000000000000065              Item_func_neg::real_op()
0000000001376c40 g     O .bss	0000000000000008              mdl_locks_cache_size
00000000007c1a9c  w    F .text	000000000000002d              Create_func_sec_to_time::Create_func_sec_to_time()
0000000000659e74  w    F .text	0000000000000015              Item_func_sp::get_sp_result_field()
0000000000808d1e  w    F .text	0000000000000056              Item_sum_count::Item_sum_count(THD*, Item_sum_count*)
00000000005cea2e  w    F .text	000000000000003a              st_select_lex_node::~st_select_lex_node()
00000000005e8ba8  w    F .text	0000000000000027              THD::set_current_time()
0000000001214e40 g     O .data	0000000000000100              to_upper_cp1256_general_ci
00000000005d0498  w    F .text	0000000000000026              List<Key_part_spec>::prepand(List<Key_part_spec>*)
00000000009108e6  w    F .text	0000000000000041              table_file_summary_by_instance::~table_file_summary_by_instance()
00000000007c4a1c g     F .text	0000000000000147              Item_func::print_op(String*, enum_query_type)
00000000005d39f2 g     F .text	0000000000000094              load_db_opt_by_name(THD*, char const*, st_ha_create_information*)
00000000008870c4 g     F .text	00000000000000f1              sp_instr_hpush_jump::opt_mark(sp_head*, List<sp_instr>*)
00000000007ae34c  w    F .text	000000000000000f              Le_creator::eqne_op() const
000000000089b884 g     F .text	0000000000000175              Materialized_cursor::open(JOIN*)
000000000067963c g     F .text	0000000000000071              String::set_or_copy_aligned(char const*, unsigned int, charset_info_st*)
00000000007fb458 g     F .text	000000000000002b              subselect_uniquesubquery_engine::~subselect_uniquesubquery_engine()
0000000000990dd2 g     F .text	00000000000000fd              myrg_rfirst
000000000059965a  w    F .text	00000000000001e5              ACL_USER::copy(st_mem_root*)
00000000005677b0  w    F .text	000000000000004f              Item_partition_func_safe_string::Item_partition_func_safe_string(char const*, unsigned int, charset_info_st*)
00000000007c3126  w    F .text	000000000000002b              Item_func_like_range_max::~Item_func_like_range_max()
00000000005650f6  w    F .text	000000000000001a              Diagnostics_area::is_error() const
00000000010be738  w    O .data.rel.ro	0000000000000398              vtable for Item_func_minute
000000000095e9b1 g     F .text	000000000000005d              _mi_update_static_record
0000000000698976  w    F .text	0000000000000026              Deprecated_trigger_syntax_handler::~Deprecated_trigger_syntax_handler()
00000000012cd7c0 g     O .data	00000000000000d8              my_charset_ucs2_handler
0000000001376260 g     O .bss	0000000000000060              my_locale_es_US
000000000089384e  w    F .text	000000000000002d              Gis_line_string::Gis_line_string()
000000000059869c  w    F .text	000000000000000b              MDL_key::MDL_key()
000000000120ace0 g     O .data	0000000000000100              sort_order_latin1_danish_ci
000000000061b158 g     F .text	0000000000000068              Ed_connection::add_result_set(Ed_result_set*)
00000000007ba11a  w    F .text	0000000000000038              Item_func_log10::Item_func_log10(Item*)
0000000001370870 g     O .bss	0000000000000004              key_COND_thread_cache
00000000007b0c44  w    F .text	0000000000000056              cmp_item_decimal::~cmp_item_decimal()
000000000065b7c6  w    F .text	0000000000000011              store_key_item::name() const
00000000007dd804  w    F .text	0000000000000046              Item_func_log::~Item_func_log()
000000000077765a g     F .text	0000000000000033              handler::ha_truncate()
00000000007959b6 g     F .text	000000000000017d              Item_type_holder::get_full_info(Item*)
000000000087c8e5 g     F .text	0000000000000292              sp_drop_db_routines(THD*, char*)
0000000000911e3a g     F .text	0000000000000028              table_setup_timers::create()
000000000079a95a  w    F .text	000000000000002b              Item_copy_string::~Item_copy_string()
000000000088b10c  w    F .text	0000000000000026              List_iterator_fast<sp_label>::List_iterator_fast(List<sp_label>&)
0000000000809a82  w    F .text	000000000000000f              Item_udf_sum::sum_func() const
0000000000739d3e  w    F .text	000000000000005c              Item_func_trim::Item_func_trim(Item*)
00000000006f1f6e g     F .text	000000000000008b              MDL_context::destroy()
00000000005efb00 g     F .text	00000000000000d2              LEX::first_lists_tables_same()
00000000010cd8e8 g     O .data	0000000000000008              query_cache_min_res_unit
00000000006bb61c  w    F .text	0000000000000041              Wait_for_flush::~Wait_for_flush()
00000000007d3df6 g     F .text	000000000000006f              Item_func_set_user_var::is_null_result()
000000000095b52e g     F .text	000000000000005a              _mi_get_static_key
00000000007bafde  w    F .text	0000000000000038              Item_func_inet_aton::Item_func_inet_aton(Item*)
00000000005d8e56 g     F .text	000000000000010e              Warning_info::push_warning(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*)
000000000069dd8b g     F .text	00000000000002ab              compare_records(TABLE const*)
00000000012167c0 g     O .data	0000000000000101              ctype_cp1250_bin
00000000008158be  w    F .text	0000000000000026              Item_func_dayofmonth::fix_length_and_dec()
00000000005f21bc  w    F .text	0000000000000032              list_node::list_node()
0000000000558de0  w    F .text	000000000000001b              String::~String()
000000000059984c  w    F .text	000000000000001b              ACL_PROXY_USER::ACL_PROXY_USER()
00000000006983b9  w    F .text	000000000000001a              alloc_lex_string(st_mem_root*)
00000000007ae95e  w    F .text	0000000000000040              Item_func_lt::Item_func_lt(Item*, Item*)
00000000006cdc7a g     F .text	00000000000003fb              Events::load_events_from_db(THD*)
00000000007668dc  w    F .text	000000000000000f              Field_datetime::can_be_compared_as_longlong() const
00000000005b080c  w    F .text	0000000000000026              MDL_deadlock_handler::~MDL_deadlock_handler()
0000000000737b1c  w    F .text	0000000000000043              Item_sum_num::Item_sum_num(Item*)
00000000010c1650  w    O .data.rel.ro	0000000000000078              vtable for Create_file_log_event
0000000000812aaa g     F .text	00000000000000cb              Item_time_typecast::val_str(String*)
0000000000606a48  w    F .text	000000000000000f              Item_func::type() const
0000000000749694 g     F .text	0000000000000142              Field::convert_decimal2longlong(my_decimal const*, bool, int*)
0000000000848d9e  w    F .text	000000000000000f              Query_log_event::get_post_header_size_for_derived()
00000000009679b2 g     F .text	00000000000000fa              rtree_delete_key
0000000001374220 g     O .bss	0000000000000060              my_locale_en_US
00000000007f9c60 g     F .text	00000000000000c2              subselect_single_select_engine::cleanup()
00000000005bf3fc  w    F .text	0000000000000011              Query_cache_table::key_length()
0000000000678742  w    F .text	0000000000000026              List_iterator_fast<char>::init(List<char>&)
0000000000b5c3ee g     F .text	000000000000010b              ha_tina::rnd_init(bool)
00000000006bac1c  w    F .text	000000000000001e              Field_iterator_natural_join::name()
000000000136a560 g     O .data	00000000000000b0              my_charset_utf8_general_ci
00000000005f1f1a  w    F .text	000000000000001d              List_iterator<Create_field>::operator++(int)
00000000007e3ff2 g     F .text	0000000000000130              Item_str_func::val_int()
00000000007cb486 g     F .text	0000000000000074              Item_func_ceiling::real_op()
000000000090d6f8 g     F .text	0000000000000010              table_events_waits_current::delete_all_rows()
0000000000808d74  w    F .text	000000000000002a              Item_sum_count::sum_func() const
00000000007bed16  w    F .text	0000000000000041              Create_func_encode::~Create_func_encode()
00000000005a5e59 g     F .text	0000000000000452              open_ltable(THD*, TABLE_LIST*, thr_lock_type, unsigned int)
00000000008ba094 g     F .text	000000000000014a              Unique::Unique(int (*)(void*, void const*, void const*), void*, unsigned int, unsigned long long)
00000000007bfd7e  w    F .text	0000000000000041              Create_func_intersects::~Create_func_intersects()
00000000008d6cd2 g     F .text	00000000000001d5              get_date
00000000007f25ba  w    F .text	000000000000000f              Item_func_set_collation::functype() const
0000000000ba894d g     F .text	000000000000009d              new_VioSSLConnectorFd
0000000000889dae  w    F .text	000000000000001d              List_iterator_fast<sp_head::bp_t>::operator++(int)
000000000080a6a2  w    F .text	0000000000000046              Item_sum_or::~Item_sum_or()
00000000005ce05c  w    F .text	000000000000002d              Discrete_intervals_list::Discrete_intervals_list()
00000000006b5f78 g     F .text	00000000000000a1              TABLE::fill_item_list(List<Item>*) const
00000000007fc296  w    F .text	0000000000000015              Item_subselect::get_const_item_cache()
00000000007a654e g     F .text	0000000000000077              in_string::in_string(unsigned int, int (*)(void const*, void const*, void const*), charset_info_st*)
00000000007bde70  w    F .text	0000000000000041              Create_func_coercibility::~Create_func_coercibility()
0000000000781ece g     F .text	00000000000002f3              Item::split_sum_func2(THD*, Item**, List<Item>&, Item**, bool)
00000000007b14e4  w    F .text	0000000000000046              Item_func_ne::~Item_func_ne()
0000000000569a1e g     F .text	000000000000003d              sys_var::make_symbolic(void (*)(void*, unsigned long, char const*))
000000000056713a  w    F .text	000000000000002b              Item_basic_constant::~Item_basic_constant()
0000000000889760  w    F .text	000000000000002b              sp_instr_cpop::~sp_instr_cpop()
0000000001385c40 g     O .bss	00000000000000f0              des_keyschedule
000000000083e19e g     F .text	0000000000000056              Slave_log_event::~Slave_log_event()
0000000000964a4e g     F .text	000000000000007e              mi_flush_bulk_insert
0000000000b702b8 g     F .text	0000000000000060              ha_partition::enable_indexes(unsigned int)
00000000007af26e  w    F .text	000000000000003c              cmp_item::cmp_item()
000000000092e607 g     F .text	00000000000007f7              sort_write_record
00000000006a3e44 g     F .text	0000000000000a8d              multi_update::do_updates()
0000000000816ace  w    F .text	000000000000000f              Item_date_typecast::field_type() const
000000000090e122  w    F .text	0000000000000025              pos_events_waits_current::pos_events_waits_current()
0000000000873fc2  w    F .text	0000000000000026              List<SEL_IMERGE>::concat(List<SEL_IMERGE>*)
000000000054f8ce g     F .text	000000000000001b              my_str_free_mysqld
0000000000799854  w    F .text	0000000000000022              Item_cache_row::addr(unsigned int)
000000000074e008 g     F .text	000000000000010e              Field_short::store(char const*, unsigned int, charset_info_st*)
000000000079ddb0 g     F .text	0000000000000323              Arg_comparator::can_compare_as_dates(Item*, Item*, unsigned long long*)
000000000088b6d6 g     F .text	0000000000000065              sp_rcontext::set_return_value(THD*, Item**)
0000000000618668 g     F .text	0000000000000052              Execute_sql_statement::Execute_sql_statement(st_mysql_lex_string)
00000000007f0c5e g     F .text	000000000000030e              Item_func_compress::val_str(String*)
0000000000876a4e g     F .text	0000000000000045              Item_proc_string::val_decimal(my_decimal*)
00000000005c1f7c g     F .text	0000000000000196              THD::raise_error_printf(unsigned int, ...)
00000000008c1fba  w    F .text	0000000000000046              Item_nodeset_func_elementbyindex::~Item_nodeset_func_elementbyindex()
00000000007e1bb2  w    F .text	000000000000001e              Item_func_numinteriorring::fix_length_and_dec()
00000000009053ee g     F .text	000000000000006e              ha_perfschema::rename_table(char const*, char const*)
0000000001086dc0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_sleep
00000000007ae234  w    F .text	000000000000000f              Ne_creator::eqne_op() const
00000000005b1462  w    F .text	000000000000002b              Field_iterator_view::~Field_iterator_view()
0000000000889476  w    F .text	0000000000000066              sp_instr_hpush_jump::~sp_instr_hpush_jump()
00000000005dd3fe  w    F .text	0000000000000012              Sql_handler_lock_error_handler::need_reopen() const
00000000005e96f0  w    F .text	0000000000000026              I_List<Delayed_insert>::push_back(Delayed_insert*)
000000000077b9a0  w    F .text	0000000000000068              handler::index_read_map(unsigned char*, unsigned char const*, unsigned long, ha_rkey_function)
00000000005ead50 g     F .text	000000000000004a              Yacc_state::~Yacc_state()
000000000082bad6 g     F .text	0000000000000231              TC_LOG_MMAP::close()
00000000005cffac  w    F .text	000000000000001b              List<Key>::List()
00000000007bded8  w    F .text	000000000000002d              Create_func_compress::Create_func_compress()
00000000007c04ee  w    F .text	000000000000002d              Create_func_like_range_max::Create_func_like_range_max()
0000000000900629 g     F .text	0000000000000020              reset_tree
000000000080935c  w    F .text	000000000000002b              Item_sum_variance::~Item_sum_variance()
00000000005ce784  w    F .text	000000000000001b              List<Key_part_spec>::~List()
0000000000765f52  w    F .text	000000000000000f              Field_timestamp::match_collation_to_optimize_range() const
000000000070cffe  w    F .text	000000000000001a              List<set_var_base>::head()
00000000008772bc  w    F .text	0000000000000046              Item_proc_int::~Item_proc_int()
000000000056af94  w    F .text	000000000000005f              ErrConvString::ErrConvString(String*)
000000000058ad99 g     F .text	000000000000038e              check_grant_routine(THD*, unsigned long, TABLE_LIST*, bool, bool)
0000000000808ae0  w    F .text	0000000000000046              Item_sum_num::~Item_sum_num()
000000000085250a  w    F .text	0000000000000046              Write_rows_log_event_old::~Write_rows_log_event_old()
0000000000871eee  w    F .text	000000000000000b              QUICK_SELECT_I::save_last_pos()
0000000000873dac  w    F .text	0000000000000026              List_iterator<QUICK_RANGE>::init(List<QUICK_RANGE>&)
0000000000874322  w    F .text	0000000000000041              QUICK_RANGE_SELECT_GEOM::~QUICK_RANGE_SELECT_GEOM()
00000000006d82c8 g     F .text	000000000000013f              my_locale_by_name(char const*)
0000000000618cea g     F .text	000000000000000f              Prepared_statement::type() const
0000000001213ce0 g     O .data	0000000000000100              to_upper_cp1251_general_ci
00000000007f553c g     F .text	0000000000000156              Item_maxmin_subselect::Item_maxmin_subselect(THD*, Item_subselect*, st_select_lex*, bool)
0000000000856772 g     F .text	00000000000001d8              SEL_TREE::SEL_TREE(SEL_TREE*, RANGE_OPT_PARAM*)
000000000138bf48 g     O .bss	0000000000000008              my_defaults_file
0000000000809576  w    F .text	0000000000000046              Item_sum_hybrid::~Item_sum_hybrid()
0000000000816664  w    F .text	000000000000000f              Item_func_now_local::functype() const
00000000007bf774  w    F .text	000000000000002d              Create_func_geometryn::Create_func_geometryn()
00000000010ef4e0 g     O .data	0000000000000058              table_events_waits_summary_by_thread_by_event_name::m_share
0000000000816f46  w    F .text	0000000000000011              Item_func_add_time::func_name() const
000000000065e8b7 g     F .text	000000000000087b              mysqld_show_create(THD*, TABLE_LIST*)
00000000009815be g     F .text	00000000000000b8              ha_heap::index_read_last_map(unsigned char*, unsigned char const*, unsigned long)
00000000006cc2ce g     F .text	000000000000054c              Events::update_event(THD*, Event_parse_data*, st_mysql_lex_string*, st_mysql_lex_string*)
000000000065922a  w    F .text	0000000000000038              Field_blob::reset()
0000000000609b76 g     F .text	0000000000000037              plugin_is_ready(st_mysql_lex_string const*, int)
00000000006785af  w    F .text	0000000000000043              make_upper(char*)
0000000000848d62  w    F .text	000000000000000f              Query_log_event::get_type_code()
00000000007dadc4  w    F .text	0000000000000011              Item_func_locate::func_name() const
0000000001386798 g     O .bss	0000000000000008              Create_func_touches::s_singleton
00000000007b0ba6  w    F .text	000000000000002b              Item_func_in::~Item_func_in()
0000000000802642 g     F .text	00000000000000ce              Item_sum_hybrid::cleanup()
0000000000893cae  w    F .text	000000000000005f              Gis_read_stream::skip_space()
000000000077bc08  w    F .text	0000000000000016              handler::start_stmt(THD*, thr_lock_type)
0000000000607320  w    F .text	0000000000000015              THD::get_row_count_func() const
0000000000830fba g     F .text	00000000000000d5              convert_handler_error(int, THD*, TABLE*)
0000000000b65850 g     F .text	0000000000000288              ha_partition::setup_engine_array(st_mem_root*)
00000000007b98aa  w    F .text	0000000000000056              Item_udf_sum::Item_udf_sum(st_udf_func*)
00000000012ca020 g     O .data	00000000000000b0              my_charset_utf8mb4_icelandic_uca_ci
0000000001085df0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_not_all
0000000000000000       F *UND*	0000000000000000              sin@@GLIBC_2.2.5
0000000000567334  w    F .text	0000000000000050              Item_int::clone_item()
00000000006de5f4 g     F .text	000000000000016f              Relay_log_info::inc_group_relay_log_pos(unsigned long long, bool)
0000000000738fa6  w    F .text	000000000000003f              Item_func_isfalse::Item_func_isfalse(Item*)
00000000007e3260  w    F .text	0000000000000025              Item_row::val_real()
0000000000708844  w    F .text	000000000000002b              PolyLock_rwlock::wrlock()
0000000001209460 g     O .data	0000000000000100              sort_order_latin2_general_ci
00000000007377cc  w    F .text	0000000000000031              DTCollation::set(charset_info_st*)
0000000000905ab6  w    F .text	000000000000000f              ha_perfschema::max_supported_key_length() const
0000000000b6d98a g     F .text	0000000000000080              ha_partition::get_biggest_used_partition(unsigned int*)
000000000073b994  w    F .text	000000000000003d              set_var_user::set_var_user(Item_func_set_user_var*)
000000000065ab52  w    F .text	0000000000000026              FT_SELECT::~FT_SELECT()
000000000055a677 g     F .text	000000000000025e              net_write_command
0000000000603b24 g     F .text	0000000000000211              st_select_lex::nest_last_join(THD*)
000000000069da8e  w    F .text	0000000000000047              TMP_TABLE_PARAM::~TMP_TABLE_PARAM()
000000000084b632 g     F .text	0000000000000026              Slave_reporting_capability::~Slave_reporting_capability()
0000000000785d82 g     F .text	000000000000009e              Item_param::set_double(double)
00000000006ac3d7 g     F .text	0000000000000060              fn_rext(char*)
000000000089a784  w    F .text	00000000000000dd              field_ulonglong::avg(String*, unsigned long long)
000000000080f682 g     F .text	0000000000000073              Item_func_curtime::val_str(String*)
00000000012168e0 g     O .data	0000000000000100              to_lower_cp1250_bin
0000000001086850  w    O .data.rel.ro	0000000000000030              vtable for Create_func_xml_extractvalue
000000000138e369 g     O .bss	0000000000000001              myisam_delay_key_write
00000000007b1362  w    F .text	000000000000002b              Item_func_lt::~Item_func_lt()
00000000005c998c g     F .text	000000000000018c              Security_context::destroy()
0000000000568bf6 g     F .text	000000000000007d              Rpl_filter::free_string_array(st_dynamic_array*)
000000000138c428 g     O .bss	0000000000000001              my_getopt_skip_unknown
000000000073782c  w    F .text	000000000000000f              Settable_routine_parameter::set_out_param_info(Send_field*)
000000000073b140  w    F .text	00000000000000d8              Item_trigger_field::Item_trigger_field(Name_resolution_context*, Item_trigger_field::row_version_type, char const*, unsigned long, bool)
00000000009175b6 g     F .text	0000000000000075              reset_events_waits_history_long()
00000000007da9d8  w    F .text	0000000000000046              Item_real_func::~Item_real_func()
00000000007a1382 g     F .text	000000000000006c              Item_func_le::val_int()
00000000008733ce  w    F .text	000000000000002b              TRP_RANGE::~TRP_RANGE()
0000000001385c18 g     O .bss	0000000000000004              mysql_port
0000000000817104  w    F .text	0000000000000013              Item_func_microsecond::check_partition_func_processor(unsigned char*)
00000000005661f9 g     F .text	0000000000000427              show_slave_hosts(THD*)
000000000077bdca  w    F .text	000000000000000f              handler::set_part_info(partition_info*)
000000000136cca8 g     O .bss	0000000000000008              back_log
0000000000658cf4  w    F .text	000000000000003b              Field::move_field(unsigned char*, unsigned char*, unsigned char)
0000000000750484 g     F .text	00000000000000a6              Field_long::sql_type(String&) const
000000000136fc00 g     O .bss	0000000000000008              orig_argv
000000000090c150  w    F .text	0000000000000041              PFS_updatable_acl::~PFS_updatable_acl()
00000000005d7d24  w    F .text	0000000000000012              st_select_lex::next_select()
0000000001087fc0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_date_format
00000000007bb6f4  w    F .text	000000000000005c              Item_func_des_encrypt::Item_func_des_encrypt(Item*)
00000000010eaa00 g     O .data	0000000000000010              my_locales_deprecated
000000000073aff4  w    F .text	0000000000000048              Item_func_get_format::Item_func_get_format(enum_mysql_timestamp_type, Item*)
000000000136e430 g     O .bss	0000000000000008              ne_creator
00000000005ce25e  w    F .text	0000000000000056              String::String(char const*, charset_info_st*)
00000000005ddd52 g     F .text	00000000000001de              check_view_single_update(List<Item>&, List<Item>*, TABLE_LIST*, unsigned long long*)
000000000073b48c  w    F .text	0000000000000062              select_to_file::select_to_file(sql_exchange*)
00000000006c77c2 g     F .text	0000000000000260              Event_basic::load_string_fields(Field**, ...)
00000000007ba8b4  w    F .text	0000000000000011              Item_func_bit_length::func_name() const
000000000073c5d0  w    F .text	0000000000000055              sp_pcontext::get_current_case_expr_id() const
0000000000569172  w    F .text	0000000000000046              i_string::~i_string()
0000000000000000       F *UND*	0000000000000000              compress
000000000084db88 g     F .text	000000000000006a              Write_rows_log_event_old::do_exec_row(TABLE*)
0000000000816674  w    F .text	0000000000000011              Item_func_now_utc::func_name() const
000000000091836a  w    F .text	0000000000000016              pos_all_instr_class::has_more_view()
0000000000b7bdb1 g     F .text	00000000000000a5              my_hash_sort_8bit_bin
00000000007bf1c6  w    F .text	0000000000000041              Create_func_field::~Create_func_field()
0000000000558bfc  w    F .text	0000000000000077              base_ilist::move_elements_to(base_ilist*)
000000000083feb0 g     F .text	00000000000000e5              Execute_load_log_event::Execute_load_log_event(char const*, unsigned int, Format_description_log_event const*)
0000000000b6ae2a g     F .text	00000000000003af              ha_partition::handle_unordered_scan_next_partition(unsigned char*)
00000000010af9c8  w    O .data.rel.ro	00000000000003a0              vtable for Item_subselect
00000000007db6e4  w    F .text	0000000000000014              Item_func_get_user_var::get_settable_routine_parameter()
0000000000848be2  w    F .text	0000000000000082              sql_ex_info::new_format()
0000000000809b7e  w    F .text	000000000000004f              Item_sum_udf_float::val_int()
00000000005d0314  w    F .text	000000000000001b              List<Key_part_spec>::List()
0000000000b6db0c g     F .text	0000000000000270              ha_partition::records_in_range(unsigned int, st_key_range*, st_key_range*)
00000000005b0784  w    F .text	0000000000000045              MDL_deadlock_handler::MDL_deadlock_handler(Open_table_context*)
0000000000977af9 g     F .text	0000000000000a3c              thr_write_keys
0000000000799a9e  w    F .text	0000000000000056              Item_aggregate_ref::Item_aggregate_ref(Name_resolution_context*, Item**, char const*, char const*)
000000000073b374  w    F .text	000000000000003d              Sql_statement::Sql_statement(LEX*)
000000000091ff9e g     F .text	000000000000027f              ha_myisam::get_auto_increment(unsigned long long, unsigned long long, unsigned long long, unsigned long long*, unsigned long long*)
0000000001211920 g     O .data	0000000000000100              to_lower_latin7_general_cs
000000000059ea34 g     F .text	0000000000000334              close_thread_table(THD*, TABLE**)
000000000108b220  w    O .data.rel.ro	0000000000000398              vtable for Item_func_bit_xor
0000000000840558 g     F .text	0000000000000043              Begin_load_query_log_event::Begin_load_query_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000008c2182  w    F .text	0000000000000046              Item_nodeset_func_ancestorbyname::~Item_nodeset_func_ancestorbyname()
00000000006062d7 g     F .text	0000000000000175              parse_sql(THD*, Parser_state*, Object_creation_ctx*)
000000000061c1fe  w    F .text	000000000000001d              List_iterator<st_mysql_lex_string>::operator++(int)
00000000005b0f2c  w    F .text	0000000000000025              List<Natural_join_column>::push_back(Natural_join_column*)
00000000007b10fa  w    F .text	0000000000000046              Item_func_ifnull::~Item_func_ifnull()
00000000007dae10  w    F .text	0000000000000011              Item_func_ord::func_name() const
00000000007bb598  w    F .text	000000000000004a              Item_func_reverse::Item_func_reverse(Item*)
00000000005ce658  w    F .text	000000000000001d              Protocol::Protocol()
0000000000750a94 g     F .text	00000000000000ac              Field_longlong::val_int()
00000000005d0418  w    F .text	000000000000001a              List<Key_part_spec>::head_ref()
000000000087263e  w    F .text	000000000000004a              SEL_ARG::cmp_max_to_min(SEL_ARG const*) const
00000000010f1d48 g     O .data	0000000000000004              builtin_innobase_sizeof_struct_st_plugin
00000000008d083f g     F .text	000000000000002d              my_checksum
000000000080718e g     F .text	000000000000009c              Item_func_group_concat::clear()
00000000007bec52  w    F .text	000000000000002d              Create_func_elt::Create_func_elt()
0000000000690c50  w    F .text	0000000000000021              st_global_ddl_log::st_global_ddl_log()
00000000005cf160  w    F .text	0000000000000021              st_ha_create_information::~st_ha_create_information()
0000000001212040 g     O .data	0000000000000100              to_upper_macce_bin
0000000000817bbe  w    F .text	000000000000002b              Item_func_now_utc::~Item_func_now_utc()
00000000007c2816  w    F .text	000000000000002d              Create_func_uncompress::Create_func_uncompress()
000000000083c528 g     F .text	0000000000000023              Rand_log_event::do_update_pos(Relay_log_info*)
0000000000708dea  w    F .text	0000000000000026              Sys_var_enum::global_save_default(THD*, set_var*)
00000000005629fa g     F .text	00000000000000ad              Protocol::write()
00000000013865b8 g     O .bss	0000000000000008              Create_func_length::s_singleton
0000000000619f88 g     F .text	0000000000000096              Prepared_statement::validate_metadata(Prepared_statement*)
000000000065b516  w    F .text	00000000000000a4              store_key::copy()
00000000007ae792  w    F .text	000000000000000f              Item_func_equal::rev_functype() const
00000000005d1964  w    F .text	0000000000000026              List_iterator_fast<my_var>::List_iterator_fast(List<my_var>&)
0000000000b5bf74 g     F .text	00000000000001d4              ha_tina::update_row(unsigned char const*, unsigned char*)
00000000008a9210  w    F .text	0000000000000026              List_iterator_fast<XML_TAG>::List_iterator_fast(List<XML_TAG>&)
000000000108e810  w    O .data.rel.ro	0000000000000398              vtable for Item_func_udf_int
00000000013863b8 g     O .bss	0000000000000008              Create_func_coercibility::s_singleton
00000000007bfd50  w    F .text	000000000000002d              Create_func_intersects::Create_func_intersects()
00000000007086be  w    F .text	0000000000000012              Log_to_file_event_handler::get_mysql_log()
00000000006c9e82 g     F .text	0000000000000528              Event_timed::get_create_event(THD*, String*)
0000000000691694 g     F .text	0000000000000455              TEST_join(JOIN*)
00000000007e0da2  w    F .text	000000000000001f              Gis_read_stream::~Gis_read_stream()
00000000009059a6  w    F .text	000000000000008a              handler::psi_close()
00000000008a5dac g     F .text	00000000000000d9              READ_INFO::~READ_INFO()
00000000005ce9ec  w    F .text	000000000000001b              Item_subselect::assigned(bool)
000000000087403a  w    F .text	0000000000000025              List<QUICK_RANGE_SELECT>::push_back(QUICK_RANGE_SELECT*)
0000000001386640 g     O .bss	0000000000000008              Create_func_name_const::s_singleton
00000000008010f4 g     F .text	0000000000000050              Item_sum_avg::copy_or_same(THD*)
0000000000871de0  w    F .text	0000000000000065              QUICK_RANGE::make_max_endpoint(st_key_range*)
0000000000566a0e  w    F .text	0000000000000040              Item::const_during_execution() const
00000000005599ba  w    F .text	0000000000000026              I_List<i_string_pair>::append(i_string_pair*)
0000000000000000       F *UND*	0000000000000000              strstr@@GLIBC_2.2.5
0000000000b6cfd2 g     F .text	0000000000000100              ha_partition::reset()
000000000121cd40 g     O .data	0000000000000100              to_upper_cp1250_polish_ci
000000000078708a g     F .text	0000000000000206              Item_param::query_val_str(THD*, String*) const
00000000012b2480 g     O .data	0000000000000600              page00Adata
00000000005d1816  w    F .text	000000000000001b              Alter_column::~Alter_column()
0000000000754a14 g     F .text	000000000000006a              Field_year::store(double)
00000000010ca748  w    O .data.rel.ro	0000000000000068              vtable for table_all_instr
0000000000b997e3 g     F .text	0000000000000063              decimal_add
00000000007ae29a  w    F .text	0000000000000025              Lt_creator::symbol(bool) const
00000000007bc2d8  w    F .text	0000000000000038              Item_func_geometry_from_wkb::Item_func_geometry_from_wkb(Item*)
000000000079075a g     F .text	0000000000000045              Item_ref::save_org_in_field(Field*)
00000000006bad2a  w    F .text	0000000000000052              Item_direct_ref::Item_direct_ref(TABLE_LIST*, Item**, char const*, bool)
0000000000565774  w    F .text	000000000000001d              List_iterator_fast<Item>::operator++(int)
00000000006877b5 g     F .text	000000000000019e              mysql_create_table(THD*, TABLE_LIST*, st_ha_create_information*, Alter_info*)
00000000007c039c  w    F .text	0000000000000026              Create_func_least::~Create_func_least()
0000000000872094  w    F .text	0000000000000093              QUICK_ROR_INTERSECT_SELECT::is_valid()
00000000005cfe14  w    F .text	0000000000000056              select_dumpvar::~select_dumpvar()
0000000000748232 g     F .text	0000000000000020              init_client_errs
000000000056e304 g     F .text	0000000000000120              init_floatvar_from_file(float*, st_io_cache*, float)
0000000000c430e0 g     O .rodata	0000000000000008              MDL_scoped_lock::m_waiting_incompatible
00000000007bae20  w    F .text	0000000000000038              Item_func_udf_str::Item_func_udf_str(st_udf_func*)
000000000056b2cc  w    F .text	000000000000002b              PolyLock_mutex::wrlock()
0000000000817ffe  w    F .text	0000000000000046              Item_func_dayname::~Item_func_dayname()
0000000000778b33 g     F .text	000000000000011f              ha_init_key_cache
00000000005d7e38  w    F .text	000000000000004c              select_union::select_union()
000000000061c184  w    F .text	000000000000002d              st_lex_local::st_lex_local()
00000000013765c0 g     O .bss	0000000000000060              my_locale_no_NO
000000000077bf3e  w    F .text	0000000000000035              handler::cmp_ref(unsigned char const*, unsigned char const*)
00000000009506d7 g     F .text	0000000000000d77              _mi_read_pack_info
000000000080a994  w    F .text	000000000000002b              Aggregator_simple::~Aggregator_simple()
00000000005ac52d g     F .text	000000000000014e              get_key_map_from_key_list(Bitmap<64u>*, TABLE*, List<String>*)
00000000007e271c  w    F .text	0000000000000046              Item_func_geometry_from_wkb::~Item_func_geometry_from_wkb()
00000000005b00ec  w    F .text	000000000000004b              THD::fill_derived_tables()
00000000008899a2  w    F .text	0000000000000056              sp_instr_set_case_expr::~sp_instr_set_case_expr()
00000000007bcb2c  w    F .text	0000000000000045              Item_date_func::Item_date_func(Item*, Item*, Item*)
000000000086b800 g     F .text	00000000000000c9              QUICK_RANGE_SELECT::add_keys_and_lengths(String*, String*)
000000000080985c  w    F .text	0000000000000040              Item_sum_and::Item_sum_and(THD*, Item_sum_and*)
00000000008523ec  w    F .text	000000000000000f              Delete_rows_log_event_old::get_type_code()
0000000000758ac4 g     F .text	0000000000000097              Field_string::compatible_field_size(unsigned int, Relay_log_info*, unsigned short, int*)
000000000106d440  w    O .data.rel.ro	0000000000000398              vtable for Item_str_timefunc
00000000007f1d6c  w    F .text	0000000000000058              Item_func_encode::~Item_func_encode()
000000000057a2ae  w    F .text	00000000000000b4              THD::enter_cond(st_mysql_cond*, st_mysql_mutex*, char const*)
00000000007a1322 g     F .text	0000000000000060              Item_func_gt::val_int()
00000000007648fa  w    F .text	000000000000000f              Field::set_charset(charset_info_st*)
0000000000000000       F *UND*	0000000000000000              io_submit@@LIBAIO_0.1
00000000007e1914  w    F .text	00000000000000aa              Item_func_spatial_rel::func_name() const
0000000000755342 g     F .text	0000000000000103              Field_date::send_binary(Protocol*)
00000000006bac82  w    F .text	0000000000000012              Field_iterator_natural_join::column_ref()
0000000000b6de9c g     F .text	00000000000000ab              ha_partition::read_time(unsigned int, unsigned int, unsigned long long)
000000000083fad4 g     F .text	0000000000000066              Delete_file_log_event::Delete_file_log_event(THD*, char const*, bool)
0000000000b9043f g     F .text	0000000000000039              my_strnxfrmlen_unicode_full_bin
00000000007dff3c g     F .text	000000000000010f              Item_func_issimple::val_int()
00000000008c26f6  w    F .text	000000000000002b              Item_xpath_cast_number::~Item_xpath_cast_number()
00000000007bece8  w    F .text	000000000000002d              Create_func_encode::Create_func_encode()
00000000007d4048 g     F .text	00000000000000a6              Item_func_set_user_var::make_field(Send_field*)
00000000010a3fd0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_hex
00000000007b5c08 g     F .text	000000000000006e              Create_func_radians::create(THD*, Item*)
000000000098bb24 g     F .text	0000000000000318              ha_myisammrg::open(char const*, int, unsigned int)
000000000088120a g     F .text	0000000000000062              sp_head::recursion_level_error(THD*)
0000000000565464  w    F .text	000000000000001c              Protocol::prepare_for_send(unsigned int)
000000000083c15c g     F .text	00000000000001ab              Rand_log_event::Rand_log_event(char const*, Format_description_log_event const*)
00000000007511c4 g     F .text	00000000000000e5              Field_float::store(double)
00000000007fc08e  w    F .text	0000000000000069              Item_ref_null_helper::Item_ref_null_helper(Name_resolution_context*, Item_in_subselect*, Item**, char const*, char const*)
00000000007f18f0  w    F .text	000000000000003a              Item_str_func::make_empty_result()
0000000000678f2c g     F .text	0000000000000168              String::realloc(unsigned int)
00000000007be28a  w    F .text	0000000000000041              Create_func_convert_tz::~Create_func_convert_tz()
00000000007add00  w    F .text	0000000000000055              Item_func::agg_arg_charsets_for_comparison(DTCollation&, Item**, unsigned int, int)
00000000006dd574 g     F .text	0000000000000869              init_relay_log_pos(Relay_log_info*, char const*, unsigned long long, bool, char const**, bool)
00000000007ca6ec g     F .text	0000000000000121              Item_func_acos::val_real()
000000000055625a g     F .text	00000000000001b7              violet_log(char const*, ...)
0000000000b9b30f g     F .text	0000000000000382              my_fcvt
00000000005e9878  w    F .text	000000000000001a              I_List<delayed_row>::get()
00000000007667c0  w    F .text	000000000000000f              Field_datetime::key_type() const
000000000088f576 g     F .text	000000000000013a              Gis_polygon::exterior_ring(String*) const
000000000090c312  w    F .text	0000000000000041              PFS_check_intact::~PFS_check_intact()
00000000006acd4b g     F .text	0000000000000199              free_table_share(TABLE_SHARE*)
0000000000b9667b g     F .text	0000000000000112              double2decimal
00000000010ca4b8  w    O .data.rel.ro	0000000000000048              vtable for table_performance_timers
000000000055fc80  w    F .text	0000000000000026              List_iterator_fast<unsigned long long>::List_iterator_fast(List<unsigned long long>&)
0000000000b5e210 g     F .text	0000000000000047              Transparent_file::Transparent_file()
00000000008f18ec g     F .text	00000000000001b1              my_setwd
000000000075bc4c g     F .text	000000000000004f              Field_blob::cmp(unsigned char const*, unsigned int, unsigned char const*, unsigned int)
000000000083c836 g     F .text	000000000000007a              Xid_log_event::do_apply_event(Relay_log_info const*)
000000000138c8c4 g     O .bss	0000000000000004              _my_signals
0000000000672e55 g     F .text	0000000000000f2a              copy_event_to_schema_table(THD*, TABLE*, TABLE*)
000000000055c2a6  w    F .text	000000000000001b              I_List<NAMED_ILINK>::I_List()
000000000097fb40 g     F .text	0000000000000322              _mi_ft_update
000000000056b4f2  w    F .text	0000000000000046              set_var_password::~set_var_password()
00000000005ce25e  w    F .text	0000000000000056              String::String(char const*, charset_info_st*)
0000000000b7fbed g     F .text	000000000000012c              my_hash_sort_latin1_de
000000000085224e  w    F .text	000000000000001c              Old_rows_log_event::get_db()
00000000007d55dc g     F .text	000000000000002d              Item_func_get_system_var::is_written_to_binlog()
00000000012c9000 g     O .data	0000000000000058              my_collation_any_uca_handler
00000000006eb264 g     F .text	0000000000000105              Event_parse_data::init_name(THD*, sp_name*)
0000000000980b8f g     F .text	0000000000000064              heap_init(void*)
0000000000690ee8 g     F .text	0000000000000150              print_where(Item*, char const*, enum_query_type)
0000000000598f7e  w    F .text	0000000000000070              THD::set_current_stmt_binlog_format_row()
000000000057a9fc  w    F .text	0000000000000030              Log_event::shall_skip(Relay_log_info*)
0000000000981500 g     F .text	00000000000000be              ha_heap::index_read_map(unsigned char*, unsigned char const*, unsigned long, ha_rkey_function)
000000000080d6f0 g     F .text	0000000000000091              Item_func_to_days::val_int()
0000000000754b92 g     F .text	00000000000000a8              Field_year::send_binary(Protocol*)
000000000084da8e g     F .text	00000000000000f9              Write_rows_log_event_old::do_prepare_row(THD*, Relay_log_info const*, TABLE*, unsigned char const*, unsigned char const**)
00000000007b350a g     F .text	000000000000011e              Create_func_des_encrypt::create_native(THD*, st_mysql_lex_string, List<Item>*)
00000000006806cc g     F .text	000000000000037a              mysql_rm_table(THD*, TABLE_LIST*, char, char)
000000000073a912  w    F .text	000000000000001a              Item_str_timefunc::val_int()
0000000000606dc4  w    F .text	000000000000000f              Item_bool_func::is_bool_func()
00000000005cdf4c  w    F .text	000000000000003f              Discrete_interval::Discrete_interval(unsigned long long, unsigned long long, unsigned long long)
0000000000912e38 g     F .text	0000000000000021              table_cond_instances::reset_position()
000000000089387c  w    F .text	0000000000000041              Gis_line_string::~Gis_line_string()
0000000000b5f98e g     F .text	000000000000014d              ha_partition::~ha_partition()
0000000001375600 g     O .bss	0000000000000060              my_locale_ar_MA
00000000008731c8  w    F .text	000000000000001b              List<QUICK_RANGE_SELECT>::~List()
0000000000678a1c  w    F .text	0000000000000025              List<st_mysql_lex_string>::push_back(st_mysql_lex_string*)
000000000056b5aa  w    F .text	000000000000002b              set_var_user::~set_var_user()
00000000007dd0e4  w    F .text	0000000000000046              Item_func_ceiling::~Item_func_ceiling()
00000000008c2156  w    F .text	000000000000002b              Item_nodeset_func_parentbyname::~Item_nodeset_func_parentbyname()
00000000005e89f8  w    F .text	0000000000000030              Table_triggers_list::has_delete_triggers()
000000000056670a  w    F .text	000000000000002b              Item::~Item()
0000000000709a0e  w    F .text	0000000000000013              Sys_var_external_user::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000007859c4 g     F .text	0000000000000052              Item_null::eq(Item const*, bool) const
000000000090c37a  w    F .text	000000000000002d              PFS_internal_schema_access::PFS_internal_schema_access()
0000000001386748 g     O .bss	0000000000000008              Create_func_str_to_date::s_singleton
000000000073871c  w    F .text	0000000000000038              Item_func_neg::Item_func_neg(Item*)
00000000012bee80 g     O .data	0000000000000600              page02Fdata
00000000005cfd86  w    F .text	0000000000000046              select_subselect::~select_subselect()
00000000010c3ce0  w    O .data.rel.ro	00000000000000d0              vtable for Gis_geometry_collection
00000000008f47af g     F .text	000000000000017e              my_tell
00000000007ef738 g     F .text	00000000000003db              Item_load_file::val_str(String*)
0000000000839f60 g     F .text	000000000000045a              Load_log_event::copy_log_event(char const*, unsigned long, int, Format_description_log_event const*)
00000000007e0752 g     F .text	0000000000000120              Item_func_y::val_real()
00000000005b094a  w    F .text	000000000000001b              List_iterator_fast<Natural_join_column>::List_iterator_fast()
00000000007c099e  w    F .text	000000000000002d              Create_func_ltrim::Create_func_ltrim()
0000000000647d7b g     F .text	0000000000000094              safe_index_read(st_join_table*)
0000000000790574 g     F .text	0000000000000086              Item_ref::is_null()
0000000001209360 g     O .data	0000000000000100              to_upper_latin2_general_ci
00000000007ba06a  w    F .text	0000000000000038              Item_func_log::Item_func_log(Item*)
000000000098efc2  w    F .text	000000000000000f              ha_myisammrg::max_supported_key_part_length() const
00000000006071f4  w    F .text	000000000000002d              Parser_state::Parser_state()
00000000005cfdf8  w    F .text	000000000000001b              List<my_var>::~List()
00000000007be004  w    F .text	000000000000002d              Create_func_concat_ws::Create_func_concat_ws()
00000000008fd33a g     F .text	0000000000000111              thr_lock_init
00000000006a4f2c  w    F .text	000000000000001d              List_iterator_fast<TABLE>::operator++(int)
000000000077b6b2  w    F .text	0000000000000044              Ha_trx_info::next() const
000000000073c8c0  w    F .text	0000000000000038              Alter_table_check_partition_statement::Alter_table_check_partition_statement(LEX*)
00000000005b87b4 g     F .text	00000000000000a5              Query_cache::invalidate_table(THD*, unsigned char*, unsigned int)
00000000006f0448 g     F .text	0000000000000032              unregister_trans_observer
00000000008eb324 g     F .text	00000000000000a0              bitmap_copy
00000000005eef80 g     F .text	000000000000016d              Query_tables_list::reset_query_tables_list(bool)
0000000000774f40 g     F .text	0000000000000029              handler::ha_data(THD*) const
000000000090de62  w    F .text	0000000000000035              PFS_engine_table::~PFS_engine_table()
00000000007b0024  w    F .text	000000000000000f              Item_equal::select_optimize() const
000000000136f3c0 g     O .bss	0000000000000070              LOCK_delayed_status
00000000007bc882  w    F .text	0000000000000040              Item_func_period_diff::Item_func_period_diff(Item*, Item*)
000000000082d526  w    F .text	000000000000002b              User_var_log_event::~User_var_log_event()
0000000000567216  w    F .text	0000000000000062              Item_int::Item_int(char const*, long long, unsigned int)
00000000007dacc2  w    F .text	0000000000000026              Item_func_rand::cleanup()
0000000000ba3af6 g     F .text	0000000000000378              str2int
000000000074c10c g     F .text	0000000000000374              Field_new_decimal::store_value(my_decimal const*)
000000000138cc18 g     O .bss	0000000000000008              thread_lost
0000000000b70b4c g     F .text	00000000000004f9              ha_partition::check_for_upgrade(st_ha_check_opt*)
00000000007086d0  w    F .text	0000000000000027              LOGGER::lock_exclusive()
000000000070d15a  w    F .text	000000000000000b              List_iterator_fast<set_var_base>::remove()
000000000081681c  w    F .text	000000000000000f              Item_func_sec_to_time::result_as_longlong()
00000000013708f0 g     O .bss	0000000000000004              key_file_trn
00000000005ce63c  w    F .text	000000000000001b              PROFILING::set_thd(THD*)
00000000005ef9ec g     F .text	0000000000000114              LEX::unlink_first_table(bool*)
000000000107c920  w    O .data.rel.ro	0000000000000358              vtable for Item_static_string_func
0000000001217720 g     O .data	0000000000000101              ctype_dec8_bin
00000000007ed2c6 g     F .text	0000000000000293              Item_func_repeat::val_str(String*)
0000000001069990  w    O .data.rel.ro	0000000000000078              vtable for select_to_file
000000000061c1b2  w    F .text	0000000000000026              List<Item>::List(List<Item> const&)
0000000000849604  w    F .text	000000000000001f              Rows_log_event::get_flags(unsigned short) const
000000000138cdb0 g     O .bss	0000000000000008              rwlock_class_max
00000000005ee88a g     F .text	000000000000001e              st_select_lex::outer_select()
00000000008cacce g     F .text	00000000000000a1              Alter_table_analyze_partition_statement::execute(THD*)
0000000000598e62  w    F .text	0000000000000029              Internal_error_handler::Internal_error_handler()
000000000077b79c  w    F .text	0000000000000053              handler::scan_time()
00000000007d50fa g     F .text	00000000000000f3              Item_func_get_user_var::set_value(THD*, sp_rcontext*, Item**)
00000000007a00c0 g     F .text	00000000000000d0              Arg_comparator::compare_e_int()
0000000001386370 g     O .bss	0000000000000008              Create_func_asin::s_singleton
0000000000874132  w    F .text	0000000000000074              List<QUICK_SELECT_I>::delete_elements()
000000000136cbf9 g     O .bss	0000000000000001              opt_using_transactions
00000000007aeb2c  w    F .text	0000000000000015              Item_func_between::compare_collation()
00000000007beb54  w    F .text	0000000000000041              Create_func_dimension::~Create_func_dimension()
0000000000892bd4 g     F .text	0000000000000255              Gis_geometry_collection::geometry_n(unsigned int, String*) const
00000000007ade58  w    F .text	0000000000000046              Item_func_bit::~Item_func_bit()
00000000007fbf76 g     F .text	0000000000000033              subselect_uniquesubquery_engine::change_result(Item_subselect*, select_subselect*)
0000000000876de4  w    F .text	0000000000000071              Item_proc_real::set(char const*, unsigned int, charset_info_st*)
00000000007db9c6  w    F .text	0000000000000046              Item_func_sp::~Item_func_sp()
000000000073aa36  w    F .text	000000000000002d              Item_func_curdate::Item_func_curdate()
00000000006f29f6 g     F .text	00000000000000d6              MDL_lock::has_pending_conflicting_lock(enum_mdl_type)
0000000000738e1e  w    F .text	000000000000003f              Item_func_istrue::Item_func_istrue(Item*)
000000000106c1d0  w    O .data.rel.ro	0000000000000028              vtable for Signal_common
00000000006f0918  w    F .text	000000000000006b              Delegate::Delegate()
00000000007bb40c  w    F .text	0000000000000038              Item_func_sha::Item_func_sha(Item*)
00000000008727b2  w    F .text	00000000000000ab              SEL_ARG::clone_first(SEL_ARG*)
0000000000607ede  w    F .text	000000000000001a              List<Name_resolution_context>::pop()
000000000078637c g     F .text	0000000000000351              Item_param::set_from_user_var(THD*, user_var_entry const*)
00000000007e1666  w    F .text	0000000000000011              Item_func_envelope::func_name() const
000000000106d080  w    O .data.rel.ro	0000000000000020              vtable for sp_lex_keeper
000000000070c6b8  w    F .text	0000000000000033              Sys_var_have::session_update(THD*, set_var*)
0000000001214f40 g     O .data	0000000000000100              sort_order_cp1256_general_ci
0000000000796396  w    F .text	0000000000000063              Field_geom::Field_geom(unsigned int, bool, char const*, TABLE_SHARE*, Field::geometry_type)
00000000005ccc4e g     F .text	00000000000000cd              THD::binlog_remove_pending_rows_event(bool, bool)
000000000057df43 g     F .text	000000000000043d              acl_getroot(Security_context*, char*, char*, char*, char*)
0000000000678438  w    F .text	000000000000001b              I_List<thread_info>::I_List()
00000000007f279c  w    F .text	0000000000000011              Item_func_uncompress::func_name() const
00000000008c2110  w    F .text	0000000000000046              Item_nodeset_func_parentbyname::~Item_nodeset_func_parentbyname()
00000000007d3272 g     F .text	00000000000002b9              Item_func_set_user_var::check(bool)
00000000007ba4f2  w    F .text	0000000000000077              Item_func_units::Item_func_units(char*, Item*, double, double)
00000000013753c0 g     O .bss	0000000000000060              my_locale_ar_EG
000000000079821e  w    F .text	0000000000000046              Item_ref::~Item_ref()
0000000001206fe0 g     O .data	00000000000000b0              my_charset_eucjpms_japanese_ci
00000000007e16ec  w    F .text	0000000000000061              Item_func_spatial_decomp_n::func_name() const
00000000007bcc30  w    F .text	0000000000000065              Item_func_date_format::Item_func_date_format(Item*, Item*, bool)
00000000007a0640 g     F .text	000000000000008e              Item_func_truth::val_bool()
000000000080a43c  w    F .text	000000000000002b              Item_sum_udf_decimal::~Item_sum_udf_decimal()
0000000000848eac  w    F .text	000000000000006a              Load_log_event::~Load_log_event()
0000000000650f69 g     F .text	00000000000008c1              setup_copy_fields(THD*, TMP_TABLE_PARAM*, Item**, List<Item>&, List<Item>&, unsigned int, List<Item>&)
00000000006dfa08  w    F .text	0000000000000016              Relay_log_info::unset_long_find_row_note_printed()
00000000008872b0 g     F .text	00000000000000b6              sp_instr_hreturn::execute(THD*, unsigned int*)
00000000007dcd1e  w    F .text	000000000000006a              Item_func_locate::~Item_func_locate()
0000000001086e50  w    O .data.rel.ro	0000000000000030              vtable for Create_func_sha2
0000000000837670 g     F .text	000000000000004b              Query_log_event::do_update_pos(Relay_log_info*)
000000000082dcd8  w    F .text	000000000000002d              binlog_cache_mngr::~binlog_cache_mngr()
00000000007604fe g     F .text	000000000000009b              Field_bit::sql_type(String&) const
000000000097f32c g     F .text	0000000000000215              _mi_ft_segiterator
000000000078864e g     F .text	000000000000006d              Item_copy_float::save_in_field(Field*, bool)
0000000000814fc0 g     F .text	00000000000000e2              Item_func_str_to_date::val_str(String*)
00000000007c1844  w    F .text	000000000000002d              Create_func_round::Create_func_round()
000000000088e2fe g     F .text	00000000000001be              Gis_line_string::get_data_as_wkt(String*, char const**) const
00000000009086b4 g     F .text	00000000000001e5              init_sync_class(unsigned int, unsigned int, unsigned int)
0000000000764116  w    F .text	000000000000003a              Field::~Field()
000000000136cb70 g       .data	0000000000000000              _edata
00000000007bc538  w    F .text	0000000000000038              Item_func_issimple::Item_func_issimple(Item*)
00000000006f3aec g     F .text	00000000000001df              MDL_context::acquire_locks(I_P_List<MDL_request, I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>, I_P_List_counter, I_P_List_no_push_back<MDL_request> >*, unsigned long)
000000000073a00c  w    F .text	000000000000004a              Item_func_soundex::Item_func_soundex(Item*)
00000000005bf6a0  w    F .text	0000000000000042              Query_cache_wait_state::~Query_cache_wait_state()
00000000007ba0e2  w    F .text	0000000000000038              Item_func_log2::Item_func_log2(Item*)
00000000007dbe44  w    F .text	000000000000004d              User_level_lock::~User_level_lock()
00000000007ae7d8  w    F .text	0000000000000040              Item_func_ge::Item_func_ge(Item*, Item*)
0000000000000000       F *UND*	0000000000000000              socket@@GLIBC_2.2.5
00000000007b6c2e g     F .text	00000000000000c0              Create_func_uuid::create(THD*)
00000000005ee620 g     F .text	000000000000000f              st_select_lex_node::get_table_list()
00000000005b05b6  w    F .text	000000000000002b              Query_log_event::~Query_log_event()
000000000088945a  w    F .text	000000000000001b              List<sp_cond_type>::~List()
0000000000b742ad g     F .text	0000000000000067              lf_alloc_destroy
000000000082d552  w    F .text	000000000000002d              Stop_log_event::Stop_log_event()
00000000008998d8  w    F .text	000000000000005d              Procedure::~Procedure()
0000000001374e80 g     O .bss	0000000000000060              my_locale_sq_AL
0000000000989783 g     F .text	00000000000000a9              heap_close
0000000000606026 g     F .text	00000000000001f7              test_if_data_home_dir
0000000000563b0e g     F .text	0000000000000158              Protocol_text::store(st_mysql_time*)
000000000077abba g     F .text	0000000000000170              handler::ha_write_row(unsigned char*)
00000000008491d4  w    F .text	000000000000000f              Stop_log_event::get_type_code()
00000000007bc430  w    F .text	0000000000000038              Item_func_envelope::Item_func_envelope(Item*)
0000000000cdb4e0 g     O .rodata	0000000000000040              ft_keysegs
0000000000796112  w    F .text	0000000000000080              Field_newdate::Field_newdate(bool, char const*, charset_info_st*)
00000000005f1552  w    F .text	000000000000006d              Mem_root_array<st_order*, true>::Mem_root_array(st_mem_root*)
00000000005b01c0  w    F .text	000000000000005b              THD::change_item_tree(Item**, Item*)
000000000056702a  w    F .text	000000000000003e              Item::is_outer_field() const
000000000120a4c0 g     O .data	0000000000000100              to_lower_cp1251_bulgarian_ci
00000000007395ba  w    F .text	00000000000000ad              Item_func_like::Item_func_like(Item*, Item*, Item*, bool)
00000000007aff76  w    F .text	000000000000002c              Item_func_regex::print(String*, enum_query_type)
00000000010ca470  w    O .data.rel.ro	0000000000000048              vtable for table_file_summary_by_event_name
000000000120d0a0 g     O .data	0000000000000100              to_upper_greek_general_ci
00000000007f1984  w    F .text	0000000000000011              Item_func_concat::func_name() const
000000000080924c  w    F .text	000000000000000b              Item_sum_variance::no_rows_in_result()
00000000007bfc24  w    F .text	000000000000002d              Create_func_instr::Create_func_instr()
000000000059f714 g     F .text	0000000000000098              find_table_in_list(TABLE_LIST*, TABLE_LIST* TABLE_LIST::*, char const*, char const*)
00000000007b16f2  w    F .text	000000000000002b              Item_func_nop_all::~Item_func_nop_all()
00000000007af73e  w    F .text	000000000000002d              cmp_item_real::cmp_item_real()
0000000000678428  w    F .text	000000000000000f              thread_info::operator delete(void*, unsigned long)
00000000013707ec g     O .bss	0000000000000004              key_LOCK_thd_remove
0000000000678726  w    F .text	000000000000001b              List_iterator_fast<char>::List_iterator_fast()
0000000000b94614 g     F .text	00000000000000c5              my_string_repertoire
0000000000604968 g     F .text	0000000000000021              comp_lt_creator(bool)
0000000000872518  w    F .text	0000000000000013              SEL_ARG::maybe_smaller()
00000000006c738c g     F .text	0000000000000198              Event_creation_ctx::load_from_db(THD*, st_mem_root*, char const*, char const*, TABLE*, Stored_program_creation_ctx**)
000000000078e956 g     F .text	0000000000000169              Item_field::update_value_transformer(unsigned char*)
0000000000837a16 g     F .text	000000000000012d              Start_log_event_v3::Start_log_event_v3(char const*, unsigned int, Format_description_log_event const*)
00000000007bb060  w    F .text	000000000000004a              Item_func_is_used_lock::Item_func_is_used_lock(Item*)
0000000000889b20  w    F .text	000000000000001b              List<sp_instr>::~List()
00000000007dd046  w    F .text	000000000000002b              Item_func_round::~Item_func_round()
0000000000748772 g     F .text	00000000000000fc              Field_num::prepend_zeros(String*)
00000000007ddab0  w    F .text	0000000000000046              Item_func_div::~Item_func_div()
000000000057abf6  w    F .text	0000000000000012              Heartbeat_log_event::get_log_ident()
00000000005c03ad g     F .text	0000000000000029              get_var_key
00000000006f9f4c  w    F .text	0000000000000046              Check_table_statement::~Check_table_statement()
00000000006a4dba  w    F .text	000000000000006e              setup_fields_with_no_wrap(THD*, Item**, List<Item>&, enum_mark_columns, List<Item>*, bool)
0000000000612b9c  w    F .text	0000000000000032              sys_var_pluginvar::global_value_ptr(THD*, st_mysql_lex_string*)
000000000098a6e4 g     F .text	00000000000000d5              heap_delete_table
00000000007a431a g     F .text	00000000000000db              Item_func_if::val_str(String*)
00000000006f0a5c  w    F .text	000000000000001b              Binlog_storage_delegate::~Binlog_storage_delegate()
00000000007626b9 g     F .text	000000000000005b              pack_length_to_packflag(unsigned int)
000000000093fc13 g     F .text	00000000000002c7              _mi_cmp_dynamic_record
00000000009001dc g     F .text	0000000000000297              init_tree
00000000007b12aa  w    F .text	0000000000000046              Item_func_strcmp::~Item_func_strcmp()
0000000000785f32 g     F .text	00000000000000ad              Item_param::set_decimal(my_decimal const*)
00000000005f2026 g     F .text	0000000000000131              base_list::base_list(base_list const&, st_mem_root*)
0000000000808cac  w    F .text	0000000000000046              Item_sum_int::~Item_sum_int()
000000000090e168  w    F .text	0000000000000025              pos_events_waits_current::next_thread()
000000000088a792 g     F .text	00000000000000a7              sp_pcontext::find_variable(unsigned int)
00000000012133a0 g     O .data	0000000000000200              to_uni_latin1_general_cs
00000000010e06e0 g     O .data	00000000000001e0              referential_constraints_fields_info
0000000000658c14  w    F .text	0000000000000047              Field::is_real_null(long long)
00000000008e918f g     F .text	000000000000001d              my_aes_get_size
00000000006206c8  w    F .text	000000000000001b              st_debug_sync_globals::st_debug_sync_globals()
0000000001265800 g     O .data	0000000000000800              uni_to_cs
00000000007c0af8  w    F .text	0000000000000041              Create_func_maketime::~Create_func_maketime()
00000000007b65ce g     F .text	0000000000000055              Create_func_startpoint::create(THD*, Item*)
00000000008ece05 g     F .text	00000000000001c7              my_set_max_open_files
0000000001386758 g     O .bss	0000000000000008              Create_func_substr_index::s_singleton
000000000082cf86  w    F .text	0000000000000019              THD::clear_binlog_table_maps()
00000000007f3932  w    F .text	000000000000002b              Item_func_substr_index::~Item_func_substr_index()
0000000000748088 g     F .text	000000000000019d              writefrm(char const*, unsigned char const*, unsigned long)
00000000006f511a  w    F .text	0000000000000012              MDL_key::ptr() const
000000000090fd28 g     F .text	000000000000016d              table_file_instances::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000005e60e4 g     F .text	00000000000000fe              select_insert::~select_insert()
000000000090ff8e g     F .text	0000000000000028              table_file_summary_by_event_name::create()
00000000010a92a8  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_trim
0000000000559682  w    F .text	000000000000001f              Buffered_logs::Buffered_logs()
0000000000897f5c g     F .text	0000000000000323              field_longlong::get_opt_type(String*, unsigned long long)
00000000008fb419 g     F .text	000000000000010d              mysql_sha1_input
00000000006f5636  w    F .text	0000000000000038              MDL_scoped_lock::MDL_scoped_lock(MDL_key const*)
00000000010700c0  w    O .data.rel.ro	0000000000000298              vtable for Field_varstring
00000000007b22bc g     F .text	00000000000000bb              Create_func_arg1::create_func(THD*, st_mysql_lex_string, List<Item>*)
00000000010ae718  w    O .data.rel.ro	0000000000000090              vtable for subselect_single_select_engine
00000000007c48f8 g     F .text	0000000000000015              Item_func::not_null_tables() const
0000000000804c26 g     F .text	00000000000000f4              Item_avg_field::Item_avg_field(Item_result, Item_sum_avg*)
00000000006f4d8c g     F .text	0000000000000092              MDL_context::set_lock_duration(MDL_ticket*, enum_mdl_duration)
0000000000b6cbee g     F .text	00000000000003e4              ha_partition::extra(ha_extra_function)
000000000055d26f g     F .text	00000000000000ad              mysql_plugin_options
00000000005dac1d g     F .text	00000000000013bf              mysql_ha_read(THD*, TABLE_LIST*, enum_ha_read_modes, char*, List<Item>*, ha_rkey_function, Item*, unsigned long long, unsigned long long)
0000000000776ad8 g     F .text	0000000000000186              handler::check_collation_compatibility()
000000000067f51c g     F .text	00000000000000ee              sync_ddl_log()
00000000008479d2 g     F .text	000000000000005e              Delete_rows_log_event::Delete_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
000000000087fc52 g     F .text	0000000000000209              sp_head::init(LEX*)
000000000097e986 g     F .text	00000000000005e5              ft_init_nlq_search
000000000088ee08 g     F .text	00000000000001e7              Gis_polygon::init_from_wkb(char const*, unsigned int, Geometry::wkbByteOrder, String*)
00000000007dc418  w    F .text	0000000000000046              Item_user_var_as_out_param::~Item_user_var_as_out_param()
0000000000566682  w    F .text	000000000000002f              DTCollation::set_numeric()
000000000056b124  w    F .text	0000000000000022              sys_var::global_var_ptr()
00000000013877e0 g     O .bss	0000000000000410              tc_log_mmap
00000000005cdf8c  w    F .text	0000000000000087              Discrete_interval::merge_if_contiguous(unsigned long long, unsigned long long, unsigned long long)
000000000065c69e  w    F .text	000000000000001b              List_iterator<Item>::remove()
000000000106b3c0  w    O .data.rel.ro	0000000000000028              vtable for Trigger_error_handler
00000000006b75fc g     F .text	0000000000000128              TABLE_LIST::first_leaf_for_name_resolution()
00000000005cab52 g     F .text	00000000000000f0              THD::get_definer(st_lex_user*)
00000000007bd768  w    F .text	0000000000000041              Create_func_area::~Create_func_area()
00000000007cea3a g     F .text	00000000000003f6              Item_func_find_in_set::val_int()
000000000088ec04 g     F .text	0000000000000203              Gis_polygon::init_from_wkt(Gis_read_stream*, String*)
0000000000642588 g     F .text	000000000000299d              create_tmp_table(THD*, TMP_TABLE_PARAM*, List<Item>&, st_order*, bool, bool, unsigned long long, unsigned long long, char const*)
00000000007f6544 g     F .text	000000000000016f              Item_allany_subselect::Item_allany_subselect(Item*, Comp_creator* (*)(bool), st_select_lex*, bool)
000000000078cf82 g     F .text	000000000000002e              Item_uint::save_in_field(Field*, bool)
0000000000816b7a  w    F .text	0000000000000050              Item_date_typecast::val_decimal(my_decimal*)
0000000000879219 g     F .text	000000000000015a              open_proc_table_for_read(THD*, Open_tables_backup*)
0000000000965775 g     F .text	00000000000001e7              rtree_get_next
0000000000899092 g     F .text	0000000000000135              collect_ulonglong(unsigned long long*, unsigned int, st_tree_info*)
00000000008d98ea g     F .text	000000000000049c              _my_b_seq_read
00000000008168ee  w    F .text	0000000000000011              Item_extract::func_name() const
0000000000000000       F *UND*	0000000000000000              pthread_mutex_trylock@@GLIBC_2.2.5
00000000008183d4  w    F .text	000000000000002b              Item_func_month::~Item_func_month()
0000000000768334  w    F .text	0000000000000046              Field_longlong::~Field_longlong()
0000000000621b4c g     F .text	000000000000008b              purge_error_message(THD*, int)
000000000065c004  w    F .text	0000000000000026              List<Item_func_match>::List(List<Item_func_match> const&)
00000000005ea3c6 g     F .text	0000000000000149              Lex_input_stream::body_utf8_append(char const*, char const*)
000000000079b9ac  w    F .text	000000000000002e              List<Cached_item>::List(List<Cached_item> const&, st_mem_root*)
000000000070e5be  w    F .text	0000000000000026              Sys_var_tx_isolation::~Sys_var_tx_isolation()
0000000000799c24  w    F .text	000000000000002e              List<Item>::List(List<Item> const&, st_mem_root*)
000000000070e966  w    F .text	0000000000000026              Sys_var_plugin::~Sys_var_plugin()
000000000089d9f0 g     F .text	000000000000003f              refpos_order_cmp
0000000001209760 g     O .data	0000000000000101              ctype_swe7_swedish_ci
0000000001082eb8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_opt_neg
00000000005b2b2c g     F .text	00000000000000f2              Query_cache_query::try_lock_writing()
00000000005aff7a  w    F .text	000000000000002d              Query_arena::Query_arena()
00000000007b6cee g     F .text	00000000000000c0              Create_func_uuid_short::create(THD*)
0000000000873e58  w    F .text	000000000000001b              List_iterator<QUICK_RANGE>::remove()
000000000098dec2 g     F .text	000000000000007f              ha_myisammrg::position(unsigned char const*)
00000000007af0e6  w    F .text	0000000000000061              in_datetime::in_datetime(Item*, unsigned int)
0000000000816d8e  w    F .text	000000000000002a              Item_datetime_typecast::tmp_table_field(TABLE*)
000000000087a1fa g     F .text	000000000000003a              Bad_db_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
0000000000b64122 g     F .text	00000000000001c6              ha_partition::set_up_table_before_create(TABLE*, char const*, st_ha_create_information*, unsigned int, partition_element*)
00000000007c0a62  w    F .text	0000000000000041              Create_func_makedate::~Create_func_makedate()
00000000006d7e18  w    F .text	0000000000000012              injector::transaction::table::is_transactional() const
0000000000765bb8  w    F .text	0000000000000089              Field_float::Field_float(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
00000000010bbc08  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_curdate_local
000000000078c9a0 g     F .text	000000000000058b              Item::save_in_field(Field*, bool)
00000000005671a4  w    F .text	0000000000000046              Item_num::~Item_num()
0000000000911536  w    F .text	0000000000000041              table_setup_consumers::~table_setup_consumers()
00000000012c8d00 g     O .data	00000000000000b0              my_charset_ucs2_persian_uca_ci
00000000007dd3d6  w    F .text	000000000000002b              Item_func_sin::~Item_func_sin()
00000000006f5284  w    F .text	0000000000000028              MDL_wait_for_graph_visitor::MDL_wait_for_graph_visitor()
00000000007c213c  w    F .text	0000000000000041              Create_func_str_to_date::~Create_func_str_to_date()
0000000000738960  w    F .text	0000000000000040              Item_func_bit_and::Item_func_bit_and(Item*, Item*)
0000000000887f7e g     F .text	0000000000000146              sp_instr_set_case_expr::exec_core(THD*, unsigned int*)
000000000079ab44  w    F .text	0000000000000046              Item_ident_for_show::~Item_ident_for_show()
000000000077c00e  w    F .text	000000000000001d              handler::index_end()
00000000013707a8 g     O .bss	0000000000000004              key_LOCK_user_conn
00000000006d7e06  w    F .text	0000000000000011              injector::transaction::table::get_table() const
00000000006f5cfa  w    F .text	000000000000002a              I_P_List_iterator<MDL_request, I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>, I_P_List_counter, I_P_List_no_push_back<MDL_request> >::I_P_List_iterator(I_P_List<MDL_request, I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>, I_P_List_counter, I_P_List_no_push_back<MDL_request> > const&)
00000000007989c6  w    F .text	0000000000000014              Item_copy::result_type() const
00000000007bb5e2  w    F .text	000000000000004a              Item_str_conv::Item_str_conv(Item*)
0000000000820a96 g     F .text	0000000000000069              MYSQL_LOG::MYSQL_LOG()
00000000013760e0 g     O .bss	0000000000000060              my_locale_es_PE
000000000138cc10 g     O .bss	0000000000000008              thread_max
00000000010f1848 g     O .data	0000000000000004              heap_storage_engine
0000000000873dd2  w    F .text	000000000000001d              List_iterator<QUICK_RANGE>::operator++(int)
00000000008457e0 g     F .text	000000000000005e              Write_rows_log_event::Write_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
00000000007ddd42  w    F .text	000000000000002b              Item_func_unsigned::~Item_func_unsigned()
0000000000816296  w    F .text	000000000000004d              Item_func_curtime::val_real()
000000000095014f g     F .text	0000000000000029              mi_disable_indexes
0000000001386688 g     O .bss	0000000000000008              Create_func_period_diff::s_singleton
000000000073b0e8  w    F .text	0000000000000058              Item_insert_value::Item_insert_value(Name_resolution_context*, Item*)
000000000080a4da  w    F .text	0000000000000046              Item_std_field::~Item_std_field()
000000000073aa08  w    F .text	000000000000002d              Item_func_curtime_utc::Item_func_curtime_utc()
00000000007dbd5a  w    F .text	0000000000000022              User_level_lock::set_thread(THD*)
000000000095a880 g     F .text	0000000000000206              _mi_kpointer
00000000007f240a  w    F .text	000000000000003e              Item_func_binary::fix_length_and_dec()
00000000006ba89f  w    F .text	000000000000000f              String::operator delete(void*, unsigned long)
00000000005afc8c  w    F .text	0000000000000077              Item_bool_func2::Item_bool_func2(Item*, Item*)
000000000087369e  w    F .text	000000000000011c              TRP_GROUP_MIN_MAX::TRP_GROUP_MIN_MAX(bool, bool, bool, st_key_part_info*, unsigned int, unsigned int, unsigned int, st_key*, unsigned int, unsigned int, unsigned char*, SEL_TREE*, SEL_ARG*, unsigned int, unsigned long long)
000000000082fe4e g     F .text	0000000000000107              Global_read_lock::unlock_global_read_lock(THD*)
00000000010869d0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_unix_timestamp
000000000082cf10  w    F .text	0000000000000075              Query_tables_list::stmt_accessed_non_trans_temp_table()
00000000007ae7d8  w    F .text	0000000000000040              Item_func_ge::Item_func_ge(Item*, Item*)
00000000007b0238  w    F .text	0000000000000038              Item_cond_or::Item_cond_or(List<Item>&)
00000000005cfcf4  w    F .text	000000000000000f              select_send::check_simple_select() const
0000000001087d80  w    O .data.rel.ro	0000000000000030              vtable for Create_func_elt
00000000010df440 g     O .data	00000000000000c8              open_tables_fields_info
000000000070c8c8  w    F .text	0000000000000017              Sys_var_struct::do_check(THD*, set_var*)
0000000000598cf0  w    F .text	000000000000004b              Field::set_notnull(long long)
0000000000818556  w    F .text	0000000000000046              Item_func_to_days::~Item_func_to_days()
00000000007a5ea8 g     F .text	00000000000000cc              Item_func_coalesce::int_op()
0000000001394cbc g     O .bss	0000000000000004              key_IO_CACHE_SHARE_cond_writer
00000000005ee600 g     F .text	000000000000000f              st_select_lex_node::inc_in_sum_expr()
000000000057a826  w    F .text	0000000000000093              Log_event::write(st_io_cache*)
000000000054f6ea g     F .text	00000000000001c5              my_message_sql
000000000091931b g     F .text	0000000000000118              ft_parse
00000000012bc480 g     O .data	0000000000000600              page026data
0000000000b67d10 g     F .text	0000000000000175              ha_partition::delete_row(unsigned char const*)
00000000006ac14a g     F .text	0000000000000050              View_creation_ctx::create(THD*)
00000000005c0f7d g     F .text	0000000000000022              thd_inc_row_count
00000000006acf34 g     F .text	000000000000062a              open_table_def(THD*, TABLE_SHARE*, unsigned int)
000000000079608a  w    F .text	0000000000000042              my_decimal_add(unsigned int, my_decimal*, my_decimal const*, my_decimal const*)
000000000079af48  w    F .text	0000000000000026              Hybrid_type_traits_decimal::~Hybrid_type_traits_decimal()
00000000006414a0 g     F .text	0000000000000311              const_expression_in_where(Item*, Item*, Field*, Item**)
00000000008ebc50 g     F .text	000000000000026b              packfrm
000000000074866e g     F .text	000000000000002c              Field::type_can_have_key_part(enum_field_types)
00000000010c9a90  w    O .data.rel.ro	0000000000000028              vtable for Alter_table_repair_partition_statement
000000000088e506 g     F .text	00000000000001c0              Gis_line_string::geom_length(double*) const
000000000089e318 g     F .text	00000000000000fe              multi_delete::~multi_delete()
00000000007d3c7c g     F .text	000000000000007a              Item_func_set_user_var::val_bool_result()
0000000001386430 g     O .bss	0000000000000008              Create_func_dayofmonth::s_singleton
0000000000b5de94  w    F .text	0000000000000011              ha_tina::table_type() const
000000000070d186  w    F .text	000000000000001b              List_iterator_fast<set_var_base>::List_iterator_fast()
0000000000856fcc g     F .text	00000000000002e4              QUICK_RANGE_SELECT::QUICK_RANGE_SELECT(THD*, TABLE*, unsigned int, bool, st_mem_root*)
0000000000b6a6a2 g     F .text	00000000000001c2              ha_partition::read_range_first(st_key_range const*, st_key_range const*, bool, bool)
0000000000871a9c  w    F .text	0000000000000032              Bitmap<64u>::clear_bit(unsigned int)
0000000000990d41 g     F .text	0000000000000091              myrg_records_in_range
0000000000797850  w    F .text	0000000000000013              Item_hex_string::check_partition_func_processor(unsigned char*)
000000000061d7dc g     F .text	0000000000000203              debug_sync_end_thread(THD*)
00000000005599a0  w    F .text	000000000000001a              I_List<i_string_pair>::is_empty()
00000000007ec39a g     F .text	0000000000000123              Item_func_elt::fix_length_and_dec()
000000000090ffc6 g     F .text	0000000000000069              table_file_summary_by_event_name::table_file_summary_by_event_name()
000000000079a08c  w    F .text	0000000000000046              Item_type_holder::~Item_type_holder()
00000000005d03fe  w    F .text	000000000000001a              List<Key_part_spec>::head()
00000000007c0200  w    F .text	000000000000002d              Create_func_last_insert_id::Create_func_last_insert_id()
00000000007c6afc g     F .text	0000000000000123              Item_func_signed::val_int()
000000000075b9c2 g     F .text	0000000000000153              Field_blob::val_str(String*, String*)
00000000005c883a g     F .text	00000000000000c3              Statement::Statement(LEX*, st_mem_root*, Query_arena::enum_state, unsigned long)
00000000007c1d64  w    F .text	0000000000000026              Create_func_sin::~Create_func_sin()
0000000000b5bbf6 g     F .text	0000000000000268              ha_tina::write_row(unsigned char*)
000000000076418c  w    F .text	0000000000000025              Field::cmp_type() const
00000000010dc720 g     O .data	0000000000000070              join_type_str
0000000000ba661b g     F .text	000000000000003c              vio_was_interrupted
0000000000988e4d g     F .text	00000000000000a3              hp_find_block
00000000005657fc  w    F .text	000000000000001d              List_iterator_fast<Item_param>::operator++(int)
000000000106c180  w    O .data.rel.ro	0000000000000028              vtable for Resignal_statement
0000000000b6e0f2 g     F .text	000000000000008e              ha_partition::table_cache_type()
0000000000678064  w    F .text	0000000000000026              ACL_internal_schema_access::~ACL_internal_schema_access()
0000000000888e80  w    F .text	000000000000006e              sp_head::get_instr(unsigned int)
00000000005c4e38 g     F .text	000000000000000b              select_result::cleanup()
000000000070b2f0  w    F .text	000000000000002e              Sys_var_set::session_save_default(THD*, set_var*)
000000000106c220  w    O .data.rel.ro	0000000000000030              vtable for MDL_ticket
000000000079a656  w    F .text	0000000000000046              Item_int_with_ref::~Item_int_with_ref()
00000000005c0b86 g     F .text	0000000000000026              thd_set_mysys_var(THD*, st_my_thread_var*)
00000000010ad708  w    O .data.rel.ro	0000000000000398              vtable for Item_func_sha2
000000000076475c  w    F .text	0000000000000034              Field::get_image(unsigned char*, unsigned int, charset_info_st*)
00000000008443c4 g     F .text	00000000000006af              Table_map_log_event::Table_map_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000007dac62  w    F .text	0000000000000013              Item_func_floor::check_partition_func_processor(unsigned char*)
000000000059b694  w    F .text	0000000000000021              Dynamic_array<GRANT_NAME*>::at(int)
000000000077b8c4  w    F .text	0000000000000016              handler::estimate_rows_upper_bound()
000000000136f004 g     O .bss	0000000000000004              have_symlink
00000000006f1566 g     F .text	0000000000000093              Deadlock_detection_visitor::opt_change_victim_to(MDL_context*)
0000000000b75a36 g     F .text	0000000000000017              my_timer_cycles
0000000000767324  w    F .text	000000000000000f              Field_enum::has_charset() const
00000000009206b0  w    F .text	0000000000000052              ha_myisam::index_flags(unsigned int, unsigned int, bool) const
000000000089bd46 g     F .text	0000000000000084              Materialized_cursor::~Materialized_cursor()
00000000007d8976 g     F .text	00000000000000d2              Item_func_sp::Item_func_sp(Name_resolution_context*, sp_name*)
0000000000806fe8 g     F .text	0000000000000156              Item_func_group_concat::make_string_field(TABLE*)
00000000005c3454 g     F .text	000000000000002b              THD::~THD()
000000000090c9d0 g     F .text	000000000000053f              table_events_waits_common::make_row(bool, PFS_thread*, PFS_events_waits volatile*)
00000000007f2cce  w    F .text	0000000000000058              Item_load_file::~Item_load_file()
00000000010a6e88  w    O .data.rel.ro	0000000000000398              vtable for Item_func_soundex
00000000008eca7d g     F .text	00000000000000da              my_error_register
0000000000569ea4 g     F .text	000000000000014a              sys_var::do_deprecated_warning(THD*)
00000000005af026  w    F .text	0000000000000018              THD_TRANS::is_empty() const
000000000057aaa4  w    F .text	000000000000002b              Rotate_log_event::~Rotate_log_event()
0000000000873106  w    F .text	0000000000000050              RANGE_OPT_PARAM::statement_should_be_aborted() const
0000000000893a68  w    F .text	000000000000002c              Gis_multi_point::dimension(unsigned int*, char const**) const
0000000000872e22  w    F .text	00000000000000ab              SEL_ARG::increment_use_count(long)
00000000007c0c8c  w    F .text	000000000000002d              Create_func_md5::Create_func_md5()
00000000008c137c  w    F .text	0000000000000062              Item_nodeset_func_ancestorbyname::Item_nodeset_func_ancestorbyname(Item*, char const*, unsigned int, String*, bool)
00000000005ae599 g     F .text	0000000000000256              open_new_frm(THD*, TABLE_SHARE*, char const*, unsigned int, unsigned int, unsigned int, TABLE*, TABLE_LIST*, st_mem_root*)
00000000010eee48 g     O .data	0000000000000008              error_handler_hook
00000000006d7272  w    F .text	00000000000000b1              table_def::type(unsigned long) const
0000000000791de0 g     F .text	000000000000000c              non-virtual thunk to Item_trigger_field::set_value(THD*, sp_rcontext*, Item**)
0000000000566aea  w    F .text	000000000000000f              Item::is_null()
00000000005c344a g     F .text	0000000000000009              non-virtual thunk to THD::~THD()
00000000007dd2ac  w    F .text	0000000000000046              Item_func_cot::~Item_func_cot()
00000000005edf96 g     F .text	0000000000000079              st_select_lex_node::include_down(st_select_lex_node*)
000000000070c91c  w    F .text	0000000000000035              Sys_var_struct::global_update(THD*, set_var*)
00000000007a145a g     F .text	000000000000011a              Item_func_strcmp::val_int()
00000000007bcb72  w    F .text	0000000000000040              Item_str_timefunc::Item_str_timefunc(Item*, Item*)
00000000007dac76  w    F .text	0000000000000029              Item_func_round::func_name() const
0000000001373f20 g     O .bss	0000000000000060              my_locale_ar_SY
0000000000845a3e g     F .text	00000000000001d3              Write_rows_log_event::do_after_row_operations(Slave_reporting_capability const*, int)
00000000006fb214 g     F .text	0000000000000114              trans_release_savepoint(THD*, st_mysql_lex_string)
00000000007da74e  w    F .text	0000000000000013              Item_func_additive_op::check_partition_func_processor(unsigned char*)
0000000000901339 g     F .text	00000000000001ee              tree_record_pos
00000000005f1978  w    F .text	0000000000000012              Mem_root_array<st_order*, true>::size() const
00000000007c25ec  w    F .text	0000000000000041              Create_func_to_days::~Create_func_to_days()
0000000000738f22  w    F .text	0000000000000046              Item_func_isnottrue::~Item_func_isnottrue()
000000000079715e  w    F .text	0000000000000014              Item_param::result_type() const
00000000007b56cc g     F .text	0000000000000058              Create_func_name_const::create(THD*, Item*, Item*)
00000000007650da  w    F .text	0000000000000046              Field_num::~Field_num()
00000000007b0804  w    F .text	000000000000002b              Item_func_regex::~Item_func_regex()
000000000084949e  w    F .text	000000000000000f              Execute_load_log_event::get_type_code()
0000000001069b80  w    O .data.rel.ro	0000000000000028              vtable for Drop_table_error_handler
000000000080df16 g     F .text	000000000000011f              Item_func_monthname::val_str(String*)
000000000081d3b8 g     F .text	000000000000008a              LOGGER::cleanup_end()
00000000007bd0f6  w    F .text	0000000000000041              Create_native_func::~Create_native_func()
00000000008342f6 g     F .text	000000000000006d              Query_log_event::Query_log_event()
00000000005af050  w    F .text	0000000000000023              handler::has_transactions()
00000000005c914c g     F .text	00000000000000c5              Statement_map::reset()
000000000080f336 g     F .text	0000000000000111              Item_func_from_days::get_date(st_mysql_time*, unsigned int)
0000000000798bcc  w    F .text	000000000000002b              Item_copy_int::~Item_copy_int()
00000000007964fc  w    F .text	0000000000000048              Hybrid_type_traits::add(Hybrid_type*, Field*) const
0000000000765fc4  w    F .text	000000000000004d              Field_timestamp::reset()
00000000008bc2e8 g     F .text	000000000000012d              Item_nodeset_func_predicate::val_nodeset(String*)
00000000007c2010  w    F .text	0000000000000041              Create_func_srid::~Create_func_srid()
000000000086f02e g     F .text	000000000000014b              QUICK_GROUP_MIN_MAX_SELECT::~QUICK_GROUP_MIN_MAX_SELECT()
0000000000b946d9 g     F .text	0000000000000026              my_charset_repertoire
000000000082dd48  w    F .text	0000000000000026              TC_LOG_MMAP::~TC_LOG_MMAP()
00000000005ceb20  w    F .text	000000000000001b              List<Item_outer_ref>::~List()
00000000008eb46f g     F .text	00000000000000aa              bitmap_get_first
000000000088433a g     F .text	0000000000000173              sp_head::fill_field_definition(THD*, LEX*, enum_field_types, Create_field*)
0000000000764518  w    F .text	0000000000000027              Field::key_length() const
00000000008481bc g     F .text	00000000000001db              Incident_log_event::Incident_log_event(char const*, unsigned int, Format_description_log_event const*)
0000000000b673b8 g     F .text	00000000000000ed              ha_partition::try_semi_consistent_read(bool)
0000000001087750  w    O .data.rel.ro	0000000000000030              vtable for Create_func_isempty
00000000008087ac  w    F .text	0000000000000015              Item_sum::const_item() const
00000000007c15c6  w    F .text	0000000000000026              Create_func_quote::~Create_func_quote()
00000000007c113c  w    F .text	000000000000002d              Create_func_ord::Create_func_ord()
00000000013764a0 g     O .bss	0000000000000060              my_locale_fr_LU
00000000005c8d3a g     F .text	000000000000002b              Statement::~Statement()
0000000000b64d02 g     F .text	000000000000026f              ha_partition::create_handlers(st_mem_root*)
00000000005d1ad2  w    F .text	000000000000002b              select_singlerow_subselect::~select_singlerow_subselect()
000000000070a1f4  w    F .text	000000000000004d              Sys_var_keycache::global_value_ptr(THD*, st_mysql_lex_string*)
000000000056581a  w    F .text	0000000000000041              Protocol_binary::~Protocol_binary()
00000000005f10f4  w    F .text	0000000000000015              Lex_input_stream::yyPeek()
0000000000877fea g     F .text	000000000000008a              rr_sequential(READ_RECORD*)
00000000007f3f62  w    F .text	000000000000002b              Item_func_concat::~Item_func_concat()
0000000000566bd6  w    F .text	0000000000000032              Item::get_tmp_table_item(THD*)
0000000001087060  w    O .data.rel.ro	0000000000000030              vtable for Create_func_quote
000000000067847a  w    F .text	000000000000001b              I_List<thread_info>::empty()
0000000001208100 g     O .data	0000000000000100              to_upper_latin1_german1_ci
00000000007be362  w    F .text	0000000000000026              Create_func_cos::~Create_func_cos()
00000000007c771a g     F .text	00000000000001c9              Item_func_plus::decimal_op(my_decimal*)
000000000093b679 g     F .text	0000000000000054              _mi_write_dynamic_record
00000000010edd50 g     O .data	000000000000000d              days_in_month
00000000007dd20e  w    F .text	000000000000002b              Item_func_shift_right::~Item_func_shift_right()
00000000010bc348  w    O .data.rel.ro	0000000000000398              vtable for Item_func_from_days
00000000006f58ec  w    F .text	000000000000003e              I_P_List<MDL_object_lock, MDL_object_lock_cache_adapter, I_P_List_counter, I_P_List_no_push_back<MDL_object_lock> >::I_P_List()
00000000010c8f78  w    O .data.rel.ro	0000000000000398              vtable for Item_func_xml_update
000000000073859c  w    F .text	0000000000000040              Item_func_plus::Item_func_plus(Item*, Item*)
0000000000817d40  w    F .text	0000000000000046              Item_func_curdate_utc::~Item_func_curdate_utc()
00000000005d0892  w    F .text	0000000000000026              List_iterator<Alter_drop>::List_iterator(List<Alter_drop>&)
00000000005d0ce4  w    F .text	000000000000001b              List_iterator<Alter_column>::remove()
0000000000566e16  w    F .text	0000000000000013              Item::find_item_in_field_list_processor(unsigned char*)
0000000001216e00 g     O .data	0000000000000100              to_lower_cp1256_bin
00000000007c28da  w    F .text	0000000000000041              Create_func_uncompressed_length::~Create_func_uncompressed_length()
0000000000659592  w    F .text	0000000000000046              Item_null::~Item_null()
00000000007dcc5c  w    F .text	000000000000002b              Item_func_ascii::~Item_func_ascii()
0000000001218ba0 g     O .data	0000000000000101              ctype_keybcs2_bin
000000000077bfa8  w    F .text	0000000000000042              handler::alter_table_flags(unsigned int)
00000000007790b7 g     F .text	0000000000000126              ha_find_files(THD*, char const*, char const*, char const*, bool, List<st_mysql_lex_string>*)
000000000080e248 g     F .text	00000000000000cb              Item_func_week::val_int()
00000000006f58ec  w    F .text	000000000000003e              I_P_List<MDL_object_lock, MDL_object_lock_cache_adapter, I_P_List_counter, I_P_List_no_push_back<MDL_object_lock> >::I_P_List()
00000000005ee6c8 g     F .text	0000000000000012              st_select_lex_unit::outer_select()
00000000007da91a  w    F .text	000000000000002b              Item_func_num1::~Item_func_num1()
00000000007ec4be g     F .text	00000000000000ff              Item_func_elt::val_real()
00000000008966c0 g     F .text	0000000000000075              analyse::send_row(List<Item>&)
000000000098b27a g     F .text	0000000000000090              ha_myisammrg::ha_myisammrg(handlerton*, TABLE_SHARE*)
00000000007afe0e  w    F .text	000000000000002b              Item_func_isnull::~Item_func_isnull()
00000000010eee08 g     O .data	0000000000000004              my_pthread_create_detached
00000000006aaa25 g     F .text	00000000000001dd              set_to_string(THD*, st_mysql_lex_string*, unsigned long long, char const**)
00000000006102c8 g     F .text	00000000000000b8              sys_var_pluginvar::do_value_ptr(THD*, enum_var_type, st_mysql_lex_string*)
0000000000776c5e g     F .text	00000000000001ab              handler::ha_check_for_upgrade(st_ha_check_opt*)
000000000088cd6e  w    F .text	000000000000001a              sp_lex_keeper::disable_query_cache()
00000000005c0bed g     F .text	0000000000000010              get_max_connections()
0000000000816786  w    F .text	0000000000000011              Item_func_convert_tz::func_name() const
0000000000991e03 g     F .text	0000000000000198              myrg_close
00000000007537c0 g     F .text	00000000000001cc              Field_time::store(char const*, unsigned int, charset_info_st*)
00000000008eb28c g     F .text	0000000000000098              bitmap_bits_set
0000000000561b4e g     F .text	0000000000000086              Protocol::send_eof(unsigned int, unsigned int)
0000000000810d8e g     F .text	0000000000000103              Item_date_add_interval::fix_length_and_dec()
00000000012109c0 g     O .data	0000000000000200              to_uni_macroman_general_ci
000000000081e256 g     F .text	000000000000000f              Log_to_csv_event_handler::init()
00000000010f15c0 g     O .data	0000000000000034              myisam_read_vec
0000000001207ae0 g     O .data	0000000000000100              to_upper_cp850_general_ci
0000000000801ccc g     F .text	0000000000000095              Item_sum_variance::add()
00000000007bbe2c  w    F .text	0000000000000042              Item_func_like_range_min::Item_func_like_range_min(Item*, Item*)
0000000000577bd4 g     F .text	0000000000000036              slave_io_thread_detach_vio
00000000007afeb4  w    F .text	0000000000000011              Item_func_isnotnull::func_name() const
00000000007bff82  w    F .text	0000000000000026              Create_func_isclosed::~Create_func_isclosed()
0000000000738f94  w    F .text	0000000000000011              Item_func_isnottrue::func_name() const
00000000007e2638  w    F .text	0000000000000046              Item_func_as_wkb::~Item_func_as_wkb()
00000000006b3986 g     F .text	00000000000001b2              typelib(st_mem_root*, List<String>&)
00000000007d0bda g     F .text	0000000000000028              Item_func_udf_decimal::fix_length_and_dec()
00000000006c25b2 g     F .text	0000000000000041              Pack_header_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
000000000073b090  w    F .text	0000000000000058              Item_default_value::Item_default_value(Name_resolution_context*, Item*)
00000000007bee84  w    F .text	0000000000000026              Create_func_endpoint::~Create_func_endpoint()
000000000079a36e  w    F .text	0000000000000046              Item_cache_int::~Item_cache_int()
00000000005ceacc  w    F .text	000000000000001b              SQL_I_List<st_order>::~SQL_I_List()
000000000090338a g     F .text	0000000000000091              my_get_large_page_size
000000000088978c  w    F .text	0000000000000046              sp_instr_copen::~sp_instr_copen()
000000000082d94e  w    F .text	0000000000000030              binlog_cache_data::get_byte_position() const
00000000007acf4c g     F .text	0000000000000058              Item_equal::add(Item*)
000000000056745c  w    F .text	00000000000000e8              Item_string::Item_string(char const*, unsigned int, charset_info_st*, Derivation, unsigned int)
0000000000697fd8  w    F .text	0000000000000031              MDL_key::MDL_key(MDL_key::enum_mdl_namespace, char const*, char const*)
0000000001068380  w    O .data.rel.ro	0000000000000020              vtable for NAMED_ILINK
00000000008405ac g     F .text	0000000000000025              Begin_load_query_log_event::do_shall_skip(Relay_log_info*)
0000000000848d86  w    F .text	0000000000000018              Query_log_event::is_valid() const
0000000000876ed8  w    F .text	000000000000000f              Item_proc_int::field_type() const
00000000010ac510  w    O .data.rel.ro	0000000000000398              vtable for Item_func_des_decrypt
0000000000765b18  w    F .text	000000000000000f              Field_longlong::pack_length() const
00000000007bd73a  w    F .text	000000000000002d              Create_func_area::Create_func_area()
000000000088ca32 g     F .text	00000000000001a6              sp_rcontext::set_case_expr(THD*, int, Item**)
000000000075be62 g     F .text	0000000000000263              Field_blob::get_key_image(unsigned char*, unsigned int, Field::imagetype)
000000000087410c  w    F .text	0000000000000025              List<QUICK_SELECT_I>::push_back(QUICK_SELECT_I*)
0000000000559090  w    F .text	0000000000000031              CSET_STRING::CSET_STRING()
00000000012b6680 g     O .data	0000000000000400              page015data
0000000001374ee0 g     O .bss	0000000000000060              my_locale_sr_YU
00000000005c504c g     F .text	0000000000000013              select_send::cleanup()
0000000000560776 g     F .text	0000000000000155              scramble
0000000001069348  w    O .data.rel.ro	0000000000000028              vtable for Silence_routine_definer_errors
00000000006f53d4  w    F .text	0000000000000021              MDL_context::unlock_deadlock_victim()
0000000000678636  w    F .text	000000000000002b              Open_tables_backup::Open_tables_backup()
0000000000b71580  w    F .text	0000000000000043              ha_partition_add_index::ha_partition_add_index(TABLE*, st_key*, unsigned int)
00000000006987e8  w    F .text	0000000000000026              List_iterator<unsigned long long>::List_iterator(List<unsigned long long>&)
00000000005690e2  w    F .text	000000000000001d              I_List_iterator<i_string_pair>::operator++(int)
00000000007e4122 g     F .text	00000000000001be              Item_func_md5::val_str_ascii(String*)
00000000007f1a96  w    F .text	0000000000000011              Item_func_left::func_name() const
0000000001370834 g     O .bss	0000000000000004              key_delayed_insert_cond
00000000007eab58 g     F .text	0000000000000131              Item_func_encode::val_str(String*)
000000000056b3a4  w    F .text	0000000000000043              AutoRLock::AutoRLock(PolyLock*)
0000000000606e3a  w    F .text	000000000000006c              Item_func_not_all::Item_func_not_all(Item*)
00000000007cda9c g     F .text	0000000000000051              Item_func_coercibility::val_int()
00000000010eb5c0 g     O .data	0000000000000020              mysql_client_builtins
00000000007fb894 g     F .text	000000000000005a              subselect_single_select_engine::cols()
0000000000858214 g     F .text	000000000000011c              QUICK_ROR_INTERSECT_SELECT::reset()
00000000005f1b88  w    F .text	0000000000000091              void list_copy_and_replace_each_value<Alter_drop>(List<Alter_drop>&, st_mem_root*)
0000000000877062  w    F .text	0000000000000032              Item_proc_string::set(long long)
0000000000815c3a  w    F .text	0000000000000021              Item_func_quarter::check_valid_arguments_processor(unsigned char*)
00000000005d8b44 g     F .text	0000000000000125              Diagnostics_area::set_error_status(THD*, unsigned int, char const*, char const*)
000000000080d5da g     F .text	0000000000000115              Item_func_period_diff::val_int()
000000000088d1c0 g     F .text	00000000000000ac              Geometry::find_class(char const*, unsigned int)
00000000008c533e g     F .text	00000000000001d6              Event_scheduler::dump_internal_status()
00000000008c1974  w    F .text	0000000000000011              Item_func_xpath_count::func_name() const
00000000005d8d54 g     F .text	0000000000000030              Warning_info::~Warning_info()
00000000007648ea  w    F .text	000000000000000f              Field::has_charset() const
0000000001087f00  w    O .data.rel.ro	0000000000000030              vtable for Create_func_dayofweek
00000000007c29d8  w    F .text	000000000000002d              Create_func_unix_timestamp::Create_func_unix_timestamp()
000000000107f180  w    O .data.rel.ro	0000000000000398              vtable for Item_func_isnotnull
0000000001088050  w    O .data.rel.ro	0000000000000030              vtable for Create_func_cot
00000000006d43ed g     F .text	0000000000000116              has_external_data_or_index_dir(partition_info&)
00000000008fc70f g     F .text	0000000000000100              thr_end_alarm
0000000001211b20 g     O .data	0000000000000100              sort_order_latin7_general_cs
00000000008934ce  w    F .text	0000000000000013              Geometry::num_geometries(unsigned int*) const
00000000006fdfeb g     F .text	000000000000003e              sql_mode_string_representation(THD*, unsigned long, st_mysql_lex_string*)
00000000006985ae  w    F .text	000000000000004d              Handle_old_incorrect_trigger_table_hook::Handle_old_incorrect_trigger_table_hook(char*, st_mysql_lex_string*)
000000000060b276 g     F .text	0000000000000033              get_plugin_hash_key
0000000000758134 g     F .text	000000000000002d              Field_longstr::max_data_length() const
0000000000767d1a  w    F .text	000000000000003d              Create_field::~Create_field()
00000000007c275a  w    F .text	0000000000000026              Create_func_touches::~Create_func_touches()
000000000075f5d8 g     F .text	0000000000000093              Field_bit::store_decimal(my_decimal const*)
000000000136e380 g     O .bss	000000000000003c              server_version
000000000105dc30 g     O .data.rel.ro	0000000000000010              empty_lex_str
00000000006780de  w    F .text	0000000000000011              sp_pcontext::context_var_count()
000000000079bda0  w    F .text	000000000000002b              Cached_item_real::~Cached_item_real()
00000000006bf636 g     F .text	0000000000000031              Time_zone_db::TIME_to_gmt_sec(st_mysql_time const*, char*) const
0000000001371bc8 g     O .bss	0000000000000008              active_mi
00000000005d1afe  w    F .text	0000000000000046              select_dump::~select_dump()
000000000136f440 g     O .bss	0000000000000070              LOCK_delayed_create
00000000008575a4 g     F .text	000000000000012f              QUICK_INDEX_MERGE_SELECT::QUICK_INDEX_MERGE_SELECT(THD*, TABLE*)
0000000000795c66 g     F .text	000000000000000f              dummy_error_processor(THD*, void*)
0000000000658d70  w    F .text	0000000000000065              Field_longstr::Field_longstr(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
00000000007c05b2  w    F .text	0000000000000041              Create_func_ln::~Create_func_ln()
00000000006c1cb4  w    F .text	000000000000002b              Time_zone_offset::~Time_zone_offset()
000000000079bb7c  w    F .text	000000000000001b              List_iterator<Cached_item>::rewind()
0000000000816f80  w    F .text	0000000000000098              Item_func_add_time::val_decimal(my_decimal*)
00000000007bb318  w    F .text	0000000000000052              Item_str_ascii_func::Item_str_ascii_func(Item*, Item*)
000000000056aa64 g     F .text	000000000000005d              set_var::update(THD*)
00000000013865b0 g     O .bss	0000000000000008              Create_func_least::s_singleton
0000000000558fff  w    F .text	0000000000000016              _current_thd()
0000000000b80e0a g     F .text	000000000000009f              my_charpos_mb
0000000000797864  w    F .text	0000000000000016              Item_result_field::tmp_table_field(TABLE*)
0000000000764272  w    F .text	0000000000000011              Field::pack_length() const
0000000000690ce2  w    F .text	0000000000000026              List_iterator_fast<Create_field>::init(List<Create_field>&)
000000000073b362  w    F .text	0000000000000012              Lex_input_stream::get_tok_start_prev()
00000000007afe5c  w    F .text	0000000000000022              Item_is_not_null_test::used_tables() const
000000000107ffe0  w    O .data.rel.ro	0000000000000398              vtable for Item_cond_and
00000000005c08f8 g     F .text	000000000000002a              thd_unlock_thread_remove(THD*)
00000000007bca7c  w    F .text	000000000000003f              Item_func_unix_timestamp::Item_func_unix_timestamp()
0000000001087690  w    O .data.rel.ro	0000000000000030              vtable for Create_func_last_insert_id
0000000000809108  w    F .text	0000000000000025              Item_variance_field::val_str(String*)
00000000008285e2 g     F .text	000000000000012a              general_log_print(THD*, enum_server_command, char const*, ...)
00000000007f19dc  w    F .text	0000000000000011              Item_func_insert::func_name() const
00000000007c0b8e  w    F .text	0000000000000041              Create_func_make_set::~Create_func_make_set()
000000000057a954  w    F .text	0000000000000038              Log_event::free_temp_buf()
00000000007bc5f2  w    F .text	000000000000004a              Item_func_x::Item_func_x(Item*)
0000000001088680  w    O .data.rel.ro	0000000000000028              vtable for Create_udf_func
0000000000931507 g     F .text	000000000000034e              update_auto_increment_key
0000000000569084  w    F .text	000000000000001b              I_List<i_string>::~I_List()
00000000010c1080  w    O .data.rel.ro	0000000000000078              vtable for Incident_log_event
00000000006f2acc g     F .text	0000000000000035              MDL_wait_for_graph_visitor::~MDL_wait_for_graph_visitor()
0000000000856772 g     F .text	00000000000001d8              SEL_TREE::SEL_TREE(SEL_TREE*, RANGE_OPT_PARAM*)
00000000007fcb0c  w    F .text	000000000000002b              Item_maxmin_subselect::~Item_maxmin_subselect()
0000000000831ae8 g     F .text	000000000000026a              Log_event::Log_event(char const*, Format_description_log_event const*)
0000000000919606 g     F .text	0000000000000124              ftparser_call_deinitializer
0000000000983c3b g     F .text	0000000000000041              hp_mask
0000000001374640 g     O .bss	0000000000000060              my_locale_hr_HR
00000000010b68f8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_maketime
00000000008846cc g     F .text	00000000000000ff              sp_head::set_definer(char const*, unsigned int)
000000000073a056  w    F .text	0000000000000052              Item_func_char::Item_func_char(List<Item>&)
0000000001369420 g     O .data	0000000000000800              my_unicase_mysql500
00000000012c3080 g     O .data	0000000000000400              page0A2data
00000000007af8de  w    F .text	0000000000000042              cmp_item_sort_string_in_static::store_value(Item*)
00000000007f5286 g     F .text	000000000000008e              Item_subselect::update_used_tables()
000000000090e1d4  w    F .text	0000000000000025              pos_events_waits_history::next_thread()
00000000007b3f9c g     F .text	00000000000000c0              Create_func_found_rows::create(THD*)
00000000007a9b34 g     F .text	0000000000000015              Item_cond::used_tables() const
00000000007674aa  w    F .text	000000000000000f              Field_set::real_type() const
000000000083f334 g     F .text	0000000000000085              Append_block_log_event::Append_block_log_event(THD*, char const*, unsigned char*, unsigned int, bool)
0000000000815d02  w    F .text	0000000000000011              Item_func_yearweek::func_name() const
00000000007c1a06  w    F .text	000000000000002d              Create_func_rtrim::Create_func_rtrim()
00000000005af272  w    F .text	0000000000000071              TABLE::TABLE()
00000000008934a6  w    F .text	0000000000000013              Geometry::num_interior_ring(unsigned int*) const
00000000010978c0  w    O .data.rel.ro	00000000000003c8              vtable for Item_func_mod
00000000005c9b18 g     F .text	0000000000000049              Security_context::skip_grants()
00000000007ae3e4  w    F .text	0000000000000078              Item_bool_func2::is_null()
0000000000763c38 g     F .text	00000000000000ac              Field::set_datetime_warning(MYSQL_ERROR::enum_warning_level, unsigned int, char const*, unsigned int, enum_mysql_timestamp_type, int)
00000000007f3aea  w    F .text	0000000000000046              Item_func_ucase::~Item_func_ucase()
00000000005af972  w    F .text	000000000000002f              DTCollation::DTCollation()
000000000079c9f2 g     F .text	000000000000006b              Item_func_not_all::print(String*, enum_query_type)
0000000000815850  w    F .text	000000000000003a              Item_func_to_seconds::intro_version(unsigned char*)
00000000005f0be0  w    F .text	0000000000000012              st_select_lex_node::get_master()
00000000012162a0 g     O .data	0000000000000101              ctype_ascii_bin
000000000055fb5e  w    F .text	000000000000004d              String::String(char*, unsigned int, charset_info_st*)
000000000087f988 g     F .text	00000000000002ca              sp_head::sp_head()
00000000006206e4  w    F .text	000000000000001b              st_debug_sync_globals::~st_debug_sync_globals()
0000000000877374  w    F .text	000000000000002b              Item_proc_string::~Item_proc_string()
00000000007aeaea  w    F .text	000000000000000f              Item_func_between::select_optimize() const
000000000091840e  w    F .text	0000000000000025              pos_all_instr::next_view()
00000000008ccd4a  w    F .text	0000000000000046              Truncate_statement::~Truncate_statement()
0000000000656f9e g     F .text	00000000000005d8              st_select_lex::print(THD*, String*, enum_query_type)
00000000007e174e  w    F .text	0000000000000169              Item_func_spatial_collection::fix_length_and_dec()
0000000000802568 g     F .text	00000000000000d9              Item_sum_hybrid::val_str(String*)
0000000000618668 g     F .text	0000000000000052              Execute_sql_statement::Execute_sql_statement(st_mysql_lex_string)
00000000012c8b80 g     O .data	00000000000000b0              my_charset_ucs2_spanish2_uca_ci
00000000007c18b4  w    F .text	0000000000000026              Create_func_round::~Create_func_round()
00000000007fc548  w    F .text	000000000000000f              Item_in_subselect::substype()
00000000007d984a g     F .text	0000000000000046              Item_func_found_rows::val_int()
00000000005a23fe g     F .text	0000000000000348              Locked_tables_list::init_locked_tables(THD*)
00000000007c02c4  w    F .text	0000000000000041              Create_func_lcase::~Create_func_lcase()
000000000073bfc8  w    F .text	000000000000006d              sp_instr_jump_if_not::sp_instr_jump_if_not(unsigned int, sp_pcontext*, Item*, LEX*)
00000000007aeb1c  w    F .text	000000000000000f              Item_func_between::is_bool_func()
00000000005d0a1e  w    F .text	000000000000002e              List<Alter_column>::List(List<Alter_column> const&, st_mem_root*)
00000000008cb3fe  w    F .text	0000000000000046              Alter_table_repair_partition_statement::~Alter_table_repair_partition_statement()
00000000005d065e  w    F .text	000000000000001a              List_iterator<Key_part_spec>::ref()
00000000005affa8  w    F .text	0000000000000035              Query_arena::~Query_arena()
00000000007bf09a  w    F .text	0000000000000041              Create_func_export_set::~Create_func_export_set()
00000000006bc4cd g     F .text	00000000000000a9              localtime_to_TIME(st_mysql_time*, tm*)
0000000000826dba g     F .text	0000000000000080              use_trans_cache(THD const*, bool)
00000000005bf286  w    F .text	0000000000000016              Query_cache_block::is_free()
00000000013707cc g     O .bss	0000000000000004              key_relay_log_info_run_lock
000000000073c696  w    F .text	000000000000002d              sp_pcontext::push_handler(sp_cond_type*)
000000000056436c g     F .text	0000000000000096              Protocol_binary::store_long(long long)
00000000007e1b16  w    F .text	0000000000000023              Item_func_x::fix_length_and_dec()
000000000065881e  w    F .text	0000000000000022              Bitmap<64u>::is_set(unsigned int) const
000000000075b0bc g     F .text	0000000000000547              Field_blob::store(char const*, unsigned int, charset_info_st*)
000000000089ae20  w    F .text	0000000000000046              field_real::~field_real()
00000000010ca6f8  w    O .data.rel.ro	0000000000000050              vtable for table_all_instr_class
000000000058aaf1 g     F .text	00000000000002a8              check_grant_db(THD*, char const*)
00000000008560e7 g     F .text	0000000000000090              TIME_to_ulonglong
00000000007f26e0  w    F .text	0000000000000011              Item_func_crc32::func_name() const
0000000000900a9e g     F .text	0000000000000327              tree_delete
000000000083c308 g     F .text	000000000000019d              Rand_log_event::write(st_io_cache*)
000000000136cc03 g     O .bss	0000000000000001              opt_safe_user_create
00000000005ee8f0 g     F .text	0000000000000014              st_select_lex::get_in_sum_expr()
000000000059b5a2  w    F .text	000000000000003c              MPVIO_EXT::can_authenticate()
000000000080847a g     F .text	000000000000002b              Item_func_group_concat::~Item_func_group_concat()
00000000005a06eb g     F .text	0000000000000159              drop_open_table(THD*, TABLE*, char const*, char const*)
00000000009058de  w    F .text	00000000000000c7              handler::psi_open()
000000000108cb50  w    O .data.rel.ro	0000000000000398              vtable for Item_func_sleep
00000000007abea0 g     F .text	00000000000001cd              Item_func_like::turboBM_compute_good_suffix_shifts(int*)
00000000008988c6 g     F .text	000000000000031d              field_decimal::std(String*, unsigned long long)
00000000008493e4  w    F .text	0000000000000046              Delete_file_log_event::~Delete_file_log_event()
00000000006bced7 g     F .text	0000000000000099              date_time_format_make(enum_mysql_timestamp_type, char const*, unsigned int)
00000000012b8280 g     O .data	0000000000000600              page01Ddata
00000000005bf62e  w    F .text	0000000000000071              Query_cache_wait_state::Query_cache_wait_state(THD*, char const*, char const*, unsigned int)
00000000007c1116  w    F .text	0000000000000026              Create_func_oct::~Create_func_oct()
00000000006b73c4 g     F .text	00000000000000cd              TABLE_LIST::check_single_table(TABLE_LIST**, unsigned long long, TABLE_LIST*)
0000000000849044  w    F .text	000000000000000f              Start_log_event_v3::get_data_size()
00000000007dc002  w    F .text	000000000000002b              Item_func_uuid_short::~Item_func_uuid_short()
000000000138cc48 g     O .bss	0000000000000008              table_lost
00000000007da69e  w    F .text	000000000000000f              Item_decimal_typecast::result_type() const
00000000008200e4 g     F .text	00000000000000b0              MYSQL_LOG::init(enum_log_type, cache_type)
000000000079c708 g     F .text	0000000000000049              Lt_creator::create(Item*, Item*) const
0000000000873b50  w    F .text	000000000000001b              List<QUICK_RANGE>::List()
000000000056a2be g     F .text	00000000000000a6              mysql_add_sys_var_chain(sys_var*)
000000000092093b g     F .text	0000000000000299              ft_init_stopwords
000000000088f2d6 g     F .text	000000000000029f              Gis_polygon::area(double*, char const**) const
0000000000873f3c  w    F .text	000000000000001b              List<SEL_IMERGE>::List()
00000000010c0f40  w    O .data.rel.ro	0000000000000048              vtable for Log_to_file_event_handler
000000000073a1c2  w    F .text	0000000000000040              Item_func_set_collation::Item_func_set_collation(Item*, Item*)
00000000007c18da  w    F .text	000000000000002d              Create_func_row_count::Create_func_row_count()
000000000073a7fc  w    F .text	000000000000000f              Item_str_timefunc::field_type() const
0000000000ba3f8a g     F .text	0000000000000028              strmov_overlapp
000000000088a1a4 g     F .text	00000000000001b4              sp_pcontext::sp_pcontext(sp_pcontext*, label_scope_type)
000000000138d2e0 g     O .bss	0000000000000100              table_events_waits_history_long::m_table_lock
00000000006e835e g     F .text	0000000000000060              thd_is_connection_alive(THD*)
00000000007086aa  w    F .text	0000000000000014              Log_to_file_event_handler::get_mysql_slow_log()
000000000082d182  w    F .text	000000000000003a              Format_description_log_event::is_valid() const
00000000007b0012  w    F .text	0000000000000011              Item_equal::func_name() const
000000000065a420  w    F .text	000000000000002d              Item_cond_or::Item_cond_or()
0000000000815c5c  w    F .text	0000000000000011              Item_func_second::func_name() const
00000000005b04c4  w    F .text	0000000000000011              Open_table_context::get_flags() const
00000000007a16fc g     F .text	00000000000004e8              Item_func_interval::fix_length_and_dec()
00000000010a1be0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_compress
000000000078293e g     F .text	0000000000000045              agg_item_collations_for_comparison(DTCollation&, char const*, Item**, unsigned int, unsigned int)
000000000090f5ee g     F .text	0000000000000037              table_ews_global_by_event_name::table_ews_global_by_event_name()
0000000000801620 g     F .text	000000000000009c              Item_sum_std::val_real()
00000000010ec6e0 g     O .data	0000000000000020              tx_isolation_typelib
000000000065a238  w    F .text	0000000000000057              Item_cond::add_at_head(List<Item>*)
00000000013863b0 g     O .bss	0000000000000008              Create_func_char_length::s_singleton
000000000090c024  w    F .text	0000000000000041              PFS_readonly_acl::~PFS_readonly_acl()
000000000086e5be g     F .text	00000000000003d6              TRP_GROUP_MIN_MAX::make_quick(PARAM*, bool, st_mem_root*)
000000000056772a  w    F .text	0000000000000013              Item_string::check_partition_func_processor(unsigned char*)
000000000084588a g     F .text	00000000000001b4              Write_rows_log_event::do_before_row_operations(Slave_reporting_capability const*)
0000000000558910  w    F .text	0000000000000035              ilink::ilink()
000000000065ba00  w    F .text	0000000000000122              store_key_const_item::copy_inner()
000000000065c086  w    F .text	0000000000000025              List<Item_func_match>::push_front(Item_func_match*)
00000000007da762  w    F .text	0000000000000046              Item_func_additive_op::~Item_func_additive_op()
000000000080a630  w    F .text	0000000000000046              Item_sum_xor::~Item_sum_xor()
00000000007bf25c  w    F .text	0000000000000041              Create_func_find_in_set::~Create_func_find_in_set()
0000000000561e5c g     F .text	0000000000000056              Protocol::flush()
00000000005d05da  w    F .text	0000000000000025              List_iterator<Key_part_spec>::replace(List<Key_part_spec>&)
0000000000815ca8  w    F .text	0000000000000021              Item_func_second::check_valid_arguments_processor(unsigned char*)
00000000007b9a12  w    F .text	0000000000000040              Item_sum_udf_int::Item_sum_udf_int(st_udf_func*, List<Item>&)
00000000007ae6be  w    F .text	0000000000000046              Item_bool_rowready_func2::~Item_bool_rowready_func2()
0000000000566e3e  w    F .text	0000000000000013              Item::reset_query_id_processor(unsigned char*)
0000000000598132  w    F .text	0000000000000075              base_list::pop()
000000000089c040  w    F .text	000000000000001b              Materialized_cursor::is_open() const
000000000059b584  w    F .text	000000000000001d              Thd_charset_adapter::charset()
00000000008ce79c g     F .text	0000000000000047              my_charset_same
00000000008fcb0f g     F .text	0000000000000201              end_thr_alarm
00000000007c78e4 g     F .text	00000000000001bf              Item_func_additive_op::result_precision()
00000000005591a0  w    F .text	0000000000000041              Eq_creator::~Eq_creator()
0000000000813df8 g     F .text	000000000000053d              Item_func_timestamp_diff::val_int()
00000000007e7146 g     F .text	0000000000000085              Item_func_reverse::fix_length_and_dec()
000000000121ac80 g     O .data	0000000000000100              to_upper_cp850_bin
000000000069756e g     F .text	000000000000022d              Table_triggers_list::add_tables_and_routines_for_triggers(THD*, Query_tables_list*, TABLE_LIST*)
0000000000816af0  w    F .text	000000000000002a              Item_date_typecast::tmp_table_field(TABLE*)
00000000005b0eb2  w    F .text	000000000000001a              List_iterator<Item>::ref()
000000000088ad96 g     F .text	000000000000010a              sp_pcontext::find_cursor(st_mysql_lex_string*, unsigned int*, char)
00000000008162e4  w    F .text	0000000000000044              Item_func_curtime::val_int()
0000000001387dc0 g     O .bss	0000000000000040              Geometry::ci_collection
000000000136cd78 g     O .bss	0000000000000008              aborted_threads
00000000007a59b8 g     F .text	0000000000000105              Item_func_case::decimal_precision() const
00000000007f1dc4  w    F .text	000000000000002b              Item_func_encode::~Item_func_encode()
00000000012163c0 g     O .data	0000000000000100              to_lower_ascii_bin
0000000000558aca  w    F .text	0000000000000048              base_ilist::append(ilink*)
000000000075ac2c g     F .text	00000000000000ee              Field_varstring::hash(unsigned long*, unsigned long*)
00000000007664bc  w    F .text	000000000000000f              Field_newdate::type() const
00000000005586fc  w    F .text	000000000000000b              Sql_alloc::~Sql_alloc()
00000000007999f8  w    F .text	0000000000000011              Item_type_holder::field_type() const
00000000007a6b1a g     F .text	000000000000004a              in_longlong::in_longlong(unsigned int)
000000000059b51c  w    F .text	000000000000001a              Thd_charset_adapter::Thd_charset_adapter(THD*)
000000000073ba20  w    F .text	000000000000005d              set_var_collation_client::set_var_collation_client(charset_info_st*, charset_info_st*, charset_info_st*)
00000000010866e8  w    O .data.rel.ro	0000000000000048              vtable for cmp_item_string
00000000006fbfbe  w    F .text	000000000000001a              THD_TRANS::reset()
0000000000851eee g     F .text	0000000000000083              Update_rows_log_event_old::do_before_row_operations(Slave_reporting_capability const*)
00000000006d4fd3 g     F .text	0000000000000843              show_sql_type(enum_field_types, unsigned short, String*, charset_info_st*)
00000000007c1788  w    F .text	0000000000000026              Create_func_release_lock::~Create_func_release_lock()
00000000007bf648  w    F .text	000000000000002d              Create_func_geometry_from_wkb::Create_func_geometry_from_wkb()
0000000000809798  w    F .text	0000000000000046              Item_sum_bit::~Item_sum_bit()
0000000000749c48 g     F .text	0000000000000131              Field::fill_cache_field(st_cache_field*)
00000000010eeb58 g     O .data	0000000000000008              enabled_my_option
0000000000739dda  w    F .text	0000000000000038              Item_func_ltrim::Item_func_ltrim(Item*)
00000000009301c1 g     F .text	00000000000002c6              flush_pending_blocks
0000000000748d2a g     F .text	0000000000000136              Field::Field(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*)
00000000007c1200  w    F .text	0000000000000041              Create_func_overlaps::~Create_func_overlaps()
0000000000765e98  w    F .text	000000000000000f              Field_null::val_int()
000000000056b21e  w    F .text	0000000000000026              PolyLock::~PolyLock()
000000000098f180  w    F .text	000000000000001b              List<Mrg_child_def>::List()
00000000010ef0c0 g     O .data	00000000000000d0              builtin_perfschema_plugin
000000000136cbf3 g     O .bss	0000000000000001              opt_skip_show_db
00000000007f539e g     F .text	00000000000000eb              Item_singlerow_subselect::Item_singlerow_subselect(st_select_lex*)
0000000000000000       F *UND*	0000000000000000              accept@@GLIBC_2.2.5
0000000001370880 g     O .bss	0000000000000004              key_thread_delayed_insert
000000000061bdeb  w    F .text	000000000000000f              st_lex_local::operator delete(void*, unsigned long)
0000000000784b4c g     F .text	00000000000000bc              Item_decimal::Item_decimal(long long, bool)
00000000005dabdc g     F .text	0000000000000041              Sql_handler_lock_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
0000000000827116 g     F .text	0000000000000179              THD::binlog_start_trans_and_stmt()
0000000000b61452 g     F .text	0000000000000255              ha_partition::handle_opt_part(THD*, st_ha_check_opt*, unsigned int, unsigned int)
000000000081739e  w    F .text	0000000000000046              Item_func_timestamp_diff::~Item_func_timestamp_diff()
0000000001208620 g     O .data	0000000000000100              to_lower_hp8_english_ci
0000000000000000       F *UND*	0000000000000000              sigfillset@@GLIBC_2.2.5
0000000000750ec0 g     F .text	00000000000000a6              Field_longlong::sql_type(String&) const
00000000010c3c48  w    O .data.rel.ro	0000000000000078              vtable for Select_fetch_into_spvars
0000000000659f1e  w    F .text	0000000000000046              Item_bool_func::~Item_bool_func()
000000000084924a  w    F .text	0000000000000018              Rotate_log_event::is_valid() const
0000000000000000       F *UND*	0000000000000000              strtoul@@GLIBC_2.2.5
00000000007aedc8  w    F .text	000000000000008d              in_vector::in_vector(unsigned int, unsigned int, int (*)(void const*, void const*, void const*), charset_info_st*)
000000000136cbe2 g     O .bss	0000000000000001              opt_log
0000000000797d34  w    F .text	000000000000003b              Item_ref::result_as_longlong()
0000000000894660 g     F .text	00000000000004f5              test_if_number(st_number_info*, char const*, unsigned int)
00000000006074f2  w    F .text	0000000000000035              select_send::select_send()
00000000007a5abe g     F .text	000000000000024d              Item_func_case::print(String*, enum_query_type)
00000000010f1860 g     O .data	00000000000000d0              builtin_heap_plugin
00000000007e15f0  w    F .text	0000000000000011              Item_func_as_wkb::func_name() const
00000000008e05b4 g     F .text	0000000000000663              key_cache_read
000000000065c9cc  w    F .text	0000000000000046              store_key_const_item::~store_key_const_item()
0000000001374580 g     O .bss	0000000000000060              my_locale_he_IL
000000000136ce18 g     O .bss	0000000000000008              current_pid
00000000007c0c24  w    F .text	0000000000000041              Create_func_master_pos_wait::~Create_func_master_pos_wait()
000000000057aad0  w    F .text	0000000000000046              Append_block_log_event::~Append_block_log_event()
000000000065c2e5  w    F .text	0000000000000066              is_subkey(st_key_part_info*, st_key_part_info*, st_key_part_info*)
00000000007bc1b0  w    F .text	000000000000004a              Item_func_uncompress::Item_func_uncompress(Item*)
00000000005657d6  w    F .text	0000000000000026              List_iterator_fast<Item_param>::List_iterator_fast(List<Item_param>&)
0000000000809bea  w    F .text	0000000000000040              Item_sum_udf_int::Item_sum_udf_int(THD*, Item_sum_udf_int*)
000000000070db2c  w    F .text	000000000000003e              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::max_var_ptr()
00000000007b74de g     F .text	00000000000004ec              create_func_cast(THD*, Item*, Cast_target, char const*, char const*, charset_info_st*)
00000000010e3100 g     O .data	0000000000000180              global_errmsgs
00000000010cd8a0  w      .data	0000000000000000              data_start
000000000065bf66  w    F .text	000000000000001a              I_List<COND_CMP>::get()
00000000007c103e  w    F .text	0000000000000041              Create_func_numpoints::~Create_func_numpoints()
00000000007ba152  w    F .text	0000000000000038              Item_func_sqrt::Item_func_sqrt(Item*)
0000000001086730  w    O .data.rel.ro	0000000000000048              vtable for cmp_item
00000000008768dd g     F .text	0000000000000170              net_store_length
0000000000618ce3 g     F .text	0000000000000006              non-virtual thunk to Prepared_statement::~Prepared_statement()
0000000000794d16 g     F .text	000000000000001c              Item_type_holder::result_type() const
000000000077ef2a g     F .text	0000000000000167              Item::Item(THD*, Item*)
00000000007ddb68  w    F .text	000000000000002b              Item_func_mul::~Item_func_mul()
000000000073871c  w    F .text	0000000000000038              Item_func_neg::Item_func_neg(Item*)
000000000056b02a  w    F .text	0000000000000016              sys_var::scope() const
00000000007e7f8c g     F .text	00000000000000d0              Item_func_lcase::fix_length_and_dec()
0000000000000000       F *UND*	0000000000000000              log@@GLIBC_2.2.5
0000000000709f92  w    F .text	0000000000000013              Sys_var_dbug::make_symbolic(void (*)(void*, unsigned long, char const*))
0000000001386558 g     O .bss	0000000000000008              Create_func_interiorringn::s_singleton
00000000006bbab5 g     F .text	00000000000000b4              calc_weekday(long, bool)
0000000001210fe0 g     O .data	0000000000000200              to_uni_cp852_general_ci
00000000005b1126  w    F .text	000000000000000f              I_P_List_no_push_back<TABLE>::I_P_List_no_push_back(TABLE**)
00000000010c8150  w    O .data.rel.ro	0000000000000398              vtable for Item_xpath_cast_bool
000000000089ac98  w    F .text	0000000000000046              field_longlong::~field_longlong()
00000000005b0a12  w    F .text	0000000000000096              I_P_List<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::remove(TABLE*)
0000000000b87975 g     F .text	0000000000000054              my_wildcmp_uca
00000000005af4b2  w    F .text	0000000000000047              TABLE_LIST::set_table_ref_id(TABLE_SHARE*)
0000000000000000       F *UND*	0000000000000000              sigwait@@GLIBC_2.2.5
00000000007dba38  w    F .text	000000000000004a              Item_func_sp::val_int()
0000000000815cca  w    F .text	0000000000000011              Item_func_week::func_name() const
000000000078d824 g     F .text	000000000000004a              Item_hex_string::Item_hex_string(char const*, unsigned int)
00000000007b1680  w    F .text	000000000000002b              Item_in_optimizer::~Item_in_optimizer()
00000000007fc3ae  w    F .text	000000000000002d              Item_exists_subselect::Item_exists_subselect()
00000000007a7b8e g     F .text	0000000000000041              cmp_item_datetime::make_same()
0000000000744c6f g     F .text	0000000000000108              mysql_real_query
00000000007ae89a  w    F .text	000000000000000f              Item_func_gt::functype() const
000000000061ae50 g     F .text	00000000000000ab              Ed_connection::execute_direct(st_mysql_lex_string)
00000000010ca208  w    O .data.rel.ro	0000000000000048              vtable for table_events_waits_history
00000000007835a6 g     F .text	00000000000001e1              Item_ident::full_name() const
00000000007fb006 g     F .text	000000000000013b              subselect_uniquesubquery_engine::copy_ref_key()
00000000007db576  w    F .text	0000000000000011              Item_func_release_lock::func_name() const
00000000008c1308  w    F .text	0000000000000062              Item_nodeset_func_descendantbyname::Item_nodeset_func_descendantbyname(Item*, char const*, unsigned int, String*, bool)
00000000006a4ea8  w    F .text	000000000000001b              List<TABLE>::~List()
00000000007a7340 g     F .text	000000000000017a              cmp_item_row::store_value(Item*)
000000000073bfc8  w    F .text	000000000000006d              sp_instr_jump_if_not::sp_instr_jump_if_not(unsigned int, sp_pcontext*, Item*, LEX*)
0000000000745cb0 g     F .text	00000000000001cf              mysql_set_character_set
00000000006b720a g     F .text	0000000000000097              TABLE_LIST::cleanup_items()
000000000077bd74  w    F .text	000000000000000f              handler::free_foreign_key_create_info(char*)
000000000056c51e g     F .text	0000000000000197              init_recovery(Master_info*, char const**)
000000000073bb7c  w    F .text	000000000000006b              sp_instr::sp_instr(unsigned int, sp_pcontext*)
0000000000874060  w    F .text	000000000000001b              List_iterator_fast<QUICK_RANGE_SELECT>::rewind()
000000000074b8cc g     F .text	0000000000000185              Field_decimal::cmp(unsigned char const*, unsigned char const*)
0000000000911a30 g     F .text	000000000000019f              table_setup_instruments::read_row_values(TABLE*, unsigned char*, Field**, bool)
0000000000797830  w    F .text	000000000000000f              Item_hex_string::cast_to_int_type() const
00000000006799c2 g     F .text	00000000000000c1              String::append(String const&)
0000000000904a18 g     F .text	00000000000000f4              ha_perfschema::write_row(unsigned char*)
00000000007c2528  w    F .text	000000000000002d              Create_func_timediff::Create_func_timediff()
0000000000620394 g     F .text	00000000000001e8              debug_sync(THD*, char const*, unsigned long)
00000000007bb106  w    F .text	000000000000002d              Item_func_uuid_short::Item_func_uuid_short()
000000000067a7a2 g     F .text	0000000000000062              String::qs_append(unsigned int)
00000000007db588  w    F .text	000000000000001e              Item_func_release_lock::fix_length_and_dec()
00000000005660ac g     F .text	0000000000000022              slave_list_key
00000000006aa848 g     F .text	0000000000000151              strconvert(charset_info_st*, char const*, charset_info_st*, char*, unsigned int, unsigned int*)
00000000010cd9d0 g     O .data	0000000000000008              in_additional_cond
0000000001068598  w    O .data.rel.ro	00000000000000e8              vtable for Protocol
0000000000000000       F *UND*	0000000000000000              recv@@GLIBC_2.2.5
00000000007b44c2 g     F .text	000000000000005d              Create_func_geometryn::create(THD*, Item*, Item*)
0000000000946803 g     F .text	00000000000000b4              mi_check_status
00000000007667e0  w    F .text	000000000000000f              Field_datetime::derivation() const
00000000013864b0 g     O .bss	0000000000000008              Create_func_export_set::s_singleton
000000000087e1e6 g     F .text	000000000000040c              sp_load_for_information_schema(THD*, TABLE*, String*, String*, unsigned long, int, char const*, char const*, bool*)
00000000006681f8 g     F .text	000000000000019a              store_schema_shemata(THD*, TABLE*, st_mysql_lex_string*, charset_info_st*)
00000000007adb62  w    F .text	0000000000000042              DTCollation::set(DTCollation&, DTCollation&, unsigned int)
000000000073a584  w    F .text	0000000000000038              Item_func_year::Item_func_year(Item*)
00000000005589aa  w    F .text	0000000000000046              ilink::~ilink()
000000000059aca0  w    F .text	0000000000000067              routine_hash_search(char const*, char const*, char const*, char const*, char const*, bool, bool)
0000000000889b04  w    F .text	000000000000001b              List<sp_instr_opt_meta>::~List()
00000000005a4b92 g     F .text	00000000000003b0              lock_table_names(THD*, TABLE_LIST*, TABLE_LIST*, unsigned long, unsigned int)
00000000006769ad g     F .text	00000000000003a4              get_schema_tables_result(JOIN*, enum_schema_table_state)
00000000012ca7a0 g     O .data	00000000000000b0              my_charset_utf8mb4_danish_uca_ci
00000000005ee640 g     F .text	0000000000000023              st_select_lex_node::add_table_to_list(THD*, Table_ident*, st_mysql_lex_string*, unsigned long, thr_lock_type, enum_mdl_type, List<Index_hint>*, st_mysql_lex_string*)
000000000070eb94  w    F .text	0000000000000041              Sys_var_dbug::~Sys_var_dbug()
00000000010880b0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_convert_tz
000000000080944c  w    F .text	00000000000000b6              Item_sum_hybrid::Item_sum_hybrid(THD*, Item_sum_hybrid*)
00000000007376e0  w    F .text	00000000000000a8              Foreign_key::Foreign_key(st_mysql_lex_string const&, List<Key_part_spec>&, Table_ident*, List<Key_part_spec>&, unsigned int, unsigned int, unsigned int)
0000000000899fa0  w    F .text	00000000000000c5              field_real::avg(String*, unsigned long long)
000000000070a6ca  w    F .text	0000000000000088              Sys_var_max_user_conn::Sys_var_max_user_conn(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned int, unsigned int, unsigned int, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
00000000008098ae  w    F .text	0000000000000040              Item_sum_xor::Item_sum_xor(THD*, Item_sum_xor*)
00000000007b152a  w    F .text	000000000000002b              Item_func_ne::~Item_func_ne()
000000000057b1ac g     F .text	000000000000002d              sp_cache_enforce_limit(sp_cache*, unsigned long)
0000000000799a9e  w    F .text	0000000000000056              Item_aggregate_ref::Item_aggregate_ref(Name_resolution_context*, Item**, char const*, char const*)
00000000012660e0 g     O .data	00000000000000b0              my_charset_latin1
000000000082cfa0  w    F .text	0000000000000020              Log_event::set_artificial_event()
00000000007db2bc  w    F .text	0000000000000023              Item_func_udf_int::val_real()
00000000012136c0 g     O .data	0000000000000100              to_lower_cp1251_bin
00000000007bccce  w    F .text	000000000000005b              Item_func_convert_tz::Item_func_convert_tz(Item*, Item*, Item*)
00000000007d7f1c g     F .text	000000000000013c              Item_func_match::eq(Item const*, bool) const
000000000057d333 g     F .text	00000000000000df              acl_free(bool)
000000000065b30e  w    F .text	0000000000000196              store_key::store_key(THD*, Field*, unsigned char*, unsigned char*, unsigned int)
0000000001081460  w    O .data.rel.ro	0000000000000048              vtable for in_longlong
000000000065a5ac  w    F .text	0000000000000012              subselect_engine::may_be_null()
000000000074e2e8 g     F .text	00000000000001cb              Field_short::store(long long, bool)
000000000070c452  w    F .text	0000000000000042              Sys_var_session_special::session_value_ptr(THD*, st_mysql_lex_string*)
00000000007c21d2  w    F .text	0000000000000041              Create_func_strcmp::~Create_func_strcmp()
000000000074bbba g     F .text	00000000000000db              Field_decimal::sql_type(String&) const
00000000010dc4c0 g     O .data	0000000000000028              global_plugin_typelib_names
00000000007677a4  w    F .text	000000000000003c              Field_bit::get_image(unsigned char*, unsigned int, charset_info_st*)
00000000007bd1ce  w    F .text	0000000000000026              Create_func_arg0::~Create_func_arg0()
00000000007b0830  w    F .text	0000000000000046              Item_func_like::~Item_func_like()
00000000010c2228  w    O .data.rel.ro	0000000000000028              vtable for TRP_ROR_UNION
00000000006fb732 g     F .text	000000000000016c              trans_xa_prepare(THD*)
0000000000739cda  w    F .text	0000000000000064              Item_func_trim::Item_func_trim(Item*, Item*)
0000000001088e30  w    O .data.rel.ro	0000000000000398              vtable for Item_func_bit_length
00000000006f04ac g     F .text	0000000000000032              unregister_binlog_storage_observer
000000000136ce30 g     O .bss	0000000000000004              sync_relayloginfo_period
0000000000000000       F *UND*	0000000000000000              strerror@@GLIBC_2.2.5
0000000000558b12  w    F .text	000000000000004e              base_ilist::push_back(ilink*)
00000000007c22d0  w    F .text	000000000000002d              Create_func_subtime::Create_func_subtime()
000000000080a786  w    F .text	0000000000000046              Item_sum_min::~Item_sum_min()
0000000000765694  w    F .text	000000000000007a              Field_medium::Field_medium(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, bool, bool)
000000000136f240 g     O .bss	0000000000000070              LOCK_error_log
00000000009827e6  w    F .text	000000000000002b              ha_heap::~ha_heap()
0000000001086f40  w    O .data.rel.ro	0000000000000030              vtable for Create_func_row_count
00000000010ef780 g     O .data	0000000000000010              table_performance_timers::m_field_def
00000000007dd682  w    F .text	000000000000002b              Item_func_sqrt::~Item_func_sqrt()
00000000007bbfec  w    F .text	000000000000005b              Item_func_export_set::Item_func_export_set(Item*, Item*, Item*, Item*, Item*)
00000000007ff5a8 g     F .text	0000000000000025              Item_sum_num::val_decimal(my_decimal*)
00000000007712b6 g     F .text	000000000000011b              get_ha_partition(partition_info*)
00000000007e0f56  w    F .text	0000000000000157              MBR::touches(MBR const*)
0000000000560a1c g     F .text	000000000000003a              make_password_from_salt
000000000070ddd4  w    F .text	0000000000000150              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::do_check(THD*, set_var*)
00000000008479d2 g     F .text	000000000000005e              Delete_rows_log_event::Delete_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
000000000090f272  w    F .text	0000000000000031              PFS_triple_index::PFS_triple_index(unsigned int, unsigned int, unsigned int)
000000000065c8e8  w    F .text	000000000000001d              List_iterator<Index_hint>::operator++(int)
00000000008cfb9c g     F .text	0000000000000094              get_collation_number
00000000007be0c8  w    F .text	0000000000000041              Create_func_connection_id::~Create_func_connection_id()
000000000057b30a  w    F .text	0000000000000015              sp_head::sp_cache_version() const
00000000005cf590  w    F .text	000000000000002e              Statement::set_query_inner(CSET_STRING const&)
00000000007c0db8  w    F .text	000000000000002d              Create_func_name_const::Create_func_name_const()
00000000012cbc40 g     O .data	00000000000000b0              my_charset_utf32_hungarian_uca_ci
000000000138e308 g     O .bss	0000000000000008              pfs_allocated_memory
0000000000ba71aa g     F .text	0000000000000010              vio_is_no_name_error
000000000136dcc0 g     O .bss	0000000000000200              mysql_charsets_dir
0000000000656aba g     F .text	00000000000004e3              TABLE_LIST::print(THD*, String*, enum_query_type)
00000000007667b0  w    F .text	000000000000000f              Field_datetime::match_collation_to_optimize_range() const
000000000082bf5e g     F .text	000000000000006f              TC_LOG::using_heuristic_recover()
00000000006788bc  w    F .text	0000000000000026              List<char>::concat(List<char>*)
00000000008495c0  w    F .text	000000000000001b              Table_map_log_event::is_valid() const
00000000007ec844 g     F .text	00000000000001a7              Item_func_make_set::fix_length_and_dec()
00000000008f62c6 g     F .text	0000000000000324              my_thread_global_init
00000000007ef18c g     F .text	000000000000026b              Item_func_unhex::val_str(String*)
00000000007ec7de g     F .text	0000000000000066              Item_func_make_set::split_sum_func(THD*, Item**, List<Item>&)
00000000008551bd g     F .text	00000000000000dd              check_time_range
00000000008175d8  w    F .text	0000000000000046              Item_func_makedate::~Item_func_makedate()
0000000000c00c00 g     O .rodata	0000000000000004              _IO_stdin_used
00000000008c8540 g     F .text	0000000000000365              Event_db_repository::index_read_for_db_for_i_s(THD*, TABLE*, TABLE*, char const*)
00000000005a6da8 g     F .text	0000000000000173              close_tables_for_reopen(THD*, TABLE_LIST**, MDL_savepoint const&)
00000000012cc4e0 g     O .data	00000000000000b0              my_charset_utf16_turkish_uca_ci
000000000106c918  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_set
00000000007eb056 g     F .text	000000000000014e              Item_func_user::init(char const*, char const*)
00000000007f30a6  w    F .text	0000000000000046              Item_func_conv::~Item_func_conv()
00000000005ee8a8 g     F .text	0000000000000022              st_select_lex::set_braces(bool)
000000000082d848  w    F .text	000000000000001e              binlog_cache_data::set_pending(Rows_log_event*)
0000000000737f5e  w    F .text	000000000000005a              Item_sum_bit::Item_sum_bit(Item*, unsigned long long)
00000000007bc7ae  w    F .text	000000000000004a              Item_func_glength::Item_func_glength(Item*)
00000000007da9d8  w    F .text	0000000000000046              Item_real_func::~Item_real_func()
0000000000606b06  w    F .text	0000000000000012              Item_func::arguments() const
00000000005f1a2c  w    F .text	000000000000001b              List<Item_func_match>::List()
000000000138c994 g     O .bss	0000000000000001              my_disable_locking
00000000007f9b70 g     F .text	0000000000000046              subselect_engine::set_thd(THD*)
0000000000758162 g     F .text	000000000000026f              Field_string::val_real()
0000000000808c7e  w    F .text	000000000000002e              Item_sum_sum::func_name() const
000000000095222d g     F .text	00000000000001bf              _mi_read_pack_record
000000000075ce48 g     F .text	0000000000000050              Field_enum::key_type() const
0000000000b5b7e7 g     F .text	0000000000000023              tina_update_status
0000000001375060 g     O .bss	0000000000000060              my_locale_te_IN
0000000000000000       F *UND*	0000000000000000              realpath@@GLIBC_2.3
00000000007beabe  w    F .text	0000000000000041              Create_func_des_encrypt::~Create_func_des_encrypt()
0000000000796d78  w    F .text	0000000000000022              Item_ident::change_context_processor(unsigned char*)
00000000005f2ab5 g     F .text	00000000000000d3              start_handle_manager()
000000000065a36a  w    F .text	000000000000002b              COND_EQUAL::~COND_EQUAL()
00000000005b9f36 g     F .text	00000000000001f3              Query_cache::append_next_free_block(Query_cache_block*, unsigned long)
000000000061ba32 g     F .text	000000000000002a              Protocol_local::store_time(st_mysql_time*)
000000000087285e  w    F .text	0000000000000090              SEL_ARG::clone_last(SEL_ARG*)
0000000000b7a4e7 g     F .text	000000000000004d              _db_setjmp_
00000000007c30ba  w    F .text	0000000000000026              Create_func_year_week::~Create_func_year_week()
000000000061c312  w    F .text	0000000000000026              Execute_sql_statement::~Execute_sql_statement()
0000000000796960  w    F .text	0000000000000041              Item::is_datetime() const
00000000005aef44  w    F .text	0000000000000065              MDL_context::has_locks() const
000000000075ffe4 g     F .text	00000000000000c9              Field_bit::key_cmp(unsigned char const*, unsigned int)
00000000007d8a48 g     F .text	00000000000000dd              Item_func_sp::Item_func_sp(Name_resolution_context*, sp_name*, List<Item>&)
0000000000561dd6 g     F .text	0000000000000055              Protocol::init(THD*)
0000000000b7347d g     F .text	00000000000001e8              my_redel
000000000070b27e  w    F .text	000000000000003c              Sys_var_set::session_update(THD*, set_var*)
00000000008e45ba g     F .text	00000000000003d4              cleanup_dirname
000000000080fe38 g     F .text	0000000000000123              Item_func_sec_to_time::val_str(String*)
00000000005d71d8  w    F .text	0000000000000045              is_infoschema_db(char const*)
00000000007bf7e4  w    F .text	0000000000000026              Create_func_geometryn::~Create_func_geometryn()
00000000006c1bda  w    F .text	000000000000002d              Time_zone_utc::Time_zone_utc()
0000000000b5e3f4 g     F .text	000000000000010f              Transparent_file::get_value(unsigned long long)
0000000000559c9c  w    F .text	0000000000000026              List_iterator_fast<Buffered_log>::List_iterator_fast(List<Buffered_log>&)
000000000059a22c  w    F .text	00000000000000be              ACL_PROXY_USER::granted_on(char const*, char const*)
0000000000678636  w    F .text	000000000000002b              Open_tables_backup::Open_tables_backup()
000000000073c850  w    F .text	0000000000000038              Repair_table_statement::Repair_table_statement(LEX*)
000000000076403c  w    F .text	0000000000000028              my_decimal2double(unsigned int, my_decimal const*, double*)
000000000060eb6b g     F .text	00000000000001d3              find_sys_var(THD*, char const*, unsigned int)
00000000007cc742 g     F .text	00000000000000d2              Item_func_units::val_real()
0000000000000000       F *UND*	0000000000000000              pthread_cond_broadcast@@GLIBC_2.3.2
00000000010812b0  w    O .data.rel.ro	0000000000000048              vtable for cmp_item_real
00000000007fc73c  w    F .text	0000000000000054              select_max_min_finder_subselect::select_max_min_finder_subselect(Item_subselect*, bool)
0000000000816c18  w    F .text	000000000000000f              Item_time_typecast::field_type() const
00000000007bd992  w    F .text	000000000000002d              Create_func_atan::Create_func_atan()
00000000007c9f9e g     F .text	0000000000000031              Item_func_abs::fix_length_and_dec()
00000000013863a8 g     O .bss	0000000000000008              Create_func_centroid::s_singleton
00000000005e8b32  w    F .text	000000000000002e              THD::record_first_successful_insert_id_in_cur_stmt(unsigned long long)
0000000000678888  w    F .text	000000000000001a              List<char>::head_ref()
00000000008eb172 g     F .text	00000000000000a8              bitmap_xor
00000000007bcc30  w    F .text	0000000000000065              Item_func_date_format::Item_func_date_format(Item*, Item*, bool)
00000000007bdc80  w    F .text	000000000000002d              Create_func_ceiling::Create_func_ceiling()
00000000007bf936  w    F .text	000000000000002d              Create_func_greatest::Create_func_greatest()
000000000065a44e  w    F .text	0000000000000040              Item_cond_or::Item_cond_or(Item*, Item*)
000000000073acf0  w    F .text	0000000000000038              Item_typecast::Item_typecast(Item*)
000000000097f297 g     F .text	0000000000000095              _mi_ft_segiterator_dummy_init
0000000000853a5f g     F .text	0000000000000e59              str_to_datetime
000000000121c100 g     O .data	0000000000000100              to_lower_geostd8_bin
0000000001072258  w    O .data.rel.ro	0000000000000290              vtable for Field_longlong
00000000008d3767 g     F .text	00000000000000bf              my_hash_free
0000000000765328  w    F .text	000000000000000f              Field_new_decimal::type() const
00000000008732aa  w    F .text	000000000000000f              TABLE_READ_PLAN::operator delete(void*, unsigned long)
000000000077bcfe  w    F .text	000000000000001a              handler::get_tablespace_name(THD*, char*, unsigned int)
0000000000768418  w    F .text	0000000000000046              Field_medium::~Field_medium()
0000000000599268  w    F .text	0000000000000085              hash_filo::hash_filo(unsigned int, unsigned int, unsigned int, unsigned char* (*)(unsigned char const*, unsigned long*, char), void (*)(void*), charset_info_st*)
0000000000753ff2 g     F .text	0000000000000110              Field_time::val_int()
0000000001213be0 g     O .data	0000000000000100              to_lower_cp1251_general_ci
0000000001088500  w    O .data.rel.ro	0000000000000030              vtable for Create_func_acos
0000000000558d9a  w    F .text	0000000000000046              String::String()
000000000136ef00 g     O .bss	0000000000000098              mysql_tmpdir_list
000000000087dc10 g     F .text	00000000000002af              sp_cache_routine(THD*, int, sp_name*, bool, sp_head**)
00000000007884d0 g     F .text	0000000000000050              Item_copy_int::val_decimal(my_decimal*)
00000000006c7bfe g     F .text	0000000000000041              Event_queue_element::~Event_queue_element()
0000000000871ca2  w    F .text	0000000000000063              QUICK_RANGE::make_min_endpoint(st_key_range*, unsigned int, unsigned long)
00000000007bb7b4  w    F .text	000000000000004a              Item_func_des_decrypt::Item_func_des_decrypt(Item*)
0000000000815ec0  w    F .text	0000000000000029              Item_func_weekday::func_name() const
000000000077c6fe  w    F .text	0000000000000041              Ha_delete_table_error_handler::~Ha_delete_table_error_handler()
00000000010b7758  w    O .data.rel.ro	00000000000003a0              vtable for Item_date_typecast
0000000000849624  w    F .text	000000000000001c              Rows_log_event::get_db()
0000000000784728 g     F .text	0000000000000050              Item_field::val_int_endpoint(bool, bool*)
0000000000822536 g     F .text	00000000000000d7              MYSQL_LOG::generate_name(char const*, char const*, bool, char*)
00000000005d0afa  w    F .text	000000000000001a              List<Alter_column>::pop()
000000000098edac g     F .text	0000000000000021              ha_myisammrg::records()
0000000000871bf2  w    F .text	00000000000000b0              QUICK_RANGE::QUICK_RANGE(unsigned char const*, unsigned int, unsigned long, unsigned char const*, unsigned int, unsigned long, unsigned int)
00000000005b1504  w    F .text	000000000000002b              Field_iterator_table_ref::~Field_iterator_table_ref()
000000000136e0f0 g     O .bss	0000000000000008              key_map_empty
0000000001375d20 g     O .bss	0000000000000060              my_locale_es_CL
00000000007c14ee  w    F .text	0000000000000041              Create_func_pow::~Create_func_pow()
00000000012ca1a0 g     O .data	00000000000000b0              my_charset_utf8mb4_romanian_uca_ci
0000000000658f60  w    F .text	0000000000000088              Field_double::Field_double(unsigned int, bool, char const*, unsigned char, char)
000000000091bbfd g     F .text	00000000000001be              _mi_report_crashed
0000000000ba69a6 g     F .text	00000000000000ff              vio_get_normalized_ip_string
00000000005ac005 g     F .text	0000000000000405              setup_tables(THD*, Name_resolution_context*, List<TABLE_LIST>*, TABLE_LIST*, TABLE_LIST**, bool)
00000000008d4dd8 g     F .text	000000000000003d              my_hash_replace
00000000005a2746 g     F .text	000000000000013a              Locked_tables_list::unlock_locked_tables(THD*)
00000000007b45f6 g     F .text	0000000000000098              Create_func_greatest::create_native(THD*, st_mysql_lex_string, List<Item>*)
00000000005d149e  w    F .text	000000000000033f              Rows_log_event* THD::binlog_prepare_pending_rows_event<Update_rows_log_event>(TABLE*, unsigned int, st_bitmap const*, unsigned long, unsigned long, bool, Update_rows_log_event*)
00000000007a26d0 g     F .text	0000000000000bcd              Item_func_between::val_int()
00000000008991c8 g     F .text	00000000000002c2              analyse::change_columns(List<Item>&)
00000000005b37aa g     F .text	00000000000001d6              Query_cache::Query_cache(unsigned long, unsigned long, unsigned long, unsigned int, unsigned int)
00000000010731b8  w    O .data.rel.ro	0000000000000290              vtable for Field_decimal
0000000000751ab4 g     F .text	00000000000000b6              Field_double::store(double)
0000000000000000       F *UND*	0000000000000000              write@@GLIBC_2.2.5
00000000007db156  w    F .text	0000000000000058              Item_udf_func::~Item_udf_func()
0000000000908a32 g     F .text	000000000000009b              init_table_share(unsigned int)
0000000000805b04 g     F .text	0000000000000025              Item_sum_udf_decimal::val_str(String*)
000000000082cff4  w    F .text	0000000000000046              Start_log_event_v3::~Start_log_event_v3()
0000000000708614  w    F .text	0000000000000096              MYSQL_QUERY_LOG::open_query_log(char const*)
00000000005c4fb6 g     F .text	0000000000000095              select_send::abort_result_set()
0000000000990b33 g     F .text	0000000000000108              myrg_detach_children
000000000060ae54 g     F .text	0000000000000116              plugin_unlock_list(THD*, st_plugin_int***, unsigned int)
000000000070ce1c  w    F .text	0000000000000014              Sys_var_tz::check_update_type(Item_result)
00000000010dde00 g     O .data	00000000000003e8              events_fields_info
00000000007fe398 g     F .text	0000000000000c07              Aggregator_distinct::setup(THD*)
0000000000000000       F *UND*	0000000000000000              readdir64_r@@GLIBC_2.2.5
00000000007db116  w    F .text	0000000000000020              Item_udf_func::result_type() const
00000000005bf8b4  w    F .text	00000000000000b0              Query_cache_query::lock_writing()
00000000006b8c0a g     F .text	00000000000000bc              Field_iterator_table_ref::set(TABLE_LIST*)
00000000008d3d49 g     F .text	00000000000000b4              my_hash_next
000000000065c02a  w    F .text	000000000000002e              List<Item_func_match>::List(List<Item_func_match> const&, st_mem_root*)
000000000055c236  w    F .text	000000000000002b              NAMED_ILINK::~NAMED_ILINK()
0000000000566c52  w    F .text	0000000000000073              Item::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
00000000005cfec8  w    F .text	0000000000000045              Relay_log_info::cleanup_after_session()
000000000088dc96 g     F .text	000000000000000f              Gis_point::get_data_size() const
000000000065bfe6  w    F .text	000000000000001d              I_List_iterator<COND_CMP>::operator++(int)
00000000006cdb40 g     F .text	00000000000000fa              Events::dump_internal_status()
000000000059ab3c  w    F .text	000000000000002d              Acl_table_intact::Acl_table_intact()
00000000006d4322 g     F .text	00000000000000cb              partition_info::print_debug(char const*, unsigned int*)
00000000005b0872  w    F .text	000000000000002d              MDL_deadlock_discovery_repair_handler::MDL_deadlock_discovery_repair_handler()
0000000000858b7c g     F .text	00000000000000cc              SEL_ARG::SEL_ARG(SEL_ARG&)
000000000138e1e0 g     O .bss	0000000000000100              PFS_atomic::m_rwlock_array
00000000007a7c4e g     F .text	0000000000000135              Item_func_in::fix_fields(THD*, Item**)
0000000000808816  w    F .text	0000000000000016              Item_sum::make_unique()
00000000010818f8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_case
00000000009928c2 g     F .text	00000000000000f0              myrg_reset
00000000010c1c78  w    O .data.rel.ro	0000000000000020              vtable for Slave_reporting_capability
0000000000782d88 g     F .text	0000000000000134              Item_ident_for_show::make_field(Send_field*)
000000000078fa76 g     F .text	0000000000000129              Item_ref::set_properties()
00000000008bbff6 g     F .text	00000000000001b2              Item_nodeset_func_parentbyname::val_nodeset(String*)
00000000005c8732 g     F .text	000000000000009d              Query_arena::free_items()
0000000000885210 g     F .text	000000000000018b              sp_head::optimize()
00000000005598e8  w    F .text	000000000000001a              I_List<i_string>::get()
00000000007d2a88 g     F .text	0000000000000071              Item_func_set_user_var::register_field_in_read_map(unsigned char*)
0000000000888d98  w    F .text	0000000000000026              MDL_key::name_length() const
00000000007c490e g     F .text	000000000000007d              Item_func::print(String*, enum_query_type)
000000000106c8a0  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_plugin
00000000007dc8b0  w    F .text	0000000000000046              Item_func_udf_str::~Item_func_udf_str()
000000000063aee9 g     F .text	000000000000003e              rr_unlock_row(st_join_table*)
00000000007bc71a  w    F .text	000000000000004a              Item_func_numpoints::Item_func_numpoints(Item*)
00000000007c2654  w    F .text	000000000000002d              Create_func_to_seconds::Create_func_to_seconds()
0000000000911e62 g     F .text	0000000000000075              table_setup_timers::table_setup_timers()
00000000007ddaf6  w    F .text	000000000000002b              Item_func_div::~Item_func_div()
000000000080a54c  w    F .text	0000000000000046              Item_avg_field::~Item_avg_field()
00000000009825a2 g     F .text	00000000000000fd              ha_heap::create(char const*, TABLE*, st_ha_create_information*)
00000000005652ea  w    F .text	0000000000000013              Warning_info::statement_warn_count() const
00000000010ee8e8 g     O .data	0000000000000008              dflt_key_cache
000000000065a894  w    F .text	00000000000000d5              TMP_TABLE_PARAM::cleanup()
00000000007f3a66  w    F .text	0000000000000058              Item_func_left::~Item_func_left()
000000000097724d g     F .text	00000000000008ac              thr_find_all_keys
0000000000679c14 g     F .text	0000000000000080              String::append_ulonglong(unsigned long long)
0000000000b5d054 g     F .text	0000000000000695              ha_tina::repair(THD*, st_ha_check_opt*)
000000000079b986  w    F .text	0000000000000026              List<Cached_item>::List(List<Cached_item> const&)
0000000000579fc8  w    F .text	000000000000001a              MYSQL_LOG::is_open()
0000000000775002 g     F .text	0000000000000019              handler::ha_table_share_psi(TABLE_SHARE const*) const
00000000012ca860 g     O .data	00000000000000b0              my_charset_utf8mb4_lithuanian_uca_ci
00000000008ea6d2 g     F .text	000000000000005a              bitmap_fast_test_and_set
00000000010ca800 g     O .data.rel.ro	0000000000000028              _ft_vft_boolean
000000000074ba52 g     F .text	0000000000000167              Field_decimal::sort_string(unsigned char*, unsigned int)
00000000007c2b9a  w    F .text	000000000000002d              Create_func_version::Create_func_version()
0000000000606af0  w    F .text	0000000000000015              Item_func::const_item() const
00000000006d2934 g     F .text	00000000000001c3              partition_info::reorganize_into_single_field_col_val()
000000000084953c  w    F .text	000000000000002b              Execute_load_query_log_event::~Execute_load_query_log_event()
00000000007b46de g     F .text	0000000000000058              Create_func_ifnull::create(THD*, Item*, Item*)
00000000007ff5f4 g     F .text	0000000000000025              Item_sum_int::val_decimal(my_decimal*)
00000000010a4368  w    O .data.rel.ro	0000000000000398              vtable for Item_func_collation
0000000000616ba6 g     F .text	0000000000000255              mysql_sql_stmt_prepare(THD*)
0000000000708890  w    F .text	0000000000000024              CMD_LINE::CMD_LINE(get_opt_arg_type, int)
00000000005ee664 g     F .text	000000000000000f              st_select_lex_node::get_table_join_options()
000000000056a208 g     F .text	0000000000000034              sys_var::charset(THD*)
00000000007a6e68 g     F .text	0000000000000055              in_decimal::in_decimal(unsigned int)
00000000006badc8  w    F .text	000000000000001b              SQL_CRYPT::~SQL_CRYPT()
000000000106c5d0  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_tz
000000000065a2f6  w    F .text	000000000000002d              Item_equal_iterator::Item_equal_iterator(Item_equal&)
00000000007bda56  w    F .text	0000000000000041              Create_func_benchmark::~Create_func_benchmark()
0000000000926f97 g     F .text	000000000000102e              mi_repair
00000000007b53a0 g     F .text	0000000000000060              Create_func_maketime::create(THD*, Item*, Item*, Item*)
00000000010c6bc0  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_to_const_comparator
0000000000566fc4  w    F .text	0000000000000013              Item::neg_transformer(THD*)
00000000007d476e g     F .text	0000000000000076              Item_func_get_user_var::val_decimal(my_decimal*)
00000000005bf4c2  w    F .text	0000000000000024              Query_cache_result::data()
000000000060fa7a g     F .text	000000000000017a              plugin_thdvar_cleanup(THD*)
00000000007bbec2  w    F .text	0000000000000011              Item_func_like_range_max::func_name() const
000000000079a485  w    F .text	0000000000000009              non-virtual thunk to Item_trigger_field::~Item_trigger_field()
00000000007f17e4  w    F .text	00000000000000b7              String::set(String&, unsigned int, unsigned int)
000000000105e3a0 g     O .data.rel.ro	0000000000000020              trg_action_time_type_names
0000000000599a98  w    F .text	00000000000000f7              ACL_PROXY_USER::init(TABLE*, st_mem_root*)
0000000000808678  w    F .text	0000000000000046              Aggregator::~Aggregator()
000000000077b310  w    F .text	00000000000000aa              xid_t::set(unsigned long long)
00000000006e7db6 g     F .text	00000000000002eb              prepare_new_connection_state(THD*)
00000000007bfa90  w    F .text	0000000000000041              Create_func_ifnull::~Create_func_ifnull()
000000000090df68  w    F .text	0000000000000024              PFS_double_index::PFS_double_index(unsigned int, unsigned int)
00000000007aeb62  w    F .text	0000000000000011              Item_func_strcmp::func_name() const
000000000089c05c  w    F .text	000000000000004f              Select_materialize::Select_materialize(select_result*)
0000000000817900  w    F .text	000000000000002b              Item_date_add_interval::~Item_date_add_interval()
0000000001394cc0 g     O .bss	0000000000000004              key_THR_LOCK_charset
00000000007ae848  w    F .text	0000000000000011              Item_func_ge::func_name() const
00000000007d915e g     F .text	0000000000000143              Item_func_sp::fix_length_and_dec()
0000000000850da6 g     F .text	0000000000000a93              Old_rows_log_event::find_row(Relay_log_info const*)
0000000000841ca0 g     F .text	000000000000008d              Rows_log_event::~Rows_log_event()
000000000073aaee  w    F .text	0000000000000038              Item_func_now::Item_func_now(Item*)
0000000001070db8  w    O .data.rel.ro	0000000000000298              vtable for Field_newdate
00000000005594d0  w    F .text	0000000000000026              Le_creator::~Le_creator()
000000000075c948 g     F .text	0000000000000027              Field_blob::max_packed_col_length(unsigned int)
0000000000848b7a  w    F .text	0000000000000067              sql_ex_info::data_size()
00000000007daace  w    F .text	0000000000000011              Item_func_ln::func_name() const
000000000090a550 g     F .text	000000000000001b              reset_instrument_class_waits()
00000000007df2e2 g     F .text	00000000000001ab              Item_func_point::val_str(String*)
00000000005d1be2  w    F .text	0000000000000046              Item_change_record::~Item_change_record()
0000000000815f3e  w    F .text	0000000000000021              Item_func_weekday::check_valid_arguments_processor(unsigned char*)
0000000000000000       F *UND*	0000000000000000              strchr@@GLIBC_2.2.5
00000000012b3080 g     O .data	0000000000000600              page00Cdata
000000000073d2df g     F .text	00000000000001ae              set_mysql_extended_error
00000000007af6e4  w    F .text	0000000000000059              cmp_item_datetime::cmp_item_datetime(Item*)
000000000087098a g     F .text	0000000000000058              QUICK_GROUP_MIN_MAX_SELECT::update_max_result()
00000000007f1b02  w    F .text	000000000000006a              Item_func_trim::~Item_func_trim()
0000000000790aaa g     F .text	0000000000000067              Item_direct_ref::val_str(String*)
000000000081955f g     F .text	00000000000001e6              key_unpack(String*, TABLE*, unsigned int)
00000000008f896c g     F .text	00000000000000bb              my_print_stacktrace
000000000120d1a0 g     O .data	0000000000000100              sort_order_greek_general_ci
00000000005f1e36  w    F .text	000000000000001b              List<Item_func_set_user_var>::List()
0000000000920324 g     F .text	000000000000001c              ha_myisam::checksum() const
000000000082a64e g     F .text	0000000000000103              sql_print_error(char const*, ...)
000000000080555a g     F .text	00000000000001f2              Item_variance_field::val_real()
0000000000871e46  w    F .text	0000000000000035              QUICK_SELECT_I::~QUICK_SELECT_I()
00000000007bae58  w    F .text	0000000000000040              Item_func_udf_str::Item_func_udf_str(st_udf_func*, List<Item>&)
00000000007bc3f8  w    F .text	0000000000000038              Item_func_centroid::Item_func_centroid(Item*)
000000000136cd71 g     O .bss	0000000000000001              thread_running_lock
000000000079bd2e  w    F .text	000000000000002b              Cached_item_int::~Cached_item_int()
0000000000659c44  w    F .text	0000000000000040              Item_func_rollup_const::val_decimal(my_decimal*)
00000000007bd5a6  w    F .text	0000000000000041              Create_func_addtime::~Create_func_addtime()
00000000007bf54a  w    F .text	0000000000000041              Create_func_from_unixtime::~Create_func_from_unixtime()
00000000009205f2  w    F .text	0000000000000024              Bitmap<64u>::intersect_extended(unsigned long long)
000000000107b818  w    O .data.rel.ro	0000000000000360              vtable for Item_aggregate_ref
000000000082c980 g     F .text	0000000000000015              mysql_bin_log_file_name
000000000084eaea g     F .text	000000000000008d              Old_rows_log_event::~Old_rows_log_event()
00000000007d0868 g     F .text	00000000000000af              Item_func_udf_decimal::val_int()
000000000136efe8 g     O .bss	0000000000000008              error_message_charset_info
0000000000606c50  w    F .text	000000000000001e              Item_func::check_valid_arguments_processor(unsigned char*)
00000000013759c0 g     O .bss	0000000000000060              my_locale_en_CA
00000000007f1bbc  w    F .text	0000000000000011              Item_func_rtrim::func_name() const
000000000082ccdf  w    F .text	0000000000000230              normalize_binlog_name(char*, char const*, bool)
00000000008a9270  w    F .text	000000000000001b              List<XML_TAG>::List()
000000000088cf4e  w    F .text	0000000000000046              Select_fetch_into_spvars::~Select_fetch_into_spvars()
00000000005cfd76  w    F .text	000000000000000f              select_subselect::send_eof()
0000000000796049  w    F .text	0000000000000041              my_decimal_neg(st_decimal_t*)
00000000007dd0e4  w    F .text	0000000000000046              Item_func_ceiling::~Item_func_ceiling()
0000000000801144 g     F .text	000000000000012a              Item_sum_avg::create_tmp_field(bool, TABLE*, unsigned int)
0000000000893432  w    F .text	000000000000000b              Geometry::operator delete(void*)
000000000090a09d g     F .text	000000000000018a              sanitize_table_schema_name(char const*)
0000000000659418  w    F .text	000000000000002b              Copy_field::Copy_field()
000000000090f4e6  w    F .text	0000000000000041              table_events_waits_summary_by_instance::~table_events_waits_summary_by_instance()
0000000001394d20 g     O .bss	0000000000000008              debug_sync_C_callback_ptr
00000000005bf592  w    F .text	0000000000000015              Query_cache::is_disabled()
0000000000912882 g     F .text	0000000000000071              table_rwlock_instances::table_rwlock_instances()
0000000000812b76 g     F .text	0000000000000072              Item_date_typecast::get_date(st_mysql_time*, unsigned int)
0000000001395694 g     O .bss	0000000000000004              mi_key_file_log
0000000000777a36 g     F .text	000000000000003e              handler::ha_drop_partitions(char const*)
0000000000787e64 g     F .text	0000000000000036              Item_param::set_out_param_info(Send_field*)
000000000077c256  w    F .text	0000000000000012              handler::disable_indexes(unsigned int)
00000000007bb69c  w    F .text	0000000000000057              Item_func_substr_index::Item_func_substr_index(Item*, Item*, Item*)
0000000000806308 g     F .text	000000000000048b              dump_leaf_key
00000000005c79d8 g     F .text	000000000000003d              select_subselect::select_subselect(Item_subselect*)
0000000000744bc9 g     F .text	00000000000000a6              mysql_send_query
00000000008f4f63 g     F .text	0000000000000374              my_create_with_symlink
0000000000697ab0 g     F .text	00000000000001f1              Handle_old_incorrect_trigger_table_hook::process_unknown_string(char*&, unsigned char*, st_mem_root*, char*)
00000000009ac3a0  w    F .text	000000000000005a              handler_add_index::handler_add_index(TABLE*, st_key*, unsigned int)
00000000005ed9fc g     F .text	0000000000000115              st_select_lex_unit::init_query()
00000000007653c6  w    F .text	000000000000007a              Field_tiny::Field_tiny(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, bool, bool)
00000000007b1774  w    F .text	000000000000002b              cmp_item_sort_string_in_static::~cmp_item_sort_string_in_static()
00000000007f1a72  w    F .text	0000000000000011              Item_func_lcase::func_name() const
0000000000982752 g     F .text	000000000000004d              ha_heap::check_if_incompatible_data(st_ha_create_information*, unsigned int)
00000000013867c8 g     O .bss	0000000000000008              Create_func_uuid::s_singleton
000000000070c6ec  w    F .text	0000000000000033              Sys_var_have::global_update(THD*, set_var*)
00000000007bf35a  w    F .text	000000000000002d              Create_func_format::Create_func_format()
00000000007e0500 g     F .text	0000000000000131              Item_func_numpoints::val_int()
0000000000737e2c  w    F .text	00000000000000b6              Item_sum_hybrid::Item_sum_hybrid(Item*, int)
00000000007dc48a  w    F .text	0000000000000071              Item_func_get_user_var::~Item_func_get_user_var()
0000000001385e00 g     O .bss	0000000000000008              savepoint_alloc_size
00000000007f4156  w    F .text	0000000000000058              Item_func_md5::~Item_func_md5()
000000000091087e  w    F .text	0000000000000041              table_file_summary_by_event_name::~table_file_summary_by_event_name()
000000000089387c  w    F .text	0000000000000041              Gis_line_string::~Gis_line_string()
00000000007982e6  w    F .text	000000000000002b              Item_direct_ref::~Item_direct_ref()
000000000082cbfe  w    F .text	0000000000000026              Log_event_handler::~Log_event_handler()
000000000065cac0  w    F .text	0000000000000046              Item_func_trig_cond::~Item_func_trig_cond()
000000000106cb70  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_keycache
00000000007915be g     F .text	0000000000000137              Item_default_value::transform(Item* (Item::*)(unsigned char*), unsigned char*)
00000000005da9c3 g     F .text	0000000000000219              mysql_ha_close(THD*, TABLE_LIST*)
000000000081d03a g     F .text	0000000000000120              Log_to_file_event_handler::log_general(THD*, long, char const*, unsigned int, int, char const*, unsigned int, char const*, unsigned int, charset_info_st*)
000000000109db68  w    O .data.rel.ro	0000000000000398              vtable for Item_func_issimple
00000000013865e8 g     O .bss	0000000000000008              Create_func_log::s_singleton
000000000136fa40 g     O .bss	0000000000000038              COND_thread_count
00000000007ac718 g     F .text	0000000000000062              Item_cond_or::neg_transformer(THD*)
000000000073865c  w    F .text	0000000000000040              Item_func_div::Item_func_div(Item*, Item*)
00000000006ec234 g     F .text	0000000000000269              Event_parse_data::init_definer(THD*)
000000000074eb00 g     F .text	0000000000000305              Field_medium::store(double)
000000000109f498  w    O .data.rel.ro	0000000000000398              vtable for Item_func_centroid
0000000000563632 g     F .text	0000000000000151              Protocol_text::store_decimal(my_decimal const*)
000000000136cd40 g     O .bss	0000000000000008              slave_max_allowed_packet
00000000006bb216  w    F .text	000000000000001b              List_iterator<String>::List_iterator()
000000000079932c  w    F .text	000000000000001e              Item_cache::eq(Item const*, bool) const
00000000006e3b0b g     F .text	000000000000014f              create_server(THD*, st_lex_server_options*)
0000000001373ec0 g     O .bss	0000000000000060              my_locale_ar_SA
0000000000753566 g     F .text	000000000000002a              Field_timestamp::get_time(st_mysql_time*)
00000000007c1394  w    F .text	000000000000002d              Create_func_pi::Create_func_pi()
0000000000848fe6  w    F .text	0000000000000036              Load_log_event::do_apply_event(Relay_log_info const*)
0000000000907030 g     F .text	00000000000001cd              create_cond(PFS_cond_class*, void const*)
000000000057a126  w    F .text	0000000000000032              Protocol::store(long long)
0000000001386518 g     O .bss	0000000000000008              Create_func_get_lock::s_singleton
00000000008edfe9 g     F .text	0000000000000130              my_gethwaddr
000000000083ee9a g     F .text	000000000000049a              Create_file_log_event::do_apply_event(Relay_log_info const*)
00000000006c779c g     F .text	0000000000000026              Event_basic::~Event_basic()
0000000001386458 g     O .bss	0000000000000008              Create_func_des_decrypt::s_singleton
000000000136cc48 g     O .bss	0000000000000004              opt_large_page_size
00000000007f66b4 g     F .text	00000000000000a3              Item_exists_subselect::fix_length_and_dec()
000000000073cae2  w    F .text	0000000000000025              List<sp_cond_type>::push_front(sp_cond_type*)
00000000007b598a g     F .text	000000000000005d              Create_func_overlaps::create(THD*, Item*, Item*)
00000000005593f8  w    F .text	0000000000000041              Ge_creator::~Ge_creator()
0000000000766cd8  w    F .text	000000000000001d              Field_varstring::pack_length() const
00000000010879f0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_geometryn
0000000001386508 g     O .bss	0000000000000008              Create_func_geometry_type::s_singleton
000000000089a066  w    F .text	00000000000001ec              field_real::std(String*, unsigned long long)
00000000006bf908 g     F .text	0000000000000032              Time_zone_offset::gmt_sec_to_TIME(st_mysql_time*, long) const
0000000000b671ec g     F .text	00000000000000b5              ha_partition::unlock_row()
0000000000749290 g     F .text	0000000000000069              Field::pack(unsigned char*, unsigned char const*, unsigned int, bool)
0000000000000000       F *UND*	0000000000000000              uncompress
00000000006780f0  w    F .text	0000000000000090              Show_create_error_handler::Show_create_error_handler(THD*, TABLE_LIST*)
000000000065c9a0  w    F .text	000000000000002b              COND_CMP::~COND_CMP()
000000000067fc5c g     F .text	0000000000000171              release_ddl_log()
00000000007b6e9c g     F .text	0000000000000096              Create_func_weekofyear::create(THD*, Item*)
00000000005d1f1b g     F .text	00000000000000c1              my_net_local_init
0000000000796c02  w    F .text	0000000000000014              Item_splocal::type() const
00000000007bad68  w    F .text	0000000000000040              Item_func_udf_int::Item_func_udf_int(st_udf_func*, List<Item>&)
0000000000757710 g     F .text	0000000000000082              Field_datetime::cmp(unsigned char const*, unsigned char const*)
0000000000566b6e  w    F .text	000000000000000b              Item::no_rows_in_result()
000000000066c22d g     F .text	0000000000000e46              store_schema_params(THD*, TABLE*, TABLE*, char const*, bool, char const*)
00000000006b804c g     F .text	000000000000007d              Natural_join_column::Natural_join_column(Field_translator*, TABLE_LIST*)
00000000007674da  w    F .text	000000000000000f              Field_bit::key_type() const
0000000000788486 g     F .text	000000000000004a              Item_copy_int::val_str(String*)
000000000076738c  w    F .text	000000000000002b              Field_enum::~Field_enum()
00000000007dbcd0  w    F .text	000000000000005e              THD::is_connected()
000000000065c63e  w    F .text	0000000000000026              List_iterator<Item_equal>::List_iterator(List<Item_equal>&)
00000000007c31c4  w    F .text	0000000000000046              Item_func_bit_length::~Item_func_bit_length()
00000000008867da g     F .text	0000000000000085              sp_instr_jump::opt_mark(sp_head*, List<sp_instr>*)
0000000000809018  w    F .text	000000000000004a              Item_sum_avg::result_item(Field*)
000000000063b79e g     F .text	0000000000000103              st_join_table::cleanup()
00000000006eb4a2 g     F .text	000000000000008a              Event_parse_data::check_dates(THD*, int)
00000000007e4d26 g     F .text	0000000000000294              Item_func_aes_decrypt::val_str(String*)
00000000005f2b88 g     F .text	00000000000000e4              stop_handle_manager()
0000000000765b80  w    F .text	0000000000000037              Field_longlong::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
000000000073a96a  w    F .text	0000000000000038              Item_func_curtime::Item_func_curtime(Item*)
0000000000889f12  w    F .text	000000000000001d              List_iterator_fast<sp_cond_type>::operator++(int)
000000000090b298 g     F .text	0000000000000034              PFS_truncatable_acl::check(unsigned long, unsigned long*) const
00000000010b56a0  w    O .data.rel.ro	0000000000000060              vtable for Aggregator
00000000007dc77c  w    F .text	000000000000002b              Item_func_release_lock::~Item_func_release_lock()
00000000008c073a  w    F .text	000000000000006a              Item_xml_str_func::~Item_xml_str_func()
0000000000847cba g     F .text	0000000000000071              Update_rows_log_event::Update_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
00000000008d60ab g     F .text	000000000000016e              open_cached_file
00000000010eafe0 g     O .data	0000000000000020              bool_typelib
000000000098eb72 g     F .text	00000000000001f1              ha_myisammrg::append_create_info(String*)
000000000090ef16 g     F .text	0000000000000055              table_events_waits_summary_by_instance::make_mutex_row(PFS_mutex*)
0000000000817202  w    F .text	000000000000000f              Item_func_str_to_date::result_as_longlong()
00000000007c2b74  w    F .text	0000000000000026              Create_func_uuid_short::~Create_func_uuid_short()
00000000005691b8  w    F .text	000000000000002b              i_string::~i_string()
00000000007674ea  w    F .text	0000000000000017              Field_bit::key_length() const
00000000008c23bc  w    F .text	0000000000000046              Item_nodeset_func_rootelement::~Item_nodeset_func_rootelement()
00000000008f1687 g     F .text	000000000000006c              my_micro_time_and_time
000000000092077e  w    F .text	0000000000000086              ha_myisam::ft_init_ext(unsigned int, unsigned int, String*)
0000000000983788 g     F .text	0000000000000386              hp_search
000000000107ea48  w    O .data.rel.ro	0000000000000398              vtable for Item_func_regex
0000000000708544  w    F .text	0000000000000025              Warning_info::warn_count() const
000000000065a9de  w    F .text	0000000000000015              QUICK_GROUP_MIN_MAX_SELECT::is_agg_distinct()
00000000007978fc  w    F .text	000000000000000f              Item_ref::type() const
000000000075c8fc g     F .text	000000000000004c              Field_blob::packed_col_length(unsigned char const*, unsigned int)
000000000087422c  w    F .text	0000000000000026              List_iterator<Item_sum>::List_iterator(List<Item_sum>&)
00000000005ee3bc g     F .text	00000000000000f4              st_select_lex_unit::exclude_tree()
000000000078d07e g     F .text	000000000000004a              Item_decimal::save_in_field(Field*, bool)
000000000080722a g     F .text	000000000000034a              Item_func_group_concat::add()
000000000136cbff g     O .bss	0000000000000001              opt_reckless_slave
00000000006f54b0  w    F .text	0000000000000012              MDL_lock::Ticket_list::bitmap() const
00000000007b6f32 g     F .text	000000000000005d              Create_func_within::create(THD*, Item*, Item*)
00000000007f539e g     F .text	00000000000000eb              Item_singlerow_subselect::Item_singlerow_subselect(st_select_lex*)
000000000086b324 g     F .text	0000000000000080              QUICK_RANGE_SELECT::cmp_prev(QUICK_RANGE*)
00000000007ca0a6 g     F .text	00000000000001d0              Item_func_log::val_real()
00000000005c3fce g     F .text	000000000000011f              THD::convert_string(String*, charset_info_st*, charset_info_st*)
00000000010962e0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_log10
000000000136cba0 g     O .bss	0000000000000004              ld_assume_kernel_is_set
000000000138c488 g     O .bss	0000000000000008              home_dir
0000000000800c90 g     F .text	00000000000000ef              Aggregator_distinct::arg_is_null(bool)
0000000000784f1e g     F .text	0000000000000052              Item_decimal::val_real()
00000000007ae45c  w    F .text	000000000000000f              Item_bool_func2::is_bool_func()
0000000001212c80 g     O .data	0000000000000100              sort_order_latin1_general_ci
000000000070a7fa  w    F .text	00000000000001b6              Sys_var_flagset::Sys_var_flagset(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
00000000007bd510  w    F .text	0000000000000041              Create_func_acos::~Create_func_acos()
0000000000568d1e g     F .text	00000000000000c8              Rpl_filter::table_rule_ent_dynamic_array_to_str(String*, st_dynamic_array*, bool)
0000000000677efe  w    F .text	0000000000000051              Item_return_date_time::Item_return_date_time(char const*, enum_field_types)
0000000001374520 g     O .bss	0000000000000060              my_locale_gu_IN
00000000006021fe g     F .text	00000000000001b7              create_select_for_variable(char const*)
00000000005d07d6  w    F .text	0000000000000026              List<Alter_drop>::disjoin(List<Alter_drop>*)
00000000006621b5 g     F .text	0000000000000248              view_store_create_info(THD*, TABLE_LIST*, String*)
00000000012cc8a0 g     O .data	00000000000000b0              my_charset_utf16_spanish2_uca_ci
0000000001215360 g     O .data	0000000000000100              to_lower_cp1257_bin
00000000013708b4 g     O .bss	0000000000000004              key_file_fileparser
0000000000739058  w    F .text	0000000000000011              Item_func_isfalse::func_name() const
0000000000565bdb g     F .text	0000000000000086              change_rpl_status(unsigned long, unsigned long)
000000000074df1a g     F .text	0000000000000047              Field_tiny::sort_string(unsigned char*, unsigned int)
00000000008e498e g     F .text	0000000000000141              normalize_dirname
000000000079a342  w    F .text	000000000000002b              Item_cache_datetime::~Item_cache_datetime()
0000000000708bcc  w    F .text	0000000000000025              Sys_var_typelib::check_update_type(Item_result)
000000000070b802  w    F .text	000000000000006b              Sys_var_plugin::session_save_default(THD*, set_var*)
00000000007ae8dc  w    F .text	0000000000000040              Item_func_le::Item_func_le(Item*, Item*)
00000000007da86e  w    F .text	000000000000002c              Item_func_int_div::print(String*, enum_query_type)
00000000007b9e2a  w    F .text	0000000000000040              Item_func_unsigned::Item_func_unsigned(Item*)
00000000007aa2d4 g     F .text	00000000000001be              Item_is_not_null_test::val_int()
00000000005bed9c g     F .text	00000000000000f4              dump_node(Query_cache_block_table*, char const*, char const*)
000000000094f619 g     F .text	0000000000000171              mi_keydef_read
00000000010c3f50  w    O .data.rel.ro	00000000000000d0              vtable for Gis_multi_point
00000000007f1f90  w    F .text	0000000000000046              Item_func_user::~Item_func_user()
00000000006d701c g     F .text	0000000000000036              table_def::~table_def()
00000000007acaee g     F .text	00000000000000cc              Item_equal::Item_equal(Item_field*, Item_field*)
000000000098687c g     F .text	0000000000000125              heap_rename
00000000007c149a  w    F .text	0000000000000026              Create_func_pointn::~Create_func_pointn()
00000000005e9694  w    F .text	000000000000001b              I_List<Delayed_insert>::empty()
0000000000852be4  w    F .text	0000000000000090              Field::last_null_byte() const
00000000005b0ef2  w    F .text	000000000000001d              List_iterator<String>::operator++(int)
00000000007e238c  w    F .text	0000000000000046              Item_func_point::~Item_func_point()
000000000090faa8 g     F .text	0000000000000021              table_file_instances::reset_position()
000000000073a898  w    F .text	0000000000000050              Item_str_timefunc::val_decimal(my_decimal*)
00000000007b30ba g     F .text	000000000000005d              Create_func_date_format::create(THD*, Item*, Item*)
00000000008c5cd0 g     F .text	0000000000000043              Event_queue::~Event_queue()
0000000000558f60  w    F .text	0000000000000065              my_decimal::sanity_check()
0000000000809f4c  w    F .text	0000000000000039              Item_func_group_concat::field_type() const
00000000007bcd2a  w    F .text	0000000000000038              Item_func_sec_to_time::Item_func_sec_to_time(Item*)
0000000000737ee2  w    F .text	000000000000003d              Item_sum_min::Item_sum_min(Item*)
00000000007ae92c  w    F .text	000000000000000f              Item_func_le::rev_functype() const
000000000136f2c0 g     O .bss	0000000000000070              LOCK_uuid_generator
000000000138c8b0 g     O .bss	0000000000000008              my_tmp_file_created
000000000076516e  w    F .text	0000000000000046              Field_real::~Field_real()
00000000007da81e  w    F .text	000000000000002b              Item_func_div::int_op()
00000000005c0cd5 g     F .text	00000000000000ad              set_thd_proc_info
0000000000556411 g     F .text	000000000000005a              violet_close_log()
000000000061b5f2 g     F .text	0000000000000108              Protocol_local::store_string(char const*, unsigned long, charset_info_st*, charset_info_st*)
000000000059b710  w    F .text	0000000000000041              Acl_table_intact::~Acl_table_intact()
00000000005cdbac g     F .text	0000000000000076              THD::increment_updates_counter()
00000000005e8cdc  w    F .text	0000000000000012              select_create::get_thd()
000000000082a751 g     F .text	0000000000000103              sql_print_warning(char const*, ...)
000000000106beb8  w    O .data.rel.ro	0000000000000030              vtable for View_creation_ctx
0000000000855a11 g     F .text	0000000000000032              set_zero_time
0000000000b97c9a g     F .text	000000000000007c              decimal_size
00000000005cf0f0  w    F .text	000000000000001b              List<set_var_base>::~List()
00000000008d2ede g     F .text	000000000000027b              my_print_default_files
0000000000856638 g     F .text	00000000000000d4              SEL_IMERGE::or_sel_tree_with_checks(RANGE_OPT_PARAM*, SEL_TREE*)
00000000006c1c5e  w    F .text	0000000000000056              Time_zone_offset::~Time_zone_offset()
00000000007bf1c6  w    F .text	0000000000000041              Create_func_field::~Create_func_field()
0000000000812916 g     F .text	0000000000000093              Item_datetime_typecast::val_int()
00000000005c2975 g     F .text	0000000000000029              thd_strdup
000000000079e9fa g     F .text	00000000000000de              Arg_comparator::cache_converted_constant(THD*, Item**, Item**, Item_result)
00000000007dc2f6  w    F .text	000000000000002b              Item_func_match::~Item_func_match()
00000000007fb93e g     F .text	0000000000000016              subselect_single_select_engine::uncacheable()
000000000120e500 g     O .data	0000000000000200              to_uni_cp1257_lithuanian_ci
00000000007960cc  w    F .text	0000000000000046              my_decimal_div(unsigned int, my_decimal*, my_decimal const*, my_decimal const*, int)
000000000090931d g     F .text	0000000000000054              find_mutex_class(unsigned int)
00000000008a92b2  w    F .text	000000000000001d              List_iterator<XML_TAG>::operator++(int)
000000000059b6b6  w    F .text	0000000000000027              LEX_COLUMN::~LEX_COLUMN()
0000000000816ec6  w    F .text	0000000000000030              Item_func_makedate::fix_length_and_dec()
000000000137084c g     O .bss	0000000000000004              key_master_info_sleep_cond
000000000056b68a  w    F .text	0000000000000026              PolyLock_mutex::~PolyLock_mutex()
00000000007f1d6c  w    F .text	0000000000000058              Item_func_encode::~Item_func_encode()
00000000006c75fe g     F .text	000000000000002e              Event_queue_element_for_exec::~Event_queue_element_for_exec()
00000000007f2bea  w    F .text	0000000000000046              Item_func_inet_ntoa::~Item_func_inet_ntoa()
00000000005dd478  w    F .text	0000000000000041              Sql_handler_lock_error_handler::~Sql_handler_lock_error_handler()
00000000007adfb8  w    F .text	000000000000003d              Arg_comparator::~Arg_comparator()
0000000000889102  w    F .text	0000000000000056              sp_instr_set_trigger_field::~sp_instr_set_trigger_field()
0000000000b80f61 g     F .text	0000000000000190              my_instr_mb
00000000005ceae8  w    F .text	000000000000001b              List<Item_func_match>::~List()
000000000057f6a1 g     F .text	0000000000000176              acl_check_host(char const*, char const*)
000000000073781c  w    F .text	0000000000000010              Settable_routine_parameter::set_required_privilege(bool)
0000000000641df6 g     F .text	0000000000000137              create_tmp_field_for_schema(THD*, Item*, TABLE*)
0000000000799d5c  w    F .text	0000000000000013              List_iterator_fast<Item>::replace(Item*)
00000000006c1476 g     F .text	00000000000001e6              str_to_offset(char const*, unsigned int, long*)
0000000000766f8a  w    F .text	0000000000000033              Field_blob::store_length(unsigned int)
0000000000778b10 g     F .text	0000000000000023              st_ha_check_opt::init()
0000000001373d54 g     O .bss	0000000000000004              key_event_scheduler_COND_state
00000000007c5190 g     F .text	000000000000010e              Item_func::fix_num_length_and_dec()
0000000000893bc6  w    F .text	0000000000000026              Gis_multi_polygon::~Gis_multi_polygon()
000000000087f46e g     F .text	0000000000000115              sp_name::sp_name(MDL_key const*, char*)
0000000000767c24  w    F .text	0000000000000026              List_iterator<Create_field>::init(List<Create_field>&)
000000000058d8eb g     F .text	000000000000017b              check_acl_user(st_lex_user*, unsigned int*)
00000000005d17fa  w    F .text	000000000000001b              Alter_drop::~Alter_drop()
0000000000859150 g     F .text	000000000000004c              SEL_ARG::last()
000000000082d3b0  w    F .text	0000000000000046              Xid_log_event::~Xid_log_event()
000000000082cfc0  w    F .text	0000000000000019              Log_event::use_trans_cache() const
00000000010efa60 g     O .data	0000000000000058              table_mutex_instances::m_share
00000000007c0432  w    F .text	0000000000000026              Create_func_length::~Create_func_length()
00000000007baa32  w    F .text	000000000000004a              Item_func_ord::Item_func_ord(Item*)
0000000000765368  w    F .text	0000000000000011              Field_new_decimal::max_display_length()
00000000010c3380  w    O .data.rel.ro	0000000000000028              vtable for Silence_deprecated_warning
0000000000739e12  w    F .text	0000000000000040              Item_func_rtrim::Item_func_rtrim(Item*, Item*)
000000000091fa2e g     F .text	0000000000000053              ha_myisam::truncate()
0000000000908340  w    F .text	000000000000000b              PFS_atomic::wrlock(void volatile*)
00000000007fc1cc  w    F .text	000000000000004b              Item_is_not_null_test::Item_is_not_null_test(Item_in_subselect*, Item*)
00000000006f5798  w    F .text	0000000000000011              MDL_object_lock::incompatible_waiting_types_bitmap() const
0000000000831d52 g     F .text	00000000000000fb              Log_event::do_update_pos(Relay_log_info*)
00000000008c161a  w    F .text	000000000000000f              Item_xpath_cast_bool::is_bool_func()
00000000007bfcba  w    F .text	000000000000002d              Create_func_interiorringn::Create_func_interiorringn()
00000000007ccc1a g     F .text	00000000000001b7              Item_func_min_max::cmp_datetimes(unsigned long long*)
00000000010987b0  w    O .data.rel.ro	00000000000003c8              vtable for Item_func_minus
0000000000809526  w    F .text	0000000000000014              Item_sum_hybrid::field_type() const
00000000007bf676  w    F .text	0000000000000041              Create_func_geometry_from_wkb::~Create_func_geometry_from_wkb()
000000000065a0b6  w    F .text	0000000000000040              Item_func_equal::Item_func_equal(Item*, Item*)
0000000001386348 g     O .bss	0000000000000008              Create_func_aes_encrypt::s_singleton
00000000007e1548  w    F .text	0000000000000046              Item_geometry_func::~Item_geometry_func()
0000000000856c6f g     F .text	00000000000001c9              make_select(TABLE*, unsigned long long, unsigned long long, Item*, bool, int*)
00000000006aa536 g     F .text	00000000000001a3              find_type2(st_typelib const*, char const*, unsigned int, charset_info_st*)
00000000005ca1d7 g     F .text	0000000000000018              thd_slave_thread
000000000060c7c7 g     F .text	000000000000056a              plugin_shutdown()
00000000007afb7a  w    F .text	0000000000000011              Item_func_in::func_name() const
00000000007bf334  w    F .text	0000000000000026              Create_func_floor::~Create_func_floor()
000000000055c302  w    F .text	000000000000001b              NAMED_ILIST::~NAMED_ILIST()
00000000007388a8  w    F .text	0000000000000038              Item_func_bit::Item_func_bit(Item*)
0000000000568fd0 g     F .text	0000000000000014              Rpl_filter::get_do_db()
00000000010c1340  w    O .data.rel.ro	0000000000000098              vtable for Rows_log_event
0000000000626c2e  w    F .text	000000000000002d              st_log_info::~st_log_info()
000000000073dffc g     F .text	000000000000017d              mysql_free_result
000000000077b918  w    F .text	000000000000000f              handler::start_bulk_update()
0000000000859350 g     F .text	00000000000000ea              SEL_ARG::clone_tree(RANGE_OPT_PARAM*)
000000000084e402 g     F .text	0000000000000120              Old_rows_log_event::Old_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
000000000136cdf8 g     O .bss	0000000000000008              max_connect_errors
00000000013951c0 g     O .bss	0000000000000070              THR_LOCK_charset
00000000008938be  w    F .text	0000000000000026              Gis_line_string::~Gis_line_string()
00000000005b004a  w    F .text	0000000000000012              Locked_tables_list::locked_tables()
000000000108e478  w    O .data.rel.ro	0000000000000398              vtable for Item_func_udf_decimal
000000000058f955 g     F .text	000000000000049c              mysql_rename_user(THD*, List<st_lex_user>&)
0000000000658e70  w    F .text	0000000000000077              Field_long::Field_long(unsigned int, bool, char const*, bool)
00000000008f7771 g     F .text	000000000000036b              my_store_ptr
00000000007713de g     F .text	0000000000000655              ha_init_errors()
0000000000805872 g     F .text	00000000000000de              Item_udf_sum::print(String*, enum_query_type)
00000000008f1dd6 g     F .text	000000000000039a              my_end
000000000095c61a g     F .text	00000000000000bb              _mi_keylength_part
0000000000792d02 g     F .text	00000000000001ed              Item_cache::get_cache(Item const*, Item_result)
00000000005ea2b2 g     F .text	0000000000000114              Lex_input_stream::body_utf8_start(THD*, char const*)
00000000008c0688  w    F .text	0000000000000071              Item_xml_str_func::Item_xml_str_func(Item*, Item*, Item*)
0000000000709fa6  w    F .text	0000000000000041              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::~Sys_var_unsigned()
0000000000738b5e  w    F .text	00000000000000d3              Item_func_match::Item_func_match(List<Item>&, unsigned int)
00000000007ae2c0  w    F .text	000000000000000f              Lt_creator::eqne_op() const
0000000000869c34 g     F .text	0000000000000456              QUICK_RANGE_SELECT::reset()
00000000007c1a34  w    F .text	0000000000000041              Create_func_rtrim::~Create_func_rtrim()
00000000006f168a g     F .text	0000000000000025              mdl_destroy()
00000000007af352  w    F .text	000000000000003d              cmp_item_string::cmp_item_string(charset_info_st*)
00000000007649cc  w    F .text	0000000000000013              Field::do_save_field_metadata(unsigned char*)
000000000084e312 g     F .text	00000000000000f0              Update_rows_log_event_old::do_exec_row(TABLE*)
00000000008f6c4b g     F .text	0000000000000012              my_thread_dbug_id
00000000008b233d g     F .text	0000000000000204              set_part_state(Alter_info*, partition_info*, partition_state)
00000000007ca276 g     F .text	00000000000000d9              Item_func_log2::val_real()
00000000007f4590 g     F .text	0000000000000021              Item_subselect::get_select_lex()
0000000000659938  w    F .text	0000000000000036              Item_sum::depended_from()
00000000007c242a  w    F .text	0000000000000041              Create_func_time_format::~Create_func_time_format()
0000000000795f54  w    F .text	0000000000000050              my_decimal_round(unsigned int, my_decimal const*, int, bool, my_decimal*)
0000000000659fd4  w    F .text	000000000000004b              Item_func_trig_cond::Item_func_trig_cond(Item*, bool*)
00000000005f418e g     F .text	0000000000000055              is_update_query(enum_sql_command)
00000000010870f0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_pi
0000000000599162  w    F .text	000000000000001d              Prelocking_strategy::Prelocking_strategy()
000000000090227b g     F .text	0000000000000099              make_type
00000000008589e8 g     F .text	0000000000000106              QUICK_ROR_UNION_SELECT::~QUICK_ROR_UNION_SELECT()
000000000070e98c  w    F .text	0000000000000041              Sys_var_set::~Sys_var_set()
0000000000818154  w    F .text	0000000000000046              Item_func_second::~Item_func_second()
000000000090946f g     F .text	00000000000000a0              sanitize_rwlock_class(PFS_rwlock_class*)
0000000000758640 g     F .text	0000000000000190              Field_string::val_str(String*, String*)
00000000007be866  w    F .text	0000000000000041              Create_func_dayofyear::~Create_func_dayofyear()
000000000090b230 g     F .text	0000000000000034              initialize_performance_schema_acl(bool)
00000000006f60a0  w    F .text	000000000000000f              I_P_List_no_push_back<MDL_ticket>::swap(I_P_List_no_push_back<MDL_ticket>&)
00000000005cf626  w    F .text	000000000000003b              Security_context::Security_context()
000000000098dd16 g     F .text	0000000000000058              ha_myisammrg::rnd_init(bool)
00000000007bfe56  w    F .text	0000000000000026              Create_func_is_free_lock::~Create_func_is_free_lock()
0000000000767c08  w    F .text	000000000000001b              List_iterator<Create_field>::List_iterator()
0000000000791cb4 g     F .text	000000000000002d              Item_trigger_field::set_required_privilege(bool)
000000000098982c g     F .text	000000000000011d              hp_close
000000000073aebe  w    F .text	0000000000000038              Item_datetime_typecast::Item_datetime_typecast(Item*)
0000000000771c8c g     F .text	000000000000042e              ha_initialize_handlerton(st_plugin_int*)
00000000007c3d98 g     F .text	0000000000000438              Item_func::fix_fields(THD*, Item**)
00000000007df48e g     F .text	0000000000000606              Item_func_spatial_collection::val_str(String*)
00000000007be130  w    F .text	000000000000002d              Create_func_contains::Create_func_contains()
00000000008e773a g     F .text	0000000000000139              fn_same
00000000005656f0  w    F .text	000000000000001b              Send_field::~Send_field()
00000000005ce6de  w    F .text	0000000000000064              CSET_STRING::CSET_STRING(char*, unsigned long, charset_info_st*)
0000000000765cc8  w    F .text	0000000000000089              Field_double::Field_double(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
000000000056b5d6  w    F .text	0000000000000046              set_var::~set_var()
00000000007ae326  w    F .text	0000000000000025              Le_creator::symbol(bool) const
00000000005c51e0 g     F .text	0000000000000056              select_send::send_eof()
0000000000909371 g     F .text	00000000000000a6              sanitize_mutex_class(PFS_mutex_class*)
00000000007c2078  w    F .text	000000000000002d              Create_func_startpoint::Create_func_startpoint()
000000000057aca4  w    F .text	000000000000002b              Heartbeat_log_event::~Heartbeat_log_event()
000000000136efd0 g     O .bss	0000000000000008              national_charset_info
0000000001087270  w    O .data.rel.ro	0000000000000030              vtable for Create_func_numgeometries
00000000007c09cc  w    F .text	0000000000000041              Create_func_ltrim::~Create_func_ltrim()
000000000074bdb2 g     F .text	0000000000000112              Field_new_decimal::Field_new_decimal(unsigned int, bool, char const*, unsigned char, bool)
00000000008c1450  w    F .text	000000000000004e              Item_nodeset_func_attributebyname::Item_nodeset_func_attributebyname(Item*, char const*, unsigned int, String*)
000000000091fc0e g     F .text	0000000000000365              ha_myisam::create(char const*, TABLE*, st_ha_create_information*)
00000000007569a4 g     F .text	000000000000009d              Field_datetime::store(double)
0000000000766714  w    F .text	000000000000000f              Field_time::zero_pack() const
00000000007bffa8  w    F .text	000000000000002d              Create_func_isempty::Create_func_isempty()
00000000007813e2 g     F .text	000000000000007f              Item_splocal::print(String*, enum_query_type)
00000000006cafdc  w    F .text	0000000000000052              Event_creation_ctx::~Event_creation_ctx()
0000000000815a9a  w    F .text	0000000000000011              Item_func_dayofyear::func_name() const
0000000000771a74 g     F .text	0000000000000218              ha_finalize_handlerton(st_plugin_int*)
00000000007e0cde  w    F .text	000000000000003b              String::q_append(double)
00000000005e8902  w    F .text	0000000000000032              handler::restore_auto_increment(unsigned long long)
0000000000653264 g     F .text	00000000000001d5              JOIN::rollup_process_const_fields()
000000000061c242  w    F .text	000000000000001d              List_iterator<Item_param>::operator++(int)
000000000070d146  w    F .text	0000000000000013              List_iterator_fast<set_var_base>::replace(List<set_var_base>&)
000000000088c04e g     F .text	00000000000000e7              sp_rcontext::pop_hstack()
0000000000587ffe g     F .text	000000000000085b              mysql_grant(THD*, char const*, List<st_lex_user>&, unsigned long, bool, bool)
00000000007dd000  w    F .text	0000000000000046              Item_func_round::~Item_func_round()
000000000057a7e6  w    F .text	0000000000000021              Log_event::operator new(unsigned long)
00000000008c7230 g     F .text	0000000000000126              Event_queue::lock_data(char const*, unsigned int)
00000000007730c8 g     F .text	0000000000000325              ha_rollback_trans(THD*, bool)
00000000008cab90  w    F .text	0000000000000026              Event_db_intact::~Event_db_intact()
00000000008cba80  w    F .text	0000000000000046              Alter_table_common::~Alter_table_common()
00000000007db294  w    F .text	0000000000000028              Item_func_udf_float::fix_length_and_dec()
00000000007bae98  w    F .text	0000000000000052              Item_func_get_lock::Item_func_get_lock(Item*, Item*)
000000000106e2a0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_isfalse
00000000005ee7fa g     F .text	000000000000003a              st_select_lex::add_group_to_list(THD*, Item*, bool)
00000000005adee7 g     F .text	0000000000000173              mysql_notify_thread_having_shared_lock(THD*, THD*, bool)
00000000005bf544  w    F .text	0000000000000037              Query_cache_memory_bin_step::init(unsigned long, unsigned int, unsigned long)
00000000007398fe  w    F .text	000000000000004d              Item_str_func::Item_str_func(Item*, Item*, Item*)
000000000090c79a g     F .text	000000000000011c              get_timer_value(enum_timer_name)
000000000076417c  w    F .text	000000000000000f              Field::str_needs_quotes()
00000000007beeaa  w    F .text	000000000000002d              Create_func_envelope::Create_func_envelope()
00000000007bb444  w    F .text	0000000000000040              Item_func_sha2::Item_func_sha2(Item*, Item*)
00000000006d4504  w    F .text	00000000000000f2              partition_element::partition_element()
00000000007c01da  w    F .text	0000000000000026              Create_func_last_day::~Create_func_last_day()
0000000000739e52  w    F .text	0000000000000038              Item_func_rtrim::Item_func_rtrim(Item*)
0000000000912290  w    F .text	0000000000000041              table_setup_timers::~table_setup_timers()
000000000089ae92  w    F .text	000000000000006a              field_str::~field_str()
0000000000809388  w    F .text	0000000000000040              Item_sum_std::Item_sum_std(THD*, Item_sum_std*)
00000000005c0578 g     F .text	00000000000000c2              Foreign_key::Foreign_key(Foreign_key const&, st_mem_root*)
00000000007b0eae  w    F .text	0000000000000046              in_double::~in_double()
0000000000815bcc  w    F .text	0000000000000021              Item_func_minute::check_valid_arguments_processor(unsigned char*)
00000000007920e8 g     F .text	000000000000077b              resolve_const_item(THD*, Item**, Item*)
000000000056ad76 g     F .text	000000000000004d              set_var_password::update(THD*)
00000000006f5fc0  w    F .text	0000000000000016              I_P_List_adapter<MDL_object_lock, &MDL_object_lock::next_in_cache, &MDL_object_lock::prev_in_cache>::next_ptr(MDL_object_lock*)
0000000000000000       F *UND*	0000000000000000              ldiv@@GLIBC_2.2.5
00000000007c0c66  w    F .text	0000000000000026              Create_func_master_pos_wait::~Create_func_master_pos_wait()
00000000006cee38 g     F .text	0000000000000181              partition_info::has_unique_fields()
000000000087e856  w    F .text	0000000000000035              Bad_db_error_handler::Bad_db_error_handler()
00000000005bf2f6  w    F .text	0000000000000012              Query_cache_query::writer()
000000000073b616  w    F .text	0000000000000034              Table_ident::change_db(char*)
0000000000559b24  w    F .text	000000000000001a              I_List<Statement>::get()
00000000007b3628 g     F .text	0000000000000050              Create_func_dimension::create(THD*, Item*)
00000000008fc502 g     F .text	000000000000020d              thr_alarm
00000000008d6c17 g     F .text	00000000000000bb              strlength
000000000078c832 g     F .text	000000000000007d              Item_field::save_org_in_field(Field*)
0000000000782983 g     F .text	0000000000000390              agg_item_set_converter(DTCollation&, char const*, Item**, unsigned int, unsigned int, int)
0000000000b5a35c g     F .text	0000000000000168              ha_tina::init_tina_writer()
0000000000816b1a  w    F .text	0000000000000020              Item_date_typecast::fix_length_and_dec()
000000000084b348 g     F .text	0000000000000070              Slave_reporting_capability::Slave_reporting_capability(char const*)
0000000000b7a871 g     F .text	000000000000002b              bmove_upp
00000000007c2d8a  w    F .text	0000000000000041              Create_func_within::~Create_func_within()
0000000001069b18  w    O .data.rel.ro	0000000000000068              vtable for THD
000000000061c338  w    F .text	0000000000000056              Select_fetch_protocol_binary::~Select_fetch_protocol_binary()
0000000000879f10 g     F .text	0000000000000043              Silence_deprecated_warning::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
000000000088bc26 g     F .text	000000000000011e              sp_rcontext::pop_cursors(unsigned int)
0000000000849194  w    F .text	0000000000000040              Stop_log_event::Stop_log_event(char const*, Format_description_log_event const*)
00000000005d929c g     F .text	00000000000004b8              mysqld_show_warnings(THD*, unsigned long)
00000000009467e4 g     F .text	000000000000001f              mi_copy_status
000000000137089c g     O .bss	0000000000000004              key_file_binlog_index
000000000093fa7b g     F .text	0000000000000198              _mi_cmp_dynamic_unique
000000000065aaa4  w    F .text	000000000000005b              FT_SELECT::FT_SELECT(THD*, TABLE*, unsigned int)
00000000007f40b8  w    F .text	000000000000002b              Item_func_sha2::~Item_func_sha2()
00000000005e8c54  w    F .text	0000000000000067              THD::set_query(char*, unsigned int, charset_info_st*)
000000000098ed64 g     F .text	0000000000000016              ha_myisammrg::check_if_incompatible_data(st_ha_create_information*, unsigned int)
00000000010712e8  w    O .data.rel.ro	0000000000000290              vtable for Field_year
000000000073abba  w    F .text	000000000000002d              Item_func_sysdate_local::Item_func_sysdate_local()
000000000077be3e  w    F .text	000000000000000f              handler::max_supported_record_length() const
00000000007e31ac g     F .text	0000000000000066              Item_row::bring_value()
00000000007a46fe g     F .text	00000000000000b3              Item_func_nullif::val_str(String*)
00000000007fb484 g     F .text	0000000000000410              subselect_indexsubquery_engine::exec()
0000000000787a80 g     F .text	00000000000003db              Item_param::set_value(THD*, sp_rcontext*, Item**)
00000000005e444e g     F .text	0000000000000f24              Delayed_insert::handle_inserts()
000000000073a49c  w    F .text	0000000000000038              Item_func_minute::Item_func_minute(Item*)
0000000000820d90 g     F .text	00000000000000a5              MYSQL_LOG::cleanup()
00000000006ce826 g     F .text	0000000000000284              partition_info::set_up_default_partitions(handler*, st_ha_create_information*, unsigned int)
00000000007662f0  w    F .text	000000000000000f              Field_date::key_type() const
0000000000709a22  w    F .text	0000000000000041              Sys_var_charptr::~Sys_var_charptr()
00000000007bb62c  w    F .text	0000000000000038              Item_func_lcase::Item_func_lcase(Item*)
0000000000792ef0 g     F .text	0000000000000035              Item_cache::store(Item*)
00000000007bb2a6  w    F .text	0000000000000046              Item_str_func::~Item_str_func()
0000000000767f06  w    F .text	000000000000002b              Field_varstring::~Field_varstring()
0000000000674c75 g     F .text	000000000000011e              find_schema_table(THD*, char const*)
000000000090e4fa g     F .text	0000000000000260              table_events_waits_summary_by_thread_by_event_name::rnd_next()
0000000000911d2e  w    F .text	0000000000000016              pos_setup_instruments::has_more_view()
00000000008880c4 g     F .text	00000000000000bf              sp_instr_set_case_expr::print(String*)
00000000009447a6 g     F .text	00000000000000d0              _mi_read_key_record
0000000000805fbe g     F .text	00000000000000cb              Item_sum_udf_str::val_str(String*)
00000000007db896  w    F .text	000000000000000f              Item_func_match::not_null_tables() const
0000000000b71580  w    F .text	0000000000000043              ha_partition_add_index::ha_partition_add_index(TABLE*, st_key*, unsigned int)
00000000006b6384 g     F .text	0000000000000356              TABLE_LIST::setup_underlying(THD*)
0000000000559882  w    F .text	000000000000001a              I_List<i_string>::is_empty()
0000000000816992  w    F .text	0000000000000046              Item_typecast::~Item_typecast()
000000000077c19a  w    F .text	0000000000000037              handler::bulk_update_row(unsigned char const*, unsigned char*, unsigned int*)
0000000000708bf2  w    F .text	0000000000000041              Sys_var_typelib::~Sys_var_typelib()
0000000000626ccc  w    F .text	0000000000000014              MYSQL_BIN_LOG::get_index_file()
000000000065a788  w    F .text	0000000000000015              st_select_lex::non_agg_field_used() const
00000000007817bc g     F .text	0000000000000080              Item_name_const::val_str(String*)
000000000098514d g     F .text	0000000000000356              hp_rb_pack_key
000000000055f2f0 g     F .text	00000000000007cc              File_parser::parse(unsigned char*, st_mem_root*, File_option*, unsigned int, Unknown_key_hook*)
0000000000606978  w    F .text	000000000000005a              Item_int::Item_int(unsigned long long, unsigned int)
00000000007dd474  w    F .text	0000000000000046              Item_func_atan::~Item_func_atan()
00000000010cba08  w    O .data.rel.ro	0000000000000470              vtable for ha_tina
00000000008ed52f g     F .text	0000000000000035              my_freopen
000000000080818c g     F .text	0000000000000249              Item_func_group_concat::print(String*, enum_query_type)
00000000007dd280  w    F .text	000000000000002b              Item_func_shift_left::~Item_func_shift_left()
0000000000889438  w    F .text	0000000000000022              sp_instr_freturn::opt_mark(sp_head*, List<sp_instr>*)
00000000010683c8  w    O .data.rel.ro	00000000000000e8              vtable for Protocol_binary
000000000057b211 g     F .text	0000000000000035              hash_free_sp_head
0000000000874364  w    F .text	0000000000000026              QUICK_RANGE_SELECT_GEOM::~QUICK_RANGE_SELECT_GEOM()
000000000069dad6  w    F .text	000000000000001b              List<Cached_item>::~List()
00000000007b6adc g     F .text	0000000000000050              Create_func_unhex::create(THD*, Item*)
00000000007b586c g     F .text	00000000000000ce              Create_func_oct::create(THD*, Item*)
0000000000848738 g     F .text	0000000000000086              Incident_log_event::write_data_body(st_io_cache*)
0000000000889df2  w    F .text	000000000000001a              List<sp_instr_opt_meta>::head()
0000000000785a16 g     F .text	0000000000000045              Item_null::val_real()
000000000077de9c g     F .text	0000000000000047              Hybrid_type_traits::val_str(Hybrid_type*, String*, unsigned char) const
0000000000000000       F *UND*	0000000000000000              rmdir@@GLIBC_2.2.5
0000000000844a74 g     F .text	000000000000006c              Table_map_log_event::~Table_map_log_event()
00000000008c107a  w    F .text	0000000000000045              Item_nodeset_func_union::Item_nodeset_func_union(Item*, Item*, String*)
000000000076837a  w    F .text	000000000000002b              Field_longlong::~Field_longlong()
00000000007aeec8  w    F .text	000000000000004a              in_vector::sort()
000000000138c995 g     O .bss	0000000000000001              my_disable_async_io
0000000000559236  w    F .text	0000000000000041              Ne_creator::~Ne_creator()
00000000007bc500  w    F .text	0000000000000038              Item_func_isempty::Item_func_isempty(Item*)
00000000007d6f88 g     F .text	000000000000023d              Item_func_inet_aton::val_int()
0000000000920702  w    F .text	000000000000000f              ha_myisam::max_supported_keys() const
00000000007afa1a  w    F .text	0000000000000015              Item_func_case::compare_collation()
000000000080a384  w    F .text	0000000000000046              Item_sum_udf_int::~Item_sum_udf_int()
0000000001086b80  w    O .data.rel.ro	0000000000000030              vtable for Create_func_time_to_sec
0000000000893492  w    F .text	0000000000000013              Geometry::is_closed(int*) const
0000000000766310  w    F .text	000000000000000f              Field_date::derivation() const
00000000005b8e76 g     F .text	00000000000000e4              Query_cache::register_all_tables(Query_cache_block*, TABLE_LIST*, unsigned int)
0000000000889b58  w    F .text	000000000000001b              List<sp_head::bp_t>::List()
00000000012c84c0 g     O .data	00000000000000b0              my_charset_ucs2_polish_uca_ci
000000000075da12 g     F .text	000000000000006a              Field_enum::new_field(st_mem_root*, TABLE*, bool)
000000000120fd80 g     O .data	0000000000000200              to_uni_keybcs2_general_ci
00000000008116b8 g     F .text	0000000000000544              Item_extract::val_int()
000000000081602e  w    F .text	0000000000000021              Item_func_unix_timestamp::check_valid_arguments_processor(unsigned char*)
0000000000759058 g     F .text	0000000000000132              Field_string::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000007dcfd4  w    F .text	000000000000002b              Item_func_rand::~Item_func_rand()
0000000000876e6a  w    F .text	0000000000000018              Item_proc_real::val_int()
0000000000745b1d g     F .text	0000000000000011              mysql_num_rows
00000000007bfa62  w    F .text	000000000000002d              Create_func_ifnull::Create_func_ifnull()
00000000007d87b2 g     F .text	0000000000000176              Item_func_is_used_lock::val_int()
0000000001386800 g     O .bss	0000000000000008              Create_func_xml_extractvalue::s_singleton
00000000009178da g     F .text	0000000000000356              table_all_instr::rnd_next()
000000000073c3b0  w    F .text	000000000000006a              sp_instr_cfetch::sp_instr_cfetch(unsigned int, sp_pcontext*, unsigned int)
00000000007c2b9a  w    F .text	000000000000002d              Create_func_version::Create_func_version()
000000000136d8a0 g     O .bss	0000000000000200              mysql_real_data_home
00000000007b2e4e g     F .text	000000000000005d              Create_func_contains::create(THD*, Item*, Item*)
000000000077501c g     F .text	0000000000000356              handler::ha_open(TABLE*, char const*, int, int)
0000000000b81313 g     F .text	0000000000000029              my_strcasecmp_mb_bin
00000000008300a4 g     F .text	0000000000000073              Global_read_lock::set_explicit_lock_duration(THD*)
00000000007af188  w    F .text	0000000000000034              in_double::value_to_item(unsigned int, Item*)
000000000081dab8 g     F .text	0000000000000277              LOGGER::general_log_write(THD*, enum_server_command, char const*, unsigned int)
00000000006787f4  w    F .text	0000000000000025              List<char>::push_back(char*)
00000000006864b9 g     F .text	00000000000012fc              mysql_create_table_no_lock(THD*, char const*, char const*, st_ha_create_information*, Alter_info*, bool, unsigned int, bool*)
00000000010df8c0 g     O .data	0000000000000410              partitions_fields_info
000000000074d390 g     F .text	0000000000000079              Field_new_decimal::compatible_field_size(unsigned int, Relay_log_info*, unsigned short, int*)
000000000066bb13 g     F .text	00000000000003f9              fill_schema_collation(THD*, TABLE_LIST*, Item*)
00000000007c03c2  w    F .text	000000000000002d              Create_func_length::Create_func_length()
00000000007db546  w    F .text	0000000000000011              Item_func_get_lock::func_name() const
000000000074914e g     F .text	00000000000000bf              Field::compatible_field_size(unsigned int, Relay_log_info*, unsigned short, int*)
00000000007d10f4 g     F .text	00000000000001b6              Interruptible_wait::wait(st_mysql_cond*, st_mysql_mutex*)
00000000007af49e  w    F .text	0000000000000113              cmp_item_sort_string::cmp(Item*)
0000000000708d86  w    F .text	0000000000000035              Sys_var_enum::global_update(THD*, set_var*)
0000000001087d20  w    O .data.rel.ro	0000000000000030              vtable for Create_func_encrypt
00000000005cae97 g     F .text	000000000000010a              xid_cache_insert(xid_t*, xa_states)
000000000055e749 g     F .text	00000000000001b0              rename_in_schema_file(THD*, char const*, char const*, char const*, char const*)
00000000006d7092 g     F .text	000000000000001b              Deferred_log_events::~Deferred_log_events()
00000000010b8978  w    O .data.rel.ro	0000000000000398              vtable for Item_extract
000000000091e3c8 g     F .text	0000000000000349              ha_myisam::enable_indexes(unsigned int)
00000000007a69f0 g     F .text	0000000000000055              in_row::get_value(Item*)
0000000000889d88  w    F .text	0000000000000026              List_iterator_fast<sp_head::bp_t>::List_iterator_fast(List<sp_head::bp_t>&)
0000000001375cc0 g     O .bss	0000000000000060              my_locale_es_BO
000000000088971a  w    F .text	0000000000000046              sp_instr_cpop::~sp_instr_cpop()
00000000007606d2 g     F .text	0000000000000437              Field_bit::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000006eb76e g     F .text	00000000000004b0              Event_parse_data::init_interval(THD*)
00000000005ca341 g     F .text	0000000000000048              thd_wait_end
00000000006b57de g     F .text	000000000000002d              Wait_for_flush::accept_visitor(MDL_wait_for_graph_visitor*)
000000000061bc0a g     F .text	0000000000000021              Protocol_local::send_ok(unsigned int, unsigned int, unsigned long long, unsigned long long, char const*)
000000000136dec0 g     O .bss	0000000000000008              opt_init_file
00000000006efaa0 g     F .text	000000000000024c              Binlog_relay_IO_delegate::before_request_transmit(THD*, Master_info*, unsigned short)
0000000001386380 g     O .bss	0000000000000008              Create_func_benchmark::s_singleton
00000000005bcac0 g     F .text	00000000000001c7              Query_cache::filename_2_table_key(char*, char const*, unsigned int*)
000000000065ab00  w    F .text	0000000000000051              FT_SELECT::~FT_SELECT()
00000000007dca4c  w    F .text	000000000000002b              Item_func_udf_float::~Item_func_udf_float()
00000000007cac98 g     F .text	00000000000000d3              Item_func_cot::val_real()
000000000073a2b2  w    F .text	0000000000000038              Item_geometry_func::Item_geometry_func(List<Item>&)
000000000136f020 g     O .bss	0000000000000004              have_profiling
0000000000890056 g     F .text	000000000000017e              Gis_multi_point::init_from_wkb(char const*, unsigned int, Geometry::wkbByteOrder, String*)
0000000000981eec g     F .text	000000000000013d              ha_heap::records_in_range(unsigned int, st_key_range*, st_key_range*)
000000000089a280  w    F .text	00000000000000b3              field_longlong::field_longlong(Item*, analyse*)
0000000000796662  w    F .text	000000000000000f              Hybrid_type_traits_decimal::type() const
000000000073881e  w    F .text	000000000000004a              Item_func_ascii::Item_func_ascii(Item*)
00000000010a8b78  w    O .data.rel.ro	0000000000000398              vtable for Item_func_old_password
00000000005f07d2  w    F .text	0000000000000051              String::String(String const&)
00000000005cf144  w    F .text	000000000000001b              List<Name_resolution_context>::~List()
0000000001098020  w    O .data.rel.ro	00000000000003c8              vtable for Item_func_div
000000000094170a g     F .text	0000000000000eab              mi_extra
0000000000888ffe  w    F .text	0000000000000056              sp_instr_stmt::~sp_instr_stmt()
000000000083f3ba g     F .text	0000000000000174              Append_block_log_event::Append_block_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000006ed7e4  w    F .text	00000000000000d3              MYSQL_ERROR::~MYSQL_ERROR()
00000000005cdc98 g     F .text	000000000000012c              THD::time_out_user_resource_limits()
000000000107cc78  w    O .data.rel.ro	0000000000000360              vtable for Item_static_float_func
00000000009ac4c0  w    F .text	0000000000000046              ha_innobase_add_index::~ha_innobase_add_index()
000000000094ed4b g     F .text	0000000000000740              my_n_base_info_read
0000000000795c75 g     F .text	0000000000000026              view_error_processor(THD*, void*)
0000000000857844 g     F .text	0000000000000192              QUICK_INDEX_MERGE_SELECT::~QUICK_INDEX_MERGE_SELECT()
00000000010d24e0 g     O .data	0000000000000138              builtin_mysql_password_plugin
00000000006eda16  w    F .text	0000000000000046              Resignal_statement::~Resignal_statement()
00000000005d87f2 g     F .text	0000000000000020              MYSQL_ERROR::get_message_text() const
00000000007b3e52 g     F .text	0000000000000149              Create_func_format::create_native(THD*, st_mysql_lex_string, List<Item>*)
000000000136cbf7 g     O .bss	0000000000000001              using_udf_functions
000000000079204e g     F .text	0000000000000031              Item_trigger_field::cleanup()
000000000090692c g     F .text	000000000000021d              PFS_scan::init(unsigned int, unsigned int)
00000000005af112  w    F .text	00000000000000b3              TABLE_SHARE::set_table_cache_key(char*, unsigned int)
00000000007499ce g     F .text	00000000000000a0              Field_str::Field_str(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
0000000000766f4a  w    F .text	0000000000000040              Field_blob::store_length(unsigned char*, unsigned int, unsigned int)
00000000008c14b0  w    F .text	0000000000000045              Item_nodeset_func_predicate::Item_nodeset_func_predicate(Item*, Item*, String*)
00000000009826a0 g     F .text	0000000000000064              ha_heap::update_create_info(st_ha_create_information*)
00000000006068ce  w    F .text	0000000000000013              Item::quick_fix_field()
00000000007e2038  w    F .text	0000000000000058              Item_func_numinteriorring::~Item_func_numinteriorring()
000000000079abfc  w    F .text	000000000000002b              Item_aggregate_ref::~Item_aggregate_ref()
00000000007977ca  w    F .text	000000000000000f              Item_hex_string::basic_const_item() const
0000000000893452  w    F .text	0000000000000013              Geometry::get_y(double*) const
00000000005cf8a8  w    F .text	000000000000002d              Global_read_lock::Global_read_lock()
00000000006b8594 g     F .text	0000000000000043              Field_iterator_view::create_item(THD*)
00000000005b0b40  w    F .text	000000000000003e              I_P_List<MDL_request, I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>, I_P_List_counter, I_P_List_no_push_back<MDL_request> >::I_P_List()
0000000000799790  w    F .text	0000000000000026              Item_cache_row::val_int()
0000000000777198 g     F .text	0000000000000161              handler::delete_table(char const*)
00000000008934f6  w    F .text	0000000000000013              Geometry::end_point(String*) const
000000000056c17d g     F .text	000000000000009e              lock_slave_threads(Master_info*)
00000000010883b0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_asin
00000000006ba82c  w    F .text	0000000000000023              Bitmap<64u>::init(unsigned int)
00000000007389a0  w    F .text	0000000000000040              Item_func_shift_left::Item_func_shift_left(Item*, Item*)
000000000136cc45 g     O .bss	0000000000000001              opt_myisam_use_mmap
00000000007c0cba  w    F .text	0000000000000041              Create_func_md5::~Create_func_md5()
00000000008158f8  w    F .text	0000000000000021              Item_func_dayofmonth::check_valid_arguments_processor(unsigned char*)
000000000070e012  w    F .text	000000000000003e              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::max_var_ptr()
00000000007bd320  w    F .text	000000000000002d              Create_func_arg3::Create_func_arg3()
00000000007fb9ec g     F .text	0000000000000062              subselect_engine::calc_const_tables(TABLE_LIST*)
000000000138d8e0 g     O .bss	0000000000000100              table_file_summary_by_instance::m_table_lock
00000000007979ce  w    F .text	0000000000000039              Item_ref::field_type() const
00000000005af59c  w    F .text	000000000000002b              Field_iterator::~Field_iterator()
00000000007b0daa  w    F .text	0000000000000056              cmp_item_sort_string::~cmp_item_sort_string()
0000000000b5fe12 g     F .text	0000000000000085              ha_partition::delete_table(char const*)
0000000000b711fa  w    F .text	00000000000000ce              ha_partition::table_flags() const
000000000107f8b0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_isnull
0000000000677e4c  w    F .text	000000000000002e              String::reserve(unsigned int)
00000000005cdf4c  w    F .text	000000000000003f              Discrete_interval::Discrete_interval(unsigned long long, unsigned long long, unsigned long long)
00000000006cb08a g     F .text	0000000000000265              mysql_alter_tablespace(THD*, st_alter_tablespace*)
00000000007b9f08  w    F .text	0000000000000038              Item_func_abs::Item_func_abs(Item*)
000000000073b03c  w    F .text	0000000000000054              Item_default_value::Item_default_value(Name_resolution_context*)
000000000084b3b8 g     F .text	0000000000000227              Slave_reporting_capability::report(loglevel, int, char const*, ...) const
000000000057b1d9 g     F .text	0000000000000038              hash_get_key_for_sp_head
00000000005d849a g     F .text	00000000000001d4              MYSQL_ERROR::copy_opt_attributes(MYSQL_ERROR const*)
00000000005ceab0  w    F .text	000000000000001b              SQL_I_List<TABLE_LIST>::~SQL_I_List()
000000000091162e g     F .text	000000000000005f              table_setup_instruments::table_setup_instruments()
00000000006fbf3a  w    F .text	000000000000006b              xid_t::eq(long, long, char const*)
00000000010758f8  w    O .data.rel.ro	0000000000000388              vtable for Item_cache_int
00000000005eaec9 g     F .text	000000000000005a              is_lex_native_function(st_mysql_lex_string const*)
00000000006e7140 g     F .text	00000000000001b0              thd_init_client_charset(THD*, unsigned int)
00000000007e19be  w    F .text	000000000000002c              Item_func_spatial_rel::print(String*, enum_query_type)
00000000007f6a24 g     F .text	000000000000002b              Item_in_subselect::val_real()
0000000000709e8c  w    F .text	000000000000007b              Sys_var_dbug::session_value_ptr(THD*, st_mysql_lex_string*)
0000000001375900 g     O .bss	0000000000000060              my_locale_de_LU
000000000077c242  w    F .text	0000000000000013              handler::check_and_repair(THD*)
0000000000891fee g     F .text	000000000000023c              Gis_multi_polygon::centroid(String*) const
0000000001386400 g     O .bss	0000000000000008              Create_func_cot::s_singleton
0000000000677e9e  w    F .text	0000000000000060              Item_ident_for_show::Item_ident_for_show(Field*, char const*, char const*)
0000000001386540 g     O .bss	0000000000000008              Create_func_inet_ntoa::s_singleton
00000000007bdabe  w    F .text	000000000000002d              Create_func_bin::Create_func_bin()
0000000000b7a7db g     F .text	0000000000000096              bchange
00000000006d7ff6  w    F .text	00000000000000fb              Incident_log_event::Incident_log_event(THD*, Incident, st_mysql_lex_string)
00000000007eacee g     F .text	000000000000004d              Item_func_decode::crypto_transform(String*)
00000000007c1e20  w    F .text	000000000000002d              Create_func_soundex::Create_func_soundex()
00000000008c13de  w    F .text	0000000000000011              Item_nodeset_func_ancestorbyname::func_name() const
00000000005b141c  w    F .text	0000000000000046              Field_iterator_view::~Field_iterator_view()
000000000136eff8 g     O .bss	0000000000000008              my_default_lc_time_names
000000000090f426  w    F .text	0000000000000030              pos_events_waits_summary_by_thread_by_event_name::next_thread()
000000000136d060 g     O .bss	0000000000000200              pidfile_name
0000000000849476  w    F .text	0000000000000016              Delete_file_log_event::is_valid() const
0000000000818400  w    F .text	0000000000000046              Item_func_dayofmonth::~Item_func_dayofmonth()
00000000010de760 g     O .data	00000000000002a8              stat_fields_info
0000000000888eee  w    F .text	000000000000005e              sp_instr::~sp_instr()
00000000007f5f46 g     F .text	00000000000000cb              Item_singlerow_subselect::val_int()
0000000000000000       F *UND*	0000000000000000              strlen@@GLIBC_2.2.5
00000000007bc080  w    F .text	000000000000004a              Item_func_quote::Item_func_quote(Item*)
0000000000621bd7 g     F .text	00000000000000dc              purge_master_logs(THD*, char const*)
00000000005670cc  w    F .text	0000000000000028              Item_basic_constant::cleanup()
0000000000607092  w    F .text	0000000000000027              st_select_lex_node::operator new(unsigned long, st_mem_root*)
00000000010ef370 g     O .data	0000000000000004              wait_timer
0000000000899bd6  w    F .text	0000000000000018              field_str::get_max_arg(String*)
00000000005b9e08 g     F .text	000000000000012e              Query_cache::join_free_blocks(Query_cache_block*, Query_cache_block*)
00000000007096c0  w    F .text	0000000000000070              Sys_var_charptr::make_symbolic(void (*)(void*, unsigned long, char const*))
000000000077bb96  w    F .text	0000000000000012              handler::extra(ha_extra_function)
000000000079682e  w    F .text	000000000000002d              Hybrid_type_traits_integer::Hybrid_type_traits_integer()
0000000001393a40 g     O .bss	0000000000000070              tina_mutex
00000000007c084c  w    F .text	0000000000000026              Create_func_log10::~Create_func_log10()
0000000000000000       F *UND*	0000000000000000              pthread_mutexattr_destroy@@GLIBC_2.2.5
000000000070b70e  w    F .text	0000000000000058              Sys_var_plugin::do_update(st_plugin_int***, st_plugin_int**)
0000000000889bfc  w    F .text	000000000000002a              Dynamic_array<Item_splocal*>::append(Item_splocal*&)
00000000007b0292  w    F .text	0000000000000015              Item_cond_or::not_null_tables() const
00000000005e9584  w    F .text	0000000000000026              List_iterator_fast<List<Item> >::List_iterator_fast(List<List<Item> >&)
000000000055973a  w    F .text	0000000000000026              I_List<THD>::append(THD*)
00000000006f16b0 g     F .text	0000000000000126              MDL_map::init()
0000000000810d52 g     F .text	000000000000003b              Item_func_convert_tz::cleanup()
00000000006f5c0a  w    F .text	0000000000000043              I_P_List_iterator<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >::operator++(int)
0000000001376d64 g     O .bss	0000000000000004              have_ndbcluster
000000000059bd8c g     F .text	0000000000000056              Repair_mrg_table_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
00000000007fdfd4 g     F .text	0000000000000046              Item_sum::set_arg(unsigned int, THD*, Item*)
00000000005d8754 g     F .text	000000000000009e              MYSQL_ERROR::set_builtin_message_text(char const*)
00000000007651e0  w    F .text	0000000000000089              Field_decimal::Field_decimal(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
0000000001371bd0 g     O .bss	0000000000000001              replicate_same_server_id
00000000007e226a  w    F .text	000000000000002b              Item_func_isempty::~Item_func_isempty()
000000000091faac g     F .text	000000000000001e              ha_myisam::delete_table(char const*)
0000000000552e10 g     F .text	0000000000000055              inc_thread_created()
000000000077982c g     F .text	0000000000000249              handler::read_range_first(st_key_range const*, st_key_range const*, bool, bool)
00000000012075c0 g     O .data	0000000000000100              sort_order_dec8_swedish_ci
0000000000698934  w    F .text	0000000000000041              Deprecated_trigger_syntax_handler::~Deprecated_trigger_syntax_handler()
000000000090e1fa  w    F .text	0000000000000041              table_events_waits_common::~table_events_waits_common()
0000000000815b80  w    F .text	0000000000000011              Item_func_minute::func_name() const
00000000007ddc06  w    F .text	0000000000000046              Item_func_plus::~Item_func_plus()
00000000007f01c0 g     F .text	0000000000000245              Item_func_inet_ntoa::val_str(String*)
0000000000982dee g     F .text	00000000000005e4              hp_delete_key
00000000006c7d20 g     F .text	0000000000000041              Event_timed::~Event_timed()
00000000008174c8  w    F .text	000000000000002b              Item_func_maketime::~Item_func_maketime()
00000000005667d2  w    F .text	000000000000000f              Item::get_monotonicity_info() const
00000000013866e8 g     O .bss	0000000000000008              Create_func_rtrim::s_singleton
0000000000737788  w    F .text	0000000000000043              LEX_COLUMN::LEX_COLUMN(String const&, unsigned int const&)
00000000005e8832  w    F .text	0000000000000033              TABLEOP_HOOKS::postlock(TABLE**, unsigned int)
000000000121bbe0 g     O .data	0000000000000100              to_upper_geostd8_general_ci
000000000138e2f4 g     O .bss	0000000000000004              events_waits_history_long_index
00000000006bab24  w    F .text	0000000000000046              TABLE_SHARE::set_table_cache_key(char*, char const*, unsigned int)
0000000000749e74 g     F .text	00000000000000eb              Field::get_time(st_mysql_time*)
00000000007097ec  w    F .text	0000000000000033              Sys_var_proxy_user::session_update(THD*, set_var*)
00000000007daebe  w    F .text	0000000000000011              Item_func_last_insert_id::func_name() const
000000000073b03c  w    F .text	0000000000000054              Item_default_value::Item_default_value(Name_resolution_context*)
00000000005f1ab8  w    F .text	000000000000001b              List<char>::List()
0000000000000000       F *UND*	0000000000000000              memcmp@@GLIBC_2.2.5
0000000000946a77 g     F .text	00000000000001e8              _mi_writeinfo
00000000006a9bf0 g     F .text	0000000000000155              insert_view_fields(THD*, List<Item>*, TABLE_LIST*)
00000000007e1be2  w    F .text	000000000000001e              Item_func_numpoints::fix_length_and_dec()
00000000007c2e20  w    F .text	0000000000000041              Create_func_x::~Create_func_x()
00000000008c2536  w    F .text	0000000000000058              Item_func_xpath_count::~Item_func_xpath_count()
00000000007acc7a g     F .text	0000000000000134              Item_equal::Item_equal(Item_equal*)
00000000007bacf0  w    F .text	0000000000000040              Item_func_udf_float::Item_func_udf_float(st_udf_func*, List<Item>&)
00000000007f2002  w    F .text	0000000000000011              Item_func_current_user::func_name() const
000000000083978e g     F .text	000000000000064e              Load_log_event::Load_log_event(THD*, sql_exchange*, char const*, char const*, List<Item>&, bool, enum_duplicates, bool, bool)
00000000007db878  w    F .text	0000000000000011              Item_func_match::func_name() const
00000000007b0002  w    F .text	000000000000000f              Item_equal::functype() const
0000000000709c0c  w    F .text	0000000000000094              Sys_var_dbug::Sys_var_dbug(char const*, char const*, int, CMD_LINE, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000006d7ab2 g     F .text	000000000000003f              injector::instance()
000000000077c9eb g     F .text	000000000000001b              hostname_cache_refresh()
00000000007980f0  w    F .text	000000000000005b              Item_ref::basic_const_item() const
00000000008b09ef g     F .text	0000000000000116              get_partition_id_with_sub(partition_info*, unsigned int*, long long*)
00000000008d1715 g     F .text	0000000000000039              load_defaults
0000000000852498  w    F .text	0000000000000046              Delete_rows_log_event_old::~Delete_rows_log_event_old()
00000000005af879  w    F .text	000000000000003d              is_user_table(TABLE*)
0000000000766c00  w    F .text	000000000000000f              Field_string::size_of() const
000000000056b146  w    F .text	0000000000000046              set_var_base::~set_var_base()
00000000007dcf62  w    F .text	000000000000002b              Item_func_sign::~Item_func_sign()
00000000007b0676  w    F .text	000000000000001b              List_iterator<Item_field>::remove()
00000000005cf744  w    F .text	000000000000009e              show_system_thread(enum_thread_type)
0000000000819745 g     F .text	00000000000000fc              is_key_used(TABLE*, unsigned int, st_bitmap const*)
000000000080a922  w    F .text	000000000000002b              Item_sum_count::~Item_sum_count()
00000000008b0b5e g     F .text	0000000000000061              get_partition_id_linear_hash_sub(partition_info*, unsigned int*)
0000000000818044  w    F .text	000000000000002b              Item_func_dayname::~Item_func_dayname()
0000000000699b4e g     F .text	0000000000000123              free_udf(st_udf_func*)
00000000007648c2  w    F .text	0000000000000027              Field::sort_charset() const
000000000108b5b8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_match
000000000084ad7f g     F .text	00000000000001ba              prepare_record(TABLE*, unsigned int, bool)
00000000008b7cbe g     F .text	00000000000000ba              set_field_ptr(Field**, unsigned char const*, unsigned char const*)
00000000008e9792 g     F .text	0000000000000303              multi_alloc_root
0000000000b75dfb g     F .text	000000000000076a              my_timer_init
0000000001088110  w    O .data.rel.ro	0000000000000030              vtable for Create_func_contains
00000000007bcabc  w    F .text	0000000000000038              Item_func_time_to_sec::Item_func_time_to_sec(Item*)
0000000000873cd4  w    F .text	0000000000000026              List<QUICK_RANGE>::prepand(List<QUICK_RANGE>*)
00000000007b0d7e  w    F .text	000000000000002b              cmp_item_int::~cmp_item_int()
00000000009084c8  w    F .text	000000000000001c              PFS_scan::has_pass() const
000000000073a9d0  w    F .text	0000000000000038              Item_func_curtime_local::Item_func_curtime_local(Item*)
0000000000958a9d g     F .text	0000000000000108              _mi_check_index
000000000086e994 g     F .text	000000000000027f              QUICK_GROUP_MIN_MAX_SELECT::QUICK_GROUP_MIN_MAX_SELECT(TABLE*, JOIN*, bool, bool, bool, st_key_part_info*, unsigned int, unsigned int, unsigned int, st_key*, unsigned int, double, unsigned long long, unsigned int, unsigned char*, st_mem_root*, bool)
00000000009109b6 g     F .text	0000000000000028              table_performance_timers::create()
0000000000566938  w    F .text	0000000000000027              Item::val_bool_result()
00000000006c8aa6 g     F .text	0000000000000396              Event_timed::load_from_row(THD*, TABLE*)
00000000009103e8 g     F .text	0000000000000021              table_file_summary_by_instance::reset_position()
000000000120ba20 g     O .data	0000000000000200              to_uni_latin7_estonian_cs
000000000091f3b8 g     F .text	0000000000000037              ha_myisam::restart_rnd_next(unsigned char*, unsigned char*)
00000000008185c8  w    F .text	0000000000000046              Item_func_period_diff::~Item_func_period_diff()
000000000079a1f4  w    F .text	0000000000000058              Item_cache_decimal::~Item_cache_decimal()
000000000082553c g     F .text	0000000000000584              MYSQL_BIN_LOG::purge_index_entry(THD*, unsigned long long*, bool)
00000000005f1840  w    F .text	00000000000000f5              Mem_root_array<st_order*, true>::push_back(st_order* const&)
00000000007378a2  w    F .text	0000000000000066              Item_string::set_repertoire_from_value()
00000000005b816e g     F .text	0000000000000254              Query_cache::write_result_data(Query_cache_block**, unsigned long, unsigned char*, Query_cache_block*, Query_cache_block::block_type)
000000000073a14e  w    F .text	0000000000000073              Item_func_conv_charset::Item_func_conv_charset(Item*, charset_info_st*)
000000000079a0fe  w    F .text	0000000000000046              Item_cache_row::~Item_cache_row()
000000000073b25e  w    F .text	00000000000000b2              Alter_info::reset()
000000000061b6fa g     F .text	0000000000000054              Protocol_local::store_tiny(long long)
0000000000790952 g     F .text	0000000000000099              Item_ref_null_helper::print(String*, enum_query_type)
000000000091d0bc g     F .text	000000000000018c              ha_myisam::optimize(THD*, st_ha_check_opt*)
00000000006eda88 g     F .text	00000000000000b4              get_user_var_int
0000000001394cc4 g     O .bss	0000000000000004              key_IO_CACHE_append_buffer_lock
0000000001069420  w    O .data.rel.ro	0000000000000028              vtable for Dummy_error_handler
0000000001386410 g     O .bss	0000000000000008              Create_func_crosses::s_singleton
0000000001386488 g     O .bss	0000000000000008              Create_func_encrypt::s_singleton
00000000008f3912 g     F .text	00000000000002cb              my_register_filename
00000000008cb3d2  w    F .text	000000000000002b              Alter_table_optimize_partition_statement::~Alter_table_optimize_partition_statement()
00000000005dc720 g     F .text	0000000000000152              mysql_ha_rm_temporary_tables(THD*)
0000000000559f7f g     F .text	000000000000007e              net_end
000000000088e080 g     F .text	000000000000012c              Gis_line_string::init_from_wkt(Gis_read_stream*, String*)
00000000007f1cd8  w    F .text	0000000000000011              Item_func_des_decrypt::func_name() const
000000000061be5a  w    F .text	000000000000003c              Statement_map::find_by_name(st_mysql_lex_string*)
00000000007f357e  w    F .text	000000000000002b              Item_func_current_user::~Item_func_current_user()
00000000007c06de  w    F .text	0000000000000041              Create_func_locate::~Create_func_locate()
000000000077bcba  w    F .text	0000000000000012              handler::update_table_comment(char const*)
00000000010ef1b0 g     O .data	0000000000000010              mutex_instrument_prefix
000000000075ea88 g     F .text	0000000000000174              Field_bit::Field_bit(unsigned char*, unsigned int, unsigned char*, unsigned char, unsigned char*, unsigned char, Field::utype, char const*)
0000000000000000       F *UND*	0000000000000000              mkdir@@GLIBC_2.2.5
000000000073a93c  w    F .text	000000000000002d              Item_func_curtime::Item_func_curtime()
0000000001386808 g     O .bss	0000000000000008              Create_func_xml_update::s_singleton
000000000087362c  w    F .text	0000000000000046              TRP_INDEX_MERGE::~TRP_INDEX_MERGE()
0000000000877302  w    F .text	000000000000002b              Item_proc_int::~Item_proc_int()
0000000000566f98  w    F .text	000000000000000f              Item::null_inside()
0000000000000000       F *UND*	0000000000000000              ftruncate64@@GLIBC_2.2.5
000000000056769a  w    F .text	0000000000000090              Item_string::clone_item()
0000000000791c1c g     F .text	0000000000000097              Item_trigger_field::eq(Item const*, bool) const
00000000013864c0 g     O .bss	0000000000000008              Create_func_field::s_singleton
0000000000905aa6  w    F .text	000000000000000f              ha_perfschema::max_supported_key_parts() const
00000000007391d8  w    F .text	0000000000000025              Item_func_opt_neg::negate()
0000000000678b02  w    F .text	0000000000000026              List_iterator<partition_element>::List_iterator(List<partition_element>&)
00000000005c0cb0 g     F .text	0000000000000025              thd_tablespace_op
000000000075f690 g     F .text	0000000000000521              Field_bit::val_int()
0000000000764064  w    F .text	0000000000000058              int2my_decimal(unsigned int, long long, char, my_decimal*)
000000000107a3f0  w    O .data.rel.ro	0000000000000360              vtable for Item_decimal
0000000000898622 g     F .text	0000000000000044              field_decimal::get_min_arg(String*)
0000000000754676 g     F .text	000000000000012f              Field_time::cmp(unsigned char const*, unsigned char const*)
00000000007a3862 g     F .text	00000000000000ee              Item_func_ifnull::int_op()
00000000005cdef6  w    F .text	0000000000000056              Discrete_interval::replace(unsigned long long, unsigned long long, unsigned long long)
00000000008165e0  w    F .text	0000000000000046              Item_func_now::~Item_func_now()
00000000005d01ca  w    F .text	0000000000000026              List_iterator<Key>::List_iterator(List<Key>&)
000000000059b606  w    F .text	0000000000000036              Dynamic_array<GRANT_NAME*>::Dynamic_array(unsigned int, unsigned int)
000000000057a41c  w    F .text	0000000000000096              THD::set_time()
0000000000561eb2 g     F .text	0000000000000b48              Protocol::send_result_set_metadata(List<Item>*, unsigned int)
00000000008fd44b g     F .text	0000000000000087              thr_lock_delete
00000000007a3768 g     F .text	00000000000000f9              Item_func_ifnull::real_op()
00000000007d5486 g     F .text	000000000000002f              Item_user_var_as_out_param::val_decimal(my_decimal*)
00000000008caf56 g     F .text	0000000000000351              Alter_table_truncate_partition_statement::execute(THD*)
00000000007dab28  w    F .text	0000000000000011              Item_func_pow::func_name() const
0000000000820241 g     F .text	00000000000000b2              is_valid_log_name(char const*, unsigned long)
000000000056570c  w    F .text	0000000000000025              List<Item>::push_back(Item*)
00000000007b0e2c  w    F .text	0000000000000056              in_decimal::~in_decimal()
0000000000000000       F *UND*	0000000000000000              deflate
00000000005d0d40  w    F .text	000000000000001b              MDL_context::~MDL_context()
0000000000607f5e  w    F .text	000000000000005f              SQL_I_List<TABLE_LIST>::SQL_I_List(SQL_I_List<TABLE_LIST> const&)
00000000005ca042 g     F .text	000000000000011a              THD::restore_backup_open_tables_state(Open_tables_backup*)
00000000008c0600  w    F .text	000000000000001b              Item_basic_constant::set_used_tables(unsigned long long)
00000000006f437e g     F .text	0000000000000089              MDL_context::visit_subgraph(MDL_wait_for_graph_visitor*)
000000000054f9cc g     F .text	00000000000001bf              init_sql_statement_names()
00000000007b54ac g     F .text	0000000000000180              Create_func_master_pos_wait::create_native(THD*, st_mysql_lex_string, List<Item>*)
0000000000788792 g     F .text	0000000000000067              Item_copy_decimal::val_real()
00000000006f0b3e  w    F .text	000000000000001b              List<Observer_info>::List()
000000000138e318 g     O .bss	0000000000000008              myisam_recover_options
000000000075ee00 g     F .text	0000000000000095              Field_bit::new_key_field(st_mem_root*, TABLE*, unsigned char*, unsigned char*, unsigned int)
00000000006cf1b0 g     F .text	0000000000000171              partition_info::has_unique_names()
00000000006c7d88 g     F .text	000000000000003c              Event_job_data::Event_job_data()
00000000008f58d9 g     F .text	0000000000000115              my_sync_dir
00000000008f2f10 g     F .text	0000000000000157              my_message_stderr
0000000000832bfa g     F .text	0000000000000812              Log_event::read_log_event(char const*, unsigned int, char const**, Format_description_log_event const*)
00000000006905c2  w    F .text	000000000000004e              handler::max_key_part_length() const
00000000007651b4  w    F .text	000000000000002b              Field_real::~Field_real()
000000000084583e g     F .text	000000000000004b              Write_rows_log_event::Write_rows_log_event(char const*, unsigned int, Format_description_log_event const*)
0000000000754d5e g     F .text	00000000000000cf              Field_year::val_str(String*, String*)
00000000008c1608  w    F .text	0000000000000011              Item_xpath_cast_bool::func_name() const
000000000079ca5e g     F .text	00000000000000b3              Item_func_nop_all::val_int()
00000000013707a4 g     O .bss	0000000000000004              key_LOCK_thd_data
00000000012c8ac0 g     O .data	00000000000000b0              my_charset_ucs2_slovak_uca_ci
0000000000763a40 g     F .text	0000000000000070              Field_blob::char_length()
00000000005cf626  w    F .text	000000000000003b              Security_context::Security_context()
000000000079b868  w    F .text	000000000000004a              Cached_item_real::Cached_item_real(Item*)
0000000000766822  w    F .text	000000000000000f              Field_datetime::decimals() const
00000000010aa120  w    O .data.rel.ro	0000000000000398              vtable for Item_func_substr
0000000000845210 g     F .text	0000000000000025              Table_map_log_event::do_shall_skip(Relay_log_info*)
000000000075da7c g     F .text	0000000000000322              Field_set::store(char const*, unsigned int, charset_info_st*)
0000000000767a84  w    F .text	0000000000000026              List<Create_field>::List(List<Create_field> const&)
0000000000899ab8  w    F .text	0000000000000106              field_str::field_str(Item*, analyse*)
00000000007b9900  w    F .text	0000000000000061              Item_udf_sum::Item_udf_sum(st_udf_func*, List<Item>&)
00000000007668cc  w    F .text	000000000000000f              Field_datetime::pack_length() const
00000000007bdd16  w    F .text	000000000000002d              Create_func_centroid::Create_func_centroid()
0000000000759310 g     F .text	00000000000000e1              Field_string::get_key_image(unsigned char*, unsigned int, Field::imagetype)
000000000070b426  w    F .text	00000000000000ef              Sys_var_plugin::Sys_var_plugin(char const*, char const*, int, long, unsigned long, CMD_LINE, int, char**, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000006078c8  w    F .text	0000000000000255              Security_context::Security_context(Security_context const&)
00000000012ca3e0 g     O .data	00000000000000b0              my_charset_utf8mb4_estonian_uca_ci
00000000005d0432  w    F .text	000000000000001a              List<Key_part_spec>::pop()
0000000000780d7c g     F .text	0000000000000069              Item_sp_variable::Item_sp_variable(char*, unsigned int)
0000000000000000       F *UND*	0000000000000000              fchmod@@GLIBC_2.2.5
000000000079a830  w    F .text	0000000000000046              Item_copy_float::~Item_copy_float()
0000000000567a02  w    F .text	000000000000002b              Item_return_int::~Item_return_int()
00000000007c72d0 g     F .text	0000000000000182              Item_decimal_typecast::print(String*, enum_query_type)
0000000000828513 g     F .text	000000000000003d              slow_log_print(THD*, char const*, unsigned int, unsigned long long)
00000000007773c4 g     F .text	000000000000004a              handler::drop_table(char const*)
00000000006f9f20  w    F .text	000000000000002b              Analyze_table_statement::~Analyze_table_statement()
000000000136f5c0 g     O .bss	0000000000000070              LOCK_user_conn
0000000000ba607e g     F .text	0000000000000117              vio_write
000000000055883e  w    F .text	0000000000000026              base_list_iterator::base_list_iterator(base_list&)
000000000136cc33 g     O .bss	0000000000000001              relay_log_purge
000000000089c05c  w    F .text	000000000000004f              Select_materialize::Select_materialize(select_result*)
00000000007680ce  w    F .text	000000000000002b              Field_date::~Field_date()
00000000005af074  w    F .text	0000000000000069              TABLE_SHARE::TABLE_SHARE()
00000000007ca4ea g     F .text	00000000000000d4              Item_func_sqrt::val_real()
0000000000928699 g     F .text	0000000000000695              mi_sort_index
00000000007fc228  w    F .text	0000000000000013              Item_subselect::reset()
00000000007c6ecc g     F .text	00000000000000b9              Item_decimal_typecast::val_str(String*)
0000000000ba5492 g     F .text	000000000000000b              my_xml_parser_free
0000000000767998  w    F .text	000000000000002c              Field_bit_as_char::store(double)
000000000079bac8  w    F .text	0000000000000026              List<Cached_item>::prepand(List<Cached_item>*)
0000000000796606  w    F .text	0000000000000035              Hybrid_type_traits::~Hybrid_type_traits()
00000000005ef0ee g     F .text	000000000000001f              Query_tables_list::destroy_query_tables_list()
0000000000874206  w    F .text	0000000000000025              List<Item_sum>::push_back(Item_sum*)
0000000000873200  w    F .text	0000000000000067              SEL_ARG::make_root()
00000000007521e0 g     F .text	00000000000000a6              Field_real::val_decimal(my_decimal*)
0000000000872f6a  w    F .text	00000000000000b6              SEL_ARG::is_singlepoint()
00000000008c1508  w    F .text	0000000000000045              Item_nodeset_func_elementbyindex::Item_nodeset_func_elementbyindex(Item*, Item*, String*)
000000000084eba4 g     F .text	0000000000000121              Old_rows_log_event::get_data_size()
00000000006b7492 g     F .text	000000000000011c              TABLE_LIST::set_insert_values(st_mem_root*)
00000000007bc9e2  w    F .text	000000000000005b              Item_func_weekday::Item_func_weekday(Item*, bool)
00000000008e3e74 g     F .text	000000000000003f              multi_key_cache_search
0000000000766158  w    F .text	0000000000000046              Field_tiny::~Field_tiny()
00000000007aea10  w    F .text	0000000000000011              Item_func_ne::func_name() const
0000000000876d58  w    F .text	000000000000002b              Item_proc::~Item_proc()
0000000001215b80 g     O .data	0000000000000200              to_uni_cp1257_general_ci
00000000007d5bfc g     F .text	00000000000008c1              Item_func_get_system_var::val_int()
0000000000752dae g     F .text	000000000000008b              Field_timestamp::val_real()
0000000000828550 g     F .text	0000000000000092              LOGGER::log_command(THD*, enum_server_command)
0000000000000000       F *UND*	0000000000000000              unlink@@GLIBC_2.2.5
00000000007be320  w    F .text	0000000000000041              Create_func_cos::~Create_func_cos()
000000000091e072 g     F .text	00000000000002d1              ha_myisam::preload_keys(THD*, st_ha_check_opt*)
0000000000798af6  w    F .text	0000000000000038              Item_copy_int::Item_copy_int(Item*)
00000000007ba1ca  w    F .text	0000000000000038              Item_func_acos::Item_func_acos(Item*)
0000000000758cde g     F .text	00000000000001e6              Field_string::sql_type(String&) const
0000000000609bad g     F .text	0000000000000059              plugin_status(char const*, unsigned long, int)
00000000013864a0 g     O .bss	0000000000000008              Create_func_equals::s_singleton
00000000005cf182  w    F .text	000000000000005b              Alter_info::~Alter_info()
00000000007bd0f6  w    F .text	0000000000000041              Create_native_func::~Create_native_func()
000000000057a54a  w    F .text	0000000000000027              THD::killed_errno() const
00000000006e8f0e g     F .text	000000000000006a              PROF_MEASUREMENT::collect()
00000000007afe3a  w    F .text	000000000000000f              Item_is_not_null_test::functype() const
000000000087227a  w    F .text	0000000000000011              QUICK_SELECT_DESC::make_reverse(unsigned int)
0000000000793bf8 g     F .text	0000000000000071              Item_cache_real::val_int()
000000000081c354 g     F .text	000000000000097a              Log_to_csv_event_handler::log_slow(THD*, long, long, char const*, unsigned int, unsigned long long, unsigned long long, bool, char const*, unsigned int)
00000000007b1088  w    F .text	0000000000000046              Item_func_if::~Item_func_if()
00000000008189fa g     F .text	0000000000000490              key_restore(unsigned char*, unsigned char*, st_key*, unsigned int)
0000000000000000       F *UND*	0000000000000000              strncmp@@GLIBC_2.2.5
000000000066f6bc g     F .text	00000000000001e8              store_constraints(THD*, TABLE*, st_mysql_lex_string*, st_mysql_lex_string*, char const*, unsigned int, char const*, unsigned int)
000000000138cdf8 g     O .bss	0000000000000008              table_share_lost
000000000136a620 g     O .data	00000000000000b0              my_charset_utf8_general_mysql500_ci
0000000000559c9c  w    F .text	0000000000000026              List_iterator_fast<Buffered_log>::List_iterator_fast(List<Buffered_log>&)
00000000006e2edd g     F .text	0000000000000221              drop_server(THD*, st_lex_server_options*)
000000000136fa78 g     O .bss	0000000000000008              signal_thread
000000000120f660 g     O .data	0000000000000100              sort_order_cp866_general_ci
00000000007c32a8  w    F .text	0000000000000046              Item_func_min::~Item_func_min()
00000000008490a6  w    F .text	000000000000000f              Intvar_log_event::get_type_code()
0000000000653a48 g     F .text	000000000000026c              JOIN::rollup_write_data(unsigned int, TABLE*)
00000000005d1cbc  w    F .text	0000000000000056              Foreign_key::~Foreign_key()
00000000007681de  w    F .text	0000000000000046              Field_timestamp::~Field_timestamp()
0000000000797bc8  w    F .text	000000000000000f              Item_ref::is_result_field()
00000000010c0fd0  w    O .data.rel.ro	0000000000000028              vtable for Silence_log_table_errors
00000000008bb09e g     F .text	0000000000000564              Unique::get(TABLE*)
00000000007e0632 g     F .text	0000000000000120              Item_func_x::val_real()
00000000007949a2 g     F .text	0000000000000045              Item_cache_row::check_cols(unsigned int)
00000000005d1a60  w    F .text	000000000000002b              select_max_min_finder_subselect::~select_max_min_finder_subselect()
00000000005cda18 g     F .text	0000000000000076              THD::increment_user_connections_counter()
0000000000568ea4 g     F .text	0000000000000041              Rpl_filter::get_wild_ignore_table(String*)
000000000065c2b0  w    F .text	000000000000001a              List_iterator<Item_func_match>::ref()
000000000136cc80 g     O .bss	0000000000000008              delay_key_write_options
00000000007beb96  w    F .text	0000000000000026              Create_func_dimension::~Create_func_dimension()
000000000070b344  w    F .text	0000000000000051              Sys_var_set::session_value_ptr(THD*, st_mysql_lex_string*)
00000000005c2a0e g     F .text	000000000000002f              thd_memdup
0000000001080378  w    O .data.rel.ro	0000000000000398              vtable for Item_cond
0000000000604926 g     F .text	0000000000000021              comp_gt_creator(bool)
00000000008714f4 g     F .text	000000000000015f              QUICK_INDEX_MERGE_SELECT::dbug_dump(int, bool)
0000000000737908  w    F .text	000000000000005a              Item_string::append(char*, unsigned int)
0000000001375fc0 g     O .bss	0000000000000060              my_locale_es_MX
000000000086aa40 g     F .text	00000000000001c0              QUICK_SELECT_DESC::QUICK_SELECT_DESC(QUICK_RANGE_SELECT*, unsigned int)
000000000065a2da  w    F .text	000000000000001b              List<Item_equal>::~List()
00000000007bda56  w    F .text	0000000000000041              Create_func_benchmark::~Create_func_benchmark()
00000000008092ca  w    F .text	000000000000000f              Item_std_field::result_type() const
00000000010c3a58  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_set_trigger_field
0000000000755bdc g     F .text	00000000000001e6              Field_newdate::store(long long, bool)
0000000001217320 g     O .data	0000000000000100              to_lower_cp866_bin
00000000007be4b4  w    F .text	000000000000002d              Create_func_crosses::Create_func_crosses()
0000000001370888 g     O .bss	0000000000000004              key_thread_main
00000000007515f0 g     F .text	000000000000007c              Field_float::cmp(unsigned char const*, unsigned char const*)
000000000059e235 g     F .text	00000000000000be              mark_tmp_table_for_reuse(TABLE*)
00000000006bf5e8 g     F .text	000000000000004d              Time_zone_db::Time_zone_db(st_time_zone_info*, String const*)
00000000007b615c g     F .text	0000000000000050              Create_func_sec_to_time::create(THD*, Item*)
00000000007e20bc  w    F .text	0000000000000058              Item_func_dimension::~Item_func_dimension()
000000000106c160  w    O .data.rel.ro	0000000000000020              vtable for Master_info
00000000005ce620  w    F .text	000000000000001b              List<String>::~List()
00000000007c080a  w    F .text	0000000000000041              Create_func_log10::~Create_func_log10()
000000000057aa40  w    F .text	0000000000000064              Rotate_log_event::~Rotate_log_event()
00000000006c818c g     F .text	0000000000000919              Event_queue_element::load_from_row(THD*, TABLE*)
000000000065d8d1 g     F .text	00000000000000bd              fill_plugins(THD*, TABLE_LIST*, Item*)
00000000007f0b9e g     F .text	00000000000000bf              Item_func_crc32::val_int()
00000000007f19a8  w    F .text	000000000000000f              Item_func_concat_ws::not_null_tables() const
000000000079a914  w    F .text	0000000000000046              Item_copy_string::~Item_copy_string()
0000000000797654  w    F .text	0000000000000030              Item_static_float_func::print(String*, enum_query_type)
00000000007c2d5c  w    F .text	000000000000002d              Create_func_within::Create_func_within()
00000000008c209e  w    F .text	0000000000000046              Item_nodeset_func_attributebyname::~Item_nodeset_func_attributebyname()
00000000010edb6c g     O .data	0000000000000004              builtin_binlog_plugin_interface_version
000000000065c8c2  w    F .text	0000000000000026              List_iterator<Index_hint>::List_iterator(List<Index_hint>&)
0000000001217000 g     O .data	0000000000000200              to_uni_cp1256_bin
00000000008498b4  w    F .text	0000000000000034              Relay_log_info::set_flag(Relay_log_info::enum_state_flag)
0000000000566f40  w    F .text	000000000000000e              Item::this_item() const
00000000007b7038 g     F .text	0000000000000060              Create_func_xml_update::create(THD*, Item*, Item*, Item*)
00000000008873f6 g     F .text	0000000000000036              sp_instr_hreturn::opt_mark(sp_head*, List<sp_instr>*)
000000000093b847 g     F .text	00000000000000d7              _mi_update_blob_record
00000000005f108c  w    F .text	000000000000004e              Lex_input_stream::yyGet()
00000000007da592  w    F .text	0000000000000051              Item_func_signed::fix_length_and_dec()
0000000000597f20  w    F .text	000000000000005c              base_list::base_list(base_list const&)
00000000006f09d0  w    F .text	000000000000001b              Trans_delegate::Trans_delegate()
00000000008c1248  w    F .text	000000000000004e              Item_nodeset_func_selfbyname::Item_nodeset_func_selfbyname(Item*, char const*, unsigned int, String*)
000000000136cc31 g     O .bss	0000000000000001              opt_readonly
000000000107df48  w    O .data.rel.ro	0000000000000028              vtable for Cached_item
0000000000564dd8  w    F .text	0000000000000099              base_list::push_back(void*)
000000000059d589 g     F .text	00000000000000a7              free_io_cache(TABLE*)
0000000000799d70  w    F .text	0000000000000013              List_iterator_fast<Item>::replace(List<Item>&)
000000000138d6e0 g     O .bss	0000000000000100              table_file_instances::m_table_lock
0000000000690758  w    F .text	000000000000003d              Alter_table_prelocking_strategy::Alter_table_prelocking_strategy(Alter_info*)
00000000008c1798  w    F .text	000000000000004b              Item_nodeset_context_cache::Item_nodeset_context_cache(String*, String*)
00000000007f4072  w    F .text	0000000000000046              Item_func_sha2::~Item_func_sha2()
00000000005b11a2  w    F .text	0000000000000041              Alter_table_prelocking_strategy::~Alter_table_prelocking_strategy()
0000000000809eee  w    F .text	000000000000000f              Item_sum_udf_decimal::result_type() const
00000000007bf388  w    F .text	0000000000000041              Create_func_format::~Create_func_format()
00000000007f47e8 g     F .text	000000000000002b              Item_subselect::~Item_subselect()
000000000098eeb8  w    F .text	0000000000000071              Mrg_child_def::Mrg_child_def(char*, unsigned long, char*, unsigned long)
00000000008741cc  w    F .text	000000000000001d              List_iterator_fast<SEL_IMERGE>::operator++(int)
00000000010814a8  w    O .data.rel.ro	0000000000000048              vtable for in_row
000000000138cbe8 g     O .bss	0000000000000008              mutex_lost
0000000000594304 g     F .text	00000000000000d7              decoy_user(st_mysql_lex_string const&, st_mem_root*)
00000000008c09c4  w    F .text	0000000000000081              Item_nodeset_func::Item_nodeset_func(Item*, String*)
00000000005e553a g     F .text	000000000000011b              select_insert::select_insert(TABLE_LIST*, TABLE*, List<Item>*, List<Item>*, List<Item>*, enum_duplicates, bool)
00000000005eeeea g     F .text	0000000000000095              LEX::cleanup_lex_after_parse_error(THD*)
0000000001371fa0 g     O .bss	0000000000000070              LOCK_open
000000000070cd08  w    F .text	0000000000000035              Sys_var_tz::global_update(THD*, set_var*)
000000000087732e  w    F .text	0000000000000046              Item_proc_string::~Item_proc_string()
00000000005cece8  w    F .text	000000000000001e              Query_tables_list::is_stmt_row_injection() const
00000000007bca3e  w    F .text	000000000000003d              Item_func_dayname::Item_func_dayname(Item*)
00000000005d0554  w    F .text	000000000000001b              List_iterator<Key_part_spec>::List_iterator()
00000000010f1600 g     O .data	0000000000000020              myisam_readnext_vec
00000000007c2268  w    F .text	0000000000000041              Create_func_substr_index::~Create_func_substr_index()
00000000007995e8  w    F .text	00000000000000f6              Item_cache_str::Item_cache_str(Item const*)
000000000090c1b8  w    F .text	000000000000002d              PFS_editable_acl::PFS_editable_acl()
00000000007aecf0  w    F .text	0000000000000011              Item_func_if::func_name() const
000000000059d3dd g     F .text	0000000000000126              intern_close_table(TABLE*)
00000000012656e0 g     O .data	0000000000000101              combo2map
00000000010ef200 g     O .data	0000000000000001              pfs_enabled
00000000010cda20 g     O .data	0000000000000d50              com_status_vars
000000000136cde0 g     O .bss	0000000000000008              binlog_stmt_cache_use
00000000005d18c2  w    F .text	000000000000001b              I_List<Item_change_record>::I_List()
00000000007dd9a0  w    F .text	000000000000002b              Item_func_neg::~Item_func_neg()
00000000005d7404  w    F .text	0000000000000021              st_ha_create_information::st_ha_create_information()
00000000007a1be4 g     F .text	0000000000000603              Item_func_interval::val_int()
00000000012c8a00 g     O .data	00000000000000b0              my_charset_ucs2_lithuanian_uca_ci
00000000007fc376  w    F .text	0000000000000022              Item_singlerow_subselect::addr(unsigned int)
0000000000568e62 g     F .text	0000000000000041              Rpl_filter::get_wild_do_table(String*)
000000000057af58 g     F .text	000000000000004b              sp_cache_clear(sp_cache**)
00000000007a995a g     F .text	000000000000012d              Item_cond::traverse_cond(void (*)(Item const*, void*), void*, Item::traverse_order)
000000000106fe28  w    O .data.rel.ro	0000000000000298              vtable for Field_blob
00000000007392ba  w    F .text	0000000000000064              Item_func_interval::Item_func_interval(Item_row*)
0000000000809ce6  w    F .text	00000000000000e0              Item_sum_udf_str::val_real()
0000000000569cb8 g     F .text	0000000000000127              sys_var::value_ptr(THD*, enum_var_type, st_mysql_lex_string*)
00000000008a90c2  w    F .text	000000000000014d              READ_INFO::terminator(unsigned char const*, unsigned int)
0000000000608062  w    F .text	0000000000000025              List<TABLE_LIST>::push_front(TABLE_LIST*)
00000000005c54ba g     F .text	0000000000000060              select_export::~select_export()
000000000055914c  w    F .text	0000000000000026              Comp_creator::~Comp_creator()
0000000000815dde  w    F .text	000000000000005b              Item_func_weekday::val_real()
00000000013863f8 g     O .bss	0000000000000008              Create_func_cos::s_singleton
00000000008137e4 g     F .text	0000000000000210              Item_func_timediff::val_str(String*)
000000000089ac1a  w    F .text	000000000000000b              analyse::end_group()
00000000008c159a  w    F .text	000000000000000f              Item_bool::is_bool_func()
000000000087c316 g     F .text	00000000000005cf              lock_db_routines(THD*, char*)
00000000008493e4  w    F .text	0000000000000046              Delete_file_log_event::~Delete_file_log_event()
000000000070857e  w    F .text	0000000000000096              MYSQL_QUERY_LOG::open_slow_log(char const*)
0000000000873f3c  w    F .text	000000000000001b              List<SEL_IMERGE>::List()
00000000007da722  w    F .text	000000000000002b              Item_num_op::~Item_num_op()
00000000006b9d44 g     F .text	0000000000000051              TABLE_LIST::containing_subselect()
000000000120afe0 g     O .data	0000000000000101              ctype_hebrew_general_ci
000000000088742c g     F .text	0000000000000102              sp_instr_cpush::execute(THD*, unsigned int*)
0000000001374d00 g     O .bss	0000000000000060              my_locale_ru_RU
00000000012c7080 g     O .data	0000000000000600              page0FFdata
000000000082ccb8  w    F .text	0000000000000027              LOGGER::lock_shared()
0000000000816686  w    F .text	000000000000000f              Item_func_sysdate_local::const_item() const
000000000120fa80 g     O .data	0000000000000100              to_lower_keybcs2_general_ci
000000000065a7d2  w    F .text	0000000000000079              LEX::is_single_level_stmt()
0000000000818154  w    F .text	0000000000000046              Item_func_second::~Item_func_second()
0000000000981dc4 g     F .text	0000000000000021              ha_heap::indexes_are_disabled()
000000000077be10  w    F .text	000000000000001a              handler::prepare_drop_index(TABLE*, unsigned int*, unsigned int)
00000000007acfa4 g     F .text	000000000000002d              Item_equal::add(Item_field*)
00000000007b0fea  w    F .text	000000000000002b              Item_func_case::~Item_func_case()
000000000073b526  w    F .text	0000000000000038              select_dump::select_dump(sql_exchange*)
000000000077ef2a g     F .text	0000000000000167              Item::Item(THD*, Item*)
00000000007b2dfa g     F .text	0000000000000054              Create_func_connection_id::create(THD*)
000000000073b9d2  w    F .text	000000000000004d              set_var_password::set_var_password(st_lex_user*, char*)
0000000000765fa2  w    F .text	0000000000000011              Field_timestamp::charset() const
000000000090f8ae  w    F .text	0000000000000041              table_all_instr_class::~table_all_instr_class()
00000000007390aa  w    F .text	0000000000000046              Item_func_isnotfalse::~Item_func_isnotfalse()
00000000007f2ecc  w    F .text	0000000000000046              Item_func_collation::~Item_func_collation()
0000000000815a64  w    F .text	0000000000000013              Item_func_monthname::check_partition_func_processor(unsigned char*)
0000000000910198 g     F .text	00000000000001a6              table_file_summary_by_event_name::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000007ac06e g     F .text	0000000000000121              Item_func_like::turboBM_compute_bad_character_shifts()
0000000000766ea0  w    F .text	0000000000000027              Field_blob::pack_length() const
00000000005af6d2  w    F .text	0000000000000046              Field_iterator_natural_join::~Field_iterator_natural_join()
0000000000813640 g     F .text	0000000000000067              Item_func_add_time::val_int()
0000000000000000       F *UND*	0000000000000000              sigprocmask@@GLIBC_2.2.5
0000000000982932  w    F .text	000000000000000f              ha_heap::max_supported_key_part_length() const
00000000005b13aa  w    F .text	0000000000000046              Field_iterator_table::~Field_iterator_table()
000000000086aa40 g     F .text	00000000000001c0              QUICK_SELECT_DESC::QUICK_SELECT_DESC(QUICK_RANGE_SELECT*, unsigned int)
00000000008c1068  w    F .text	0000000000000011              Item_nodeset_func_rootelement::func_name() const
00000000005f135a  w    F .text	0000000000000012              Lex_input_stream::get_tok_start()
00000000006c3e24 g     F .text	00000000000002a1              rea_create_table(THD*, char const*, char const*, char const*, st_ha_create_information*, List<Create_field>&, unsigned int, st_key*, handler*)
00000000005656f0  w    F .text	000000000000001b              Send_field::~Send_field()
000000000074b68c g     F .text	000000000000012f              Field_decimal::val_int()
000000000056664e  w    F .text	0000000000000034              DTCollation::set(charset_info_st*, Derivation, unsigned int)
00000000006bb65e  w    F .text	0000000000000026              Wait_for_flush::~Wait_for_flush()
000000000136bf48 g     O .data	0000000000000008              my_str_malloc
00000000007bb0aa  w    F .text	000000000000002d              Item_func_row_count::Item_func_row_count()
00000000007949e8 g     F .text	0000000000000135              Item_cache_row::null_inside()
00000000007f189c  w    F .text	0000000000000054              Item::fix_char_length_ulonglong(unsigned long long)
000000000088c7b2 g     F .text	00000000000001cf              sp_cursor::fetch(THD*, List<sp_variable>*)
00000000005d1ef0  w    F .text	000000000000002b              st_select_lex::~st_select_lex()
0000000000778508 g     F .text	00000000000000bb              ha_check_if_table_exists(THD*, char const*, char const*, bool*)
00000000007bc260  w    F .text	0000000000000038              Item_func_geometry_from_text::Item_func_geometry_from_text(Item*)
0000000001069d30  w    O .data.rel.ro	0000000000000088              vtable for select_create
000000000073bbe8  w    F .text	0000000000000054              sp_lex_keeper::sp_lex_keeper(LEX*, bool)
000000000087d622 g     F .text	0000000000000048              sp_sroutine_key
0000000001386480 g     O .bss	0000000000000008              Create_func_encode::s_singleton
000000000136cc60 g     O .bss	0000000000000004              calling_initgroups
00000000006410f8 g     F .text	0000000000000223              remove_eq_conds(THD*, Item*, Item::cond_result*)
00000000006e6a2c g     F .text	0000000000000112              decrease_user_connections(user_conn*)
00000000007e1f30  w    F .text	0000000000000058              Item_func_numpoints::~Item_func_numpoints()
00000000009467b3 g     F .text	0000000000000031              mi_restore_status
0000000000889baa  w    F .text	0000000000000036              Dynamic_array<Item_splocal*>::Dynamic_array(unsigned int, unsigned int)
0000000000767502  w    F .text	0000000000000017              Field_bit::max_data_length() const
00000000007e24e2  w    F .text	0000000000000046              Item_func_centroid::~Item_func_centroid()
00000000005cc7c8 g     F .text	00000000000002ef              THD::binlog_update_row(TABLE*, bool, st_bitmap const*, unsigned long, unsigned char const*, unsigned char const*)
0000000000698298  w    F .text	0000000000000050              Stored_program_creation_ctx::Stored_program_creation_ctx(charset_info_st*, charset_info_st*, charset_info_st*)
00000000005cfc9c  w    F .text	000000000000002d              select_result_interceptor::select_result_interceptor()
0000000000764e80  w    F .text	0000000000000027              Field_num::row_pack_length() const
000000000088c136 g     F .text	0000000000000259              sp_rcontext::activate_handler(THD*, unsigned int*, sp_instr*, Query_arena*, Query_arena*)
00000000005593ca  w    F .text	000000000000002d              Ge_creator::Ge_creator()
0000000000559516  w    F .text	000000000000001b              THD::vio_ok() const
00000000007d9e01  w    F .text	0000000000000042              my_decimal_mul(unsigned int, my_decimal*, my_decimal const*, my_decimal const*)
00000000008db497 g     F .text	00000000000000df              my_b_printf
000000000082efa0 g     F .text	00000000000002c6              mysql_lock_merge(st_mysql_lock*, st_mysql_lock*)
000000000093b61d g     F .text	000000000000005c              mi_nommap_pwrite
000000000054a2e6 g     F .text	0000000000000022              main
0000000000800a0e g     F .text	0000000000000051              Aggregator_simple::arg_val_real()
0000000000782ebc g     F .text	00000000000000f8              Item_field::Item_field(Field*)
000000000090e462 g     F .text	0000000000000067              table_events_waits_summary_by_thread_by_event_name::table_events_waits_summary_by_thread_by_event_name()
00000000007a79c4 g     F .text	0000000000000035              cmp_item_decimal::compare(cmp_item*)
00000000010f0fa4 g     O .data	0000000000000004              builtin_myisam_plugin_interface_version
0000000001374ca0 g     O .bss	0000000000000060              my_locale_ro_RO
00000000009623d4 g     F .text	00000000000008cc              _mi_insert
00000000005ee0d2 g     F .text	000000000000005b              st_select_lex_node::include_global(st_select_lex_node**)
000000000070c7d6  w    F .text	00000000000000f1              Sys_var_struct::Sys_var_struct(char const*, char const*, int, long, unsigned long, CMD_LINE, long, void*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
0000000000b6f734 g     F .text	0000000000000033              ha_partition::max_supported_record_length() const
00000000007097b8  w    F .text	0000000000000033              Sys_var_proxy_user::do_check(THD*, set_var*)
00000000007fbb2c g     F .text	0000000000000194              subselect_uniquesubquery_engine::print(String*, enum_query_type)
0000000000738f22  w    F .text	0000000000000046              Item_func_isnottrue::~Item_func_isnottrue()
00000000007dd8e8  w    F .text	0000000000000046              Item_func_abs::~Item_func_abs()
00000000007f476c g     F .text	000000000000007b              Item_subselect::~Item_subselect()
0000000000816882  w    F .text	000000000000005b              Item_date_add_interval::charset_for_protocol() const
0000000001069090  w    O .data.rel.ro	0000000000000020              vtable for i_string_pair
00000000008bbad6 g     F .text	000000000000013f              Item_nodeset_func_childbyname::val_nodeset(String*)
0000000000567166  w    F .text	000000000000003d              Item_num::Item_num()
0000000000b73a32 g     F .text	000000000000015b              _lf_pinbox_get_pins
0000000000814336 g     F .text	0000000000000211              Item_func_timestamp_diff::print(String*, enum_query_type)
0000000000765f22  w    F .text	000000000000000f              Field_null::size_of() const
00000000005d9c7a  w    F .text	000000000000001b              Warning_info::set_read_only(bool)
000000000088958e  w    F .text	0000000000000046              sp_instr_hpop::~sp_instr_hpop()
00000000010f626c g     O .data	0000000000000004              csv_storage_engine
00000000007e3042 g     F .text	0000000000000169              Item_row::transform(Item* (Item::*)(unsigned char*), unsigned char*)
00000000007f2600  w    F .text	0000000000000011              Item_func_charset::func_name() const
00000000007ba152  w    F .text	0000000000000038              Item_func_sqrt::Item_func_sqrt(Item*)
0000000000780680 g     F .text	00000000000001c5              Item_static_string_func::safe_charset_converter(charset_info_st*)
0000000000809efe  w    F .text	000000000000001b              Item_sum_udf_decimal::fix_length_and_dec()
0000000001218480 g     O .data	0000000000000200              to_uni_hebrew_bin
00000000007f2ae2  w    F .text	0000000000000058              Item_func_uncompressed_length::~Item_func_uncompressed_length()
00000000007ad5de g     F .text	0000000000000196              Item_equal::val_int()
0000000001069e70  w    O .data.rel.ro	0000000000000038              vtable for Delayed_prelocking_strategy
00000000005e94f0  w    F .text	0000000000000011              Delayed_insert::lock_count()
00000000005f14d8  w    F .text	000000000000007a              lex_casecmp(char const*, char const*, unsigned int)
000000000079b522 g     F .text	0000000000000084              Cached_item_int::cmp()
00000000007c42be g     F .text	000000000000014c              Item_func::traverse_cond(void (*)(Item const*, void*), void*, Item::traverse_order)
00000000005b0ecc  w    F .text	0000000000000026              List_iterator<String>::List_iterator(List<String>&)
0000000001395678 g     O .bss	0000000000000004              thr_client_alarm
00000000007d1a0e g     F .text	00000000000002b5              Item_func_release_lock::val_int()
000000000082caae  w    F .text	000000000000002d              TC_LOG_DUMMY::TC_LOG_DUMMY()
0000000000737890  w    F .text	0000000000000012              Item_splocal::my_name() const
0000000001093090  w    O .data.rel.ro	0000000000000398              vtable for Item_func_integer
00000000007c0872  w    F .text	000000000000002d              Create_func_log2::Create_func_log2()
000000000085226a  w    F .text	0000000000000033              Old_rows_log_event::is_valid() const
00000000008b7e4f g     F .text	0000000000000029              mem_alloc_error(unsigned long)
0000000000890346 g     F .text	000000000000006c              Gis_multi_point::num_geometries(unsigned int*) const
00000000008cdeec g     F .text	000000000000010c              allocate_dynamic
000000000061802d g     F .text	000000000000041c              mysql_stmt_get_longdata(THD*, char*, unsigned long)
0000000000607222  w    F .text	0000000000000030              Parser_state::init(THD*, char*, unsigned int)
000000000090b368 g     F .text	0000000000000abd              pfs_show_status(handlerton*, THD*, bool (*)(THD*, char const*, unsigned int, char const*, unsigned int, char const*, unsigned int), ha_stat_type)
000000000094f78a g     F .text	0000000000000229              mi_keyseg_write
0000000000b710b6  w    F .text	000000000000003a              ha_partition::set_part_info(partition_info*)
00000000008164ca  w    F .text	000000000000002b              Item_func_curdate::~Item_func_curdate()
000000000059b4c4  w    F .text	0000000000000058              List<st_lex_user>::delete_elements()
0000000000690cc6  w    F .text	000000000000001b              List_iterator_fast<Create_field>::List_iterator_fast()
0000000001081388  w    O .data.rel.ro	0000000000000048              vtable for in_decimal
000000000065b242  w    F .text	000000000000007b              JOIN::init_items_ref_array()
0000000000ba546d g     F .text	0000000000000025              my_xml_parser_create
0000000000000000       F *UND*	0000000000000000              pthread_join@@GLIBC_2.2.5
000000000082ca90  w    F .text	000000000000001d              TC_LOG::TC_LOG()
0000000000000000       F *UND*	0000000000000000              getuid@@GLIBC_2.2.5
00000000006589c4  w    F .text	000000000000001a              handler::ft_end()
00000000007bb016  w    F .text	000000000000004a              Item_func_is_free_lock::Item_func_is_free_lock(Item*)
0000000000770fac g     F .text	0000000000000075              ha_lock_engine(THD*, handlerton const*)
0000000000764ccc  w    F .text	000000000000004c              Field::pack_int32(unsigned char*, unsigned char const*, bool)
0000000000b637ea g     F .text	00000000000007f0              ha_partition::del_ren_cre_table(char const*, char const*, TABLE*, st_ha_create_information*)
000000000088baec g     F .text	0000000000000139              sp_rcontext::push_cursor(sp_lex_keeper*, sp_instr_cpush*)
00000000007098bc  w    F .text	0000000000000012              Sys_var_proxy_user::check_update_type(Item_result)
00000000008892da  w    F .text	0000000000000056              sp_instr_jump_if_not::~sp_instr_jump_if_not()
000000000067553b g     F .text	00000000000000ff              make_old_format(THD*, st_schema_table*)
000000000120c240 g     O .data	0000000000000101              ctype_koi8u_general_ci
000000000055963a  w    F .text	000000000000002b              Buffered_log::~Buffered_log()
00000000007bcf22  w    F .text	000000000000001d              Create_func::Create_func()
00000000007f35f0  w    F .text	000000000000002b              Item_func_database::~Item_func_database()
00000000007dc418  w    F .text	0000000000000046              Item_user_var_as_out_param::~Item_user_var_as_out_param()
000000000056888e g     F .text	00000000000000b3              Rpl_filter::add_do_db(char const*)
000000000136f040 g     O .bss	0000000000000070              LOCK_thread_created
00000000011560e0 g     O .data	00000000000000b0              my_charset_cp932_japanese_ci
0000000001370830 g     O .bss	0000000000000004              key_COND_server_started
000000000059ae6c  w    F .text	0000000000000026              List_iterator<LEX_COLUMN>::List_iterator(List<LEX_COLUMN>&)
000000000091110a g     F .text	0000000000000075              table_setup_consumers::table_setup_consumers()
0000000000000000       F *UND*	0000000000000000              send@@GLIBC_2.2.5
000000000081d69c g     F .text	000000000000041c              LOGGER::slow_log_print(THD*, char const*, unsigned int, unsigned long long)
00000000006984da  w    F .text	0000000000000044              Trigger_creation_ctx::Trigger_creation_ctx(THD*)
00000000007ae85a  w    F .text	0000000000000040              Item_func_gt::Item_func_gt(Item*, Item*)
000000000097f174 g     F .text	000000000000002f              ft_nlq_get_relevance
000000000087d363 g     F .text	00000000000002bf              sp_exist_routines(THD*, TABLE_LIST*, bool)
00000000007b40ac g     F .text	000000000000015e              Create_func_from_unixtime::create_native(THD*, st_mysql_lex_string, List<Item>*)
00000000008135b2 g     F .text	000000000000008e              Item_func_add_time::val_str(String*)
0000000000888e34  w    F .text	0000000000000029              Lex_input_stream::get_body_utf8_length()
000000000055fdaf g     F .text	00000000000000ad              my_rnd
00000000008db576 g     F .text	0000000000000cb3              my_b_vprintf
00000000012c94e0 g     O .data	00000000000000b0              my_charset_utf8_estonian_uca_ci
00000000007658e4  w    F .text	000000000000004d              Field_long::reset()
00000000007da6ca  w    F .text	0000000000000011              Item_decimal_typecast::func_name() const
00000000010c3330  w    O .data.rel.ro	0000000000000028              vtable for Lock_db_routines_error_handler
0000000000000000       F *UND*	0000000000000000              log10@@GLIBC_2.2.5
00000000007e0192 g     F .text	0000000000000132              Item_func_dimension::val_int()
0000000000677fae  w    F .text	000000000000000f              Item_blob::type() const
00000000006ed7e4  w    F .text	00000000000000d3              MYSQL_ERROR::~MYSQL_ERROR()
0000000000599b90  w    F .text	0000000000000012              ACL_PROXY_USER::get_with_grant()
00000000007bea28  w    F .text	0000000000000041              Create_func_des_decrypt::~Create_func_des_decrypt()
0000000001087630  w    O .data.rel.ro	0000000000000030              vtable for Create_func_least
00000000007c07dc  w    F .text	000000000000002d              Create_func_log10::Create_func_log10()
000000000059b238  w    F .text	0000000000000026              List<LEX_COLUMN>::concat(List<LEX_COLUMN>*)
0000000000918828 g     F .text	00000000000005ab              ft_get_word
00000000008d88b1 g     F .text	000000000000024e              init_io_cache_share
00000000006b3caf g     F .text	0000000000000166              append_unescaped(String*, char const*, unsigned int)
00000000007bff40  w    F .text	0000000000000041              Create_func_isclosed::~Create_func_isclosed()
0000000000567adc g     F .text	000000000000010b              Rpl_filter::~Rpl_filter()
00000000005590f8  w    F .text	000000000000001d              Comp_creator::Comp_creator()
0000000000659a3c  w    F .text	0000000000000014              Item_func::argument_count() const
00000000010b9b70  w    O .data.rel.ro	0000000000000398              vtable for Item_func_sec_to_time
00000000012caf80 g     O .data	00000000000000b0              my_charset_utf32_icelandic_uca_ci
00000000008184b8  w    F .text	000000000000002b              Item_func_dayofyear::~Item_func_dayofyear()
00000000006b9432 g     F .text	00000000000000e3              TABLE::prepare_for_position()
0000000000658cdc  w    F .text	0000000000000018              Field::real_maybe_null()
00000000007c00ae  w    F .text	0000000000000026              Create_func_isnull::~Create_func_isnull()
0000000000695dd0 g     F .text	0000000000000244              Table_triggers_list::get_trigger_info(THD*, trg_event_type, trg_action_time_type, st_mysql_lex_string*, st_mysql_lex_string*, unsigned long*, st_mysql_lex_string*, st_mysql_lex_string*, st_mysql_lex_string*, st_mysql_lex_string*)
0000000000958362 g     F .text	0000000000000465              mi_rprev
0000000000799f6a  w    F .text	000000000000001a              List<List<Item> >::pop()
00000000005c0805 g     F .text	0000000000000019              thd_set_killed(THD*)
0000000000b7422c g     F .text	0000000000000081              lf_alloc_init
000000000060714e  w    F .text	0000000000000021              LEX::pop_context()
00000000007f2670  w    F .text	0000000000000011              Item_func_collation::func_name() const
0000000000568de6 g     F .text	000000000000003e              Rpl_filter::get_do_table(String*)
00000000008c073a  w    F .text	000000000000006a              Item_xml_str_func::~Item_xml_str_func()
00000000006b8156 g     F .text	0000000000000062              Natural_join_column::name()
00000000007c9c36 g     F .text	0000000000000170              Item_func_neg::fix_length_and_dec()
00000000007c20e8  w    F .text	0000000000000026              Create_func_startpoint::~Create_func_startpoint()
000000000060f84c g     F .text	0000000000000167              plugin_thdvar_init(THD*)
000000000120a7c0 g     O .data	0000000000000200              to_uni_cp1251_bulgarian_ci
000000000090ffc6 g     F .text	0000000000000069              table_file_summary_by_event_name::table_file_summary_by_event_name()
00000000007a654e g     F .text	0000000000000077              in_string::in_string(unsigned int, int (*)(void const*, void const*, void const*), charset_info_st*)
00000000008740f0  w    F .text	000000000000001b              List<QUICK_SELECT_I>::List()
000000000073a618  w    F .text	0000000000000038              Item_date_func::Item_date_func(Item*)
0000000000898280 g     F .text	000000000000022b              field_ulonglong::get_opt_type(String*, unsigned long long)
0000000000876fce  w    F .text	0000000000000035              Item_proc_int::val_str(String*)
000000000080f97a g     F .text	0000000000000068              Item_func_now_local::store_now_in_TIME(st_mysql_time*)
00000000006f5cfa  w    F .text	000000000000002a              I_P_List_iterator<MDL_request, I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>, I_P_List_counter, I_P_List_no_push_back<MDL_request> >::I_P_List_iterator(I_P_List<MDL_request, I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>, I_P_List_counter, I_P_List_no_push_back<MDL_request> > const&)
00000000007e278e  w    F .text	0000000000000046              Item_func_geometry_from_text::~Item_func_geometry_from_text()
0000000000849146  w    F .text	0000000000000012              User_var_log_event::is_deferred()
00000000006789f6  w    F .text	0000000000000026              IS_internal_schema_access::~IS_internal_schema_access()
00000000012c3e80 g     O .data	0000000000000600              page0F9data
0000000000709554  w    F .text	00000000000000d0              Sys_var_charptr::global_update(THD*, set_var*)
00000000009587c7 g     F .text	0000000000000169              mi_rrnd
00000000006b1570 g     F .text	0000000000001058              open_table_from_share(THD*, TABLE_SHARE*, char const*, unsigned int, unsigned int, unsigned int, TABLE*, bool)
00000000007bb174  w    F .text	0000000000000040              Item_func_coalesce::Item_func_coalesce(Item*, Item*)
00000000010f0fa0 g     O .data	0000000000000004              myisam_storage_engine
00000000007be866  w    F .text	0000000000000041              Create_func_dayofyear::~Create_func_dayofyear()
00000000008878a4 g     F .text	00000000000000e6              sp_instr_copen::print(String*)
00000000007f2ca2  w    F .text	000000000000002b              Item_func_export_set::~Item_func_export_set()
00000000008d53f1 g     F .text	000000000000004c              my_MD5Init
00000000007795ca g     F .text	0000000000000261              handler::read_multi_range_next(st_key_multi_range**)
000000000090e262  w    F .text	0000000000000041              table_events_waits_current::~table_events_waits_current()
000000000106b038  w    O .data.rel.ro	0000000000000358              vtable for Item_null_result
000000000077bdf8  w    F .text	0000000000000018              handler::final_add_index(handler_add_index*, bool)
00000000007b48ea g     F .text	000000000000007e              Create_func_is_free_lock::create(THD*, Item*)
00000000010f6558 g     O .data	0000000000000001              _dbug_on_
000000000062f18e g     F .text	00000000000004dc              mysql_select(THD*, Item***, TABLE_LIST*, unsigned int, List<Item>&, Item*, unsigned int, st_order*, st_order*, Item*, st_order*, unsigned long long, select_result*, st_select_lex_unit*, st_select_lex*)
00000000007c136e  w    F .text	0000000000000026              Create_func_period_diff::~Create_func_period_diff()
0000000000559a3a  w    F .text	0000000000000026              I_List<i_string_pair>::move_elements_to(I_List<i_string_pair>*)
00000000006eaaf5  w    F .text	0000000000000027              check_result(unsigned int, int)
00000000007bed7e  w    F .text	000000000000002d              Create_func_encrypt::Create_func_encrypt()
000000000078e15a g     F .text	000000000000058b              Item::send(Protocol*, String*)
0000000000797994  w    F .text	0000000000000039              Item_ref::result_type() const
000000000070e75e  w    F .text	0000000000000026              Sys_var_struct::~Sys_var_struct()
000000000092065c  w    F .text	000000000000002b              ha_myisam::~ha_myisam()
00000000008090c6  w    F .text	000000000000000f              Item_variance_field::type() const
00000000012be880 g     O .data	0000000000000600              page02Edata
00000000013868f0 g     O .bss	0000000000000008              uuid_value
0000000000815968  w    F .text	0000000000000061              Item_func_month::val_str(String*)
000000000077bcee  w    F .text	000000000000000f              handler::get_foreign_key_create_info()
00000000006042bf g     F .text	0000000000000095              add_join_on(TABLE_LIST*, Item*)
0000000000757850 g     F .text	000000000000002e              Field_datetime::sql_type(String&) const
00000000005651be  w    F .text	0000000000000046              Diagnostics_area::get_sqlstate() const
0000000000583b36 g     F .text	00000000000000b5              GRANT_TABLE::GRANT_TABLE(char const*, char const*, char const*, char const*, unsigned long, unsigned long)
00000000008cc1f0 g     F .text	000000000000021f              Truncate_statement::handler_truncate(THD*, TABLE_LIST*, bool)
00000000008c250a  w    F .text	000000000000002b              Item_func_xpath_sum::~Item_func_xpath_sum()
00000000005c096e g     F .text	0000000000000130              thd_new_connection_setup(THD*, char*)
00000000007db6a8  w    F .text	000000000000003c              Item_func_get_user_var::used_tables() const
000000000088ac1e g     F .text	00000000000000ed              sp_pcontext::find_handler(sp_cond_type*)
0000000000812f8a g     F .text	00000000000001b6              Item_func_makedate::val_int()
00000000007d560a g     F .text	0000000000000051              Item_func_get_system_var::update_null_value()
000000000106fb90  w    O .data.rel.ro	0000000000000298              vtable for Field_geom
000000000061ad96 g     F .text	00000000000000ba              Ed_connection::free_old_result()
00000000008e9d49 g     F .text	0000000000000034              strdup_root
0000000000950222 g     F .text	0000000000000089              mi_indexes_are_disabled
00000000007c006c  w    F .text	0000000000000041              Create_func_isnull::~Create_func_isnull()
000000000073797e  w    F .text	000000000000006e              Item_ref::Item_ref(Name_resolution_context*, char const*, char const*, char const*)
00000000007ae590  w    F .text	0000000000000046              Item_func_not::~Item_func_not()
00000000008a9076  w    F .text	000000000000001b              List<XML_TAG>::~List()
000000000090ea56 g     F .text	0000000000000046              table_events_waits_summary_by_thread_by_event_name::make_mutex_row(PFS_thread*, PFS_mutex_class*)
0000000000913234  w    F .text	0000000000000026              table_mutex_instances::~table_mutex_instances()
00000000006913aa g     F .text	00000000000002ea              TEST_filesort(st_sort_field*, unsigned int)
00000000006f3aa9 g     F .text	0000000000000043              mdl_request_ptr_cmp
00000000007a21e8 g     F .text	0000000000000132              Item_func_between::fix_fields(THD*, Item**)
0000000000738c72  w    F .text	000000000000009d              Arg_comparator::Arg_comparator()
00000000008c25ba  w    F .text	0000000000000058              Item_func_xpath_position::~Item_func_xpath_position()
00000000005cec30  w    F .text	00000000000000b7              Query_tables_list::set_stmt_unsafe(Query_tables_list::enum_binlog_stmt_unsafe)
000000000079a830  w    F .text	0000000000000046              Item_copy_float::~Item_copy_float()
00000000005e8da4  w    F .text	0000000000000066              delayed_row::~delayed_row()
00000000010ca668  w    O .data.rel.ro	0000000000000048              vtable for table_mutex_instances
0000000000b97e05 g     F .text	00000000000009dc              decimal_round
00000000007bf8ce  w    F .text	0000000000000041              Create_func_glength::~Create_func_glength()
00000000007bd222  w    F .text	0000000000000041              Create_func_arg1::~Create_func_arg1()
00000000005dc89c  w    F .text	000000000000001e              MDL_context::set_needs_thr_lock_abort(bool)
00000000007ad462 g     F .text	000000000000017c              Item_equal::update_used_tables()
000000000084ecc6 g     F .text	000000000000033e              Old_rows_log_event::do_add_row_data(unsigned char*, unsigned long)
0000000000986118 g     F .text	000000000000008f              heap_release_share
000000000082d3f6  w    F .text	000000000000002b              Xid_log_event::~Xid_log_event()
000000000070ec3e  w    F .text	0000000000000026              Sys_var_lexstring::~Sys_var_lexstring()
000000000065bf9a  w    F .text	0000000000000026              I_List<COND_CMP>::move_elements_to(I_List<COND_CMP>*)
00000000006ba98c  w    F .text	000000000000000b              I_P_List_null_counter::reset()
0000000000709922  w    F .text	0000000000000041              Sys_var_proxy_user::~Sys_var_proxy_user()
000000000059ae2c  w    F .text	0000000000000012              Silence_routine_definer_errors::has_errors()
0000000000858b14 g     F .text	0000000000000068              QUICK_RANGE::QUICK_RANGE()
0000000000642454 g     F .text	0000000000000134              setup_tmp_table_column_bitmaps(TABLE*, unsigned char*)
000000000082d994  w    F .text	000000000000001e              binlog_cache_data::set_prev_position(unsigned long long)
00000000006ec548 g     F .text	000000000000002b              Set_signal_information::Set_signal_information(Set_signal_information const&)
00000000007b98aa  w    F .text	0000000000000056              Item_udf_sum::Item_udf_sum(st_udf_func*)
0000000000ba5af3 g     F .text	000000000000004c              vio_reset
0000000000569146  w    F .text	000000000000002b              i_string_pair::~i_string_pair()
000000000084544c g     F .text	00000000000002d0              Table_map_log_event::write_data_body(st_io_cache*)
00000000006bd4ab g     F .text	00000000000005f0              date_add_interval(st_mysql_time*, interval_type, INTERVAL)
00000000007f1eba  w    F .text	0000000000000011              Item_func_database::fully_qualified_func_name() const
000000000075a604 g     F .text	000000000000011f              Field_varstring::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
000000000087ea9e  w    F .text	0000000000000041              Proc_table_intact::~Proc_table_intact()
0000000000899aa8  w    F .text	000000000000000f              field_info::decimals()
00000000007be992  w    F .text	0000000000000041              Create_func_degrees::~Create_func_degrees()
0000000001372018 g     O .bss	0000000000000008              unused_tables
0000000000810ada g     F .text	0000000000000278              Item_func_convert_tz::get_date(st_mysql_time*, unsigned int)
0000000000912dc6 g     F .text	0000000000000071              table_cond_instances::table_cond_instances()
0000000001386500 g     O .bss	0000000000000008              Create_func_geometry_from_wkb::s_singleton
0000000000000000       F *UND*	0000000000000000              difftime@@GLIBC_2.2.5
0000000000912d9e g     F .text	0000000000000028              table_cond_instances::create()
00000000007ba0e2  w    F .text	0000000000000038              Item_func_log2::Item_func_log2(Item*)
0000000000710ed9 g     F .text	00000000000001dc              handle_sql2003_note184_exception(THD*, Item*, bool, Item*)
000000000080a3f6  w    F .text	0000000000000046              Item_sum_udf_decimal::~Item_sum_udf_decimal()
000000000090e122  w    F .text	0000000000000025              pos_events_waits_current::pos_events_waits_current()
00000000012b4880 g     O .data	0000000000000600              page010data
0000000000599180  w    F .text	000000000000002d              DML_prelocking_strategy::DML_prelocking_strategy()
00000000007dd2f2  w    F .text	000000000000002b              Item_func_cot::~Item_func_cot()
00000000009900ca g     F .text	000000000000055c              myrg_parent_open
00000000005d0b86  w    F .text	0000000000000070              List<Alter_column>::delete_elements()
0000000000816bf4  w    F .text	0000000000000011              Item_time_typecast::func_name() const
00000000007c0e7c  w    F .text	0000000000000041              Create_func_nullif::~Create_func_nullif()
000000000097ff8b g     F .text	0000000000000129              _mi_ft_del
0000000000777792 g     F .text	000000000000003b              handler::ha_disable_indexes(unsigned int)
0000000000799e3c  w    F .text	0000000000000026              List_iterator_fast<Item_field>::init(List<Item_field>&)
0000000000b79079 g     F .text	000000000000003a              _db_pargs_
00000000005e64fa g     F .text	000000000000009a              select_insert::store_values(List<Item>&)
00000000006bad7c  w    F .text	000000000000004b              Item_direct_view_ref::Item_direct_view_ref(TABLE_LIST*, Item**, char const*)
000000000094f48b g     F .text	000000000000018e              mi_keydef_write
00000000006078c8  w    F .text	0000000000000255              Security_context::Security_context(Security_context const&)
0000000000981ac4 g     F .text	0000000000000125              ha_heap::info(unsigned int)
0000000000559531  w    F .text	000000000000001a              is_supported_parser_charset(charset_info_st*)
00000000007cc570 g     F .text	000000000000003e              Item_func_rand::update_used_tables()
000000000087eb06  w    F .text	0000000000000052              Stored_routine_creation_ctx::~Stored_routine_creation_ctx()
000000000059af18  w    F .text	0000000000000025              List_iterator<LEX_COLUMN>::replace(List<LEX_COLUMN>&)
00000000005640a0 g     F .text	0000000000000054              Protocol_binary::prepare_for_send(unsigned int)
0000000000768334  w    F .text	0000000000000046              Field_longlong::~Field_longlong()
00000000005aff7a  w    F .text	000000000000002d              Query_arena::Query_arena()
00000000013866a0 g     O .bss	0000000000000008              Create_func_pow::s_singleton
000000000098dfac g     F .text	00000000000000b7              ha_myisammrg::truncate()
00000000005cf85c  w    F .text	000000000000004c              Ha_data::Ha_data()
00000000007f37ca  w    F .text	000000000000002b              Item_func_password::~Item_func_password()
000000000077df30 g     F .text	0000000000000031              Hybrid_type_traits_decimal::set_zero(Hybrid_type*) const
0000000000b61146 g     F .text	0000000000000082              ha_partition::optimize(THD*, st_ha_check_opt*)
0000000000872df0  w    F .text	0000000000000031              SEL_ARG::simple_key()
0000000000816a26  w    F .text	0000000000000011              Item_char_typecast::cast_type() const
00000000007af3d6  w    F .text	000000000000002b              cmp_item_string::~cmp_item_string()
000000000070bd04  w    F .text	0000000000000022              Sys_var_debug_sync::session_value_ptr(THD*, st_mysql_lex_string*)
00000000007dd6ae  w    F .text	0000000000000046              Item_func_exp::~Item_func_exp()
00000000005f0a22  w    F .text	0000000000000048              Create_field::clone(st_mem_root*) const
0000000000605387 g     F .text	00000000000001b4              multi_delete_set_locks_and_link_aux_tables(LEX*)
00000000006a3c02 g     F .text	000000000000002e              multi_update::send_error(unsigned int, char const*)
0000000000784c08 g     F .text	00000000000000c3              Item_decimal::Item_decimal(double, int, int)
00000000010c14e0  w    O .data.rel.ro	0000000000000078              vtable for Execute_load_log_event
00000000009a8066  w    F .text	000000000000002f              st_foreign_key_info::~st_foreign_key_info()
00000000006f566e  w    F .text	0000000000000011              MDL_scoped_lock::incompatible_granted_types_bitmap() const
0000000000598a68  w    F .text	0000000000000035              Table_check_intact::~Table_check_intact()
00000000008b0bbf g     F .text	0000000000000065              get_partition_id_key_sub(partition_info*, unsigned int*)
000000000070bdf0  w    F .text	0000000000000174              Sys_var_bit::Sys_var_bit(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, char, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
0000000001370868 g     O .bss	0000000000000004              key_user_level_lock_cond
0000000000820e36 g     F .text	00000000000000f9              MYSQL_LOG::generate_new_name(char*, char const*)
000000000081831c  w    F .text	0000000000000046              Item_func_monthname::~Item_func_monthname()
000000000098f06c  w    F .text	000000000000001b              List<Mrg_child_def>::~List()
0000000001370790 g     O .bss	0000000000000004              key_LOCK_rpl_status
00000000007bafde  w    F .text	0000000000000038              Item_func_inet_aton::Item_func_inet_aton(Item*)
00000000006f0a78  w    F .text	000000000000001b              Binlog_transmit_delegate::~Binlog_transmit_delegate()
0000000000982a28 g     F .text	00000000000002e1              heap_delete
000000000136f018 g     O .bss	0000000000000004              have_crypt
0000000000606d4e  w    F .text	000000000000000f              Item_int_func::result_type() const
00000000007c9eb4 g     F .text	00000000000000e9              Item_func_abs::decimal_op(my_decimal*)
00000000005d1c28  w    F .text	000000000000002b              Item_change_record::~Item_change_record()
0000000001087990  w    O .data.rel.ro	0000000000000030              vtable for Create_func_glength
0000000001375960 g     O .bss	0000000000000060              my_locale_en_AU
0000000000889e26  w    F .text	000000000000001b              List<sp_instr>::List()
00000000005b673a g     F .text	0000000000000139              Query_cache::pack(unsigned long, unsigned int)
00000000007c7aa4 g     F .text	0000000000000053              Item_func_minus::fix_length_and_dec()
0000000000626c70  w    F .text	000000000000002d              MYSQL_BIN_LOG::lock_index()
00000000008a58d6 g     F .text	0000000000000077              READ_INFO::unescape(char)
00000000005b104c  w    F .text	000000000000001d              List_iterator<Item_func_set_user_var>::operator++(int)
000000000136cc52 g     O .bss	0000000000000001              mqh_used
00000000008d0032 g     F .text	0000000000000134              get_charset
0000000000909179 g     F .text	00000000000001a4              register_cond_class(char const*, unsigned int, int)
000000000079b1c2 g     F .text	0000000000000046              Cached_item::~Cached_item()
0000000000750300 g     F .text	00000000000000f6              Field_long::cmp(unsigned char const*, unsigned char const*)
0000000000748bfa g     F .text	0000000000000130              Field::val_int_as_str(String*, char)
000000000090a78c g     F .text	0000000000000053              shutdown_performance_schema()
000000000077bf00  w    F .text	000000000000002d              handler::register_query_cache_table(THD*, char*, unsigned int, char (**)(THD*, char*, unsigned int, unsigned long long*), unsigned long long*)
00000000007e1a54  w    F .text	0000000000000013              Item_func_isempty::fix_length_and_dec()
0000000001217940 g     O .data	0000000000000100              to_upper_dec8_bin
0000000000658ca6  w    F .text	0000000000000035              Field::maybe_null()
0000000000b598e6 g     F .text	0000000000000047              sort_set(tina_set*, tina_set*)
0000000000764f62  w    F .text	000000000000001b              Field_str::set_charset(charset_info_st*)
00000000007bfeaa  w    F .text	0000000000000041              Create_func_is_used_lock::~Create_func_is_used_lock()
000000000085535c g     F .text	0000000000000020              year_2000_handling
000000000097dac1 g     F .text	0000000000000052              ft_boolean_close_search
00000000010cd8e0 g     O .data	0000000000000004              mysql_data_home_len
000000000086b422 g     F .text	000000000000005d              QUICK_RANGE_SELECT::add_info_string(String*)
0000000000739ac0  w    F .text	0000000000000069              Item_func_replace::Item_func_replace(Item*, Item*, Item*)
0000000000559942  w    F .text	000000000000001b              I_List<i_string_pair>::I_List()
00000000007c17dc  w    F .text	0000000000000041              Create_func_reverse::~Create_func_reverse()
0000000000797172  w    F .text	0000000000000014              Item_param::type() const
00000000006a4e28  w    F .text	0000000000000080              SQL_SELECT::check_quick(THD*, bool, unsigned long long)
0000000000567288  w    F .text	000000000000000f              Item_int::result_type() const
00000000006babe2  w    F .text	000000000000000f              Field_iterator_view::field()
0000000000772ef9 g     F .text	00000000000001cf              ha_commit_one_phase(THD*, bool)
000000000055c822 g     F .text	000000000000014a              mysql_client_plugin_init
00000000007b131c  w    F .text	0000000000000046              Item_func_lt::~Item_func_lt()
0000000001373d40 g     O .bss	0000000000000008              Events::opt_event_scheduler
0000000000873842  w    F .text	00000000000000ac              QUICK_SELECT_I::QUICK_SELECT_I(QUICK_SELECT_I const&)
00000000008174f4  w    F .text	0000000000000046              Item_func_timediff::~Item_func_timediff()
000000000060702e  w    F .text	000000000000004a              Item_func_unix_timestamp::Item_func_unix_timestamp(Item*)
0000000000569672 g     F .text	00000000000001e2              sys_var::sys_var(sys_var_chain*, char const*, char const*, int, long, int, get_opt_arg_type, enum_mysql_show_type, long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000007da7e6  w    F .text	0000000000000011              Item_func_minus::func_name() const
000000000087ea36  w    F .text	0000000000000041              Silence_deprecated_warning::~Silence_deprecated_warning()
00000000007597ce g     F .text	000000000000022c              Field_varstring::val_real()
00000000005cf986  w    F .text	000000000000002a              THD::trans_alloc(unsigned int)
0000000000767dca  w    F .text	0000000000000058              Field_set::~Field_set()
00000000008c242e  w    F .text	0000000000000058              Item_nodeset_to_const_comparator::~Item_nodeset_to_const_comparator()
000000000056524c  w    F .text	0000000000000047              Diagnostics_area::last_insert_id() const
00000000007c304a  w    F .text	000000000000002d              Create_func_year_week::Create_func_year_week()
000000000138cbf8 g     O .bss	0000000000000008              rwlock_lost
0000000001209b80 g     O .data	0000000000000200              to_uni_swe7_swedish_ci
000000000090f06c g     F .text	0000000000000206              table_events_waits_summary_by_instance::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000007385dc  w    F .text	0000000000000040              Item_func_minus::Item_func_minus(Item*, Item*)
0000000000766f1e  w    F .text	000000000000002b              Field_blob::reset_fields()
000000000065c468  w    F .text	0000000000000025              List<Item_field>::push_back(Item_field*)
00000000007772fa g     F .text	00000000000000c9              handler::rename_table(char const*, char const*)
00000000007674ba  w    F .text	000000000000000f              Field_set::has_charset() const
0000000000873eda  w    F .text	000000000000001d              List_iterator_fast<QUICK_RANGE_SELECT>::operator++(int)
000000000138e2f0 g     O .bss	0000000000000001              events_waits_history_long_full
0000000000784a7c g     F .text	00000000000000d0              Item_decimal::Item_decimal(char const*, unsigned int, charset_info_st*)
000000000069dd34 g     F .text	0000000000000057              records_are_comparable(TABLE const*)
0000000000564792 g     F .text	00000000000001b4              Protocol_binary::store(st_mysql_time*)
00000000008c26b0  w    F .text	0000000000000046              Item_xpath_cast_number::~Item_xpath_cast_number()
00000000007f3f8e  w    F .text	0000000000000046              Item_func_aes_decrypt::~Item_func_aes_decrypt()
000000000086ec14 g     F .text	0000000000000419              QUICK_GROUP_MIN_MAX_SELECT::init()
000000000073aa92  w    F .text	000000000000002d              Item_func_curdate_utc::Item_func_curdate_utc()
000000000136ccf8 g     O .bss	0000000000000008              max_binlog_size
00000000007bbfec  w    F .text	000000000000005b              Item_func_export_set::Item_func_export_set(Item*, Item*, Item*, Item*, Item*)
0000000000688a37 g     F .text	0000000000000eec              mysql_compare_tables(TABLE*, Alter_info*, st_ha_create_information*, unsigned int, enum_alter_table_change_level*, st_key**, unsigned int**, unsigned int*, unsigned int**, unsigned int*, unsigned int*)
0000000000872064  w    F .text	000000000000000f              QUICK_ROR_INTERSECT_SELECT::reverse_sorted()
0000000001370884 g     O .bss	0000000000000004              key_thread_handle_manager
0000000000600fb6 g     F .text	00000000000000d4              check_some_routine_access(THD*, char const*, char const*, bool)
0000000000816e68  w    F .text	000000000000002a              Item_datetime_typecast::save_in_field(Field*, bool)
000000000087e89e  w    F .text	000000000000004d              Lock_db_routines_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
00000000008153de  w    F .text	0000000000000135              Item_func::has_date_args()
00000000005b110a  w    F .text	000000000000001b              List_iterator<Item_func_match>::rewind()
00000000006b8d98 g     F .text	00000000000000bf              Field_iterator_table_ref::get_table_name()
00000000009181ac g     F .text	000000000000016c              table_all_instr_class::rnd_pos(void const*)
000000000121a540 g     O .data	0000000000000101              ctype_latin7_bin
00000000007fd952 g     F .text	00000000000000a0              Item_sum::fix_num_length_and_dec()
00000000006bf5bc g     F .text	000000000000002b              Time_zone_utc::get_name() const
00000000010ec4a0 g     O .data	0000000000000050              ha_row_type
00000000008c084c  w    F .text	0000000000000011              Item_func_xml_update::func_name() const
00000000008110a6 g     F .text	0000000000000150              Item_date_add_interval::val_int()
00000000008319b0 g     F .text	00000000000000b8              Log_event::Log_event(THD*, unsigned short, bool)
00000000007dda3e  w    F .text	0000000000000046              Item_func_int_div::~Item_func_int_div()
00000000007a8a78 g     F .text	00000000000003cd              Item_func_in::val_int()
0000000000797186  w    F .text	0000000000000014              Item_param::field_type() const
0000000000982898  w    F .text	000000000000000f              ha_heap::get_row_type() const
0000000000893dcf g     F .text	0000000000000029              compare_longlong2(void*, long long const*, long long const*)
00000000007a68e2 g     F .text	00000000000000e1              in_row::~in_row()
00000000007fc704  w    F .text	0000000000000038              select_singlerow_subselect::select_singlerow_subselect(Item_subselect*)
000000000061ba8e g     F .text	0000000000000032              Protocol_local::store(double, unsigned int, String*)
0000000001370758 g     O .bss	0000000000000004              key_BINLOG_LOCK_prep_xids
00000000005b376a g     F .text	000000000000003f              mysql_query_cache_invalidate4
00000000012073c0 g     O .data	0000000000000100              to_lower_dec8_swedish_ci
000000000077fd82 g     F .text	00000000000002ec              Item_num::safe_charset_converter(charset_info_st*)
000000000088935c  w    F .text	0000000000000019              sp_instr_jump_if_not::opt_shortcut_jump(sp_head*, sp_instr*)
0000000000826e75 g     F .text	000000000000003d              ending_single_stmt_trans(THD*, bool)
00000000006e88c6 g     F .text	000000000000000b              thd_scheduler::~thd_scheduler()
00000000005ce86e  w    F .text	000000000000004c              Foreign_key::clone(st_mem_root*) const
000000000120c360 g     O .data	0000000000000100              to_lower_koi8u_general_ci
00000000005ea046 g     F .text	000000000000002a              st_parsing_options::reset()
00000000008a594e g     F .text	000000000000045e              READ_INFO::READ_INFO(int, unsigned int, charset_info_st*, String&, String&, String&, String&, int, bool, bool)
000000000084ff06 g     F .text	0000000000000061              Old_rows_log_event::do_shall_skip(Relay_log_info*)
0000000000737544  w    F .text	00000000000000e5              st_alter_tablespace::st_alter_tablespace()
00000000006bb701 g     F .text	00000000000000c2              sql_alloc_error_handler
0000000000931855 g     F .text	000000000000011f              update_key_parts
00000000007f32c8  w    F .text	0000000000000046              Item_func_char::~Item_func_char()
0000000000798a14  w    F .text	000000000000000f              Item_copy::used_tables() const
000000000057a75c  w    F .text	0000000000000046              Relay_log_info::is_in_group() const
0000000001087570  w    O .data.rel.ro	0000000000000030              vtable for Create_func_ln
00000000007fb3fa g     F .text	000000000000005d              subselect_uniquesubquery_engine::~subselect_uniquesubquery_engine()
000000000065b9ee  w    F .text	0000000000000011              store_key_const_item::name() const
000000000138c990 g     O .bss	0000000000000004              my_have_got_alarm
0000000000888d82  w    F .text	0000000000000015              MDL_key::db_name_length() const
00000000007ad774 g     F .text	000000000000005c              Item_equal::fix_length_and_dec()
00000000010c4290  w    O .data.rel.ro	00000000000000d0              vtable for Geometry
0000000000603de2 g     F .text	00000000000000e0              st_select_lex::convert_right_join()
000000000076a8cf g     F .text	0000000000000927              field_conv(Field*, Field*)
00000000007525a6 g     F .text	0000000000000038              Field_double::do_save_field_metadata(unsigned char*)
000000000055fc62  w    F .text	000000000000001d              List_iterator_fast<st_mysql_lex_string>::operator++(int)
00000000008f49e6 g     F .text	000000000000013b              my_readlink
0000000000796438  w    F .text	0000000000000018              DTCollation::set(Derivation)
00000000007af352  w    F .text	000000000000003d              cmp_item_string::cmp_item_string(charset_info_st*)
0000000000738036  w    F .text	000000000000003d              Item_sum_xor::Item_sum_xor(Item*)
00000000006bb3a8  w    F .text	0000000000000029              I_P_List_iterator<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> >::I_P_List_iterator(I_P_List<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> > const&)
000000000077f91a g     F .text	0000000000000081              Item_field::find_item_in_field_list_processor(unsigned char*)
00000000007ddb22  w    F .text	0000000000000046              Item_func_mul::~Item_func_mul()
00000000007fb96a g     F .text	0000000000000036              subselect_single_select_engine::exclude()
000000000082de18  w    F .text	0000000000000026              TC_LOG_DUMMY::~TC_LOG_DUMMY()
000000000080e0c8 g     F .text	0000000000000074              Item_func_hour::val_int()
0000000000889ec6  w    F .text	0000000000000025              List<sp_instr>::push_back(sp_instr*)
000000000057a8ba  w    F .text	0000000000000013              Log_event::write_data_header(st_io_cache*)
00000000007fc88c  w    F .text	0000000000000046              Item_in_subselect::~Item_in_subselect()
0000000000797004  w    F .text	0000000000000035              Item_field::max_disp_length()
0000000000ba0e10 g     F .text	000000000000003a              is_prefix
0000000000766320  w    F .text	000000000000000f              Field_date::repertoire() const
0000000001386720 g     O .bss	0000000000000008              Create_func_soundex::s_singleton
0000000000800e46 g     F .text	0000000000000070              Item_sum_count::val_int()
0000000000558708  w    F .text	000000000000003a              list_node::list_node(void*, list_node*)
00000000007bc5a8  w    F .text	000000000000004a              Item_func_dimension::Item_func_dimension(Item*)
000000000070bd5a  w    F .text	0000000000000014              Sys_var_debug_sync::check_update_type(Item_result)
0000000000000000       F *UND*	0000000000000000              getcwd@@GLIBC_2.2.5
000000000090fc3c g     F .text	00000000000000eb              table_file_instances::make_row(PFS_file*)
00000000005992ee  w    F .text	0000000000000059              hash_filo::~hash_filo()
00000000005d0250  w    F .text	0000000000000025              List_iterator<Key>::replace(Key*)
00000000006129e4  w    F .text	0000000000000035              sys_var::~sys_var()
00000000008f2bbb g     F .text	00000000000001b8              my_realloc
00000000007ba86a  w    F .text	0000000000000049              Item_func_bit_length::val_int()
00000000007e260c  w    F .text	000000000000002b              Item_func_geometry_type::~Item_func_geometry_type()
000000000059afb6  w    F .text	0000000000000026              List_iterator<st_lex_user>::List_iterator(List<st_lex_user>&)
00000000013740a0 g     O .bss	0000000000000060              my_locale_cs_CZ
00000000005d03d8  w    F .text	0000000000000025              List<Key_part_spec>::push_front(Key_part_spec*)
00000000005dc872  w    F .text	000000000000001e              MDL_request::operator=(MDL_request const&)
00000000005ae37e g     F .text	000000000000012e              setup_ftfuncs(st_select_lex*)
000000000090c946 g     F .text	000000000000004b              table_events_waits_common::table_events_waits_common(PFS_engine_table_share const*, void*)
00000000008979c0 g     F .text	000000000000059c              field_real::get_opt_type(String*, unsigned long long)
000000000076551c  w    F .text	000000000000007a              Field_short::Field_short(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, bool, bool)
00000000008a0d18 g     F .text	0000000000000d12              mysqld_help(THD*, char const*)
00000000005cf434  w    F .text	0000000000000026              LEX::~LEX()
000000000065a2f6  w    F .text	000000000000002d              Item_equal_iterator::Item_equal_iterator(Item_equal&)
0000000001386728 g     O .bss	0000000000000008              Create_func_space::s_singleton
0000000000678a7a  w    F .text	0000000000000026              List_iterator_fast<st_foreign_key_info>::List_iterator_fast(List<st_foreign_key_info>&)
0000000000612be2  w    F .text	0000000000000013              sys_var_pluginvar::global_save_default(THD*, set_var*)
000000000107d6f8  w    O .data.rel.ro	0000000000000068              vtable for Hybrid_type_traits_decimal
0000000000ba761b g     F .text	00000000000000f1              vio_ssl_close
000000000136cdf0 g     O .bss	0000000000000008              max_connections
00000000007aa8ba g     F .text	000000000000012a              Item_func_like::select_optimize() const
000000000089adf4  w    F .text	000000000000002b              field_decimal::~field_decimal()
00000000007dc724  w    F .text	0000000000000058              Item_func_release_lock::~Item_func_release_lock()
000000000056574e  w    F .text	0000000000000026              List_iterator_fast<Item>::List_iterator_fast(List<Item>&)
00000000007a6e14 g     F .text	0000000000000053              in_double::get_value(Item*)
00000000005d0c1c  w    F .text	000000000000001b              List_iterator<Alter_column>::List_iterator()
0000000000000000       F *UND*	0000000000000000              strncpy@@GLIBC_2.2.5
0000000000816a7e  w    F .text	000000000000002b              Item_typecast_maybe_null::~Item_typecast_maybe_null()
0000000000899936  w    F .text	0000000000000026              Procedure::~Procedure()
000000000093e1a8 g     F .text	0000000000000555              _mi_rec_pack
0000000000809576  w    F .text	0000000000000046              Item_sum_hybrid::~Item_sum_hybrid()
000000000077bed0  w    F .text	000000000000000f              handler::auto_repair() const
000000000090f316  w    F .text	000000000000000b              PFS_instrument_view_constants::PFS_instrument_view_constants()
0000000000795e6e  w    F .text	0000000000000019              my_decimal::precision() const
00000000007d64be g     F .text	000000000000048c              Item_func_get_system_var::val_str(String*)
0000000000ba5b3f g     F .text	0000000000000142              vio_new
00000000008163ce  w    F .text	0000000000000046              Item_date::~Item_date()
00000000005f0830  w    F .text	00000000000001f2              Create_field::Create_field(Create_field const&)
00000000007c05b2  w    F .text	0000000000000041              Create_func_ln::~Create_func_ln()
0000000000814548 g     F .text	00000000000001b5              Item_func_get_format::val_str_ascii(String*)
0000000000765f62  w    F .text	000000000000000f              Field_timestamp::key_type() const
00000000008b10c7 g     F .text	000000000000017c              get_full_part_id_from_key(TABLE const*, unsigned char*, st_key*, st_key_range const*, part_id_range*)
000000000070dfec  w    F .text	0000000000000026              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::global_save_default(THD*, set_var*)
000000000088b73c g     F .text	00000000000003b0              sp_rcontext::find_handler(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*)
000000000062685c g     F .text	0000000000000354              log_loaded_block(st_io_cache*)
00000000008891f6  w    F .text	0000000000000046              sp_instr_jump::~sp_instr_jump()
000000000076549c  w    F .text	000000000000000f              Field_tiny::pack_length() const
00000000008c27ec  w    F .text	000000000000002b              Item_bool::~Item_bool()
0000000000802cca g     F .text	00000000000000da              Item_sum_num::reset_field()
0000000000922a62 g     F .text	00000000000004f8              chk_size
00000000006babf2  w    F .text	0000000000000012              Field_iterator_view::field_translator()
00000000006518ea g     F .text	000000000000016c              JOIN::alloc_func_list()
000000000069b0a8 g     F .text	0000000000000091              select_union::flush()
000000000081b80c g     F .text	0000000000000093              purge_log_get_error_code(int)
00000000006a4d40  w    F .text	000000000000007a              Field_string::Field_string(unsigned int, bool, char const*, charset_info_st*)
000000000064bd45 g     F .text	000000000000019b              find_shortest_key(TABLE*, Bitmap<64u> const*)
00000000007c2eb6  w    F .text	0000000000000041              Create_func_xml_extractvalue::~Create_func_xml_extractvalue()
0000000000739800  w    F .text	0000000000000040              Item_cond_xor::Item_cond_xor(Item*, Item*)
0000000000b5e322 g     F .text	0000000000000012              Transparent_file::ptr()
0000000000831649 g     F .text	00000000000001ed              append_query_string(THD*, charset_info_st*, String const*, String*)
00000000005b131c  w    F .text	0000000000000026              Repair_mrg_table_error_handler::~Repair_mrg_table_error_handler()
0000000000659c04  w    F .text	0000000000000040              Item_func_rollup_const::val_str(String*)
0000000000699103 g     F .text	0000000000000033              get_hash_key
00000000008c985e g     F .text	0000000000000246              Event_db_repository::drop_event(THD*, st_mysql_lex_string, st_mysql_lex_string, bool)
0000000000986f2b g     F .text	00000000000001bc              heap_rlast
00000000006f333c g     F .text	0000000000000104              MDL_object_lock::notify_conflicting_locks(MDL_context*)
00000000007da6ae  w    F .text	000000000000000f              Item_decimal_typecast::field_type() const
0000000000931a7d g     F .text	0000000000000119              mi_disable_non_unique_index
000000000073a0fc  w    F .text	0000000000000052              Item_func_repeat::Item_func_repeat(Item*, Item*)
000000000075ca2c g     F .text	000000000000018e              Field_geom::sql_type(String&) const
0000000001375e40 g     O .bss	0000000000000060              my_locale_es_DO
000000000138e2e8 g     O .bss	0000000000000008              events_waits_history_long_size
00000000007ad10a g     F .text	0000000000000120              Item_equal::sort(int (*)(Item_field*, Item_field*, void*), void*)
00000000007f1c92  w    F .text	0000000000000045              Item_func_des_decrypt::fix_length_and_dec()
00000000006f5d68  w    F .text	0000000000000096              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >::remove(MDL_ticket*)
00000000007b27a0 g     F .text	0000000000000050              Create_func_as_wkt::create(THD*, Item*)
00000000006e3c5a g     F .text	00000000000001b9              alter_server(THD*, st_lex_server_options*)
000000000082d5f2  w    F .text	0000000000000035              Silence_log_table_errors::Silence_log_table_errors()
000000000065a642  w    F .text	0000000000000071              subselect_indexsubquery_engine::subselect_indexsubquery_engine(THD*, st_join_table*, Item_subselect*, Item*, Item*, bool)
000000000087333e  w    F .text	000000000000004a              TRP_RANGE::TRP_RANGE(SEL_ARG*, unsigned int)
0000000001215460 g     O .data	0000000000000100              to_upper_cp1257_bin
0000000000767334  w    F .text	0000000000000011              Field_enum::sort_charset() const
00000000007be1f4  w    F .text	0000000000000041              Create_func_conv::~Create_func_conv()
00000000008724f0  w    F .text	0000000000000028              SEL_ARG::merge_flags(SEL_ARG*)
0000000000b6f768 g     F .text	0000000000000033              ha_partition::max_supported_keys() const
000000000069779c g     F .text	000000000000010c              Table_triggers_list::mark_fields_used(trg_event_type)
000000000070a298  w    F .text	00000000000001ba              Sys_var_double::Sys_var_double(char const*, char const*, int, long, unsigned long, CMD_LINE, double, double, double, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
000000000121a240 g     O .data	0000000000000100              to_upper_latin5_bin
00000000005d7370  w    F .text	0000000000000093              Table_ident::Table_ident(THD*, st_mysql_lex_string, st_mysql_lex_string, bool)
0000000000983590 g     F .text	00000000000001f8              hp_rb_records_in_range
000000000080e84e g     F .text	0000000000000195              Item_func_unix_timestamp::val_int()
0000000000876fbc  w    F .text	0000000000000012              Item_proc_int::val_int()
0000000000782d13 g     F .text	0000000000000074              agg_item_charsets(DTCollation&, char const*, Item**, unsigned int, unsigned int, int)
000000000077b59a  w    F .text	0000000000000052              Ha_trx_info::set_trx_read_write()
00000000008d3b0f g     F .text	000000000000003e              my_calc_hash
0000000000873b6c  w    F .text	0000000000000026              List<QUICK_RANGE>::List(List<QUICK_RANGE> const&)
00000000007d222e g     F .text	000000000000030f              Item_func_sleep::val_int()
00000000007f35aa  w    F .text	0000000000000046              Item_func_database::~Item_func_database()
00000000007985bc  w    F .text	0000000000000044              Item_int_with_ref::save_in_field(Field*, bool)
00000000010eeb50 g     O .data	0000000000000008              disabled_my_option
000000000067fe7c g     F .text	00000000000007af              mysql_write_frm(st_lock_param_type*, unsigned int)
0000000000000000       F *UND*	0000000000000000              localtime_r@@GLIBC_2.2.5
00000000007bac62  w    F .text	0000000000000056              Item_udf_func::Item_udf_func(st_udf_func*, List<Item>&)
0000000001394100 g     O .bss	0000000000000004              mysql_server_last_errno
000000000076696c  w    F .text	0000000000000046              Field_longstr::~Field_longstr()
000000000096aa5d g     F .text	0000000000000d89              rtree_d_mbr
00000000007f19b8  w    F .text	0000000000000011              Item_func_reverse::func_name() const
0000000001386408 g     O .bss	0000000000000008              Create_func_crc32::s_singleton
00000000007db31e  w    F .text	00000000000000e0              Item_func_udf_str::val_real()
000000000079ae2c  w    F .text	0000000000000046              Item_static_float_func::~Item_static_float_func()
00000000012c8100 g     O .data	00000000000000b0              my_charset_ucs2_unicode_ci
00000000006f4e1e g     F .text	000000000000013f              MDL_context::set_explicit_duration_for_all_locks()
000000000095e2ff g     F .text	00000000000000ec              _mi_store_bin_pack_key
0000000000816798  w    F .text	000000000000004e              Item_func_sec_to_time::val_real()
00000000007a6d7e g     F .text	0000000000000045              in_double::in_double(unsigned int)
0000000001215880 g     O .data	0000000000000100              to_lower_cp1257_general_ci
0000000000b9554b g     F .text	0000000000000214              do_mini_right_shift
000000000091ecf8 g     F .text	0000000000000071              ha_myisam::update_row(unsigned char const*, unsigned char*)
00000000007f29da  w    F .text	0000000000000058              Item_func_compress::~Item_func_compress()
0000000000ba6329 g     F .text	00000000000000a1              vio_is_blocking
0000000000737486  w    F .text	0000000000000027              String::operator new(unsigned long, st_mem_root*)
00000000005b0aa8  w    F .text	0000000000000029              I_P_List_iterator<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::I_P_List_iterator(I_P_List<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> > const&)
0000000000767166  w    F .text	0000000000000040              Field_geom::reset()
00000000007c2780  w    F .text	000000000000002d              Create_func_ucase::Create_func_ucase()
0000000000678c64  w    F .text	0000000000000041              Show_create_error_handler::~Show_create_error_handler()
000000000080dd82 g     F .text	0000000000000079              Item_func_dayofmonth::val_int()
0000000000848f72  w    F .text	000000000000001b              Load_log_event::is_valid() const
000000000089393e  w    F .text	0000000000000041              Gis_polygon::~Gis_polygon()
0000000000623cc9 g     F .text	0000000000000538              start_slave(THD*, Master_info*, bool)
0000000000852200  w    F .text	000000000000002d              Old_rows_log_event::set_flags(unsigned short)
00000000010efe37 g     O .data	0000000000000001              flag_events_locks_summary_by_instance
0000000000765b28  w    F .text	000000000000000f              Field_longlong::can_be_compared_as_longlong() const
0000000000981e50 g     F .text	0000000000000031              ha_heap::delete_table(char const*)
000000000073a6ec  w    F .text	0000000000000030              Item_date_func::val_real()
000000000067808a  w    F .text	0000000000000011              sys_var::show_type()
0000000000816560  w    F .text	000000000000002b              Item_date_func::~Item_date_func()
0000000000890d22 g     F .text	0000000000000184              Gis_multi_line_string::geometry_n(unsigned int, String*) const
00000000005d020c  w    F .text	0000000000000026              List_iterator<Key>::init(List<Key>&)
00000000007f93ca g     F .text	00000000000004d4              Item_in_subselect::select_in_like_transformer(JOIN*, Comp_creator*)
00000000007af390  w    F .text	0000000000000046              cmp_item_string::~cmp_item_string()
000000000059af5a  w    F .text	000000000000001b              List_iterator<LEX_COLUMN>::remove()
00000000007bb7fe  w    F .text	0000000000000052              Item_func_des_decrypt::Item_func_des_decrypt(Item*, Item*)
00000000012cd260 g     O .data	00000000000000b0              my_charset_utf16_general_ci
0000000000871f88  w    F .text	000000000000000f              QUICK_INDEX_MERGE_SELECT::reverse_sorted()
0000000000559362  w    F .text	0000000000000041              Lt_creator::~Lt_creator()
0000000000599268  w    F .text	0000000000000085              hash_filo::hash_filo(unsigned int, unsigned int, unsigned int, unsigned char* (*)(unsigned char const*, unsigned long*, char), void (*)(void*), charset_info_st*)
000000000070c03c  w    F .text	0000000000000026              Sys_var_bit::global_save_default(THD*, set_var*)
000000000089de88 g     F .text	0000000000000490              multi_delete::initialize_tables(JOIN*)
00000000007b10fa  w    F .text	0000000000000046              Item_func_ifnull::~Item_func_ifnull()
00000000009029eb g     F .text	0000000000000032              base64_needed_decoded_length
00000000007be8ce  w    F .text	000000000000002d              Create_func_decode::Create_func_decode()
000000000078bb52 g     F .text	00000000000000c3              Item::eq_by_collation(Item*, bool, charset_info_st*)
0000000000911012  w    F .text	0000000000000041              table_performance_timers::~table_performance_timers()
0000000000817168  w    F .text	0000000000000011              Item_func_get_format::func_name() const
0000000001088380  w    O .data.rel.ro	0000000000000030              vtable for Create_func_atan
0000000000566e02  w    F .text	0000000000000013              Item::collect_item_field_processor(unsigned char*)
000000000093f37b g     F .text	000000000000009b              _my_calc_total_blob_length
0000000000565792  w    F .text	0000000000000026              I_List_iterator<i_string>::I_List_iterator(I_List<i_string>&)
000000000068f995 g     F .text	0000000000000831              mysql_checksum_table(THD*, TABLE_LIST*, st_ha_check_opt*)
000000000076727e  w    F .text	000000000000000f              Field_enum::cast_to_int_type() const
0000000000767c4a  w    F .text	0000000000000025              List_iterator<Create_field>::replace(List<Create_field>&)
0000000000607646  w    F .text	00000000000000ee              Incident_log_event::Incident_log_event(THD*, Incident)
0000000000765c62  w    F .text	000000000000002d              Field_float::reset()
00000000013707f8 g     O .bss	0000000000000004              key_rwlock_LOCK_grant
0000000000777532 g     F .text	00000000000000ab              handler::ha_repair(THD*, st_ha_check_opt*)
0000000000607528  w    F .text	00000000000000bc              select_create::select_create(TABLE_LIST*, st_ha_create_information*, Alter_info*, List<Item>&, enum_duplicates, bool, TABLE_LIST*)
0000000000784660 g     F .text	000000000000005d              Item_field::used_tables() const
00000000008383bc g     F .text	00000000000003c7              Format_description_log_event::Format_description_log_event(char const*, unsigned int, Format_description_log_event const*)
0000000000677a6a g     F .text	0000000000000013              IS_internal_schema_access::lookup(char const*) const
0000000000b715c4  w    F .text	0000000000000046              ha_partition_add_index::~ha_partition_add_index()
00000000006f2b28 g     F .text	0000000000000035              MDL_wait_for_subgraph::~MDL_wait_for_subgraph()
00000000007c1c8c  w    F .text	0000000000000041              Create_func_sign::~Create_func_sign()
000000000056b446  w    F .text	000000000000001d              List_iterator_fast<set_var_base>::operator++(int)
000000000089bdf6 g     F .text	00000000000001e3              Select_materialize::send_result_set_metadata(List<Item>&, unsigned int)
00000000006d45f6  w    F .text	0000000000000102              partition_element::partition_element(partition_element*)
00000000007bcbb2  w    F .text	0000000000000045              Item_str_timefunc::Item_str_timefunc(Item*, Item*, Item*)
00000000007f3f0a  w    F .text	0000000000000058              Item_func_concat::~Item_func_concat()
000000000073a796  w    F .text	000000000000002d              Item_str_timefunc::Item_str_timefunc()
00000000007b0aee  w    F .text	0000000000000046              Item_func_bit_or::~Item_func_bit_or()
000000000060581d g     F .text	0000000000000062              create_table_set_open_action_and_adjust_tables(LEX*)
0000000000000000       F *UND*	0000000000000000              utime@@GLIBC_2.2.5
00000000005b1192  w    F .text	000000000000000f              I_P_List_no_push_back<MDL_request>::set_last(MDL_request**)
00000000008c10d2  w    F .text	0000000000000063              Item_nodeset_func_axisbyname::Item_nodeset_func_axisbyname(Item*, char const*, unsigned int, String*)
00000000008ec191 g     F .text	0000000000000187              my_create
0000000000799c24  w    F .text	000000000000002e              List<Item>::List(List<Item> const&, st_mem_root*)
00000000005ce5b0  w    F .text	000000000000001b              Diagnostics_area::Diagnostics_area()
00000000008584b0 g     F .text	00000000000000e2              QUICK_ROR_UNION_SELECT::QUICK_ROR_UNION_SELECT(THD*, TABLE*)
00000000007da8d4  w    F .text	0000000000000046              Item_func_num1::~Item_func_num1()
00000000007408e6 g     F .text	00000000000001bc              mysql_init_character_set
000000000065bfc0  w    F .text	0000000000000026              I_List_iterator<COND_CMP>::I_List_iterator(I_List<COND_CMP>&)
0000000001370848 g     O .bss	0000000000000004              key_master_info_stop_cond
00000000006f9eaa  w    F .text	000000000000001a              Diagnostics_area::is_ok() const
000000000080a714  w    F .text	0000000000000046              Item_sum_max::~Item_sum_max()
00000000007da84a  w    F .text	0000000000000011              Item_func_div::func_name() const
00000000008e5025 g     F .text	0000000000001365              my_qsort
00000000006d4504  w    F .text	00000000000000f2              partition_element::partition_element()
0000000001071aa8  w    O .data.rel.ro	0000000000000290              vtable for Field_real
00000000010efe40 g     O .data	0000000000000008              ft_min_word_len
0000000000569036  w    F .text	000000000000004d              i_string_pair::i_string_pair(char const*, char const*)
00000000008028a8 g     F .text	0000000000000080              Item_sum_max::copy_or_same(THD*)
00000000005d1b44  w    F .text	000000000000002b              select_dump::~select_dump()
00000000013863e0 g     O .bss	0000000000000008              Create_func_contains::s_singleton
0000000000873be6  w    F .text	000000000000002d              List<QUICK_RANGE>::push_back(QUICK_RANGE*, st_mem_root*)
000000000090df30  w    F .text	000000000000001e              PFS_simple_index::set_after(PFS_simple_index const*)
000000000077c2e8  w    F .text	0000000000000013              handler::drop_partitions(char const*)
0000000000606e02  w    F .text	0000000000000038              Item_func_not::Item_func_not(Item*)
00000000005cb2d0 g     F .text	000000000000108f              THD::decide_logging_format(TABLE_LIST*)
00000000005b0714  w    F .text	000000000000003d              Repair_mrg_table_error_handler::Repair_mrg_table_error_handler()
000000000059b7ba  w    F .text	0000000000000026              Dummy_error_handler::~Dummy_error_handler()
0000000000618cae g     F .text	0000000000000009              non-virtual thunk to Prepared_statement::~Prepared_statement()
0000000000798bf8  w    F .text	0000000000000040              Item_copy_uint::Item_copy_uint(Item*)
00000000008bc416 g     F .text	0000000000000186              Item_nodeset_func_elementbyindex::val_nodeset(String*)
00000000007399a4  w    F .text	0000000000000040              Item_str_func::Item_str_func(List<Item>&)
000000000078599e g     F .text	0000000000000025              Item_string::val_decimal(my_decimal*)
00000000012ca0e0 g     O .data	00000000000000b0              my_charset_utf8mb4_latvian_uca_ci
00000000007afe4a  w    F .text	0000000000000011              Item_is_not_null_test::func_name() const
000000000079bbf4  w    F .text	0000000000000056              Cached_item_decimal::~Cached_item_decimal()
00000000010ca030  w    O .data.rel.ro	0000000000000028              vtable for PFS_unknown_acl
00000000007d4610 g     F .text	00000000000000e2              Item_func_get_user_var::val_str(String*)
0000000001212460 g     O .data	0000000000000100              to_lower_cp1250_croatian_ci
00000000007c2fe2  w    F .text	0000000000000041              Create_func_y::~Create_func_y()
0000000001069ba8  w    O .data.rel.ro	0000000000000078              vtable for select_subselect
000000000067563a g     F .text	00000000000002a0              make_schemata_old_format(THD*, st_schema_table*)
0000000001088620  w    O .data.rel.ro	0000000000000030              vtable for Create_native_func
000000000081dff8 g     F .text	00000000000001b6              LOGGER::activate_log_handler(THD*, unsigned int)
000000000109d7d0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_isclosed
00000000006eb058  w    F .text	0000000000000011              Queue<QUERY_PROFILE>::new_iterator()
0000000000876d94  w    F .text	000000000000000f              Item_proc_real::field_type() const
0000000000797a60  w    F .text	0000000000000069              Item_ref::const_item() const
0000000000767ca8  w    F .text	0000000000000046              Field_bit::~Field_bit()
0000000000899e36  w    F .text	00000000000000c5              field_real::field_real(Item*, analyse*)
00000000007dabb8  w    F .text	0000000000000046              Item_func_int_val::~Item_func_int_val()
000000000081732c  w    F .text	0000000000000046              Item_func_get_format::~Item_func_get_format()
00000000008cc658 g     F .text	00000000000002fe              Truncate_statement::lock_table(THD*, TABLE_LIST*, bool*)
00000000005dc39d g     F .text	00000000000001b9              mysql_ha_flush(THD*)
00000000005cea08  w    F .text	0000000000000016              Item_maxmin_subselect::register_value()
00000000007a11d6 g     F .text	0000000000000032              Item_func_equal::fix_length_and_dec()
0000000000678986  w    F .text	000000000000002d              IS_internal_schema_access::IS_internal_schema_access()
0000000000983cb7 g     F .text	00000000000002fb              hp_hashnr
00000000007ac91e g     F .text	0000000000000053              Item_func_ne::negated_item()
00000000007e1e80  w    F .text	000000000000002b              Item_func_y::~Item_func_y()
000000000079440a g     F .text	0000000000000062              Item_cache_str::val_str(String*)
000000000079c79c g     F .text	0000000000000049              Le_creator::create(Item*, Item*) const
00000000005f19e8  w    F .text	000000000000001b              List<Item_field>::List()
00000000005c8390 g     F .text	00000000000001ed              select_max_min_finder_subselect::cmp_str()
00000000007bb9dc  w    F .text	0000000000000038              Item_func_elt::Item_func_elt(List<Item>&)
00000000005595c6  w    F .text	000000000000002d              File_parser_dummy_hook::File_parser_dummy_hook()
00000000007ba402  w    F .text	0000000000000038              Item_func_floor::Item_func_floor(Item*)
00000000006b78f2 g     F .text	0000000000000345              TABLE_LIST::prepare_view_securety_context(THD*)
0000000000851b58 g     F .text	0000000000000098              Delete_rows_log_event_old::Delete_rows_log_event_old(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
00000000012c9c60 g     O .data	00000000000000b0              my_charset_utf8_persian_uca_ci
0000000000708e10  w    F .text	0000000000000047              Sys_var_enum::session_value_ptr(THD*, st_mysql_lex_string*)
00000000009132c2  w    F .text	0000000000000041              table_cond_instances::~table_cond_instances()
0000000000817482  w    F .text	0000000000000046              Item_func_maketime::~Item_func_maketime()
000000000077bef0  w    F .text	000000000000000f              handler::table_cache_type()
000000000059b38a  w    F .text	0000000000000025              List<st_lex_user>::push_back(st_lex_user*)
00000000005b02de  w    F .text	0000000000000056              create_table_def_key(char*, char const*, char const*)
0000000000765358  w    F .text	000000000000000f              Field_new_decimal::zero_pack() const
0000000000b67f46 g     F .text	000000000000011b              ha_partition::truncate()
000000000081739e  w    F .text	0000000000000046              Item_func_timestamp_diff::~Item_func_timestamp_diff()
0000000000849318  w    F .text	0000000000000048              Create_file_log_event::get_data_size()
00000000007da580  w    F .text	0000000000000011              Item_func_signed::func_name() const
00000000008c0a46  w    F .text	0000000000000089              Item_nodeset_func::Item_nodeset_func(Item*, Item*, String*)
00000000006f9cd8 g     F .text	00000000000001d1              Repair_table_statement::execute(THD*)
00000000007ae602  w    F .text	0000000000000016              Item_func_not_all::top_level_item()
00000000006f2acc g     F .text	0000000000000035              MDL_wait_for_graph_visitor::~MDL_wait_for_graph_visitor()
00000000008a5e86 g     F .text	00000000000009f9              READ_INFO::read_field()
00000000010be008  w    O .data.rel.ro	0000000000000398              vtable for Item_func_week
000000000136cc44 g     O .bss	0000000000000001              opt_super_large_pages
000000000065b73e  w    F .text	0000000000000088              store_key_item::store_key_item(THD*, Field*, unsigned char*, unsigned char*, unsigned int, Item*)
000000000079ac9a  w    F .text	0000000000000046              Item_case_expr::~Item_case_expr()
000000000073add0  w    F .text	000000000000003e              Item_typecast::fix_length_and_dec()
00000000007adeca  w    F .text	0000000000000011              Item_func_bit_or::func_name() const
00000000007e812c g     F .text	00000000000001b8              Item_func_left::val_str(String*)
000000000056878c g     F .text	0000000000000102              Rpl_filter::add_wild_table_rule(st_dynamic_array*, char const*)
00000000008519fa g     F .text	00000000000000d7              Write_rows_log_event_old::do_after_row_operations(Slave_reporting_capability const*, int)
000000000087f2de g     F .text	0000000000000190              sp_eval_expr(THD*, Field*, Item**)
00000000007fefa0 g     F .text	0000000000000150              Aggregator_distinct::clear()
000000000120e300 g     O .data	0000000000000100              to_upper_cp1257_lithuanian_ci
00000000007666f4  w    F .text	000000000000000f              Field_time::pack_length() const
00000000006bf53c g     F .text	000000000000007f              Time_zone_utc::gmt_sec_to_TIME(st_mysql_time*, long) const
000000000086405b g     F .text	000000000000015f              sel_trees_can_be_ored(SEL_TREE*, SEL_TREE*, RANGE_OPT_PARAM*)
00000000007a13ee g     F .text	000000000000006c              Item_func_lt::val_int()
00000000005f025a g     F .text	0000000000000044              LEX::is_partition_management() const
000000000079afe0 g     F .text	00000000000001e1              new_Cached_item(THD*, Item*)
000000000098e474 g     F .text	0000000000000043              ha_myisammrg::external_lock(THD*, int)
00000000006bb61c  w    F .text	0000000000000041              Wait_for_flush::~Wait_for_flush()
00000000007670ac  w    F .text	000000000000007a              Field_geom::Field_geom(unsigned char*, unsigned char*, unsigned int, Field::utype, char const*, TABLE_SHARE*, unsigned int, Field::geometry_type)
000000000065aa3c  w    F .text	0000000000000067              SQL_SELECT::skip_record(THD*, bool*)
0000000001078550  w    O .data.rel.ro	0000000000000360              vtable for Item_ref_null_helper
00000000008090d6  w    F .text	0000000000000031              Item_variance_field::val_int()
0000000000871f98  w    F .text	000000000000000f              QUICK_INDEX_MERGE_SELECT::unique_key_range()
000000000073def0 g     F .text	000000000000010c              end_server
00000000008ea9d4 g     F .text	00000000000001f2              bitmap_is_prefix
0000000000899968  w    F .text	000000000000000f              Procedure::end_of_records()
000000000088971a  w    F .text	0000000000000046              sp_instr_cpop::~sp_instr_cpop()
00000000006e913a g     F .text	00000000000001a1              QUERY_PROFILE::new_status(char const*, char const*, char const*, unsigned int)
000000000077bae2  w    F .text	0000000000000013              handler::ft_read(unsigned char*)
00000000005c294e g     F .text	0000000000000027              thd_calloc
0000000000823dbc g     F .text	000000000000027d              MYSQL_BIN_LOG::find_next_log(st_log_info*, bool)
000000000074d6f6 g     F .text	00000000000000e7              Field_tiny::store(char const*, unsigned int, charset_info_st*)
00000000005c8cca g     F .text	0000000000000069              Statement::~Statement()
00000000007f245a  w    F .text	0000000000000011              Item_load_file::func_name() const
00000000008cae12 g     F .text	00000000000000a1              Alter_table_optimize_partition_statement::execute(THD*)
00000000007bd2b8  w    F .text	0000000000000041              Create_func_arg2::~Create_func_arg2()
00000000010c2250  w    O .data.rel.ro	0000000000000028              vtable for TRP_ROR_INTERSECT
00000000007dd804  w    F .text	0000000000000046              Item_func_log::~Item_func_log()
00000000010b6c90  w    O .data.rel.ro	0000000000000398              vtable for Item_func_timediff
000000000080882c  w    F .text	0000000000000013              Item_sum::setup(THD*)
00000000006f9735 g     F .text	00000000000000b5              mysql_preload_keys(THD*, TABLE_LIST*)
0000000000593688 g     F .text	00000000000000a2              get_cached_table_access(st_grant_internal_info*, char const*, char const*)
00000000006bb576  w    F .text	0000000000000026              List_iterator_fast<Item_func_match>::List_iterator_fast(List<Item_func_match>&)
0000000000559824  w    F .text	000000000000001b              I_List<i_string>::I_List()
00000000007f00ac g     F .text	0000000000000113              Item_func_export_set::fix_length_and_dec()
000000000056d8e1 g     F .text	00000000000000bf              end_slave()
000000000136cc04 g     O .bss	0000000000000001              opt_show_slave_auth_info
00000000005594f6  w    F .text	0000000000000020              THD::query_start()
00000000007da376  w    F .text	0000000000000052              Item_func::check_float_overflow(double)
000000000078b364 g     F .text	0000000000000245              Item_field::equal_fields_propagator(unsigned char*)
0000000000000000       F *UND*	0000000000000000              memset@@GLIBC_2.2.5
00000000012c97e0 g     O .data	00000000000000b0              my_charset_utf8_czech_uca_ci
0000000000000000       F *UND*	0000000000000000              abort@@GLIBC_2.2.5
00000000008735fe  w    F .text	000000000000002d              TRP_INDEX_MERGE::TRP_INDEX_MERGE()
0000000000764f50  w    F .text	0000000000000012              Field_str::charset() const
00000000007db67a  w    F .text	000000000000001c              Item_func_get_user_var::get_name()
000000000065c85c  w    F .text	000000000000001d              List_iterator<Cached_item>::operator++(int)
000000000090dd5a g     F .text	00000000000000f8              table_events_waits_history_long::rnd_pos(void const*)
00000000012b5480 g     O .data	0000000000000600              page012data
0000000000000000       F *UND*	0000000000000000              getrusage@@GLIBC_2.2.5
00000000007d6f3c g     F .text	000000000000004c              Item_func_get_system_var::cleanup()
00000000005e9652  w    F .text	000000000000001b              I_List<Delayed_insert>::I_List()
0000000001395698 g     O .bss	0000000000000004              mi_key_rwlock_MYISAM_SHARE_key_root_lock
00000000006b8fe4 g     F .text	0000000000000338              Field_iterator_table_ref::get_or_create_column_ref(THD*, TABLE_LIST*)
00000000007af5b2  w    F .text	000000000000003d              cmp_item_sort_string::compare(cmp_item*)
00000000006d80f2  w    F .text	00000000000000e8              injector::transaction::transaction(MYSQL_BIN_LOG*, THD*)
000000000090531a g     F .text	000000000000006a              ha_perfschema::store_lock(THD*, st_thr_lock_data**, thr_lock_type)
00000000005f0bf2  w    F .text	000000000000000e              st_select_lex_node::set_lock_for_tables(thr_lock_type)
000000000059e460 g     F .text	0000000000000280              close_all_tables_for_name(THD*, TABLE_SHARE*, bool)
000000000090e30c  w    F .text	0000000000000026              table_events_waits_history::~table_events_waits_history()
00000000007999d2  w    F .text	0000000000000026              Item_cache_datetime::clear()
0000000000798af6  w    F .text	0000000000000038              Item_copy_int::Item_copy_int(Item*)
00000000008531d2 g     F .text	00000000000001f5              str2my_decimal(unsigned int, char const*, unsigned int, charset_info_st*, my_decimal*)
00000000012cb280 g     O .data	00000000000000b0              my_charset_utf32_polish_uca_ci
00000000007603c6 g     F .text	0000000000000138              Field_bit::compatible_field_size(unsigned int, Relay_log_info*, unsigned short, int*)
000000000082c6f8 g     F .text	0000000000000288              MYSQL_BIN_LOG::recover(st_io_cache*, Format_description_log_event*)
0000000000794036 g     F .text	0000000000000061              Item_cache_decimal::val_decimal(my_decimal*)
0000000000872688  w    F .text	0000000000000129              SEL_ARG::clone_and(SEL_ARG*)
00000000005cf45a  w    F .text	0000000000000056              Query_arena::Query_arena(st_mem_root*, Query_arena::enum_state)
00000000010d2740 g     O .data	0000000000000008              trg_new_row_fake_var
00000000005b1146  w    F .text	000000000000000f              I_P_List_no_push_back<TABLE>::set_last(TABLE**)
00000000007dcc88  w    F .text	000000000000006a              Item_func_field::~Item_func_field()
00000000007ad08c g     F .text	000000000000007e              Item_equal::merge(Item_equal*)
000000000082d0ec  w    F .text	0000000000000052              Format_description_log_event::header_is_valid() const
0000000000625752 g     F .text	0000000000000852              mysql_show_binlog_events(THD*)
0000000000826ee6 g     F .text	0000000000000015              stmt_has_updated_non_trans_table(THD const*)
00000000010ef540 g     O .data	0000000000000058              table_events_waits_summary_by_instance::m_share
000000000057a7a2  w    F .text	000000000000001a              Delegate::is_empty()
000000000136dca0 g     O .bss	0000000000000014              reg_ext
0000000000b70032 g     F .text	0000000000000219              ha_partition::release_auto_increment()
0000000000810776 g     F .text	00000000000000ca              Item_func_from_unixtime::val_str(String*)
0000000000760cbc g     F .text	000000000000009f              Field_bit_as_char::Field_bit_as_char(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*)
0000000000900e9e g     F .text	000000000000022c              tree_search_key
00000000012c9360 g     O .data	00000000000000b0              my_charset_utf8_slovenian_uca_ci
00000000005f51be g     F .text	000000000000203c              dispatch_command(enum_server_command, THD*, char*, unsigned int)
00000000007f5da8 g     F .text	0000000000000052              Item_singlerow_subselect::null_inside()
00000000006bf984 g     F .text	0000000000000026              my_offset_tzs_get_key
0000000000708c34  w    F .text	0000000000000026              Sys_var_typelib::~Sys_var_typelib()
0000000000000000       F *UND*	0000000000000000              dlerror@@GLIBC_2.2.5
00000000008cd487 g     F .text	00000000000000b1              SHA224
00000000005ade87 g     F .text	0000000000000060              tdc_flush_unused_tables()
000000000087732e  w    F .text	0000000000000046              Item_proc_string::~Item_proc_string()
0000000000893a42  w    F .text	0000000000000026              Gis_multi_point::~Gis_multi_point()
000000000067802e  w    F .text	0000000000000035              ACL_internal_schema_access::~ACL_internal_schema_access()
000000000070eccc  w    F .text	0000000000000041              Sys_var_mybool::~Sys_var_mybool()
0000000000b5d6ea g     F .text	0000000000000195              ha_tina::delete_all_rows()
0000000000988026 g     F .text	000000000000034b              heap_write
000000000088b07c  w    F .text	0000000000000026              List_iterator_fast<sp_pcontext>::List_iterator_fast(List<sp_pcontext>&)
000000000082cc7e  w    F .text	0000000000000039              LOGGER::LOGGER()
000000000098d156 g     F .text	0000000000000320              ha_myisammrg::detach_children()
000000000090d3f0 g     F .text	0000000000000066              table_events_waits_current::table_events_waits_current()
00000000006023b5 g     F .text	0000000000000080              mysql_init_multi_delete(LEX*)
00000000007bf486  w    F .text	000000000000002d              Create_func_from_days::Create_func_from_days()
00000000005c0b51 g     F .text	000000000000001d              thd_set_net_read_write(THD*, unsigned int)
00000000007a5de2 g     F .text	00000000000000c6              Item_func_coalesce::str_op(String*)
0000000000000000       F *UND*	0000000000000000              tan@@GLIBC_2.2.5
0000000000905a58  w    F .text	0000000000000014              ha_perfschema::table_flags() const
0000000000752286 g     F .text	00000000000001e5              Field_double::val_str(String*, String*)
000000000075e744 g     F .text	00000000000001e5              Field_enum::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
000000000054e4bb g     F .text	0000000000000107              unlink_thd(THD*)
00000000007bc7ae  w    F .text	000000000000004a              Item_func_glength::Item_func_glength(Item*)
00000000007c2b32  w    F .text	0000000000000041              Create_func_uuid_short::~Create_func_uuid_short()
000000000075ed2a g     F .text	00000000000000d6              Field_bit::do_last_null_byte() const
0000000000849956  w    F .text	0000000000000015              Relay_log_info::is_long_find_row_note_printed()
0000000001086d90  w    O .data.rel.ro	0000000000000030              vtable for Create_func_soundex
00000000007399f4  w    F .text	000000000000004a              Item_str_ascii_func::Item_str_ascii_func(Item*)
0000000000817e24  w    F .text	0000000000000046              Item_func_from_days::~Item_func_from_days()
000000000089ac0e  w    F .text	000000000000000b              analyse::add()
000000000120eb20 g     O .data	0000000000000200              to_uni_latin5_turkish_ci
000000000083d752 g     F .text	0000000000000590              User_var_log_event::do_apply_event(Relay_log_info const*)
00000000012b2a80 g     O .data	0000000000000600              page00Bdata
00000000006dbcc8 g     F .text	00000000000004e4              Relay_log_info::Relay_log_info(bool)
000000000079a3e0  w    F .text	0000000000000071              Item_trigger_field::~Item_trigger_field()
00000000012cb100 g     O .data	00000000000000b0              my_charset_utf32_romanian_uca_ci
00000000007801e2 g     F .text	0000000000000238              Item_string::safe_charset_converter(charset_info_st*)
000000000082d21c  w    F .text	0000000000000046              Intvar_log_event::~Intvar_log_event()
00000000007f1aa8  w    F .text	0000000000000011              Item_func_right::func_name() const
00000000005b7ada g     F .text	00000000000000d3              Query_cache::free_query(Query_cache_block*)
0000000000765e8a  w    F .text	000000000000000e              Field_null::val_real()
0000000000893574  w    F .text	0000000000000030              Geometry::set_data_ptr(char const*, unsigned int)
00000000007c54f8 g     F .text	000000000000019e              Item_func::count_real_length()
00000000008f2d73 g     F .text	0000000000000097              my_free
00000000007db868  w    F .text	000000000000000f              Item_func_match::functype() const
00000000006ed8b8  w    F .text	000000000000003d              Sql_statement::~Sql_statement()
00000000007bfad2  w    F .text	0000000000000026              Create_func_ifnull::~Create_func_ifnull()
00000000007398b6  w    F .text	0000000000000048              Item_str_func::Item_str_func(Item*, Item*)
00000000010c8be0  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func
00000000007beed8  w    F .text	0000000000000041              Create_func_envelope::~Create_func_envelope()
00000000008410be g     F .text	000000000000027a              sql_ex_info::init(char const*, char const*, bool)
0000000001386568 g     O .bss	0000000000000008              Create_func_is_free_lock::s_singleton
000000000083361c g     F .text	0000000000000cd9              Query_log_event::write(st_io_cache*)
0000000000807574 g     F .text	0000000000000411              Item_func_group_concat::fix_fields(THD*, Item**)
00000000008e41bb g     F .text	00000000000003ff              pack_dirname
0000000000817774  w    F .text	000000000000002b              Item_datetime_typecast::~Item_datetime_typecast()
00000000007bf4f6  w    F .text	0000000000000026              Create_func_from_days::~Create_func_from_days()
00000000007ae254  w    F .text	0000000000000025              Gt_creator::symbol(bool) const
0000000000709e60  w    F .text	000000000000002b              Sys_var_dbug::global_save_default(THD*, set_var*)
00000000007af2aa  w    F .text	0000000000000046              cmp_item::~cmp_item()
0000000000797ea0  w    F .text	0000000000000076              Item_ref::addr(unsigned int)
00000000007eb1a4 g     F .text	0000000000000066              Item_func_user::fix_fields(THD*, Item**)
000000000087cd0e g     F .text	0000000000000655              sp_find_routine(THD*, int, sp_name*, sp_cache**, bool)
00000000005c1eb2 g     F .text	000000000000006a              THD::pop_internal_handler()
000000000059913c  w    F .text	0000000000000026              Prelocking_strategy::~Prelocking_strategy()
0000000000677fbe  w    F .text	000000000000000f              Item_blob::field_type() const
0000000001087e40  w    O .data.rel.ro	0000000000000030              vtable for Create_func_des_decrypt
00000000007b2f0c g     F .text	0000000000000060              Create_func_convert_tz::create(THD*, Item*, Item*, Item*)
00000000006b98ec g     F .text	0000000000000161              TABLE::mark_columns_needed_for_delete()
000000000070cf56  w    F .text	000000000000002e              List<set_var_base>::List(List<set_var_base> const&, st_mem_root*)
00000000008fee24 g     F .text	0000000000000060              thr_downgrade_write_lock
000000000088752e g     F .text	00000000000000e6              sp_instr_cpush::print(String*)
0000000000000000       F *UND*	0000000000000000              munmap@@GLIBC_2.2.5
00000000007f38da  w    F .text	0000000000000058              Item_func_substr_index::~Item_func_substr_index()
000000000090c4a6 g     F .text	00000000000002f4              init_timers()
000000000056336c g     F .text	00000000000000ed              Protocol_text::store_short(long long)
0000000000908194 g     F .text	0000000000000061              reset_file_instance_io()
0000000000911578  w    F .text	0000000000000026              table_setup_consumers::~table_setup_consumers()
000000000073caaa  w    F .text	000000000000001b              List<my_var>::List()
000000000078d9d4 g     F .text	00000000000000e8              Item_hex_string::val_int()
00000000006219cb g     F .text	0000000000000181              log_in_use(char const*)
0000000000678daf g     F .text	00000000000000a8              mysql_errno_to_sqlstate
00000000005ce658  w    F .text	000000000000001d              Protocol::Protocol()
000000000065c560  w    F .text	0000000000000074              List<Cached_item>::delete_elements()
00000000007c2ef8  w    F .text	0000000000000026              Create_func_xml_extractvalue::~Create_func_xml_extractvalue()
00000000005ceb04  w    F .text	000000000000001b              List<TABLE_LIST>::~List()
000000000068062b g     F .text	00000000000000a1              write_bin_log(THD*, bool, char const*, unsigned long, bool)
00000000009173d2 g     F .text	000000000000009b              insert_events_waits_history_long(PFS_events_waits*)
0000000001086560  w    O .data.rel.ro	0000000000000040              vtable for Ge_creator
00000000007b5a98 g     F .text	0000000000000069              Create_func_pi::create(THD*)
0000000000817b78  w    F .text	0000000000000046              Item_func_now_utc::~Item_func_now_utc()
0000000000797aca  w    F .text	0000000000000057              Item_ref::used_tables() const
00000000005ce7a0  w    F .text	0000000000000056              Key::~Key()
00000000007bddac  w    F .text	000000000000002d              Create_func_char_length::Create_func_char_length()
0000000000800dea g     F .text	000000000000005c              Item_sum_count::add()
00000000007388e0  w    F .text	0000000000000013              Item_func_bit::fix_length_and_dec()
000000000074ff5a g     F .text	000000000000011f              Field_long::val_int()
00000000007a044c g     F .text	00000000000000cf              Arg_comparator::compare_e_row()
00000000010f6270 g     O .data	0000000000000004              builtin_csv_plugin_interface_version
00000000007b116c  w    F .text	00000000000000a0              Item_func_between::~Item_func_between()
00000000005cec04  w    F .text	000000000000002c              Query_tables_list::is_stmt_unsafe(Query_tables_list::enum_binlog_stmt_unsafe)
0000000000739f4a  w    F .text	000000000000002d              Item_func_database::Item_func_database()
000000000095bb35 g     F .text	0000000000000454              _mi_get_binary_pack_key
00000000007bdbea  w    F .text	000000000000002d              Create_func_bit_length::Create_func_bit_length()
000000000139569c g     O .bss	0000000000000004              mi_key_mutex_MI_SORT_INFO_mutex
0000000000849674  w    F .text	00000000000000da              Rows_log_event::unpack_current_row(Relay_log_info const*)
00000000010f184c g     O .data	0000000000000004              builtin_heap_plugin_interface_version
00000000010edb70 g     O .data	0000000000000004              builtin_binlog_sizeof_struct_st_plugin
00000000008d347e g     F .text	0000000000000007              init_glob_errs
00000000008c742a g     F .text	0000000000000180              Event_queue::cond_wait(THD*, timespec*, char const*, char const*, unsigned int)
00000000006f5896  w    F .text	000000000000003e              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> >::I_P_List()
000000000073c7e0  w    F .text	0000000000000038              Check_table_statement::Check_table_statement(LEX*)
00000000005590e6  w    F .text	0000000000000012              CSET_STRING::charset() const
00000000008160ec  w    F .text	000000000000000f              Item_date::field_type() const
00000000005bfb5c  w    F .text	00000000000000f2              Query_cache_query::init_n_lock()
0000000000799ff6  w    F .text	0000000000000070              List<List<Item> >::delete_elements()
00000000007e20bc  w    F .text	0000000000000058              Item_func_dimension::~Item_func_dimension()
000000000091b90d g     F .text	0000000000000114              mi_check_print_error
00000000005d1816  w    F .text	000000000000001b              Alter_column::~Alter_column()
000000000091e734 g     F .text	0000000000000214              ha_myisam::start_bulk_insert(unsigned long long)
000000000073d750 g     F .text	0000000000000319              cli_advanced_command
0000000000798616  w    F .text	000000000000025e              Item_func_conv_charset::Item_func_conv_charset(Item*, charset_info_st*, bool)
0000000001386630 g     O .bss	0000000000000008              Create_func_md5::s_singleton
00000000007b013e  w    F .text	0000000000000011              Item_cond_and::func_name() const
0000000000837906 g     F .text	0000000000000110              Start_log_event_v3::pack_info(Protocol*)
00000000005d9ca8  w    F .text	000000000000001b              List<MYSQL_ERROR>::~List()
0000000000766120  w    F .text	0000000000000037              Field_timestamp::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000005e8866  w    F .text	0000000000000012              TABLEOP_HOOKS::do_prelock(TABLE**, unsigned int)
0000000001386328 g     O .bss	0000000000000008              Create_sp_func::s_singleton
00000000006f0a94  w    F .text	000000000000001b              Binlog_relay_IO_delegate::~Binlog_relay_IO_delegate()
0000000000755946 g     F .text	00000000000001e5              Field_newdate::store(char const*, unsigned int, charset_info_st*)
0000000000665436 g     F .text	0000000000000316              uses_only_table_name_fields(Item*, TABLE_LIST*)
00000000007a74ba g     F .text	00000000000001fd              cmp_item_row::store_value_by_template(cmp_item*, Item*)
00000000007f5314 g     F .text	0000000000000089              Item_subselect::print(String*, enum_query_type)
000000000136cc90 g     O .bss	0000000000000008              tc_heuristic_recover
00000000007388f4  w    F .text	000000000000002c              Item_func_bit::print(String*, enum_query_type)
00000000007b2c7a g     F .text	0000000000000098              Create_func_concat::create_native(THD*, st_mysql_lex_string, List<Item>*)
000000000073c444  w    F .text	000000000000004a              sp_instr_error::sp_instr_error(unsigned int, sp_pcontext*, int)
00000000005d7d98  w    F .text	00000000000000a0              TMP_TABLE_PARAM::TMP_TABLE_PARAM()
000000000088da44 g     F .text	0000000000000096              Geometry::create_point(String*, double, double) const
0000000000904822 g     F .text	0000000000000011              ha_perfschema::bas_ext() const
00000000006bb390  w    F .text	0000000000000017              I_P_List<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> >::is_empty() const
0000000000768016  w    F .text	0000000000000046              Field_newdate::~Field_newdate()
0000000000984765 g     F .text	0000000000000411              hp_key_cmp
00000000008e8518 g     F .text	000000000000000b              to_unix_path
000000000077eb40 g     F .text	00000000000000ad              Item::val_int_from_decimal()
000000000070ce30  w    F .text	0000000000000013              Sys_var_tz::make_symbolic(void (*)(void*, unsigned long, char const*))
0000000000967aac g     F .text	00000000000000e3              rtree_set_key_mbr
000000000106c990  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_flagset
00000000007c0e4e  w    F .text	000000000000002d              Create_func_nullif::Create_func_nullif()
00000000009089f2 g     F .text	0000000000000040              cleanup_thread_class()
0000000001092cd0  w    O .data.rel.ro	00000000000003c0              vtable for Item_func_int_val
0000000000889522  w    F .text	000000000000006c              sp_instr_hpush_jump::backpatch(unsigned int, sp_pcontext*)
000000000070ba4c  w    F .text	00000000000000c4              Sys_var_debug_sync::Sys_var_debug_sync(char const*, char const*, int, CMD_LINE, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
000000000138c4a0 g     O .bss	0000000000000200              curr_dir
000000000091e344 g     F .text	0000000000000083              ha_myisam::disable_indexes(unsigned int)
000000000056b3a4  w    F .text	0000000000000043              AutoRLock::AutoRLock(PolyLock*)
00000000008eb519 g     F .text	0000000000000038              bitmap_lock_set_next
000000000074d1da g     F .text	0000000000000035              Field_new_decimal::cmp(unsigned char const*, unsigned char const*)
000000000077e2a2 g     F .text	0000000000000149              Item::val_bool()
0000000000663d8b g     F .text	0000000000000061              reset_status_vars()
000000000075aa7e g     F .text	000000000000006a              Field_varstring::new_key_field(st_mem_root*, TABLE*, unsigned char*, unsigned char*, unsigned int)
00000000007dc21a  w    F .text	0000000000000046              Item_func_bit_xor::~Item_func_bit_xor()
0000000000753a24 g     F .text	000000000000027e              Field_time::store(double)
00000000005d0892  w    F .text	0000000000000026              List_iterator<Alter_drop>::List_iterator(List<Alter_drop>&)
00000000005aed3a  w    F .text	000000000000000b              Bitmap<64u>::Bitmap()
00000000007e2038  w    F .text	0000000000000058              Item_func_numinteriorring::~Item_func_numinteriorring()
0000000000b69ab0 g     F .text	000000000000011c              ha_partition::index_end()
00000000008fa9ac g     F .text	0000000000000915              rijndaelDecrypt
00000000007517d4 g     F .text	00000000000000c1              Field_float::send_binary(Protocol*)
00000000007b593a g     F .text	0000000000000050              Create_func_ord::create(THD*, Item*)
0000000000677e9e  w    F .text	0000000000000060              Item_ident_for_show::Item_ident_for_show(Field*, char const*, char const*)
0000000000774f0c g     F .text	0000000000000033              handler::ha_statistic_increment(unsigned long system_status_var::*) const
00000000005ce676  w    F .text	000000000000000b              Protocol::remove_last_row()
000000000073abe8  w    F .text	0000000000000038              Item_func_sysdate_local::Item_func_sysdate_local(Item*)
0000000001208720 g     O .data	0000000000000100              to_upper_hp8_english_ci
0000000001394cc8 g     O .bss	0000000000000004              key_THR_LOCK_heap
000000000106bb60  w    O .data.rel.ro	0000000000000028              vtable for Deprecated_trigger_syntax_handler
00000000007ba48c  w    F .text	000000000000002d              Item_func_rand::Item_func_rand()
0000000000981d24 g     F .text	0000000000000050              ha_heap::disable_indexes(unsigned int)
00000000007dc640  w    F .text	0000000000000046              Item_func_benchmark::~Item_func_benchmark()
0000000000893e21 g     F .text	0000000000000032              compare_decimal2(int*, char const*, char const*)
000000000073c266  w    F .text	000000000000006b              sp_instr_cpush::sp_instr_cpush(unsigned int, sp_pcontext*, LEX*, unsigned int)
00000000008899a2  w    F .text	0000000000000056              sp_instr_set_case_expr::~sp_instr_set_case_expr()
0000000000569172  w    F .text	0000000000000046              i_string::~i_string()
00000000005aff24  w    F .text	0000000000000016              Query_tables_list::uses_stored_routines() const
0000000000000000       F *UND*	0000000000000000              pthread_create@@GLIBC_2.2.5
00000000006f4ae6 g     F .text	0000000000000097              MDL_context::rollback_to_savepoint(MDL_savepoint const&)
00000000008493ba  w    F .text	0000000000000018              Append_block_log_event::is_valid() const
00000000007ba23a  w    F .text	0000000000000038              Item_func_atan::Item_func_atan(Item*)
0000000000000000       F *UND*	0000000000000000              fcntl@@GLIBC_2.2.5
00000000007b6798 g     F .text	0000000000000050              Create_func_tan::create(THD*, Item*)
00000000007c0fa8  w    F .text	0000000000000041              Create_func_numinteriorring::~Create_func_numinteriorring()
0000000000b710f0  w    F .text	000000000000007e              ha_partition::get_no_parts(char const*, unsigned int*)
0000000000766e56  w    F .text	0000000000000039              Field_blob::cmp(unsigned char const*, unsigned char const*)
00000000007bbc36  w    F .text	000000000000004a              Item_func_hex::Item_func_hex(Item*)
0000000000987899 g     F .text	0000000000000089              heap_scan_init
000000000090c2e4  w    F .text	000000000000002d              PFS_check_intact::PFS_check_intact()
000000000079a70e  w    F .text	000000000000002b              Item_empty_string::~Item_empty_string()
00000000007bd894  w    F .text	0000000000000041              Create_func_as_wkt::~Create_func_as_wkt()
00000000008c2612  w    F .text	000000000000002b              Item_func_xpath_position::~Item_func_xpath_position()
00000000005e99f8  w    F .text	000000000000001b              I_List<Delayed_insert>::~I_List()
0000000000766042  w    F .text	000000000000004a              Field_timestamp::set_default()
00000000007bdcae  w    F .text	0000000000000041              Create_func_ceiling::~Create_func_ceiling()
000000000083dce2 g     F .text	0000000000000023              User_var_log_event::do_update_pos(Relay_log_info*)
000000000098f1ca  w    F .text	0000000000000026              List_iterator_fast<Mrg_child_def>::List_iterator_fast(List<Mrg_child_def>&)
00000000005dc62a g     F .text	00000000000000f6              mysql_ha_set_explicit_lock_duration(THD*)
00000000007944fe g     F .text	00000000000000d6              Item_cache_str::save_in_field(Field*, bool)
00000000010c3e80  w    O .data.rel.ro	00000000000000d0              vtable for Gis_multi_line_string
00000000007c3236  w    F .text	0000000000000046              Item_func_max::~Item_func_max()
00000000006caeb2  w    F .text	000000000000005c              Event_creation_ctx::clone(st_mem_root*)
00000000007b7281 g     F .text	0000000000000189              item_create_init()
0000000000893c46  w    F .text	0000000000000041              Gis_geometry_collection::~Gis_geometry_collection()
000000000082d9dc  w    F .text	0000000000000046              binlog_cache_data::restore_savepoint(unsigned long long)
00000000007bc8c2  w    F .text	0000000000000038              Item_func_to_days::Item_func_to_days(Item*)
000000000056adc4 g     F .text	000000000000005f              set_var_collation_client::check(THD*)
00000000005ceda6  w    F .text	00000000000000b7              Query_tables_list::set_stmt_accessed_table(Query_tables_list::enum_stmt_accessed_table)
000000000067c941 g     F .text	0000000000000920              explain_filename(THD*, char const*, char*, unsigned int, enum_explain_filename_mode)
00000000010b8238  w    O .data.rel.ro	00000000000003a0              vtable for Item_typecast
0000000000739e8a  w    F .text	0000000000000038              Item_func_password::Item_func_password(Item*)
0000000001370900 g     O .bss	0000000000000004              key_file_relaylog
00000000010881a0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_concat_ws
00000000005edb12 g     F .text	000000000000028e              st_select_lex::init_query()
000000000056ab64 g     F .text	0000000000000061              set_var_user::update(THD*)
0000000001370904 g     O .bss	0000000000000004              key_file_relaylog_index
0000000000666d01 g     F .text	0000000000000142              get_table_open_method(TABLE_LIST*, st_schema_table*, enum_schema_tables)
0000000000599868  w    F .text	0000000000000119              ACL_PROXY_USER::init(char const*, char const*, char const*, char const*, bool)
000000000057b2f0  w    F .text	0000000000000019              sp_head::is_invoked() const
000000000059b336  w    F .text	0000000000000026              List<st_lex_user>::List(List<st_lex_user> const&)
000000000065979e  w    F .text	000000000000008e              Item_string::Item_string(charset_info_st*, Derivation)
00000000008129aa g     F .text	0000000000000069              Item_time_typecast::get_time(st_mysql_time*)
000000000057ab42  w    F .text	0000000000000046              Execute_load_log_event::~Execute_load_log_event()
000000000083b862 g     F .text	0000000000000303              Rotate_log_event::do_update_pos(Relay_log_info*)
00000000007bcb2c  w    F .text	0000000000000045              Item_date_func::Item_date_func(Item*, Item*, Item*)
00000000007b9f78  w    F .text	0000000000000040              Item_dec_func::Item_dec_func(Item*, Item*)
000000000078ddea g     F .text	00000000000000d5              Item_hex_string::eq(Item const*, bool) const
00000000007b4cd6 g     F .text	0000000000000098              Create_func_least::create_native(THD*, st_mysql_lex_string, List<Item>*)
0000000000000000       F *UND*	0000000000000000              geteuid@@GLIBC_2.2.5
0000000000659f64  w    F .text	000000000000002b              Item_bool_func::~Item_bool_func()
00000000007b49e6 g     F .text	0000000000000050              Create_func_isclosed::create(THD*, Item*)
000000000084df7a g     F .text	0000000000000131              Update_rows_log_event_old::do_before_row_operations(TABLE*)
0000000000857fb2 g     F .text	0000000000000262              QUICK_ROR_INTERSECT_SELECT::init_ror_merged_scan(bool)
0000000000739efa  w    F .text	000000000000004f              Item_func_sysconst::Item_func_sysconst()
0000000000882148 g     F .text	0000000000000122              set_routine_security_ctx(THD*, sp_head*, bool, Security_context**)
0000000000676f54 g     F .text	000000000000017a              initialize_schema_table(st_plugin_int*)
000000000075e22a g     F .text	00000000000000de              Field::eq_def(Field*)
00000000007b5e7a g     F .text	0000000000000172              Create_func_round::create_native(THD*, st_mysql_lex_string, List<Item>*)
00000000005cfbaa  w    F .text	0000000000000016              THD::binlog_invoker()
00000000007f1fd6  w    F .text	000000000000002b              Item_func_user::~Item_func_user()
00000000005e60e4 g     F .text	00000000000000fe              select_insert::~select_insert()
0000000000765338  w    F .text	000000000000000f              Field_new_decimal::key_type() const
00000000007f3538  w    F .text	0000000000000046              Item_func_current_user::~Item_func_current_user()
000000000081bc00 g     F .text	0000000000000041              Log_to_csv_event_handler::~Log_to_csv_event_handler()
000000000098074f g     F .text	0000000000000424              _mi_read_cache
00000000006e7a7a g     F .text	0000000000000166              login_connection(THD*)
00000000007e200c  w    F .text	000000000000002b              Item_func_numgeometries::~Item_func_numgeometries()
000000000070cfd8  w    F .text	0000000000000025              List<set_var_base>::push_front(set_var_base*)
00000000005cfdcc  w    F .text	000000000000002b              select_subselect::~select_subselect()
00000000012c9a20 g     O .data	00000000000000b0              my_charset_utf8_slovak_uca_ci
0000000000982922  w    F .text	000000000000000f              ha_heap::max_supported_keys() const
000000000083e9e2 g     F .text	00000000000002dc              Create_file_log_event::Create_file_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000005aba21 g     F .text	0000000000000524              setup_fields(THD*, Item**, List<Item>&, enum_mark_columns, List<Item>*, bool)
0000000000663161 g     F .text	0000000000000997              fill_schema_processlist(THD*, TABLE_LIST*, Item*)
00000000007bade0  w    F .text	0000000000000040              Item_func_udf_decimal::Item_func_udf_decimal(st_udf_func*, List<Item>&)
0000000000849a3a  w    F .text	000000000000004b              ignored_error_code(int)
0000000000b70258 g     F .text	0000000000000060              ha_partition::disable_indexes(unsigned int)
00000000008ff849 g     F .text	0000000000000194              safe_mutex_unlock
0000000001087000  w    O .data.rel.ro	0000000000000030              vtable for Create_func_rand
000000000065bea2  w    F .text	000000000000001b              I_List<COND_CMP>::I_List()
0000000000797c26  w    F .text	0000000000000051              Item_ref::real_item()
00000000007bfb26  w    F .text	0000000000000041              Create_func_inet_ntoa::~Create_func_inet_ntoa()
0000000000663dec g     F .text	0000000000000013              free_status_vars()
0000000000b5c4fa g     F .text	0000000000000106              ha_tina::rnd_next(unsigned char*)
000000000079741e  w    F .text	0000000000000013              Item_decimal::check_partition_func_processor(unsigned char*)
000000000070a5e8  w    F .text	0000000000000034              Sys_var_double::global_save_default(THD*, set_var*)
00000000008ba094 g     F .text	000000000000014a              Unique::Unique(int (*)(void*, void const*, void const*), void*, unsigned int, unsigned long long)
00000000007d9d39  w    F .text	000000000000003d              my_decimal_ceiling(unsigned int, my_decimal const*, my_decimal*)
000000000080fd14 g     F .text	0000000000000028              Item_func_sysdate_local::fix_length_and_dec()
0000000000806089 g     F .text	0000000000000126              group_concat_key_cmp_with_distinct
0000000000b7548c g     F .text	000000000000022a              lf_hash_insert
000000000074d352 g     F .text	000000000000003d              Field_new_decimal::pack_length_from_metadata(unsigned int)
00000000008f22d3 g     F .text	0000000000000417              my_dir
0000000000837c76 g     F .text	0000000000000165              Start_log_event_v3::do_apply_event(Relay_log_info const*)
0000000000558e20  w    F .text	0000000000000060              String::c_ptr_safe()
00000000007bf54a  w    F .text	0000000000000041              Create_func_from_unixtime::~Create_func_from_unixtime()
0000000000808e5c  w    F .text	0000000000000014              Item_avg_field::result_type() const
00000000013707d4 g     O .bss	0000000000000004              key_structure_guard_mutex
0000000000796702  w    F .text	0000000000000042              Hybrid_type_traits_integer::add(Hybrid_type*, Field*) const
0000000000785fe0 g     F .text	000000000000019c              Item_param::set_time(st_mysql_time*, enum_mysql_timestamp_type, unsigned int)
00000000007b9a52  w    F .text	0000000000000038              Item_sum_udf_str::Item_sum_udf_str(st_udf_func*)
000000000070f903 g     F .text	0000000000000890              reload_acl_and_cache(THD*, unsigned long, TABLE_LIST*, int*)
0000000001371be4 g     O .bss	0000000000000004              abort_slave_event_count
000000000078cf2c g     F .text	0000000000000056              Item_string::save_in_field(Field*, bool)
0000000000873320  w    F .text	000000000000001d              TABLE_READ_PLAN::TABLE_READ_PLAN()
000000000073cc10  w    F .text	0000000000000025              List<Item_func_set_user_var>::push_back(Item_func_set_user_var*)
000000000069459a g     F .text	0000000000000149              Table_triggers_list::prepare_record1_accessors(TABLE*)
000000000065979e  w    F .text	000000000000008e              Item_string::Item_string(charset_info_st*, Derivation)
00000000007657ea  w    F .text	000000000000003d              Field_medium::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
0000000000698570  w    F .text	000000000000003d              Handle_old_incorrect_sql_modes_hook::Handle_old_incorrect_sql_modes_hook(char*)
000000000057b262 g     F .text	000000000000001b              sp_cache::~sp_cache()
000000000079a572  w    F .text	0000000000000046              Item_outer_ref::~Item_outer_ref()
00000000013865d8 g     O .bss	0000000000000008              Create_func_load_file::s_singleton
00000000007be77c  w    F .text	0000000000000026              Create_func_dayofmonth::~Create_func_dayofmonth()
00000000012c9ea0 g     O .data	00000000000000b0              my_charset_utf8_sinhala_uca_ci
00000000007bb3c2  w    F .text	000000000000004a              Item_func_md5::Item_func_md5(Item*)
0000000000889dcc  w    F .text	0000000000000025              List<sp_instr_opt_meta>::push_front(sp_instr_opt_meta*)
000000000070cf30  w    F .text	0000000000000026              List<set_var_base>::List(List<set_var_base> const&)
00000000006d2ebe g     F .text	00000000000002b2              partition_info::fix_column_value_functions(THD*, p_elem_val*, unsigned int)
0000000000797696  w    F .text	0000000000000072              Item_static_string_func::Item_static_string_func(char const*, char const*, unsigned int, charset_info_st*, Derivation)
0000000000856eca g     F .text	00000000000000a5              SQL_SELECT::cleanup()
00000000007c1bc8  w    F .text	000000000000002d              Create_func_sha2::Create_func_sha2()
000000000076571e  w    F .text	000000000000000f              Field_medium::type() const
00000000010ee8f0 g     O .data	0000000000000001              wild_many
000000000068e927 g     F .text	0000000000000098              mysql_trans_prepare_alter_copy_data(THD*)
000000000070929c  w    F .text	0000000000000283              Sys_var_charptr::do_check(THD*, set_var*)
00000000010c59c8  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_descendantbyname
00000000007bbd52  w    F .text	0000000000000044              Item_func_like_range::fix_length_and_dec()
0000000001375f00 g     O .bss	0000000000000060              my_locale_es_GT
0000000000800572 g     F .text	0000000000000104              Item_sum_sum::val_int()
00000000007ae306  w    F .text	000000000000000f              Ge_creator::eqne_op() const
0000000000b68df4 g     F .text	00000000000002d5              ha_partition::rnd_next(unsigned char*)
0000000000559278  w    F .text	0000000000000026              Ne_creator::~Ne_creator()
00000000007d2812 g     F .text	0000000000000192              Item_func_set_user_var::fix_fields(THD*, Item**)
00000000006f9f4c  w    F .text	0000000000000046              Check_table_statement::~Check_table_statement()
00000000007c1fe2  w    F .text	000000000000002d              Create_func_srid::Create_func_srid()
00000000012b6080 g     O .data	0000000000000600              page014data
000000000056b2a0  w    F .text	000000000000002b              PolyLock_mutex::rdlock()
00000000007da85c  w    F .text	0000000000000011              Item_func_int_div::func_name() const
00000000007601e4 g     F .text	00000000000000d7              Field_bit::get_key_image(unsigned char*, unsigned int, Field::imagetype)
00000000005a0f2d g     F .text	0000000000001279              open_table(THD*, TABLE_LIST*, st_mem_root*, Open_table_context*)
00000000005591e2  w    F .text	0000000000000026              Eq_creator::~Eq_creator()
00000000013866b8 g     O .bss	0000000000000008              Create_func_rand::s_singleton
00000000007387a8  w    F .text	0000000000000076              Item_func_locate::Item_func_locate(Item*, Item*)
00000000006f9afe g     F .text	00000000000001d9              Optimize_table_statement::execute(THD*)
00000000007814b2 g     F .text	000000000000004c              Item_case_expr::Item_case_expr(unsigned int)
00000000007f2b3a  w    F .text	000000000000002b              Item_func_uncompressed_length::~Item_func_uncompressed_length()
00000000007c2a9c  w    F .text	0000000000000041              Create_func_uuid::~Create_func_uuid()
000000000136cc6c g     O .bss	0000000000000004              select_errors
00000000005596a2  w    F .text	000000000000001f              Buffered_logs::~Buffered_logs()
00000000007f2d26  w    F .text	000000000000002b              Item_load_file::~Item_load_file()
000000000059c0b1 g     F .text	00000000000000ac              table_def_init()
00000000008409ea g     F .text	0000000000000279              Execute_load_query_log_event::pack_info(Protocol*)
00000000010efe30 g     O .data	0000000000000001              flag_events_waits_current
00000000007f51ac g     F .text	0000000000000036              Item_subselect::const_item() const
00000000005d08b8  w    F .text	000000000000001b              List_iterator<Alter_drop>::List_iterator()
00000000007b0daa  w    F .text	0000000000000056              cmp_item_sort_string::~cmp_item_sort_string()
00000000007b031e  w    F .text	000000000000000f              Item_cond_xor::functype() const
00000000006bf508 g     F .text	0000000000000033              Time_zone_utc::TIME_to_gmt_sec(st_mysql_time const*, char*) const
00000000007e3212  w    F .text	000000000000000f              Item_row::type() const
000000000088f74a g     F .text	0000000000000249              Gis_polygon::interior_ring_n(unsigned int, String*) const
00000000006bf426 g     F .text	0000000000000050              Time_zone_system::TIME_to_gmt_sec(st_mysql_time const*, char*) const
0000000000829328 g     F .text	00000000000006ae              MYSQL_BIN_LOG::write(THD*, st_io_cache*, Log_event*, bool)
000000000073c738  w    F .text	0000000000000038              Alter_table_statement::Alter_table_statement(LEX*)
0000000000559028  w    F .text	000000000000001b              base_list::~base_list()
00000000007ba832  w    F .text	0000000000000038              Item_func_bit_length::Item_func_bit_length(Item*)
00000000006f61c2  w    F .text	0000000000000026              MDL_object_lock::~MDL_object_lock()
00000000005f1b5a  w    F .text	000000000000002e              List<char>::List(List<char> const&, st_mem_root*)
000000000093e6fd g     F .text	00000000000004b2              _mi_rec_check
0000000000606b4c  w    F .text	000000000000000f              Item_func::is_expensive()
00000000005b120a  w    F .text	0000000000000041              Lock_tables_prelocking_strategy::~Lock_tables_prelocking_strategy()
0000000001088020  w    O .data.rel.ro	0000000000000030              vtable for Create_func_crc32
0000000000920340 g     F .text	00000000000000a3              ha_myisam::check_if_incompatible_data(st_ha_create_information*, unsigned int)
00000000005bf57c  w    F .text	0000000000000016              Query_cache::disable_query_cache()
0000000000b79df6 g     F .text	000000000000009d              _db_keyword_
00000000006b3c88 g     F .text	0000000000000027              next_io_size(unsigned long)
000000000090eb28 g     F .text	0000000000000046              table_events_waits_summary_by_thread_by_event_name::make_file_row(PFS_thread*, PFS_file_class*)
00000000005d17fa  w    F .text	000000000000001b              Alter_drop::~Alter_drop()
00000000007b9dea  w    F .text	0000000000000040              Item_func_signed::Item_func_signed(Item*)
00000000006e8d2e g     F .text	00000000000001e0              PROF_MEASUREMENT::set_label(char const*, char const*, char const*, unsigned int)
00000000007aceb2 g     F .text	000000000000009a              Item_equal::add(Item*, Item_field*)
0000000001386468 g     O .bss	0000000000000008              Create_func_dimension::s_singleton
0000000000b9b29f g     F .text	0000000000000038              decimal_div
00000000006bb684  w    F .text	0000000000000052              View_creation_ctx::~View_creation_ctx()
000000000090bff6  w    F .text	000000000000002d              PFS_readonly_acl::PFS_readonly_acl()
0000000000ba7135 g     F .text	0000000000000075              vio_pending
0000000000759586 g     F .text	00000000000001ae              Field_varstring::store(char const*, unsigned int, charset_info_st*)
000000000083bbcc g     F .text	0000000000000103              Intvar_log_event::pack_info(Protocol*)
00000000007fc6ec  w    F .text	0000000000000017              Query_arena::is_stmt_prepare_or_first_sp_execute() const
00000000007ed55a g     F .text	0000000000000115              Item_func_rpad::fix_length_and_dec()
00000000005c9c80 g     F .text	0000000000000051              Security_context::set_external_user(char const*)
00000000008057c0 g     F .text	0000000000000083              Item_udf_sum::add()
000000000060746e  w    F .text	0000000000000015              THD::get_internal_handler()
000000000080944c  w    F .text	00000000000000b6              Item_sum_hybrid::Item_sum_hybrid(THD*, Item_sum_hybrid*)
00000000007f1a84  w    F .text	0000000000000011              Item_func_ucase::func_name() const
0000000001218cc0 g     O .data	0000000000000100              to_lower_keybcs2_bin
00000000007a965c g     F .text	0000000000000142              Item_cond::transform(Item* (Item::*)(unsigned char*), unsigned char*)
0000000000771197 g     F .text	000000000000011f              get_new_handler(TABLE_SHARE*, st_mem_root*, handlerton*)
0000000000798e76  w    F .text	00000000000000b5              Item_default_value::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
00000000007c2394  w    F .text	0000000000000041              Create_func_tan::~Create_func_tan()
00000000005afa68  w    F .text	0000000000000052              Item_int::Item_int(long long, unsigned int)
00000000006780f0  w    F .text	0000000000000090              Show_create_error_handler::Show_create_error_handler(THD*, TABLE_LIST*)
00000000007671ba  w    F .text	0000000000000094              Field_enum::Field_enum(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned int, st_typelib*, charset_info_st*)
00000000006f57aa  w    F .text	000000000000001e              MDL_object_lock::needs_notification(MDL_ticket const*) const
0000000000b6dd7c g     F .text	0000000000000120              ha_partition::estimate_rows_upper_bound()
000000000075b604 g     F .text	000000000000009d              Field_blob::store(double)
00000000009829a0  w    F .text	0000000000000059              ha_heap::read_time(unsigned int, unsigned int, unsigned long long)
000000000077b5ec  w    F .text	0000000000000050              Ha_trx_info::is_trx_read_write() const
0000000000817cce  w    F .text	0000000000000046              Item_func_curtime_local::~Item_func_curtime_local()
00000000007bbe80  w    F .text	0000000000000042              Item_func_like_range_max::Item_func_like_range_max(Item*, Item*)
00000000007c2268  w    F .text	0000000000000041              Create_func_substr_index::~Create_func_substr_index()
00000000007fc412  w    F .text	0000000000000037              Item_in_subselect::get_cond_guard(int)
0000000001386448 g     O .bss	0000000000000008              Create_func_decode::s_singleton
0000000000872128  w    F .text	000000000000000f              QUICK_ROR_UNION_SELECT::reverse_sorted()
0000000000738292  w    F .text	0000000000000048              Item_real_func::Item_real_func(List<Item>&)
00000000007d0572 g     F .text	0000000000000112              Item_func_udf_float::val_real()
0000000000650552 g     F .text	00000000000002ad              count_field_types(st_select_lex*, TMP_TABLE_PARAM*, List<Item>&, bool)
0000000000690c72  w    F .text	000000000000001b              List<partition_element>::List()
0000000000899bee  w    F .text	00000000000000dd              field_str::avg(String*, unsigned long long)
00000000007daba6  w    F .text	0000000000000011              Item_func_cot::func_name() const
00000000007dbeaa  w    F .text	000000000000001a              Interruptible_wait::Interruptible_wait(THD*)
0000000000566ab4  w    F .text	0000000000000035              Item::get_date_result(st_mysql_time*, unsigned int)
0000000001375d80 g     O .bss	0000000000000060              my_locale_es_CO
0000000000676de5 g     F .text	00000000000000a2              hton_fill_schema_table(THD*, TABLE_LIST*, Item*)
00000000005690a0  w    F .text	000000000000001b              I_List<i_string_pair>::~I_List()
000000000058a5fc g     F .text	00000000000003f2              check_grant_all_columns(THD*, unsigned long, Field_iterator_table_ref*)
000000000061bd58  w    F .text	0000000000000038              Protocol_binary::Protocol_binary(THD*)
0000000001069ec8  w    O .data.rel.ro	0000000000000020              vtable for delayed_row
00000000008aba6e g     F .text	0000000000000062              check_range_capable_PF(TABLE*)
00000000007cdb32 g     F .text	00000000000002ce              Item_func_locate::val_int()
000000000073c036  w    F .text	0000000000000072              sp_instr_jump_if_not::sp_instr_jump_if_not(unsigned int, sp_pcontext*, Item*, unsigned int, LEX*)
000000000083340c g     F .text	000000000000014d              Query_log_event::pack_info(Protocol*)
000000000061860c g     F .text	0000000000000035              Server_runnable::~Server_runnable()
00000000006f0416 g     F .text	0000000000000032              register_trans_observer
00000000008084a6  w    F .text	000000000000005a              Field::is_null_in_record(unsigned char const*)
0000000000767a0e  w    F .text	0000000000000026              Item::max_char_length() const
00000000007e0d1a  w    F .text	000000000000003a              String::qs_append(char)
00000000006b4798 g     F .text	0000000000000135              update_create_info_from_table(st_ha_create_information*, TABLE*)
00000000007973c2  w    F .text	000000000000003e              Item_decimal::neg()
00000000007c181e  w    F .text	0000000000000026              Create_func_reverse::~Create_func_reverse()
00000000012c0080 g     O .data	0000000000001000              page032data
000000000075c970 g     F .text	00000000000000bb              Field_blob::is_equal(Create_field*)
000000000077f558 g     F .text	0000000000000123              Item_ident::Item_ident(THD*, Item_ident*)
000000000077bb7c  w    F .text	000000000000001a              handler::records_in_range(unsigned int, st_key_range*, st_key_range*)
0000000000c1dde0 g     O .rodata	0000000000000050              Query_tables_list::binlog_stmt_unsafe_errcode
00000000007edfe6 g     F .text	0000000000000427              Item_func_conv::val_str(String*)
0000000000781e2a g     F .text	00000000000000a3              Item_name_const::print(String*, enum_query_type)
000000000120b920 g     O .data	0000000000000100              sort_order_latin7_estonian_cs
000000000136fe80 g     O .bss	0000000000000008              opt_ssl_capath
00000000006b95ec g     F .text	00000000000000d1              TABLE::add_read_columns_used_by_index(unsigned int)
00000000007c21a4  w    F .text	000000000000002d              Create_func_strcmp::Create_func_strcmp()
000000000087220c  w    F .text	000000000000000f              QUICK_GROUP_MIN_MAX_SELECT::get_type()
0000000000808904  w    F .text	000000000000003a              Aggregator_simple::setup(THD*)
0000000000739d9a  w    F .text	0000000000000040              Item_func_ltrim::Item_func_ltrim(Item*, Item*)
0000000001385c10 g     O .bss	0000000000000004              MYSQLdebug
00000000008bfe2e g     F .text	00000000000000a3              xml_value
000000000077c07c  w    F .text	000000000000000f              handler::reset()
00000000005cf83c  w    F .text	0000000000000020              Locked_tables_list::~Locked_tables_list()
00000000010876f0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_issimple
000000000138cc28 g     O .bss	0000000000000008              file_lost
0000000000812846 g     F .text	00000000000000d0              Item_datetime_typecast::val_str(String*)
0000000000908276  w    F .text	000000000000003b              PFS_atomic::store_32(int volatile*, int)
00000000005cb07c g     F .text	000000000000005b              xid_cache_delete(st_xid_state*)
00000000005d721e  w    F .text	000000000000002d              Drop_table_error_handler::Drop_table_error_handler()
00000000005cf85c  w    F .text	000000000000004c              Ha_data::Ha_data()
00000000013716e0 g     O .bss	0000000000000010              all_sys_vars
0000000000765604  w    F .text	000000000000000f              Field_short::pack_length() const
0000000000b5dece  w    F .text	000000000000001a              ha_tina::index_flags(unsigned int, unsigned int, bool) const
000000000121c720 g     O .data	0000000000000100              to_upper_latin1_spanish_ci
00000000005eb8ef g     F .text	00000000000000ff              MYSQLlex(YYSTYPE*, THD*)
000000000065a06e  w    F .text	000000000000000f              Item_func_trig_cond::functype() const
000000000090b1f6 g     F .text	000000000000003a              PFS_internal_schema_access::lookup(char const*) const
0000000000000000       F *UND*	0000000000000000              readdir64@@GLIBC_2.2.5
00000000010ef190 g     O .data	0000000000000008              pfs_engine_name
00000000006df990  w    F .text	0000000000000028              Relay_log_info::notify_group_relay_log_name_update()
00000000007c099e  w    F .text	000000000000002d              Create_func_ltrim::Create_func_ltrim()
00000000007dd23a  w    F .text	0000000000000046              Item_func_shift_left::~Item_func_shift_left()
0000000000795b60 g     F .text	000000000000002b              Item_type_holder::val_int()
000000000087f19d g     F .text	0000000000000141              sp_prepare_func_item(THD*, Item**)
000000000057a4b2  w    F .text	0000000000000097              THD::clear_error()
000000000105d950 g     O .data.rel.ro	0000000000000008              THD::DEFAULT_WHERE
0000000000565732  w    F .text	000000000000001b              List<Item>::List()
000000000078b5aa g     F .text	000000000000005d              Item_field::set_no_const_sub(unsigned char*)
00000000012cbee0 g     O .data	00000000000000b0              my_charset_utf16_icelandic_uca_ci
000000000090dbfc g     F .text	0000000000000027              table_events_waits_history_long::reset_position()
00000000006f0a24  w    F .text	000000000000001b              Binlog_relay_IO_delegate::Binlog_relay_IO_delegate()
00000000005bf4f8  w    F .text	000000000000001a              Query_cache_result::parent(Query_cache_block*)
000000000136e3c0 g     O .bss	0000000000000008              mysqld_unix_port
00000000007bfeaa  w    F .text	0000000000000041              Create_func_is_used_lock::~Create_func_is_used_lock()
00000000007da99e  w    F .text	0000000000000013              Item_func_neg::check_partition_func_processor(unsigned char*)
000000000083b25a g     F .text	0000000000000160              Rotate_log_event::pack_info(Protocol*)
00000000007f5692 g     F .text	0000000000000079              Item_maxmin_subselect::cleanup()
00000000008fd9bc g     F .text	000000000000064e              thr_lock
000000000098efb2  w    F .text	000000000000000f              ha_myisammrg::max_supported_key_length() const
00000000007be60e  w    F .text	0000000000000041              Create_func_datediff::~Create_func_datediff()
00000000005ce6b0  w    F .text	000000000000002d              Protocol_binary::Protocol_binary()
00000000008f8895 g     F .text	00000000000000d7              my_safe_print_str
000000000083e6aa g     F .text	000000000000015c              Create_file_log_event::Create_file_log_event(THD*, sql_exchange*, char const*, char const*, List<Item>&, bool, enum_duplicates, bool, unsigned char*, unsigned int, bool)
00000000013956a0 g     O .bss	0000000000000004              mi_key_mutex_MI_CHECK_print_msg
0000000000784ec2 g     F .text	000000000000005b              Item_decimal::val_int()
00000000006baa74  w    F .text	0000000000000044              View_creation_ctx::View_creation_ctx(THD*)
00000000005ee202 g     F .text	00000000000001ba              st_select_lex_unit::exclude_level()
000000000089329e  w    F .text	0000000000000095              MBR::add_xy(double, double)
00000000005981a8  w    F .text	000000000000008d              base_list::disjoin(base_list*)
000000000070df24  w    F .text	000000000000003c              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::session_update(THD*, set_var*)
00000000008184e4  w    F .text	0000000000000046              Item_func_to_seconds::~Item_func_to_seconds()
00000000010c5630  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_ancestorbyname
00000000007d9ea0  w    F .text	0000000000000077              Field_double::Field_double(unsigned int, bool, char const*, unsigned char)
00000000007c1a9c  w    F .text	000000000000002d              Create_func_sec_to_time::Create_func_sec_to_time()
00000000006d21b8 g     F .text	0000000000000206              partition_info::add_column_value()
00000000007cb70a g     F .text	0000000000000074              Item_func_floor::real_op()
00000000010dfce0 g     O .data	0000000000000078              variables_fields_info
000000000090ed9a g     F .text	0000000000000010              table_events_waits_summary_by_instance::delete_all_rows()
0000000001212340 g     O .data	0000000000000101              ctype_cp1250_croatian_ci
00000000007ba948  w    F .text	000000000000007b              Item_func_locate::Item_func_locate(Item*, Item*, Item*)
000000000070d5dc  w    F .text	0000000000000043              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::session_save_default(THD*, set_var*)
0000000000984ced g     F .text	0000000000000460              hp_rb_make_key
00000000008150a2 g     F .text	00000000000000e5              Item_func_str_to_date::val_int()
0000000000756718 g     F .text	000000000000009b              Field_newdate::cmp(unsigned char const*, unsigned char const*)
0000000000798f3c  w    F .text	000000000000002e              Item_insert_value::save_in_field(Field*, bool)
00000000005aee24  w    F .text	0000000000000016              MDL_key::db_name() const
00000000005b08d6  w    F .text	0000000000000039              I_P_List<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::I_P_List()
000000000055956a  w    F .text	0000000000000035              Unknown_key_hook::~Unknown_key_hook()
00000000007498da g     F .text	00000000000000f4              Field_num::val_decimal(my_decimal*)
0000000000606d8c  w    F .text	0000000000000038              Item_bool_func::Item_bool_func(Item*)
00000000010996a0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_unsigned
00000000007655b6  w    F .text	0000000000000022              Field_short::key_type() const
00000000005b83c2 g     F .text	00000000000002d8              Query_cache::allocate_data_chain(Query_cache_block**, unsigned long, Query_cache_block*, char)
00000000007bde1c  w    F .text	0000000000000026              Create_func_char_length::~Create_func_char_length()
000000000077dafa  w    F .text	000000000000001b              Host_entry::Host_entry()
0000000000796f54  w    F .text	000000000000000f              Item_field::get_monotonicity_info() const
00000000010c2048  w    O .data.rel.ro	00000000000000a0              vtable for QUICK_SELECT_DESC
00000000008b18c1 g     F .text	00000000000005ef              mysql_unpack_partition(THD*, char*, unsigned int, TABLE*, bool, handlerton*, bool*)
00000000005ead50 g     F .text	000000000000004a              Yacc_state::~Yacc_state()
00000000006f2056 g     F .text	000000000000004f              MDL_request::init(MDL_key const*, enum_mdl_type, enum_mdl_duration)
0000000000820a96 g     F .text	0000000000000069              MYSQL_LOG::MYSQL_LOG()
0000000001211f40 g     O .data	0000000000000100              to_lower_macce_bin
00000000005f1a2c  w    F .text	000000000000001b              List<Item_func_match>::List()
00000000009870e7 g     F .text	0000000000000337              heap_rnext
0000000000873d6a  w    F .text	0000000000000026              List_iterator<QUICK_RANGE>::List_iterator(List<QUICK_RANGE>&)
00000000005e8b20  w    F .text	0000000000000012              st_select_lex::first_inner_unit()
0000000000799c80  w    F .text	0000000000000074              List<Item>::delete_elements()
000000000070a298  w    F .text	00000000000001ba              Sys_var_double::Sys_var_double(char const*, char const*, int, long, unsigned long, CMD_LINE, double, double, double, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
000000000081863a  w    F .text	0000000000000046              Item_func_period_add::~Item_func_period_add()
0000000000678516  w    F .text	000000000000001a              I_List<thread_info>::head()
00000000007d1cc4 g     F .text	00000000000000bd              Item_func_last_insert_id::val_int()
0000000000000000       F *UND*	0000000000000000              deflateEnd
00000000008a9210  w    F .text	0000000000000026              List_iterator_fast<XML_TAG>::List_iterator_fast(List<XML_TAG>&)
0000000000607528  w    F .text	00000000000000bc              select_create::select_create(TABLE_LIST*, st_ha_create_information*, Alter_info*, List<Item>&, enum_duplicates, bool, TABLE_LIST*)
000000000106b7b8  w    O .data.rel.ro	0000000000000358              vtable for Item_return_date_time
00000000007851fe g     F .text	0000000000000066              Item_float::val_decimal(my_decimal*)
0000000000000000       F *UND*	0000000000000000              trunc@@GLIBC_2.2.5
0000000000b6bad6 g     F .text	0000000000000378              ha_partition::handle_ordered_next(unsigned char*, bool)
0000000000787ea0 g     F .text	0000000000000015              Item_param::get_out_param_info() const
00000000007be676  w    F .text	000000000000002d              Create_func_dayname::Create_func_dayname()
00000000005f1f38  w    F .text	0000000000000025              List_iterator<Create_field>::replace(Create_field*)
00000000007b62f4 g     F .text	000000000000007e              Create_func_sleep::create(THD*, Item*)
0000000000698848  w    F .text	000000000000001b              List_iterator<unsigned long long>::remove()
0000000000764ff0  w    F .text	0000000000000046              Field_str::~Field_str()
00000000005f4a2c g     F .text	0000000000000120              do_handle_bootstrap(THD*)
000000000067ae1c g     F .text	000000000000050b              well_formed_copy_nchars(charset_info_st*, char*, unsigned int, charset_info_st*, char const*, unsigned int, unsigned int, char const**, char const**, char const**)
00000000007a665c g     F .text	000000000000002b              in_string::~in_string()
00000000007c1296  w    F .text	0000000000000041              Create_func_period_add::~Create_func_period_add()
00000000008c77f3  w    F .text	0000000000000010              Events::get_db_repository()
00000000008a594e g     F .text	000000000000045e              READ_INFO::READ_INFO(int, unsigned int, charset_info_st*, String&, String&, String&, String&, int, bool, bool)
00000000005bcdd2 g     F .text	00000000000003c9              Query_cache::bins_dump()
000000000065c38c  w    F .text	0000000000000026              List_iterator_fast<Item_field>::List_iterator_fast(List<Item_field>&)
00000000007db5fa  w    F .text	0000000000000011              Item_func_set_user_var::func_name() const
000000000083f6dc g     F .text	00000000000003f7              Append_block_log_event::do_apply_event(Relay_log_info const*)
00000000007b16ac  w    F .text	0000000000000046              Item_func_nop_all::~Item_func_nop_all()
000000000091040a g     F .text	00000000000000c1              table_file_summary_by_instance::rnd_next()
000000000083bb66 g     F .text	0000000000000066              Rotate_log_event::do_shall_skip(Relay_log_info*)
0000000000745b2e g     F .text	0000000000000014              mysql_num_fields
000000000136efe0 g     O .bss	0000000000000008              character_set_filesystem
00000000007d07d0 g     F .text	0000000000000098              Item_func_udf_int::val_str(String*)
00000000007e4a9e g     F .text	0000000000000259              Item_func_aes_encrypt::val_str(String*)
000000000079bb56  w    F .text	0000000000000025              List_iterator<Cached_item>::replace(List<Cached_item>&)
00000000008fff9c g     F .text	000000000000003b              rw_pr_destroy
000000000070e096  w    F .text	0000000000000223              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000008a8f96  w    F .text	000000000000001e              READ_INFO::set_io_cache_arg(void*)
0000000001370854 g     O .bss	0000000000000004              key_relay_log_info_log_space_cond
00000000010c2430  w    O .data.rel.ro	00000000000000a0              vtable for QUICK_INDEX_MERGE_SELECT
000000000070c3fe  w    F .text	000000000000001f              Sys_var_session_special::session_save_default(THD*, set_var*)
00000000007b0270  w    F .text	000000000000000f              Item_cond_or::functype() const
0000000000677a16 g     F .text	0000000000000054              IS_internal_schema_access::check(unsigned long, unsigned long*) const
00000000007da48a  w    F .text	0000000000000014              Item_func_numhybrid::result_type() const
00000000008492e8  w    F .text	0000000000000030              Create_file_log_event::get_type_code()
00000000006590de  w    F .text	00000000000000a9              Field_varstring::Field_varstring(unsigned int, bool, char const*, TABLE_SHARE*, charset_info_st*)
000000000083e604 g     F .text	0000000000000046              Slave_log_event::do_apply_event(Relay_log_info const*)
0000000000603ec2 g     F .text	00000000000000fe              st_select_lex::set_lock_for_tables(thr_lock_type)
000000000090c312  w    F .text	0000000000000041              PFS_check_intact::~PFS_check_intact()
000000000086e994 g     F .text	000000000000027f              QUICK_GROUP_MIN_MAX_SELECT::QUICK_GROUP_MIN_MAX_SELECT(TABLE*, JOIN*, bool, bool, bool, st_key_part_info*, unsigned int, unsigned int, unsigned int, st_key*, unsigned int, double, unsigned long long, unsigned int, unsigned char*, st_mem_root*, bool)
00000000008998d8  w    F .text	000000000000005d              Procedure::~Procedure()
00000000008997a8  w    F .text	0000000000000053              Item_proc::set(char const*)
00000000008c42f4 g     F .text	000000000000037e              Event_scheduler::start(int*)
00000000007e33ba  w    F .text	0000000000000046              Item_row::~Item_row()
0000000000b80d9d g     F .text	000000000000006d              my_numchars_mb
000000000086a762 g     F .text	00000000000001ec              QUICK_RANGE_SELECT_GEOM::get_next()
00000000005a588c g     F .text	00000000000000cc              DML_prelocking_strategy::handle_routine(THD*, Query_tables_list*, Sroutine_hash_entry*, sp_head*, bool*)
0000000000678a42  w    F .text	000000000000001b              List_iterator_fast<st_mysql_lex_string>::rewind()
00000000007be54a  w    F .text	000000000000002d              Create_func_date_format::Create_func_date_format()
00000000006590de  w    F .text	00000000000000a9              Field_varstring::Field_varstring(unsigned int, bool, char const*, TABLE_SHARE*, charset_info_st*)
00000000007fa532 g     F .text	0000000000000880              subselect_single_select_engine::exec()
000000000082dd06  w    F .text	0000000000000041              TC_LOG_MMAP::~TC_LOG_MMAP()
000000000073a23a  w    F .text	0000000000000038              Item_func_collation::Item_func_collation(Item*)
00000000012cb1c0 g     O .data	00000000000000b0              my_charset_utf32_slovenian_uca_ci
000000000120ed20 g     O .data	0000000000000101              ctype_armscii8_general_ci
000000000059ae3e  w    F .text	000000000000002d              Dummy_error_handler::Dummy_error_handler()
0000000000694058 g     F .text	00000000000003b7              Table_triggers_list::drop_trigger(THD*, TABLE_LIST*, String*)
0000000000b5f49e g     F .text	00000000000000ff              ha_partition::ha_partition(handlerton*, partition_info*)
00000000007c0270  w    F .text	0000000000000026              Create_func_last_insert_id::~Create_func_last_insert_id()
000000000077de08 g     F .text	0000000000000041              Hybrid_type_traits::fix_length_and_dec(Item*, Item*) const
000000000056b4c6  w    F .text	000000000000002b              set_var_collation_client::~set_var_collation_client()
0000000000698066  w    F .text	0000000000000041              Default_object_creation_ctx::~Default_object_creation_ctx()
00000000007dade8  w    F .text	0000000000000011              Item_func_ascii::func_name() const
00000000005cf0f0  w    F .text	000000000000001b              List<set_var_base>::~List()
0000000000ba3a13 g     F .text	00000000000000e3              my_snprintf
00000000013736d0 g     O .bss	0000000000000004              sql_slave_skip_counter
00000000008d7a8f g     F .text	000000000000005c              setup_io_cache
00000000007f1f5e  w    F .text	0000000000000032              Item_func_user::save_in_field(Field*, bool)
000000000073a32a  w    F .text	000000000000006a              Item_func_spatial_collection::Item_func_spatial_collection(List<Item>&, Geometry::wkbType, Geometry::wkbType)
00000000008c48de g     F .text	00000000000002b5              Event_scheduler::execute_top(Event_queue_element_for_exec*)
0000000000768088  w    F .text	0000000000000046              Field_date::~Field_date()
00000000007b2f6c g     F .text	0000000000000050              Create_func_cos::create(THD*, Item*)
00000000007dc28c  w    F .text	000000000000006a              Item_func_match::~Item_func_match()
0000000000905810  w    F .text	00000000000000a1              handler::~handler()
000000000136cc53 g     O .bss	0000000000000001              opt_noacl
00000000007bce10  w    F .text	0000000000000040              Item_func_timediff::Item_func_timediff(Item*, Item*)
0000000000798e2a  w    F .text	000000000000002b              Item_field::~Item_field()
000000000087da70 g     F .text	0000000000000068              sp_update_stmt_used_routines(THD*, Query_tables_list*, SQL_I_List<Sroutine_hash_entry>*, TABLE_LIST*)
00000000007b4736 g     F .text	0000000000000050              Create_func_inet_ntoa::create(THD*, Item*)
00000000005ca260 g     F .text	000000000000004c              thd_mark_transaction_to_rollback
000000000056b1e8  w    F .text	0000000000000035              PolyLock::~PolyLock()
000000000121cf40 g     O .data	0000000000000200              to_uni_cp1250_polish_ci
0000000001375180 g     O .bss	0000000000000060              my_locale_uk_UA
0000000000658ee8  w    F .text	0000000000000077              Field_longlong::Field_longlong(unsigned int, bool, char const*, bool)
0000000001370874 g     O .bss	0000000000000004              key_COND_flush_thread_cache
00000000012b0c80 g     O .data	0000000000000600              page005data
0000000000000000       F *UND*	0000000000000000              pthread_key_create@@GLIBC_2.2.5
0000000000658b84  w    F .text	000000000000001d              st_nested_join::is_fully_covered() const
00000000007d8410 g     F .text	00000000000000f6              Item_func_bit_xor::val_int()
00000000007e1b82  w    F .text	000000000000001e              Item_func_numgeometries::fix_length_and_dec()
0000000000907cda g     F .text	000000000000004f              release_file(PFS_file*)
000000000136cc37 g     O .bss	0000000000000001              opt_secure_auth
000000000085246c  w    F .text	000000000000002b              Update_rows_log_event_old::~Update_rows_log_event_old()
0000000000000000       F *UND*	0000000000000000              pthread_attr_setscope@@GLIBC_2.2.5
00000000007bd768  w    F .text	0000000000000041              Create_func_area::~Create_func_area()
00000000005ae7ef g     F .text	0000000000000058              is_equal(st_mysql_lex_string const*, st_mysql_lex_string const*)
000000000061c1d8  w    F .text	0000000000000026              List_iterator<st_mysql_lex_string>::List_iterator(List<st_mysql_lex_string>&)
00000000007662d0  w    F .text	000000000000000f              Field_date::type() const
0000000000911f90 g     F .text	000000000000007c              table_setup_timers::rnd_pos(void const*)
00000000007c1fbc  w    F .text	0000000000000026              Create_func_sqrt::~Create_func_sqrt()
00000000006b931c g     F .text	00000000000000b7              Field_iterator_table_ref::get_natural_column_ref()
00000000007ade58  w    F .text	0000000000000046              Item_func_bit::~Item_func_bit()
00000000007fc1ae  w    F .text	000000000000001e              Item_func_not_all::set_sub_test(Item_maxmin_subselect*)
0000000000633fdc g     F .text	000000000000030e              is_indexed_agg_distinct(JOIN*, List<Item_field>*)
00000000008f59ee g     F .text	0000000000000074              my_sync_dir_by_file
00000000009138a8 g     F .text	000000000000001e              PFS_atomic::init()
00000000008fd4d2 g     F .text	000000000000003d              thr_lock_info_init
0000000000000000       F *UND*	0000000000000000              shmget@@GLIBC_2.2.5
00000000010c4640  w    O .data.rel.ro	0000000000000078              vtable for Select_materialize
0000000000796d64  w    F .text	0000000000000013              Item_num::check_partition_func_processor(unsigned char*)
00000000006bc314 g     F .text	00000000000000bc              str_to_datetime_with_warn(charset_info_st*, char const*, unsigned int, st_mysql_time*, unsigned int)
000000000136cbe0 g     O .bss	0000000000000001              opt_bin_log
00000000010d8ab0 g     O .data	0000000000000010              sym_group_common
00000000008177f8  w    F .text	000000000000002b              Item_char_typecast::~Item_char_typecast()
00000000005cea1e  w    F .text	000000000000000f              st_select_lex_node::operator delete(void*, unsigned long)
00000000007b09f8  w    F .text	0000000000000058              Item_cond_and::~Item_cond_and()
00000000007caf74 g     F .text	0000000000000099              Item_func_bit_neg::val_int()
00000000007f2ecc  w    F .text	0000000000000046              Item_func_collation::~Item_func_collation()
00000000008f8304 g     F .text	0000000000000060              queue_insert_safe
0000000000889b20  w    F .text	000000000000001b              List<sp_instr>::~List()
0000000001386368 g     O .bss	0000000000000008              Create_func_as_wkt::s_singleton
00000000005ceb3c  w    F .text	000000000000001b              List<st_udf_func>::~List()
00000000007e24b6  w    F .text	000000000000002b              Item_func_spatial_decomp::~Item_func_spatial_decomp()
00000000007f2956  w    F .text	0000000000000058              Item_func_uncompress::~Item_func_uncompress()
00000000005f1936  w    F .text	0000000000000012              Mem_root_array<st_order*, true>::capacity() const
00000000005666c0  w    F .text	000000000000004a              Item::~Item()
00000000007c2010  w    F .text	0000000000000041              Create_func_srid::~Create_func_srid()
0000000001209a80 g     O .data	0000000000000100              sort_order_swe7_swedish_ci
00000000007c22aa  w    F .text	0000000000000026              Create_func_substr_index::~Create_func_substr_index()
00000000007c1556  w    F .text	000000000000002d              Create_func_quote::Create_func_quote()
000000000089ae66  w    F .text	000000000000002b              field_real::~field_real()
0000000000659a50  w    F .text	0000000000000046              Item_func::~Item_func()
00000000007f333a  w    F .text	0000000000000058              Item_func_make_set::~Item_func_make_set()
00000000005ae847 g     F .text	00000000000001f3              open_system_tables_for_read(THD*, TABLE_LIST*, Open_tables_backup*)
0000000000b6d79e g     F .text	000000000000008c              ha_partition::keys_to_use_for_scanning()
0000000000676e87 g     F .text	00000000000000cd              init_fill_schema_files_row(TABLE*)
0000000000612a1a  w    F .text	0000000000000026              sys_var::~sys_var()
0000000000764862  w    F .text	0000000000000011              Field::charset() const
00000000008f2e0a g     F .text	000000000000004c              my_memdup
000000000056b480  w    F .text	0000000000000046              set_var_collation_client::~set_var_collation_client()
00000000007f9bb6 g     F .text	00000000000000a9              subselect_single_select_engine::subselect_single_select_engine(st_select_lex*, select_subselect*, Item_subselect*)
00000000013707c8 g     O .bss	0000000000000004              key_relay_log_info_log_space_lock
00000000007ae1c8  w    F .text	0000000000000025              Eq_creator::symbol(bool) const
000000000098dbcc g     F .text	00000000000000a1              ha_myisammrg::index_last(unsigned char*)
0000000001386810 g     O .bss	0000000000000008              Create_func_y::s_singleton
00000000007e4fe2 g     F .text	00000000000007a3              Item_func_concat::val_str(String*)
00000000007ae99e  w    F .text	000000000000000f              Item_func_lt::functype() const
00000000011562e0 g     O .data	00000000000000b0              my_charset_cp932_bin
00000000010788b0  w    O .data.rel.ro	0000000000000360              vtable for Item_copy_decimal
000000000059ae92  w    F .text	000000000000001b              List_iterator<LEX_COLUMN>::List_iterator()
0000000000ccf9e0 g     O .rodata	0000000000000100              _my_bits_nbits
000000000138cbf0 g     O .bss	0000000000000008              rwlock_max
00000000012c9120 g     O .data	00000000000000b0              my_charset_utf8_icelandic_uca_ci
0000000000904f78 g     F .text	00000000000000b3              ha_perfschema::position(unsigned char const*)
000000000057ac1a  w    F .text	0000000000000026              List_iterator_fast<MYSQL_ERROR>::List_iterator_fast(List<MYSQL_ERROR>&)
000000000137083c g     O .bss	0000000000000004              key_item_func_sleep_cond
0000000000566b5e  w    F .text	0000000000000010              Item::save_in_result_field(bool)
00000000006f5196  w    F .text	000000000000005a              MDL_key::is_equal(MDL_key const*) const
0000000000912444 g     F .text	00000000000000cc              table_mutex_instances::rnd_next()
0000000000599bc6  w    F .text	0000000000000012              ACL_PROXY_USER::get_proxied_host()
000000000075c360 g     F .text	0000000000000043              Field_blob::sort_length() const
000000000075ae0c g     F .text	00000000000000dc              Field_blob::store_length(unsigned char*, unsigned int, unsigned int, bool)
0000000000558a42  w    F .text	000000000000002b              base_ilist::base_ilist()
0000000001208f40 g     O .data	0000000000000200              to_uni_koi8r_general_ci
0000000000765f00  w    F .text	0000000000000012              Field_null::sort_string(unsigned char*, unsigned int)
0000000000798ce8  w    F .text	0000000000000031              Item_copy_float::val_int()
00000000006b93d4 g     F .text	000000000000005d              TABLE::clear_column_bitmaps()
000000000079af6e  w    F .text	0000000000000046              Item_bin_string::~Item_bin_string()
000000000056b324  w    F .text	0000000000000047              AutoWLock::AutoWLock(PolyLock*)
0000000000b5dee8  w    F .text	000000000000005e              ha_tina::scan_time()
00000000007f221a  w    F .text	0000000000000011              Item_func_repeat::func_name() const
0000000000749d7a g     F .text	00000000000000fa              Field::get_date(st_mysql_time*, unsigned int)
000000000090d988 g     F .text	00000000000001cb              table_events_waits_history::rnd_pos(void const*)
00000000006ce076  w    F .text	000000000000000b              Event_db_repository::Event_db_repository()
0000000000840884 g     F .text	0000000000000166              Execute_load_query_log_event::write_post_header_for_derived(st_io_cache*)
0000000000583f0a g     F .text	00000000000006b4              GRANT_TABLE::GRANT_TABLE(TABLE*, TABLE*)
000000000059ae06  w    F .text	0000000000000026              Silence_routine_definer_errors::~Silence_routine_definer_errors()
00000000007eb20a g     F .text	000000000000008e              Item_func_current_user::fix_fields(THD*, Item**)
00000000007b9aca  w    F .text	0000000000000038              Item_sum_udf_decimal::Item_sum_udf_decimal(st_udf_func*)
00000000013956a4 g     O .bss	0000000000000004              mi_key_mutex_MYISAM_SHARE_intern_lock
00000000007dc614  w    F .text	000000000000002b              Item_func_sleep::~Item_func_sleep()
00000000005590f8  w    F .text	000000000000001d              Comp_creator::Comp_creator()
0000000000000000       F *UND*	0000000000000000              _IO_putc@@GLIBC_2.2.5
0000000000677fec  w    F .text	0000000000000024              THD::fill_information_schema_tables()
0000000000888c01 g     F .text	0000000000000181              sp_add_to_query_tables(THD*, LEX*, char const*, char const*, thr_lock_type, enum_mdl_type)
00000000007bca3e  w    F .text	000000000000003d              Item_func_dayname::Item_func_dayname(Item*)
000000000079abb6  w    F .text	0000000000000046              Item_aggregate_ref::~Item_aggregate_ref()
00000000010eb5e0 g     O .data	0000000000000008              default_client_charset_info
000000000136e4a0 g     O .bss	0000000000000008              rpl_filter
0000000001386438 g     O .bss	0000000000000008              Create_func_dayofweek::s_singleton
0000000001394ccc g     O .bss	0000000000000004              key_THR_LOCK_isam
0000000000b79dc9 g     F .text	000000000000002d              _db_fp_
000000000059aff8  w    F .text	0000000000000026              List_iterator<st_lex_user>::init(List<st_lex_user>&)
0000000000606cf4  w    F .text	0000000000000059              Item_int_func::Item_int_func(Item*)
0000000001092190  w    O .data.rel.ro	00000000000003c0              vtable for Item_func_round
0000000000000000       F *UND*	0000000000000000              rename@@GLIBC_2.2.5
000000000080941a  w    F .text	0000000000000011              Item_sum_std::func_name() const
000000000070c7b0  w    F .text	0000000000000012              Sys_var_have::check_update_type(Item_result)
000000000097c64b g     F .text	00000000000003f5              ft_init_boolean_search
00000000007f2fb0  w    F .text	0000000000000046              Item_func_set_collation::~Item_func_set_collation()
00000000007fc9e2  w    F .text	0000000000000046              subselect_single_select_engine::~subselect_single_select_engine()
0000000000b62328 g     F .text	00000000000000fc              ha_partition::cleanup_new_partition(unsigned int)
0000000000800994 g     F .text	000000000000002b              Aggregator_distinct::~Aggregator_distinct()
000000000077afce g     F .text	0000000000000105              warn_fk_constraint_violation(THD*, TABLE*, int)
0000000000739a6e  w    F .text	0000000000000052              Item_func_concat::Item_func_concat(Item*, Item*)
0000000001376320 g     O .bss	0000000000000060              my_locale_es_VE
00000000007b0aee  w    F .text	0000000000000046              Item_func_bit_or::~Item_func_bit_or()
00000000007db2f0  w    F .text	000000000000001e              Item_func_udf_int::fix_length_and_dec()
000000000086f36e g     F .text	00000000000000b2              QUICK_GROUP_MIN_MAX_SELECT::adjust_prefix_ranges()
0000000000856b27 g     F .text	0000000000000148              imerge_list_or_tree(RANGE_OPT_PARAM*, List<SEL_IMERGE>*, SEL_TREE*)
00000000007dc724  w    F .text	0000000000000058              Item_func_release_lock::~Item_func_release_lock()
00000000007c0ee4  w    F .text	000000000000002d              Create_func_numgeometries::Create_func_numgeometries()
0000000000624912 g     F .text	0000000000000d8b              change_master(THD*, Master_info*)
000000000065b69a  w    F .text	00000000000000a4              store_key_field::copy_inner()
0000000000756804 g     F .text	000000000000002e              Field_newdate::sql_type(String&) const
0000000000798e66  w    F .text	000000000000000f              Item_default_value::used_tables() const
00000000010f1628 g     O .data	0000000000000008              myisam_test_invalid_symlink
00000000007e29ba g     F .text	0000000000000274              Item_row::fix_fields(THD*, Item**)
00000000008289f4 g     F .text	0000000000000063              MYSQL_BIN_LOG::next_file_id()
00000000005cf1fa  w    F .text	0000000000000239              LEX::~LEX()
0000000000889b74  w    F .text	000000000000001b              List<sp_instr_opt_meta>::List()
0000000001386610 g     O .bss	0000000000000008              Create_func_makedate::s_singleton
0000000000820f30 g     F .text	0000000000000149              MYSQL_QUERY_LOG::reopen_file()
000000000079787a  w    F .text	000000000000000f              Item_result_field::used_tables() const
00000000007662e0  w    F .text	000000000000000f              Field_date::match_collation_to_optimize_range() const
00000000007f3022  w    F .text	0000000000000058              Item_func_conv_charset::~Item_func_conv_charset()
000000000056aff4  w    F .text	000000000000000b              ErrConvString::~ErrConvString()
00000000010697b0  w    O .data.rel.ro	0000000000000078              vtable for select_max_min_finder_subselect
00000000006bb5ba  w    F .text	0000000000000026              List_iterator_fast<Natural_join_column>::init(List<Natural_join_column>&)
00000000007814fe g     F .text	0000000000000075              Item_case_expr::this_item()
00000000005f0f88  w    F .text	000000000000001b              st_parsing_options::st_parsing_options()
00000000006d81da  w    F .text	000000000000000b              injector::injector()
000000000089223c g     F .text	00000000000001db              Gis_geometry_collection::get_data_size() const
000000000108a758  w    O .data.rel.ro	0000000000000398              vtable for Item_func_row_count
00000000007a78b6 g     F .text	0000000000000067              cmp_item_decimal::store_value(Item*)
000000000078617c g     F .text	00000000000000e1              Item_param::set_str(char const*, unsigned long)
0000000000765694  w    F .text	000000000000007a              Field_medium::Field_medium(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, bool, bool)
00000000008169d8  w    F .text	000000000000002b              Item_typecast::~Item_typecast()
0000000001062240 g     O .data.rel.ro	00000000000005a0              charsets
0000000000687fb6 g     F .text	0000000000000701              mysql_create_like_table(THD*, TABLE_LIST*, TABLE_LIST*, st_ha_create_information*)
000000000076659a  w    F .text	000000000000000f              Field_newdate::can_be_compared_as_longlong() const
00000000007c06b0  w    F .text	000000000000002d              Create_func_locate::Create_func_locate()
000000000138e2e4 g     O .bss	0000000000000001              THR_PFS_initialized
00000000007da312  w    F .text	000000000000003e              Item_func::raise_integer_overflow()
000000000086feee g     F .text	0000000000000242              QUICK_GROUP_MIN_MAX_SELECT::next_prefix()
0000000000b6e180 g     F .text	0000000000000094              ha_partition::index_type(unsigned int)
00000000007dae5c  w    F .text	0000000000000011              Item_func_shift_left::func_name() const
000000000074d302 g     F .text	000000000000004f              Field_new_decimal::do_save_field_metadata(unsigned char*)
000000000070c7c2  w    F .text	0000000000000013              Sys_var_have::make_symbolic(void (*)(void*, unsigned long, char const*))
0000000000886a0a g     F .text	000000000000008a              sp_instr_jump_if_not::exec_core(THD*, unsigned int*)
0000000000659738  w    F .text	0000000000000066              Item_float::Item_float(double, unsigned int)
00000000007af390  w    F .text	0000000000000046              cmp_item_string::~cmp_item_string()
00000000005cffee  w    F .text	000000000000002e              List<Key>::List(List<Key> const&, st_mem_root*)
0000000000822bf6 g     F .text	0000000000000a1d              MYSQL_BIN_LOG::open(char const*, enum_log_type, char const*, cache_type, bool, unsigned long, bool, bool)
0000000000709a64  w    F .text	0000000000000026              Sys_var_charptr::~Sys_var_charptr()
0000000000b69374 g     F .text	00000000000000c9              ha_partition::rnd_pos_by_record(unsigned char*)
00000000006f05e0  w    F .text	0000000000000141              Delegate::add_observer(void*, st_plugin_int*)
000000000073ad28  w    F .text	00000000000000a7              Item_typecast::val_str(String*)
000000000056700a  w    F .text	000000000000000f              Item::result_as_longlong()
0000000000000000       F *UND*	0000000000000000              getnameinfo@@GLIBC_2.2.5
000000000073cb4a  w    F .text	000000000000001a              List<sp_label>::head()
00000000005caa22 g     F .text	000000000000005e              THD::set_query_id(long long)
000000000078ed12 g     F .text	00000000000000bb              Item_ref::Item_ref(TABLE_LIST*, Item**, char const*, bool)
00000000005cf920  w    F .text	0000000000000066              THD::st_transactions::st_transactions()
000000000138dae0 g     O .bss	0000000000000100              table_setup_consumers::m_table_lock
0000000000796eb6  w    F .text	0000000000000033              Item_field::result_type() const
0000000000873cae  w    F .text	0000000000000026              List<QUICK_RANGE>::disjoin(List<QUICK_RANGE>*)
000000000079e0d3 g     F .text	0000000000000212              get_time_value(THD*, Item***, Item**, Item*, bool*)
0000000000567be8 g     F .text	0000000000000322              Rpl_filter::tables_ok(char const*, TABLE_LIST*)
00000000007dd8bc  w    F .text	000000000000002b              Item_func_ln::~Item_func_ln()
0000000000b68784 g     F .text	0000000000000150              ha_partition::end_bulk_insert()
000000000120a9c0 g     O .data	0000000000000101              ctype_latin1_danish_ci
00000000012c4480 g     O .data	0000000000000600              page0FAdata
00000000007818bc g     F .text	000000000000002f              Item_name_const::is_null()
000000000065a020  w    F .text	000000000000004e              Item_func_trig_cond::val_int()
0000000000677efe  w    F .text	0000000000000051              Item_return_date_time::Item_return_date_time(char const*, enum_field_types)
000000000079ad86  w    F .text	000000000000002b              Item_splocal::~Item_splocal()
00000000007f38ae  w    F .text	000000000000002b              Item_func_ltrim::~Item_func_ltrim()
000000000074f854 g     F .text	0000000000000077              Field_medium::sort_string(unsigned char*, unsigned int)
00000000006abf24 g     F .text	00000000000000a5              Object_creation_ctx::set_n_backup(THD*)
00000000007ae95e  w    F .text	0000000000000040              Item_func_lt::Item_func_lt(Item*, Item*)
000000000076856e  w    F .text	0000000000000046              Field_decimal::~Field_decimal()
0000000000000000       F *UND*	0000000000000000              mallinfo@@GLIBC_2.2.5
0000000000757f7a g     F .text	00000000000000ab              Field_string::store(long long, bool)
00000000007c2bc8  w    F .text	0000000000000041              Create_func_version::~Create_func_version()
0000000001070b20  w    O .data.rel.ro	0000000000000298              vtable for Field_datetime
0000000000799320  w    F .text	000000000000000b              Item_cache::keep_array()
00000000007dab70  w    F .text	0000000000000011              Item_func_cos::func_name() const
00000000007ead3c g     F .text	0000000000000284              Item_func_sysconst::safe_charset_converter(charset_info_st*)
00000000010693c0  w    O .data.rel.ro	0000000000000028              vtable for Acl_table_intact
000000000078625e g     F .text	000000000000011e              Item_param::set_longdata(char const*, unsigned long)
00000000008e1249 g     F .text	000000000000084b              key_cache_write
0000000000889b58  w    F .text	000000000000001b              List<sp_head::bp_t>::List()
00000000005f1a64  w    F .text	000000000000001b              List<Item_outer_ref>::List()
000000000055948e  w    F .text	0000000000000041              Le_creator::~Le_creator()
000000000088958e  w    F .text	0000000000000046              sp_instr_hpop::~sp_instr_hpop()
0000000000816a14  w    F .text	0000000000000011              Item_char_typecast::func_name() const
00000000005cad54 g     F .text	0000000000000081              xid_cache_init()
00000000005f174a  w    F .text	00000000000000f5              Mem_root_array<st_order*, true>::reserve(unsigned long)
00000000005ce3e5  w    F .text	00000000000000a3              sql_rnd_with_mutex()
0000000001087930  w    O .data.rel.ro	0000000000000030              vtable for Create_func_hex
00000000005c8abe g     F .text	0000000000000073              THD::end_statement()
000000000080906e  w    F .text	000000000000002e              Item_sum_avg::func_name() const
00000000008f8a59 g     F .text	0000000000000027              my_write_stderr
00000000006d7ff6  w    F .text	00000000000000fb              Incident_log_event::Incident_log_event(THD*, Incident, st_mysql_lex_string)
00000000008e91ac g     F .text	000000000000016b              init_alloc_root
000000000077dee4 g     F .text	000000000000000d              Hybrid_type_traits_decimal::instance()
000000000080964a  w    F .text	0000000000000040              Item_sum_max::Item_sum_max(THD*, Item_sum_max*)
0000000000000000       F *UND*	0000000000000000              vsnprintf@@GLIBC_2.2.5
00000000005667ac  w    F .text	0000000000000025              Item::cast_to_int_type() const
000000000076749a  w    F .text	000000000000000f              Field_set::size_of() const
0000000000785aa2 g     F .text	000000000000004a              Item_null::val_str(String*)
00000000008086be  w    F .text	000000000000002b              Aggregator::~Aggregator()
000000000138cdd8 g     O .bss	0000000000000008              thread_class_lost
00000000010a9648  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_rtrim
000000000090545c g     F .text	000000000000010c              ha_perfschema::create(char const*, TABLE*, st_ha_create_information*)
0000000000816a38  w    F .text	0000000000000046              Item_typecast_maybe_null::~Item_typecast_maybe_null()
00000000007ba4ba  w    F .text	0000000000000038              Item_func_sign::Item_func_sign(Item*)
0000000001386818 g     O .bss	0000000000000008              Create_func_year_week::s_singleton
0000000001086910  w    O .data.rel.ro	0000000000000030              vtable for Create_func_weekday
000000000083e23e g     F .text	0000000000000158              Slave_log_event::write(st_io_cache*)
000000000090e068  w    F .text	000000000000001a              pfs_lock::is_populated()
0000000000659a0e  w    F .text	000000000000002d              Item_sum::aggregator_add()
00000000007f1aba  w    F .text	0000000000000011              Item_func_substr::func_name() const
000000000082cc24  w    F .text	000000000000005a              Log_to_file_event_handler::Log_to_file_event_handler()
000000000077edbe g     F .text	000000000000016c              Item::Item()
00000000008afb65 g     F .text	00000000000001f4              get_partition_id_list(partition_info*, unsigned int*, long long*)
00000000007f1ecc  w    F .text	0000000000000058              Item_func_user::val_str(String*)
0000000000737ba4  w    F .text	0000000000000038              Item_sum_int::Item_sum_int(Item*)
0000000000818472  w    F .text	0000000000000046              Item_func_dayofyear::~Item_func_dayofyear()
0000000000738960  w    F .text	0000000000000040              Item_func_bit_and::Item_func_bit_and(Item*, Item*)
00000000007bb850  w    F .text	0000000000000029              Item_func_encrypt::constructor_helper()
00000000005d19a8  w    F .text	0000000000000046              select_exists_subselect::~select_exists_subselect()
00000000007379ec  w    F .text	00000000000000bd              Item_sum::Item_sum(Item*)
00000000007af9e0  w    F .text	0000000000000014              Item_func_case::result_type() const
00000000007841da g     F .text	000000000000006c              Item_field::val_int_result()
0000000000857844 g     F .text	0000000000000192              QUICK_INDEX_MERGE_SELECT::~QUICK_INDEX_MERGE_SELECT()
0000000000796fba  w    F .text	0000000000000013              Item_field::check_partition_func_processor(unsigned char*)
0000000000767d1a  w    F .text	000000000000003d              Create_field::~Create_field()
00000000005c2cb0 g     F .text	0000000000000115              THD::change_user()
000000000079b6e0 g     F .text	0000000000000119              Cached_item_decimal::cmp()
000000000088fe2a g     F .text	00000000000000d4              Gis_multi_point::get_data_size() const
000000000078741a g     F .text	0000000000000223              Item_param::clone_item()
000000000079bbf4  w    F .text	0000000000000056              Cached_item_decimal::~Cached_item_decimal()
00000000007c41d0 g     F .text	00000000000000ee              Item_func::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
0000000000ba7d89 g     F .text	0000000000000024              vio_ssl_blocking
00000000005aff3a  w    F .text	0000000000000040              LEX::which_check_option_applicable()
000000000059fdfc g     F .text	0000000000000089              find_temporary_table(THD*, char const*, char const*)
000000000065c9cc  w    F .text	0000000000000046              store_key_const_item::~store_key_const_item()
0000000001087300  w    O .data.rel.ro	0000000000000030              vtable for Create_func_monthname
00000000007dfa94 g     F .text	0000000000000385              Item_func_spatial_rel::val_int()
00000000010f6410 g     O .data	0000000000000004              partition_storage_engine
0000000000767156  w    F .text	000000000000000f              Field_geom::size_of() const
00000000012132a0 g     O .data	0000000000000100              sort_order_latin1_general_cs
00000000008a928c  w    F .text	0000000000000026              List_iterator<XML_TAG>::List_iterator(List<XML_TAG>&)
0000000000000000       F *UND*	0000000000000000              io_getevents@@LIBAIO_0.4
00000000007f3430  w    F .text	0000000000000058              Item_func_format::~Item_func_format()
00000000008897d2  w    F .text	000000000000002b              sp_instr_copen::~sp_instr_copen()
000000000088940c  w    F .text	000000000000002b              sp_instr_freturn::~sp_instr_freturn()
000000000070990e  w    F .text	0000000000000013              Sys_var_proxy_user::make_symbolic(void (*)(void*, unsigned long, char const*))
0000000000b6be4e g     F .text	00000000000001d5              ha_partition::handle_ordered_prev(unsigned char*)
000000000097ef6b g     F .text	00000000000000f0              ft_nlq_read_next
00000000005ceb04  w    F .text	000000000000001b              List<TABLE_LIST>::~List()
00000000005bf72e  w    F .text	0000000000000046              Query_cache_block::headers_len()
00000000007afc06  w    F .text	000000000000000f              Item_func_isnull::functype() const
00000000008f4c55 g     F .text	00000000000000bb              my_is_symlink
0000000000848b58  w    F .text	000000000000000b              sql_ex_info::sql_ex_info()
00000000010efe36 g     O .data	0000000000000001              flag_events_locks_summary_by_event_name
0000000000559d5a  w    F .text	0000000000000026              File_parser_dummy_hook::~File_parser_dummy_hook()
0000000001074090  w    O .data.rel.ro	0000000000000368              vtable for Item_result_field
0000000001373e60 g     O .bss	0000000000000060              my_locale_ar_JO
000000000065c1fc  w    F .text	0000000000000026              List_iterator<Item_func_match>::init(List<Item_func_match>&)
0000000000809a92  w    F .text	000000000000000f              Item_udf_sum::have_field_update() const
00000000006df2bc g     F .text	000000000000007e              Relay_log_info::cached_charset_invalidate()
0000000000817b06  w    F .text	0000000000000046              Item_func_sysdate_local::~Item_func_sysdate_local()
0000000000798d6e  w    F .text	000000000000004a              Item_copy_decimal::Item_copy_decimal(Item*)
00000000007b0830  w    F .text	0000000000000046              Item_func_like::~Item_func_like()
0000000000800736 g     F .text	0000000000000075              Item_sum_sum::val_str(String*)
00000000007bc5a8  w    F .text	000000000000004a              Item_func_dimension::Item_func_dimension(Item*)
00000000008ec435 g     F .text	0000000000000251              my_error
000000000106c1a8  w    O .data.rel.ro	0000000000000028              vtable for Signal_statement
00000000006ac07e g     F .text	000000000000004d              Default_object_creation_ctx::Default_object_creation_ctx(charset_info_st*, charset_info_st*)
00000000007377fe  w    F .text	000000000000001d              Settable_routine_parameter::Settable_routine_parameter()
00000000005f0b06  w    F .text	0000000000000014              Item_subselect::place()
00000000005afd92  w    F .text	0000000000000018              Query_tables_list::requires_prelocking()
00000000010690d0  w    O .data.rel.ro	0000000000000038              vtable for set_var_collation_client
000000000070d132  w    F .text	0000000000000013              List_iterator_fast<set_var_base>::replace(set_var_base*)
0000000000678d3e  w    F .text	0000000000000046              Item_return_date_time::~Item_return_date_time()
0000000000561aac g     F .text	00000000000000a2              Protocol::send_ok(unsigned int, unsigned int, unsigned long long, unsigned long long, char const*)
0000000000804768 g     F .text	000000000000014f              Item_sum_hybrid::min_max_update_real_field()
000000000079af06  w    F .text	0000000000000041              Hybrid_type_traits_decimal::~Hybrid_type_traits_decimal()
0000000000817a10  w    F .text	0000000000000058              Item_func_date_format::~Item_func_date_format()
000000000075c2b4 g     F .text	00000000000000ac              Field_blob::do_save_field_metadata(unsigned char*)
00000000005e9796  w    F .text	000000000000001d              I_List_iterator<Delayed_insert>::operator++(int)
00000000007ff582 g     F .text	0000000000000025              Item_sum_num::val_str(String*)
0000000000892554 g     F .text	00000000000001d3              Gis_geometry_collection::init_from_wkb(char const*, unsigned int, Geometry::wkbByteOrder, String*)
000000000120dde0 g     O .data	0000000000000100              sort_order_latin2_croatian_ci
000000000056a6cc g     F .text	000000000000024c              set_var::check(THD*)
0000000000871e46  w    F .text	0000000000000035              QUICK_SELECT_I::~QUICK_SELECT_I()
0000000000837ddc g     F .text	00000000000005e0              Format_description_log_event::Format_description_log_event(unsigned char, char const*)
00000000007913ca g     F .text	00000000000001f3              Item_default_value::save_in_field(Field*, bool)
00000000006f9eda  w    F .text	0000000000000046              Analyze_table_statement::~Analyze_table_statement()
00000000007b0d38  w    F .text	0000000000000046              cmp_item_int::~cmp_item_int()
00000000006bb258  w    F .text	0000000000000025              List_iterator<String>::replace(String*)
000000000076570e  w    F .text	000000000000000f              Field_medium::result_type() const
00000000005699d2 g     F .text	0000000000000029              sys_var::session_value_ptr(THD*, st_mysql_lex_string*)
000000000138c6a0 g     O .bss	0000000000000200              home_dir_buff
00000000007a41b0 g     F .text	00000000000000b8              Item_func_if::val_real()
000000000077e60a g     F .text	00000000000000e1              Item::val_string_from_decimal(String*)
000000000081799e  w    F .text	0000000000000046              Item_func_from_unixtime::~Item_func_from_unixtime()
00000000010ae5f8  w    O .data.rel.ro	0000000000000090              vtable for subselect_uniquesubquery_engine
00000000008ccd4a  w    F .text	0000000000000046              Truncate_statement::~Truncate_statement()
0000000000b8006d g     F .text	000000000000018c              my_caseup_mb
000000000067802e  w    F .text	0000000000000035              ACL_internal_schema_access::~ACL_internal_schema_access()
00000000007c06b0  w    F .text	000000000000002d              Create_func_locate::Create_func_locate()
000000000086639e g     F .text	0000000000000081              SEL_ARG::find_range(SEL_ARG*)
000000000082b770 g     F .text	00000000000001a4              TC_LOG_MMAP::sync()
0000000000887366 g     F .text	0000000000000090              sp_instr_hreturn::print(String*)
00000000008cb3fe  w    F .text	0000000000000046              Alter_table_repair_partition_statement::~Alter_table_repair_partition_statement()
00000000005eac42 g     F .text	000000000000010d              lex_end(LEX*)
000000000090edaa g     F .text	000000000000003f              table_events_waits_summary_by_instance::table_events_waits_summary_by_instance()
00000000007f3022  w    F .text	0000000000000058              Item_func_conv_charset::~Item_func_conv_charset()
00000000005c8ea8 g     F .text	00000000000001b2              Statement_map::insert(THD*, Statement*)
0000000001395240 g     O .bss	0000000000000070              THR_LOCK_malloc
00000000007641d8  w    F .text	000000000000009a              Field::eq(Field*)
0000000000811384 g     F .text	00000000000000b9              Item_extract::print(String*, enum_query_type)
000000000082db3e  w    F .text	00000000000000b6              binlog_cache_data::truncate(unsigned long long)
0000000000780eac g     F .text	000000000000008c              Item_sp_variable::val_real()
000000000090f364  w    F .text	0000000000000026              table_all_instr::~table_all_instr()
00000000007fc8fe  w    F .text	0000000000000046              subselect_indexsubquery_engine::~subselect_indexsubquery_engine()
00000000006badc8  w    F .text	000000000000001b              SQL_CRYPT::~SQL_CRYPT()
00000000010efa20 g     O .data	0000000000000010              table_setup_timers::m_field_def
000000000121a340 g     O .data	0000000000000200              to_uni_latin5_bin
0000000001215040 g     O .data	0000000000000200              to_uni_cp1256_general_ci
00000000005aef1a  w    F .text	000000000000002a              MDL_savepoint::MDL_savepoint(MDL_ticket*, MDL_ticket*)
00000000010c6f58  w    O .data.rel.ro	0000000000000398              vtable for Item_func_xpath_sum
00000000008252da g     F .text	00000000000001e9              MYSQL_BIN_LOG::register_purge_index_entry(char const*)
00000000007d96ac g     F .text	00000000000000b7              Item_func_sp::field_type() const
00000000007daabc  w    F .text	0000000000000011              Item_func_exp::func_name() const
00000000006c9d1e g     F .text	0000000000000044              Event_queue_element::mark_last_executed(THD*)
00000000009119de g     F .text	0000000000000052              table_setup_instruments::make_row(PFS_instr_class*)
000000000090f5b6 g     F .text	0000000000000028              table_ews_global_by_event_name::create()
00000000006fad43 g     F .text	0000000000000299              trans_savepoint(THD*, st_mysql_lex_string)
000000000094b6e3 g     F .text	00000000000001fc              mi_setup_functions
000000000067a00c g     F .text	00000000000000ba              String::append_with_prefill(char const*, unsigned int, unsigned int, char)
00000000006784d6  w    F .text	0000000000000026              I_List<thread_info>::push_back(thread_info*)
000000000083c638 g     F .text	00000000000000fe              Xid_log_event::pack_info(Protocol*)
000000000080909c  w    F .text	000000000000002a              Item_sum_avg::cleanup()
000000000079c984 g     F .text	000000000000006e              Item_func_not_all::empty_underlying_subquery()
00000000005d03aa  w    F .text	000000000000002d              List<Key_part_spec>::push_back(Key_part_spec*, st_mem_root*)
00000000007dcaea  w    F .text	000000000000006a              Item_func_find_in_set::~Item_func_find_in_set()
00000000007982a0  w    F .text	0000000000000046              Item_direct_ref::~Item_direct_ref()
0000000000784778 g     F .text	00000000000000b5              Item_int::Item_int(char const*, unsigned int)
00000000013864a8 g     O .bss	0000000000000008              Create_func_exp::s_singleton
00000000009063df g     F .text	00000000000000cc              find_per_thread_rwlock_class_wait_stat(PFS_thread*, PFS_rwlock_class*)
0000000000558cfe  w    F .text	0000000000000023              Bitmap<64u>::Bitmap(unsigned int)
00000000012652e0 g     O .data	0000000000000100              pl20
00000000007bc9a2  w    F .text	0000000000000040              Item_func_yearweek::Item_func_yearweek(Item*, Item*)
00000000007c217e  w    F .text	0000000000000026              Create_func_str_to_date::~Create_func_str_to_date()
00000000007665ba  w    F .text	000000000000007b              Field_time::Field_time(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
00000000005d0c1c  w    F .text	000000000000001b              List_iterator<Alter_column>::List_iterator()
000000000080a4da  w    F .text	0000000000000046              Item_std_field::~Item_std_field()
000000000089063e g     F .text	00000000000001bc              Gis_multi_line_string::init_from_wkt(Gis_read_stream*, String*)
00000000006011e6 g     F .text	00000000000000a6              check_global_access(THD*, unsigned long)
00000000010ca500  w    O .data.rel.ro	0000000000000048              vtable for table_setup_consumers
0000000000cd4d70 g     O .rodata	0000000000000014              sha_const_key
0000000000795b34 g     F .text	000000000000002b              Item_type_holder::val_real()
00000000007bff12  w    F .text	000000000000002d              Create_func_isclosed::Create_func_isclosed()
00000000005d7e38  w    F .text	000000000000004c              select_union::select_union()
00000000010692d0  w    O .data.rel.ro	0000000000000078              vtable for Heartbeat_log_event
0000000000b7934d g     F .text	000000000000026c              _db_dump_
000000000070ae7c  w    F .text	0000000000000162              Sys_var_set::Sys_var_set(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
000000000065c0c6  w    F .text	000000000000001a              List<Item_func_match>::head_ref()
0000000001386538 g     O .bss	0000000000000008              Create_func_ifnull::s_singleton
0000000001071fc8  w    O .data.rel.ro	0000000000000290              vtable for Field_float
00000000006129e4  w    F .text	0000000000000035              sys_var::~sys_var()
000000000077db15 g     F .text	0000000000000100              unireg_init(unsigned long)
00000000005ba12a g     F .text	00000000000000fc              Query_cache::exclude_from_free_memory_list(Query_cache_block*)
000000000079663c  w    F .text	0000000000000026              Hybrid_type_traits::~Hybrid_type_traits()
00000000007c0198  w    F .text	0000000000000041              Create_func_last_day::~Create_func_last_day()
0000000000598dde  w    F .text	000000000000001b              List<LEX_COLUMN>::~List()
000000000098d92a g     F .text	00000000000000bc              ha_myisammrg::index_read_last_map(unsigned char*, unsigned char const*, unsigned long)
00000000008cd14c g     F .text	00000000000000b9              Gis_read_stream::check_next_symbol(char)
0000000000567080  w    F .text	0000000000000039              Item_basic_constant::Item_basic_constant()
0000000000798b5e  w    F .text	0000000000000028              Item_copy_int::val_int()
00000000005ce4fc  w    F .text	0000000000000031              xid_t::length()
000000000089976a  w    F .text	000000000000003d              Item_proc::Item_proc(char const*)
0000000000801308 g     F .text	00000000000000cf              Item_sum_avg::val_real()
0000000001386788 g     O .bss	0000000000000008              Create_func_to_days::s_singleton
00000000006bbb69 g     F .text	0000000000000242              calc_week(st_mysql_time*, unsigned int, unsigned int*)
00000000005983ea  w    F .text	0000000000000066              base_list_iterator::replace(void*)
0000000000894c9d g     F .text	000000000000001b              free_string(String*)
000000000056682a  w    F .text	000000000000000f              Item::get_tmp_table_field()
00000000007bd4bc  w    F .text	0000000000000026              Create_func_abs::~Create_func_abs()
000000000079fd0c g     F .text	00000000000000e5              Arg_comparator::compare_int_signed()
00000000005c347f g     F .text	0000000000000006              non-virtual thunk to THD::~THD()
0000000000612b5c  w    F .text	000000000000000e              sys_var_pluginvar::cast_pluginvar()
00000000008939a6  w    F .text	000000000000002c              Gis_polygon::dimension(unsigned int*, char const**) const
0000000000739d3e  w    F .text	000000000000005c              Item_func_trim::Item_func_trim(Item*)
000000000087e6c8  w    F .text	0000000000000094              Stored_routine_creation_ctx::create_backup_ctx(THD*) const
000000000089c0f2  w    F .text	000000000000002b              Select_materialize::~Select_materialize()
00000000006589a5  w    F .text	000000000000001f              my_decimal_get_binary_size(unsigned int, unsigned int)
000000000093f5d0 g     F .text	00000000000004ab              _mi_read_dynamic_record
000000000085736a g     F .text	0000000000000214              QUICK_RANGE_SELECT::~QUICK_RANGE_SELECT()
0000000000000000       F *UND*	0000000000000000              chown@@GLIBC_2.2.5
00000000007398fe  w    F .text	000000000000004d              Item_str_func::Item_str_func(Item*, Item*, Item*)
00000000007dc48a  w    F .text	0000000000000071              Item_func_get_user_var::~Item_func_get_user_var()
00000000005d1b70  w    F .text	0000000000000046              select_send::~select_send()
0000000000b7454c g     F .text	000000000000003d              lf_dynarray_destroy
00000000008f4eaa g     F .text	00000000000000b9              my_is_same_file
0000000000817ffe  w    F .text	0000000000000046              Item_func_dayname::~Item_func_dayname()
00000000008897fe  w    F .text	0000000000000046              sp_instr_cclose::~sp_instr_cclose()
000000000136a6e0 g     O .data	00000000000000b0              my_charset_utf8_bin
000000000082cb14  w    F .text	0000000000000017              TC_LOG_DUMMY::unlog(unsigned long, unsigned long long)
0000000000876b2d g     F .text	0000000000000194              setup_procedure(THD*, st_order*, select_result*, List<Item>&, int*)
00000000005bfa14  w    F .text	00000000000000a4              Query_cache_query::unlock_writing()
00000000007fc350  w    F .text	0000000000000025              Item_singlerow_subselect::element_index(unsigned int)
00000000006f146c g     F .text	000000000000008a              Deadlock_detection_visitor::enter_node(MDL_context*)
000000000089aefc  w    F .text	000000000000002b              field_str::~field_str()
00000000006b848e g     F .text	00000000000000f0              Field_iterator_table::create_item(THD*)
00000000007c9964 g     F .text	0000000000000039              Item_func_mod::fix_length_and_dec()
00000000007dd072  w    F .text	0000000000000046              Item_func_floor::~Item_func_floor()
00000000006f2152 g     F .text	000000000000005d              MDL_wait::MDL_wait()
000000000095eb11 g     F .text	00000000000001b2              _mi_cmp_static_record
00000000007ddb22  w    F .text	0000000000000046              Item_func_mul::~Item_func_mul()
00000000010df020 g     O .data	0000000000000118              table_constraints_fields_info
000000000070856a  w    F .text	0000000000000013              Warning_info::error_count() const
00000000008c09c4  w    F .text	0000000000000081              Item_nodeset_func::Item_nodeset_func(Item*, String*)
000000000088420e g     F .text	000000000000012c              sp_head::backpatch(sp_label*)
00000000007bab38  w    F .text	000000000000002d              Item_func_last_insert_id::Item_func_last_insert_id()
00000000007bb134  w    F .text	0000000000000040              Item_func_strcmp::Item_func_strcmp(Item*, Item*)
0000000000000000       F *UND*	0000000000000000              __assert_fail@@GLIBC_2.2.5
00000000007f24c0  w    F .text	0000000000000011              Item_func_inet_ntoa::func_name() const
00000000007c6880 g     F .text	000000000000027b              Item_func_signed::val_int_from_str(int*)
00000000007981e2  w    F .text	000000000000003b              Item_ref::has_subquery() const
00000000007add8a  w    F .text	0000000000000046              Item_func_numhybrid::~Item_func_numhybrid()
0000000000698338  w    F .text	0000000000000043              sp_head::set_creation_ctx(Stored_program_creation_ctx*)
00000000005b04a0  w    F .text	0000000000000012              Open_table_context::start_of_statement_svp() const
000000000057985c g     F .text	000000000000011b              rotate_relay_log(Master_info*)
00000000006dfa1e  w    F .text	0000000000000041              MYSQL_BIN_LOG::~MYSQL_BIN_LOG()
000000000081772e  w    F .text	0000000000000046              Item_datetime_typecast::~Item_datetime_typecast()
00000000007ba0a2  w    F .text	0000000000000040              Item_func_log::Item_func_log(Item*, Item*)
00000000008f1a9d g     F .text	0000000000000063              test_if_hard_path
0000000001394cd0 g     O .bss	0000000000000004              key_THR_LOCK_open
0000000000762714 g     F .text	0000000000000bb9              make_field(TABLE_SHARE*, unsigned char*, unsigned int, unsigned char*, unsigned char, unsigned int, enum_field_types, charset_info_st*, Field::geometry_type, Field::utype, st_typelib*, char const*)
00000000008c277a  w    F .text	000000000000002b              Item_xpath_cast_bool::~Item_xpath_cast_bool()
00000000007ce5e2 g     F .text	00000000000000be              Item_func_ascii::val_int()
00000000007cbcd5 g     F .text	0000000000000242              my_double_round(double, long long, bool, bool)
00000000010ca058  w    O .data.rel.ro	0000000000000028              vtable for PFS_editable_acl
0000000000768a22 g     F .text	000000000000010e              set_field_to_null(Field*)
0000000000659738  w    F .text	0000000000000066              Item_float::Item_float(double, unsigned int)
00000000005f1400  w    F .text	000000000000002c              LEX::push_context(Name_resolution_context*)
00000000007c14ee  w    F .text	0000000000000041              Create_func_pow::~Create_func_pow()
00000000007be964  w    F .text	000000000000002d              Create_func_degrees::Create_func_degrees()
000000000064e5f8 g     F .text	000000000000034b              make_unireg_sortorder(st_order*, unsigned int*, st_sort_field*)
0000000000579fe2  w    F .text	00000000000000f8              MYSQL_BIN_LOG::harvest_bytes_written(unsigned long long*)
000000000098b27a g     F .text	0000000000000090              ha_myisammrg::ha_myisammrg(handlerton*, TABLE_SHARE*)
00000000005679bc  w    F .text	0000000000000046              Item_return_int::~Item_return_int()
000000000091fb36 g     F .text	0000000000000069              ha_myisam::store_lock(THD*, st_thr_lock_data**, thr_lock_type)
00000000005ae05a g     F .text	0000000000000324              tdc_remove_table(THD*, enum_tdc_remove_table_type, char const*, char const*, bool)
00000000006e1809 g     F .text	00000000000000e2              end_master_info(Master_info*)
00000000006f5a1a  w    F .text	0000000000000039              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >::I_P_List()
0000000001370850 g     O .bss	0000000000000004              key_relay_log_info_data_cond
00000000007fb954 g     F .text	0000000000000016              subselect_union_engine::uncacheable()
00000000008806d6 g     F .text	0000000000000288              sp_head::~sp_head()
00000000007e2638  w    F .text	0000000000000046              Item_func_as_wkb::~Item_func_as_wkb()
000000000108aaf0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_is_used_lock
00000000007778fe g     F .text	000000000000003e              handler::ha_drop_table(char const*)
0000000000606a58  w    F .text	000000000000000f              Item_func::functype() const
00000000007daa90  w    F .text	000000000000002b              Item_dec_func::~Item_dec_func()
0000000000760b0a g     F .text	00000000000001b2              Field_bit::set_default()
00000000007b0cc6  w    F .text	0000000000000046              cmp_item_real::~cmp_item_real()
0000000001387da0 g     O .bss	0000000000000020              Geometry::bad_geometry_data
000000000060669d  w    F .text	0000000000000027              dec_thread_running()
00000000007db6f8  w    F .text	000000000000000f              Item_user_var_as_out_param::type() const
0000000000000000       F *UND*	0000000000000000              pthread_attr_setstacksize@@GLIBC_2.2.5
000000000070d1c8  w    F .text	000000000000002c              List_iterator_fast<set_var_base>::sublist(List<set_var_base>&, unsigned int)
0000000000858330 g     F .text	0000000000000029              QUICK_ROR_INTERSECT_SELECT::push_quick_back(QUICK_RANGE_SELECT*)
00000000007baf86  w    F .text	0000000000000057              Item_master_pos_wait::Item_master_pos_wait(Item*, Item*, Item*)
000000000074f254 g     F .text	0000000000000167              Field_medium::val_int()
00000000005668ac  w    F .text	0000000000000027              Item::val_int_result()
000000000084583e g     F .text	000000000000004b              Write_rows_log_event::Write_rows_log_event(char const*, unsigned int, Format_description_log_event const*)
0000000000899bbe  w    F .text	0000000000000018              field_str::get_min_arg(String*)
0000000000765a3c  w    F .text	000000000000000f              Field_longlong::result_type() const
00000000007bc686  w    F .text	000000000000004a              Item_func_numgeometries::Item_func_numgeometries(Item*)
000000000054ccc8 g     F .text	00000000000000be              unireg_abort
00000000006e02ce g     F .text	0000000000000107              Master_info::~Master_info()
00000000008170e8  w    F .text	000000000000001b              Item_func_microsecond::fix_length_and_dec()
0000000000784ccc g     F .text	000000000000008d              Item_decimal::Item_decimal(char const*, my_decimal const*, unsigned int, unsigned int)
00000000008c17e4  w    F .text	0000000000000019              Item_nodeset_context_cache::val_nodeset(String*)
0000000000606716  w    F .text	0000000000000049              Create_field::Create_field()
0000000000809bea  w    F .text	0000000000000040              Item_sum_udf_int::Item_sum_udf_int(THD*, Item_sum_udf_int*)
00000000006f17d6 g     F .text	00000000000000b9              MDL_map::destroy()
00000000005c063a g     F .text	0000000000000150              foreign_key_prefix(Key*, Key*)
000000000061c21c  w    F .text	0000000000000026              List_iterator<Item_param>::List_iterator(List<Item_param>&)
00000000007cc084 g     F .text	00000000000001c0              Item_func_round::int_op()
0000000000870130 g     F .text	000000000000045b              QUICK_GROUP_MIN_MAX_SELECT::next_min_in_range()
00000000005f031a g     F .text	00000000000004a5              binlog_unsafe_map_init()
00000000007e4fba g     F .text	0000000000000028              Item_func_aes_decrypt::fix_length_and_dec()
00000000007c1d8a  w    F .text	000000000000002d              Create_func_sleep::Create_func_sleep()
00000000007c0c24  w    F .text	0000000000000041              Create_func_master_pos_wait::~Create_func_master_pos_wait()
0000000000709888  w    F .text	0000000000000033              Sys_var_proxy_user::global_save_default(THD*, set_var*)
00000000007a051c g     F .text	000000000000002e              Item_func_truth::fix_length_and_dec()
000000000073ae4e  w    F .text	0000000000000038              Item_date_typecast::Item_date_typecast(Item*)
00000000010c2390  w    O .data.rel.ro	00000000000000a0              vtable for QUICK_ROR_INTERSECT_SELECT
00000000008934e2  w    F .text	0000000000000013              Geometry::start_point(String*) const
00000000007bf9a6  w    F .text	0000000000000026              Create_func_greatest::~Create_func_greatest()
00000000010ca828  w    O .data.rel.ro	0000000000000468              vtable for ha_myisam
000000000070ca8e  w    F .text	00000000000000d6              Sys_var_tz::Sys_var_tz(char const*, char const*, int, long, unsigned long, CMD_LINE, Time_zone**, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
0000000000000000       F *UND*	0000000000000000              calloc@@GLIBC_2.2.5
000000000057b9bb g     F .text	00000000000001f0              acl_init(bool)
000000000106ca08  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_max_user_conn
0000000000809aa2  w    F .text	000000000000000b              Item_udf_sum::reset_field()
0000000000739668  w    F .text	000000000000008c              Item_func_regex::Item_func_regex(Item*, Item*)
00000000007dc322  w    F .text	0000000000000046              Item_func_inet_aton::~Item_func_inet_aton()
0000000000873bc0  w    F .text	0000000000000025              List<QUICK_RANGE>::push_back(QUICK_RANGE*)
000000000089ab24  w    F .text	00000000000000c3              analyse::~analyse()
00000000007adff6  w    F .text	00000000000000ab              Arg_comparator::cleanup()
00000000007f2b66  w    F .text	0000000000000058              Item_func_quote::~Item_func_quote()
000000000098e89e g     F .text	00000000000002d4              ha_myisammrg::create(char const*, TABLE*, st_ha_create_information*)
0000000000ba5515 g     F .text	0000000000000012              my_xml_error_string
0000000001208e40 g     O .data	0000000000000100              sort_order_koi8r_general_ci
00000000006bc279 g     F .text	000000000000009b              str_to_datetime(charset_info_st*, char const*, unsigned int, st_mysql_time*, unsigned int, int*)
00000000007b4786 g     F .text	0000000000000050              Create_func_inet_aton::create(THD*, Item*)
000000000083e806 g     F .text	00000000000000a6              Create_file_log_event::write_data_body(st_io_cache*)
000000000074b5a4 g     F .text	00000000000000e7              Field_decimal::val_real()
00000000005d09c2  w    F .text	000000000000001a              List_iterator<Alter_drop>::ref()
0000000000759d28 g     F .text	0000000000000191              Field_varstring::val_decimal(my_decimal*)
00000000007bf87a  w    F .text	0000000000000026              Create_func_get_lock::~Create_func_get_lock()
00000000005c52d8 g     F .text	00000000000000bc              select_to_file::send_eof()
00000000007088b4  w    F .text	000000000000011a              Sys_var_typelib::Sys_var_typelib(char const*, char const*, int, long, CMD_LINE, enum_mysql_show_type, char const**, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000006ebdd2 g     F .text	00000000000001f4              Event_parse_data::init_ends(THD*)
000000000070a58c  w    F .text	000000000000002b              Sys_var_double::check_update_type(Item_result)
00000000007bd3e4  w    F .text	0000000000000041              Create_sp_func::~Create_sp_func()
0000000000750f66 g     F .text	00000000000000cd              Field_real::pack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000007be7d0  w    F .text	0000000000000041              Create_func_dayofweek::~Create_func_dayofweek()
000000000136f7c0 g     O .bss	0000000000000070              LOCK_error_messages
000000000061c166  w    F .text	000000000000001d              Server_runnable::Server_runnable()
0000000000798db8  w    F .text	000000000000002b              Item_copy_decimal::val_decimal(my_decimal*)
0000000000815778  w    F .text	000000000000001e              Item_func_period_diff::fix_length_and_dec()
0000000000b757c6 g     F .text	0000000000000102              lf_hash_search
0000000000811d06 g     F .text	0000000000000128              Item_char_typecast::eq(Item const*, bool) const
00000000005ce8ba  w    F .text	0000000000000016              Query_cache_tls::Query_cache_tls()
0000000000b6a0da g     F .text	00000000000000d9              ha_partition::index_read_last_map(unsigned char*, unsigned char const*, unsigned long)
00000000005c1e0a g     F .text	00000000000000a8              THD::handle_condition(unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
000000000098e4b8 g     F .text	000000000000000f              ha_myisammrg::lock_count() const
0000000000606ea6  w    F .text	0000000000000038              Item_func_nop_all::Item_func_nop_all(Item*)
000000000136ba40 g     O .data	00000000000000b0              my_charset_cp1250_czech_ci
000000000079ba48  w    F .text	000000000000001a              List<Cached_item>::head_ref()
0000000000566e80  w    F .text	0000000000000013              Item::register_field_in_read_map(unsigned char*)
00000000006b7c38 g     F .text	0000000000000190              TABLE_LIST::find_view_security_context(THD*)
0000000000810a70 g     F .text	000000000000006a              Item_func_convert_tz::val_int()
000000000079c62a g     F .text	0000000000000049              Eq_creator::create(Item*, Item*) const
0000000000764b48  w    F .text	0000000000000054              Field::handle_int64(unsigned char*, unsigned char const*, bool, bool)
00000000007720ba g     F .text	00000000000000e0              ha_init()
0000000000873d90  w    F .text	000000000000001b              List_iterator<QUICK_RANGE>::List_iterator()
00000000006c1bac  w    F .text	000000000000002d              Time_zone_system::Time_zone_system()
00000000007c23fc  w    F .text	000000000000002d              Create_func_time_format::Create_func_time_format()
000000000098f06c  w    F .text	000000000000001b              List<Mrg_child_def>::~List()
00000000006de764 g     F .text	00000000000000ea              Relay_log_info::close_temporary_tables()
000000000059ab3c  w    F .text	000000000000002d              Acl_table_intact::Acl_table_intact()
0000000000561cb2 g     F .text	0000000000000092              net_store_data(unsigned char*, int)
00000000010751e8  w    O .data.rel.ro	0000000000000388              vtable for Item_cache_real
00000000006b2c5a g     F .text	00000000000007e8              make_new_entry(int, unsigned char*, st_typelib*, char const*)
000000000120dce0 g     O .data	0000000000000100              to_upper_latin2_croatian_ci
0000000000000000       F *UND*	0000000000000000              strncat@@GLIBC_2.2.5
00000000009320ac g     F .text	0000000000000031              mi_static_checksum
00000000010aba48  w    O .data.rel.ro	0000000000000398              vtable for Item_func_replace
000000000078b608 g     F .text	0000000000000105              Item_field::replace_equal_field(unsigned char*)
000000000082dd6e  w    F .text	0000000000000041              Log_to_file_event_handler::~Log_to_file_event_handler()
0000000000766724  w    F .text	000000000000007b              Field_datetime::Field_datetime(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
0000000001087a50  w    O .data.rel.ro	0000000000000030              vtable for Create_func_geometry_from_wkb
00000000007aefd6  w    F .text	0000000000000040              in_longlong::create_item()
00000000009ac440  w    F .text	000000000000002b              handler_add_index::~handler_add_index()
00000000005af602  w    F .text	0000000000000045              Field_iterator_view::Field_iterator_view()
00000000007f38da  w    F .text	0000000000000058              Item_func_substr_index::~Item_func_substr_index()
00000000006d70e4 g     F .text	0000000000000016              Deferred_log_events::is_empty()
0000000000899cde  w    F .text	0000000000000017              field_str::std(String*, unsigned long long)
00000000007b4a36 g     F .text	0000000000000050              Create_func_isempty::create(THD*, Item*)
0000000000816abc  w    F .text	0000000000000011              Item_date_typecast::cast_type() const
00000000007b63c2 g     F .text	000000000000016c              Create_func_space::create(THD*, Item*)
000000000082d3b0  w    F .text	0000000000000046              Xid_log_event::~Xid_log_event()
0000000000767ec0  w    F .text	0000000000000046              Field_varstring::~Field_varstring()
00000000008c3660 g     F .text	0000000000000398              Event_worker_thread::print_warnings(THD*, Event_job_data*)
000000000121a020 g     O .data	0000000000000101              ctype_latin5_bin
000000000091713f  w    F .text	0000000000000094              aggregate_single_stat_chain(PFS_single_stat_chain*, unsigned long long)
00000000012101a0 g     O .data	0000000000000100              to_upper_macce_general_ci
00000000005d1a8c  w    F .text	0000000000000046              select_singlerow_subselect::~select_singlerow_subselect()
0000000000817c5c  w    F .text	0000000000000046              Item_func_curtime_utc::~Item_func_curtime_utc()
00000000010c13d8  w    O .data.rel.ro	0000000000000088              vtable for Execute_load_query_log_event
00000000007ff61a g     F .text	0000000000000286              Item_sum_num::fix_fields(THD*, Item**)
0000000001082788  w    O .data.rel.ro	0000000000000398              vtable for Item_func_between
0000000000816d16  w    F .text	0000000000000032              Item_time_typecast::fix_length_and_dec()
000000000107df20  w    O .data.rel.ro	0000000000000028              vtable for Cached_item_str
0000000000559760  w    F .text	0000000000000026              I_List<THD>::push_back(THD*)
0000000000886e8c g     F .text	00000000000000e1              sp_instr_hpush_jump::execute(THD*, unsigned int*)
00000000007f1c54  w    F .text	000000000000002b              Item_func_des_encrypt::fix_length_and_dec()
000000000073c444  w    F .text	000000000000004a              sp_instr_error::sp_instr_error(unsigned int, sp_pcontext*, int)
00000000005aee3a  w    F .text	0000000000000024              MDL_key::name() const
000000000138cdb8 g     O .bss	0000000000000008              rwlock_class_lost
0000000000b82954 g     F .text	0000000000000114              my_strnncoll_simple
00000000006f1641 g     F .text	0000000000000049              mdl_init()
00000000007bc0ca  w    F .text	0000000000000052              Item_func_crc32::Item_func_crc32(Item*)
000000000088829c g     F .text	0000000000000031              sp_table_key
00000000010cd920 g     O .data	0000000000000018              show_comp_option_name
0000000000887b32 g     F .text	00000000000000f4              sp_instr_cfetch::execute(THD*, unsigned int*)
00000000006bb2c0  w    F .text	000000000000001b              List_iterator<String>::remove()
000000000098a7b9 g     F .text	00000000000000a7              heap_drop_table
000000000055833a g     F .text	00000000000000f7              init_server_psi_keys()
0000000000774ae9 g     F .text	0000000000000329              ha_delete_table(THD*, handlerton*, char const*, char const*, char const*, bool)
000000000065c222  w    F .text	0000000000000025              List_iterator<Item_func_match>::replace(Item_func_match*)
000000000076483e  w    F .text	0000000000000014              Field::packed_col_length(unsigned char const*, unsigned int)
00000000008b8964 g     F .text	00000000000008f9              get_part_iter_for_interval_via_mapping(partition_info*, bool, unsigned int*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, st_partition_iter*)
000000000067a112 g     F .text	0000000000000069              String::charpos(int, unsigned int)
00000000007e1654  w    F .text	0000000000000011              Item_func_centroid::func_name() const
00000000007ae176  w    F .text	0000000000000040              Item_bool_func::Item_bool_func(THD*, Item_bool_func*)
00000000008276f0 g     F .text	000000000000011f              MYSQL_BIN_LOG::remove_pending_rows_event(THD*, bool)
0000000000b6f520 g     F .text	0000000000000073              ha_partition::final_drop_index(TABLE*)
00000000006f592a  w    F .text	000000000000003c              I_P_List<MDL_object_lock, MDL_object_lock_cache_adapter, I_P_List_counter, I_P_List_no_push_back<MDL_object_lock> >::pop_front()
00000000013952c0 g     O .bss	0000000000000070              THR_LOCK_myisam
00000000010f0f80 g     O .data	0000000000000020              ft_default_parser
00000000005cfc90  w    F .text	000000000000000b              select_result::abort_result_set()
000000000061c338  w    F .text	0000000000000056              Select_fetch_protocol_binary::~Select_fetch_protocol_binary()
00000000007fd0fc g     F .text	00000000000002eb              Item_sum::register_sum_func(THD*, Item**)
0000000000738e5e  w    F .text	0000000000000046              Item_func_istrue::~Item_func_istrue()
0000000000607142  w    F .text	000000000000000b              Lex_input_stream::~Lex_input_stream()
00000000007c210e  w    F .text	000000000000002d              Create_func_str_to_date::Create_func_str_to_date()
00000000009861a7 g     F .text	000000000000014e              heap_open
00000000005e9892  w    F .text	000000000000001a              I_List<delayed_row>::head()
00000000007dc800  w    F .text	000000000000002b              Item_func_get_lock::~Item_func_get_lock()
0000000000817f8c  w    F .text	0000000000000046              Item_func_year::~Item_func_year()
0000000000708746  w    F .text	0000000000000032              LOGGER::get_log_file_handler() const
00000000007bd18c  w    F .text	0000000000000041              Create_func_arg0::~Create_func_arg0()
0000000000987b04 g     F .text	000000000000004e              init_heap_psi_keys
0000000000799946  w    F .text	000000000000006c              Item_cache_datetime::Item_cache_datetime(enum_field_types)
0000000000709a8a  w    F .text	00000000000000d1              Sys_var_lexstring::Sys_var_lexstring(char const*, char const*, int, long, unsigned long, CMD_LINE, charset_enum, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
000000000080a2e6  w    F .text	000000000000002b              Item_variance_field::~Item_variance_field()
000000000095f8c6 g     F .text	000000000000023a              mi_unique_hash
00000000005c1436 g     F .text	0000000000000982              THD::THD()
0000000001098f40  w    O .data.rel.ro	00000000000003c8              vtable for Item_func_plus
00000000009426ac g     F .text	0000000000000193              mi_reset
0000000000709f08  w    F .text	0000000000000076              Sys_var_dbug::global_value_ptr(THD*, st_mysql_lex_string*)
00000000007f277e  w    F .text	000000000000001e              Item_func_uncompress::fix_length_and_dec()
00000000007ae782  w    F .text	000000000000000f              Item_func_equal::functype() const
0000000001086c70  w    O .data.rel.ro	0000000000000030              vtable for Create_func_strcmp
000000000136cdc0 g     O .bss	0000000000000008              flush_time
0000000000849b52  w    F .text	0000000000000046              Delete_rows_log_event::~Delete_rows_log_event()
00000000006ac68b g     F .text	00000000000002f2              alloc_table_share(TABLE_LIST*, char*, unsigned int)
0000000000739c82  w    F .text	0000000000000057              Item_func_substr::Item_func_substr(Item*, Item*, Item*)
0000000000832792 g     F .text	0000000000000468              Log_event::read_log_event(st_io_cache*, st_mysql_mutex*, Format_description_log_event const*)
000000000084ddc4 g     F .text	0000000000000133              Delete_rows_log_event_old::do_prepare_row(THD*, Relay_log_info const*, TABLE*, unsigned char const*, unsigned char const**)
00000000005e9990  w    F .text	0000000000000041              Delayed_prelocking_strategy::~Delayed_prelocking_strategy()
00000000008c28ae  w    F .text	0000000000000046              Item_func_xml_extractvalue::~Item_func_xml_extractvalue()
0000000000764790  w    F .text	0000000000000034              Field::set_image(unsigned char const*, unsigned int, charset_info_st*)
000000000083f334 g     F .text	0000000000000085              Append_block_log_event::Append_block_log_event(THD*, char const*, unsigned char*, unsigned int, bool)
0000000000799e20  w    F .text	000000000000001b              List_iterator_fast<Item_field>::List_iterator_fast()
0000000000851dec g     F .text	0000000000000098              Update_rows_log_event_old::Update_rows_log_event_old(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
0000000000847f9e g     F .text	000000000000004e              Update_rows_log_event::do_after_row_operations(Slave_reporting_capability const*, int)
00000000007be41e  w    F .text	000000000000002d              Create_func_crc32::Create_func_crc32()
000000000082b198 g     F .text	00000000000001db              TC_LOG_MMAP::get_active_from_pool()
0000000000890bc6 g     F .text	00000000000000f0              Gis_multi_line_string::get_mbr(MBR*, char const**) const
00000000006b82de g     F .text	00000000000000e5              Natural_join_column::db_name()
00000000010c9bc8  w    O .data.rel.ro	0000000000000468              vtable for ha_perfschema
0000000000606f1e  w    F .text	0000000000000086              Item_cond::Item_cond(Item*, Item*)
00000000008495b0  w    F .text	000000000000000f              Table_map_log_event::get_type_code()
00000000008732ba  w    F .text	000000000000003a              TABLE_READ_PLAN::~TABLE_READ_PLAN()
0000000000621881 g     F .text	000000000000014a              adjust_linfo_offsets(unsigned long long)
00000000007af1bc  w    F .text	000000000000000f              in_double::result_type()
00000000007dab3a  w    F .text	0000000000000011              Item_func_acos::func_name() const
000000000087f75f g     F .text	000000000000011a              sp_head::operator new(unsigned long)
000000000080fb40 g     F .text	00000000000000c6              Item_func_sysdate_local::val_str(String*)
0000000000739a6e  w    F .text	0000000000000052              Item_func_concat::Item_func_concat(Item*, Item*)
00000000008027c4 g     F .text	00000000000000e4              Item_sum_min::add()
0000000000558b60  w    F .text	000000000000003e              base_ilist::get()
00000000007814b2 g     F .text	000000000000004c              Item_case_expr::Item_case_expr(unsigned int)
00000000007f620e g     F .text	00000000000000ef              Item_exists_subselect::Item_exists_subselect(st_select_lex*)
000000000069851e  w    F .text	0000000000000051              Trigger_creation_ctx::Trigger_creation_ctx(charset_info_st*, charset_info_st*, charset_info_st*)
0000000000558d22  w    F .text	000000000000000f              Bitmap<64u>::length() const
0000000001069228  w    O .data.rel.ro	0000000000000038              vtable for PolyLock_mutex
00000000005cea94  w    F .text	000000000000001b              Name_resolution_context::~Name_resolution_context()
00000000007bda28  w    F .text	000000000000002d              Create_func_benchmark::Create_func_benchmark()
00000000007382da  w    F .text	0000000000000056              Item_func_numhybrid::Item_func_numhybrid(Item*)
00000000006598fc  w    F .text	0000000000000015              Item_sum::has_with_distinct() const
00000000005b148e  w    F .text	0000000000000076              Field_iterator_table_ref::~Field_iterator_table_ref()
000000000061aefc g     F .text	000000000000025c              Ed_connection::execute_direct(Server_runnable*)
000000000086b8ca g     F .text	000000000000025d              QUICK_INDEX_MERGE_SELECT::add_keys_and_lengths(String*, String*)
0000000001087870  w    O .data.rel.ro	0000000000000030              vtable for Create_func_instr
00000000007b31e0 g     F .text	0000000000000050              Create_func_dayname::create(THD*, Item*)
00000000007a76b8 g     F .text	0000000000000161              cmp_item_row::cmp(Item*)
00000000012cba00 g     O .data	00000000000000b0              my_charset_utf32_roman_uca_ci
000000000077b2ec  w    F .text	0000000000000012              Discrete_interval::values() const
000000000095eed0 g     F .text	0000000000000637              _mi_read_rnd_static_record
000000000073cb64  w    F .text	000000000000001a              List<sp_label>::pop()
00000000007be3b6  w    F .text	0000000000000041              Create_func_cot::~Create_func_cot()
0000000000752838 g     F .text	000000000000009a              Field_timestamp::get_auto_set_type() const
0000000000b68062 g     F .text	0000000000000379              ha_partition::truncate_partition(Alter_info*, bool*)
00000000005e6594 g     F .text	000000000000007f              select_insert::send_error(unsigned int, char const*)
00000000006e1d3e g     F .text	00000000000001cf              servers_init(bool)
00000000005c0dc4 g     F .text	0000000000000036              thd_exit_cond
00000000007f3cbc  w    F .text	000000000000002b              Item_func_replace::~Item_func_replace()
00000000007909ec g     F .text	0000000000000062              Item_direct_ref::val_real()
00000000007ae94c  w    F .text	0000000000000011              Item_func_le::func_name() const
00000000006fa8c3 g     F .text	0000000000000155              trans_rollback_implicit(THD*)
000000000075fbb2 g     F .text	000000000000021e              Field_bit::val_str(String*, String*)
0000000001386460 g     O .bss	0000000000000008              Create_func_des_encrypt::s_singleton
000000000070d018  w    F .text	000000000000001a              List<set_var_base>::head_ref()
0000000000618d00 g     F .text	00000000000000c1              Prepared_statement::cleanup_stmt()
00000000005d9b2c  w    F .text	000000000000004a              String::String(char const*, unsigned int, charset_info_st*)
00000000007db5e6  w    F .text	0000000000000014              Item_func_set_user_var::result_type() const
00000000012c9960 g     O .data	00000000000000b0              my_charset_utf8_lithuanian_uca_ci
00000000007bb016  w    F .text	000000000000004a              Item_func_is_free_lock::Item_func_is_free_lock(Item*)
0000000000777a74 g     F .text	000000000000003e              handler::ha_rename_partitions(char const*)
0000000000768418  w    F .text	0000000000000046              Field_medium::~Field_medium()
000000000065c248  w    F .text	0000000000000025              List_iterator<Item_func_match>::replace(List<Item_func_match>&)
0000000000859136 g     F .text	000000000000001a              SEL_ARG::first() const
00000000007dcf1c  w    F .text	0000000000000046              Item_func_sign::~Item_func_sign()
00000000005599e0  w    F .text	0000000000000026              I_List<i_string_pair>::push_back(i_string_pair*)
0000000000678a5e  w    F .text	000000000000001b              List<st_foreign_key_info>::List()
00000000006ebfc6 g     F .text	0000000000000102              Event_parse_data::report_bad_value(char const*, Item*)
000000000082a322 g     F .text	000000000000008e              MYSQL_BIN_LOG::signal_update()
00000000008c1030  w    F .text	0000000000000038              Item_nodeset_func_rootelement::Item_nodeset_func_rootelement(String*)
000000000120ee40 g     O .data	0000000000000100              to_lower_armscii8_general_ci
0000000000957267 g     F .text	00000000000001bf              mi_rename
0000000001395340 g     O .bss	0000000000000070              THR_LOCK_threads
000000000084942a  w    F .text	000000000000002b              Delete_file_log_event::~Delete_file_log_event()
000000000138cb88 g     O .bss	0000000000000008              locks_waited
00000000005b08ca  w    F .text	000000000000000b              I_P_List_null_counter::I_P_List_null_counter()
00000000005e8156 g     F .text	0000000000000177              select_create::send_error(unsigned int, char const*)
00000000005a3d73 g     F .text	00000000000000e4              read_lock_type_for_table(THD*, Query_tables_list*, TABLE_LIST*)
00000000007bbf56  w    F .text	0000000000000045              Item_func_export_set::Item_func_export_set(Item*, Item*, Item*)
000000000067a5c2 g     F .text	0000000000000065              String::reserve(unsigned int, unsigned int)
00000000007db63c  w    F .text	000000000000002d              Item_func_set_user_var::save_org_in_field(Field*)
0000000000690c72  w    F .text	000000000000001b              List<partition_element>::List()
00000000010efe34 g     O .data	0000000000000001              flag_events_waits_summary_by_event_name
00000000007f368e  w    F .text	0000000000000058              Item_func_encrypt::~Item_func_encrypt()
0000000000779a76 g     F .text	0000000000000164              handler::read_range_next()
000000000090512a g     F .text	00000000000000db              ha_perfschema::info(unsigned int)
00000000008f220e g     F .text	000000000000009a              my_dirend
00000000008cab4e  w    F .text	0000000000000041              Event_db_intact::~Event_db_intact()
0000000000b67084 g     F .text	00000000000000ce              ha_partition::start_stmt(THD*, thr_lock_type)
000000000081831c  w    F .text	0000000000000046              Item_func_monthname::~Item_func_monthname()
000000000081658c  w    F .text	000000000000000f              Item_func_now::result_type() const
0000000001212560 g     O .data	0000000000000100              to_upper_cp1250_croatian_ci
00000000007c2b32  w    F .text	0000000000000041              Create_func_uuid_short::~Create_func_uuid_short()
0000000000b7fec0 g     F .text	00000000000000a4              my_caseup_str_mb
000000000138cde8 g     O .bss	0000000000000008              file_class_lost
0000000000780c8a g     F .text	00000000000000f1              Item::save_in_field_no_warnings(Field*, bool)
000000000057a64a  w    F .text	000000000000001d              Slave_reporting_capability::Error::clear()
0000000000738074  w    F .text	00000000000000fb              Item_func::Item_func(Item*, Item*, Item*)
0000000000788f49 g     F .text	00000000000001b5              mark_select_range_as_dependent(THD*, st_select_lex*, st_select_lex*, Field*, Item*, Item_ident*)
000000000057ab16  w    F .text	000000000000002b              Append_block_log_event::~Append_block_log_event()
00000000007bb62c  w    F .text	0000000000000038              Item_func_lcase::Item_func_lcase(Item*)
0000000000764f02  w    F .text	000000000000000f              Field_str::result_type() const
00000000007cd9fe g     F .text	000000000000009e              Item_func_char_length::val_int()
00000000010c96a8  w    O .data.rel.ro	0000000000000398              vtable for Item_xml_str_func
0000000000618540 g     F .text	0000000000000069              Select_fetch_protocol_binary::send_data(List<Item>&)
000000000136cc32 g     O .bss	0000000000000001              use_temp_pool
00000000013953c0 g     O .bss	0000000000000070              THR_LOCK_myisam_mmap
000000000073b34c  w    F .text	0000000000000015              Lex_input_stream::get_cpp_tok_end()
00000000007c2e62  w    F .text	0000000000000026              Create_func_x::~Create_func_x()
00000000006196ae g     F .text	000000000000010c              Prepared_statement::set_parameters(String*, unsigned char*, unsigned char*)
00000000007b300c g     F .text	0000000000000050              Create_func_crc32::create(THD*, Item*)
00000000008c22ac  w    F .text	000000000000002b              Item_nodeset_func_childbyname::~Item_nodeset_func_childbyname()
00000000006f1ffa g     F .text	000000000000005b              MDL_request::init(MDL_key::enum_mdl_namespace, char const*, char const*, enum_mdl_type, enum_mdl_duration)
0000000000565d3c g     F .text	0000000000000370              register_slave(THD*, unsigned char*, unsigned int)
0000000000776218 g     F .text	00000000000008a9              handler::print_error(int, int)
0000000000739b2a  w    F .text	0000000000000062              Item_func_insert::Item_func_insert(Item*, Item*, Item*, Item*)
000000000087e828  w    F .text	000000000000002d              Silence_deprecated_warning::Silence_deprecated_warning()
000000000080996e  w    F .text	0000000000000020              Item_udf_sum::func_name() const
00000000010c4f00  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_attributebyname
00000000007b15c8  w    F .text	0000000000000046              Item_func_eq::~Item_func_eq()
0000000000559090  w    F .text	0000000000000031              CSET_STRING::CSET_STRING()
00000000007f3ede  w    F .text	000000000000002b              Item_func_des_encrypt::~Item_func_des_encrypt()
00000000007dd59e  w    F .text	000000000000002b              Item_func_acos::~Item_func_acos()
0000000001086fa0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_reverse
00000000010ef720 g     O .data	0000000000000058              table_file_summary_by_instance::m_share
000000000087e88c  w    F .text	0000000000000012              Bad_db_error_handler::error_caught() const
0000000001370808 g     O .bss	0000000000000004              key_rwlock_LOCK_system_variables_hash
000000000088be88 g     F .text	00000000000000ce              sp_rcontext::pop_handlers(unsigned int)
000000000136cd98 g     O .bss	0000000000000008              delayed_queue_size
000000000136cd50 g     O .bss	0000000000000008              max_binlog_stmt_cache_size
00000000005f19e8  w    F .text	000000000000001b              List<Item_field>::List()
0000000001215d80 g     O .data	0000000000000101              ctype_armscii8_bin
00000000005c9849 g     F .text	0000000000000029              thd_increment_net_big_packet_count
00000000009076e3 g     F .text	00000000000005f7              find_or_create_file(PFS_thread*, PFS_file_class*, char const*, unsigned int)
000000000091784a g     F .text	0000000000000060              table_all_instr::table_all_instr(PFS_engine_table_share const*)
000000000070cde0  w    F .text	000000000000003c              Sys_var_tz::global_value_ptr(THD*, st_mysql_lex_string*)
000000000090f47e  w    F .text	0000000000000041              table_events_waits_summary_by_thread_by_event_name::~table_events_waits_summary_by_thread_by_event_name()
00000000007f330e  w    F .text	000000000000002b              Item_func_char::~Item_func_char()
000000000090defc  w    F .text	0000000000000017              PFS_simple_index::PFS_simple_index(unsigned int)
00000000007f246c  w    F .text	0000000000000041              Item_load_file::fix_length_and_dec()
000000000055c1e0  w    F .text	0000000000000056              NAMED_ILINK::~NAMED_ILINK()
00000000010ca620  w    O .data.rel.ro	0000000000000048              vtable for table_rwlock_instances
00000000005f10da  w    F .text	0000000000000019              Lex_input_stream::yyGetLast()
0000000000920688  w    F .text	0000000000000011              ha_myisam::table_type() const
00000000008734ec  w    F .text	0000000000000046              TRP_ROR_INTERSECT::~TRP_ROR_INTERSECT()
00000000007e7d2e g     F .text	000000000000025e              Item_str_conv::val_str(String*)
0000000000b73665 g     F .text	0000000000000243              my_copystat
00000000008b9f46  w    F .text	0000000000000026              List_iterator<partition_element>::after(partition_element*)
00000000008157a8  w    F .text	0000000000000026              Item_func_to_days::fix_length_and_dec()
00000000007c2ade  w    F .text	0000000000000026              Create_func_uuid::~Create_func_uuid()
000000000073a50c  w    F .text	0000000000000038              Item_func_second::Item_func_second(Item*)
0000000000737e2c  w    F .text	00000000000000b6              Item_sum_hybrid::Item_sum_hybrid(Item*, int)
0000000000808552  w    F .text	0000000000000050              udf_handler::clear()
000000000070a452  w    F .text	00000000000000c4              Sys_var_double::do_check(THD*, set_var*)
00000000006ebc1e g     F .text	00000000000001b4              Event_parse_data::init_starts(THD*)
00000000007777ce g     F .text	000000000000003b              handler::ha_enable_indexes(unsigned int)
0000000000905b28  w    F .text	000000000000007d              ha_perfschema::is_executed_by_slave() const
000000000097f1a3 g     F .text	0000000000000016              ft_nlq_reinit_search
0000000000899978  w    F .text	00000000000000ae              field_info::field_info(Item*, analyse*)
0000000000568c74 g     F .text	00000000000000a9              Rpl_filter::table_rule_ent_hash_to_str(String*, st_hash*, bool)
0000000000b8133c g     F .text	00000000000000a5              my_hash_sort_mb_bin
000000000109f100  w    O .data.rel.ro	0000000000000398              vtable for Item_func_spatial_decomp
000000000056b05c  w    F .text	0000000000000049              sys_var::check_type(enum_var_type)
0000000000b6e572 g     F .text	000000000000047d              ha_partition::print_error(int, int)
0000000001386618 g     O .bss	0000000000000008              Create_func_maketime::s_singleton
0000000001264900 g     O .data	00000000000000b0              my_charset_gbk_bin
00000000005f1a04  w    F .text	0000000000000027              SQL_I_List<st_order>::SQL_I_List()
00000000007ec6b8 g     F .text	0000000000000126              Item_func_elt::val_str(String*)
0000000000b606c2 g     F .text	0000000000000a84              ha_partition::rename_partitions(char const*)
000000000059b03c  w    F .text	0000000000000025              List_iterator<st_lex_user>::replace(st_lex_user*)
000000000074df62 g     F .text	00000000000000a6              Field_tiny::sql_type(String&) const
000000000079a6c8  w    F .text	0000000000000046              Item_empty_string::~Item_empty_string()
0000000000565c61 g     F .text	00000000000000db              unregister_slave(THD*, bool, bool)
0000000000901df2 g     F .text	000000000000011d              find_type_or_exit
000000000070a554  w    F .text	0000000000000037              Sys_var_double::global_update(THD*, set_var*)
00000000005f1b2c  w    F .text	000000000000002e              List<Create_field>::List(List<Create_field> const&, st_mem_root*)
00000000007bed7e  w    F .text	000000000000002d              Create_func_encrypt::Create_func_encrypt()
00000000007931fc g     F .text	000000000000005e              Item_cache_int::val_int()
0000000000815da8  w    F .text	0000000000000013              Item_func_year::check_partition_func_processor(unsigned char*)
00000000007b061a  w    F .text	0000000000000026              List<Item_field>::concat(List<Item_field>*)
0000000000799e8e  w    F .text	0000000000000026              List<List<Item> >::List(List<List<Item> > const&)
00000000005f0f28  w    F .text	000000000000005f              Query_tables_list::set_query_tables_list(Query_tables_list*)
00000000007f28e4  w    F .text	0000000000000046              Item_func_uuid::~Item_func_uuid()
000000000136cbe1 g     O .bss	0000000000000001              opt_ignore_builtin_innodb
0000000000659ac2  w    F .text	0000000000000046              Item_int_func::~Item_int_func()
00000000010cd9c0 g     O .data	0000000000000008              mysql_data_home
0000000000890ea6 g     F .text	0000000000000198              Gis_multi_line_string::geom_length(double*) const
00000000005c548e g     F .text	000000000000002b              select_to_file::~select_to_file()
00000000005ce6de  w    F .text	0000000000000064              CSET_STRING::CSET_STRING(char*, unsigned long, charset_info_st*)
0000000000804e7a g     F .text	0000000000000031              Item_avg_field::val_int()
00000000007acfe6 g     F .text	00000000000000a5              Item_equal::contains(Field*)
00000000007bd7d0  w    F .text	000000000000002d              Create_func_as_wkb::Create_func_as_wkb()
00000000009136d0 g     F .text	0000000000000170              table_threads::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000008c4be6 g     F .text	00000000000002da              Event_scheduler::stop()
000000000073881e  w    F .text	000000000000004a              Item_func_ascii::Item_func_ascii(Item*)
00000000006066c4  w    F .text	0000000000000016              Warning_info::reset_for_next_command()
00000000009118a0 g     F .text	000000000000013e              table_setup_instruments::rnd_pos(void const*)
000000000074cc44 g     F .text	0000000000000090              Field_new_decimal::store_decimal(my_decimal const*)
000000000077b8da  w    F .text	000000000000000f              handler::get_row_type() const
0000000000764b9c  w    F .text	000000000000004c              Field::pack_int16(unsigned char*, unsigned char const*, bool)
00000000008530d5 g     F .text	00000000000000fd              my_decimal2binary(unsigned int, my_decimal const*, unsigned char*, int, int)
00000000007c498c g     F .text	000000000000008f              Item_func::print_args(String*, unsigned int, enum_query_type)
00000000005c2172 g     F .text	000000000000018f              THD::raise_warning_printf(unsigned int, ...)
00000000007a6d7e g     F .text	0000000000000045              in_double::in_double(unsigned int)
00000000007a4d2e g     F .text	0000000000000121              Item_func_case::val_int()
0000000000786998 g     F .text	0000000000000076              Item_param::get_time(st_mysql_time*)
0000000001375ba0 g     O .bss	0000000000000060              my_locale_en_ZA
00000000007e33a4  w    F .text	0000000000000015              Item_row::null_inside()
000000000056e02b g     F .text	0000000000000075              print_slave_db_safe(char const*)
000000000138cfa8 g     O .bss	0000000000000008              pfs_readonly_acl
00000000005b1156  w    F .text	000000000000000f              I_P_List_no_push_back<MDL_request>::I_P_List_no_push_back(MDL_request**)
0000000000849991  w    F .text	0000000000000034              bool valid_buffer_range<unsigned int>(unsigned int, char const*, char const*, unsigned int)
000000000079a3e0  w    F .text	0000000000000071              Item_trigger_field::~Item_trigger_field()
00000000012cb700 g     O .data	00000000000000b0              my_charset_utf32_danish_uca_ci
000000000065a13a  w    F .text	0000000000000055              Item_cond::Item_cond()
0000000000566b8c  w    F .text	000000000000003c              Item::copy_andor_structure(THD*, bool)
00000000005cf10c  w    F .text	000000000000001b              List<Item_func_set_user_var>::~List()
00000000007ffcd0 g     F .text	0000000000000239              Item_sum_hybrid::create_tmp_field(bool, TABLE*, unsigned int)
0000000000810840 g     F .text	0000000000000095              Item_func_from_unixtime::val_int()
000000000082edc3 g     F .text	00000000000000e1              mysql_lock_abort(THD*, TABLE*, bool)
00000000007f2026  w    F .text	0000000000000011              Item_func_soundex::func_name() const
000000000065a44e  w    F .text	0000000000000040              Item_cond_or::Item_cond_or(Item*, Item*)
000000000136f740 g     O .bss	0000000000000070              LOCK_connection_count
0000000000888874 g     F .text	000000000000038d              sp_head::add_used_tables_to_table_list(THD*, TABLE_LIST***, TABLE_LIST*)
000000000056b420  w    F .text	0000000000000026              List_iterator_fast<set_var_base>::List_iterator_fast(List<set_var_base>&)
000000000136ab40 g     O .data	00000000000000b0              my_charset_utf8mb4_general_ci
00000000007dbec4  w    F .text	000000000000000b              Interruptible_wait::~Interruptible_wait()
00000000007c0fa8  w    F .text	0000000000000041              Create_func_numinteriorring::~Create_func_numinteriorring()
000000000082cbaa  w    F .text	000000000000001d              Log_event_handler::Log_event_handler()
0000000001386420 g     O .bss	0000000000000008              Create_func_datediff::s_singleton
00000000005ce4a6  w    F .text	000000000000000b              xid_t::xid_t()
0000000000888f78  w    F .text	0000000000000012              sp_instr::backpatch(unsigned int, sp_pcontext*)
0000000000838ab6 g     F .text	000000000000013b              Format_description_log_event::calc_server_version_split()
00000000005c2c12 g     F .text	000000000000009e              THD::init_for_queries()
000000000068f7de g     F .text	00000000000001b7              mysql_recreate_table(THD*, TABLE_LIST*)
0000000000802da4 g     F .text	00000000000004e2              Item_sum_hybrid::reset_field()
00000000007d47e4 g     F .text	000000000000006e              Item_func_get_user_var::val_int()
000000000080873c  w    F .text	0000000000000041              Item_sum::result_item(Field*)
00000000005ce05c  w    F .text	000000000000002d              Discrete_intervals_list::Discrete_intervals_list()
0000000000607078  w    F .text	000000000000001a              st_select_lex_node::operator new(unsigned long)
0000000000618ae2 g     F .text	00000000000001cc              Prepared_statement::~Prepared_statement()
0000000001370754 g     O .bss	0000000000000004              key_BINLOG_LOCK_index
0000000000872138  w    F .text	000000000000000f              QUICK_ROR_UNION_SELECT::unique_key_range()
00000000007b13d4  w    F .text	000000000000002b              Item_func_le::~Item_func_le()
000000000136e0e8 g     O .bss	0000000000000004              reg_ext_length
0000000000607c94  w    F .text	000000000000022d              st_ha_create_information::st_ha_create_information(st_ha_create_information const&)
000000000059fb83 g     F .text	0000000000000279              update_non_unique_table_error(TABLE_LIST*, char const*, TABLE_LIST*)
000000000090de62  w    F .text	0000000000000035              PFS_engine_table::~PFS_engine_table()
0000000000599552  w    F .text	00000000000000fb              hash_filo::add(hash_filo_element*)
00000000007bcf9c  w    F .text	000000000000002d              Create_qfunc::Create_qfunc()
0000000000847bbc g     F .text	0000000000000088              Delete_rows_log_event::do_exec_row(Relay_log_info const*)
000000000061c184  w    F .text	000000000000002d              st_lex_local::st_lex_local()
00000000006e5def g     F .text	000000000000005a              mysql_audit_free_thd(THD*)
000000000075ebfc g     F .text	000000000000012e              Field_bit::hash(unsigned long*, unsigned long*)
00000000005f1e8a  w    F .text	0000000000000027              SQL_I_List<Item_trigger_field>::SQL_I_List()
000000000136fbc0 g     O .bss	0000000000000008              opt_relay_logname
0000000000559028  w    F .text	000000000000001b              base_list::~base_list()
00000000005d1a8c  w    F .text	0000000000000046              select_singlerow_subselect::~select_singlerow_subselect()
00000000008effd7 g     F .text	0000000000000262              getopt_ll_limit_value
00000000007dcf8e  w    F .text	0000000000000046              Item_func_rand::~Item_func_rand()
00000000007b3950 g     F .text	0000000000000050              Create_func_envelope::create(THD*, Item*)
00000000008b0961 g     F .text	0000000000000046              get_partition_id_key_nosub(partition_info*, unsigned int*, long long*)
000000000059b5de  w    F .text	0000000000000027              SQL_I_List<Sroutine_hash_entry>::SQL_I_List()
00000000007db5a6  w    F .text	0000000000000011              Item_master_pos_wait::func_name() const
000000000090e926 g     F .text	000000000000012f              table_events_waits_summary_by_thread_by_event_name::make_instr_row(PFS_thread*, PFS_instr_class*, PFS_single_stat_chain*)
0000000000873320  w    F .text	000000000000001d              TABLE_READ_PLAN::TABLE_READ_PLAN()
000000000070dfaa  w    F .text	0000000000000042              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::session_save_default(THD*, set_var*)
00000000007b0280  w    F .text	0000000000000011              Item_cond_or::func_name() const
0000000000817c30  w    F .text	000000000000002b              Item_func_now_local::~Item_func_now_local()
000000000088dfb6 g     F .text	00000000000000c9              Gis_line_string::get_data_size() const
0000000000765a7e  w    F .text	0000000000000099              Field_longlong::reset()
000000000065bf1a  w    F .text	0000000000000026              I_List<COND_CMP>::append(COND_CMP*)
000000000091faca g     F .text	000000000000006c              ha_myisam::external_lock(THD*, int)
0000000000612a65  w    F .text	000000000000000f              sys_var_pluginvar::operator delete(void*, unsigned long)
00000000007bd92a  w    F .text	0000000000000041              Create_func_asin::~Create_func_asin()
0000000000766012  w    F .text	000000000000000f              Field_timestamp::pack_length() const
000000000080a592  w    F .text	000000000000002b              Item_avg_field::~Item_avg_field()
00000000008096ac  w    F .text	000000000000006c              Item_sum_bit::Item_sum_bit(THD*, Item_sum_bit*)
0000000000000000       F *UND*	0000000000000000              crc32
0000000000796ce8  w    F .text	000000000000003e              Item_name_const::save_in_field(Field*, bool)
00000000007c2844  w    F .text	0000000000000041              Create_func_uncompress::~Create_func_uncompress()
0000000000699186 g     F .text	0000000000000787              udf_init()
00000000010c72f0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_xpath_count
0000000000678690  w    F .text	000000000000001b              List<st_foreign_key_info>::~List()
0000000000889b90  w    F .text	000000000000001a              List<LEX>::pop()
000000000076b1f6  w    F .text	0000000000000054              String::set_quick(char*, unsigned int, charset_info_st*)
00000000005a8cb3 g     F .text	0000000000000887              find_field_in_tables(THD*, Item_ident*, TABLE_LIST*, TABLE_LIST*, Item**, find_item_error_report_type, bool, bool)
00000000007849c4 g     F .text	0000000000000063              Item_uint::val_str(String*)
00000000005bf3e2  w    F .text	000000000000001a              Query_cache_table::table(char*)
00000000012cbe20 g     O .data	00000000000000b0              my_charset_utf16_unicode_ci
000000000120ef40 g     O .data	0000000000000100              to_upper_armscii8_general_ci
00000000013866e0 g     O .bss	0000000000000008              Create_func_rpad::s_singleton
00000000005d0356  w    F .text	000000000000002e              List<Key_part_spec>::List(List<Key_part_spec> const&, st_mem_root*)
00000000008c13f0  w    F .text	000000000000004e              Item_nodeset_func_parentbyname::Item_nodeset_func_parentbyname(Item*, char const*, unsigned int, String*)
00000000005c07e7 g     F .text	000000000000001e              thd_set_psi(THD*, PSI_thread*)
0000000001071d38  w    O .data.rel.ro	0000000000000290              vtable for Field_double
00000000007c1394  w    F .text	000000000000002d              Create_func_pi::Create_func_pi()
00000000005c8972 g     F .text	00000000000000a6              Statement::set_n_backup_statement(Statement*, Statement*)
0000000000565382  w    F .text	000000000000001b              Send_field::Send_field()
00000000006c69cc  w    F .text	000000000000004e              handler::max_record_length() const
00000000007390f0  w    F .text	000000000000002b              Item_func_isnotfalse::~Item_func_isnotfalse()
0000000000000000       F *UND*	0000000000000000              sscanf@@GLIBC_2.2.5
000000000070eca6  w    F .text	0000000000000026              Sys_var_external_user::~Sys_var_external_user()
0000000000559704  w    F .text	000000000000001b              I_List<THD>::empty()
00000000009108c0  w    F .text	0000000000000026              table_file_summary_by_event_name::~table_file_summary_by_event_name()
0000000000904752 g     F .text	000000000000005e              ha_perfschema::ha_perfschema(handlerton*, TABLE_SHARE*)
0000000000848d12  w    F .text	000000000000001d              Log_event::is_relay_log_event() const
0000000000851e84 g     F .text	0000000000000069              Update_rows_log_event_old::Update_rows_log_event_old(char const*, unsigned int, Format_description_log_event const*)
00000000007be2f2  w    F .text	000000000000002d              Create_func_cos::Create_func_cos()
00000000006bac64  w    F .text	000000000000001e              Field_iterator_natural_join::field()
00000000007c6c9a g     F .text	0000000000000232              Item_func_unsigned::val_int()
000000000136e438 g     O .bss	0000000000000008              gt_creator
0000000000751f04 g     F .text	00000000000000ad              Field_double::val_real()
00000000006594de  w    F .text	000000000000000f              Item_null::result_type() const
0000000000559172  w    F .text	000000000000002d              Eq_creator::Eq_creator()
0000000000911efa g     F .text	0000000000000096              table_setup_timers::rnd_next()
00000000007bf22e  w    F .text	000000000000002d              Create_func_find_in_set::Create_func_find_in_set()
00000000006f53f6  w    F .text	000000000000005c              Deadlock_detection_visitor::Deadlock_detection_visitor(MDL_context*)
000000000088ce84  w    F .text	000000000000000f              Select_fetch_into_spvars::send_eof()
000000000070d1f4  w    F .text	0000000000000211              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned int, unsigned int, unsigned int, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000005ed9a4 g     F .text	000000000000004c              st_select_lex_node::init_query()
0000000000566de6  w    F .text	000000000000001b              Item::remove_fixed(unsigned char*)
0000000000799db0  w    F .text	000000000000001b              List_iterator_fast<Item>::List_iterator_fast()
00000000007c1b0c  w    F .text	0000000000000026              Create_func_sec_to_time::~Create_func_sec_to_time()
00000000006075fc  w    F .text	0000000000000034              add_item_to_list(THD*, Item*)
00000000007c2d5c  w    F .text	000000000000002d              Create_func_within::Create_func_within()
00000000007c0de6  w    F .text	0000000000000041              Create_func_name_const::~Create_func_name_const()
000000000070d098  w    F .text	0000000000000026              List<set_var_base>::prepand(List<set_var_base>*)
000000000091200c g     F .text	0000000000000169              table_setup_timers::read_row_values(TABLE*, unsigned char*, Field**, bool)
0000000000798c88  w    F .text	0000000000000038              Item_copy_float::Item_copy_float(Item*)
00000000010ae568  w    O .data.rel.ro	0000000000000090              vtable for subselect_indexsubquery_engine
0000000001210ce0 g     O .data	0000000000000100              to_lower_cp852_general_ci
00000000007f2ae2  w    F .text	0000000000000058              Item_func_uncompressed_length::~Item_func_uncompressed_length()
00000000006071a8  w    F .text	000000000000004c              Yacc_state::reset()
00000000005534e3 g     F .text	0000000000000640              handle_connections_sockets()
00000000007a0dc0 g     F .text	00000000000002af              Item_in_optimizer::val_int()
0000000000739efa  w    F .text	000000000000004f              Item_func_sysconst::Item_func_sysconst()
000000000059b01e  w    F .text	000000000000001d              List_iterator<st_lex_user>::operator++(int)
0000000000606aba  w    F .text	000000000000000f              Item_func::select_optimize() const
00000000010efe35 g     O .data	0000000000000001              flag_events_waits_summary_by_instance
0000000000872a68  w    F .text	00000000000000c6              SEL_ARG::store_min(unsigned int, unsigned char**, unsigned int)
00000000007dd63c  w    F .text	0000000000000046              Item_func_sqrt::~Item_func_sqrt()
000000000087369e  w    F .text	000000000000011c              TRP_GROUP_MIN_MAX::TRP_GROUP_MIN_MAX(bool, bool, bool, st_key_part_info*, unsigned int, unsigned int, unsigned int, st_key*, unsigned int, unsigned int, unsigned char*, SEL_TREE*, SEL_ARG*, unsigned int, unsigned long long)
00000000007dbc5a  w    F .text	000000000000001b              Item_func_found_rows::fix_length_and_dec()
000000000088cfc0 g     F .text	0000000000000067              Geometry::Class_info::Class_info(char const*, int, Geometry* (*)(char*))
00000000007b7250 g     F .text	0000000000000031              get_native_fct_hash_key
000000000065a732  w    F .text	0000000000000055              Item_cache::eq_def(Field*)
00000000005597ba  w    F .text	0000000000000026              I_List<THD>::move_elements_to(I_List<THD>*)
0000000000794d32 g     F .text	00000000000001bf              Item_type_holder::get_real_type(Item*)
000000000105e3c0 g     O .data.rel.ro	0000000000000030              trg_event_type_names
0000000000698066  w    F .text	0000000000000041              Default_object_creation_ctx::~Default_object_creation_ctx()
000000000077f466 g     F .text	00000000000000f1              Item_ident::Item_ident(TABLE_LIST*, char const*)
0000000000559a60  w    F .text	000000000000001b              I_List<Statement>::I_List()
000000000136fbb8 g     O .bss	0000000000000008              report_host
000000000056b648  w    F .text	0000000000000041              PolyLock_mutex::~PolyLock_mutex()
0000000000690712  w    F .text	0000000000000046              THD::is_current_stmt_binlog_disabled() const
0000000001217200 g     O .data	0000000000000101              ctype_cp866_bin
00000000010f2c40 g     O .data	00000000000004e0              builtin_innobase_plugin
000000000089c11e g     F .text	00000000000015ce              mysql_delete(THD*, TABLE_LIST*, Item*, SQL_I_List<st_order>*, unsigned long long, unsigned long long)
0000000000738330  w    F .text	000000000000005e              Item_func_numhybrid::Item_func_numhybrid(Item*, Item*)
0000000000766234  w    F .text	000000000000000f              Field_year::type() const
00000000007a8f36 g     F .text	00000000000000ef              Item_func_bit_and::val_int()
0000000000815d14  w    F .text	0000000000000026              Item_func_yearweek::fix_length_and_dec()
00000000007bbf0c  w    F .text	000000000000004a              Item_load_file::Item_load_file(Item*)
00000000007536c4 g     F .text	0000000000000065              Field_timestamp::sort_string(unsigned char*, unsigned int)
00000000010eb2a0 g     O .data	0000000000000020              mysql_optional_plugins
00000000007c28da  w    F .text	0000000000000041              Create_func_uncompressed_length::~Create_func_uncompressed_length()
00000000007cb5e0 g     F .text	0000000000000129              Item_func_floor::int_op()
00000000007099ce  w    F .text	0000000000000040              Sys_var_external_user::session_value_ptr(THD*, st_mysql_lex_string*)
00000000007b09cc  w    F .text	000000000000002b              Item_cond_or::~Item_cond_or()
000000000057863a g     F .text	000000000000037c              flush_relay_log_info(Relay_log_info*)
000000000057ac08  w    F .text	0000000000000011              Heartbeat_log_event::get_ident_len()
000000000137085c g     O .bss	0000000000000004              key_relay_log_info_stop_cond
000000000070cccc  w    F .text	000000000000003c              Sys_var_tz::session_update(THD*, set_var*)
0000000000880006 g     F .text	0000000000000047              sp_head::set_body_start(THD*, char const*)
000000000055954c  w    F .text	000000000000001d              Unknown_key_hook::Unknown_key_hook()
00000000007972e2  w    F .text	0000000000000011              Item_uint::decimal_precision() const
000000000059a765  w    F .text	00000000000001e1              ACL_PROXY_USER::store_data_record(TABLE*, st_mysql_lex_string const*, st_mysql_lex_string const*, st_mysql_lex_string const*, st_mysql_lex_string const*, bool, char const*)
000000000106bf90  w    O .data.rel.ro	0000000000000038              vtable for Time_zone_system
0000000000607170  w    F .text	000000000000000b              Set_signal_information::Set_signal_information()
0000000000678454  w    F .text	0000000000000025              I_List<thread_info>::is_last(thread_info*)
00000000006e000a g     F .text	00000000000002c4              Master_info::Master_info(bool)
00000000009138e4 g     F .text	00000000000000f9              check_performance_schema()
000000000089f9f0 g     F .text	00000000000001a5              search_keyword(THD*, TABLE*, st_find_field*, SQL_SELECT*, int*)
00000000006b4c49 g     F .text	00000000000000d0              calculate_key_len(TABLE*, unsigned int, unsigned char const*, unsigned long)
00000000008c1aa4  w    F .text	0000000000000011              Item_func_xpath_sum::func_name() const
00000000005d029c  w    F .text	000000000000001b              List_iterator<Key>::rewind()
00000000010d8a90 g     O .data	0000000000000018              index_hint_type_name
0000000000809b3e  w    F .text	0000000000000040              Item_sum_udf_float::Item_sum_udf_float(THD*, Item_sum_udf_float*)
00000000010c8848  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_axisbyname
000000000088b218 g     F .text	0000000000000038              sp_rcontext::~sp_rcontext()
00000000010724e8  w    O .data.rel.ro	0000000000000290              vtable for Field_long
000000000089384e  w    F .text	000000000000002d              Gis_line_string::Gis_line_string()
00000000007c31c4  w    F .text	0000000000000046              Item_func_bit_length::~Item_func_bit_length()
0000000000856ac0 g     F .text	0000000000000067              imerge_list_or_list(RANGE_OPT_PARAM*, List<SEL_IMERGE>*, List<SEL_IMERGE>*)
00000000007c1eb6  w    F .text	000000000000002d              Create_func_space::Create_func_space()
00000000007a6b1a g     F .text	000000000000004a              in_longlong::in_longlong(unsigned int)
00000000008159dc  w    F .text	000000000000000f              Item_func_month::result_type() const
00000000007bc166  w    F .text	000000000000004a              Item_func_compress::Item_func_compress(Item*)
0000000000830118  w    F .text	0000000000000016              TABLE_SHARE::require_write_privileges()
0000000000b753eb g     F .text	00000000000000a1              lf_hash_destroy
00000000005b2d64 g     F .text	0000000000000056              query_cache_insert(char const*, unsigned long, unsigned int)
00000000007f51e2 g     F .text	00000000000000a3              Item_subselect::get_tmp_table_item(THD*)
0000000000000000       F *UND*	0000000000000000              getpeername@@GLIBC_2.2.5
00000000007e1624  w    F .text	0000000000000030              Item_func_geometry_type::fix_length_and_dec()
00000000007f3fd4  w    F .text	000000000000002b              Item_func_aes_decrypt::~Item_func_aes_decrypt()
0000000000c00bf0 g     F .fini	0000000000000000              _fini
0000000000848f42  w    F .text	0000000000000030              Load_log_event::get_type_code()
0000000000798554  w    F .text	0000000000000067              Item_ref_null_helper::used_tables() const
000000000070d1a2  w    F .text	0000000000000026              List_iterator_fast<set_var_base>::init(List<set_var_base>&)
00000000007f37f6  w    F .text	0000000000000046              Item_func_rtrim::~Item_func_rtrim()
00000000007bea90  w    F .text	000000000000002d              Create_func_des_encrypt::Create_func_des_encrypt()
00000000007982a0  w    F .text	0000000000000046              Item_direct_ref::~Item_direct_ref()
0000000000000000       F *UND*	0000000000000000              io_setup@@LIBAIO_0.4
000000000056b5d6  w    F .text	0000000000000046              set_var::~set_var()
00000000007f3d6c  w    F .text	0000000000000058              Item_func_concat_ws::~Item_func_concat_ws()
00000000007dca78  w    F .text	0000000000000046              Item_func_bit_count::~Item_func_bit_count()
00000000007b99da  w    F .text	0000000000000038              Item_sum_udf_int::Item_sum_udf_int(st_udf_func*)
00000000007af9f4  w    F .text	0000000000000014              Item_func_case::field_type() const
00000000008734be  w    F .text	000000000000002d              TRP_ROR_INTERSECT::TRP_ROR_INTERSECT()
0000000000908356  w    F .text	0000000000000015              pfs_lock::is_free()
0000000000b756b6 g     F .text	0000000000000110              lf_hash_delete
000000000090a00a g     F .text	0000000000000093              sanitize_table_share(PFS_table_share*)
000000000079bb98  w    F .text	000000000000001b              List_iterator<Cached_item>::remove()
0000000000893da6 g     F .text	0000000000000029              compare_double2(void*, double const*, double const*)
000000000065c810  w    F .text	0000000000000025              List<Cached_item>::push_front(Cached_item*)
00000000005a0580 g     F .text	000000000000016b              wait_while_table_is_used(THD*, TABLE*, ha_extra_function)
00000000005aed76  w    F .text	0000000000000016              Bitmap<64u>::clear_all()
00000000007389e0  w    F .text	0000000000000040              Item_func_shift_right::Item_func_shift_right(Item*, Item*)
000000000082876c g     F .text	0000000000000116              MYSQL_BIN_LOG::rotate(bool, bool*)
000000000081764a  w    F .text	0000000000000046              Item_date_typecast::~Item_date_typecast()
000000000073c2d2  w    F .text	000000000000004a              sp_instr_cpop::sp_instr_cpop(unsigned int, sp_pcontext*, unsigned int)
0000000000739746  w    F .text	000000000000005d              is_cond_and(Item*)
00000000013867b0 g     O .bss	0000000000000008              Create_func_uncompressed_length::s_singleton
00000000007fb3fa g     F .text	000000000000005d              subselect_uniquesubquery_engine::~subselect_uniquesubquery_engine()
00000000007bceea  w    F .text	0000000000000038              Item_func_last_day::Item_func_last_day(Item*)
0000000001090f98  w    O .data.rel.ro	0000000000000398              vtable for Item_func_length
00000000008e638a g     F .text	00000000000013b0              my_qsort2
0000000001218ec0 g     O .data	0000000000000200              to_uni_keybcs2_bin
00000000006e92dc g     F .text	0000000000000042              PROFILING::PROFILING()
000000000136ccc8 g     O .bss	0000000000000008              table_cache_size
0000000000658fe8  w    F .text	0000000000000070              Field_string::Field_string(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
000000000088945a  w    F .text	000000000000001b              List<sp_cond_type>::~List()
000000000082c4ce g     F .text	00000000000000c7              MYSQL_BIN_LOG::log_xid(THD*, unsigned long long)
00000000013708ac g     O .bss	0000000000000004              key_file_ERRMSG
00000000007685e0  w    F .text	0000000000000046              Field_null::~Field_null()
000000000060685e  w    F .text	0000000000000032              DTCollation::set_repertoire_from_charset(charset_info_st*)
00000000005cf55e  w    F .text	0000000000000031              Query_arena::memdup(void const*, unsigned long)
000000000081819a  w    F .text	000000000000002b              Item_func_second::~Item_func_second()
000000000079678c  w    F .text	000000000000001e              Hybrid_type_traits_integer::val_real(Hybrid_type*) const
000000000090e0c2  w    F .text	0000000000000060              pfs_lock::end_optimistic_lock(pfs_lock*)
00000000005b0b16  w    F .text	0000000000000017              I_P_List<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::is_empty() const
00000000006b4dd1 g     F .text	000000000000014c              check_table_name(char const*, unsigned long, bool)
00000000006f08e6  w    F .text	0000000000000015              Delegate::is_inited()
000000000088988c  w    F .text	0000000000000056              sp_instr_cfetch::~sp_instr_cfetch()
000000000067f740 g     F .text	00000000000001a2              execute_ddl_log_entry(THD*, unsigned int)
000000000073cbca  w    F .text	0000000000000046              SQL_I_List<TABLE_LIST>::push_front(SQL_I_List<TABLE_LIST>*)
0000000000738df2  w    F .text	000000000000002b              Item_func_truth::~Item_func_truth()
0000000001088440  w    O .data.rel.ro	0000000000000030              vtable for Create_func_area
000000000076539e  w    F .text	0000000000000027              Field_new_decimal::row_pack_length() const
00000000012187a0 g     O .data	0000000000000100              to_lower_hp8_bin
00000000007c142a  w    F .text	000000000000002d              Create_func_pointn::Create_func_pointn()
000000000065a2ba  w    F .text	0000000000000020              Item_equal::get_first()
00000000007be650  w    F .text	0000000000000026              Create_func_datediff::~Create_func_datediff()
00000000006987ac  w    F .text	000000000000001f              Sub_statement_state::~Sub_statement_state()
00000000005c3a42 g     F .text	00000000000000e8              THD::store_globals()
00000000006f04de g     F .text	0000000000000032              register_binlog_transmit_observer
0000000000659470  w    F .text	0000000000000039              DTCollation::set(DTCollation&)
00000000006d7c66 g     F .text	00000000000000bd              injector::record_incident(THD*, Incident)
000000000080877e  w    F .text	0000000000000015              Item_sum::used_tables() const
0000000000846e7a g     F .text	0000000000000b58              Rows_log_event::find_row(Relay_log_info const*)
0000000000808b92  w    F .text	000000000000005b              Item_sum_int::val_real()
000000000082e918 g     F .text	0000000000000297              mysql_unlock_read_tables(THD*, st_mysql_lock*)
000000000054e87f g     F .text	0000000000000114              one_thread_per_connection_end(THD*, bool)
000000000065626c g     F .text	0000000000000394              mysql_explain_union(THD*, st_select_lex_unit*, select_result*)
0000000000797308  w    F .text	000000000000000f              Item_decimal::type() const
000000000058fdf1 g     F .text	0000000000000906              mysql_revoke_all(THD*, List<st_lex_user>&)
00000000007664cc  w    F .text	000000000000000f              Field_newdate::real_type() const
0000000000000000       F *UND*	0000000000000000              localtime@@GLIBC_2.2.5
00000000008175d8  w    F .text	0000000000000046              Item_func_makedate::~Item_func_makedate()
00000000008d52cb g     F .text	000000000000002d              list_length
000000000057f817 g     F .text	00000000000001bf              check_change_password(THD*, char const*, char const*, char*, unsigned int)
00000000009407f3 g     F .text	0000000000000c7c              _mi_get_block_info
0000000000606ada  w    F .text	0000000000000015              Item_func::key_item() const
000000000087255e  w    F .text	0000000000000049              SEL_ARG::cmp_min_to_min(SEL_ARG const*) const
00000000006f97ea g     F .text	00000000000001b7              Analyze_table_statement::execute(THD*)
0000000000709922  w    F .text	0000000000000041              Sys_var_proxy_user::~Sys_var_proxy_user()
00000000008e9d7d g     F .text	0000000000000061              strmake_root
000000000077bccc  w    F .text	000000000000000f              handler::append_create_info(String*)
0000000000942fe4 g     F .text	0000000000000a49              _mi_make_key
0000000000573508 g     F .text	000000000000147c              handle_slave_io
00000000008f40ed g     F .text	00000000000002e6              my_read
00000000013707e4 g     O .bss	0000000000000004              key_LOCK_thread_count
00000000007f30a6  w    F .text	0000000000000046              Item_func_conv::~Item_func_conv()
0000000000759734 g     F .text	000000000000009a              Field_varstring::store(long long, bool)
00000000007f31ae  w    F .text	000000000000006a              Item_func_rpad::~Item_func_rpad()
00000000007673b8  w    F .text	00000000000000a0              Field_set::Field_set(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned int, st_typelib*, charset_info_st*)
000000000054cbe1 g     F .text	000000000000002a              kill_server_thread
000000000098b4be g     F .text	00000000000000d2              ha_myisammrg::index_type(unsigned int)
000000000070998a  w    F .text	0000000000000043              Sys_var_external_user::Sys_var_external_user(char const*, char const*, charset_enum)
00000000006dc1ac g     F .text	00000000000001af              Relay_log_info::~Relay_log_info()
0000000000775372 g     F .text	0000000000000192              handler::read_first_row(unsigned char*, unsigned int)
0000000000596da7 g     F .text	0000000000000ced              acl_authenticate(THD*, unsigned int, unsigned int)
0000000000709a8a  w    F .text	00000000000000d1              Sys_var_lexstring::Sys_var_lexstring(char const*, char const*, int, long, unsigned long, CMD_LINE, charset_enum, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
000000000136f010 g     O .bss	0000000000000004              have_geometry
00000000008e8ffe g     F .text	0000000000000191              my_aes_decrypt
000000000060621d g     F .text	00000000000000ba              check_host_name(st_mysql_lex_string*)
00000000007dbc38  w    F .text	000000000000000f              Item_func_sp::is_expensive()
00000000006d46f8  w    F .text	0000000000000042              partition_info::get_tot_partitions()
00000000008c14b0  w    F .text	0000000000000045              Item_nodeset_func_predicate::Item_nodeset_func_predicate(Item*, Item*, String*)
0000000000818446  w    F .text	000000000000002b              Item_func_dayofmonth::~Item_func_dayofmonth()
00000000010deee0 g     O .data	0000000000000140              column_privileges_fields_info
00000000009047f6 g     F .text	000000000000002b              ha_perfschema::~ha_perfschema()
000000000090e148  w    F .text	0000000000000020              pos_events_waits_current::reset()
00000000007b9cb8  w    F .text	0000000000000048              Item_real_func::Item_real_func(Item*)
00000000007de3ec g     F .text	0000000000000181              Item_func_as_wkt::val_str_ascii(String*)
00000000005bf5fc  w    F .text	000000000000001c              THD::in_active_multi_stmt_transaction()
0000000000767126  w    F .text	000000000000000f              Field_geom::key_type() const
00000000006c1d52  w    F .text	0000000000000046              Time_zone_utc::~Time_zone_utc()
00000000007bcdd0  w    F .text	0000000000000040              Item_func_makedate::Item_func_makedate(Item*, Item*)
000000000082bfce g     F .text	0000000000000491              MYSQL_BIN_LOG::open(char const*)
00000000008165e0  w    F .text	0000000000000046              Item_func_now::~Item_func_now()
00000000007ae36c  w    F .text	000000000000000f              Item_bool_func2::select_optimize() const
00000000007f3b30  w    F .text	000000000000002b              Item_func_ucase::~Item_func_ucase()
00000000006bc6ac g     F .text	000000000000082b              parse_date_time_format(enum_mysql_timestamp_type, char const*, unsigned int, st_date_time_format*)
00000000013877c8 g     O .bss	0000000000000008              tc_log
0000000000000000       F *UND*	0000000000000000              dlclose@@GLIBC_2.2.5
000000000106cbe8  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>
000000000098f05a  w    F .text	0000000000000012              ha_myisammrg::table_ptr()
00000000010eafa0 g     O .data	0000000000000004              have_innodb
0000000000764e38  w    F .text	000000000000000f              Field_num::repertoire() const
00000000005f1e36  w    F .text	000000000000001b              List<Item_func_set_user_var>::List()
00000000007f251c  w    F .text	0000000000000079              Item_func_quote::fix_length_and_dec()
00000000007bbbf0  w    F .text	0000000000000045              Item_func_conv::Item_func_conv(Item*, Item*, Item*)
00000000007a36b8 g     F .text	0000000000000071              Item_func_ifnull::decimal_precision() const
0000000000767b98  w    F .text	0000000000000070              List<Create_field>::delete_elements()
00000000007bb750  w    F .text	0000000000000064              Item_func_des_encrypt::Item_func_des_encrypt(Item*, Item*)
00000000006ed9ea  w    F .text	000000000000002b              Signal_statement::~Signal_statement()
000000000098f0fa  w    F .text	0000000000000085              Mrg_attach_children_callback_param::next()
00000000007c0d22  w    F .text	000000000000002d              Create_func_monthname::Create_func_monthname()
0000000000920722  w    F .text	000000000000000f              ha_myisam::max_supported_key_part_length() const
00000000007c061a  w    F .text	000000000000002d              Create_func_load_file::Create_func_load_file()
00000000005686ae g     F .text	00000000000000dd              Rpl_filter::add_table_rule(st_hash*, char const*)
00000000007d3fca g     F .text	000000000000007d              Item_func_set_user_var::send(Protocol*, String*)
000000000079a7ac  w    F .text	0000000000000058              Item_copy_decimal::~Item_copy_decimal()
00000000005bf7da  w    F .text	0000000000000041              Query_cache_block::table()
000000000057f9d6 g     F .text	00000000000006ea              change_password(THD*, char const*, char const*, char*)
00000000008c11d6  w    F .text	0000000000000046              Item_nodeset_func_axisbyname::~Item_nodeset_func_axisbyname()
00000000007f1c42  w    F .text	0000000000000011              Item_func_old_password::func_name() const
000000000059b2aa  w    F .text	0000000000000070              List<LEX_COLUMN>::delete_elements()
0000000000000000       F *UND*	0000000000000000              pthread_rwlock_destroy@@GLIBC_2.2.5
0000000000805b2a g     F .text	0000000000000028              Item_sum_udf_decimal::val_real()
00000000007391fe  w    F .text	00000000000000bc              Item_func_between::Item_func_between(Item*, Item*, Item*)
00000000007c03f0  w    F .text	0000000000000041              Create_func_length::~Create_func_length()
00000000007b7474 g     F .text	0000000000000059              find_native_function_builder(THD*, st_mysql_lex_string)
000000000088b132  w    F .text	000000000000001d              List_iterator_fast<sp_label>::operator++(int)
00000000007bf102  w    F .text	000000000000002d              Create_func_exteriorring::Create_func_exteriorring()
00000000007c0908  w    F .text	000000000000002d              Create_func_lpad::Create_func_lpad()
000000000137081c g     O .bss	0000000000000004              key_BINLOG_COND_prep_xids
00000000010b52e8  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum
00000000008c0f88  w    F .text	000000000000007c              Item_nodeset_func::~Item_nodeset_func()
00000000012c9660 g     O .data	00000000000000b0              my_charset_utf8_swedish_uca_ci
000000000091012c g     F .text	000000000000006b              table_file_summary_by_event_name::make_row(PFS_file_class*)
00000000007e1612  w    F .text	0000000000000011              Item_func_geometry_type::func_name() const
00000000007a8e46 g     F .text	00000000000000ef              Item_func_bit_or::val_int()
000000000083bfe0 g     F .text	0000000000000023              Intvar_log_event::do_update_pos(Relay_log_info*)
00000000012b5a80 g     O .data	0000000000000600              page013data
00000000007bb0d8  w    F .text	000000000000002d              Item_func_found_rows::Item_func_found_rows()
00000000006bb356  w    F .text	0000000000000039              I_P_List<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> >::empty()
00000000008443c4 g     F .text	00000000000006af              Table_map_log_event::Table_map_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000007c2366  w    F .text	000000000000002d              Create_func_tan::Create_func_tan()
00000000007f412a  w    F .text	000000000000002b              Item_func_sha::~Item_func_sha()
00000000006e0444 g     F .text	000000000000007f              Master_info::shall_ignore_server_id(unsigned long)
00000000007aed16  w    F .text	0000000000000035              Item_func_nullif::decimal_precision() const
00000000007846be g     F .text	000000000000006a              Item_field::get_tmp_table_item(THD*)
00000000005670ba  w    F .text	0000000000000012              Item_basic_constant::used_tables() const
0000000001386440 g     O .bss	0000000000000008              Create_func_dayofyear::s_singleton
000000000085694a g     F .text	0000000000000176              SEL_IMERGE::SEL_IMERGE(SEL_IMERGE*, RANGE_OPT_PARAM*)
00000000006f61e8  w    F .text	0000000000000041              Deadlock_detection_visitor::~Deadlock_detection_visitor()
00000000007be73a  w    F .text	0000000000000041              Create_func_dayofmonth::~Create_func_dayofmonth()
00000000008c0c36  w    F .text	000000000000000f              Item_nodeset_func::type() const
00000000006bb0c0  w    F .text	0000000000000025              List<String>::push_front(String*)
00000000010cbe98  w    O .data.rel.ro	0000000000000480              vtable for ha_partition
0000000001070358  w    O .data.rel.ro	0000000000000298              vtable for Field_longstr
00000000010c28e0  w    O .data.rel.ro	0000000000000370              vtable for Item_proc_int
00000000007dc52f  w    F .text	0000000000000009              non-virtual thunk to Item_func_get_user_var::~Item_func_get_user_var()
00000000005e966e  w    F .text	0000000000000025              I_List<Delayed_insert>::is_last(Delayed_insert*)
00000000007c116a  w    F .text	0000000000000041              Create_func_ord::~Create_func_ord()
00000000006baa56  w    F .text	000000000000001d              Object_creation_ctx::Object_creation_ctx()
0000000000787900 g     F .text	000000000000017f              Item_param::set_param_type_and_swap_value(Item_param*)
00000000007ac972 g     F .text	0000000000000053              Item_func_lt::negated_item()
0000000001370770 g     O .bss	0000000000000004              key_LOCK_delayed_create
000000000084e0ac g     F .text	0000000000000068              Update_rows_log_event_old::do_after_row_operations(TABLE*, int)
00000000005a8117 g     F .text	000000000000031b              find_field_in_table(THD*, TABLE*, char const*, unsigned int, bool, unsigned int*)
000000000136ded0 g     O .bss	0000000000000008              lc_messages_dir_ptr
00000000005d0694  w    F .text	0000000000000026              List<Alter_drop>::List(List<Alter_drop> const&)
000000000075b6a2 g     F .text	0000000000000097              Field_blob::store(long long, bool)
000000000065c664  w    F .text	000000000000001d              List_iterator<Item_equal>::operator++(int)
0000000001211600 g     O .data	0000000000000200              to_uni_latin7_general_ci
00000000007bce50  w    F .text	000000000000004d              Item_func_maketime::Item_func_maketime(Item*, Item*, Item*)
00000000008589e8 g     F .text	0000000000000106              QUICK_ROR_UNION_SELECT::~QUICK_ROR_UNION_SELECT()
00000000007dd4e6  w    F .text	0000000000000046              Item_func_asin::~Item_func_asin()
00000000007da7d4  w    F .text	0000000000000011              Item_func_plus::func_name() const
00000000005afaba  w    F .text	00000000000000b3              Item_func::Item_func(Item*, Item*)
0000000000786c40 g     F .text	0000000000000184              Item_param::val_int()
00000000005b13f0  w    F .text	000000000000002b              Field_iterator_table::~Field_iterator_table()
000000000070c132  w    F .text	000000000000016b              Sys_var_bit::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000007f5162 g     F .text	0000000000000049              Item_subselect::used_tables() const
0000000000b73ccf g     F .text	000000000000007f              _lf_pinbox_free
000000000074a270 g     F .text	00000000000000a3              Field::clone(st_mem_root*, TABLE*)
0000000000991a22 g     F .text	0000000000000076              init_myisammrg_psi_keys
000000000088c604 g     F .text	0000000000000075              sp_cursor::sp_cursor(sp_lex_keeper*, sp_instr_cpush*)
0000000000918380  w    F .text	0000000000000025              pos_all_instr_class::next_view()
00000000006f5868  w    F .text	000000000000002d              MDL_lock::destroy(MDL_lock*)
00000000005c4540 g     F .text	00000000000000f3              THD::changed_table_dup(char const*, long)
00000000008a928c  w    F .text	0000000000000026              List_iterator<XML_TAG>::List_iterator(List<XML_TAG>&)
0000000000567614  w    F .text	000000000000000f              Item_string::type() const
0000000000911ed8 g     F .text	0000000000000021              table_setup_timers::reset_position()
00000000006bb2dc  w    F .text	0000000000000026              List_iterator<String>::after(String*)
0000000000751896 g     F .text	0000000000000038              Field_float::do_save_field_metadata(unsigned char*)
0000000000797684  w    F .text	0000000000000012              Item_string::is_cs_specified() const
0000000000779276 g     F .text	0000000000000113              ha_table_exists_in_engine(THD*, char const*, char const*)
00000000013744c0 g     O .bss	0000000000000060              my_locale_gl_ES
000000000079734e  w    F .text	000000000000000f              Item_decimal::basic_const_item() const
00000000007bc500  w    F .text	0000000000000038              Item_func_isempty::Item_func_isempty(Item*)
00000000006fa030  w    F .text	0000000000000046              Repair_table_statement::~Repair_table_statement()
000000000078d86e g     F .text	0000000000000166              Item_hex_string::hex_string_init(char const*, unsigned int)
000000000056b262  w    F .text	000000000000003d              PolyLock_mutex::PolyLock_mutex(st_mysql_mutex*)
000000000136fbd8 g     O .bss	0000000000000008              opt_slow_logname
00000000007385dc  w    F .text	0000000000000040              Item_func_minus::Item_func_minus(Item*, Item*)
00000000007649df  w    F .text	000000000000005a              Field::handle_int16(unsigned char*, unsigned char const*, bool, bool)
00000000010aa4b8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_right
00000000012b9480 g     O .data	0000000000000a00              page020data
00000000007bd390  w    F .text	0000000000000026              Create_func_arg3::~Create_func_arg3()
00000000007db916  w    F .text	0000000000000011              Item_func_bit_xor::func_name() const
000000000073ac20  w    F .text	0000000000000088              Item_date_add_interval::Item_date_add_interval(Item*, Item*, interval_type, bool)
00000000006a4f06  w    F .text	0000000000000026              List_iterator_fast<TABLE>::List_iterator_fast(List<TABLE>&)
00000000007a90a4 g     F .text	00000000000000ce              Item_cond::copy_andor_arguments(THD*, Item_cond*, bool)
0000000000000000       F *UND*	0000000000000000              sleep@@GLIBC_2.2.5
00000000010bc6e0  w    O .data.rel.ro	0000000000000398              vtable for Item_date
00000000005f169a  w    F .text	000000000000002f              Mem_root_array<st_order*, true>::end()
0000000000798a4c  w    F .text	0000000000000046              Item_copy::~Item_copy()
0000000000000000       F *UND*	0000000000000000              getsockopt@@GLIBC_2.2.5
000000000098f19c  w    F .text	000000000000002d              List<Mrg_child_def>::push_back(Mrg_child_def*, st_mem_root*)
0000000000799f50  w    F .text	000000000000001a              List<List<Item> >::head_ref()
00000000006bb216  w    F .text	000000000000001b              List_iterator<String>::List_iterator()
00000000007fb9c0 g     F .text	000000000000002b              subselect_uniquesubquery_engine::exclude()
00000000007bd15e  w    F .text	000000000000002d              Create_func_arg0::Create_func_arg0()
000000000073a272  w    F .text	0000000000000040              Item_geometry_func::Item_geometry_func(Item*, Item*)
00000000005ce682  w    F .text	000000000000002d              Protocol_text::Protocol_text()
000000000098f1ca  w    F .text	0000000000000026              List_iterator_fast<Mrg_child_def>::List_iterator_fast(List<Mrg_child_def>&)
00000000008c77e8  w    F .text	000000000000000b              Event_queue_element_for_exec::Event_queue_element_for_exec()
00000000007bf0dc  w    F .text	0000000000000026              Create_func_export_set::~Create_func_export_set()
00000000006065f4  w    F .text	0000000000000058              String::uses_buffer_owned_by(String const*) const
00000000010b3468  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_variance
00000000005ba8b8 g     F .text	00000000000000f2              Query_cache::double_linked_list_exclude(Query_cache_block*, Query_cache_block**)
0000000000766edc  w    F .text	000000000000001a              Field_blob::row_pack_length() const
000000000073b5b6  w    F .text	0000000000000060              Table_ident::Table_ident(st_select_lex_unit*)
000000000082d0c0  w    F .text	000000000000002b              Format_description_log_event::~Format_description_log_event()
0000000000574b21 g     F .text	0000000000001288              handle_slave_sql
0000000000690610  w    F .text	0000000000000047              Key_part_spec::Key_part_spec(char const*, unsigned long, unsigned int)
000000000088095e g     F .text	000000000000002b              sp_head::~sp_head()
00000000007bd8fc  w    F .text	000000000000002d              Create_func_asin::Create_func_asin()
000000000065a9a2  w    F .text	000000000000003b              QUICK_RANGE_SELECT::save_last_pos()
0000000000000000       F *UND*	0000000000000000              pthread_mutex_unlock@@GLIBC_2.2.5
00000000007db75c  w    F .text	000000000000002e              Item_func_inet_aton::fix_length_and_dec()
000000000086f1a0 g     F .text	00000000000001cd              QUICK_GROUP_MIN_MAX_SELECT::add_range(SEL_ARG*)
000000000084eaea g     F .text	000000000000008d              Old_rows_log_event::~Old_rows_log_event()
00000000008c5cd0 g     F .text	0000000000000043              Event_queue::~Event_queue()
0000000000919433 g     F .text	0000000000000073              ftparser_alloc_param
00000000005aea6c g     F .text	0000000000000062              close_mysql_tables(THD*)
00000000006d81e5 g     F .text	000000000000006f              my_locale_by_number(unsigned int)
0000000000b688d4 g     F .text	00000000000003b2              ha_partition::rnd_init(bool)
00000000005c9820 g     F .text	0000000000000029              thd_increment_bytes_received
00000000007d9dbf  w    F .text	0000000000000042              my_decimal_sub(unsigned int, my_decimal*, my_decimal const*, my_decimal const*)
000000000077bbec  w    F .text	0000000000000010              handler::try_semi_consistent_read(bool)
0000000000b6e214 g     F .text	0000000000000095              ha_partition::get_row_type() const
00000000006b7724 g     F .text	0000000000000138              TABLE_LIST::last_leaf_for_name_resolution()
0000000000603fc0 g     F .text	000000000000024e              st_select_lex_unit::add_fake_select_lex(THD*)
00000000007bb4c4  w    F .text	0000000000000040              Item_func_aes_decrypt::Item_func_aes_decrypt(Item*, Item*)
00000000010c38f0  w    O .data.rel.ro	0000000000000078              vtable for sp_instr_jump_if_not
00000000006c25f3 g     F .text	0000000000001831              mysql_create_frm(THD*, char const*, char const*, char const*, st_ha_create_information*, List<Create_field>&, unsigned int, st_key*, handler*)
00000000005b0094  w    F .text	0000000000000058              THD::binlog_flush_pending_rows_event(bool)
000000000070acd4  w    F .text	000000000000003c              Sys_var_flagset::session_update(THD*, set_var*)
00000000007674ca  w    F .text	000000000000000f              Field_bit::type() const
00000000007e3384  w    F .text	000000000000001f              Item_row::addr(unsigned int)
00000000005b0910  w    F .text	0000000000000039              I_P_List<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> >::I_P_List()
0000000000953f1b g     F .text	0000000000000339              _mi_read_rnd_pack_record
0000000000765ca0  w    F .text	0000000000000027              Field_float::row_pack_length() const
00000000007e32ac  w    F .text	000000000000002a              Item_row::val_str(String*)
0000000000892418 g     F .text	000000000000013b              Gis_geometry_collection::init_from_wkt(Gis_read_stream*, String*)
0000000000000000       F *UND*	0000000000000000              htonl@@GLIBC_2.2.5
00000000007dda84  w    F .text	000000000000002b              Item_func_int_div::~Item_func_int_div()
0000000001374d60 g     O .bss	0000000000000060              my_locale_ru_UA
0000000000902beb g     F .text	000000000000031e              base64_decode
0000000000786ef8 g     F .text	0000000000000191              Item_param::val_str(String*)
0000000001368c20 g     O .data	0000000000000800              my_unicase_default
00000000007e1cf4  w    F .text	000000000000002b              Item_func_srid::~Item_func_srid()
00000000007bb484  w    F .text	0000000000000040              Item_func_aes_encrypt::Item_func_aes_encrypt(Item*, Item*)
00000000010b73c0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_makedate
0000000000958930 g     F .text	00000000000000c5              mi_scan_init
0000000000825ac0 g     F .text	000000000000030c              MYSQL_BIN_LOG::purge_logs_before_date(long)
0000000000817f60  w    F .text	000000000000002b              Item_func_unix_timestamp::~Item_func_unix_timestamp()
0000000000678662  w    F .text	000000000000002d              Trigger_error_handler::Trigger_error_handler()
0000000000ba89ea g     F .text	00000000000000b7              new_VioSSLAcceptorFd
0000000000828fff g     F .text	00000000000000c2              query_error_code(THD*, bool)
00000000007c2970  w    F .text	0000000000000041              Create_func_unhex::~Create_func_unhex()
00000000007d53fe g     F .text	000000000000002b              Item_user_var_as_out_param::val_real()
000000000055a24c g     F .text	0000000000000165              net_clear
00000000012cbdc0 g     O .data	0000000000000058              my_collation_utf16_uca_handler
00000000007a7118 g     F .text	0000000000000036              cmp_item_int::make_same()
000000000056e0a0 g     F .text	0000000000000182              init_strvar_from_file(char*, int, st_io_cache*, char const*)
00000000008c5f0e g     F .text	00000000000001b4              Event_queue::create_event(THD*, Event_queue_element*, bool*)
000000000106a448  w    O .data.rel.ro	0000000000000078              vtable for sys_var_pluginvar
00000000005ceb74  w    F .text	000000000000001b              List<Alter_column>::~List()
0000000000808b26  w    F .text	000000000000002b              Item_sum_num::~Item_sum_num()
0000000000598d78  w    F .text	000000000000001f              Query_tables_list::~Query_tables_list()
000000000080fada g     F .text	0000000000000066              Item_func_sysdate_local::store_now_in_TIME(st_mysql_time*)
0000000000558c74  w    F .text	0000000000000032              base_ilist_iterator::base_ilist_iterator(base_ilist&)
0000000000784e0c g     F .text	00000000000000b6              Item_decimal::Item_decimal(unsigned char const*, int, int)
000000000089951e g     F .text	0000000000000047              compare_ulonglong(unsigned long long const*, unsigned long long const*)
0000000001069cb8  w    O .data.rel.ro	0000000000000028              vtable for Foreign_key
0000000000765450  w    F .text	000000000000000f              Field_tiny::type() const
00000000005e88ce  w    F .text	0000000000000033              handler::ha_end_bulk_insert()
000000000121b4a0 g     O .data	0000000000000101              ctype_swe7_bin
00000000008d522c g     F .text	0000000000000052              list_cons
0000000000826efc g     F .text	000000000000021a              THD::binlog_setup_trx_data()
0000000000b6849e g     F .text	000000000000010c              ha_partition::start_part_bulk_insert(THD*, unsigned int)
00000000007c0486  w    F .text	0000000000000041              Create_func_like_range_min::~Create_func_like_range_min()
00000000005b6874 g     F .text	00000000000000f2              Query_cache::destroy()
000000000059a01a  w    F .text	0000000000000211              ACL_PROXY_USER::pk_equals(ACL_PROXY_USER*)
0000000000558a8e  w    F .text	000000000000003c              base_ilist::is_last(ilink*)
00000000007efb14 g     F .text	0000000000000597              Item_func_export_set::val_str(String*)
000000000070a00e  w    F .text	000000000000010d              Sys_var_keycache::Sys_var_keycache(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(THD*, st_key_cache*, long, unsigned long long), char const*)
000000000107d760  w    O .data.rel.ro	0000000000000068              vtable for Hybrid_type_traits
00000000007b159c  w    F .text	000000000000002b              Item_func_equal::~Item_func_equal()
0000000000767ad8  w    F .text	000000000000001a              List<Create_field>::head()
00000000012c9f60 g     O .data	00000000000000b0              my_charset_utf8mb4_unicode_ci
0000000000877004  w    F .text	000000000000000f              Item_proc_string::result_type() const
00000000007f1996  w    F .text	0000000000000011              Item_func_concat_ws::func_name() const
00000000007b4472 g     F .text	0000000000000050              Create_func_geometry_type::create(THD*, Item*)
000000000074c014 g     F .text	0000000000000029              Field_new_decimal::reset()
00000000007dcdb4  w    F .text	0000000000000046              Item_func_coercibility::~Item_func_coercibility()
000000000065c44c  w    F .text	000000000000001b              Bitmap<4096u>::Bitmap()
0000000000849b36  w    F .text	000000000000001b              sql_exchange::~sql_exchange()
0000000001086778  w    O .data.rel.ro	0000000000000048              vtable for in_vector
0000000000709bb4  w    F .text	0000000000000058              Sys_var_lexstring::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000007a9fb4 g     F .text	00000000000000e6              Item_cond_or::val_int()
00000000007e9610 g     F .text	000000000000059a              Item_func_rtrim::val_str(String*)
000000000090f316  w    F .text	000000000000000b              PFS_instrument_view_constants::PFS_instrument_view_constants()
000000000080a384  w    F .text	0000000000000046              Item_sum_udf_int::~Item_sum_udf_int()
000000000089dd2c g     F .text	00000000000000ad              multi_delete::multi_delete(TABLE_LIST*, unsigned int)
0000000000816cec  w    F .text	000000000000002a              Item_time_typecast::save_in_field(Field*, bool)
0000000000887ef0 g     F .text	000000000000008d              sp_instr_set_case_expr::execute(THD*, unsigned int*)
00000000005d010a  w    F .text	0000000000000026              List<Key>::disjoin(List<Key>*)
000000000073a4d4  w    F .text	0000000000000038              Item_func_quarter::Item_func_quarter(Item*)
00000000005cdb36 g     F .text	0000000000000076              THD::increment_con_per_hour_counter()
00000000012cab60 g     O .data	00000000000000b0              my_charset_utf8mb4_persian_uca_ci
00000000005ce52e  w    F .text	0000000000000012              xid_t::key()
0000000000816992  w    F .text	0000000000000046              Item_typecast::~Item_typecast()
000000000070e4f8  w    F .text	000000000000003e              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::max_var_ptr()
00000000005ee610 g     F .text	000000000000000f              st_select_lex_node::get_in_sum_expr()
000000000059b100  w    F .text	000000000000001b              List<LEX_COLUMN>::List()
00000000006bd1cc g     F .text	00000000000002df              make_truncated_value_warning(THD*, MYSQL_ERROR::enum_warning_level, char const*, unsigned int, enum_mysql_timestamp_type, char const*)
0000000000765db0  w    F .text	0000000000000027              Field_double::row_pack_length() const
00000000009064ab g     F .text	00000000000000cc              find_per_thread_cond_class_wait_stat(PFS_thread*, PFS_cond_class*)
00000000007f2bea  w    F .text	0000000000000046              Item_func_inet_ntoa::~Item_func_inet_ntoa()
00000000007bd0a2  w    F .text	0000000000000026              Create_udf_func::~Create_udf_func()
0000000001088140  w    O .data.rel.ro	0000000000000030              vtable for Create_func_connection_id
0000000000876cc2  w    F .text	000000000000000f              Item_proc::type() const
0000000000778c52 g     F .text	0000000000000121              ha_resize_key_cache(st_key_cache*)
000000000136daa0 g     O .bss	0000000000000200              lc_messages_dir
000000000077e7bc g     F .text	000000000000017d              Item::val_decimal_from_string(my_decimal*)
00000000007b032e  w    F .text	000000000000000f              Item_cond_xor::type() const
000000000070d032  w    F .text	000000000000001a              List<set_var_base>::pop()
00000000007c4b64 g     F .text	0000000000000209              Item_func::eq(Item const*, bool) const
00000000005cfd04  w    F .text	0000000000000046              select_result_interceptor::~select_result_interceptor()
00000000007af5f0  w    F .text	000000000000002d              cmp_item_int::cmp_item_int()
000000000136e100 g     O .bss	0000000000000200              secure_file_real_path
0000000000816db8  w    F .text	0000000000000028              Item_datetime_typecast::fix_length_and_dec()
000000000090bf7c  w    F .text	000000000000001d              ACL_internal_table_access::ACL_internal_table_access()
0000000001373d5c g     O .bss	0000000000000004              key_thread_event_scheduler
000000000077f25c g     F .text	000000000000003a              Item::cleanup_processor(unsigned char*)
0000000001087b70  w    O .data.rel.ro	0000000000000030              vtable for Create_func_floor
000000000138c98c g     O .bss	0000000000000004              my_large_page_size
0000000000ba5527 g     F .text	000000000000006b              my_xml_error_pos
00000000007c116a  w    F .text	0000000000000041              Create_func_ord::~Create_func_ord()
00000000005597a0  w    F .text	000000000000001a              I_List<THD>::head()
00000000005b0b7e  w    F .text	0000000000000025              Hash_set<TABLE_LIST, &schema_set_get_key>::Hash_set()
00000000006df9b8  w    F .text	0000000000000036              Relay_log_info::clear_flag(Relay_log_info::enum_state_flag)
00000000006c7c66 g     F .text	00000000000000b9              Event_timed::Event_timed()
0000000000886380 g     F .text	0000000000000098              sp_instr_set::exec_core(THD*, unsigned int*)
0000000001386550 g     O .bss	0000000000000008              Create_func_instr::s_singleton
000000000136fb40 g     O .bss	0000000000000038              COND_server_started
0000000000678768  w    F .text	000000000000001d              List_iterator_fast<char>::operator++(int)
0000000000b6d244 g     F .text	0000000000000157              ha_partition::prepare_for_rename()
000000000073a71c  w    F .text	0000000000000050              Item_date_func::val_decimal(my_decimal*)
00000000007a9a88 g     F .text	00000000000000ab              Item_cond::split_sum_func(THD*, Item**, List<Item>&)
0000000000911012  w    F .text	0000000000000041              table_performance_timers::~table_performance_timers()
00000000005ceb58  w    F .text	000000000000001b              List<Alter_drop>::~List()
00000000008ea208 g     F .text	0000000000000104              create_last_word_mask
0000000000626c9e  w    F .text	000000000000002d              MYSQL_BIN_LOG::unlock_index()
00000000006073dc  w    F .text	0000000000000092              THD::send_kill_message() const
00000000005ba9aa g     F .text	0000000000000057              Query_cache::double_linked_list_join(Query_cache_block*, Query_cache_block*)
00000000012bd080 g     O .data	0000000000000400              page028data
000000000065a9f4  w    F .text	0000000000000047              SQL_SELECT::set_quick(QUICK_SELECT_I*)
00000000006df97c  w    F .text	0000000000000014              MYSQL_BIN_LOG::get_index_fname()
0000000000816338  w    F .text	0000000000000046              Item_func_curtime::~Item_func_curtime()
00000000010c2278  w    O .data.rel.ro	0000000000000028              vtable for TRP_INDEX_MERGE
0000000001093ef0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_cot
000000000081d2e2 g     F .text	00000000000000d6              LOGGER::cleanup_base()
0000000000566ea8  w    F .text	000000000000002a              Item::subst_argument_checker(unsigned char**)
000000000069877c  w    F .text	000000000000002f              Sub_statement_state::Sub_statement_state()
0000000000b810f1 g     F .text	0000000000000076              my_strnncoll_mb_bin
00000000005f4b4c g     F .text	000000000000008b              free_items(Item*)
000000000090c946 g     F .text	000000000000004b              table_events_waits_common::table_events_waits_common(PFS_engine_table_share const*, void*)
000000000067881a  w    F .text	000000000000002d              List<char>::push_back(char*, st_mem_root*)
00000000005d8ffe g     F .text	00000000000000e9              push_warning(THD*, MYSQL_ERROR::enum_warning_level, unsigned int, char const*)
000000000082dbf4  w    F .text	0000000000000078              binlog_cache_mngr::binlog_cache_mngr(unsigned long long, unsigned long long, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
00000000006e6e82 g     F .text	0000000000000058              init_max_user_conn()
0000000001208920 g     O .data	0000000000000200              to_uni_hp8_english_ci
00000000007999c2  w    F .text	000000000000000f              Item_cache_datetime::result_as_longlong()
00000000007dd766  w    F .text	000000000000002b              Item_func_log10::~Item_func_log10()
000000000079a0fe  w    F .text	0000000000000046              Item_cache_row::~Item_cache_row()
000000000138cc38 g     O .bss	0000000000000008              file_handle_lost
00000000008cbaf2  w    F .text	0000000000000046              Alter_table_statement::~Alter_table_statement()
00000000008890d6  w    F .text	000000000000002b              sp_instr_set::~sp_instr_set()
00000000008ff544 g     F .text	000000000000001d              safe_mutex_global_init
0000000001385df0 g     O .bss	0000000000000008              total_ha
00000000010cd988 g     O .data	0000000000000008              binary_keyword
0000000000808bfe  w    F .text	0000000000000035              Item_sum_int::fix_length_and_dec()
00000000008892da  w    F .text	0000000000000056              sp_instr_jump_if_not::~sp_instr_jump_if_not()
00000000007d7a02 g     F .text	0000000000000519              Item_func_match::fix_index()
00000000006c1ce0  w    F .text	0000000000000046              Time_zone_db::~Time_zone_db()
000000000091e948 g     F .text	00000000000000ec              ha_myisam::end_bulk_insert()
00000000007bf5e0  w    F .text	0000000000000041              Create_func_geometry_from_text::~Create_func_geometry_from_text()
000000000075b86e g     F .text	0000000000000154              Field_blob::val_int()
000000000065982c  w    F .text	0000000000000046              Item_result_field::~Item_result_field()
00000000007f620e g     F .text	00000000000000ef              Item_exists_subselect::Item_exists_subselect(st_select_lex*)
000000000070bb10  w    F .text	0000000000000130              Sys_var_debug_sync::do_check(THD*, set_var*)
000000000065bf80  w    F .text	000000000000001a              I_List<COND_CMP>::head()
000000000065c0e0  w    F .text	000000000000001a              List<Item_func_match>::pop()
00000000007e15cc  w    F .text	0000000000000011              Item_func_geometry_from_wkb::func_name() const
00000000006c6a1a  w    F .text	0000000000000035              Pack_header_error_handler::Pack_header_error_handler()
000000000080943c  w    F .text	000000000000000f              Item_sum_std::field_type() const
0000000001087090  w    O .data.rel.ro	0000000000000030              vtable for Create_func_pow
00000000007bb94a  w    F .text	0000000000000052              Item_func_encode::Item_func_encode(Item*, Item*)
00000000007bd510  w    F .text	0000000000000041              Create_func_acos::~Create_func_acos()
00000000012b4280 g     O .data	0000000000000600              page00Fdata
000000000065b932  w    F .text	000000000000002b              store_key_item::~store_key_item()
00000000006ba9b6  w    F .text	0000000000000052              MDL_context::will_wait_for(MDL_wait_for_subgraph*)
00000000007fc3dc  w    F .text	000000000000000f              Item_exists_subselect::substype()
000000000090e1b4  w    F .text	0000000000000020              pos_events_waits_history::reset()
000000000136e4a8 g     O .bss	0000000000000008              binlog_filter
0000000000000000       F *UND*	0000000000000000              setreuid@@GLIBC_2.2.5
000000000061b2d8 g     F .text	00000000000000b9              Protocol_local::Protocol_local(THD*, Ed_connection*)
00000000010c12c0  w    O .data.rel.ro	0000000000000080              vtable for Table_map_log_event
00000000007bf910  w    F .text	0000000000000026              Create_func_glength::~Create_func_glength()
00000000005b8958 g     F .text	000000000000051e              Query_cache::register_tables_from_list(TABLE_LIST*, unsigned int, Query_cache_block_table*)
0000000000567430  w    F .text	000000000000002b              Item_int::~Item_int()
0000000001093428  w    O .data.rel.ro	0000000000000398              vtable for Item_func_bit_neg
00000000007f25ca  w    F .text	0000000000000035              Item_func_set_collation::filed_for_view_update()
0000000000778d73 g     F .text	0000000000000084              ha_change_key_cache_param(st_key_cache*)
0000000000566736  w    F .text	0000000000000033              Item::save_org_in_field(Field*)
000000000073a6dc  w    F .text	000000000000000f              Item_date_func::result_as_longlong()
000000000080a86a  w    F .text	0000000000000046              Item_sum_avg::~Item_sum_avg()
00000000007bfbfe  w    F .text	0000000000000026              Create_func_inet_aton::~Create_func_inet_aton()
000000000090faca g     F .text	00000000000000c1              table_file_instances::rnd_next()
00000000005b3c5a g     F .text	0000000000000c08              Query_cache::store_query(THD*, TABLE_LIST*)
00000000007b120c  w    F .text	000000000000002b              Item_func_between::~Item_func_between()
0000000000893910  w    F .text	000000000000002d              Gis_polygon::Gis_polygon()
00000000008cb31a  w    F .text	0000000000000046              Alter_table_check_partition_statement::~Alter_table_check_partition_statement()
00000000005d0c7c  w    F .text	0000000000000025              List_iterator<Alter_column>::replace(Alter_column*)
00000000005a5b54 g     F .text	000000000000001f              Alter_table_prelocking_strategy::handle_table(THD*, Query_tables_list*, TABLE_LIST*, bool*)
00000000007b0a50  w    F .text	000000000000002b              Item_cond_and::~Item_cond_and()
000000000066bf0c g     F .text	000000000000022e              fill_schema_coll_charset_app(THD*, TABLE_LIST*, Item*)
00000000007ba56a  w    F .text	0000000000000082              Item_func_min_max::Item_func_min_max(List<Item>&, int)
000000000061abd9 g     F .text	0000000000000089              Ed_result_set::operator delete(void*, unsigned long)
00000000007bc350  w    F .text	0000000000000038              Item_func_as_wkt::Item_func_as_wkt(Item*)
0000000000911dac  w    F .text	0000000000000026              table_setup_instruments::~table_setup_instruments()
00000000005b1384  w    F .text	0000000000000026              No_such_table_error_handler::~No_such_table_error_handler()
0000000000738a20  w    F .text	0000000000000038              Item_func_bit_neg::Item_func_bit_neg(Item*)
0000000000584614 g     F .text	000000000000002b              GRANT_TABLE::~GRANT_TABLE()
00000000005d759a g     F .text	0000000000000558              mysql_derived_prepare(THD*, LEX*, TABLE_LIST*)
00000000008c62a6 g     F .text	0000000000000114              Event_queue::drop_event(THD*, st_mysql_lex_string, st_mysql_lex_string)
00000000007b1088  w    F .text	0000000000000046              Item_func_if::~Item_func_if()
0000000000908dac g     F .text	00000000000001c9              register_mutex_class(char const*, unsigned int, int)
00000000007b3118 g     F .text	00000000000000c8              Create_func_datediff::create(THD*, Item*, Item*)
00000000007ae8aa  w    F .text	000000000000000f              Item_func_gt::rev_functype() const
00000000007d3d7a g     F .text	000000000000007c              Item_func_set_user_var::val_decimal_result(my_decimal*)
00000000006075e4  w    F .text	0000000000000018              Table_ident::is_derived_table() const
000000000060da7c g     F .text	0000000000000373              plugin_foreach_with_mask(THD*, char (*)(THD*, st_plugin_int**, void*), int, unsigned int, void*)
0000000000911430 g     F .text	0000000000000106              table_setup_consumers::update_row_values(TABLE*, unsigned char const*, unsigned char*, Field**)
00000000007db88a  w    F .text	000000000000000b              Item_func_match::update_used_tables()
0000000000876dc2  w    F .text	0000000000000022              Item_proc_real::set(long long)
0000000000786dc4 g     F .text	0000000000000133              Item_param::val_decimal(my_decimal*)
00000000006f2dd4 g     F .text	00000000000000be              MDL_context::try_acquire_lock(MDL_request*)
000000000136fbe0 g     O .bss	0000000000000008              opt_bin_logname
00000000006bda9b g     F .text	0000000000000201              calc_time_diff(st_mysql_time*, st_mysql_time*, int, long long*, long*)
00000000007a714e g     F .text	0000000000000036              cmp_item_real::make_same()
000000000090e05d  w    F .text	000000000000000b              PFS_atomic::rdunlock(void volatile*)
00000000005ea657 g     F .text	00000000000005eb              lex_start(THD*)
00000000010886d8  w    O .data.rel.ro	0000000000000028              vtable for Create_func
0000000000920bd4 g     F .text	000000000000006f              is_stopword
0000000000815d4e  w    F .text	0000000000000021              Item_func_yearweek::check_valid_arguments_processor(unsigned char*)
000000000074de96 g     F .text	0000000000000084              Field_tiny::cmp(unsigned char const*, unsigned char const*)
0000000001370814 g     O .bss	0000000000000004              key_COND_active
000000000088a1a4 g     F .text	00000000000001b4              sp_pcontext::sp_pcontext(sp_pcontext*, label_scope_type)
0000000000849bc4  w    F .text	0000000000000046              Write_rows_log_event::~Write_rows_log_event()
000000000069824c  w    F .text	000000000000004b              Stored_program_creation_ctx::Stored_program_creation_ctx(THD*)
0000000000847ee6 g     F .text	00000000000000b8              Update_rows_log_event::do_before_row_operations(Slave_reporting_capability const*)
00000000007ba11a  w    F .text	0000000000000038              Item_func_log10::Item_func_log10(Item*)
00000000007f45b2 g     F .text	000000000000012e              Item_subselect::cleanup()
0000000000815e3a  w    F .text	0000000000000086              Item_func_weekday::val_str(String*)
00000000006b9a4e g     F .text	00000000000001cc              TABLE::mark_columns_needed_for_update()
00000000007e1514  w    F .text	0000000000000034              Item_geometry_func::is_null()
000000000080f6f6 g     F .text	00000000000000b2              Item_func_curtime::fix_length_and_dec()
00000000005f1b5a  w    F .text	000000000000002e              List<char>::List(List<char> const&, st_mem_root*)
00000000008cad70 g     F .text	00000000000000a1              Alter_table_check_partition_statement::execute(THD*)
000000000073be6e  w    F .text	000000000000006b              sp_instr_opt_meta::sp_instr_opt_meta(unsigned int, sp_pcontext*)
000000000070e82e  w    F .text	0000000000000026              Sys_var_session_special::~Sys_var_session_special()
00000000007eea90 g     F .text	000000000000012a              Item_func_set_collation::print(String*, enum_query_type)
00000000005e83f4 g     F .text	00000000000001f2              select_create::abort_result_set()
0000000001376680 g     O .bss	0000000000000060              my_locale_zh_HK
00000000008c3ab2 g     F .text	0000000000000110              deinit_event_thread(THD*)
00000000010c84e8  w    O .data.rel.ro	0000000000000360              vtable for Item_bool
0000000000806794 g     F .text	000000000000033d              Item_func_group_concat::Item_func_group_concat(Name_resolution_context*, bool, List<Item>*, SQL_I_List<st_order> const&, String*)
00000000008735fe  w    F .text	000000000000002d              TRP_INDEX_MERGE::TRP_INDEX_MERGE()
0000000000000000       F *UND*	0000000000000000              pthread_rwlock_wrlock@@GLIBC_2.2.5
0000000000866420 g     F .text	0000000000000312              SEL_ARG::tree_delete(SEL_ARG*)
00000000006589de  w    F .text	000000000000004c              handler::max_key_parts() const
0000000001086a30  w    O .data.rel.ro	0000000000000030              vtable for Create_func_uncompressed_length
000000000085773a g     F .text	0000000000000073              QUICK_INDEX_MERGE_SELECT::reset()
0000000000817824  w    F .text	0000000000000046              Item_extract::~Item_extract()
00000000005c0963 g     F .text	000000000000000b              thd_get_current_thd()
0000000001069590  w    O .data.rel.ro	0000000000000028              vtable for Repair_mrg_table_error_handler
00000000007098ce  w    F .text	0000000000000040              Sys_var_proxy_user::session_value_ptr(THD*, st_mysql_lex_string*)
00000000007905fa g     F .text	000000000000005f              Item_ref::get_date(st_mysql_time*, unsigned int)
000000000060b2a9 g     F .text	0000000000000035              get_bookmark_hash_key
00000000005e07c0 g     F .text	000000000000061a              mysql_prepare_insert(THD*, TABLE_LIST*, TABLE*, List<Item>&, List<Item>*, List<Item>&, List<Item>&, enum_duplicates, Item**, bool, bool, bool)
00000000008ead84 g     F .text	00000000000000ea              bitmap_is_overlapping
00000000008ec800 g     F .text	0000000000000105              my_printv_error
00000000005c5772 g     F .text	0000000000000668              select_export::prepare(List<Item>&, st_select_lex_unit*)
00000000005c4dce g     F .text	000000000000003d              select_result::select_result()
0000000000b69fc8 g     F .text	0000000000000086              ha_partition::index_last(unsigned char*)
000000000069da8e  w    F .text	0000000000000047              TMP_TABLE_PARAM::~TMP_TABLE_PARAM()
000000000070e050  w    F .text	0000000000000045              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::make_symbolic(void (*)(void*, unsigned long, char const*))
000000000091fa82 g     F .text	0000000000000029              ha_myisam::reset_auto_increment(unsigned long long)
00000000007dceaa  w    F .text	0000000000000046              Item_func_units::~Item_func_units()
0000000000559b7e  w    F .text	0000000000000026              I_List_iterator<Statement>::I_List_iterator(I_List<Statement>&)
000000000090f3ec  w    F .text	0000000000000022              pos_events_waits_summary_by_thread_by_event_name::has_more_thread()
00000000006aac02 g     F .text	00000000000001cf              flagset_to_string(THD*, st_mysql_lex_string*, unsigned long long, char const**)
0000000000992670 g     F .text	0000000000000048              myrg_delete
0000000000917666 g     F .text	00000000000000db              pfs_malloc(unsigned long, int)
000000000070e64c  w    F .text	0000000000000041              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::~Sys_var_unsigned()
0000000000678ca6  w    F .text	0000000000000026              Show_create_error_handler::~Show_create_error_handler()
0000000000818238  w    F .text	0000000000000046              Item_func_hour::~Item_func_hour()
000000000073a272  w    F .text	0000000000000040              Item_geometry_func::Item_geometry_func(Item*, Item*)
00000000008c13f0  w    F .text	000000000000004e              Item_nodeset_func_parentbyname::Item_nodeset_func_parentbyname(Item*, char const*, unsigned int, String*)
00000000007bad30  w    F .text	0000000000000038              Item_func_udf_int::Item_func_udf_int(st_udf_func*)
000000000091f094 g     F .text	000000000000009d              ha_myisam::index_prev(unsigned char*)
0000000000876f26  w    F .text	0000000000000079              Item_proc_int::set(char const*, unsigned int, charset_info_st*)
0000000000899840  w    F .text	0000000000000045              Item_proc_string::Item_proc_string(char const*, unsigned int)
00000000005f0e76  w    F .text	00000000000000b2              Alter_info::Alter_info()
000000000138c997 g     O .bss	0000000000000001              my_disable_symlinks
0000000000886860 g     F .text	000000000000008b              sp_instr_jump::opt_shortcut_jump(sp_head*, sp_instr*)
00000000006f50e0  w    F .text	000000000000000f              I_P_List_null_counter::swap(I_P_List_null_counter&)
0000000001069d08  w    O .data.rel.ro	0000000000000028              vtable for Sql_handler_lock_error_handler
0000000000763b50 g     F .text	00000000000000e8              Field::set_warning(MYSQL_ERROR::enum_warning_level, unsigned int, int)
00000000007bce10  w    F .text	0000000000000040              Item_func_timediff::Item_func_timediff(Item*, Item*)
00000000007c1e90  w    F .text	0000000000000026              Create_func_soundex::~Create_func_soundex()
0000000000849b98  w    F .text	000000000000002b              Delete_rows_log_event::~Delete_rows_log_event()
0000000000793cf8 g     F .text	0000000000000080              Item_cache_real::val_decimal(my_decimal*)
000000000073994c  w    F .text	0000000000000058              Item_str_func::Item_str_func(Item*, Item*, Item*, Item*)
0000000000898666 g     F .text	0000000000000044              field_decimal::get_max_arg(String*)
0000000000766676  w    F .text	000000000000000f              Field_time::derivation() const
0000000000558f44  w    F .text	000000000000001b              my_decimal::~my_decimal()
00000000007b0876  w    F .text	000000000000002b              Item_func_like::~Item_func_like()
0000000000658fe8  w    F .text	0000000000000070              Field_string::Field_string(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
000000000083c978 g     F .text	0000000000000642              User_var_log_event::pack_info(Protocol*)
00000000006ed8b8  w    F .text	000000000000003d              Sql_statement::~Sql_statement()
000000000081564a  w    F .text	00000000000000f3              Item_func::has_datetime_args()
00000000005c8a18 g     F .text	00000000000000a6              Statement::restore_backup_statement(Statement*, Statement*)
000000000065bebe  w    F .text	0000000000000025              I_List<COND_CMP>::is_last(COND_CMP*)
000000000136f980 g     O .bss	0000000000000040              LOCK_sys_init_connect
00000000007bf80a  w    F .text	000000000000002d              Create_func_get_lock::Create_func_get_lock()
00000000007f570c g     F .text	000000000000005f              Item_maxmin_subselect::print(String*, enum_query_type)
0000000000787e5b g     F .text	0000000000000009              non-virtual thunk to Item_param::set_value(THD*, sp_rcontext*, Item**)
00000000007f9dce g     F .text	0000000000000050              subselect_union_engine::no_rows()
00000000012192e0 g     O .data	0000000000000100              to_upper_koi8r_bin
000000000121c500 g     O .data	0000000000000101              ctype_latin1_spanish_ci
0000000001375780 g     O .bss	0000000000000060              my_locale_ar_TN
00000000006d7052 g     F .text	0000000000000040              Deferred_log_events::Deferred_log_events(Relay_log_info*)
00000000013707f0 g     O .bss	0000000000000004              key_RELAYLOG_LOCK_index
000000000090c992 g     F .text	000000000000003e              table_events_waits_common::clear_object_columns()
000000000075bd72 g     F .text	00000000000000ef              Field_blob::cmp_binary(unsigned char const*, unsigned char const*, unsigned int)
0000000000816c74  w    F .text	0000000000000028              Item_time_typecast::val_real()
00000000006a4ec4  w    F .text	000000000000001b              List<TABLE>::List()
0000000001097500  w    O .data.rel.ro	00000000000003c0              vtable for Item_func_neg
00000000007be9fa  w    F .text	000000000000002d              Create_func_des_decrypt::Create_func_des_decrypt()
0000000000817702  w    F .text	000000000000002b              Item_time_typecast::~Item_time_typecast()
00000000007bd3b6  w    F .text	000000000000002d              Create_sp_func::Create_sp_func()
00000000007497d6 g     F .text	0000000000000104              Field_num::store_decimal(my_decimal const*)
00000000005c0f54 g     F .text	0000000000000015              thd_sql_command
00000000009ac3fa  w    F .text	0000000000000046              handler_add_index::~handler_add_index()
00000000007c2f4c  w    F .text	0000000000000041              Create_func_xml_update::~Create_func_xml_update()
000000000070eccc  w    F .text	0000000000000041              Sys_var_mybool::~Sys_var_mybool()
00000000012c8340 g     O .data	00000000000000b0              my_charset_ucs2_romanian_uca_ci
00000000007bf2f2  w    F .text	0000000000000041              Create_func_floor::~Create_func_floor()
000000000083fad4 g     F .text	0000000000000066              Delete_file_log_event::Delete_file_log_event(THD*, char const*, bool)
00000000008722dc  w    F .text	000000000000001b              SEL_ARG::SEL_ARG()
000000000073c968  w    F .text	0000000000000038              Alter_table_truncate_partition_statement::Alter_table_truncate_partition_statement(LEX*)
000000000138dce0 g     O .bss	0000000000000100              table_setup_timers::m_table_lock
000000000121c300 g     O .data	0000000000000200              to_uni_geostd8_bin
000000000070c4c8  w    F .text	0000000000000013              Sys_var_session_special::make_symbolic(void (*)(void*, unsigned long, char const*))
0000000001075570  w    O .data.rel.ro	0000000000000388              vtable for Item_cache_datetime
00000000005d044c  w    F .text	0000000000000026              List<Key_part_spec>::concat(List<Key_part_spec>*)
00000000010b08a0  w    O .data.rel.ro	00000000000003c0              vtable for Item_sum_udf_decimal
00000000010bbfa8  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_curdate
0000000000659550  w    F .text	000000000000000f              Item_null::is_null()
00000000005cf144  w    F .text	000000000000001b              List<Name_resolution_context>::~List()
00000000007f2cce  w    F .text	0000000000000058              Item_load_file::~Item_load_file()
0000000000844cf0 g     F .text	0000000000000520              Table_map_log_event::do_apply_event(Relay_log_info const*)
000000000084974e  w    F .text	0000000000000080              Rows_log_event::is_auto_inc_in_extra_columns()
000000000067886e  w    F .text	000000000000001a              List<char>::head()
00000000007b0058  w    F .text	0000000000000058              Item_cond::~Item_cond()
00000000006f49c0 g     F .text	00000000000000fe              MDL_context::is_lock_owner(MDL_key::enum_mdl_namespace, char const*, char const*, enum_mdl_type)
00000000010867c0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_year_week
000000000087e828  w    F .text	000000000000002d              Silence_deprecated_warning::Silence_deprecated_warning()
0000000000739c82  w    F .text	0000000000000057              Item_func_substr::Item_func_substr(Item*, Item*, Item*)
00000000006bf93a g     F .text	0000000000000012              Time_zone_offset::get_name() const
00000000007db9c6  w    F .text	0000000000000046              Item_func_sp::~Item_func_sp()
0000000000000000       F *UND*	0000000000000000              sqrt@@GLIBC_2.2.5
00000000005679bc  w    F .text	0000000000000046              Item_return_int::~Item_return_int()
000000000057a362  w    F .text	00000000000000ba              THD::exit_cond(char const*)
000000000079ad0c  w    F .text	0000000000000071              Item_splocal::~Item_splocal()
0000000000985bb0 g     F .text	0000000000000027              heap_position
00000000008185c8  w    F .text	0000000000000046              Item_func_period_diff::~Item_func_period_diff()
000000000056b146  w    F .text	0000000000000046              set_var_base::~set_var_base()
00000000005e97b4  w    F .text	000000000000001b              I_List<delayed_row>::I_List()
00000000010b5e30  w    O .data.rel.ro	0000000000000398              vtable for Item_func_get_format
00000000010705f0  w    O .data.rel.ro	0000000000000298              vtable for Field_str
00000000010ca128  w    O .data.rel.ro	0000000000000048              vtable for PFS_engine_table
000000000074e9e4 g     F .text	000000000000011b              Field_medium::store(char const*, unsigned int, charset_info_st*)
0000000000bb07a9 g     F .text	0000000000000061              my_regex_end
000000000079ae72  w    F .text	000000000000002b              Item_static_float_func::~Item_static_float_func()
000000000079b48e g     F .text	0000000000000094              Cached_item_real::cmp()
000000000070d176  w    F .text	000000000000000f              List_iterator_fast<set_var_base>::ref()
00000000007c068a  w    F .text	0000000000000026              Create_func_load_file::~Create_func_load_file()
0000000000798b2e  w    F .text	0000000000000030              Item_copy_int::val_real()
00000000005af718  w    F .text	000000000000002b              Field_iterator_natural_join::~Field_iterator_natural_join()
00000000006b6b5e g     F .text	0000000000000406              TABLE_LIST::prep_check_option(THD*, unsigned char)
00000000007bd222  w    F .text	0000000000000041              Create_func_arg1::~Create_func_arg1()
0000000001215fa0 g     O .data	0000000000000100              to_upper_armscii8_bin
00000000005c7c02 g     F .text	0000000000000334              select_max_min_finder_subselect::send_data(List<Item>&)
00000000008404ce g     F .text	0000000000000089              Begin_load_query_log_event::Begin_load_query_log_event(THD*, char const*, unsigned char*, unsigned int, bool)
00000000005cf182  w    F .text	000000000000005b              Alter_info::~Alter_info()
0000000000767d58  w    F .text	0000000000000046              Field_bit_as_char::~Field_bit_as_char()
00000000005e9558  w    F .text	000000000000000b              List_iterator_fast<List<Item> >::remove()
0000000000b82fa8 g     F .text	00000000000000e3              my_snprintf_8bit
0000000001375360 g     O .bss	0000000000000060              my_locale_ar_DZ
00000000005f0b70  w    F .text	0000000000000070              st_select_lex_node::st_select_lex_node()
000000000073c968  w    F .text	0000000000000038              Alter_table_truncate_partition_statement::Alter_table_truncate_partition_statement(LEX*)
000000000077bac8  w    F .text	0000000000000019              handler::ft_init_ext(unsigned int, unsigned int, String*)
0000000000677a7d g     F .text	000000000000001d              initialize_information_schema_acl()
000000000077f99c g     F .text	000000000000006d              Item_field::register_field_in_read_map(unsigned char*)
00000000007baf34  w    F .text	0000000000000052              Item_master_pos_wait::Item_master_pos_wait(Item*, Item*)
00000000007bccce  w    F .text	000000000000005b              Item_func_convert_tz::Item_func_convert_tz(Item*, Item*, Item*)
000000000073a92c  w    F .text	000000000000000f              Item_str_timefunc::result_as_longlong()
000000000075f4d4 g     F .text	0000000000000104              Field_bit::store(long long, bool)
0000000001208000 g     O .data	0000000000000100              to_lower_latin1_german1_ci
0000000000801bc2 g     F .text	00000000000000f0              Item_sum_variance::create_tmp_field(bool, TABLE*, unsigned int)
000000000067a6e4 g     F .text	000000000000005a              String::qs_append(double*)
0000000000565432  w    F .text	0000000000000012              Protocol::storage_packet()
000000000121ce40 g     O .data	0000000000000100              sort_order_cp1250_polish_ci
000000000091eeea g     F .text	000000000000010b              ha_myisam::index_read_last_map(unsigned char*, unsigned char const*, unsigned long)
00000000006eabe4  w    F .text	0000000000000032              Queue<PROF_MEASUREMENT>::Queue()
00000000008589be g     F .text	0000000000000029              QUICK_ROR_UNION_SELECT::push_quick_back(QUICK_SELECT_I*)
00000000007bfce8  w    F .text	0000000000000041              Create_func_interiorringn::~Create_func_interiorringn()
0000000000847e9a g     F .text	000000000000004b              Update_rows_log_event::Update_rows_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000005d093e  w    F .text	0000000000000025              List_iterator<Alter_drop>::replace(List<Alter_drop>&)
00000000008c2920 g     F .text	000000000000006f              table_mapping::table_mapping()
0000000000799d84  w    F .text	000000000000000b              List_iterator_fast<Item>::remove()
000000000091033e g     F .text	0000000000000028              table_file_summary_by_instance::create()
00000000007c3a76 g     F .text	000000000000002d              eval_const_cond(Item*)
00000000010dedc0 g     O .data	0000000000000118              table_privileges_fields_info
00000000010ca1c0  w    O .data.rel.ro	0000000000000048              vtable for table_events_waits_history_long
0000000000569fee g     F .text	000000000000011b              throw_bounds_warning(THD*, char const*, bool, bool, long long)
0000000000748252 g     F .text	0000000000000016              finish_client_errs
00000000005c299e g     F .text	000000000000002f              thd_strmake
00000000007bef6e  w    F .text	0000000000000041              Create_func_equals::~Create_func_equals()
00000000007ddd6e  w    F .text	0000000000000046              Item_func_connection_id::~Item_func_connection_id()
00000000006d7e2a  w    F .text	0000000000000018              injector::transaction::good() const
00000000008f3e68 g     F .text	0000000000000279              my_pwrite
00000000007990fc  w    F .text	0000000000000080              Item_cache::Item_cache()
00000000008f65ea g     F .text	0000000000000330              my_thread_global_end
00000000005cf9fc  w    F .text	000000000000008c              THD::set_current_stmt_binlog_format_row_if_mixed()
0000000000607f44  w    F .text	000000000000001a              List<Item>::head()
0000000001214500 g     O .data	0000000000000200              to_uni_cp1251_general_cs
00000000006aa999 g     F .text	000000000000008c              find_string_in_array(st_mysql_lex_string*, st_mysql_lex_string*, charset_info_st*)
0000000001394cd4 g     O .bss	0000000000000004              key_file_charset
00000000007c440a g     F .text	000000000000014f              Item_func::transform(Item* (Item::*)(unsigned char*), unsigned char*)
000000000079f2c6 g     F .text	000000000000014a              Arg_comparator::compare_binary_string()
00000000007c04ee  w    F .text	000000000000002d              Create_func_like_range_max::Create_func_like_range_max()
00000000005f7730 g     F .text	00000000000001af              alloc_query(THD*, char const*, unsigned int)
00000000007bb36a  w    F .text	0000000000000057              Item_str_ascii_func::Item_str_ascii_func(Item*, Item*, Item*)
00000000007c3152  w    F .text	0000000000000046              Item_func_like_range_min::~Item_func_like_range_min()
00000000005d0d98  w    F .text	000000000000001b              I_List<Item_change_record>::~I_List()
0000000001079630  w    O .data.rel.ro	0000000000000360              vtable for Item_copy_string
0000000000918539 g     F .text	00000000000001fc              ft_linearize
0000000001375ae0 g     O .bss	0000000000000060              my_locale_en_NZ
00000000013867a8 g     O .bss	0000000000000008              Create_func_uncompress::s_singleton
000000000075a8e6 g     F .text	0000000000000058              Field_varstring::set_key_image(unsigned char const*, unsigned int)
000000000068e9bf g     F .text	00000000000000c3              mysql_trans_commit_alter_copy_data(THD*)
000000000070ad10  w    F .text	0000000000000035              Sys_var_flagset::global_update(THD*, set_var*)
00000000007b08e8  w    F .text	000000000000002b              Item_func_isnotnull::~Item_func_isnotnull()
000000000057b246 g     F .text	000000000000001b              sp_cache::sp_cache()
000000000092861f g     F .text	000000000000007a              flush_blocks
00000000007baeea  w    F .text	000000000000004a              Item_func_release_lock::Item_func_release_lock(Item*)
000000000076537a  w    F .text	000000000000000f              Field_new_decimal::size_of() const
00000000007f39e2  w    F .text	0000000000000058              Item_func_right::~Item_func_right()
000000000073b7a7  w    F .text	000000000000003a              add_group_to_list(THD*, Item*, bool)
00000000009a8036  w    F .text	000000000000002f              st_foreign_key_info::st_foreign_key_info()
000000000081619a  w    F .text	000000000000000f              Item_date::result_as_longlong()
00000000005cf45a  w    F .text	0000000000000056              Query_arena::Query_arena(st_mem_root*, Query_arena::enum_state)
000000000090e01a  w    F .text	0000000000000038              PFS_atomic::load_u32(unsigned int volatile*)
00000000007995e8  w    F .text	00000000000000f6              Item_cache_str::Item_cache_str(Item const*)
0000000000559b58  w    F .text	0000000000000026              I_List<Statement>::move_elements_to(I_List<Statement>*)
00000000008b7d78 g     F .text	00000000000000d7              set_key_field_ptr(st_key*, unsigned char const*, unsigned char const*)
00000000006596a6  w    F .text	0000000000000053              Item_int::Item_int(int, unsigned int)
0000000001069ce0  w    O .data.rel.ro	0000000000000028              vtable for Key
0000000000000000       F *UND*	0000000000000000              inflate
00000000008136a8 g     F .text	000000000000013b              Item_func_add_time::print(String*, enum_query_type)
0000000001219e20 g     O .data	0000000000000200              to_uni_latin2_bin
0000000000801ea4 g     F .text	00000000000001ac              Item_sum_variance::reset_field()
0000000000873e9a  w    F .text	000000000000001a              List_iterator<QUICK_RANGE>::ref()
000000000093569e g     F .text	00000000000000b9              mi_get_pointer_length
00000000005cd288 g     F .text	00000000000001e0              THD::issue_unsafe_warnings()
00000000005b04fc  w    F .text	0000000000000043              No_such_table_error_handler::No_such_table_error_handler()
00000000007f3868  w    F .text	0000000000000046              Item_func_ltrim::~Item_func_ltrim()
000000000073ae4e  w    F .text	0000000000000038              Item_date_typecast::Item_date_typecast(Item*)
0000000000817ada  w    F .text	000000000000002b              Item_func_sec_to_time::~Item_func_sec_to_time()
0000000000000000       F *UND*	0000000000000000              setrlimit64@@GLIBC_2.2.5
0000000000567872  w    F .text	000000000000007f              Item_empty_string::Item_empty_string(char const*, unsigned int, charset_info_st*)
00000000007ae1b6  w    F .text	0000000000000011              Item_in_optimizer::func_name() const
0000000000810e92 g     F .text	0000000000000138              Item_date_add_interval::get_date(st_mysql_time*, unsigned int)
000000000073c738  w    F .text	0000000000000038              Alter_table_statement::Alter_table_statement(LEX*)
000000000138cc80 g     O .bss	0000000000000008              thread_array
00000000010ca590  w    O .data.rel.ro	0000000000000048              vtable for table_setup_timers
000000000091bdbc g     F .text	000000000000006f              ha_myisam::ha_myisam(handlerton*, TABLE_SHARE*)
000000000078edce g     F .text	0000000000000ca7              Item_ref::fix_fields(THD*, Item**)
0000000001264fe0 g     O .data	0000000000000100              pl00
00000000005c890d g     F .text	0000000000000006              non-virtual thunk to Statement::type() const
00000000007dace8  w    F .text	0000000000000011              Item_func_sign::func_name() const
000000000065ca94  w    F .text	000000000000002b              store_key_field::~store_key_field()
000000000065cbea  w    F .text	000000000000002b              Item_null_result::~Item_null_result()
00000000006786c0  w    F .text	0000000000000013              List_iterator_fast<char>::replace(List<char>&)
00000000007b0e00  w    F .text	000000000000002b              cmp_item_sort_string::~cmp_item_sort_string()
000000000093a0fe g     F .text	000000000000034e              mi_delete_all_rows
000000000087ea78  w    F .text	0000000000000026              Silence_deprecated_warning::~Silence_deprecated_warning()
00000000006b83c4 g     F .text	000000000000003b              Natural_join_column::grant()
0000000000808df6  w    F .text	0000000000000034              Item_avg_field::is_null()
000000000090f2a4  w    F .text	0000000000000037              PFS_triple_index::set_at(PFS_triple_index const*)
00000000008f8a27 g     F .text	0000000000000032              my_write_core
00000000007f1acc  w    F .text	0000000000000011              Item_func_substr_index::func_name() const
0000000000798312  w    F .text	000000000000003d              Item_direct_view_ref::get_tmp_table_item(THD*)
000000000065aaa4  w    F .text	000000000000005b              FT_SELECT::FT_SELECT(THD*, TABLE*, unsigned int)
00000000010c3ac8  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_set
0000000000981d0e g     F .text	0000000000000016              ha_heap::external_lock(THD*, int)
00000000007c0f7a  w    F .text	000000000000002d              Create_func_numinteriorring::Create_func_numinteriorring()
000000000055c2c2  w    F .text	0000000000000026              I_List<NAMED_ILINK>::push_back(NAMED_ILINK*)
000000000090c150  w    F .text	0000000000000041              PFS_updatable_acl::~PFS_updatable_acl()
00000000005d6553 g     F .text	0000000000000b68              mysql_upgrade_db(THD*, st_mysql_lex_string*)
000000000056b420  w    F .text	0000000000000026              List_iterator_fast<set_var_base>::List_iterator_fast(List<set_var_base>&)
000000000086f17a g     F .text	0000000000000026              QUICK_GROUP_MIN_MAX_SELECT::~QUICK_GROUP_MIN_MAX_SELECT()
00000000007611d4 g     F .text	00000000000003d0              Create_field::init_for_tmp_table(enum_field_types, unsigned int, unsigned int, bool, bool, unsigned int)
00000000006b2847 g     F .text	00000000000000a4              free_field_buffers_larger_than(TABLE*, unsigned int)
00000000007db93a  w    F .text	0000000000000026              Item_func_is_free_lock::fix_length_and_dec()
00000000007b9768  w    F .text	0000000000000063              Item_static_float_func::Item_static_float_func(char const*, double, unsigned int, unsigned int)
00000000005ce784  w    F .text	000000000000001b              List<Key_part_spec>::~List()
000000000056a23c g     F .text	0000000000000082              get_old_charset_by_name(char const*)
000000000090eb6e g     F .text	0000000000000203              table_events_waits_summary_by_thread_by_event_name::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000005e87d8  w    F .text	0000000000000026              TABLEOP_HOOKS::~TABLEOP_HOOKS()
00000000007e1eac  w    F .text	0000000000000058              Item_func_x::~Item_func_x()
00000000007a1176 g     F .text	0000000000000060              Item_func_eq::val_int()
000000000070b766  w    F .text	0000000000000051              Sys_var_plugin::session_update(THD*, set_var*)
000000000077c068  w    F .text	0000000000000013              handler::delete_row(unsigned char const*)
00000000005af556  w    F .text	0000000000000046              Field_iterator::~Field_iterator()
000000000088b060  w    F .text	000000000000001b              List<sp_pcontext>::List()
00000000008217e4 g     F .text	0000000000000d51              MYSQL_QUERY_LOG::write(THD*, long, long, char const*, unsigned int, unsigned long long, unsigned long long, bool, char const*, unsigned int)
00000000007db146  w    F .text	000000000000000f              Item_udf_func::is_expensive()
0000000000606676  w    F .text	0000000000000027              inc_thread_running()
0000000000690610  w    F .text	0000000000000047              Key_part_spec::Key_part_spec(char const*, unsigned long, unsigned int)
00000000007dd720  w    F .text	0000000000000046              Item_func_log10::~Item_func_log10()
0000000000657576 g     F .text	0000000000000143              JOIN::change_result(select_result*)
0000000000752798 g     F .text	000000000000009f              Field_timestamp::Field_timestamp(bool, char const*, charset_info_st*)
000000000098f20d g     F .text	000000000000008e              myrg_lock_database
000000000138e0e0 g     O .bss	0000000000000100              table_threads::m_table_lock
000000000078b89c g     F .text	000000000000003f              Item_empty_string::make_field(Send_field*)
00000000006bac04  w    F .text	0000000000000018              Field_iterator_natural_join::end_of_fields()
00000000008096ac  w    F .text	000000000000006c              Item_sum_bit::Item_sum_bit(THD*, Item_sum_bit*)
00000000007b9e6a  w    F .text	000000000000009e              Item_decimal_typecast::Item_decimal_typecast(Item*, int, int)
000000000073841c  w    F .text	0000000000000040              Item_func_num1::Item_func_num1(Item*, Item*)
00000000008c4672 g     F .text	000000000000026c              Event_scheduler::run(THD*)
00000000007d9890 g     F .text	000000000000009f              Item_func_sp::tmp_table_field(TABLE*)
000000000090fa0e g     F .text	0000000000000028              table_file_instances::create()
000000000076578c  w    F .text	000000000000000f              Field_medium::pack_length() const
00000000010a2310  w    O .data.rel.ro	0000000000000398              vtable for Item_func_uncompressed_length
00000000007bfc94  w    F .text	0000000000000026              Create_func_instr::~Create_func_instr()
00000000007525de g     F .text	00000000000000e2              Field_double::sql_type(String&) const
00000000007632ce g     F .text	0000000000000771              Create_field::Create_field(Field*, Field*)
00000000008b8260 g     F .text	00000000000000ee              store_tuple_to_record(Field**, unsigned int*, unsigned char*, unsigned char*)
000000000098efd2  w    F .text	0000000000000088              ha_myisammrg::scan_time()
0000000000913840  w    F .text	0000000000000041              table_threads::~table_threads()
0000000000b85443 g     F .text	0000000000000017              my_propagate_simple
00000000007c23fc  w    F .text	000000000000002d              Create_func_time_format::Create_func_time_format()
00000000007acbba g     F .text	00000000000000bf              Item_equal::Item_equal(Item*, Item_field*)
0000000001069de8  w    O .data.rel.ro	0000000000000088              vtable for select_insert
00000000006f5610  w    F .text	0000000000000026              MDL_lock::~MDL_lock()
0000000000760f38 g     F .text	000000000000009b              Field_bit_as_char::sql_type(String&) const
00000000007e7ca4 g     F .text	000000000000008a              Item_func_insert::fix_length_and_dec()
000000000120b820 g     O .data	0000000000000100              to_upper_latin7_estonian_cs
0000000000b73a17 g     F .text	000000000000001b              lf_pinbox_destroy
0000000000b7bd19 g     F .text	0000000000000012              my_mbcharlen_8bit
0000000000b97d16 g     F .text	00000000000000ef              decimal_bin_size
0000000000920732  w    F .text	000000000000004c              ha_myisam::ft_init()
00000000006e72f0 g     F .text	0000000000000020              init_new_connection_handler_thread()
0000000000913476 g     F .text	00000000000000cf              table_threads::rnd_next()
00000000010904d0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_locate
00000000010c4530  w    O .data.rel.ro	0000000000000060              vtable for field_str
00000000007fc582  w    F .text	0000000000000028              Item_in_subselect::update_null_value()
00000000007dd6f4  w    F .text	000000000000002b              Item_func_exp::~Item_func_exp()
0000000000764852  w    F .text	0000000000000010              Field::max_packed_col_length(unsigned int)
00000000007bbb1c  w    F .text	0000000000000069              Item_func_rpad::Item_func_rpad(Item*, Item*, Item*)
000000000077780a g     F .text	000000000000003e              handler::ha_discard_or_import_tablespace(char)
00000000008cba80  w    F .text	0000000000000046              Alter_table_common::~Alter_table_common()
00000000007e0e18  w    F .text	0000000000000093              MBR::equals(MBR const*)
00000000005c3614 g     F .text	000000000000037e              THD::awake(THD::killed_state)
0000000000980ccc g     F .text	0000000000000011              ha_heap::bas_ext() const
0000000000800b6e g     F .text	0000000000000090              Aggregator_distinct::arg_val_decimal(my_decimal*)
0000000000767af2  w    F .text	000000000000001a              List<Create_field>::head_ref()
0000000000785c4e g     F .text	0000000000000096              Item_param::set_null()
000000000075372a g     F .text	000000000000002e              Field_timestamp::sql_type(String&) const
0000000000598d58  w    F .text	000000000000001f              Query_tables_list::Query_tables_list()
000000000083ff96 g     F .text	00000000000000c2              Execute_load_log_event::write(st_io_cache*)
0000000000ba8acb g     F .text	00000000000003d0              my_regcomp
00000000005b9584 g     F .text	00000000000001c2              Query_cache::allocate_block(unsigned long, char, unsigned long)
00000000005aedf4  w    F .text	0000000000000015              I_P_List_counter::I_P_List_counter()
00000000007b065a  w    F .text	000000000000001b              List_iterator<Item_field>::rewind()
000000000088968c  w    F .text	0000000000000056              sp_instr_cpush::~sp_instr_cpush()
000000000106be58  w    O .data.rel.ro	0000000000000030              vtable for Wait_for_flush
000000000083c004 g     F .text	0000000000000025              Intvar_log_event::do_shall_skip(Relay_log_info*)
000000000079682e  w    F .text	000000000000002d              Hybrid_type_traits_integer::Hybrid_type_traits_integer()
00000000007cb864 g     F .text	0000000000000471              Item_func_round::fix_length_and_dec()
0000000000912dc6 g     F .text	0000000000000071              table_cond_instances::table_cond_instances()
000000000138c8e0 g     O .bss	00000000000000a0              _my_sig_remember
00000000010866a0  w    O .data.rel.ro	0000000000000048              vtable for cmp_item_sort_string_in_static
000000000087e9ce  w    F .text	0000000000000041              Bad_db_error_handler::~Bad_db_error_handler()
0000000000876cd2  w    F .text	000000000000003f              Item_proc::make_field(Send_field*)
0000000000873388  w    F .text	0000000000000046              TRP_RANGE::~TRP_RANGE()
000000000060128c g     F .text	00000000000004a8              check_fk_parent_table_access(THD*, st_ha_create_information*, Alter_info*)
0000000000911d0e  w    F .text	0000000000000020              pos_setup_instruments::reset()
00000000013866a8 g     O .bss	0000000000000008              Create_func_quote::s_singleton
00000000009842da g     F .text	000000000000048b              hp_rec_key_cmp
00000000007b26a8 g     F .text	0000000000000058              Create_func_aes_decrypt::create(THD*, Item*, Item*)
000000000077c1ee  w    F .text	000000000000000f              handler::truncate()
000000000077d001 g     F .text	0000000000000aed              ip_to_hostname(sockaddr_storage*, char const*, char**, unsigned int*)
00000000010c0ff8  w    O .data.rel.ro	0000000000000048              vtable for Log_event_handler
00000000005d01f0  w    F .text	000000000000001b              List_iterator<Key>::List_iterator()
00000000009ac46c  w    F .text	0000000000000053              ha_innobase_add_index::ha_innobase_add_index(TABLE*, st_key*, unsigned int, dict_table_struct*)
00000000008091fa  w    F .text	000000000000000f              Item_sum_variance::sum_func() const
00000000007bec80  w    F .text	0000000000000041              Create_func_elt::~Create_func_elt()
00000000007fc5e6  w    F .text	0000000000000046              subselect_engine::~subselect_engine()
00000000007997e0  w    F .text	000000000000002a              Item_cache_row::val_decimal(my_decimal*)
00000000007bfd7e  w    F .text	0000000000000041              Create_func_intersects::~Create_func_intersects()
00000000010f6418 g     O .data	0000000000000004              builtin_partition_sizeof_struct_st_plugin
00000000008f7e01 g     F .text	0000000000000110              init_queue
000000000065c48e  w    F .text	0000000000000023              Bitmap<4096u>::set_bit(unsigned int)
0000000000579f84  w    F .text	000000000000001e              base_list::is_empty()
000000000059b284  w    F .text	0000000000000026              List<LEX_COLUMN>::prepand(List<LEX_COLUMN>*)
00000000007ca80e g     F .text	00000000000000ef              Item_func_asin::val_real()
00000000008e3f0c g     F .text	00000000000002af              my_load_path
000000000059357c g     F .text	00000000000000b1              ACL_internal_schema_registry::lookup(char const*)
00000000007b3678 g     F .text	000000000000005d              Create_func_disjoint::create(THD*, Item*, Item*)
000000000055c106  w    F .text	000000000000008d              NAMED_ILINK::NAMED_ILINK(I_List<NAMED_ILINK>*, char const*, unsigned int, unsigned char*)
00000000006188b0 g     F .text	000000000000012b              Prepared_statement::Prepared_statement(THD*)
00000000007b376e g     F .text	0000000000000058              Create_func_encode::create(THD*, Item*, Item*)
00000000007be4e2  w    F .text	0000000000000041              Create_func_crosses::~Create_func_crosses()
000000000078d432 g     F .text	000000000000018a              Item_float::Item_float(char const*, unsigned int)
00000000007c2e20  w    F .text	0000000000000041              Create_func_x::~Create_func_x()
00000000005d0762  w    F .text	000000000000001a              List<Alter_drop>::head()
000000000059ee2a g     F .text	00000000000008ea              close_temporary_tables(THD*)
0000000000816a38  w    F .text	0000000000000046              Item_typecast_maybe_null::~Item_typecast_maybe_null()
000000000078d714 g     F .text	00000000000000c9              Item_float::eq(Item const*, bool) const
000000000107c228  w    O .data.rel.ro	00000000000003a0              vtable for Item_splocal
000000000056539e  w    F .text	0000000000000038              Protocol::Protocol(THD*)
00000000007a67dc g     F .text	0000000000000105              in_row::in_row(unsigned int, Item*)
00000000010be3a0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_second
0000000000000000       F *UND*	0000000000000000              getpwnam@@GLIBC_2.2.5
000000000073b526  w    F .text	0000000000000038              select_dump::select_dump(sql_exchange*)
00000000008572b0 g     F .text	0000000000000088              QUICK_RANGE_SELECT::init()
000000000138c448 g     O .bss	0000000000000008              mysql_stdin
000000000073762a  w    F .text	0000000000000043              ErrConvString::ErrConvString(char const*, charset_info_st*)
000000000090db8c g     F .text	0000000000000070              table_events_waits_history_long::table_events_waits_history_long()
000000000070e924  w    F .text	0000000000000041              Sys_var_plugin::~Sys_var_plugin()
00000000010e30e0 u     O .data	0000000000000020              injector::transaction::check_state(injector::transaction::enum_state)::state_name
000000000082dd6e  w    F .text	0000000000000041              Log_to_file_event_handler::~Log_to_file_event_handler()
000000000095d1d3 g     F .text	0000000000000b0c              _mi_calc_var_pack_key_length
00000000007424bc g     F .text	0000000000001861              mysql_real_connect
000000000073a7c4  w    F .text	0000000000000038              Item_str_timefunc::Item_str_timefunc(Item*)
00000000007086f8  w    F .text	000000000000001b              LOGGER::unlock()
0000000001211300 g     O .data	0000000000000100              to_lower_latin7_general_ci
0000000000764804  w    F .text	000000000000003a              Field::set_key_image(unsigned char const*, unsigned int)
0000000000ba5592 g     F .text	000000000000004a              my_xml_error_lineno
00000000010f6480 g     O .data	00000000000000d0              builtin_partition_plugin
00000000005b0f52  w    F .text	0000000000000026              List_iterator_fast<String>::List_iterator_fast(List<String>&)
0000000000599180  w    F .text	000000000000002d              DML_prelocking_strategy::DML_prelocking_strategy()
0000000000ca8c28 g     O .rodata	0000000000000008              Interruptible_wait::m_interrupt_interval
0000000001069a08  w    O .data.rel.ro	0000000000000078              vtable for select_send
0000000000766cf6  w    F .text	0000000000000011              Field_varstring::key_length() const
0000000000b6d0d2 g     F .text	00000000000000a6              ha_partition::extra_opt(ha_extra_function, unsigned long)
000000000056b0fc  w    F .text	0000000000000027              sys_var::session_var_ptr(THD*)
00000000007bc1fa  w    F .text	000000000000002d              Item_func_uuid::Item_func_uuid()
00000000007af6e4  w    F .text	0000000000000059              cmp_item_datetime::cmp_item_datetime(Item*)
00000000006f0984  w    F .text	000000000000004b              Delegate::~Delegate()
000000000056b564  w    F .text	0000000000000046              set_var_user::~set_var_user()
00000000007be7d0  w    F .text	0000000000000041              Create_func_dayofweek::~Create_func_dayofweek()
00000000007bd8fc  w    F .text	000000000000002d              Create_func_asin::Create_func_asin()
000000000091baf7 g     F .text	0000000000000106              mi_check_print_warning
00000000009ac3a0  w    F .text	000000000000005a              handler_add_index::handler_add_index(TABLE*, st_key*, unsigned int)
000000000074fcae g     F .text	0000000000000199              Field_long::store(long long, bool)
00000000007af9d0  w    F .text	000000000000000f              Item_func_case::not_null_tables() const
0000000001088a98  w    O .data.rel.ro	0000000000000398              vtable for Item_func_like_range_min
00000000007bfe7c  w    F .text	000000000000002d              Create_func_is_used_lock::Create_func_is_used_lock()
00000000007b9962  w    F .text	0000000000000038              Item_sum_udf_float::Item_sum_udf_float(st_udf_func*)
0000000000563554 g     F .text	00000000000000de              Protocol_text::store_longlong(long long, bool)
0000000000785b50 g     F .text	00000000000000fd              Item_param::Item_param(unsigned int)
000000000089dd2c g     F .text	00000000000000ad              multi_delete::multi_delete(TABLE_LIST*, unsigned int)
000000000090b300 g     F .text	0000000000000034              PFS_editable_acl::check(unsigned long, unsigned long*) const
0000000000b5f6a0 g     F .text	00000000000002b1              ha_partition::init_handler_variables()
000000000079a5e4  w    F .text	0000000000000046              Item_direct_view_ref::~Item_direct_view_ref()
0000000000598e18  w    F .text	000000000000001e              Statement::query_length() const
00000000005d099c  w    F .text	0000000000000026              List_iterator<Alter_drop>::after(Alter_drop*)
00000000008fec70 g     F .text	00000000000001b4              thr_abort_locks_for_thread
0000000001086940  w    O .data.rel.ro	0000000000000030              vtable for Create_func_version
00000000007bcc96  w    F .text	0000000000000038              Item_func_from_unixtime::Item_func_from_unixtime(Item*)
000000000098ef3c  w    F .text	0000000000000014              ha_myisammrg::table_flags() const
0000000000606ea6  w    F .text	0000000000000038              Item_func_nop_all::Item_func_nop_all(Item*)
0000000000b5e210 g     F .text	0000000000000047              Transparent_file::Transparent_file()
000000000138bf58 g     O .bss	0000000000000008              my_defaults_extra_file
000000000075a346 g     F .text	0000000000000188              Field_varstring::sql_type(String&) const
000000000088aea0 g     F .text	00000000000000d0              sp_pcontext::retrieve_field_definitions(List<Create_field>*)
0000000000798f2c  w    F .text	000000000000000f              Item_insert_value::type() const
0000000000b8308b g     F .text	00000000000000b4              my_hash_sort_simple
00000000010eb600 g     O .data	0000000000000020              sql_protocol_typelib
00000000010c1558  w    O .data.rel.ro	0000000000000078              vtable for Delete_file_log_event
0000000000b843aa g     F .text	000000000000001a              my_charpos_8bit
0000000001087390  w    O .data.rel.ro	0000000000000030              vtable for Create_func_make_set
0000000000765d72  w    F .text	000000000000002d              Field_double::reset()
0000000000873d90  w    F .text	000000000000001b              List_iterator<QUICK_RANGE>::List_iterator()
00000000006f5ffc  w    F .text	000000000000000f              I_P_List_no_push_back<MDL_ticket>::I_P_List_no_push_back(MDL_ticket**)
00000000006a96be g     F .text	0000000000000532              check_key_in_view(THD*, TABLE_LIST*)
00000000010eb308 g     O .data	0000000000000008              not_error_sqlstate
0000000000808d1e  w    F .text	0000000000000056              Item_sum_count::Item_sum_count(THD*, Item_sum_count*)
000000000106c078  w    O .data.rel.ro	0000000000000028              vtable for Event_queue_element
000000000109d438  w    O .data.rel.ro	0000000000000398              vtable for Item_func_dimension
0000000000889a5e  w    F .text	0000000000000027              sp_rcontext::pop_all_cursors()
0000000000605d56 g     F .text	0000000000000051              create_default_definer(THD*)
000000000136cd00 g     O .bss	0000000000000008              max_relay_log_size
00000000007db5d6  w    F .text	000000000000000f              Item_func_set_user_var::functype() const
0000000000b77525 g     F .text	0000000000000041              _db_is_pushed_
000000000075052a g     F .text	000000000000017e              Field_longlong::store(char const*, unsigned int, charset_info_st*)
000000000075ea88 g     F .text	0000000000000174              Field_bit::Field_bit(unsigned char*, unsigned int, unsigned char*, unsigned char, unsigned char*, unsigned char, Field::utype, char const*)
000000000088f6b0 g     F .text	000000000000009a              Gis_polygon::num_interior_ring(unsigned int*) const
000000000073a93c  w    F .text	000000000000002d              Item_func_curtime::Item_func_curtime()
00000000007c022e  w    F .text	0000000000000041              Create_func_last_insert_id::~Create_func_last_insert_id()
0000000000906d87 g     F .text	0000000000000268              create_rwlock(PFS_rwlock_class*, void const*)
0000000000786a8a g     F .text	00000000000001b6              Item_param::val_real()
000000000057abc4  w    F .text	0000000000000031              Heartbeat_log_event::is_valid() const
00000000007dce7e  w    F .text	000000000000002b              Item_func_char_length::~Item_func_char_length()
00000000006d7a9c g     F .text	0000000000000016              injector::transaction::start_pos() const
0000000000b6f84a g     F .text	00000000000000c5              ha_partition::min_record_length(unsigned int) const
0000000000710540 g     F .text	0000000000000014              turn_parser_debug_on()
00000000013877b0 g     O .bss	0000000000000008              tc_log_max_pages_used
000000000079f6be g     F .text	0000000000000193              Arg_comparator::compare_decimal()
0000000000b64f72 g     F .text	000000000000039a              ha_partition::new_handlers_from_part_info(st_mem_root*)
0000000001215a80 g     O .data	0000000000000100              sort_order_cp1257_general_ci
00000000010c1b00  w    O .data.rel.ro	0000000000000078              vtable for Start_log_event_v3
000000000056e222 g     F .text	00000000000000e2              init_intvar_from_file(int*, st_io_cache*, int)
00000000007beb54  w    F .text	0000000000000041              Create_func_dimension::~Create_func_dimension()
00000000006baab8  w    F .text	000000000000005a              Wait_for_flush::Wait_for_flush(MDL_context*, TABLE_SHARE*, unsigned int)
00000000007c161a  w    F .text	0000000000000041              Create_func_radians::~Create_func_radians()
00000000007bf964  w    F .text	0000000000000041              Create_func_greatest::~Create_func_greatest()
00000000007b9a8a  w    F .text	0000000000000040              Item_sum_udf_str::Item_sum_udf_str(st_udf_func*, List<Item>&)
00000000005e8b60  w    F .text	0000000000000048              THD::force_one_auto_inc_interval(unsigned long long)
0000000000564e84  w    F .text	0000000000000011              String::alloced_length() const
000000000089fb95 g     F .text	00000000000004c8              get_topics_for_keyword(THD*, TABLE*, TABLE*, st_find_field*, short, List<String>*, String*, String*, String*)
00000000005d8812 g     F .text	0000000000000020              MYSQL_ERROR::get_message_octet_length() const
000000000138cc68 g     O .bss	0000000000000008              mutex_array
000000000069877c  w    F .text	000000000000002f              Sub_statement_state::Sub_statement_state()
000000000073eec5 g     F .text	000000000000092f              unpack_fields
0000000000000000       O *UND*	0000000000000000              stdin@@GLIBC_2.2.5
00000000008bfed1 g     F .text	00000000000000e1              xml_leave
00000000007bcc96  w    F .text	0000000000000038              Item_func_from_unixtime::Item_func_from_unixtime(Item*)
00000000010b7e98  w    O .data.rel.ro	00000000000003a0              vtable for Item_datetime_typecast
00000000005e9626  w    F .text	000000000000002c              List_iterator_fast<List<Item> >::sublist(List<List<Item> >&, unsigned int)
000000000079bb30  w    F .text	0000000000000025              List_iterator<Cached_item>::replace(Cached_item*)
0000000000809fde  w    F .text	0000000000000066              Item_func_group_concat::val_real()
00000000006bf668 g     F .text	000000000000003e              Time_zone_db::gmt_sec_to_TIME(st_mysql_time*, long) const
00000000010691b0  w    O .data.rel.ro	0000000000000078              vtable for sys_var
000000000067d933 g     F .text	0000000000000182              build_tmptable_filename(THD*, char*, unsigned long)
00000000007bece8  w    F .text	000000000000002d              Create_func_encode::Create_func_encode()
0000000000782fb4 g     F .text	000000000000016c              Item_field::Item_field(THD*, Name_resolution_context*, Field*)
0000000000690cc6  w    F .text	000000000000001b              List_iterator_fast<Create_field>::List_iterator_fast()
0000000000677fce  w    F .text	000000000000001e              Statement::query_charset() const
000000000106c000  w    O .data.rel.ro	0000000000000028              vtable for Pack_header_error_handler
00000000006588d0  w    F .text	0000000000000036              Bitmap<64u>::print(char*) const
000000000090631d g     F .text	00000000000000c2              find_per_thread_mutex_class_wait_stat(PFS_thread*, PFS_mutex_class*)
00000000006d18a8 g     F .text	0000000000000521              partition_info::set_up_charset_field_preps()
000000000106c3c8  w    O .data.rel.ro	0000000000000028              vtable for Repair_table_statement
000000000098ee7e  w    F .text	0000000000000012              Mrg_child_def::get_child_def_version()
00000000007bf8ce  w    F .text	0000000000000041              Create_func_glength::~Create_func_glength()
00000000007c0e28  w    F .text	0000000000000026              Create_func_name_const::~Create_func_name_const()
0000000000b75a4d g     F .text	0000000000000050              my_timer_nanoseconds
000000000057a254  w    F .text	000000000000005a              THD::clear_active_vio()
00000000007ba6ae  w    F .text	000000000000003d              Item_func_min::Item_func_min(List<Item>&)
000000000088af70 g     F .text	000000000000008d              sp_pcontext::find_cursor(unsigned int, st_mysql_lex_string*)
00000000007473fc g     F .text	000000000000048c              load_des_key_file(char const*)
0000000000559044  w    F .text	000000000000004c              MYSQL_BIN_LOG::set_psi_keys(unsigned int, unsigned int, unsigned int, unsigned int)
0000000000817018  w    F .text	0000000000000076              Item_func_add_time::save_in_field(Field*, bool)
00000000013956a8 g     O .bss	0000000000000004              mi_key_file_dfile
0000000000559116  w    F .text	0000000000000035              Comp_creator::~Comp_creator()
00000000007ca350 g     F .text	00000000000000d5              Item_func_log10::val_real()
0000000000852426  w    F .text	0000000000000046              Update_rows_log_event_old::~Update_rows_log_event_old()
00000000007f62fe g     F .text	0000000000000047              Item_exists_subselect::print(String*, enum_query_type)
000000000136f01c g     O .bss	0000000000000004              have_compress
000000000136cbfe g     O .bss	0000000000000001              opt_skip_slave_start
00000000007492fa g     F .text	0000000000000104              Field::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000005bf3b6  w    F .text	000000000000001a              Query_cache_table::db()
00000000007c1e20  w    F .text	000000000000002d              Create_func_soundex::Create_func_soundex()
0000000000809280  w    F .text	000000000000000f              Item_sum_variance::result_type() const
0000000000569de0 g     F .text	00000000000000c4              sys_var::set_default(THD*, set_var*)
0000000000815c94  w    F .text	0000000000000013              Item_func_second::check_partition_func_processor(unsigned char*)
00000000010f6414 g     O .data	0000000000000004              builtin_partition_plugin_interface_version
0000000000559be2  w    F .text	000000000000001b              List<Buffered_log>::List()
00000000007fff0a g     F .text	000000000000010c              Item_sum_sum::Item_sum_sum(THD*, Item_sum_sum*)
00000000006dfa1e  w    F .text	0000000000000041              MYSQL_BIN_LOG::~MYSQL_BIN_LOG()
000000000070b426  w    F .text	00000000000000ef              Sys_var_plugin::Sys_var_plugin(char const*, char const*, int, long, unsigned long, CMD_LINE, int, char**, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000007565f6 g     F .text	00000000000000f7              Field_newdate::get_date(st_mysql_time*, unsigned int)
000000000073ae86  w    F .text	0000000000000038              Item_time_typecast::Item_time_typecast(Item*)
00000000007dc45e  w    F .text	000000000000002b              Item_user_var_as_out_param::~Item_user_var_as_out_param()
000000000088b0e6  w    F .text	0000000000000025              List<sp_label>::push_front(sp_label*)
000000000070bfb6  w    F .text	000000000000004a              Sys_var_bit::global_update(THD*, set_var*)
000000000108ae88  w    O .data.rel.ro	0000000000000398              vtable for Item_func_is_free_lock
000000000095d17e g     F .text	0000000000000055              _mi_calc_var_key_length
00000000007dd474  w    F .text	0000000000000046              Item_func_atan::~Item_func_atan()
0000000000b946ff g     F .text	0000000000000067              my_charset_is_ascii_based
00000000006166d6 g     F .text	00000000000001d8              mysqld_stmt_prepare(THD*, char const*, unsigned int)
000000000136f4c0 g     O .bss	0000000000000070              LOCK_crypt
000000000069b27e g     F .text	000000000000018b              st_select_lex_unit::init_prepare_fake_select_lex(THD*)
0000000001386578 g     O .bss	0000000000000008              Create_func_isclosed::s_singleton
00000000005e95c6  w    F .text	0000000000000026              List_iterator_fast<List<Item> >::init(List<List<Item> >&)
0000000000000000       F *UND*	0000000000000000              memcpy@@GLIBC_2.14
0000000001087150  w    O .data.rel.ro	0000000000000030              vtable for Create_func_period_add
00000000007b9768  w    F .text	0000000000000063              Item_static_float_func::Item_static_float_func(char const*, double, unsigned int, unsigned int)
00000000005ea070 g     F .text	00000000000000cf              Lex_input_stream::init(THD*, char*, unsigned int)
00000000005d8d84 g     F .text	0000000000000071              Warning_info::clear_warning_info(unsigned long long)
00000000005b0de6  w    F .text	0000000000000026              List_iterator_fast<Natural_join_column>::List_iterator_fast(List<Natural_join_column>&)
000000000070e6f6  w    F .text	0000000000000026              Sys_var_tz::~Sys_var_tz()
0000000000b6943e g     F .text	000000000000027d              ha_partition::init_record_priority_queue()
000000000073c48e  w    F .text	000000000000007a              sp_instr_set_case_expr::sp_instr_set_case_expr(unsigned int, sp_pcontext*, unsigned int, Item*, LEX*)
0000000000829b72 g     F .text	0000000000000379              MYSQL_BIN_LOG::close(unsigned int)
00000000013877b8 g     O .bss	0000000000000008              tc_log_page_size
000000000057aad0  w    F .text	0000000000000046              Append_block_log_event::~Append_block_log_event()
000000000095f507 g     F .text	00000000000003bf              mi_check_unique
0000000000b69c9e g     F .text	0000000000000294              ha_partition::common_index_read(unsigned char*, bool)
000000000080f9e2 g     F .text	0000000000000053              Item_func_now_utc::store_now_in_TIME(st_mysql_time*)
000000000073c700  w    F .text	0000000000000038              Alter_table_common::Alter_table_common(LEX*)
0000000000000000       F *UND*	0000000000000000              setregid@@GLIBC_2.2.5
00000000008718e0 g     F .text	0000000000000158              QUICK_GROUP_MIN_MAX_SELECT::dbug_dump(int, bool)
0000000000758b5c g     F .text	000000000000010c              Field_string::cmp(unsigned char const*, unsigned char const*)
00000000010a3170  w    O .data.rel.ro	0000000000000398              vtable for Item_load_file
0000000000000000       F *UND*	0000000000000000              shmctl@@GLIBC_2.2.5
00000000010cd9c8 g     O .data	0000000000000008              in_left_expr_name
00000000007fc790  w    F .text	0000000000000038              select_exists_subselect::select_exists_subselect(Item_subselect*)
000000000089bfe6  w    F .text	0000000000000059              Server_side_cursor::Server_side_cursor(st_mem_root*, select_result*)
00000000008738ee  w    F .text	0000000000000245              QUICK_RANGE_SELECT::QUICK_RANGE_SELECT(QUICK_RANGE_SELECT const&)
00000000010d1fe0 g     O .data	0000000000000010              default_key_cache_base
00000000010aeee8  w    O .data.rel.ro	00000000000003a0              vtable for Item_exists_subselect
00000000007c2394  w    F .text	0000000000000041              Create_func_tan::~Create_func_tan()
00000000006fe0ba g     F .text	000000000000009b              Sys_var_tx_isolation::session_update(THD*, set_var*)
000000000065cb32  w    F .text	0000000000000046              Item_func_rollup_const::~Item_func_rollup_const()
0000000000932460 g     F .text	000000000000052e              mi_close
000000000067f60a g     F .text	0000000000000136              release_ddl_log_memory_entry(st_ddl_log_memory_entry*)
000000000070ad74  w    F .text	0000000000000026              Sys_var_flagset::global_save_default(THD*, set_var*)
00000000007775de g     F .text	0000000000000048              handler::ha_bulk_update_row(unsigned char const*, unsigned char*, unsigned int*)
0000000001394cd8 g     O .bss	0000000000000004              key_TMPDIR_mutex
00000000007babde  w    F .text	0000000000000038              Item_func_sleep::Item_func_sleep(Item*)
00000000012c3480 g     O .data	0000000000000400              page0A3data
000000000088f1f0 g     F .text	00000000000000e5              Gis_polygon::get_mbr(MBR*, char const**) const
000000000082d628  w    F .text	0000000000000041              Silence_log_table_errors::~Silence_log_table_errors()
00000000006d7efe  w    F .text	00000000000000d0              injector::transaction::check_state(injector::transaction::enum_state)
00000000006e5e98 g     F .text	0000000000000042              mysql_audit_initialize()
00000000007545e6 g     F .text	0000000000000090              Field_time::send_binary(Protocol*)
00000000005ee878 g     F .text	0000000000000012              st_select_lex::master_unit()
0000000000906577 g     F .text	00000000000000cc              find_per_thread_file_class_wait_stat(PFS_thread*, PFS_file_class*)
0000000000000000       O *UND*	0000000000000000              __tzname@@GLIBC_2.2.5
00000000007c5912 g     F .text	0000000000000061              Item_func_connection_id::fix_fields(THD*, Item**)
000000000080089a g     F .text	00000000000000fa              Aggregator_distinct::~Aggregator_distinct()
000000000061c068  w    F .text	0000000000000056              Protocol_local::~Protocol_local()
00000000013864b8 g     O .bss	0000000000000008              Create_func_exteriorring::s_singleton
00000000005b0c9e  w    F .text	00000000000000b4              I_P_List<MDL_request, I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>, I_P_List_counter, I_P_List_no_push_back<MDL_request> >::push_front(MDL_request*)
00000000007fc790  w    F .text	0000000000000038              select_exists_subselect::select_exists_subselect(Item_subselect*)
00000000007b1238  w    F .text	0000000000000046              Item_func_interval::~Item_func_interval()
00000000006f0ab0  w    F .text	0000000000000026              List_iterator<Observer_info>::List_iterator(List<Observer_info>&)
00000000007bba14  w    F .text	000000000000005d              Item_func_make_set::Item_func_make_set(Item*, List<Item>&)
000000000086b720 g     F .text	00000000000000e0              QUICK_ROR_UNION_SELECT::add_info_string(String*)
00000000005b0e6e  w    F .text	0000000000000026              List_iterator<Item>::List_iterator(List<Item>&)
000000000077740e g     F .text	0000000000000124              handler::ha_check(THD*, st_ha_check_opt*)
0000000000815efa  w    F .text	0000000000000030              Item_func_weekday::fix_length_and_dec()
000000000079aa50  w    F .text	0000000000000056              Item_decimal::~Item_decimal()
000000000077793c g     F .text	0000000000000048              handler::ha_create(char const*, TABLE*, st_ha_create_information*)
00000000006b5c90 g     F .text	00000000000002e8              TABLE::init(THD*, TABLE_LIST*)
00000000010decc0 g     O .data	00000000000000f0              schema_privileges_fields_info
00000000010aa850  w    O .data.rel.ro	0000000000000398              vtable for Item_func_left
0000000000739ac0  w    F .text	0000000000000069              Item_func_replace::Item_func_replace(Item*, Item*, Item*)
000000000108fda0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_ascii
00000000007affa2  w    F .text	0000000000000015              Item_func_regex::compare_collation()
00000000005e6004 g     F .text	00000000000000b3              select_insert::prepare2()
0000000000851bf0 g     F .text	0000000000000069              Delete_rows_log_event_old::Delete_rows_log_event_old(char const*, unsigned int, Format_description_log_event const*)
0000000000000000       F *UND*	0000000000000000              connect@@GLIBC_2.2.5
0000000001370740 g     O .bss	0000000000000004              key_PAGE_lock
0000000000777f23 g     F .text	000000000000026d              ha_create_table(THD*, char const*, char const*, char const*, st_ha_create_information*, bool)
00000000008d025f g     F .text	0000000000000169              get_charset_by_csname
000000000080a312  w    F .text	0000000000000046              Item_sum_udf_str::~Item_sum_udf_str()
00000000008c1916  w    F .text	000000000000005d              Item_func_xpath_count::Item_func_xpath_count(Item*, String*)
000000000058b338 g     F .text	000000000000016e              get_column_grant(THD*, st_grant_info*, char const*, char const*, char const*)
00000000007e2114  w    F .text	000000000000002b              Item_func_dimension::~Item_func_dimension()
000000000098d7b2 g     F .text	00000000000000c2              ha_myisammrg::index_read_map(unsigned char*, unsigned char const*, unsigned long, ha_rkey_function)
0000000000798544  w    F .text	000000000000000f              Item_outer_ref::ref_type()
000000000098f088  w    F .text	0000000000000071              Mrg_attach_children_callback_param::Mrg_attach_children_callback_param(TABLE_LIST*, TABLE_LIST*, List<Mrg_child_def>&)
00000000007f46e0 g     F .text	000000000000008c              Item_singlerow_subselect::cleanup()
0000000000795fa4  w    F .text	0000000000000044              str2my_decimal(unsigned int, char const*, my_decimal*, char**)
00000000005d0822  w    F .text	0000000000000070              List<Alter_drop>::delete_elements()
000000000108fa08  w    O .data.rel.ro	0000000000000398              vtable for Item_func_ord
0000000000000000       F *UND*	0000000000000000              atan@@GLIBC_2.2.5
0000000000799a2c  w    F .text	0000000000000046              Item_sp_variable::~Item_sp_variable()
00000000008088bc  w    F .text	0000000000000038              Aggregator_simple::Aggregator_simple(Item_sum*)
00000000007fbac6 g     F .text	0000000000000035              subselect_single_select_engine::print(String*, enum_query_type)
00000000007c1d8a  w    F .text	000000000000002d              Create_func_sleep::Create_func_sleep()
000000000086f7a4 g     F .text	00000000000002d7              QUICK_GROUP_MIN_MAX_SELECT::get_next()
0000000000b5a83c g     F .text	0000000000000142              ha_tina::ha_tina(handlerton*, TABLE_SHARE*)
00000000010f1d44 g     O .data	0000000000000004              builtin_innobase_plugin_interface_version
00000000006d7b3a g     F .text	0000000000000087              injector::new_trans(THD*)
00000000006bb576  w    F .text	0000000000000026              List_iterator_fast<Item_func_match>::List_iterator_fast(List<Item_func_match>&)
000000000084158a g     F .text	0000000000000715              Rows_log_event::Rows_log_event(char const*, unsigned int, Log_event_type, Format_description_log_event const*)
00000000005d90e7 g     F .text	00000000000001b5              push_warning_printf(THD*, MYSQL_ERROR::enum_warning_level, unsigned int, char const*, ...)
0000000000598ec2  w    F .text	0000000000000026              Internal_error_handler::~Internal_error_handler()
0000000000658a2a  w    F .text	000000000000004e              handler::max_key_length() const
000000000077fc6a g     F .text	00000000000000af              Item::eq(Item const*, bool) const
000000000070d186  w    F .text	000000000000001b              List_iterator_fast<set_var_base>::List_iterator_fast()
00000000007c2b04  w    F .text	000000000000002d              Create_func_uuid_short::Create_func_uuid_short()
000000000088c390 g     F .text	000000000000010d              sp_rcontext::exit_handler()
0000000000797c78  w    F .text	00000000000000bb              Item_ref::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
0000000000766440  w    F .text	000000000000007b              Field_newdate::Field_newdate(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
0000000000b5b7b0 g     F .text	0000000000000011              ha_tina::bas_ext() const
000000000082b3c8 g     F .text	00000000000003a7              TC_LOG_MMAP::log_xid(THD*, unsigned long long)
000000000098953a g     F .text	0000000000000078              heap_enable_indexes
00000000007c1682  w    F .text	000000000000002d              Create_func_rand::Create_func_rand()
000000000065965a  w    F .text	0000000000000037              Item_null_result::save_in_result_field(bool)
0000000001386708 g     O .bss	0000000000000008              Create_func_sign::s_singleton
000000000079788a  w    F .text	0000000000000046              Item_ident::~Item_ident()
000000000077be2a  w    F .text	0000000000000013              handler::final_drop_index(TABLE*)
000000000065c1e0  w    F .text	000000000000001b              List_iterator<Item_func_match>::List_iterator()
0000000001386780 g     O .bss	0000000000000008              Create_func_timediff::s_singleton
00000000007f368e  w    F .text	0000000000000058              Item_func_encrypt::~Item_func_encrypt()
00000000010c6828  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_rootelement
00000000005d06ba  w    F .text	000000000000002e              List<Alter_drop>::List(List<Alter_drop> const&, st_mem_root*)
00000000005654d7  w    F .text	000000000000001a              Item::operator new(unsigned long)
0000000000000000       F *UND*	0000000000000000              perror@@GLIBC_2.2.5
00000000006e9824 g     F .text	00000000000004a9              PROFILING::show_profiles()
0000000000798de4  w    F .text	0000000000000046              Item_field::~Item_field()
00000000008c65ee g     F .text	0000000000000167              Event_queue::find_n_remove_event(st_mysql_lex_string, st_mysql_lex_string)
00000000005be920 g     F .text	0000000000000229              Query_cache::in_blocks(Query_cache_block*)
00000000006a4d40  w    F .text	000000000000007a              Field_string::Field_string(unsigned int, bool, char const*, charset_info_st*)
00000000007aed5e  w    F .text	000000000000002c              Item_func_nullif::print(String*, enum_query_type)
00000000010870c0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_pointn
00000000005b3bee g     F .text	000000000000006b              Query_cache::set_min_res_unit(unsigned long)
0000000000904834 g     F .text	000000000000011d              ha_perfschema::open(char const*, int, unsigned int)
00000000005e974a  w    F .text	0000000000000026              I_List<Delayed_insert>::move_elements_to(I_List<Delayed_insert>*)
0000000000892b3c g     F .text	0000000000000097              Gis_geometry_collection::num_geometries(unsigned int*) const
00000000010e2da0 g     O .data	0000000000000010              SLOW_LOG_NAME
00000000007b0728  w    F .text	0000000000000046              Item_cond_xor::~Item_cond_xor()
00000000007e1d20  w    F .text	0000000000000058              Item_func_glength::~Item_func_glength()
0000000000904c48 g     F .text	000000000000014c              ha_perfschema::rnd_init(bool)
00000000007bab00  w    F .text	0000000000000038              Item_func_bit_count::Item_func_bit_count(Item*)
0000000001264700 g     O .data	00000000000000b0              my_charset_gbk_chinese_ci
000000000082d9b2  w    F .text	0000000000000029              binlog_cache_data::restore_prev_position()
00000000007c032c  w    F .text	000000000000002d              Create_func_least::Create_func_least()
0000000000ba549d g     F .text	000000000000001e              my_xml_set_value_handler
00000000006d758a g     F .text	000000000000011e              injector::transaction::use_table(unsigned int, injector::transaction::table)
00000000006c7dc4 g     F .text	0000000000000113              Event_timed::init()
00000000008b03ac g     F .text	000000000000021f              get_partition_id_range(partition_info*, unsigned int*, long long*)
0000000000889672  w    F .text	0000000000000019              sp_instr_hreturn::opt_shortcut_jump(sp_head*, sp_instr*)
00000000005655aa  w    F .text	00000000000000c7              Item_func_set_user_var::Item_func_set_user_var(st_mysql_lex_string, Item*, bool)
00000000006bad7c  w    F .text	000000000000004b              Item_direct_view_ref::Item_direct_view_ref(TABLE_LIST*, Item**, char const*)
00000000005af648  w    F .text	000000000000001f              Field_iterator_view::next()
00000000007bd2fa  w    F .text	0000000000000026              Create_func_arg2::~Create_func_arg2()
00000000006a3432 g     F .text	000000000000002b              multi_update::~multi_update()
0000000000889b3c  w    F .text	000000000000001b              List<LEX>::List()
00000000007be8fc  w    F .text	0000000000000041              Create_func_decode::~Create_func_decode()
000000000070b396  w    F .text	000000000000004a              Sys_var_set::global_value_ptr(THD*, st_mysql_lex_string*)
000000000082394c g     F .text	000000000000046f              MYSQL_BIN_LOG::find_log_pos(st_log_info*, char const*, bool)
00000000008e3e3d g     F .text	0000000000000024              multi_keycache_init
00000000008c2110  w    F .text	0000000000000046              Item_nodeset_func_parentbyname::~Item_nodeset_func_parentbyname()
00000000006ba5fb g     F .text	0000000000000073              init_mdl_requests(TABLE_LIST*)
00000000005bee90 g     F .text	00000000000003f5              Query_cache::in_table_list(Query_cache_block_table*, Query_cache_block_table*, char const*)
000000000077c2a6  w    F .text	000000000000001e              handler::create_handler_files(char const*, char const*, int, st_ha_create_information*)
000000000088990e  w    F .text	0000000000000046              sp_instr_error::~sp_instr_error()
000000000080a7f8  w    F .text	0000000000000046              Item_sum_std::~Item_sum_std()
00000000007e1fb4  w    F .text	0000000000000058              Item_func_numgeometries::~Item_func_numgeometries()
000000000060717c  w    F .text	000000000000002b              Yacc_state::Yacc_state()
00000000010d2380 g     O .data	0000000000000008              default_auth_plugin_name
00000000005d1dd4  w    F .text	000000000000011c              st_select_lex::~st_select_lex()
0000000001214a20 g     O .data	0000000000000200              to_uni_macroman_bin
000000000063b8a2 g     F .text	00000000000002a9              JOIN::join_free()
0000000000739668  w    F .text	000000000000008c              Item_func_regex::Item_func_regex(Item*, Item*)
000000000079adba  w    F .text	0000000000000046              Item_static_string_func::~Item_static_string_func()
00000000005cf8ec  w    F .text	0000000000000018              THD::st_transactions::is_active()
0000000000737544  w    F .text	00000000000000e5              st_alter_tablespace::st_alter_tablespace()
00000000005d8cb6 g     F .text	000000000000009e              Warning_info::Warning_info(unsigned long long, bool)
0000000000565054  w    F .text	00000000000000a1              String::append(char const*, unsigned int, unsigned int)
00000000010edc90 g     O .data	0000000000000004              debug_not_change_ts_if_art_event
0000000000b7165c  w    F .text	000000000000001d              List_iterator_fast<partition_element>::operator++(int)
0000000000bb0163 g     F .text	00000000000000ce              my_regexec
000000000138cd8c u     O .bss	0000000000000004              randomized_index(void const*, unsigned int)::seed1
0000000000796bc6  w    F .text	0000000000000014              Item_splocal::field_type() const
000000000073b6aa  w    F .text	0000000000000059              select_dumpvar::select_dumpvar()
000000000057b06d g     F .text	000000000000004c              sp_cache_lookup(sp_cache**, sp_name*)
000000000090debe  w    F .text	000000000000003d              PFS_engine_table::PFS_engine_table(PFS_engine_table_share const*, void*)
0000000000764e5a  w    F .text	0000000000000015              Field_num::decimals() const
00000000007f6a7c g     F .text	000000000000002f              Item_in_subselect::val_str(String*)
00000000007bf70c  w    F .text	0000000000000041              Create_func_geometry_type::~Create_func_geometry_type()
000000000136fb88 g     O .bss	0000000000000004              report_port
00000000007b0914  w    F .text	0000000000000046              Item_is_not_null_test::~Item_is_not_null_test()
0000000000889600  w    F .text	0000000000000046              sp_instr_hreturn::~sp_instr_hreturn()
00000000007bb318  w    F .text	0000000000000052              Item_str_ascii_func::Item_str_ascii_func(Item*, Item*)
00000000005b0832  w    F .text	0000000000000040              MDL_deadlock_discovery_repair_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
00000000008aaff9 g     F .text	00000000000000da              check_signed_flag(partition_info*)
00000000007bbf56  w    F .text	0000000000000045              Item_func_export_set::Item_func_export_set(Item*, Item*, Item*)
00000000005f1dd8  w    F .text	0000000000000025              List<Item_func_match>::push_back(Item_func_match*)
00000000006ec574 g     F .text	0000000000000025              Set_signal_information::clear()
0000000000b74809 g     F .text	0000000000000132              _lf_dynarray_value
00000000007f3488  w    F .text	000000000000002b              Item_func_format::~Item_func_format()
00000000007bf486  w    F .text	000000000000002d              Create_func_from_days::Create_func_from_days()
000000000121b5c0 g     O .data	0000000000000100              to_lower_swe7_bin
0000000000709e18  w    F .text	0000000000000033              Sys_var_dbug::global_update(THD*, set_var*)
0000000001264de0 g     O .data	0000000000000200              cs_to_uni
000000000077b7f0  w    F .text	0000000000000047              handler::read_time(unsigned int, unsigned int, unsigned long long)
00000000005d01ca  w    F .text	0000000000000026              List_iterator<Key>::List_iterator(List<Key>&)
0000000000567784  w    F .text	000000000000002b              Item_string::~Item_string()
000000000078337e g     F .text	00000000000001f2              Item_field::set_field(Field*)
00000000007b9dea  w    F .text	0000000000000040              Item_func_signed::Item_func_signed(Item*)
0000000000766656  w    F .text	000000000000000f              Field_time::key_type() const
00000000007377fe  w    F .text	000000000000001d              Settable_routine_parameter::Settable_routine_parameter()
000000000073ca90  w    F .text	000000000000001a              List<Name_resolution_context>::head()
0000000000799e10  w    F .text	000000000000000f              List_iterator_fast<Item_field>::ref()
0000000001375a20 g     O .bss	0000000000000060              my_locale_en_GB
0000000001386738 g     O .bss	0000000000000008              Create_func_srid::s_singleton
000000000065343a g     F .text	0000000000000489              JOIN::rollup_make_fields(List<Item>&, List<Item>&, Item_sum***)
00000000006babcc  w    F .text	0000000000000015              Field_iterator_table::field()
00000000007c0746  w    F .text	000000000000002d              Create_func_log::Create_func_log()
0000000001215240 g     O .data	0000000000000101              ctype_cp1257_bin
0000000000800112 g     F .text	0000000000000236              Item_sum_sum::fix_length_and_dec()
0000000000816914  w    F .text	000000000000007d              Item_extract::check_valid_arguments_processor(unsigned char*)
000000000077bfea  w    F .text	0000000000000024              handler::index_init(unsigned int, bool)
000000000082ebaf g     F .text	0000000000000214              mysql_lock_remove(THD*, st_mysql_lock*, TABLE*)
00000000007e25c6  w    F .text	0000000000000046              Item_func_geometry_type::~Item_func_geometry_type()
00000000008f372f g     F .text	00000000000001e3              my_close
0000000000797114  w    F .text	0000000000000035              Item_field::charset_for_protocol() const
00000000006f2b28 g     F .text	0000000000000035              MDL_wait_for_subgraph::~MDL_wait_for_subgraph()
00000000007f32c8  w    F .text	0000000000000046              Item_func_char::~Item_func_char()
00000000010cd980 g     O .data	0000000000000008              first_keyword
00000000006f0b3e  w    F .text	000000000000001b              List<Observer_info>::List()
00000000006467ff g     F .text	000000000000024a              setup_end_select_func(JOIN*)
0000000000569084  w    F .text	000000000000001b              I_List<i_string>::~I_List()
0000000000b5f59e g     F .text	0000000000000102              ha_partition::ha_partition(handlerton*, TABLE_SHARE*, partition_info*, ha_partition*, st_mem_root*)
0000000000b80ea9 g     F .text	00000000000000b8              my_well_formed_len_mb
00000000006624b3 g     F .text	0000000000000cae              mysqld_list_processes(THD*, char const*, bool)
00000000009112b8 g     F .text	0000000000000178              table_setup_consumers::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000005b12da  w    F .text	0000000000000041              Repair_mrg_table_error_handler::~Repair_mrg_table_error_handler()
00000000005586fc  w    F .text	000000000000000b              Sql_alloc::~Sql_alloc()
00000000007cae70 g     F .text	0000000000000103              Item_func_shift_right::val_int()
000000000070a5b8  w    F .text	0000000000000030              Sys_var_double::session_save_default(THD*, set_var*)
000000000095fb00 g     F .text	0000000000000391              mi_unique_comp
0000000000799c52  w    F .text	000000000000002d              List<Item>::push_back(Item*, st_mem_root*)
00000000006b4b06 g     F .text	0000000000000143              get_field(st_mem_root*, Field*)
00000000007d0918 g     F .text	00000000000000aa              Item_func_udf_decimal::val_real()
00000000010bf200  w    O .data.rel.ro	0000000000000398              vtable for Item_func_monthname
00000000007c5e3e g     F .text	00000000000002e1              Item_func_numhybrid::val_str(String*)
0000000000565792  w    F .text	0000000000000026              I_List_iterator<i_string>::I_List_iterator(I_List<i_string>&)
00000000008c149e  w    F .text	0000000000000011              Item_nodeset_func_attributebyname::func_name() const
00000000007c0872  w    F .text	000000000000002d              Create_func_log2::Create_func_log2()
0000000000991adf g     F .text	0000000000000071              myrg_write
00000000006bb4e0  w    F .text	0000000000000096              I_P_List<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> >::remove(Wait_for_flush*)
00000000007be3f8  w    F .text	0000000000000026              Create_func_cot::~Create_func_cot()
00000000005c0acb g     F .text	000000000000002d              thd_unlock_data(THD*)
00000000005ce742  w    F .text	0000000000000042              Key_part_spec::clone(st_mem_root*) const
000000000073838e  w    F .text	0000000000000056              Item_func_numhybrid::Item_func_numhybrid(List<Item>&)
0000000000598a68  w    F .text	0000000000000035              Table_check_intact::~Table_check_intact()
00000000008d6432 g     F .text	00000000000000db              dirname_part
0000000000818238  w    F .text	0000000000000046              Item_func_hour::~Item_func_hour()
00000000007dab04  w    F .text	0000000000000011              Item_func_log10::func_name() const
000000000077c370  w    F .text	0000000000000014              THD::get_binlog_table_maps() const
00000000007ba3ca  w    F .text	0000000000000038              Item_func_ceiling::Item_func_ceiling(Item*)
000000000080a8b0  w    F .text	000000000000002b              Item_sum_avg::~Item_sum_avg()
00000000006f1890 g     F .text	00000000000002c3              MDL_map::find_or_insert(MDL_key const*)
00000000009109de g     F .text	00000000000002ba              table_performance_timers::table_performance_timers()
00000000005ee91a g     F .text	0000000000000014              st_select_lex::get_item_list()
000000000070e57c  w    F .text	0000000000000041              Sys_var_tx_isolation::~Sys_var_tx_isolation()
00000000007eaa4e g     F .text	000000000000010a              Item_func_encode::fix_length_and_dec()
00000000007f3404  w    F .text	000000000000002b              Item_func_elt::~Item_func_elt()
00000000005afd04  w    F .text	000000000000004e              Item_bool_rowready_func2::Item_bool_rowready_func2(Item*, Item*)
0000000001086df0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_sin
000000000087401e  w    F .text	000000000000001b              List<QUICK_RANGE_SELECT>::List()
000000000091f998 g     F .text	0000000000000021              ha_myisam::reset()
0000000000687af1 g     F .text	00000000000004c5              mysql_rename_table(handlerton*, char const*, char const*, char const*, char const*, unsigned int)
00000000007dd31e  w    F .text	0000000000000046              Item_func_tan::~Item_func_tan()
0000000000816224  w    F .text	0000000000000046              Item_str_timefunc::~Item_str_timefunc()
000000000061c2b4  w    F .text	000000000000001b              List<Ed_row>::List()
0000000000598450  w    F .text	00000000000000d6              base_list_iterator::replace(base_list&)
00000000007f204a  w    F .text	00000000000000e6              Item_func_make_set::fix_fields(THD*, Item**)
00000000007c27ae  w    F .text	0000000000000041              Create_func_ucase::~Create_func_ucase()
0000000000767ca8  w    F .text	0000000000000046              Field_bit::~Field_bit()
00000000007f4046  w    F .text	000000000000002b              Item_func_aes_encrypt::~Item_func_aes_encrypt()
00000000008c209e  w    F .text	0000000000000046              Item_nodeset_func_attributebyname::~Item_nodeset_func_attributebyname()
0000000000856f98 g     F .text	0000000000000033              QUICK_SELECT_I::QUICK_SELECT_I()
0000000000607c94  w    F .text	000000000000022d              st_ha_create_information::st_ha_create_information(st_ha_create_information const&)
00000000007c2942  w    F .text	000000000000002d              Create_func_unhex::Create_func_unhex()
0000000001087510  w    O .data.rel.ro	0000000000000030              vtable for Create_func_locate
000000000098c902 g     F .text	0000000000000854              ha_myisammrg::attach_children()
0000000000955735 g     F .text	0000000000000228              _mi_new
00000000008f45cf g     F .text	00000000000001e0              my_seek
000000000059b142  w    F .text	000000000000002e              List<LEX_COLUMN>::List(List<LEX_COLUMN> const&, st_mem_root*)
00000000007f3e74  w    F .text	000000000000006a              Item_func_des_encrypt::~Item_func_des_encrypt()
0000000000831e4e g     F .text	00000000000000e9              Log_event::do_shall_skip(Relay_log_info*)
00000000005bf2da  w    F .text	000000000000001b              Query_cache_query::result(Query_cache_block*)
00000000008fc499 g     F .text	0000000000000069              resize_thr_alarm
000000000117c900 g     O .data	00000000000000b0              my_charset_euckr_korean_ci
0000000000612a74  w    F .text	00000000000000e8              sys_var_pluginvar::sys_var_pluginvar(sys_var_chain*, char const*, st_mysql_sys_var*)
00000000008c08ee  w    F .text	000000000000005f              XPathFilter::append_element(unsigned int, unsigned int, unsigned int)
000000000070e7c6  w    F .text	0000000000000026              Sys_var_have::~Sys_var_have()
000000000097a9b1 g     F .text	00000000000007e2              mi_rkey
0000000000710603 g     F .text	00000000000000dd              case_stmt_action_expr(LEX*, Item*)
000000000110fb80 g     O .data	00000000000000b0              my_charset_big5_bin
00000000007a4140 g     F .text	000000000000006f              Item_func_if::decimal_precision() const
000000000088e4bc g     F .text	000000000000004a              Gis_line_string::get_mbr(MBR*, char const**) const
00000000010eaf60 g     O .data	0000000000000040              MDL_key::m_namespace_to_wait_state_name
0000000000764674  w    F .text	0000000000000037              Field::key_cmp(unsigned char const*, unsigned char const*)
00000000006ec548 g     F .text	000000000000002b              Set_signal_information::Set_signal_information(Set_signal_information const&)
0000000000659f90  w    F .text	0000000000000043              Item_bool_func2::set_cmp_func()
00000000007b0f92  w    F .text	0000000000000058              Item_func_case::~Item_func_case()
0000000000558f10  w    F .text	000000000000000b              st_decimal_t::st_decimal_t()
00000000007be9d4  w    F .text	0000000000000026              Create_func_degrees::~Create_func_degrees()
00000000005d724c  w    F .text	0000000000000123              THD::set_db(char const*, unsigned long)
0000000000764116  w    F .text	000000000000003a              Field::~Field()
00000000007b567c g     F .text	0000000000000050              Create_func_monthname::create(THD*, Item*)
000000000057a5f2  w    F .text	0000000000000057              Slave_reporting_capability::clear_error()
00000000008c1742  w    F .text	0000000000000011              Item_xpath_cast_number::func_name() const
00000000007e0872 g     F .text	0000000000000121              Item_func_area::val_real()
00000000008487be g     F .text	000000000000008d              Heartbeat_log_event::Heartbeat_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000013865f8 g     O .bss	0000000000000008              Create_func_log2::s_singleton
000000000082e2d6 g     F .text	000000000000031b              mysql_lock_tables(THD*, TABLE**, unsigned int, unsigned int)
0000000000871ae0  w    F .text	0000000000000031              TABLE::column_bitmaps_set_no_signal(st_bitmap*, st_bitmap*)
0000000000899cf6  w    F .text	000000000000012e              field_decimal::field_decimal(Item*, analyse*)
00000000010ca6b0  w    O .data.rel.ro	0000000000000048              vtable for table_threads
00000000007dcc04  w    F .text	0000000000000058              Item_func_ascii::~Item_func_ascii()
00000000007994c0  w    F .text	0000000000000044              Item_cache_int::Item_cache_int(enum_field_types)
00000000012160a0 g     O .data	0000000000000200              to_uni_armscii8_bin
000000000076538a  w    F .text	0000000000000014              Field_new_decimal::pack_length() const
000000000089b9fa g     F .text	000000000000020c              Materialized_cursor::fetch(unsigned long)
000000000061c42b g     F .text	00000000000004c5              mysql_rename_tables(THD*, TABLE_LIST*, bool)
00000000005ba226 g     F .text	0000000000000130              Query_cache::insert_into_free_memory_list(Query_cache_block*)
0000000000690658  w    F .text	00000000000000ba              Key::Key(Key::Keytype, char const*, unsigned long, st_key_create_information*, bool, List<Key_part_spec>&)
00000000008ba4b6 g     F .text	000000000000037f              Unique::get_use_cost(unsigned int*, unsigned int, unsigned int, unsigned long long)
00000000007c0e4e  w    F .text	000000000000002d              Create_func_nullif::Create_func_nullif()
000000000138cc08 g     O .bss	0000000000000008              cond_lost
00000000005c9bce g     F .text	0000000000000012              Security_context::get_external_user()
0000000000808720  w    F .text	000000000000001b              Item_sum::fix_length_and_dec()
0000000000905384 g     F .text	000000000000006a              ha_perfschema::delete_table(char const*)
00000000007c2cf4  w    F .text	0000000000000041              Create_func_weekofyear::~Create_func_weekofyear()
00000000010eb460 g     O .data	0000000000000028              sql_protocol_names_lib
00000000005a2aac g     F .text	000000000000023c              Locked_tables_list::reopen_tables(THD*)
00000000007aee56  w    F .text	0000000000000046              in_vector::~in_vector()
00000000007f192a  w    F .text	0000000000000011              Item_func_md5::func_name() const
00000000008c07a4  w    F .text	000000000000002b              Item_xml_str_func::~Item_xml_str_func()
00000000010b43a8  w    O .data.rel.ro	0000000000000060              vtable for Aggregator_distinct
00000000005992ee  w    F .text	0000000000000059              hash_filo::~hash_filo()
0000000000906b49 g     F .text	00000000000001fd              create_mutex(PFS_mutex_class*, void const*)
0000000000765952  w    F .text	0000000000000037              Field_long::pack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000007ff380 g     F .text	0000000000000202              Aggregator_distinct::endup()
000000000088a83a g     F .text	00000000000000ed              sp_pcontext::push_variable(st_mysql_lex_string*, enum_field_types, sp_param_mode_t)
0000000000905a6c  w    F .text	000000000000001a              ha_perfschema::index_flags(unsigned int, unsigned int, bool) const
000000000077490d g     F .text	000000000000008f              ha_flush_logs(handlerton*)
000000000055c2a6  w    F .text	000000000000001b              I_List<NAMED_ILINK>::I_List()
0000000000800f34 g     F .text	00000000000001c0              Item_sum_avg::fix_length_and_dec()
000000000057b33e  w    F .text	000000000000002a              sp_cache::insert(sp_head*)
00000000008afa1c g     F .text	0000000000000149              get_partition_id_list_col(partition_info*, unsigned int*, long long*)
00000000009489e9 g     F .text	0000000000000081              test_if_reopen
000000000090bf7c  w    F .text	000000000000001d              ACL_internal_table_access::ACL_internal_table_access()
000000000086b3a4 g     F .text	000000000000007e              QUICK_SELECT_DESC::range_reads_after_key(QUICK_RANGE*)
000000000073b3b2  w    F .text	00000000000000b9              LEX::uncacheable(unsigned char)
00000000007ae750  w    F .text	000000000000000f              Item_func_eq::eq_cmp_result() const
000000000075d444 g     F .text	00000000000001c9              Field_enum::val_int()
0000000000817248  w    F .text	0000000000000046              Item_func_last_day::~Item_func_last_day()
00000000007d9e85  w    F .text	000000000000001a              my_decimal_intg(my_decimal const*)
0000000000598ac4  w    F .text	0000000000000061              TABLE::column_bitmaps_set(st_bitmap*, st_bitmap*)
0000000000b5de68  w    F .text	000000000000002b              ha_tina::~ha_tina()
0000000000799f36  w    F .text	000000000000001a              List<List<Item> >::head()
000000000075b73a g     F .text	0000000000000133              Field_blob::val_real()
0000000001386628 g     O .bss	0000000000000008              Create_func_master_pos_wait::s_singleton
0000000000566d90  w    F .text	000000000000002e              Item::traverse_cond(void (*)(Item const*, void*), void*, Item::traverse_order)
0000000001208300 g     O .data	0000000000000200              to_uni_latin1_german1_ci
00000000006e8f78 g     F .text	00000000000000dd              QUERY_PROFILE::QUERY_PROFILE(PROFILING*, char const*)
00000000010c43b0  w    O .data.rel.ro	0000000000000060              vtable for field_ulonglong
00000000012b0680 g     O .data	0000000000000600              page004data
000000000088cdf8  w    F .text	0000000000000030              Sql_condition_info::clear()
0000000000815c6e  w    F .text	0000000000000026              Item_func_second::fix_length_and_dec()
00000000010eef2c g     O .data	0000000000000004              builtin_perfschema_sizeof_struct_st_plugin
00000000008488a0 g     F .text	00000000000000ef              my_strmov_quoted_identifier_helper(int, char*, char const*, unsigned int)
00000000007da4fa  w    F .text	000000000000002f              Item_num_op::str_op(String*)
00000000006988cc  w    F .text	0000000000000041              Handle_old_incorrect_sql_modes_hook::~Handle_old_incorrect_sql_modes_hook()
00000000008c27a6  w    F .text	0000000000000046              Item_bool::~Item_bool()
00000000008ba836 g     F .text	0000000000000049              Unique::~Unique()
000000000091bebc g     F .text	00000000000000d2              ha_myisam::index_type(unsigned int)
000000000074e4b4 g     F .text	00000000000000c8              Field_short::val_real()
0000000001086520  w    O .data.rel.ro	0000000000000040              vtable for Le_creator
00000000008709e2 g     F .text	000000000000009a              QUICK_GROUP_MIN_MAX_SELECT::add_keys_and_lengths(String*, String*)
00000000007a48b4 g     F .text	00000000000003cc              Item_func_case::find_item(String*)
000000000089b4fe g     F .text	00000000000000cb              Materialized_cursor::Materialized_cursor(select_result*, TABLE*)
00000000007a6c2e g     F .text	0000000000000098              in_datetime::set(unsigned int, Item*)
0000000000000000       F *UND*	0000000000000000              lseek64@@GLIBC_2.2.5
0000000000802744 g     F .text	0000000000000080              Item_sum_min::copy_or_same(THD*)
00000000005ce8d0  w    F .text	000000000000001b              List<st_mysql_lex_string>::~List()
00000000006bb434  w    F .text	00000000000000ac              I_P_List<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> >::push_front(Wait_for_flush*)
0000000000566a90  w    F .text	000000000000000b              Item::update_used_tables()
000000000138cc30 g     O .bss	0000000000000008              file_handle_max
000000000089367a  w    F .text	000000000000002d              Gis_point::Gis_point()
00000000006e92dc g     F .text	0000000000000042              PROFILING::PROFILING()
00000000006f622a  w    F .text	0000000000000026              Deadlock_detection_visitor::~Deadlock_detection_visitor()
000000000056ff5b g     F .text	0000000000000513              register_slave_on_master(st_mysql*, Master_info*, bool*)
00000000007b2d12 g     F .text	0000000000000098              Create_func_concat_ws::create_native(THD*, st_mysql_lex_string, List<Item>*)
00000000007f194e  w    F .text	0000000000000011              Item_func_sha2::func_name() const
000000000082cc7e  w    F .text	0000000000000039              LOGGER::LOGGER()
00000000007f26f2  w    F .text	0000000000000016              Item_func_crc32::fix_length_and_dec()
000000000073c566  w    F .text	000000000000001b              sp_pcontext::register_case_expr()
000000000077b770  w    F .text	000000000000002b              handler::change_table_ptr(TABLE*, TABLE_SHARE*)
00000000007ebb12 g     F .text	000000000000077a              Item_func_format::val_str_ascii(String*)
00000000010867f0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_y
00000000006aa1a2  w    F .text	000000000000001a              List<Index_hint>::head()
00000000010c36b0  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_cpush
00000000005d8d54 g     F .text	0000000000000030              Warning_info::~Warning_info()
0000000000818e8a g     F .text	000000000000028e              key_cmp_if_same(TABLE*, unsigned char const*, unsigned int, unsigned int)
00000000007db928  w    F .text	0000000000000011              Item_func_is_free_lock::func_name() const
00000000008f691a g     F .text	00000000000001a5              my_thread_init
000000000070cf84  w    F .text	0000000000000025              List<set_var_base>::push_back(set_var_base*)
000000000106d0a0  w    O .data.rel.ro	00000000000003a0              vtable for Item_typecast_maybe_null
0000000000808500  w    F .text	0000000000000051              Field::val_str(String*, unsigned char const*)
00000000009915ba g     F .text	0000000000000369              myrg_rrnd
00000000008f2786 g     F .text	00000000000000a2              my_fstat
00000000005efd2a g     F .text	000000000000003f              LEX::reset_n_backup_query_tables_list(Query_tables_list*)
000000000090bff6  w    F .text	000000000000002d              PFS_readonly_acl::PFS_readonly_acl()
00000000005ee1b2 g     F .text	000000000000004f              st_select_lex_node::exclude()
0000000000676512 g     F .text	0000000000000272              make_schema_select(THD*, st_select_lex*, enum_schema_tables)
00000000008ac4b9 g     F .text	0000000000000880              fix_partition_func(THD*, TABLE*, bool)
00000000007e1f88  w    F .text	000000000000002b              Item_func_numpoints::~Item_func_numpoints()
000000000108eba8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_udf_float
00000000007fae00 g     F .text	0000000000000206              subselect_uniquesubquery_engine::scan_table()
000000000080899e  w    F .text	000000000000000b              Aggregator_simple::endup()
00000000007dc02e  w    F .text	0000000000000046              Item_func_found_rows::~Item_func_found_rows()
00000000008ea805 g     F .text	0000000000000078              bitmap_test_and_clear
00000000008f53de g     F .text	0000000000000331              my_rename_with_symlink
00000000007b4b26 g     F .text	0000000000000050              Create_func_last_day::create(THD*, Item*)
00000000010e00c0 g     O .data	0000000000000618              files_fields_info
0000000001371bc0 g     O .bss	0000000000000008              slave_load_tmpdir
00000000008cb38c  w    F .text	0000000000000046              Alter_table_optimize_partition_statement::~Alter_table_optimize_partition_statement()
000000000084afbc  w    F .text	0000000000000105              Relay_log_info::get_table_data(TABLE*, table_def**, TABLE**) const
000000000077fd1a g     F .text	0000000000000068              Item::safe_charset_converter(charset_info_st*)
00000000007dd156  w    F .text	0000000000000046              Item_func_bit_neg::~Item_func_bit_neg()
000000000087f879 g     F .text	000000000000010f              sp_head::operator delete(void*, unsigned long)
00000000006b785c g     F .text	0000000000000096              TABLE_LIST::register_want_access(unsigned long)
00000000007b5400 g     F .text	00000000000000ac              Create_func_make_set::create_native(THD*, st_mysql_lex_string, List<Item>*)
000000000059bf73 g     F .text	0000000000000038              table_def_key
00000000010ca5d8  w    O .data.rel.ro	0000000000000048              vtable for table_cond_instances
00000000007f3244  w    F .text	0000000000000058              Item_func_repeat::~Item_func_repeat()
00000000008c121c  w    F .text	000000000000002b              Item_nodeset_func_axisbyname::~Item_nodeset_func_axisbyname()
000000000079b462 g     F .text	000000000000002b              Cached_item_str::~Cached_item_str()
00000000008737ba  w    F .text	0000000000000046              TRP_GROUP_MIN_MAX::~TRP_GROUP_MIN_MAX()
00000000007f5e6c g     F .text	00000000000000d9              Item_singlerow_subselect::val_real()
00000000005c08ce g     F .text	000000000000002a              thd_lock_thread_remove(THD*)
00000000007cb00e g     F .text	0000000000000077              Item_func_integer::fix_length_and_dec()
0000000000766244  w    F .text	000000000000000f              Field_year::can_be_compared_as_longlong() const
00000000010e08c0 g     O .data	0000000000000280              parameters_fields_info
000000000073a6a0  w    F .text	0000000000000011              Item_date_func::charset_for_protocol() const
00000000008bbc16 g     F .text	0000000000000181              Item_nodeset_func_descendantbyname::val_nodeset(String*)
000000000056037a g     F .text	00000000000000a2              get_salt_from_password_323
00000000008161aa  w    F .text	0000000000000050              Item_date::val_decimal(my_decimal*)
00000000007afdc8  w    F .text	0000000000000046              Item_func_isnull::~Item_func_isnull()
0000000000b6df48 g     F .text	00000000000000de              ha_partition::records()
00000000006f0a08  w    F .text	000000000000001b              Binlog_transmit_delegate::Binlog_transmit_delegate()
00000000006e8955 g     F .text	0000000000000077              my_thread_scheduler_reset
0000000001068320  w    O .data.rel.ro	0000000000000040              vtable for Comp_creator
000000000079a3b4  w    F .text	000000000000002b              Item_cache_int::~Item_cache_int()
00000000006f535c  w    F .text	0000000000000033              MDL_context::get_deadlock_weight() const
000000000082260e g     F .text	000000000000011e              MYSQL_BIN_LOG::MYSQL_BIN_LOG(unsigned int*)
0000000000814be2 g     F .text	00000000000003dd              Item_func_str_to_date::get_date(st_mysql_time*, unsigned int)
000000000094e22f g     F .text	0000000000000b1c              mi_base_info_write
00000000007bc6d0  w    F .text	000000000000004a              Item_func_numinteriorring::Item_func_numinteriorring(Item*)
00000000007bf9cc  w    F .text	000000000000002d              Create_func_hex::Create_func_hex()
000000000056552c  w    F .text	000000000000007e              Item_func::Item_func(Item*)
000000000056d6ee g     F .text	00000000000001f3              start_slave_threads(bool, bool, Master_info*, char const*, char const*, int)
0000000000797206  w    F .text	0000000000000012              Item_param::get_settable_routine_parameter()
000000000089ddda g     F .text	00000000000000ad              multi_delete::prepare(List<Item>&, st_select_lex_unit*)
000000000078b072 g     F .text	00000000000000b3              Item_field::find_item_equal(COND_EQUAL*)
00000000008c6bb8 g     F .text	0000000000000677              Event_queue::get_top_for_execution_if_time(THD*, Event_queue_element_for_exec**)
000000000088d7d0 g     F .text	00000000000001d6              Geometry::envelope(String*) const
00000000007557be g     F .text	000000000000002d              Field_date::get_time(st_mysql_time*)
0000000000893c18  w    F .text	000000000000002d              Gis_geometry_collection::Gis_geometry_collection()
00000000007bacf0  w    F .text	0000000000000040              Item_func_udf_float::Item_func_udf_float(st_udf_func*, List<Item>&)
000000000084d9d2 g     F .text	00000000000000bb              Write_rows_log_event_old::do_after_row_operations(TABLE*, int)
00000000008c020c g     F .text	00000000000000ed              Item_func_xml_extractvalue::val_str(String*)
00000000007d8dda g     F .text	0000000000000384              Item_func_sp::init_result_field(THD*)
0000000000891a46 g     F .text	0000000000000174              Gis_multi_polygon::get_mbr(MBR*, char const**) const
0000000000738920  w    F .text	0000000000000040              Item_func_bit_or::Item_func_bit_or(Item*, Item*)
0000000000000000       F *UND*	0000000000000000              pthread_rwlock_trywrlock@@GLIBC_2.2.5
00000000007c2eb6  w    F .text	0000000000000041              Create_func_xml_extractvalue::~Create_func_xml_extractvalue()
000000000136e940 g     O .bss	00000000000005b0              global_status_var
00000000006f0a40  w    F .text	000000000000001b              Trans_delegate::~Trans_delegate()
00000000007883e6 g     F .text	0000000000000051              Item_copy_int::copy()
000000000065c372  w    F .text	000000000000001a              List<Item_field>::head()
00000000008742fc  w    F .text	0000000000000026              QUICK_SELECT_DESC::~QUICK_SELECT_DESC()
000000000086fd5c g     F .text	00000000000000d8              QUICK_GROUP_MIN_MAX_SELECT::next_max()
00000000007e3338  w    F .text	0000000000000015              Item_row::not_null_tables() const
00000000007f3b5c  w    F .text	0000000000000046              Item_func_lcase::~Item_func_lcase()
00000000005ee904 g     F .text	0000000000000015              st_select_lex::get_table_list()
00000000007bd578  w    F .text	000000000000002d              Create_func_addtime::Create_func_addtime()
000000000090e262  w    F .text	0000000000000041              table_events_waits_current::~table_events_waits_current()
00000000008c26b0  w    F .text	0000000000000046              Item_xpath_cast_number::~Item_xpath_cast_number()
000000000091c3ba g     F .text	0000000000000038              ha_myisam::close()
0000000000959931 g     F .text	0000000000000ce2              _mi_prefix_search
0000000001386718 g     O .bss	0000000000000008              Create_func_sleep::s_singleton
00000000010a80a0  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_decode
0000000000808e9c  w    F .text	0000000000000089              Item_sum_sum::~Item_sum_sum()
00000000013708e8 g     O .bss	0000000000000004              key_file_tclog
00000000006f5c4e  w    F .text	00000000000000ac              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >::push_front(MDL_ticket*)
000000000073a81e  w    F .text	0000000000000028              Item_str_timefunc::fix_length_and_dec()
000000000077fa46 g     F .text	0000000000000224              Item::set_name(char const*, unsigned int, charset_info_st*)
00000000005f13a2  w    F .text	000000000000005e              Lex_input_stream::yyLength()
000000000088990e  w    F .text	0000000000000046              sp_instr_error::~sp_instr_error()
00000000007af074  w    F .text	0000000000000046              in_longlong::~in_longlong()
00000000007c0102  w    F .text	0000000000000041              Create_func_issimple::~Create_func_issimple()
00000000009656c9 g     F .text	00000000000000ac              rtree_get_first
00000000010eee78 g     O .data	0000000000000008              next_alarm_expire_time
00000000005608cb g     F .text	0000000000000122              check_scramble
0000000000799a2c  w    F .text	0000000000000046              Item_sp_variable::~Item_sp_variable()
00000000007bb1f4  w    F .text	000000000000004e              Item_func_nullif::Item_func_nullif(Item*, Item*)
000000000059905e  w    F .text	000000000000001c              THD::get_invoker_user()
00000000007f1d08  w    F .text	0000000000000011              Item_func_encrypt::func_name() const
00000000008f1b00 g     F .text	0000000000000025              has_path
000000000078c958 g     F .text	0000000000000029              Item_null::save_in_field(Field*, bool)
00000000006e000a g     F .text	00000000000002c4              Master_info::Master_info(bool)
000000000067b746 g     F .text	000000000000013a              validate_string(charset_info_st*, char const*, unsigned int, unsigned long*, bool*)
000000000107ae10  w    O .data.rel.ro	0000000000000358              vtable for Item_field
0000000001068680  w    O .data.rel.ro	0000000000000360              vtable for Item_return_int
0000000000000000       F *UND*	0000000000000000              fsync@@GLIBC_2.2.5
00000000010c0790  w    O .data.rel.ro	0000000000000398              vtable for Item_func_period_diff
00000000010ca198  w    O .data.rel.ro	0000000000000028              vtable for ACL_internal_table_access
00000000008c1a46  w    F .text	000000000000005d              Item_func_xpath_sum::Item_func_xpath_sum(Item*, String*)
00000000005d88e8 g     F .text	0000000000000150              Diagnostics_area::set_ok_status(THD*, unsigned long long, unsigned long long, char const*)
00000000007da8d4  w    F .text	0000000000000046              Item_func_num1::~Item_func_num1()
000000000070ad9a  w    F .text	0000000000000051              Sys_var_flagset::session_value_ptr(THD*, st_mysql_lex_string*)
000000000088a99c g     F .text	00000000000000e7              sp_pcontext::find_label(char*)
0000000000000000       F *UND*	0000000000000000              inflateInit2_
000000000079ae00  w    F .text	000000000000002b              Item_static_string_func::~Item_static_string_func()
000000000107a750  w    O .data.rel.ro	0000000000000360              vtable for Item_uint
00000000005d1cbc  w    F .text	0000000000000056              Foreign_key::~Foreign_key()
00000000007f5b72 g     F .text	000000000000019c              Item_singlerow_subselect::fix_length_and_dec()
000000000098181e g     F .text	000000000000009d              ha_heap::index_first(unsigned char*)
00000000005b5fe2 g     F .text	000000000000010d              Query_cache::invalidate_locked_for_write(TABLE_LIST*)
00000000008158e4  w    F .text	0000000000000013              Item_func_dayofmonth::check_partition_func_processor(unsigned char*)
0000000001372b40 g     O .bss	0000000000000008              manager_thread
00000000006018a8 g     F .text	00000000000001bc              my_yyoverflow(short**, YYSTYPE**, unsigned long*)
00000000005d0678  w    F .text	000000000000001b              List<Alter_drop>::List()
00000000007fc6b4  w    F .text	000000000000000f              subselect_uniquesubquery_engine::upper_select_const_tables()
00000000007be6a4  w    F .text	0000000000000041              Create_func_dayname::~Create_func_dayname()
00000000005ce08a  w    F .text	0000000000000030              Discrete_intervals_list::empty_no_free()
00000000007b0b34  w    F .text	000000000000002b              Item_func_bit_or::~Item_func_bit_or()
0000000000905afa  w    F .text	000000000000002d              ha_perfschema::register_query_cache_table(THD*, char*, unsigned int, char (**)(THD*, char*, unsigned int, unsigned long long*), unsigned long long*)
000000000093b1ba g     F .text	00000000000000fa              mi_munmap_file
0000000000738868  w    F .text	0000000000000040              Item_func_bit::Item_func_bit(Item*, Item*)
00000000013863c8 g     O .bss	0000000000000008              Create_func_concat_ws::s_singleton
00000000010c1e08  w    O .data.rel.ro	00000000000000b8              vtable for Write_rows_log_event_old
0000000000566cc6  w    F .text	00000000000000c9              Item::compile(bool (Item::*)(unsigned char**), unsigned char**, Item* (Item::*)(unsigned char*), unsigned char*)
000000000070ea5c  w    F .text	0000000000000041              Sys_var_max_user_conn::~Sys_var_max_user_conn()
0000000000679c94 g     F .text	0000000000000272              String::append(char const*, unsigned int, charset_info_st*)
0000000000849262  w    F .text	0000000000000059              Create_file_log_event::~Create_file_log_event()
0000000000739c30  w    F .text	0000000000000052              Item_func_substr::Item_func_substr(Item*, Item*)
000000000091de04 g     F .text	000000000000026d              ha_myisam::assign_to_keycache(THD*, st_ha_check_opt*)
00000000007dc074  w    F .text	000000000000002b              Item_func_found_rows::~Item_func_found_rows()
00000000007c304a  w    F .text	000000000000002d              Create_func_year_week::Create_func_year_week()
000000000073c036  w    F .text	0000000000000072              sp_instr_jump_if_not::sp_instr_jump_if_not(unsigned int, sp_pcontext*, Item*, unsigned int, LEX*)
00000000006cbe14 g     F .text	00000000000004b9              Events::create_event(THD*, Event_parse_data*, bool)
00000000007c70dc g     F .text	00000000000001f3              Item_decimal_typecast::val_decimal(my_decimal*)
0000000001375120 g     O .bss	0000000000000060              my_locale_tr_TR
000000000088cc62 g     F .text	000000000000010b              Select_fetch_into_spvars::send_data(List<Item>&)
00000000010dc7a0 g     O .data	0000000000000798              show_table_authors
000000000056b040  w    F .text	000000000000001b              sys_var::is_readonly() const
00000000007c2780  w    F .text	000000000000002d              Create_func_ucase::Create_func_ucase()
00000000008a1d32 g     F .text	0000000000000071              XML_TAG::XML_TAG(int, String, String)
000000000088ce56  w    F .text	0000000000000011              Select_fetch_into_spvars::get_field_count()
00000000007f6758 g     F .text	000000000000008b              Item_exists_subselect::val_real()
000000000087eb06  w    F .text	0000000000000052              Stored_routine_creation_ctx::~Stored_routine_creation_ctx()
0000000000000000       F *UND*	0000000000000000              gmtime@@GLIBC_2.2.5
00000000008b9f04  w    F .text	000000000000001b              List_iterator<partition_element>::remove()
00000000013864e8 g     O .bss	0000000000000008              Create_func_from_days::s_singleton
00000000006f5692  w    F .text	0000000000000024              MDL_scoped_lock::needs_notification(MDL_ticket const*) const
00000000006f56fe  w    F .text	0000000000000087              MDL_object_lock::reset(MDL_key const*)
000000000082d8be  w    F .text	000000000000008f              binlog_cache_data::reset()
00000000008c29c0 g     F .text	000000000000014e              table_mapping::get_table(unsigned long)
0000000000b805e6 g     F .text	00000000000000c2              my_caseup_mb_varlen
00000000006f5b4a  w    F .text	0000000000000096              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> >::remove(MDL_ticket*)
0000000000816484  w    F .text	0000000000000046              Item_func_curdate::~Item_func_curdate()
0000000000798600  w    F .text	0000000000000015              Item_int_with_ref::real_item()
000000000089ad0a  w    F .text	00000000000000ea              field_decimal::~field_decimal()
00000000007bb7fe  w    F .text	0000000000000052              Item_func_des_decrypt::Item_func_des_decrypt(Item*, Item*)
000000000086f02e g     F .text	000000000000014b              QUICK_GROUP_MIN_MAX_SELECT::~QUICK_GROUP_MIN_MAX_SELECT()
00000000005b0b2e  w    F .text	0000000000000011              I_P_List<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::front()
00000000005ce5b0  w    F .text	000000000000001b              Diagnostics_area::Diagnostics_area()
000000000088271c g     F .text	0000000000000a0a              sp_head::execute_function(THD*, Item**, unsigned int, Field*)
000000000073d719 g     F .text	0000000000000037              free_rows
00000000007f2d52  w    F .text	0000000000000046              Item_func_binary::~Item_func_binary()
00000000007fc4d8  w    F .text	0000000000000070              Item_in_subselect::Item_in_subselect()
00000000008c652a g     F .text	00000000000000c3              Event_queue::drop_schema_events(THD*, st_mysql_lex_string)
000000000136cd20 g     O .bss	0000000000000008              slave_type_conversions_options
00000000010dea20 g     O .data	00000000000001b8              view_fields_info
00000000007ddcd0  w    F .text	000000000000002b              Item_decimal_typecast::~Item_decimal_typecast()
00000000007c29d8  w    F .text	000000000000002d              Create_func_unix_timestamp::Create_func_unix_timestamp()
00000000005671a4  w    F .text	0000000000000046              Item_num::~Item_num()
00000000007c4f9c g     F .text	000000000000002b              Item_func::is_expensive_processor(unsigned char*)
00000000007bb444  w    F .text	0000000000000040              Item_func_sha2::Item_func_sha2(Item*, Item*)
0000000000b68c86 g     F .text	000000000000016d              ha_partition::rnd_end()
00000000005ca1b3 g     F .text	0000000000000012              thd_query
000000000065bea2  w    F .text	000000000000001b              I_List<COND_CMP>::I_List()
0000000001374b80 g     O .bss	0000000000000060              my_locale_pl_PL
0000000000878cfc g     F .text	00000000000000d5              load_charset(st_mem_root*, Field*, charset_info_st*, charset_info_st**)
000000000069678a g     F .text	00000000000004d7              Table_triggers_list::change_table_name_in_triggers(THD*, char const*, char const*, st_mysql_lex_string*, st_mysql_lex_string*)
0000000000567846  w    F .text	000000000000002b              Item_partition_func_safe_string::~Item_partition_func_safe_string()
00000000013956ac g     O .bss	0000000000000004              mi_key_file_datatmp
0000000000682a4b g     F .text	00000000000000b6              check_duplicate_warning(THD*, char*, unsigned long)
0000000001355d00 g     O .data	00000000000000b0              my_charset_ujis_bin
00000000005d0638  w    F .text	0000000000000026              List_iterator<Key_part_spec>::after(Key_part_spec*)
000000000067a17c g     F .text	0000000000000140              String::strstr(String const&, unsigned int)
000000000083209c g     F .text	00000000000001b3              Log_event::init_show_field_list(List<Item>*)
000000000069629e g     F .text	00000000000000a1              Table_triggers_list::find_trigger_by_name(st_mysql_lex_string const*)
000000000069e44d g     F .text	0000000000002330              mysql_update(THD*, TABLE_LIST*, List<Item>&, List<Item>&, Item*, unsigned int, st_order*, unsigned long long, enum_duplicates, bool, unsigned long long*, unsigned long long*)
00000000007b39a0 g     F .text	000000000000005d              Create_func_equals::create(THD*, Item*, Item*)
000000000074f0e6 g     F .text	000000000000016d              Field_medium::val_real()
000000000065a0f6  w    F .text	0000000000000043              Item_func_isnotnull::Item_func_isnotnull(Item*)
0000000000764c34  w    F .text	000000000000004c              Field::pack_int24(unsigned char*, unsigned char const*, bool)
00000000006f512c  w    F .text	0000000000000014              MDL_key::length() const
0000000000891e42 g     F .text	00000000000001ab              Gis_multi_polygon::area(double*, char const**) const
000000000091285a g     F .text	0000000000000028              table_rwlock_instances::create()
00000000007a68e2 g     F .text	00000000000000e1              in_row::~in_row()
000000000088cfc0 g     F .text	0000000000000067              Geometry::Class_info::Class_info(char const*, int, Geometry* (*)(char*))
00000000007f3bce  w    F .text	0000000000000058              Item_func_insert::~Item_func_insert()
00000000007be25c  w    F .text	000000000000002d              Create_func_convert_tz::Create_func_convert_tz()
0000000000ba5ceb g     F .text	0000000000000015              vio_errno
00000000007683ec  w    F .text	000000000000002b              Field_long::~Field_long()
0000000000798c38  w    F .text	0000000000000050              Item_copy_uint::val_real()
00000000007c0b60  w    F .text	000000000000002d              Create_func_make_set::Create_func_make_set()
0000000000b78bc7 g     F .text	000000000000006d              _db_explain_init_
0000000000ba0ea6 g     F .text	0000000000000599              my_strtoll10
00000000005b0d90  w    F .text	0000000000000056              Hash_set<TABLE_LIST, &schema_set_get_key>::Iterator::operator++(int)
0000000000766440  w    F .text	000000000000007b              Field_newdate::Field_newdate(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
00000000006fb5d0 g     F .text	0000000000000162              trans_xa_end(THD*)
000000000136cd90 g     O .bss	0000000000000008              delayed_insert_limit
00000000005c9f6a g     F .text	00000000000000d7              THD::reset_n_backup_open_tables_state(Open_tables_backup*)
00000000010e2fd0 g     O .data	0000000000000008              my_tz_OFFSET0
000000000077bd68  w    F .text	000000000000000b              handler::init_table_handle_for_HANDLER()
0000000000873800  w    F .text	000000000000002b              TRP_GROUP_MIN_MAX::~TRP_GROUP_MIN_MAX()
0000000000805b6c g     F .text	0000000000000113              Item_sum_udf_decimal::val_decimal(my_decimal*)
0000000001386660 g     O .bss	0000000000000008              Create_func_numpoints::s_singleton
0000000001068360  w    O .data.rel.ro	0000000000000020              vtable for ilink
000000000081264e g     F .text	00000000000001f8              Item_char_typecast::fix_length_and_dec()
0000000000790346 g     F .text	000000000000008d              Item_ref::val_real()
0000000000815bb8  w    F .text	0000000000000013              Item_func_minute::check_partition_func_processor(unsigned char*)
0000000000783ece g     F .text	00000000000000a1              Item_field::str_result(String*)
00000000008342f6 g     F .text	000000000000006d              Query_log_event::Query_log_event()
00000000013869c0 g     O .bss	00000000000000c0              logger
0000000000809b12  w    F .text	000000000000002b              Item_udf_sum::~Item_udf_sum()
0000000000658770  w    F .text	000000000000001a              Sql_alloc::operator new[](unsigned long)
000000000058960a g     F .text	00000000000004d6              grant_reload(THD*)
00000000005c0be0 g     F .text	000000000000000d              get_connection_attrib()
00000000010ac8a8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_des_encrypt
00000000007fd814 g     F .text	000000000000004d              Item_sum::mark_as_sum_func()
00000000005586f0  w    F .text	000000000000000b              Sql_alloc::Sql_alloc()
000000000065c836  w    F .text	0000000000000026              List_iterator<Cached_item>::List_iterator(List<Cached_item>&)
0000000000744d77 g     F .text	00000000000002fc              mysql_store_result
0000000000764c80  w    F .text	000000000000004c              Field::unpack_int24(unsigned char*, unsigned char const*, bool)
0000000000659262  w    F .text	000000000000004a              Field_blob::get_length(unsigned int)
0000000000808c5e  w    F .text	0000000000000014              Item_sum_sum::result_type() const
00000000005a5d6c g     F .text	00000000000000ed              open_n_lock_single_table(THD*, TABLE_LIST*, thr_lock_type, unsigned int, Prelocking_strategy*)
00000000007bdf48  w    F .text	0000000000000026              Create_func_compress::~Create_func_compress()
0000000000000000       F *UND*	0000000000000000              pthread_yield@@GLIBC_2.2.5
0000000000892e2a g     F .text	0000000000000244              Gis_geometry_collection::dimension(unsigned int*, char const**) const
0000000000b818ed g     F .text	0000000000000683              my_like_range_generic
0000000000b6a5fc g     F .text	00000000000000a6              ha_partition::index_prev(unsigned char*)
0000000000905a44  w    F .text	0000000000000014              ha_perfschema::index_type(unsigned int)
00000000007900b6 g     F .text	00000000000000a9              Item_ref::val_decimal_result(my_decimal*)
00000000007a7314 g     F .text	000000000000002b              cmp_item_row::~cmp_item_row()
00000000008c2266  w    F .text	0000000000000046              Item_nodeset_func_childbyname::~Item_nodeset_func_childbyname()
00000000005596a2  w    F .text	000000000000001f              Buffered_logs::~Buffered_logs()
00000000008c8a06 g     F .text	00000000000002a2              Event_db_repository::fill_schema_events(THD*, TABLE_LIST*, char const*)
00000000008166a8  w    F .text	000000000000003e              Item_func_sysdate_local::update_used_tables()
000000000136ccc0 g     O .bss	0000000000000008              server_id
00000000006e9056 g     F .text	0000000000000066              QUERY_PROFILE::~QUERY_PROFILE()
000000000090f3c0  w    F .text	000000000000002b              pos_events_waits_summary_by_thread_by_event_name::reset()
00000000007e267e  w    F .text	000000000000002b              Item_func_as_wkb::~Item_func_as_wkb()
0000000000820194 g     F .text	00000000000000ad              MYSQL_LOG::init_and_set_log_file_name(char const*, char const*, enum_log_type, cache_type)
0000000001071050  w    O .data.rel.ro	0000000000000298              vtable for Field_date
00000000008579fc g     F .text	000000000000013a              QUICK_ROR_INTERSECT_SELECT::QUICK_ROR_INTERSECT_SELECT(THD*, TABLE*, bool, st_mem_root*)
000000000082a958 g     F .text	0000000000000840              TC_LOG_MMAP::open(char const*)
00000000010c20e8  w    O .data.rel.ro	00000000000000a0              vtable for QUICK_RANGE_SELECT_GEOM
00000000005c9b62 g     F .text	000000000000004c              Security_context::set_user(char*)
000000000108d280  w    O .data.rel.ro	0000000000000398              vtable for Item_func_last_insert_id
00000000008404ce g     F .text	0000000000000089              Begin_load_query_log_event::Begin_load_query_log_event(THD*, char const*, unsigned char*, unsigned int, bool)
000000000121af80 g     O .data	0000000000000101              ctype_cp852_bin
000000000082dd06  w    F .text	0000000000000041              TC_LOG_MMAP::~TC_LOG_MMAP()
0000000000808e50  w    F .text	000000000000000b              Item_avg_field::fix_length_and_dec()
00000000012653e0 g     O .data	0000000000000100              pl21
00000000008740f0  w    F .text	000000000000001b              List<QUICK_SELECT_I>::List()
00000000007be8a8  w    F .text	0000000000000026              Create_func_dayofyear::~Create_func_dayofyear()
000000000073869c  w    F .text	0000000000000040              Item_func_int_div::Item_func_int_div(Item*, Item*)
000000000076748a  w    F .text	000000000000000f              Field_set::zero_pack() const
00000000007bcf40  w    F .text	0000000000000035              Create_func::~Create_func()
000000000088ea94 g     F .text	0000000000000011              Gis_line_string::get_class_info() const
0000000000000000       F *UND*	0000000000000000              __cxa_atexit@@GLIBC_2.2.5
00000000005afbd0  w    F .text	00000000000000bc              Arg_comparator::Arg_comparator(Item**, Item**)
00000000005bad86 g     F .text	0000000000000262              Query_cache::is_cacheable(THD*, unsigned long, char const*, LEX*, TABLE_LIST*, unsigned char*)
00000000007b2840 g     F .text	000000000000011e              Create_func_atan::create_native(THD*, st_mysql_lex_string, List<Item>*)
0000000000000000       F *UND*	0000000000000000              inflateInit_
0000000000817b78  w    F .text	0000000000000046              Item_func_now_utc::~Item_func_now_utc()
00000000007c0c8c  w    F .text	000000000000002d              Create_func_md5::Create_func_md5()
0000000000ba39d4 g     F .text	000000000000003f              my_vsnprintf
0000000001086b20  w    O .data.rel.ro	0000000000000030              vtable for Create_func_to_days
0000000001096a10  w    O .data.rel.ro	0000000000000398              vtable for Item_func_log
000000000061bdfa  w    F .text	0000000000000060              Statement::Statement()
0000000000b73b8d g     F .text	0000000000000103              _lf_pinbox_put_pins
00000000005c4dce g     F .text	000000000000003d              select_result::select_result()
0000000000b674a6 g     F .text	00000000000003e4              ha_partition::write_row(unsigned char*)
000000000080a83e  w    F .text	000000000000002b              Item_sum_std::~Item_sum_std()
00000000006b9516 g     F .text	00000000000000d6              TABLE::mark_columns_used_by_index(unsigned int)
00000000013956c0 g     O .bss	0000000000000004              rg_key_mutex_MYRG_INFO_mutex
000000000087e650  w    F .text	000000000000001b              sp_name::~sp_name()
0000000000799bf8  w    F .text	000000000000002b              Item_hex_string::~Item_hex_string()
00000000005588a2  w    F .text	000000000000002d              base_list_iterator::next_fast()
000000000082d792  w    F .text	000000000000004a              binlog_cache_data::~binlog_cache_data()
0000000000767346  w    F .text	0000000000000046              Field_enum::~Field_enum()
00000000007ae680  w    F .text	000000000000002b              Item_func_not_all::~Item_func_not_all()
00000000007c10d4  w    F .text	0000000000000041              Create_func_oct::~Create_func_oct()
00000000007e1480  w    F .text	0000000000000058              Item_str_ascii_func::~Item_str_ascii_func()
00000000006b975c g     F .text	00000000000000ae              TABLE::mark_columns_used_by_index_no_reset(unsigned int, st_bitmap*)
00000000006587af  w    F .text	000000000000000f              Sql_alloc::operator delete[](void*, unsigned long)
000000000070bd26  w    F .text	0000000000000033              Sys_var_debug_sync::global_value_ptr(THD*, st_mysql_lex_string*)
00000000008d9e2c g     F .text	0000000000000220              _my_b_write
00000000005e9770  w    F .text	0000000000000026              I_List_iterator<Delayed_insert>::I_List_iterator(I_List<Delayed_insert>&)
00000000007c0486  w    F .text	0000000000000041              Create_func_like_range_min::~Create_func_like_range_min()
000000000061c935 g     F .text	0000000000000457              do_rename(THD*, TABLE_LIST*, char*, char*, char*, bool)
000000000070bd6e  w    F .text	0000000000000013              Sys_var_debug_sync::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000007f3758  w    F .text	000000000000002b              Item_func_old_password::~Item_func_old_password()
00000000005652fe  w    F .text	0000000000000031              Field::val_str(String*)
0000000000815388  w    F .text	0000000000000056              Item_func::get_arg0_time(st_mysql_time*)
00000000010d8ad0 g     O .data	0000000000000010              sym_group_rtree
00000000012169e0 g     O .data	0000000000000100              to_upper_cp1250_bin
00000000005ce2b4  w    F .text	0000000000000016              String::is_empty() const
00000000007c1746  w    F .text	0000000000000041              Create_func_release_lock::~Create_func_release_lock()
0000000000946ec8 g     F .text	000000000000011e              _mi_decrement_open_count
00000000010acfd8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_aes_decrypt
00000000007bc430  w    F .text	0000000000000038              Item_func_envelope::Item_func_envelope(Item*)
000000000073a464  w    F .text	0000000000000038              Item_func_hour::Item_func_hour(Item*)
0000000000599478  w    F .text	00000000000000da              hash_filo::search(unsigned char*, unsigned long)
00000000007e431e g     F .text	000000000000006a              Item_func_md5::fix_length_and_dec()
0000000000000000       F *UND*	0000000000000000              pthread_self@@GLIBC_2.2.5
00000000007b12f0  w    F .text	000000000000002b              Item_func_strcmp::~Item_func_strcmp()
0000000000773af8 g     F .text	0000000000000332              ha_recover(st_hash*)
00000000013867a0 g     O .bss	0000000000000008              Create_func_ucase::s_singleton
00000000007bc0ca  w    F .text	0000000000000052              Item_func_crc32::Item_func_crc32(Item*)
00000000007d04b4 g     F .text	00000000000000bd              Item_udf_func::print(String*, enum_query_type)
00000000010a7960  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_database
000000000065a5ce  w    F .text	0000000000000074              subselect_uniquesubquery_engine::subselect_uniquesubquery_engine(THD*, st_join_table*, Item_subselect*, Item*)
00000000005afbd0  w    F .text	00000000000000bc              Arg_comparator::Arg_comparator(Item**, Item**)
00000000007b2650 g     F .text	0000000000000058              Create_func_aes_encrypt::create(THD*, Item*, Item*)
000000000065a5ce  w    F .text	0000000000000074              subselect_uniquesubquery_engine::subselect_uniquesubquery_engine(THD*, st_join_table*, Item_subselect*, Item*)
000000000087d9f9 g     F .text	0000000000000077              sp_update_stmt_used_routines(THD*, Query_tables_list*, st_hash*, TABLE_LIST*)
000000000136cc98 g     O .bss	0000000000000004              thread_count
0000000000781194 g     F .text	00000000000000f1              Item_splocal::Item_splocal(st_mysql_lex_string const&, unsigned int, enum_field_types, unsigned int, unsigned int)
000000000059b404  w    F .text	000000000000001a              List<st_lex_user>::head()
00000000006a1b82 g     F .text	000000000000011d              multi_update::multi_update(TABLE_LIST*, TABLE_LIST*, List<Item>*, List<Item>*, enum_duplicates, bool)
00000000007ae1fe  w    F .text	000000000000000f              Eq_creator::l_op() const
00000000006f0814  w    F .text	0000000000000029              Delegate::observer_info_iter()
00000000007bc570  w    F .text	0000000000000038              Item_func_isclosed::Item_func_isclosed(Item*)
0000000000774a9c g     F .text	000000000000004d              Ha_delete_table_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
00000000006d1774 g     F .text	0000000000000134              partition_info::check_partition_field_length()
0000000000ba0cc9 g     F .text	0000000000000147              int10_to_str
000000000070b516  w    F .text	00000000000001f8              Sys_var_plugin::do_check(THD*, set_var*)
000000000088a012 g     F .text	0000000000000192              sp_pcontext::sp_pcontext()
00000000010c15d0  w    O .data.rel.ro	0000000000000080              vtable for Append_block_log_event
0000000000583bec g     F .text	000000000000031e              GRANT_NAME::GRANT_NAME(TABLE*, bool)
0000000000889ca4  w    F .text	0000000000000026              List_iterator<MYSQL_ERROR>::List_iterator(List<MYSQL_ERROR>&)
0000000001086188  w    O .data.rel.ro	0000000000000398              vtable for Item_func_not
00000000009819f2 g     F .text	0000000000000099              ha_heap::rnd_pos(unsigned char*, unsigned char*)
00000000005d43cc g     F .text	0000000000000b71              mysql_rm_db(THD*, char*, bool, bool)
00000000007da0fa  w    F .text	00000000000000b1              udf_handler::val_int(char*)
000000000089e318 g     F .text	00000000000000fe              multi_delete::~multi_delete()
000000000082260e g     F .text	000000000000011e              MYSQL_BIN_LOG::MYSQL_BIN_LOG(unsigned int*)
000000000074f972 g     F .text	0000000000000137              Field_long::store(char const*, unsigned int, charset_info_st*)
0000000000884a84 g     F .text	00000000000001a5              check_show_routine_access(THD*, sp_head*, bool*)
0000000000679554 g     F .text	00000000000000e8              String::copy_aligned(char const*, unsigned int, unsigned int, charset_info_st*)
0000000000813140 g     F .text	000000000000009c              Item_func_add_time::fix_length_and_dec()
0000000000765036  w    F .text	000000000000002b              Field_str::~Field_str()
0000000000764f92  w    F .text	000000000000001b              Field_str::set_derivation(Derivation)
0000000000678d84  w    F .text	000000000000002b              Item_return_date_time::~Item_return_date_time()
00000000007db60c  w    F .text	0000000000000030              Item_func_set_user_var::save_in_field(Field*, bool)
00000000005d02fa  w    F .text	000000000000001a              List_iterator<Key>::ref()
00000000008cd325 g     F .text	00000000000000b1              SHA384
000000000079930a  w    F .text	0000000000000015              Item_cache::used_tables() const
0000000001373e00 g     O .bss	0000000000000060              my_locale_ar_BH
0000000000843912 g     F .text	000000000000027e              Rows_log_event::write_data_body(st_io_cache*)
000000000061ba5c g     F .text	0000000000000032              Protocol_local::store(float, unsigned int, String*)
000000000136e3c8 g     O .bss	0000000000000008              opt_mysql_tmpdir
00000000007cc5ae g     F .text	00000000000000e6              Item_func_rand::val_real()
00000000007dae92  w    F .text	000000000000002c              Item_func_bit_neg::print(String*, enum_query_type)
0000000000b771dd g     F .text	0000000000000109              FixTraceFlags_helper
00000000007f2e48  w    F .text	0000000000000058              Item_func_hex::~Item_func_hex()
0000000001386648 g     O .bss	0000000000000008              Create_func_nullif::s_singleton
0000000000891c26 g     F .text	000000000000021c              Gis_multi_polygon::geometry_n(unsigned int, String*) const
0000000000796192  w    F .text	0000000000000080              Field_time::Field_time(bool, char const*, charset_info_st*)
00000000009128f4 g     F .text	0000000000000021              table_rwlock_instances::reset_position()
00000000005b294a g     F .text	00000000000000c0              Query_cache_block::init(unsigned long)
00000000007f3c52  w    F .text	000000000000006a              Item_func_replace::~Item_func_replace()
000000000065a6e8  w    F .text	0000000000000038              Item_subselect::is_uncacheable() const
0000000000000000       F *UND*	0000000000000000              setlocale@@GLIBC_2.2.5
00000000010eee38 g     O .data	0000000000000008              my_file_info
00000000005ed9f0 g     F .text	000000000000000b              st_select_lex_node::init_select()
000000000077f382 g     F .text	00000000000000e3              Item_ident::Item_ident(Name_resolution_context*, char const*, char const*, char const*)
000000000073c8c0  w    F .text	0000000000000038              Alter_table_check_partition_statement::Alter_table_check_partition_statement(LEX*)
0000000000607c66  w    F .text	000000000000002d              Lock_tables_prelocking_strategy::Lock_tables_prelocking_strategy()
0000000000831f66 g     F .text	0000000000000135              Log_event::net_send(Protocol*, char const*, unsigned long long)
00000000007ae244  w    F .text	000000000000000f              Ne_creator::l_op() const
0000000000b84407 g     F .text	000000000000003b              my_lengthsp_8bit
00000000008533c7 g     F .text	000000000000019d              date2my_decimal(st_mysql_time*, my_decimal*)
000000000080189c g     F .text	00000000000000c2              Item_sum_variance::Item_sum_variance(THD*, Item_sum_variance*)
000000000073ba20  w    F .text	000000000000005d              set_var_collation_client::set_var_collation_client(charset_info_st*, charset_info_st*, charset_info_st*)
0000000000756bb2 g     F .text	0000000000000247              Field_datetime::store_time(st_mysql_time*, enum_mysql_timestamp_type)
0000000000847cba g     F .text	0000000000000071              Update_rows_log_event::Update_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
00000000007fc3ae  w    F .text	000000000000002d              Item_exists_subselect::Item_exists_subselect()
000000000073c0a8  w    F .text	000000000000007b              sp_instr_freturn::sp_instr_freturn(unsigned int, sp_pcontext*, Item*, enum_field_types, LEX*)
00000000007de880 g     F .text	000000000000000f              Item_func_envelope::get_geometry_type() const
00000000007fe01a g     F .text	000000000000012f              Item_sum::set_aggregator(Aggregator::Aggregator_type)
00000000005f0b1a  w    F .text	0000000000000056              Index_hint::Index_hint(index_hint_type, unsigned char, char*, unsigned int)
00000000005986c8  w    F .text	00000000000000fe              handler::ha_index_init(unsigned int, bool)
00000000007b698e g     F .text	000000000000005d              Create_func_touches::create(THD*, Item*, Item*)
00000000006538c4 g     F .text	0000000000000184              JOIN::rollup_send_data(unsigned int)
000000000079f03e g     F .text	00000000000001a0              Arg_comparator::compare_datetime()
000000000080da60 g     F .text	00000000000000ac              Item_func_to_seconds::get_monotonicity_info() const
0000000001386478 g     O .bss	0000000000000008              Create_func_elt::s_singleton
000000000070eb6e  w    F .text	0000000000000026              Sys_var_keycache::~Sys_var_keycache()
00000000007f2612  w    F .text	000000000000004e              Item_func_charset::fix_length_and_dec()
00000000010c4758  w    O .data.rel.ro	0000000000000078              vtable for multi_delete
0000000000763f45  w    F .text	0000000000000040              binary2my_decimal(unsigned int, unsigned char const*, my_decimal*, int, int)
00000000007bd4e2  w    F .text	000000000000002d              Create_func_acos::Create_func_acos()
000000000065ca12  w    F .text	000000000000002b              store_key_const_item::~store_key_const_item()
00000000010c9b30  w    O .data.rel.ro	0000000000000028              vtable for Alter_table_statement
000000000136cc02 g     O .bss	0000000000000001              opt_slave_compressed_protocol
00000000007ad8a6 g     F .text	0000000000000142              Item_equal::transform(Item* (Item::*)(unsigned char*), unsigned char*)
000000000077b2fe  w    F .text	0000000000000012              Discrete_interval::maximum() const
0000000000815cdc  w    F .text	0000000000000026              Item_func_week::fix_length_and_dec()
000000000090c0fc  w    F .text	0000000000000026              PFS_truncatable_acl::~PFS_truncatable_acl()
00000000007c2556  w    F .text	0000000000000041              Create_func_timediff::~Create_func_timediff()
0000000000737dee  w    F .text	000000000000003e              Item_sum_std::Item_sum_std(Item*, unsigned int)
0000000000b63fda g     F .text	0000000000000147              ha_partition::find_partition_element(unsigned int)
00000000010c1920  w    O .data.rel.ro	0000000000000078              vtable for Intvar_log_event
0000000000b5f49e g     F .text	00000000000000ff              ha_partition::ha_partition(handlerton*, partition_info*)
0000000000796112  w    F .text	0000000000000080              Field_newdate::Field_newdate(bool, char const*, charset_info_st*)
0000000000808b52  w    F .text	0000000000000040              Item_sum_int::Item_sum_int(THD*, Item_sum_int*)
000000000076730e  w    F .text	0000000000000015              Field_enum::optimize_range(unsigned int, unsigned int)
0000000000808a2e  w    F .text	0000000000000055              Item_sum_num::Item_sum_num(THD*, Item_sum_num*)
00000000010ca250  w    O .data.rel.ro	0000000000000048              vtable for table_events_waits_current
00000000008045cc g     F .text	000000000000019b              Item_sum_hybrid::min_max_update_str_field()
00000000007dcdb4  w    F .text	0000000000000046              Item_func_coercibility::~Item_func_coercibility()
0000000000871d7c  w    F .text	0000000000000063              QUICK_RANGE::make_max_endpoint(st_key_range*, unsigned int, unsigned long)
00000000007c84e0 g     F .text	0000000000000169              Item_func_mul::result_precision()
0000000001373720 g     O .bss	0000000000000230              global_ddl_log
000000000136cce8 g     O .bss	0000000000000008              slave_open_temp_tables
0000000000659b08  w    F .text	000000000000002b              Item_int_func::~Item_int_func()
00000000007441a6 g     F .text	0000000000000134              mysql_select_db
0000000000598e8c  w    F .text	0000000000000035              Internal_error_handler::~Internal_error_handler()
00000000010cd8d8 g     O .data	0000000000000008              thread_id
0000000000840c64 g     F .text	00000000000002a5              Execute_load_query_log_event::do_apply_event(Relay_log_info const*)
00000000007bade0  w    F .text	0000000000000040              Item_func_udf_decimal::Item_func_udf_decimal(st_udf_func*, List<Item>&)
00000000007af858  w    F .text	000000000000003d              cmp_item_decimal::cmp_item_decimal()
0000000000765c42  w    F .text	000000000000000f              Field_float::type() const
00000000010c1190  w    O .data.rel.ro	0000000000000098              vtable for Delete_rows_log_event
000000000095ced2 g     F .text	0000000000000265              _mi_search_last
000000000079a0d2  w    F .text	000000000000002b              Item_type_holder::~Item_type_holder()
000000000073af6c  w    F .text	0000000000000038              Item_func_microsecond::Item_func_microsecond(Item*)
000000000069633f g     F .text	0000000000000228              add_table_for_trigger(THD*, sp_name const*, bool, TABLE_LIST**)
00000000007f350c  w    F .text	000000000000002b              Item_func_soundex::~Item_func_soundex()
00000000007c051c  w    F .text	0000000000000041              Create_func_like_range_max::~Create_func_like_range_max()
00000000005ce0ba  w    F .text	000000000000004f              Discrete_intervals_list::empty()
00000000006596a6  w    F .text	0000000000000053              Item_int::Item_int(int, unsigned int)
00000000008daef4 g     F .text	000000000000005a              my_b_safe_tell
00000000007af656  w    F .text	0000000000000042              cmp_item_int::cmp(Item*)
00000000013763e0 g     O .bss	0000000000000060              my_locale_fr_CA
00000000006fde7f g     F .text	00000000000000d1              expand_sql_mode(unsigned long long)
0000000001374ac0 g     O .bss	0000000000000060              my_locale_nb_NO
00000000008f92d9 g     F .text	00000000000007cd              rijndaelKeySetupEnc
0000000000566e94  w    F .text	0000000000000013              Item::check_partition_func_processor(unsigned char*)
0000000000765ea8  w    F .text	0000000000000013              Field_null::val_decimal(my_decimal*)
00000000005604c9 g     F .text	000000000000008d              octet2hex
00000000007967aa  w    F .text	0000000000000047              Hybrid_type_traits_integer::val_decimal(Hybrid_type*, my_decimal*) const
000000000065c682  w    F .text	000000000000001b              List_iterator<Item_equal>::remove()
000000000058f540 g     F .text	0000000000000415              mysql_drop_user(THD*, List<st_lex_user>&)
0000000000805e2a g     F .text	0000000000000025              Item_sum_udf_int::val_str(String*)
00000000007c13c2  w    F .text	0000000000000041              Create_func_pi::~Create_func_pi()
00000000008cde16 g     F .text	00000000000000d6              set_dynamic
00000000007ded1a g     F .text	00000000000002b2              Item_func_spatial_decomp::val_str(String*)
00000000007526c0 g     F .text	00000000000000d7              Field_timestamp::Field_timestamp(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, TABLE_SHARE*, charset_info_st*)
000000000061c00c  w    F .text	000000000000001c              Prepared_statement::is_in_use()
000000000075bb16 g     F .text	0000000000000136              Field_blob::val_decimal(my_decimal*)
0000000000b620ee g     F .text	0000000000000239              ha_partition::prepare_new_partition(TABLE*, st_ha_create_information*, handler*, char const*, partition_element*, unsigned int)
00000000007b9900  w    F .text	0000000000000061              Item_udf_sum::Item_udf_sum(st_udf_func*, List<Item>&)
0000000000796e3e  w    F .text	0000000000000038              Item_ident_for_show::val_decimal(my_decimal*)
00000000010878d0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_inet_ntoa
0000000001087900  w    O .data.rel.ro	0000000000000030              vtable for Create_func_ifnull
0000000000000000       F *UND*	0000000000000000              pow@@GLIBC_2.2.5
0000000000899f4e  w    F .text	0000000000000052              field_real::get_max_arg(String*)
000000000097f1b9 g     F .text	00000000000000de              _mi_ft_segiterator_init
00000000010eeb60 g     O .data	0000000000000008              my_thread_stack_size
0000000000799cf4  w    F .text	000000000000001b              List_iterator<Item>::List_iterator()
0000000000856522 g     F .text	0000000000000115              SEL_IMERGE::or_sel_tree(RANGE_OPT_PARAM*, SEL_TREE*)
00000000012ca260 g     O .data	00000000000000b0              my_charset_utf8mb4_slovenian_uca_ci
00000000010c0ec0  w    O .data.rel.ro	0000000000000040              vtable for MYSQL_BIN_LOG
000000000057af24 g     F .text	0000000000000034              sp_cache_init()
00000000008cb31a  w    F .text	0000000000000046              Alter_table_check_partition_statement::~Alter_table_check_partition_statement()
0000000000794bd0 g     F .text	0000000000000146              Item_type_holder::Item_type_holder(THD*, Item*)
00000000007c0978  w    F .text	0000000000000026              Create_func_lpad::~Create_func_lpad()
00000000010876c0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_last_day
00000000008ebebb g     F .text	00000000000002d6              unpackfrm
00000000007680fa  w    F .text	0000000000000046              Field_year::~Field_year()
0000000000b775ec g     F .text	00000000000000a8              _db_pop_
000000000121c820 g     O .data	0000000000000100              sort_order_latin1_spanish_ci
0000000000669c12 g     F .text	0000000000000999              store_column_type(TABLE*, Field*, charset_info_st*, unsigned int)
0000000000907f99 g     F .text	0000000000000041              destroy_table(PFS_table*)
0000000000b711c2  w    F .text	0000000000000038              ha_partition::register_query_cache_table(THD*, char*, unsigned int, char (**)(THD*, char*, unsigned int, unsigned long long*), unsigned long long*)
00000000005f15c0  w    F .text	000000000000001b              Mem_root_array<st_order*, true>::~Mem_root_array()
0000000001069178  w    O .data.rel.ro	0000000000000038              vtable for set_var
0000000000803286 g     F .text	00000000000001cb              Item_sum_sum::reset_field()
00000000006f2446 g     F .text	00000000000000a8              MDL_lock::Ticket_list::clear_bit_if_not_in_list(enum_mdl_type)
0000000000809154  w    F .text	0000000000000034              Item_variance_field::is_null()
0000000000b6ec5a g     F .text	0000000000000071              ha_partition::check_if_incompatible_data(st_ha_create_information*, unsigned int)
000000000073b4ee  w    F .text	0000000000000038              select_export::select_export(sql_exchange*)
00000000007ba6fe  w    F .text	000000000000003d              Item_func_max::Item_func_max(List<Item>&)
0000000000888e0c  w    F .text	0000000000000012              Lex_input_stream::get_cpp_buf()
0000000000677e1a  w    F .text	0000000000000032              String::set(long long, charset_info_st*)
000000000055991c  w    F .text	0000000000000026              I_List<i_string>::move_elements_to(I_List<i_string>*)
00000000007c22d0  w    F .text	000000000000002d              Create_func_subtime::Create_func_subtime()
000000000073b994  w    F .text	000000000000003d              set_var_user::set_var_user(Item_func_set_user_var*)
0000000000764ea8  w    F .text	000000000000005a              Field_num::pack_length_from_metadata(unsigned int)
000000000065c95a  w    F .text	0000000000000046              COND_CMP::~COND_CMP()
0000000000618642 g     F .text	0000000000000026              Server_runnable::~Server_runnable()
0000000001394cdc g     O .bss	0000000000000004              key_THR_LOCK_malloc
00000000010c3c18  w    O .data.rel.ro	0000000000000030              vtable for sp_head
00000000006f083e  w    F .text	0000000000000037              Delegate::read_lock()
000000000056585c  w    F .text	0000000000000026              Protocol_binary::~Protocol_binary()
00000000007af896  w    F .text	0000000000000048              cmp_item_sort_string_in_static::cmp_item_sort_string_in_static(charset_info_st*)
0000000000b82c64 g     F .text	0000000000000058              my_casedn_str_8bit
000000000090f5de g     F .text	0000000000000010              table_ews_global_by_event_name::delete_all_rows()
000000000090e2ca  w    F .text	0000000000000041              table_events_waits_history::~table_events_waits_history()
00000000007ec28c g     F .text	000000000000010d              Item_func_format::print(String*, enum_query_type)
0000000000797228  w    F .text	000000000000006a              Item_uint::val_real()
000000000080863a  w    F .text	000000000000003d              Aggregator::Aggregator(Item_sum*)
00000000008091ba  w    F .text	0000000000000014              Item_variance_field::result_type() const
0000000001092550  w    O .data.rel.ro	00000000000003c0              vtable for Item_func_floor
00000000005bf482  w    F .text	000000000000001b              Query_cache_table::engine_data(unsigned long long)
00000000007addfc  w    F .text	0000000000000050              Item_int_func::Item_int_func(THD*, Item_int_func*)
00000000007be60e  w    F .text	0000000000000041              Create_func_datediff::~Create_func_datediff()
00000000007b127e  w    F .text	000000000000002b              Item_func_interval::~Item_func_interval()
0000000000663dff g     F .text	000000000000013f              get_status_var(THD*, st_mysql_show_var*, char const*, char*)
000000000136ce10 g     O .bss	0000000000000008              prepared_stmt_count
000000000082d4e0  w    F .text	0000000000000046              User_var_log_event::~User_var_log_event()
0000000000985bd7 g     F .text	0000000000000102              heap_info
00000000005e9652  w    F .text	000000000000001b              I_List<Delayed_insert>::I_List()
00000000007e6392 g     F .text	00000000000009f5              Item_func_concat_ws::val_str(String*)
00000000007dcc88  w    F .text	000000000000006a              Item_func_field::~Item_func_field()
0000000000592d21 g     F .text	000000000000046d              fill_schema_column_privileges(THD*, TABLE_LIST*, Item*)
00000000006ee54a g     F .text	00000000000002fa              Binlog_storage_delegate::after_flush(THD*, char const*, unsigned long long, bool)
000000000090723e g     F .text	0000000000000244              create_thread(PFS_thread_class*, void const*, unsigned long)
00000000007f1f90  w    F .text	0000000000000046              Item_func_user::~Item_func_user()
0000000000b5b8c4 g     F .text	0000000000000028              ha_tina::update_status()
00000000006946e4 g     F .text	0000000000000075              Table_triggers_list::set_table(TABLE*)
00000000005d08b8  w    F .text	000000000000001b              List_iterator<Alter_drop>::List_iterator()
0000000000873e74  w    F .text	0000000000000026              List_iterator<QUICK_RANGE>::after(QUICK_RANGE*)
00000000007ba18a  w    F .text	0000000000000040              Item_func_pow::Item_func_pow(Item*, Item*)
0000000000765f92  w    F .text	000000000000000f              Field_timestamp::repertoire() const
00000000005694d8 g     F .text	00000000000000f6              sys_var_add_options(st_dynamic_array*, int)
000000000082dc6c  w    F .text	000000000000001f              binlog_cache_mngr::reset_cache(binlog_cache_data*)
00000000008853ec g     F .text	00000000000000d4              sp_head::opt_mark()
000000000056767a  w    F .text	000000000000000f              Item_string::field_type() const
00000000006f56c6  w    F .text	0000000000000038              MDL_object_lock::MDL_object_lock(MDL_key const*)
00000000005cf662  w    F .text	0000000000000016              Open_tables_state::Open_tables_state()
00000000006988a6  w    F .text	0000000000000026              Handle_old_incorrect_trigger_table_hook::~Handle_old_incorrect_trigger_table_hook()
0000000001087b10  w    O .data.rel.ro	0000000000000030              vtable for Create_func_found_rows
0000000000766800  w    F .text	0000000000000011              Field_datetime::charset() const
0000000000809062  w    F .text	000000000000000b              Item_sum_avg::no_rows_in_result()
00000000008cdc9d g     F .text	000000000000012f              alloc_dynamic
00000000006e6e67 g     F .text	000000000000001b              free_user
0000000001077b38  w    O .data.rel.ro	0000000000000360              vtable for Item_float
0000000000815c26  w    F .text	0000000000000013              Item_func_quarter::check_partition_func_processor(unsigned char*)
000000000081d15a g     F .text	0000000000000089              Log_to_file_event_handler::init()
00000000007d8bba g     F .text	00000000000001a0              Item_func_sp::func_name() const
0000000000709006  w    F .text	000000000000003b              Sys_var_mybool::session_update(THD*, set_var*)
00000000005aee5e  w    F .text	0000000000000015              MDL_key::mdl_namespace() const
00000000008c39f8 g     F .text	00000000000000ba              post_init_event_thread(THD*)
0000000000606fa4  w    F .text	0000000000000037              COND_EQUAL::COND_EQUAL()
0000000000765348  w    F .text	000000000000000f              Field_new_decimal::result_type() const
0000000000000000       F *UND*	0000000000000000              clock_gettime@@GLIBC_2.17
00000000007dadfa  w    F .text	0000000000000016              Item_func_ascii::fix_length_and_dec()
000000000098b590 g     F .text	0000000000000594              myisammrg_parent_open_callback
000000000080a3f6  w    F .text	0000000000000046              Item_sum_udf_decimal::~Item_sum_udf_decimal()
0000000000765b38  w    F .text	000000000000000f              Field_longlong::max_display_length()
00000000008688f5 g     F .text	0000000000000465              get_quick_select_for_ref(THD*, TABLE*, st_table_ref*, unsigned long long)
00000000008d3a64 g     F .text	0000000000000051              my_hash_search
000000000079f5a8 g     F .text	0000000000000115              Arg_comparator::compare_real()
00000000008c2722  w    F .text	0000000000000058              Item_xpath_cast_bool::~Item_xpath_cast_bool()
000000000136cd48 g     O .bss	0000000000000008              binlog_stmt_cache_size
000000000073a5ea  w    F .text	000000000000002d              Item_date_func::Item_date_func()
00000000007c23d6  w    F .text	0000000000000026              Create_func_tan::~Create_func_tan()
000000000088b4ca g     F .text	0000000000000126              sp_rcontext::init_var_table(THD*)
00000000005ed8db g     F .text	00000000000000c8              trim_whitespace(charset_info_st*, st_mysql_lex_string*)
00000000010823c8  w    O .data.rel.ro	00000000000003c0              vtable for Item_func_ifnull
0000000000772275 g     F .text	0000000000000031              ha_drop_database(char*)
000000000087e9a8  w    F .text	0000000000000026              Lock_db_routines_error_handler::~Lock_db_routines_error_handler()
0000000000564f42  w    F .text	0000000000000097              String::append(char)
000000000082d552  w    F .text	000000000000002d              Stop_log_event::Stop_log_event()
00000000007f6a50 g     F .text	000000000000002b              Item_in_subselect::val_int()
0000000000659bce  w    F .text	0000000000000035              Item_func_rollup_const::val_int()
000000000077aa1e g     F .text	000000000000019c              handler::ha_reset()
000000000075c694 g     F .text	00000000000000d9              Field_blob::pack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000007f3bce  w    F .text	0000000000000058              Item_func_insert::~Item_func_insert()
000000000083e396 g     F .text	0000000000000191              Slave_log_event::init_from_mem_pool(int)
000000000083cfba g     F .text	0000000000000353              User_var_log_event::User_var_log_event(char const*, unsigned int, Format_description_log_event const*)
0000000000817bea  w    F .text	0000000000000046              Item_func_now_local::~Item_func_now_local()
0000000000885e36 g     F .text	0000000000000033              sp_instr::exec_core(THD*, unsigned int*)
0000000000799a0a  w    F .text	000000000000000f              Item_type_holder::type() const
0000000000889c38  w    F .text	0000000000000037              Dynamic_array<Item_splocal*>::sort(int (*)(Item_splocal* const*, Item_splocal* const*))
00000000007903d4 g     F .text	0000000000000087              Item_ref::val_int()
0000000000c9b2a8 g     O .rodata	0000000000000004              Field_varstring::MAX_SIZE
00000000005c0af8 g     F .text	0000000000000025              thd_is_transaction_active(THD*)
00000000007c18da  w    F .text	000000000000002d              Create_func_row_count::Create_func_row_count()
00000000007fc694  w    F .text	000000000000000f              subselect_uniquesubquery_engine::cols()
00000000007653c6  w    F .text	000000000000007a              Field_tiny::Field_tiny(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, bool, bool)
00000000007c1a06  w    F .text	000000000000002d              Create_func_rtrim::Create_func_rtrim()
0000000000000000       F *UND*	0000000000000000              chmod@@GLIBC_2.2.5
00000000010ade38  w    O .data.rel.ro	0000000000000398              vtable for Item_func_md5
00000000009043d1 g     F .text	00000000000000e2              my_filename
0000000001373d30 g     O .bss	0000000000000008              Events::scheduler
0000000000768626  w    F .text	000000000000002b              Field_null::~Field_null()
00000000007f2730  w    F .text	000000000000003b              Item_func_compress::fix_length_and_dec()
0000000000558946  w    F .text	0000000000000064              ilink::unlink()
000000000076b49e g     F .text	0000000000000e40              filesort(THD*, TABLE*, st_sort_field*, unsigned int, SQL_SELECT*, unsigned long long, bool, unsigned long long*)
00000000010d2628 g     O .data	0000000000000008              view_ref_found
000000000136e3e0 g     O .bss	0000000000000048              decimal_zero
00000000007684fc  w    F .text	0000000000000046              Field_new_decimal::~Field_new_decimal()
0000000000815f60  w    F .text	0000000000000046              Item_func_weekday::~Item_func_weekday()
00000000007af402  w    F .text	0000000000000059              cmp_item_sort_string::cmp_item_sort_string(charset_info_st*)
0000000000855ab2 g     F .text	0000000000000041              my_date_to_str
0000000000873b92  w    F .text	000000000000002e              List<QUICK_RANGE>::List(List<QUICK_RANGE> const&, st_mem_root*)
00000000010cd998 g     O .data	0000000000000008              delayed_user
000000000082c596 g     F .text	0000000000000161              MYSQL_BIN_LOG::unlog(unsigned long, unsigned long long)
000000000070dbb0  w    F .text	0000000000000223              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
0000000001386668 g     O .bss	0000000000000008              Create_func_oct::s_singleton
000000000073c888  w    F .text	0000000000000038              Alter_table_analyze_partition_statement::Alter_table_analyze_partition_statement(LEX*)
00000000008ca3ce g     F .text	000000000000030b              Event_db_repository::update_timing_fields_for_event(THD*, st_mysql_lex_string, st_mysql_lex_string, long, unsigned long long)
000000000098021f g     F .text	00000000000003ba              _mi_ft_convert_to_ft2
000000000083b3ba g     F .text	0000000000000170              Rotate_log_event::Rotate_log_event(char const*, unsigned int, unsigned long long, unsigned int)
00000000007d542a g     F .text	000000000000002b              Item_user_var_as_out_param::val_int()
000000000065bf00  w    F .text	000000000000001a              I_List<COND_CMP>::is_empty()
000000000088bf56 g     F .text	00000000000000f8              sp_rcontext::push_hstack(unsigned int)
000000000081852a  w    F .text	000000000000002b              Item_func_to_seconds::~Item_func_to_seconds()
00000000007484d6 g     F .text	000000000000005c              Field::result_merge_type(enum_field_types)
000000000098d51a g     F .text	0000000000000183              ha_myisammrg::write_row(unsigned char*)
00000000007da4ce  w    F .text	000000000000002c              Item_num_op::print(String*, enum_query_type)
0000000000851fc0 g     F .text	00000000000001bd              Update_rows_log_event_old::do_exec_row(Relay_log_info const*)
0000000001215560 g     O .data	0000000000000200              to_uni_cp1257_bin
00000000005aee0a  w    F .text	000000000000001a              I_P_List_counter::inc()
0000000000598236  w    F .text	000000000000005d              base_list::prepand(base_list*)
0000000000598a4a  w    F .text	000000000000001d              Table_check_intact::Table_check_intact()
00000000006bf476 g     F .text	000000000000007f              Time_zone_system::gmt_sec_to_TIME(st_mysql_time*, long) const
00000000007f2803  w    F .text	00000000000000e1              alloc_buffer(String*, String*, String*, unsigned long)
000000000059dedc g     F .text	00000000000002f0              close_cached_connection_tables(THD*, st_mysql_lex_string*)
000000000136cba4 g     O .bss	0000000000000001              ready_to_exit
000000000088dfa4 g     F .text	0000000000000011              Gis_point::get_class_info() const
0000000000626ce0  w    F .text	0000000000000046              Begin_load_query_log_event::~Begin_load_query_log_event()
00000000007bdf6e  w    F .text	000000000000002d              Create_func_concat::Create_func_concat()
00000000007ed670 g     F .text	000000000000044d              Item_func_rpad::val_str(String*)
00000000007f3ba2  w    F .text	000000000000002b              Item_func_lcase::~Item_func_lcase()
000000000077bd18  w    F .text	000000000000000f              handler::can_switch_engines()
0000000000678726  w    F .text	000000000000001b              List_iterator_fast<char>::List_iterator_fast()
00000000008181c6  w    F .text	0000000000000046              Item_func_minute::~Item_func_minute()
000000000076776a  w    F .text	0000000000000039              Field_bit::key_cmp(unsigned char const*, unsigned char const*)
00000000008c8ca8 g     F .text	0000000000000190              Event_db_repository::open_event_table(THD*, thr_lock_type, TABLE**)
00000000006c1b0c  w    F .text	000000000000002d              Time_zone::Time_zone()
00000000007c9b22 g     F .text	00000000000000d9              Item_func_neg::decimal_op(my_decimal*)
000000000070a9b0  w    F .text	0000000000000323              Sys_var_flagset::do_check(THD*, set_var*)
000000000055929e  w    F .text	000000000000002d              Gt_creator::Gt_creator()
0000000000737b1c  w    F .text	0000000000000043              Item_sum_num::Item_sum_num(Item*)
000000000089995c  w    F .text	000000000000000b              Procedure::update_refs()
000000000095bf89 g     F .text	00000000000001c3              _mi_get_key
00000000005ef652 g     F .text	00000000000000d5              LEX::copy_db_to(char**, unsigned long*) const
0000000000b90113 g     F .text	0000000000000185              my_strnxfrm_unicode
0000000001086ac0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_touches
0000000000749aa6 g     F .text	00000000000000ec              Field_str::store_decimal(my_decimal const*)
00000000007f2364  w    F .text	00000000000000a6              Item_func_binary::val_str(String*)
0000000000808678  w    F .text	0000000000000046              Aggregator::~Aggregator()
000000000055ff25 g     F .text	0000000000000073              my_make_scrambled_password_323
0000000000708ede  w    F .text	0000000000000127              Sys_var_mybool::Sys_var_mybool(char const*, char const*, int, long, unsigned long, CMD_LINE, char, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000006e069e g     F .text	0000000000000be1              init_master_info(Master_info*, char const*, char const*, bool, int)
00000000007bab9e  w    F .text	0000000000000040              Item_func_benchmark::Item_func_benchmark(Item*, Item*)
0000000000563858 g     F .text	00000000000000da              Protocol_text::store(double, unsigned int, String*)
0000000000b99846 g     F .text	0000000000000063              decimal_sub
00000000006ead56  w    F .text	00000000000000c8              Queue<PROF_MEASUREMENT>::pop()
00000000007e1d20  w    F .text	0000000000000058              Item_func_glength::~Item_func_glength()
0000000000790f56 g     F .text	00000000000000d5              Item_direct_view_ref::eq(Item const*, bool) const
000000000136ce38 g     O .bss	0000000000000008              expire_logs_days
000000000090563a  w    F .text	0000000000000099              ha_statistics::ha_statistics()
0000000000566b22  w    F .text	000000000000000b              Item::top_level_item()
0000000000799e62  w    F .text	000000000000002c              List_iterator_fast<Item_field>::sublist(List<Item_field>&, unsigned int)
0000000000b5e346 g     F .text	0000000000000012              Transparent_file::end()
000000000070cd3e  w    F .text	000000000000002e              Sys_var_tz::session_save_default(THD*, set_var*)
0000000000566bc8  w    F .text	000000000000000e              Item::real_item()
00000000007ba0a2  w    F .text	0000000000000040              Item_func_log::Item_func_log(Item*, Item*)
00000000007644f8  w    F .text	000000000000000f              Field::zero_pack() const
000000000077b3ba  w    F .text	0000000000000063              xid_t::set(long, long, char const*)
00000000007090bc  w    F .text	0000000000000026              Sys_var_mybool::global_save_default(THD*, set_var*)
000000000136e4c0 g     O .bss	0000000000000238              global_system_variables
00000000007ae85a  w    F .text	0000000000000040              Item_func_gt::Item_func_gt(Item*, Item*)
0000000000610496 g     F .text	00000000000001ad              sys_var_pluginvar::session_update(THD*, set_var*)
00000000006e6eed g     F .text	0000000000000253              reset_mqh(st_lex_user*, bool)
000000000065c38c  w    F .text	0000000000000026              List_iterator_fast<Item_field>::List_iterator_fast(List<Item_field>&)
0000000001394120 g     O .bss	0000000000000200              mysql_server_last_error
00000000007a979e g     F .text	00000000000001bb              Item_cond::compile(bool (Item::*)(unsigned char**), unsigned char**, Item* (Item::*)(unsigned char*), unsigned char*)
00000000010efe38 g     O .data	0000000000000001              flag_file_summary_by_event_name
00000000008d7b8b g     F .text	0000000000000595              init_io_cache
00000000005f15dc  w    F .text	0000000000000056              Mem_root_array<st_order*, true>::at(unsigned long)
000000000136cbf8 g     O .bss	0000000000000001              locked_in_memory
000000000081d216 g     F .text	000000000000004d              Log_to_file_event_handler::flush()
00000000007b9b02  w    F .text	0000000000000040              Item_sum_udf_decimal::Item_sum_udf_decimal(st_udf_func*, List<Item>&)
0000000000903917 g     F .text	0000000000000847              init_compiled_charsets
00000000008c2db6 g     F .text	000000000000006f              table_mapping::remove_table(unsigned long)
000000000088b044  w    F .text	000000000000001b              List<sp_label>::List()
0000000000738074  w    F .text	00000000000000fb              Item_func::Item_func(Item*, Item*, Item*)
00000000005e9530  w    F .text	0000000000000013              List_iterator_fast<List<Item> >::replace(List<Item>*)
00000000008a9270  w    F .text	000000000000001b              List<XML_TAG>::List()
00000000007ba910  w    F .text	0000000000000038              Item_func_coercibility::Item_func_coercibility(Item*)
000000000075130c g     F .text	00000000000000af              Field_float::val_real()
0000000000000000       F *UND*	0000000000000000              time@@GLIBC_2.2.5
000000000090d5c4 g     F .text	0000000000000134              table_events_waits_current::rnd_pos(void const*)
000000000090ae3c g     F .text	000000000000009a              PFS_engine_table::update_row(TABLE*, unsigned char const*, unsigned char*, Field**)
00000000007b00dc  w    F .text	0000000000000052              Item_cond_and::Item_cond_and(THD*, Item_cond_and*)
00000000006eae1e  w    F .text	0000000000000032              Queue<QUERY_PROFILE>::Queue()
00000000010acc40  w    O .data.rel.ro	0000000000000398              vtable for Item_func_concat
00000000007c26ea  w    F .text	000000000000002d              Create_func_touches::Create_func_touches()
0000000000748f96 g     F .text	00000000000000a4              Field::copy_from_tmp(int)
00000000007af2aa  w    F .text	0000000000000046              cmp_item::~cmp_item()
00000000007658b2  w    F .text	000000000000000f              Field_long::type() const
0000000000765596  w    F .text	000000000000000f              Field_short::result_type() const
0000000000781462 g     F .text	0000000000000046              Item_splocal::set_value(THD*, sp_rcontext*, Item**)
00000000007be578  w    F .text	0000000000000041              Create_func_date_format::~Create_func_date_format()
00000000007f271a  w    F .text	0000000000000016              Item_func_uncompressed_length::fix_length_and_dec()
0000000000000000       F *UND*	0000000000000000              getsockname@@GLIBC_2.2.5
00000000007a65c6 g     F .text	0000000000000096              in_string::~in_string()
00000000007ae838  w    F .text	000000000000000f              Item_func_ge::eq_cmp_result() const
0000000000837b44 g     F .text	0000000000000131              Start_log_event_v3::write(st_io_cache*)
0000000000798abe  w    F .text	0000000000000038              Item_copy_string::Item_copy_string(Item*)
000000000079a066  w    F .text	0000000000000025              List<Item_outer_ref>::push_back(Item_outer_ref*)
00000000005b027a  w    F .text	0000000000000064              THD::enter_locked_tables_mode(enum_locked_tables_mode)
00000000006080a2  w    F .text	0000000000000025              List<TABLE_LIST>::push_back(TABLE_LIST*)
0000000000841ca0 g     F .text	000000000000008d              Rows_log_event::~Rows_log_event()
00000000007dd792  w    F .text	0000000000000046              Item_func_log2::~Item_func_log2()
0000000000805200 g     F .text	0000000000000038              Item_std_field::Item_std_field(Item_sum_std*)
000000000070d1f4  w    F .text	0000000000000211              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned int, unsigned int, unsigned int, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
000000000138cdd0 g     O .bss	0000000000000008              thread_class_max
000000000082cff4  w    F .text	0000000000000046              Start_log_event_v3::~Start_log_event_v3()
0000000000ccfae0 g     O .rodata	0000000000000100              _my_bits_reverse_table
0000000000899ccc  w    F .text	0000000000000011              field_str::collect_enum()
00000000006e88a4 g     F .text	0000000000000022              thd_scheduler::thd_scheduler()
00000000006ba998  w    F .text	000000000000001d              MDL_wait_for_subgraph::MDL_wait_for_subgraph()
0000000000765062  w    F .text	0000000000000077              Field_longstr::is_updatable() const
000000000061ac62 g     F .text	00000000000000c0              Ed_result_set::Ed_result_set(List<Ed_row>*, unsigned long, st_mem_root*)
00000000005c92da g     F .text	0000000000000335              select_dumpvar::send_data(List<Item>&)
00000000007fa502 g     F .text	000000000000002f              subselect_uniquesubquery_engine::fix_length_and_dec(Item_cache**)
0000000001095818  w    O .data.rel.ro	0000000000000398              vtable for Item_func_pow
00000000012cae60 g     O .data	0000000000000058              my_collation_utf32_uca_handler
000000000076787a  w    F .text	0000000000000017              Field_bit::pack_length() const
000000000073abe8  w    F .text	0000000000000038              Item_func_sysdate_local::Item_func_sysdate_local(Item*)
00000000007cb13e g     F .text	000000000000021d              Item_func_int_val::find_num_type()
00000000008324b0 g     F .text	00000000000002e1              Log_event::read_log_event(st_io_cache*, String*, st_mysql_mutex*, char const*, bool*)
00000000006f1cea g     F .text	00000000000001f0              MDL_map::remove(MDL_lock*)
000000000081786a  w    F .text	000000000000002b              Item_extract::~Item_extract()
0000000000808cac  w    F .text	0000000000000046              Item_sum_int::~Item_sum_int()
000000000089976a  w    F .text	000000000000003d              Item_proc::Item_proc(char const*)
000000000089ac26  w    F .text	0000000000000046              field_ulonglong::~field_ulonglong()
00000000007c22fe  w    F .text	0000000000000041              Create_func_subtime::~Create_func_subtime()
000000000073a056  w    F .text	0000000000000052              Item_func_char::Item_func_char(List<Item>&)
00000000010d2040 g     O .data	0000000000000040              rpl_status_type
00000000010bd1a8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_year
00000000008896e2  w    F .text	000000000000002b              sp_instr_cpush::~sp_instr_cpush()
0000000000853971 g     F .text	00000000000000ee              check_date
00000000006a0f89 g     F .text	0000000000000939              mysql_multi_update_prepare(THD*)
0000000000785b50 g     F .text	00000000000000fd              Item_param::Item_param(unsigned int)
0000000000621d24 g     F .text	00000000000000bc              test_for_non_eof_log_read_errors(int, char const**)
00000000008ed724 g     F .text	000000000000021c              my_fdopen
0000000000764ab0  w    F .text	0000000000000098              Field::handle_int32(unsigned char*, unsigned char const*, bool, bool)
000000000081610e  w    F .text	0000000000000028              Item_date::val_real()
0000000000739fcc  w    F .text	0000000000000040              Item_func_current_user::Item_func_current_user(Name_resolution_context*)
00000000013877c0 g     O .bss	0000000000000008              tc_log_cur_pages_used
000000000061c166  w    F .text	000000000000001d              Server_runnable::Server_runnable()
0000000001084490  w    O .data.rel.ro	00000000000003a8              vtable for Item_func_ne
000000000070cf30  w    F .text	0000000000000026              List<set_var_base>::List(List<set_var_base> const&)
00000000007addfc  w    F .text	0000000000000050              Item_int_func::Item_int_func(THD*, Item_int_func*)
00000000007daf46  w    F .text	0000000000000011              Item_func_sleep::func_name() const
00000000008ac3c1 g     F .text	00000000000000f8              check_part_func_fields(Field**, bool)
0000000001385e08 g     O .bss	0000000000000004              known_extensions_id
00000000005d0ae0  w    F .text	000000000000001a              List<Alter_column>::head_ref()
0000000000826cea g     F .text	0000000000000057              trans_has_updated_trans_table(THD const*)
000000000095ea0e g     F .text	0000000000000103              _mi_delete_static_record
00000000005d9ca8  w    F .text	000000000000001b              List<MYSQL_ERROR>::~List()
00000000008770ca  w    F .text	00000000000000af              Item_proc_string::val_real()
000000000079abb6  w    F .text	0000000000000046              Item_aggregate_ref::~Item_aggregate_ref()
00000000007a79fa g     F .text	0000000000000036              cmp_item_decimal::make_same()
000000000067a804 g     F .text	000000000000008b              sortcmp(String const*, String const*, charset_info_st*)
00000000005d0a72  w    F .text	000000000000002d              List<Alter_column>::push_back(Alter_column*, st_mem_root*)
0000000000000000       F *UND*	0000000000000000              strcpy@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              chroot@@GLIBC_2.2.5
0000000000816d5a  w    F .text	0000000000000011              Item_datetime_typecast::cast_type() const
0000000000907d29 g     F .text	00000000000000cb              destroy_file(PFS_thread*, PFS_file*)
00000000007bc63c  w    F .text	000000000000004a              Item_func_y::Item_func_y(Item*)
00000000007d4f20 g     F .text	000000000000004a              Item_func_get_user_var::const_item() const
0000000001371640 g     O .bss	0000000000000038              COND_rpl_status
00000000013864e0 g     O .bss	0000000000000008              Create_func_found_rows::s_singleton
0000000000754a7e g     F .text	0000000000000114              Field_year::store(long long, bool)
00000000006c7bfe g     F .text	0000000000000041              Event_queue_element::~Event_queue_element()
0000000001219d20 g     O .data	0000000000000100              to_upper_latin2_bin
0000000000980cde g     F .text	000000000000023e              ha_heap::open(char const*, int, unsigned int)
000000000136cc00 g     O .bss	0000000000000001              opt_enable_named_pipe
0000000001092910  w    O .data.rel.ro	00000000000003c0              vtable for Item_func_ceiling
0000000000827afc g     F .text	00000000000009e3              MYSQL_BIN_LOG::write(Log_event*)
00000000005e896c  w    F .text	0000000000000030              Field_blob::get_ptr(unsigned char**)
000000000055bfd7 g     F .text	0000000000000093              process_key_caches(int (*)(char const*, st_key_cache*))
0000000001088080  w    O .data.rel.ro	0000000000000030              vtable for Create_func_cos
0000000000798d1a  w    F .text	0000000000000053              Item_copy_float::copy()
00000000007ba56a  w    F .text	0000000000000082              Item_func_min_max::Item_func_min_max(List<Item>&, int)
000000000106c050  w    O .data.rel.ro	0000000000000028              vtable for Event_timed
00000000010ef8c0 g     O .data	0000000000000058              table_setup_consumers::m_share
00000000005f0b70  w    F .text	0000000000000070              st_select_lex_node::st_select_lex_node()
0000000000784d5a g     F .text	00000000000000b1              Item_decimal::Item_decimal(my_decimal*)
0000000000b619f0 g     F .text	00000000000004e4              ha_partition::handle_opt_partitions(THD*, st_ha_check_opt*, unsigned int)
00000000007c0aa4  w    F .text	0000000000000026              Create_func_makedate::~Create_func_makedate()
000000000106b390  w    O .data.rel.ro	0000000000000030              vtable for IS_internal_schema_access
000000000095e3fa g     F .text	00000000000000f2              init_myisam_psi_keys
00000000006f0a94  w    F .text	000000000000001b              Binlog_relay_IO_delegate::~Binlog_relay_IO_delegate()
00000000006f56b6  w    F .text	000000000000000f              MDL_scoped_lock::hog_lock_types_bitmap() const
00000000005ca1c5 g     F .text	0000000000000012              thd_query_string
0000000001268360 g     O .data	0000000000000058              my_collation_8bit_simple_ci_handler
0000000000818070  w    F .text	0000000000000046              Item_func_yearweek::~Item_func_yearweek()
000000000059b0e6  w    F .text	000000000000001a              List_iterator<st_lex_user>::ref()
00000000010c1b78  w    O .data.rel.ro	0000000000000088              vtable for Query_log_event
00000000010aaf80  w    O .data.rel.ro	0000000000000398              vtable for Item_func_lcase
000000000082f94d g     F .text	0000000000000287              lock_object_name(THD*, MDL_key::enum_mdl_namespace, char const*, char const*)
00000000007b488c g     F .text	000000000000005d              Create_func_intersects::create(THD*, Item*, Item*)
00000000007a7e0e g     F .text	0000000000000b9a              Item_func_in::fix_length_and_dec()
0000000000659418  w    F .text	000000000000002b              Copy_field::Copy_field()
00000000009183a6  w    F .text	0000000000000031              pos_all_instr::pos_all_instr()
000000000138cc20 g     O .bss	0000000000000008              file_max
000000000106d020  w    O .data.rel.ro	0000000000000038              vtable for PolyLock_rwlock
000000000077f2dc g     F .text	00000000000000a5              Item::transform(Item* (Item::*)(unsigned char*), unsigned char*)
000000000090fb8c g     F .text	00000000000000af              table_file_instances::rnd_pos(void const*)
0000000001211a20 g     O .data	0000000000000100              to_upper_latin7_general_cs
000000000079ae9e  w    F .text	0000000000000041              Hybrid_type_traits_integer::~Hybrid_type_traits_integer()
00000000006e9cce g     F .text	00000000000000d6              PROFILING::set_query_source(char*, unsigned int)
00000000007aca6e g     F .text	0000000000000053              Item_func_le::negated_item()
00000000007fc62c  w    F .text	000000000000002b              subselect_engine::~subselect_engine()
000000000079a986  w    F .text	000000000000008e              Item_param::~Item_param()
000000000121c620 g     O .data	0000000000000100              to_lower_latin1_spanish_ci
0000000000873b34  w    F .text	000000000000001b              List<QUICK_RANGE>::~List()
000000000088b07c  w    F .text	0000000000000026              List_iterator_fast<sp_pcontext>::List_iterator_fast(List<sp_pcontext>&)
000000000057edcf g     F .text	0000000000000618              acl_get(char const*, char const*, char const*, char const*, char)
00000000006fa076  w    F .text	000000000000002b              Repair_table_statement::~Repair_table_statement()
00000000012c7680 g     O .data	0000000000000100              uca_length
0000000000767c08  w    F .text	000000000000001b              List_iterator<Create_field>::List_iterator()
000000000077b654  w    F .text	000000000000005e              Ha_trx_info::coalesce_trx_with(Ha_trx_info const*)
00000000007e1e28  w    F .text	0000000000000058              Item_func_y::~Item_func_y()
0000000001217840 g     O .data	0000000000000100              to_lower_dec8_bin
00000000007ba392  w    F .text	0000000000000038              Item_func_int_val::Item_func_int_val(Item*)
000000000076437e  w    F .text	0000000000000027              Field::sort_length() const
00000000007affee  w    F .text	0000000000000013              Item_cond::subst_argument_checker(unsigned char**)
00000000006d77f2 g     F .text	000000000000014a              injector::transaction::delete_row(unsigned int, injector::transaction::table, st_bitmap const*, unsigned long, unsigned char*)
00000000007bd894  w    F .text	0000000000000041              Create_func_as_wkt::~Create_func_as_wkt()
000000000073c850  w    F .text	0000000000000038              Repair_table_statement::Repair_table_statement(LEX*)
0000000000801cb2 g     F .text	000000000000001a              Item_sum_variance::clear()
00000000007fa410 g     F .text	00000000000000f2              subselect_union_engine::fix_length_and_dec(Item_cache**)
00000000007e15de  w    F .text	0000000000000011              Item_func_as_wkt::func_name() const
000000000079baee  w    F .text	000000000000001b              List_iterator<Cached_item>::List_iterator()
000000000081cee4 g     F .text	0000000000000031              Log_to_file_event_handler::init_pthread_objects()
000000000073c9a0  w    F .text	0000000000000063              Signal_common::Signal_common(LEX*, sp_cond_type const*, Set_signal_information const&)
00000000007da9c4  w    F .text	0000000000000013              Item_func_abs::check_partition_func_processor(unsigned char*)
000000000107d7c8  w    O .data.rel.ro	0000000000000360              vtable for Item_copy
000000000077e526 g     F .text	0000000000000076              Item::val_string_from_real(String*)
00000000007ae316  w    F .text	000000000000000f              Ge_creator::l_op() const
000000000077e290 g     F .text	0000000000000011              item_init()
00000000005dc2c4 g     F .text	00000000000000d9              mysql_ha_flush_tables(THD*, TABLE_LIST*)
000000000070e5e4  w    F .text	0000000000000041              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::~Sys_var_unsigned()
00000000006659f5 g     F .text	0000000000000223              get_lookup_field_values(THD*, Item*, TABLE_LIST*, st_lookup_field_values*)
000000000065a090  w    F .text	000000000000000f              Item_func_trig_cond::const_item() const
00000000010ef220 g     O .data	00000000000000c0              global_table_class
000000000056abc6 g     F .text	00000000000001b0              set_var_password::check(THD*)
0000000000990626 g     F .text	000000000000050d              myrg_attach_children
00000000007bdc5a  w    F .text	0000000000000026              Create_func_bit_length::~Create_func_bit_length()
00000000006edeef g     F .text	000000000000008b              delegates_destroy()
00000000010b2940  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_bit
0000000000920c43 g     F .text	000000000000004a              ft_free_stopwords
00000000006f6118  w    F .text	0000000000000041              MDL_scoped_lock::~MDL_scoped_lock()
000000000073aca8  w    F .text	0000000000000048              Item_extract::Item_extract(interval_type, Item*)
000000000081d59e g     F .text	000000000000004e              LOGGER::flush_logs(THD*)
000000000075482c g     F .text	00000000000001e8              Field_year::store(char const*, unsigned int, charset_info_st*)
00000000010ca0a8  w    O .data.rel.ro	0000000000000028              vtable for PFS_truncatable_acl
0000000000b96bc0 g     F .text	00000000000008b8              decimal2bin
0000000000698040  w    F .text	0000000000000026              Object_creation_ctx::~Object_creation_ctx()
00000000007dc922  w    F .text	0000000000000046              Item_func_udf_decimal::~Item_func_udf_decimal()
0000000000000000       F *UND*	0000000000000000              freopen64@@GLIBC_2.2.5
00000000007b0640  w    F .text	000000000000001a              List_iterator<Item_field>::ref()
00000000007e1fb4  w    F .text	0000000000000058              Item_func_numgeometries::~Item_func_numgeometries()
000000000093b2f9 g     F .text	0000000000000159              mi_mmap_pread
00000000007c0018  w    F .text	0000000000000026              Create_func_isempty::~Create_func_isempty()
00000000006989ee  w    F .text	000000000000002b              Trigger_creation_ctx::~Trigger_creation_ctx()
0000000000840688 g     F .text	00000000000001eb              Execute_load_query_log_event::Execute_load_query_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000007499ce g     F .text	00000000000000a0              Field_str::Field_str(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
000000000098b30a g     F .text	000000000000006f              ha_myisammrg::~ha_myisammrg()
0000000000562fa0 g     F .text	0000000000000126              Protocol_text::store(char const*, unsigned long, charset_info_st*, charset_info_st*)
00000000008388ee g     F .text	0000000000000166              Format_description_log_event::do_apply_event(Relay_log_info const*)
000000000079b2c2 g     F .text	000000000000012e              Cached_item_str::cmp()
000000000138e350 g     O .bss	0000000000000008              myisam_pid
00000000007de714 g     F .text	000000000000016c              Item_func_geometry_type::val_str_ascii(String*)
00000000007b52f8 g     F .text	0000000000000050              Create_func_ltrim::create(THD*, Item*)
0000000000884c2a g     F .text	000000000000057c              sp_head::show_create_routine(THD*, int)
00000000007dc16a  w    F .text	000000000000002b              Item_func_is_used_lock::~Item_func_is_used_lock()
00000000007e2140  w    F .text	0000000000000046              Item_func_isclosed::~Item_func_isclosed()
00000000005b0752  w    F .text	0000000000000031              Repair_mrg_table_error_handler::safely_trapped_errors()
0000000001371780 g     O .bss	0000000000000001              use_slave_mask
0000000000658ab0  w    F .text	00000000000000d3              TABLE::set_keyread(bool)
00000000013956bc g     O .bss	0000000000000004              hp_key_mutex_HP_SHARE_intern_lock
000000000120c560 g     O .data	0000000000000100              sort_order_koi8u_general_ci
0000000000598b82  w    F .text	00000000000000d7              TABLE_LIST::init_one_table(char const*, unsigned long, char const*, unsigned long, char const*, thr_lock_type)
00000000008733fa  w    F .text	00000000000000c3              TRP_RANGE::make_quick(PARAM*, bool, st_mem_root*)
000000000079045c g     F .text	0000000000000086              Item_ref::val_bool()
0000000001373d28 g     O .bss	0000000000000008              Events::event_queue
00000000007be676  w    F .text	000000000000002d              Create_func_dayname::Create_func_dayname()
000000000079703a  w    F .text	000000000000000e              Item_field::filed_for_view_update()
0000000000765942  w    F .text	000000000000000f              Field_long::max_display_length()
00000000007e33ba  w    F .text	0000000000000046              Item_row::~Item_row()
0000000000000000       F *UND*	0000000000000000              operator delete(void*)@@GLIBCXX_3.4
0000000000b82627 g     F .text	00000000000000fe              my_mb_ctype_mb
000000000079a2be  w    F .text	000000000000002b              Item_cache_real::~Item_cache_real()
000000000061b432 g     F .text	0000000000000095              Protocol_local::opt_add_row_to_rset()
000000000079aaa6  w    F .text	000000000000002b              Item_decimal::~Item_decimal()
0000000000796e14  w    F .text	0000000000000029              Item_ident_for_show::val_str(String*)
0000000000848c64  w    F .text	000000000000006f              Log_event::get_time()
00000000005f71fa g     F .text	00000000000001c6              log_slow_statement(THD*)
00000000007bfa90  w    F .text	0000000000000041              Create_func_ifnull::~Create_func_ifnull()
000000000061c2d0  w    F .text	0000000000000041              Execute_sql_statement::~Execute_sql_statement()
000000000073b48c  w    F .text	0000000000000062              select_to_file::select_to_file(sql_exchange*)
000000000090502c g     F .text	00000000000000fe              ha_perfschema::rnd_pos(unsigned char*, unsigned char*)
0000000000788c72 g     F .text	00000000000000cb              Item_ref_null_helper::val_str(String*)
00000000007bacb8  w    F .text	0000000000000038              Item_func_udf_float::Item_func_udf_float(st_udf_func*)
00000000007bea6a  w    F .text	0000000000000026              Create_func_des_decrypt::~Create_func_des_decrypt()
0000000000610380 g     F .text	0000000000000115              sys_var_pluginvar::do_check(THD*, set_var*)
00000000008ee2b6 g     F .text	0000000000001323              handle_options
00000000007d2176 g     F .text	00000000000000b7              Item_func_benchmark::print(String*, enum_query_type)
0000000000981c14 g     F .text	0000000000000021              ha_heap::reset()
0000000000766724  w    F .text	000000000000007b              Field_datetime::Field_datetime(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
00000000005c13e2 g     F .text	0000000000000053              Drop_table_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
00000000006f5eee  w    F .text	000000000000001a              I_P_List_fast_push_back<MDL_ticket>::I_P_List_fast_push_back(MDL_ticket**)
000000000073bc3c  w    F .text	0000000000000090              sp_lex_keeper::~sp_lex_keeper()
0000000000000000       F *UND*	0000000000000000              select@@GLIBC_2.2.5
00000000007fc81a  w    F .text	0000000000000046              Item_singlerow_subselect::~Item_singlerow_subselect()
000000000106be88  w    O .data.rel.ro	0000000000000030              vtable for Default_object_creation_ctx
00000000010c1830  w    O .data.rel.ro	0000000000000078              vtable for Xid_log_event
00000000005d115e  w    F .text	000000000000033f              Rows_log_event* THD::binlog_prepare_pending_rows_event<Delete_rows_log_event>(TABLE*, unsigned int, st_bitmap const*, unsigned long, unsigned long, bool, Delete_rows_log_event*)
00000000005eed06 g     F .text	00000000000001e3              st_select_lex::print_limit(THD*, String*, enum_query_type)
0000000000559016  w    F .text	0000000000000012              Warning_info::current_row_for_warning() const
000000000079714a  w    F .text	0000000000000013              Item_null::check_partition_func_processor(unsigned char*)
00000000006b8474 g     F .text	0000000000000019              Field_iterator_table::name()
00000000007aedc8  w    F .text	000000000000008d              in_vector::in_vector(unsigned int, unsigned int, int (*)(void const*, void const*, void const*), charset_info_st*)
0000000000000000       F *UND*	0000000000000000              acos@@GLIBC_2.2.5
000000000136ac00 g     O .data	00000000000000b0              my_charset_utf8mb4_bin
00000000006cf906 g     F .text	0000000000000511              partition_info::check_range_constants(THD*)
0000000000000000       F *UND*	0000000000000000              mmap64@@GLIBC_2.2.5
00000000010bad88  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_curtime_utc
00000000007bfde6  w    F .text	000000000000002d              Create_func_is_free_lock::Create_func_is_free_lock()
000000000073c124  w    F .text	0000000000000083              sp_instr_hpush_jump::sp_instr_hpush_jump(unsigned int, sp_pcontext*, int, unsigned int)
00000000007679f2  w    F .text	000000000000001b              Create_field::field_flags_are_binary()
00000000006eb0d4 g     F .text	0000000000000041              Event_parse_data::new_instance(THD*)
000000000090415e g     F .text	0000000000000273              radixsort_for_str_ptr
0000000000ba3f43 g     F .text	0000000000000047              strmake
000000000056b36c  w    F .text	0000000000000038              AutoWLock::~AutoWLock()
0000000000889eac  w    F .text	000000000000001a              List<sp_instr>::pop()
00000000006edbf2 g     F .text	00000000000000f1              get_user_var_str
0000000001375480 g     O .bss	0000000000000060              my_locale_ar_IQ
0000000000781746 g     F .text	0000000000000075              Item_name_const::val_int()
000000000083dd2c g     F .text	00000000000001a5              Slave_log_event::pack_info(Protocol*)
000000000069af3c g     F .text	000000000000015c              select_union::send_data(List<Item>&)
0000000001394d40 g     O .bss	0000000000000400              my_file_info_default
00000000008fcde6 g     F .text	00000000000000b4              thr_alarm_info
0000000000809900  w    F .text	000000000000006e              Item_udf_sum::Item_udf_sum(THD*, Item_udf_sum*)
0000000000560172 g     F .text	00000000000001cc              check_scramble_323
00000000010b7af8  w    O .data.rel.ro	00000000000003a0              vtable for Item_time_typecast
000000000098ee42  w    F .text	0000000000000015              TABLE_SHARE::get_table_def_version()
00000000005ffe51 g     F .text	0000000000000169              check_single_table_access(THD*, unsigned long, TABLE_LIST*, bool)
00000000007adcaa  w    F .text	0000000000000055              Item_func::agg_arg_charsets_for_string_result(DTCollation&, Item**, unsigned int, int)
00000000007befd6  w    F .text	000000000000002d              Create_func_exp::Create_func_exp()
00000000009129ee g     F .text	00000000000000be              table_rwlock_instances::rnd_pos(void const*)
000000000138cdc8 g     O .bss	0000000000000008              cond_class_lost
000000000079ace0  w    F .text	000000000000002b              Item_case_expr::~Item_case_expr()
000000000077e6ec g     F .text	0000000000000069              Item::val_decimal_from_real(my_decimal*)
0000000000797840  w    F .text	000000000000000f              Item_hex_string::field_type() const
00000000005e8cbc  w    F .text	000000000000000f              select_insert::can_rollback_data()
00000000008f5734 g     F .text	00000000000001a5              my_sync
000000000088cc26 g     F .text	000000000000003b              Select_fetch_into_spvars::prepare(List<Item>&, st_select_lex_unit*)
000000000083bcd0 g     F .text	000000000000011d              Intvar_log_event::Intvar_log_event(char const*, Format_description_log_event const*)
000000000081708e  w    F .text	0000000000000011              Item_func_timediff::func_name() const
000000000079a1c8  w    F .text	000000000000002b              Item_cache_str::~Item_cache_str()
0000000000738c32  w    F .text	0000000000000040              Item_func_bit_xor::Item_func_bit_xor(Item*, Item*)
0000000000560fe4 g     F .text	000000000000037d              net_send_ok(THD*, unsigned int, unsigned int, unsigned long long, unsigned long long, char const*)
0000000000566e66  w    F .text	0000000000000019              Item::find_item_processor(unsigned char*)
00000000005c0b6e g     F .text	0000000000000018              thd_get_net_read_write(THD*)
00000000008ccc5a g     F .text	00000000000000f0              Truncate_statement::execute(THD*)
00000000010a87e0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_encrypt
00000000007b2378 g     F .text	00000000000000d8              Create_func_arg2::create_func(THD*, st_mysql_lex_string, List<Item>*)
00000000006d7052 g     F .text	0000000000000040              Deferred_log_events::Deferred_log_events(Relay_log_info*)
000000000106df08  w    O .data.rel.ro	0000000000000398              vtable for Item_func_isnotfalse
000000000054e389 g     F .text	0000000000000052              dec_connection_count()
00000000007e3362  w    F .text	0000000000000022              Item_row::element_index(unsigned int)
00000000007daf96  w    F .text	0000000000000020              Item_udf_func::func_name() const
00000000010ca3e0  w    O .data.rel.ro	0000000000000048              vtable for table_file_instances
00000000012ae9c0 g     O .data	00000000000000b0              my_charset_tis620_bin
0000000000828a58 g     F .text	00000000000005a7              MYSQL_BIN_LOG::write_cache(st_io_cache*, bool, bool)
0000000000873f1e  w    F .text	000000000000001d              List_iterator_fast<QUICK_SELECT_I>::operator++(int)
00000000005d1c54  w    F .text	0000000000000041              Drop_table_error_handler::~Drop_table_error_handler()
00000000008bbd98 g     F .text	000000000000025d              Item_nodeset_func_ancestorbyname::val_nodeset(String*)
0000000000618dc1 g     F .text	0000000000000009              non-virtual thunk to Prepared_statement::cleanup_stmt()
00000000005f0824  w    F .text	000000000000000b              st_ha_check_opt::st_ha_check_opt()
00000000007af064  w    F .text	000000000000000f              in_longlong::result_type()
0000000000690795  w    F .text	000000000000007c              open_n_lock_single_table(THD*, TABLE_LIST*, thr_lock_type, unsigned int)
00000000005ce7f6  w    F .text	000000000000002b              Key::~Key()
00000000005666c0  w    F .text	000000000000004a              Item::~Item()
00000000008897fe  w    F .text	0000000000000046              sp_instr_cclose::~sp_instr_cclose()
0000000001376958 g     O .bss	0000000000000008              thread_scheduler
00000000007c2a48  w    F .text	0000000000000026              Create_func_unix_timestamp::~Create_func_unix_timestamp()
00000000007392ba  w    F .text	0000000000000064              Item_func_interval::Item_func_interval(Item_row*)
0000000000678ae4  w    F .text	000000000000001d              List_iterator<char>::operator++(int)
000000000065a36a  w    F .text	000000000000002b              COND_EQUAL::~COND_EQUAL()
000000000074a1e6 g     F .text	000000000000008a              Field::new_key_field(st_mem_root*, TABLE*, unsigned char*, unsigned char*, unsigned int)
00000000005e8a98  w    F .text	0000000000000063              Name_resolution_context_state::restore_state(Name_resolution_context*, TABLE_LIST*)
0000000000765ee8  w    F .text	0000000000000017              Field_null::cmp(unsigned char const*, unsigned char const*)
0000000000698206  w    F .text	0000000000000045              Table_triggers_list::check_for_broken_triggers()
000000000138cc78 g     O .bss	0000000000000008              cond_array
000000000083e19e g     F .text	0000000000000056              Slave_log_event::~Slave_log_event()
0000000001095480  w    O .data.rel.ro	0000000000000398              vtable for Item_func_acos
00000000007dce26  w    F .text	0000000000000058              Item_func_char_length::~Item_func_char_length()
00000000008ea8df g     F .text	00000000000000f5              bitmap_set_prefix
0000000000912bd4 g     F .text	00000000000001ca              table_rwlock_instances::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000005d19a8  w    F .text	0000000000000046              select_exists_subselect::~select_exists_subselect()
0000000000764e18  w    F .text	000000000000000f              Field_num::result_type() const
0000000000559be2  w    F .text	000000000000001b              List<Buffered_log>::List()
000000000088ce28  w    F .text	000000000000002d              Select_fetch_into_spvars::Select_fetch_into_spvars()
000000000138cc60 g     O .bss	0000000000000008              locker_lost
00000000006f5eee  w    F .text	000000000000001a              I_P_List_fast_push_back<MDL_ticket>::I_P_List_fast_push_back(MDL_ticket**)
00000000007c5dfc g     F .text	0000000000000041              Item_func_numhybrid::fix_length_and_dec()
00000000007baa7c  w    F .text	0000000000000084              Item_func_find_in_set::Item_func_find_in_set(Item*, Item*)
0000000000840058 g     F .text	0000000000000085              Execute_load_log_event::pack_info(Protocol*)
000000000136cbf4 g     O .bss	0000000000000001              opt_skip_name_resolve
00000000007ae618  w    F .text	000000000000000f              Item_func_not_all::functype() const
0000000000799e8e  w    F .text	0000000000000026              List<List<Item> >::List(List<List<Item> > const&)
00000000006bab12  w    F .text	0000000000000012              Wait_for_flush::get_ctx() const
00000000005ca2ac g     F .text	000000000000002b              thd_binlog_filter_ok
00000000006d2af8 g     F .text	00000000000002fe              partition_info::fix_partition_values(THD*, p_elem_val*, partition_element*, unsigned int)
00000000006780c8  w    F .text	0000000000000015              sp_head::get_parse_context()
000000000088d36e g     F .text	00000000000001c3              Geometry::create_from_wkt(Geometry_buffer*, Gis_read_stream*, String*, bool)
000000000075c0c6 g     F .text	0000000000000058              Field_blob::set_key_image(unsigned char const*, unsigned int)
00000000009893a8 g     F .text	0000000000000138              hp_clear_keys
00000000010c0f88  w    O .data.rel.ro	0000000000000048              vtable for Log_to_csv_event_handler
00000000006d71b0 g     F .text	00000000000000b0              Deferred_log_events::rewind()
00000000010eb660 g     O .data	00000000000001e8              client_errors
0000000000678572  w    F .text	000000000000003d              thread_info::thread_info()
00000000012b8880 g     O .data	0000000000000600              page01Edata
00000000007dd390  w    F .text	0000000000000046              Item_func_sin::~Item_func_sin()
00000000006f0574 g     F .text	0000000000000032              unregister_binlog_relay_io_observer
0000000000708778  w    F .text	0000000000000061              THD::set_time(long)
000000000079980a  w    F .text	000000000000000f              Item_cache_row::result_type() const
00000000007c10a6  w    F .text	000000000000002d              Create_func_oct::Create_func_oct()
00000000007bfd2a  w    F .text	0000000000000026              Create_func_interiorringn::~Create_func_interiorringn()
00000000007b61fc g     F .text	0000000000000058              Create_func_sha2::create(THD*, Item*, Item*)
00000000005e991e  w    F .text	0000000000000046              select_create::~select_create()
00000000005630c6 g     F .text	00000000000001d8              Protocol_text::store(char const*, unsigned long, charset_info_st*)
0000000000784fc8 g     F .text	000000000000005d              Item_decimal::print(String*, enum_query_type)
00000000007c1b60  w    F .text	0000000000000041              Create_func_sha::~Create_func_sha()
00000000010c7db8  w    O .data.rel.ro	0000000000000398              vtable for Item_xpath_cast_number
0000000000805844 g     F .text	000000000000002d              Item_udf_sum::cleanup()
00000000006bb59c  w    F .text	000000000000001d              List_iterator_fast<Item_func_match>::operator++(int)
00000000005af1c6  w    F .text	0000000000000025              TABLE_SHARE::has_old_version() const
0000000000b8f92b g     F .text	00000000000000c2              my_casedn_ujis
000000000077b838  w    F .text	0000000000000011              handler::keys_to_use_for_scanning()
0000000001099a38  w    O .data.rel.ro	0000000000000398              vtable for Item_func_signed
0000000001394ce0 g     O .bss	0000000000000004              key_file_cnf
0000000000679a84 g     F .text	000000000000015c              String::append(char const*, unsigned int)
0000000000825e4a g     F .text	0000000000000031              MYSQL_BIN_LOG::is_active(char const*)
000000000138c980 g     O .bss	0000000000000008              my_once_root_block
00000000005cd9a2 g     F .text	0000000000000075              THD::set_user_connect(user_conn*)
0000000000b9481d g     F .text	000000000000019b              max_decimal
00000000006a4ee0  w    F .text	0000000000000025              List<TABLE>::push_back(TABLE*)
0000000001219b00 g     O .data	0000000000000101              ctype_latin2_bin
000000000075aae8 g     F .text	0000000000000143              Field_varstring::is_equal(Create_field*)
0000000000893822  w    F .text	000000000000002c              Gis_point::dimension(unsigned int*, char const**) const
00000000010b6560  w    O .data.rel.ro	0000000000000398              vtable for Item_func_microsecond
00000000007dcdfa  w    F .text	000000000000002b              Item_func_coercibility::~Item_func_coercibility()
0000000000767978  w    F .text	000000000000000f              Field_bit_as_char::key_type() const
00000000007ba272  w    F .text	0000000000000040              Item_func_atan::Item_func_atan(Item*, Item*)
0000000000766c58  w    F .text	000000000000000f              Field_varstring::type() const
0000000001076008  w    O .data.rel.ro	00000000000003a8              vtable for Item_trigger_field
000000000056701a  w    F .text	000000000000000f              Item::get_geometry_type() const
00000000007bb94a  w    F .text	0000000000000052              Item_func_encode::Item_func_encode(Item*, Item*)
00000000006dc35c g     F .text	0000000000000026              Relay_log_info::~Relay_log_info()
00000000007bd44c  w    F .text	000000000000002d              Create_func_abs::Create_func_abs()
000000000059ac70  w    F .text	0000000000000030              GRANT_TABLE::ok()
0000000000658a78  w    F .text	0000000000000037              TABLE::default_column_bitmaps()
000000000056d32a g     F .text	00000000000003c4              start_slave_thread(unsigned int, void* (*)(void*), st_mysql_mutex*, st_mysql_mutex*, st_mysql_cond*, unsigned int volatile*, unsigned long volatile*, Master_info*)
00000000008159ca  w    F .text	0000000000000011              Item_func_month::func_name() const
0000000000602f5d g     F .text	000000000000010a              add_to_list(THD*, SQL_I_List<st_order>&, Item*, bool)
0000000001217420 g     O .data	0000000000000100              to_upper_cp866_bin
000000000070d8ee  w    F .text	0000000000000150              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::do_check(THD*, set_var*)
000000000059c15d g     F .text	0000000000000068              table_def_start_shutdown()
00000000005bf2c8  w    F .text	0000000000000012              Query_cache_query::result()
00000000007fc270  w    F .text	000000000000000f              Item_subselect::not_null_tables() const
00000000010d2620 g     O .data	0000000000000008              not_found_field
0000000000798a92  w    F .text	000000000000002b              Item_copy::~Item_copy()
0000000000888e1e  w    F .text	0000000000000015              Lex_input_stream::get_body_utf8_str()
0000000000000000       F *UND*	0000000000000000              nl_langinfo@@GLIBC_2.2.5
00000000006594ce  w    F .text	000000000000000f              Item_null::type() const
0000000000638ea2 g     F .text	000000000000037a              JOIN::make_simple_join(JOIN*, TABLE*)
00000000007bcbf8  w    F .text	0000000000000038              Item_func_from_days::Item_func_from_days(Item*)
00000000013757e0 g     O .bss	0000000000000060              my_locale_ar_YE
00000000012cbfa0 g     O .data	00000000000000b0              my_charset_utf16_latvian_uca_ci
00000000007b6fe0 g     F .text	0000000000000058              Create_func_xml_extractvalue::create(THD*, Item*, Item*)
00000000006a52c9 g     F .text	0000000000000220              check_duplicate_names(List<Item>&, bool)
0000000001087e70  w    O .data.rel.ro	0000000000000030              vtable for Create_func_degrees
0000000000558ed4  w    F .text	000000000000003c              my_decimal::init()
00000000007bfa62  w    F .text	000000000000002d              Create_func_ifnull::Create_func_ifnull()
0000000000651a56 g     F .text	0000000000000279              JOIN::make_sum_func_list(List<Item>&, List<Item>&, bool, bool)
0000000000767b4c  w    F .text	0000000000000026              List<Create_field>::disjoin(List<Create_field>*)
000000000091ba21 g     F .text	00000000000000d6              mi_check_print_info
00000000005b876e g     F .text	0000000000000045              Query_cache::invalidate_table(THD*, TABLE*)
0000000001376140 g     O .bss	0000000000000060              my_locale_es_PR
00000000007bf964  w    F .text	0000000000000041              Create_func_greatest::~Create_func_greatest()
000000000091d248 g     F .text	0000000000000bbb              ha_myisam::repair(THD*, st_mi_check_param&, bool)
000000000089a36e  w    F .text	000000000000003a              field_longlong::get_max_arg(String*)
00000000007dae34  w    F .text	0000000000000011              Item_func_bit_count::func_name() const
00000000007e0dc2  w    F .text	0000000000000056              MBR::MBR(double, double, double, double)
000000000089306e g     F .text	0000000000000011              Gis_geometry_collection::get_class_info() const
00000000007afa30  w    F .text	000000000000000f              Item_func_in::decimal_precision() const
000000000083c736 g     F .text	000000000000007d              Xid_log_event::Xid_log_event(char const*, Format_description_log_event const*)
000000000106d7d8  w    O .data.rel.ro	0000000000000398              vtable for Item_date_func
00000000008497ce  w    F .text	000000000000000f              Write_rows_log_event::get_type_code()
000000000079af06  w    F .text	0000000000000041              Hybrid_type_traits_decimal::~Hybrid_type_traits_decimal()
00000000007c5852 g     F .text	0000000000000099              Item_int_func::val_str(String*)
00000000006caf74  w    F .text	0000000000000041              Event_job_data::~Event_job_data()
0000000000565124  w    F .text	0000000000000053              Diagnostics_area::message() const
00000000008893b6  w    F .text	0000000000000056              sp_instr_freturn::~sp_instr_freturn()
000000000088fd90 g     F .text	0000000000000088              Gis_polygon::centroid(String*) const
0000000000796b18  w    F .text	000000000000000f              Item_sp_variable::const_item() const
00000000005ae4ac g     F .text	00000000000000ed              init_ftfuncs(THD*, st_select_lex*, bool)
00000000007bf51c  w    F .text	000000000000002d              Create_func_from_unixtime::Create_func_from_unixtime()
00000000007579ba g     F .text	00000000000000e5              Field_longstr::report_if_important_data(char const*, char const*, bool)
00000000008c6756 g     F .text	0000000000000191              Event_queue::recalculate_activation_times(THD*)
00000000008524de  w    F .text	000000000000002b              Delete_rows_log_event_old::~Delete_rows_log_event_old()
000000000089a334  w    F .text	000000000000003a              field_longlong::get_min_arg(String*)
000000000083cfba g     F .text	0000000000000353              User_var_log_event::User_var_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000005c25c4 g     F .text	0000000000000363              THD::raise_condition(unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*)
000000000108d9b0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_get_lock
00000000008e4dab g     F .text	000000000000015f              unpack_filename
000000000073a50c  w    F .text	0000000000000038              Item_func_second::Item_func_second(Item*)
000000000060cd31 g     F .text	0000000000000643              mysql_install_plugin(THD*, st_mysql_lex_string const*, st_mysql_lex_string const*)
000000000077bda8  w    F .text	0000000000000021              handler::get_no_parts(char const*, unsigned int*)
00000000007da3c8  w    F .text	0000000000000060              Item_func::check_integer_overflow(long long, bool)
000000000074bec4 g     F .text	000000000000014f              Field_new_decimal::create_from_item(Item*)
0000000000828882 g     F .text	0000000000000092              MYSQL_BIN_LOG::purge()
0000000000826768 g     F .text	000000000000034b              MYSQL_BIN_LOG::appendv(char const*, unsigned int, ...)
00000000013863d8 g     O .bss	0000000000000008              Create_func_connection_id::s_singleton
00000000007bebbc  w    F .text	000000000000002d              Create_func_disjoint::Create_func_disjoint()
0000000000829aa0 g     F .text	00000000000000d1              MYSQL_BIN_LOG::wait_for_update_bin_log(THD*, timespec const*)
00000000006c76fe g     F .text	000000000000009e              Event_basic::~Event_basic()
00000000008457e0 g     F .text	000000000000005e              Write_rows_log_event::Write_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
000000000081591a  w    F .text	000000000000004e              Item_func_month::val_real()
0000000000559c6e  w    F .text	000000000000002d              List<Buffered_log>::push_back(Buffered_log*, st_mem_root*)
0000000001087210  w    O .data.rel.ro	0000000000000030              vtable for Create_func_numpoints
00000000005f0fee  w    F .text	000000000000002e              Lex_input_stream::restore_in_comment_state()
000000000082cb68  w    F .text	000000000000002a              MYSQL_QUERY_LOG::MYSQL_QUERY_LOG()
00000000006cfff4 g     F .text	00000000000006bc              partition_info::check_list_constants(THD*)
00000000007f41ae  w    F .text	000000000000002b              Item_func_md5::~Item_func_md5()
00000000008172ba  w    F .text	0000000000000046              Item_func_str_to_date::~Item_func_str_to_date()
00000000006f56c6  w    F .text	0000000000000038              MDL_object_lock::MDL_object_lock(MDL_key const*)
00000000007aed9a  w    F .text	000000000000002d              in_vector::in_vector()
0000000000b61f98 g     F .text	000000000000008e              ha_partition::auto_repair() const
00000000010bb4c8  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_curtime
00000000010c9310  w    O .data.rel.ro	0000000000000398              vtable for Item_func_xml_extractvalue
000000000066d073 g     F .text	0000000000000cf7              store_schema_proc(THD*, TABLE*, TABLE*, char const*, bool, char const*)
00000000005ce5cc  w    F .text	0000000000000034              Warning_info::opt_clear_warning_info(unsigned long long)
0000000001373f80 g     O .bss	0000000000000060              my_locale_be_BY
0000000000b6eae8 g     F .text	0000000000000172              ha_partition::alter_table_flags(unsigned int)
000000000056b61c  w    F .text	000000000000002b              set_var::~set_var()
00000000012c8880 g     O .data	00000000000000b0              my_charset_ucs2_czech_uca_ci
00000000007c1296  w    F .text	0000000000000041              Create_func_period_add::~Create_func_period_add()
00000000008182aa  w    F .text	0000000000000046              Item_func_quarter::~Item_func_quarter()
00000000006bf810 g     F .text	00000000000000f7              Time_zone_offset::TIME_to_gmt_sec(st_mysql_time const*, char*) const
0000000001266200 g     O .data	00000000000000b0              my_charset_latin1_german2_ci
000000000081685c  w    F .text	0000000000000011              Item_date_add_interval::func_name() const
00000000009203e3 g     F .text	000000000000001b              myisam_panic(handlerton*, ha_panic_function)
000000000084e402 g     F .text	0000000000000120              Old_rows_log_event::Old_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
00000000008c202c  w    F .text	0000000000000046              Item_nodeset_func_predicate::~Item_nodeset_func_predicate()
00000000012c8400 g     O .data	00000000000000b0              my_charset_ucs2_slovenian_uca_ci
000000000059b31a  w    F .text	000000000000001b              List<st_lex_user>::List()
00000000007db072  w    F .text	00000000000000a3              Item_udf_func::update_used_tables()
00000000006c7c66 g     F .text	00000000000000b9              Event_timed::Event_timed()
000000000136f840 g     O .bss	0000000000000070              LOCK_prepared_stmt_count
000000000106c828  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_debug_sync
0000000001394ce4 g     O .bss	0000000000000004              key_LOCK_alarm
0000000001394ce8 g     O .bss	0000000000000004              key_THR_LOCK_mutex
0000000000767664  w    F .text	00000000000000d5              Field_bit::cmp(unsigned char const*, unsigned char const*)
0000000000966b79 g     F .text	00000000000006c5              rtree_delete
00000000007645ea  w    F .text	0000000000000044              Field::cmp_offset(unsigned int)
000000000089acde  w    F .text	000000000000002b              field_longlong::~field_longlong()
00000000005b64c2 g     F .text	00000000000000ca              Query_cache::invalidate_by_MyISAM_filename(char const*)
00000000006d07a4 g     F .text	0000000000000d0a              partition_info::check_partition_info(THD*, handlerton**, handler*, st_ha_create_information*, bool)
000000000057a99c  w    F .text	0000000000000030              Log_event::apply_event(Relay_log_info const*)
00000000006829f3 g     F .text	0000000000000058              get_sql_field_charset(Create_field*, st_ha_create_information*)
0000000001386680 g     O .bss	0000000000000008              Create_func_period_add::s_singleton
00000000008584b0 g     F .text	00000000000000e2              QUICK_ROR_UNION_SELECT::QUICK_ROR_UNION_SELECT(THD*, TABLE*)
0000000000911e62 g     F .text	0000000000000075              table_setup_timers::table_setup_timers()
000000000082c995 g     F .text	0000000000000018              mysql_bin_log_file_pos
000000000054a1f0 g     F .text	000000000000002a              _start
000000000138e370 g     O .bss	0000000000000008              myisam_mmap_used
00000000007652ac  w    F .text	000000000000003d              Field_decimal::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
000000000070e784  w    F .text	0000000000000041              Sys_var_have::~Sys_var_have()
00000000005ee834 g     F .text	0000000000000043              st_select_lex::add_ftfunc_to_list(Item_func_match*)
00000000007399a4  w    F .text	0000000000000040              Item_str_func::Item_str_func(List<Item>&)
0000000000893bec  w    F .text	000000000000002c              Gis_multi_polygon::dimension(unsigned int*, char const**) const
0000000000b6a864 g     F .text	00000000000000d5              ha_partition::read_range_next()
00000000008cb2ee  w    F .text	000000000000002b              Alter_table_analyze_partition_statement::~Alter_table_analyze_partition_statement()
0000000001373d80 g     O .bss	0000000000000004              ERR_MSGS_INDEX
00000000008686f6 g     F .text	000000000000002f              QUICK_SELECT_I::is_keys_used(st_bitmap const*)
00000000007665aa  w    F .text	000000000000000f              Field_newdate::zero_pack() const
000000000089948a g     F .text	000000000000004d              compare_double(double const*, double const*)
0000000000b7183c g     F .text	00000000000018de              ha_key_cmp
00000000007afed6  w    F .text	000000000000002b              Item_func_isnotnull::not_null_tables() const
000000000083e8ac g     F .text	00000000000000e8              Create_file_log_event::write_data_header(st_io_cache*)
000000000061b7a4 g     F .text	0000000000000054              Protocol_local::store_long(long long)
000000000059b438  w    F .text	000000000000001a              List<st_lex_user>::pop()
00000000008163bc  w    F .text	0000000000000011              Item_func_curtime_utc::func_name() const
0000000001372700 g     O .bss	0000000000000020              delayed_threads
0000000000847a30 g     F .text	000000000000004b              Delete_rows_log_event::Delete_rows_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000008a085e g     F .text	000000000000022f              send_variant_2_list(st_mem_root*, Protocol*, List<String>*, char const*, String*)
00000000010865a0  w    O .data.rel.ro	0000000000000040              vtable for Lt_creator
00000000007bc310  w    F .text	0000000000000040              Item_func_geometry_from_wkb::Item_func_geometry_from_wkb(Item*, Item*)
00000000007ac8ca g     F .text	0000000000000053              Item_func_eq::negated_item()
00000000006f0ab0  w    F .text	0000000000000026              List_iterator<Observer_info>::List_iterator(List<Observer_info>&)
00000000007dc322  w    F .text	0000000000000046              Item_func_inet_aton::~Item_func_inet_aton()
00000000007ae2e0  w    F .text	0000000000000025              Ge_creator::symbol(bool) const
000000000056b4f2  w    F .text	0000000000000046              set_var_password::~set_var_password()
00000000007f6b9a g     F .text	00000000000014cd              Item_in_subselect::single_value_transformer(JOIN*, Comp_creator*)
0000000000873268  w    F .text	000000000000001b              SEL_ARG::~SEL_ARG()
00000000013865a8 g     O .bss	0000000000000008              Create_func_lcase::s_singleton
000000000088968c  w    F .text	0000000000000056              sp_instr_cpush::~sp_instr_cpush()
00000000010ef4c0 g     O .data	0000000000000010              table_events_waits_summary_by_thread_by_event_name::m_field_def
0000000000739800  w    F .text	0000000000000040              Item_cond_xor::Item_cond_xor(Item*, Item*)
00000000007fc2ac  w    F .text	000000000000000f              Item_subselect::have_guarded_conds()
0000000000738502  w    F .text	0000000000000059              Item_int_func::Item_int_func(List<Item>&)
00000000008dac68 g     F .text	0000000000000156              my_b_copy_to_file
00000000007af858  w    F .text	000000000000003d              cmp_item_decimal::cmp_item_decimal()
000000000077f296 g     F .text	0000000000000046              Item::rename(char*)
00000000006e80a1 g     F .text	000000000000003a              handle_one_connection
000000000057ab42  w    F .text	0000000000000046              Execute_load_log_event::~Execute_load_log_event()
0000000000c430e8 g     O .rodata	0000000000000008              MDL_object_lock::m_granted_incompatible
00000000005ca15c g     F .text	0000000000000014              thd_killed
000000000056af94  w    F .text	000000000000005f              ErrConvString::ErrConvString(String*)
000000000090b0c0 g     F .text	0000000000000071              PFS_engine_table::set_field_enum(Field*, unsigned long long)
0000000000606ede  w    F .text	0000000000000040              Item_func_ne::Item_func_ne(Item*, Item*)
0000000000771021 g     F .text	000000000000008e              ha_resolve_by_legacy_type(THD*, legacy_db_type)
00000000008a9b34 g     F .text	00000000000000f1              convert_charset_partition_constant(Item*, charset_info_st*)
00000000007dbb30  w    F .text	00000000000000d6              Item_func_sp::val_str(String*)
00000000006ee262 g     F .text	00000000000002e8              Trans_delegate::after_rollback(THD*, bool)
00000000010b30b0  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_min
00000000007be25c  w    F .text	000000000000002d              Create_func_convert_tz::Create_func_convert_tz()
00000000006f0a5c  w    F .text	000000000000001b              Binlog_storage_delegate::~Binlog_storage_delegate()
00000000005ba5ee g     F .text	00000000000001c0              Query_cache::insert_into_free_memory_sorted_list(Query_cache_block*, Query_cache_block**)
0000000000568ff8  w    F .text	000000000000003d              i_string::i_string(char const*)
00000000006f6090  w    F .text	000000000000000f              I_P_List_no_push_back<MDL_ticket>::set_last(MDL_ticket**)
00000000007c0a62  w    F .text	0000000000000041              Create_func_makedate::~Create_func_makedate()
00000000005c3b96 g     F .text	0000000000000182              THD::cleanup_after_query()
00000000007bcf9c  w    F .text	000000000000002d              Create_qfunc::Create_qfunc()
000000000079a804  w    F .text	000000000000002b              Item_copy_decimal::~Item_copy_decimal()
0000000000764f32  w    F .text	000000000000001e              Field_str::repertoire() const
000000000077dafa  w    F .text	000000000000001b              Host_entry::Host_entry()
00000000005ee714 g     F .text	000000000000003a              st_select_lex::add_gorder_to_list(THD*, Item*, bool)
0000000000768308  w    F .text	000000000000002b              Field_float::~Field_float()
00000000007dd9cc  w    F .text	0000000000000046              Item_func_mod::~Item_func_mod()
00000000007c9bfc g     F .text	0000000000000039              Item_func_neg::fix_num_length_and_dec()
000000000087664e g     F .text	0000000000000126              net_field_length
00000000007ba2ea  w    F .text	0000000000000038              Item_func_sin::Item_func_sin(Item*)
000000000073be6e  w    F .text	000000000000006b              sp_instr_opt_meta::sp_instr_opt_meta(unsigned int, sp_pcontext*)
0000000001219900 g     O .data	0000000000000200              to_uni_koi8u_bin
0000000000674db2 g     F .text	0000000000000789              create_schema_table(THD*, TABLE_LIST*)
0000000000945104 g     F .text	0000000000000111              mi_change_key_cache
00000000005ce23a  w    F .text	0000000000000012              Discrete_intervals_list::get_tail() const
000000000057a8e2  w    F .text	0000000000000046              Log_event::~Log_event()
00000000006f5be0  w    F .text	0000000000000029              I_P_List_iterator<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >::I_P_List_iterator(I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> > const&)
00000000008b1243 g     F .text	0000000000000116              prune_partition_set(TABLE const*, part_id_range*)
00000000005b048a  w    F .text	0000000000000016              Open_table_context::can_recover_from_failed_open() const
00000000008f43d3 g     F .text	00000000000001fc              my_rename
00000000006d23be g     F .text	000000000000014d              partition_info::init_col_val(p_column_list_val*, Item*)
00000000007c455a g     F .text	00000000000001c9              Item_func::compile(bool (Item::*)(unsigned char**), unsigned char**, Item* (Item::*)(unsigned char*), unsigned char*)
0000000000889b74  w    F .text	000000000000001b              List<sp_instr_opt_meta>::List()
00000000005d0600  w    F .text	000000000000001b              List_iterator<Key_part_spec>::rewind()
0000000000606dd4  w    F .text	000000000000001e              Item_bool_func::fix_length_and_dec()
0000000000737962  w    F .text	000000000000001b              Item_string::set_cs_specified(bool)
0000000001370720 g     O .bss	0000000000000018              all_options
00000000007f2316  w    F .text	000000000000004d              Item_func_unhex::fix_length_and_dec()
00000000008eae6e g     F .text	0000000000000143              bitmap_intersect
00000000008c2b9a g     F .text	000000000000021c              table_mapping::set_table(unsigned long, TABLE*)
00000000007b433e g     F .text	0000000000000133              Create_func_geometry_from_wkb::create_native(THD*, st_mysql_lex_string, List<Item>*)
0000000000674258 g     F .text	000000000000028c              fill_status(THD*, TABLE_LIST*, Item*)
00000000007dbc88  w    F .text	000000000000001e              Item_func_uuid_short::fix_length_and_dec()
0000000000795688 g     F .text	0000000000000101              Item_type_holder::display_length(Item*)
0000000000606a68  w    F .text	0000000000000051              Item_func::Item_func()
00000000007873ec g     F .text	000000000000002d              Item_param::basic_const_item() const
0000000000922f5a g     F .text	0000000000000e2c              chk_key
0000000000678b28  w    F .text	000000000000001d              List_iterator<partition_element>::operator++(int)
000000000055954c  w    F .text	000000000000001d              Unknown_key_hook::Unknown_key_hook()
000000000076725e  w    F .text	000000000000000f              Field_enum::match_collation_to_optimize_range() const
0000000000000000       F *UND*	0000000000000000              fclose@@GLIBC_2.2.5
000000000073abba  w    F .text	000000000000002d              Item_func_sysdate_local::Item_func_sysdate_local()
00000000007493fe g     F .text	000000000000002f              Field::val_decimal(my_decimal*)
00000000007d3158 g     F .text	0000000000000119              user_var_entry::val_decimal(char*, my_decimal*)
0000000000797338  w    F .text	0000000000000016              Item_decimal::val_decimal(my_decimal*)
00000000007aa678 g     F .text	0000000000000242              Item_func_like::val_int()
00000000010949b8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_cos
00000000007c0b3a  w    F .text	0000000000000026              Create_func_maketime::~Create_func_maketime()
00000000010d2020 g     O .data	0000000000000018              rpl_role_type
0000000000ba73f8 g     F .text	000000000000011a              vio_ssl_read
000000000070bc40  w    F .text	000000000000002d              Sys_var_debug_sync::session_update(THD*, set_var*)
000000000098be3c g     F .text	000000000000054b              ha_myisammrg::add_children_list()
00000000006c1d98  w    F .text	000000000000002b              Time_zone_utc::~Time_zone_utc()
0000000000755dc2 g     F .text	0000000000000313              Field_newdate::store_time(st_mysql_time*, enum_mysql_timestamp_type)
0000000000905568 g     F .text	000000000000008b              ha_perfschema::print_error(int, int)
00000000007dcc04  w    F .text	0000000000000058              Item_func_ascii::~Item_func_ascii()
0000000000000000       F *UND*	0000000000000000              operator new(unsigned long)@@GLIBCXX_3.4
00000000008962de g     F .text	00000000000003e1              field_ulonglong::add()
00000000007f27ae  w    F .text	0000000000000044              Item_func_uuid::fix_length_and_dec()
000000000136cbf2 g     O .bss	0000000000000001              opt_disable_networking
000000000106c468  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_tx_isolation
0000000000567216  w    F .text	0000000000000062              Item_int::Item_int(char const*, long long, unsigned int)
00000000007b0434  w    F .text	0000000000000020              LEX::is_ps_or_view_context_analysis()
000000000085555e g     F .text	00000000000004b3              my_system_gmt_sec
0000000000753464 g     F .text	0000000000000102              Field_timestamp::get_date(st_mysql_time*, unsigned int)
00000000009293af g     F .text	00000000000000d0              change_to_newfile
00000000005e7ea8 g     F .text	000000000000025d              select_create::binlog_show_create_table(TABLE**, unsigned int)
000000000088cc00 g     F .text	0000000000000025              sp_rcontext::get_case_expr_addr(int)
00000000005d0d40  w    F .text	000000000000001b              MDL_context::~MDL_context()
00000000010c22a0  w    O .data.rel.ro	0000000000000028              vtable for TRP_RANGE
0000000000760d5c g     F .text	00000000000001db              Field_bit_as_char::store(char const*, unsigned int, charset_info_st*)
000000000065de7c g     F .text	0000000000000282              mysqld_show_privileges(THD*)
000000000059b142  w    F .text	000000000000002e              List<LEX_COLUMN>::List(List<LEX_COLUMN> const&, st_mem_root*)
0000000000961a1e g     F .text	000000000000027a              _mi_enlarge_root
00000000007f1e02  w    F .text	0000000000000046              Item_func_sysconst::~Item_func_sysconst()
00000000007ff5ce g     F .text	0000000000000025              Item_sum_int::val_str(String*)
00000000008cd206 g     F .text	000000000000006e              Gis_read_stream::set_error_msg(char const*)
0000000000740024 g     F .text	000000000000010f              mysql_ssl_set
00000000007b581c g     F .text	0000000000000050              Create_func_numpoints::create(THD*, Item*)
00000000010eb860 g     O .data	0000000000000001              Field_null::null
0000000000805200 g     F .text	0000000000000038              Item_std_field::Item_std_field(Item_sum_std*)
00000000007db558  w    F .text	000000000000001e              Item_func_get_lock::fix_length_and_dec()
000000000136cc10 g     O .bss	0000000000000001              old_mode
000000000079bc76  w    F .text	0000000000000046              Cached_item_field::~Cached_item_field()
0000000000b6f6cc g     F .text	0000000000000033              ha_partition::max_supported_key_length() const
000000000082d87c  w    F .text	0000000000000015              binlog_cache_data::has_incident()
0000000001211800 g     O .data	0000000000000101              ctype_latin7_general_cs
00000000005f1d46  w    F .text	0000000000000091              void list_copy_and_replace_each_value<Create_field>(List<Create_field>&, st_mem_root*)
00000000007cc244 g     F .text	0000000000000197              Item_func_round::decimal_op(my_decimal*)
000000000056683a  w    F .text	0000000000000013              Item::tmp_table_field(TABLE*)
00000000007bbf0c  w    F .text	000000000000004a              Item_load_file::Item_load_file(Item*)
00000000006bb5ef  w    F .text	0000000000000016              I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>::next_ptr(Wait_for_flush*)
0000000000815f2a  w    F .text	0000000000000013              Item_func_weekday::check_partition_func_processor(unsigned char*)
000000000089a26e  w    F .text	0000000000000011              field_real::collect_enum()
000000000076551c  w    F .text	000000000000007a              Field_short::Field_short(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, bool, bool)
000000000090b1c2 g     F .text	0000000000000034              PFS_internal_schema_access::check(unsigned long, unsigned long*) const
00000000007b19c6 g     F .text	00000000000005a0              Create_udf_func::create(THD*, st_udf_func*, List<Item>*)
00000000012cd320 g     O .data	00000000000000b0              my_charset_utf16_bin
00000000007b03c4  w    F .text	000000000000001e              Item_cache::set_used_tables(unsigned long long)
0000000000559840  w    F .text	0000000000000025              I_List<i_string>::is_last(i_string*)
0000000000678180  w    F .text	00000000000000ca              Show_create_error_handler::get_view_access_denied_message()
00000000007aec44  w    F .text	0000000000000046              Item_func_coalesce::~Item_func_coalesce()
000000000075951c g     F .text	0000000000000069              Field_varstring::do_save_field_metadata(unsigned char*)
0000000001076708  w    O .data.rel.ro	0000000000000358              vtable for Item_default_value
00000000007b420a g     F .text	0000000000000133              Create_func_geometry_from_text::create_native(THD*, st_mysql_lex_string, List<Item>*)
00000000007cdaee g     F .text	0000000000000044              Item_func_locate::fix_length_and_dec()
000000000090e4ca g     F .text	000000000000002f              table_events_waits_summary_by_thread_by_event_name::reset_position()
00000000013708ec g     O .bss	0000000000000004              key_file_trg
00000000010efb80 g     O .data	0000000000000010              table_threads::m_field_def
00000000007fc9e2  w    F .text	0000000000000046              subselect_single_select_engine::~subselect_single_select_engine()
000000000089350a  w    F .text	0000000000000013              Geometry::exterior_ring(String*) const
00000000007e1ac0  w    F .text	0000000000000013              Item_func_isclosed::fix_length_and_dec()
000000000136e450 g     O .bss	0000000000000008              le_creator
000000000080713e g     F .text	0000000000000050              Item_func_group_concat::copy_or_same(THD*)
0000000000815b4a  w    F .text	0000000000000013              Item_func_hour::check_partition_func_processor(unsigned char*)
000000000088b044  w    F .text	000000000000001b              List<sp_label>::List()
00000000007a0ac8 g     F .text	00000000000002f7              Item_in_optimizer::fix_fields(THD*, Item**)
000000000073ae0e  w    F .text	0000000000000040              Item_typecast_maybe_null::Item_typecast_maybe_null(Item*)
0000000000604643 g     F .text	00000000000001c8              append_file_to_dir(THD*, char const**, char const*)
0000000000918318  w    F .text	0000000000000031              pos_all_instr_class::pos_all_instr_class()
0000000000797400  w    F .text	000000000000001e              Item_decimal::decimal_precision() const
00000000005ceb58  w    F .text	000000000000001b              List<Alter_drop>::~List()
000000000087358c  w    F .text	0000000000000046              TRP_ROR_UNION::~TRP_ROR_UNION()
00000000005cfe6a  w    F .text	000000000000002b              select_dumpvar::~select_dumpvar()
00000000007e1b70  w    F .text	0000000000000011              Item_func_numgeometries::func_name() const
00000000006c948e g     F .text	000000000000088f              Event_queue_element::compute_next_execution_time()
0000000000795db2  w    F .text	0000000000000023              my_decimal_int_part(unsigned int, unsigned int)
0000000000764db0  w    F .text	000000000000004c              Field::unpack_int64(unsigned char*, unsigned char const*, bool)
0000000000802c52 g     F .text	0000000000000077              Item_sum_and::add()
000000000090e18e  w    F .text	0000000000000025              pos_events_waits_history::pos_events_waits_history()
00000000007bcf76  w    F .text	0000000000000026              Create_func::~Create_func()
000000000056aff4  w    F .text	000000000000000b              ErrConvString::~ErrConvString()
00000000007b02a8  w    F .text	0000000000000076              Item_cond_or::copy_andor_structure(THD*, bool)
000000000073906a  w    F .text	000000000000003f              Item_func_isnotfalse::Item_func_isnotfalse(Item*)
0000000001370898 g     O .bss	0000000000000004              key_file_binlog
00000000005cf662  w    F .text	0000000000000016              Open_tables_state::Open_tables_state()
00000000007387a8  w    F .text	0000000000000076              Item_func_locate::Item_func_locate(Item*, Item*)
0000000000795dd6  w    F .text	0000000000000097              my_decimal::operator=(my_decimal const&)
0000000000b824ef g     F .text	0000000000000138              my_numcells_mb
000000000093f416 g     F .text	00000000000000e7              _mi_calc_blob_length
000000000079735e  w    F .text	0000000000000063              Item_decimal::clone_item()
0000000000000000       F *UND*	0000000000000000              inet_addr@@GLIBC_2.2.5
00000000005d18de  w    F .text	0000000000000026              I_List_iterator<Item_change_record>::I_List_iterator(I_List<Item_change_record>&)
0000000000872b2e  w    F .text	00000000000000bc              SEL_ARG::store_max(unsigned int, unsigned char**, unsigned int)
00000000007c3024  w    F .text	0000000000000026              Create_func_y::~Create_func_y()
00000000007bd6a4  w    F .text	000000000000002d              Create_func_aes_decrypt::Create_func_aes_decrypt()
000000000082eea4 g     F .text	00000000000000fc              mysql_lock_abort_for_thread(THD*, TABLE*)
0000000000905a96  w    F .text	000000000000000f              ha_perfschema::max_supported_keys() const
000000000136fea8 g     O .bss	0000000000000008              ssl_acceptor_fd
00000000005e9574  w    F .text	000000000000000f              List_iterator_fast<List<Item> >::ref()
00000000012cd4a0 g     O .data	00000000000000d8              my_charset_utf32_handler
0000000000755918 g     F .text	000000000000002e              Field_date::sql_type(String&) const
00000000008936a8  w    F .text	0000000000000041              Gis_point::~Gis_point()
00000000007aef12  w    F .text	000000000000000f              in_vector::create_item()
00000000005d3a86 g     F .text	00000000000000d0              get_default_db_collation(THD*, char const*)
00000000008f05ec g     F .text	00000000000000fc              getopt_double_limit_value
00000000010b7028  w    O .data.rel.ro	0000000000000398              vtable for Item_func_add_time
00000000007dd072  w    F .text	0000000000000046              Item_func_floor::~Item_func_floor()
000000000061c2d0  w    F .text	0000000000000041              Execute_sql_statement::~Execute_sql_statement()
00000000007bf2f2  w    F .text	0000000000000041              Create_func_floor::~Create_func_floor()
00000000007d51ed g     F .text	000000000000000c              non-virtual thunk to Item_func_get_user_var::set_value(THD*, sp_rcontext*, Item**)
00000000007975e2  w    F .text	0000000000000046              Item_float::~Item_float()
0000000000709a22  w    F .text	0000000000000041              Sys_var_charptr::~Sys_var_charptr()
00000000010eeb00 g     O .data	0000000000000008              my_getopt_error_reporter
0000000001370820 g     O .bss	0000000000000004              key_BINLOG_update_cond
000000000079b7fa  w    F .text	0000000000000037              Field::cmp(unsigned char const*)
00000000007c0ee4  w    F .text	000000000000002d              Create_func_numgeometries::Create_func_numgeometries()
00000000007654bc  w    F .text	0000000000000030              Field_tiny::pack(unsigned char*, unsigned char const*, unsigned int, bool)
000000000065c4b2  w    F .text	000000000000001a              Bitmap<4096u>::is_clear_all() const
00000000007bf4b4  w    F .text	0000000000000041              Create_func_from_days::~Create_func_from_days()
000000000081ce7a g     F .text	0000000000000036              Log_to_csv_event_handler::log_error(loglevel, char const*, __va_list_tag*)
0000000001373fe0 g     O .bss	0000000000000060              my_locale_bg_BG
00000000010882c0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_bit_length
00000000007f2130  w    F .text	0000000000000011              Item_func_make_set::func_name() const
0000000000873156  w    F .text	000000000000004b              SEL_IMERGE::SEL_IMERGE()
00000000008d84b7 g     F .text	00000000000003fa              _my_b_read
000000000080f4ee g     F .text	0000000000000084              Item_func_curdate::val_str(String*)
0000000000709128  w    F .text	0000000000000129              Sys_var_charptr::Sys_var_charptr(char const*, char const*, int, long, unsigned long, CMD_LINE, charset_enum, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
0000000000809c2a  w    F .text	000000000000004e              Item_sum_udf_int::val_real()
00000000010bd8d8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_weekday
00000000008c2818  w    F .text	000000000000006a              Item_func_xml_update::~Item_func_xml_update()
00000000006e484f g     F .text	00000000000001d8              get_server_by_name(st_mem_root*, char const*, st_federated_server*)
00000000007c1aca  w    F .text	0000000000000041              Create_func_sec_to_time::~Create_func_sec_to_time()
0000000000889c26  w    F .text	0000000000000011              Dynamic_array<Item_splocal*>::elements()
000000000088b060  w    F .text	000000000000001b              List<sp_pcontext>::List()
0000000001080710  w    O .data.rel.ro	0000000000000398              vtable for Item_func_bit_and
00000000006c7d62 g     F .text	0000000000000026              Event_timed::~Event_timed()
000000000081528e  w    F .text	000000000000009f              Field_timestamp::get_timestamp(char*)
00000000005c0578 g     F .text	00000000000000c2              Foreign_key::Foreign_key(Foreign_key const&, st_mem_root*)
0000000000767d9e  w    F .text	000000000000002b              Field_bit_as_char::~Field_bit_as_char()
00000000008876ae g     F .text	000000000000005f              sp_instr_cpop::print(String*)
0000000000780fbe g     F .text	000000000000010a              Item_sp_variable::val_str(String*)
000000000065c7b2  w    F .text	0000000000000026              List_iterator_fast<Create_field>::List_iterator_fast(List<Create_field>&)
00000000007ba43a  w    F .text	0000000000000052              Item_func_rand::Item_func_rand(Item*)
000000000065cac0  w    F .text	0000000000000046              Item_func_trig_cond::~Item_func_trig_cond()
00000000007be388  w    F .text	000000000000002d              Create_func_cot::Create_func_cot()
000000000079c2fd g     F .text	00000000000000d5              agg_field_type(Item**, unsigned int)
0000000001088320  w    O .data.rel.ro	0000000000000030              vtable for Create_func_bin
00000000007be4b4  w    F .text	000000000000002d              Create_func_crosses::Create_func_crosses()
00000000007f39e2  w    F .text	0000000000000058              Item_func_right::~Item_func_right()
0000000000583aa4 g     F .text	0000000000000092              GRANT_NAME::GRANT_NAME(char const*, char const*, char const*, char const*, unsigned long, bool)
0000000000558a42  w    F .text	000000000000002b              base_ilist::base_ilist()
0000000000b83341 g     F .text	00000000000001cd              my_strntoul_8bit
00000000008f2eb2 g     F .text	000000000000005e              my_strndup
0000000000ba71ba g     F .text	000000000000008a              vio_getnameinfo
0000000000796cc4  w    F .text	000000000000000f              Item_name_const::const_item() const
00000000005656da  w    F .text	0000000000000015              THD::charset()
00000000007be964  w    F .text	000000000000002d              Create_func_degrees::Create_func_degrees()
000000000081fb54 g     F .text	000000000000019f              open_binlog(st_io_cache*, char const*, char const**)
0000000000766fe0  w    F .text	000000000000000f              Field_blob::size_of() const
0000000001239680 g     O .data	00000000000000b0              my_charset_gb2312_bin
000000000085a650 g     F .text	0000000000000551              prune_partitions(THD*, TABLE*, Item*)
00000000007a4866 g     F .text	000000000000004e              Item_func_nullif::is_null()
00000000005ce930  w    F .text	0000000000000087              Item_float::Item_float(char const*, double, unsigned int, unsigned int)
00000000005b117b  w    F .text	0000000000000016              I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>::prev_ptr(MDL_request*)
000000000079ebf2 g     F .text	00000000000002d1              get_datetime_value(THD*, Item***, Item**, Item*, bool*)
000000000136cc38 g     O .bss	0000000000000008              opt_secure_file_priv
0000000000819bd2  w    F .text	0000000000000064              Field_blob::set_ptr_offset(long long, unsigned int, unsigned char*)
000000000065c0ac  w    F .text	000000000000001a              List<Item_func_match>::head()
00000000007c0af8  w    F .text	0000000000000041              Create_func_maketime::~Create_func_maketime()
00000000006df33a g     F .text	00000000000000c4              Relay_log_info::cached_charset_compare(char*) const
00000000007644e8  w    F .text	000000000000000f              Field::binary() const
00000000007fa10e g     F .text	000000000000002b              subselect_uniquesubquery_engine::prepare()
00000000008085a2  w    F .text	0000000000000098              udf_handler::add(char*)
00000000006eace8  w    F .text	000000000000006d              Queue<PROF_MEASUREMENT>::is_empty()
00000000008cbb38  w    F .text	000000000000002b              Alter_table_statement::~Alter_table_statement()
00000000006ceaaa g     F .text	0000000000000269              partition_info::set_up_default_subpartitions(handler*, st_ha_create_information*)
00000000007bb174  w    F .text	0000000000000040              Item_func_coalesce::Item_func_coalesce(Item*, Item*)
0000000000738a20  w    F .text	0000000000000038              Item_func_bit_neg::Item_func_bit_neg(Item*)
0000000000559cfc  w    F .text	000000000000001b              I_List<THD>::~I_List()
000000000120d6c0 g     O .data	0000000000000100              to_upper_cp1250_general_ci
000000000073bb7c  w    F .text	000000000000006b              sp_instr::sp_instr(unsigned int, sp_pcontext*)
0000000000793b9a g     F .text	000000000000005e              Item_cache_real::val_real()
000000000090c24e  w    F .text	000000000000002d              PFS_unknown_acl::PFS_unknown_acl()
0000000000847dec g     F .text	0000000000000082              Update_rows_log_event::~Update_rows_log_event()
000000000055ee9f g     F .text	0000000000000103              read_escaped_string(char*, char*, st_mysql_lex_string*)
0000000000851f72 g     F .text	000000000000004e              Update_rows_log_event_old::do_after_row_operations(Slave_reporting_capability const*, int)
0000000000609e93 g     F .text	00000000000000fe              plugin_lock_by_name(THD*, st_mysql_lex_string const*, int)
0000000000b94766 g     F .text	000000000000005e              my_charset_is_8bit_pure_ascii
0000000000889a86  w    F .text	0000000000000022              sp_rcontext::get_cursor(unsigned int)
00000000007f21e4  w    F .text	0000000000000023              Item_func_char::fix_length_and_dec()
00000000010eb120 g     O .data	0000000000000018              slave_type_conversions_name
0000000000658840  w    F .text	000000000000002e              Bitmap<64u>::is_prefix(unsigned int) const
0000000000708e58  w    F .text	0000000000000040              Sys_var_enum::global_value_ptr(THD*, st_mysql_lex_string*)
00000000008a8f38  w    F .text	0000000000000036              Load_log_event::set_fname_outside_temp_buf(char const*, unsigned int)
0000000000806ad2 g     F .text	00000000000002f3              Item_func_group_concat::Item_func_group_concat(THD*, Item_func_group_concat*)
00000000006fa004  w    F .text	000000000000002b              Optimize_table_statement::~Optimize_table_statement()
000000000077556c g     F .text	0000000000000635              handler::update_auto_increment()
0000000000664afc g     F .text	0000000000000107              calc_sum_of_all_status(system_status_var*)
000000000075e3cc g     F .text	0000000000000082              Field_enum::eq_def(Field*)
00000000007acfd2 g     F .text	0000000000000014              Item_equal::members()
000000000055bc0a g     F .text	00000000000000ab              find_named(I_List<NAMED_ILINK>*, char const*, unsigned int, NAMED_ILINK**)
000000000090894b g     F .text	00000000000000a7              init_thread_class(unsigned int)
00000000007b2c2a g     F .text	0000000000000050              Create_func_coercibility::create(THD*, Item*)
00000000010ac178  w    O .data.rel.ro	0000000000000398              vtable for Item_func_concat_ws
00000000007e0eac  w    F .text	000000000000007b              MBR::disjoint(MBR const*)
00000000007b163a  w    F .text	0000000000000046              Item_in_optimizer::~Item_in_optimizer()
0000000000892728 g     F .text	000000000000022d              Gis_geometry_collection::get_data_as_wkt(String*, char const**) const
000000000073906a  w    F .text	000000000000003f              Item_func_isnotfalse::Item_func_isnotfalse(Item*)
0000000000709658  w    F .text	0000000000000054              Sys_var_charptr::global_save_default(THD*, set_var*)
000000000082a1b0 g     F .text	00000000000000a7              reopen_fstreams
0000000000910366 g     F .text	0000000000000010              table_file_summary_by_instance::delete_all_rows()
0000000000ba7cfa g     F .text	000000000000008f              sslconnect
000000000081792c  w    F .text	0000000000000046              Item_func_convert_tz::~Item_func_convert_tz()
000000000070d6ca  w    F .text	0000000000000223              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long, unsigned long, unsigned long, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
000000000082d422  w    F .text	00000000000000be              User_var_log_event::User_var_log_event(THD*, char*, unsigned int, char*, unsigned long, Item_result, unsigned int, unsigned char)
000000000070ae7c  w    F .text	0000000000000162              Sys_var_set::Sys_var_set(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
00000000007526c0 g     F .text	00000000000000d7              Field_timestamp::Field_timestamp(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, TABLE_SHARE*, charset_info_st*)
00000000007bb87a  w    F .text	0000000000000056              Item_func_encrypt::Item_func_encrypt(Item*)
000000000079c8d0 g     F .text	00000000000000b3              Item_func_not_all::val_int()
00000000005d5918 g     F .text	00000000000003c0              mysql_rm_arc_files(THD*, st_my_dir*, char const*)
000000000120b600 g     O .data	0000000000000101              ctype_latin7_estonian_cs
00000000010e0b40 g     O .data	0000000000000190              tablespaces_fields_info
00000000008ffefa g     F .text	0000000000000027              safe_mutex_end
00000000005c3030 g     F .text	000000000000041a              THD::~THD()
00000000006db278  w    F .text	00000000000000bc              MY_LOCALE::MY_LOCALE(unsigned int, char const*, char const*, bool, st_typelib*, st_typelib*, st_typelib*, st_typelib*, unsigned int, unsigned int, unsigned int, unsigned int, char const*, my_locale_errmsgs*)
00000000008772bc  w    F .text	0000000000000046              Item_proc_int::~Item_proc_int()
0000000000893224  w    F .text	0000000000000079              String::write_at_position(int, unsigned int)
00000000006594a9  w    F .text	0000000000000025              Item::operator new(unsigned long, st_mem_root*)
00000000007de174 g     F .text	0000000000000278              Item_func_geometry_from_wkb::val_str(String*)
00000000009400aa g     F .text	0000000000000749              _mi_read_rnd_dynamic_record
0000000000908c02 g     F .text	0000000000000025              cleanup_table_share_hash()
00000000007c14c0  w    F .text	000000000000002d              Create_func_pow::Create_func_pow()
000000000061d541 g     F .text	0000000000000136              debug_sync_end()
000000000136aa60 g     O .data	00000000000000d8              my_charset_utf8mb4_handler
000000000079934a  w    F .text	0000000000000052              Item_cache::has_value()
00000000006f1eda g     F .text	0000000000000093              MDL_context::MDL_context()
00000000006d7324  w    F .text	0000000000000065              table_def::field_metadata(unsigned int) const
0000000000559a06  w    F .text	000000000000001a              I_List<i_string_pair>::get()
00000000007b1556  w    F .text	0000000000000046              Item_func_equal::~Item_func_equal()
000000000076059a g     F .text	0000000000000137              Field_bit::pack(unsigned char*, unsigned char const*, unsigned int, bool)
0000000000790b12 g     F .text	0000000000000067              Item_direct_ref::val_decimal(my_decimal*)
00000000012bc080 g     O .data	0000000000000400              page025data
0000000000893d0e  w    F .text	0000000000000060              Gis_read_stream::skip_char(char)
00000000005b0bc0  w    F .text	00000000000000dd              Hash_set<TABLE_LIST, &schema_set_get_key>::insert(TABLE_LIST*)
000000000073af6c  w    F .text	0000000000000038              Item_func_microsecond::Item_func_microsecond(Item*)
00000000006e6c77 g     F .text	00000000000001c6              check_mqh(THD*, unsigned int)
00000000005ce2ca  w    F .text	0000000000000045              String::c_ptr_quick()
00000000005e8b0e  w    F .text	0000000000000012              st_select_lex_unit::next_unit()
000000000073c21c  w    F .text	000000000000004a              sp_instr_hreturn::sp_instr_hreturn(unsigned int, sp_pcontext*, unsigned int)
00000000010ce860 g     O .data	00000000000021b0              my_long_options
00000000007984e4  w    F .text	0000000000000050              Item_outer_ref::used_tables() const
000000000095b588 g     F .text	00000000000005ad              _mi_get_pack_key
00000000007ae482  w    F .text	000000000000000f              Item_bool_func2::decimal_precision() const
000000000073c930  w    F .text	0000000000000038              Alter_table_repair_partition_statement::Alter_table_repair_partition_statement(LEX*)
0000000001370800 g     O .bss	0000000000000004              key_rwlock_LOCK_sys_init_connect
0000000001086660  w    O .data.rel.ro	0000000000000040              vtable for Eq_creator
0000000000899e24  w    F .text	0000000000000011              field_decimal::collect_enum()
00000000006a1ca0 g     F .text	0000000000000a78              multi_update::prepare(List<Item>&, st_select_lex_unit*)
00000000007b14b8  w    F .text	000000000000002b              Item_func_ge::~Item_func_ge()
000000000138e380 g     O .bss	0000000000000008              heap_open_list
000000000098290e  w    F .text	0000000000000014              ha_heap::keys_to_use_for_scanning()
0000000000564946 g     F .text	0000000000000058              Protocol_binary::store_date(st_mysql_time*)
0000000000708818  w    F .text	000000000000002b              PolyLock_rwlock::rdlock()
0000000000697ef6  w    F .text	0000000000000036              Discrete_interval::Discrete_interval()
00000000006f0876  w    F .text	0000000000000037              Delegate::write_lock()
00000000005cea94  w    F .text	000000000000001b              Name_resolution_context::~Name_resolution_context()
000000000073902c  w    F .text	000000000000002b              Item_func_isfalse::~Item_func_isfalse()
00000000005b11a2  w    F .text	0000000000000041              Alter_table_prelocking_strategy::~Alter_table_prelocking_strategy()
000000000070e9f4  w    F .text	0000000000000041              Sys_var_flagset::~Sys_var_flagset()
00000000006ba929  w    F .text	0000000000000063              my_decimal_precision_to_length(unsigned int, unsigned char, bool)
000000000075a198 g     F .text	0000000000000142              Field_varstring::sort_string(unsigned char*, unsigned int)
00000000007c1f4c  w    F .text	000000000000002d              Create_func_sqrt::Create_func_sqrt()
0000000000b999a9 g     F .text	000000000000080e              decimal_mul
00000000007661ca  w    F .text	000000000000006a              Field_year::Field_year(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*)
00000000008d0ee5 g     F .text	000000000000061c              my_search_option_files
00000000010c1228  w    O .data.rel.ro	0000000000000098              vtable for Write_rows_log_event
000000000108bce8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_get_system_var
000000000061b94c g     F .text	0000000000000053              Protocol_local::store(char const*, unsigned long, charset_info_st*)
000000000065c5d4  w    F .text	0000000000000026              List_iterator_fast<Item_equal>::List_iterator_fast(List<Item_equal>&)
00000000006edf7a g     F .text	00000000000002e8              Trans_delegate::after_commit(THD*, bool)
000000000136cc28 g     O .bss	0000000000000008              partition_hton
00000000007a6297 g     F .text	00000000000000d7              cmp_longlong(void*, in_longlong::packed_longlong*, in_longlong::packed_longlong*)
000000000087e8ec  w    F .text	000000000000002d              Lock_db_routines_error_handler::Lock_db_routines_error_handler()
00000000006f60f2  w    F .text	0000000000000026              MDL_ticket::~MDL_ticket()
0000000000698472  w    F .text	0000000000000041              Stored_program_creation_ctx::~Stored_program_creation_ctx()
00000000007ba8c6  w    F .text	000000000000004a              Item_func_char_length::Item_func_char_length(Item*)
000000000077a149 g     F .text	00000000000002a7              ha_show_status(THD*, handlerton*, ha_stat_type)
00000000007af074  w    F .text	0000000000000046              in_longlong::~in_longlong()
00000000008249c6 g     F .text	0000000000000061              MYSQL_BIN_LOG::update_log_index(st_log_info*, bool)
000000000098f088  w    F .text	0000000000000071              Mrg_attach_children_callback_param::Mrg_attach_children_callback_param(TABLE_LIST*, TABLE_LIST*, List<Mrg_child_def>&)
00000000007b295e g     F .text	000000000000006d              Create_func_benchmark::create(THD*, Item*, Item*)
00000000010a38a0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_like_range
000000000065cba4  w    F .text	0000000000000046              Item_null_result::~Item_null_result()
0000000000791b02 g     F .text	0000000000000070              Item_insert_value::print(String*, enum_query_type)
000000000070c77c  w    F .text	0000000000000034              Sys_var_have::global_value_ptr(THD*, st_mysql_lex_string*)
00000000007778c0 g     F .text	000000000000003e              handler::ha_delete_table(char const*)
000000000079adb1  w    F .text	0000000000000009              non-virtual thunk to Item_splocal::~Item_splocal()
00000000010efe32 g     O .data	0000000000000001              flag_events_waits_history_long
00000000013866c0 g     O .bss	0000000000000008              Create_func_release_lock::s_singleton
0000000000787eb5 g     F .text	0000000000000006              non-virtual thunk to Item_param::get_out_param_info() const
00000000005af3be  w    F .text	000000000000004d              TABLE_LIST::prepare_check_option(THD*)
0000000000809258  w    F .text	0000000000000028              Item_sum_variance::func_name() const
00000000007dd23a  w    F .text	0000000000000046              Item_func_shift_left::~Item_func_shift_left()
00000000005c0895 g     F .text	0000000000000039              thd_unlock_thread_count(THD*)
0000000001386698 g     O .bss	0000000000000008              Create_func_pointn::s_singleton
00000000007bc298  w    F .text	0000000000000040              Item_func_geometry_from_text::Item_func_geometry_from_text(Item*, Item*)
000000000056b1e8  w    F .text	0000000000000035              PolyLock::~PolyLock()
00000000007c2556  w    F .text	0000000000000041              Create_func_timediff::~Create_func_timediff()
000000000070cfaa  w    F .text	000000000000002d              List<set_var_base>::push_back(set_var_base*, st_mem_root*)
0000000000798874  w    F .text	0000000000000130              Item_copy::Item_copy(Item*)
000000000061b52a g     F .text	00000000000000c7              Protocol_local::store_column(void const*, unsigned long)
0000000000967b8f g     F .text	0000000000002278              rtree_key_cmp
00000000005a6788 g     F .text	0000000000000620              lock_tables(THD*, TABLE_LIST*, unsigned int, unsigned int)
00000000005cffac  w    F .text	000000000000001b              List<Key>::List()
000000000070e2ba  w    F .text	0000000000000150              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::do_check(THD*, set_var*)
000000000090ad48 g     F .text	00000000000000f4              PFS_engine_table::read_row(TABLE*, unsigned char*, Field**)
00000000007c12fe  w    F .text	000000000000002d              Create_func_period_diff::Create_func_period_diff()
00000000005af2e4  w    F .text	0000000000000033              TABLE::needs_reopen()
00000000007dc6b2  w    F .text	0000000000000046              Item_func_last_insert_id::~Item_func_last_insert_id()
0000000000844a74 g     F .text	000000000000006c              Table_map_log_event::~Table_map_log_event()
00000000009171d3  w    F .text	0000000000000042              increment_single_stat_chain(PFS_single_stat_chain*)
000000000074cf48 g     F .text	0000000000000145              Field_new_decimal::val_decimal(my_decimal*)
0000000000664c03 g     F .text	0000000000000076              schema_table_store_record(THD*, TABLE*)
00000000012189a0 g     O .data	0000000000000200              to_uni_hp8_bin
00000000007d5b72 g     F .text	0000000000000089              Item_func_get_system_var::field_type() const
00000000005c0f9f g     F .text	0000000000000442              thd_security_context
0000000000764314  w    F .text	000000000000000f              Field::row_pack_length() const
0000000000b74589 g     F .text	0000000000000280              _lf_dynarray_lvalue
00000000007b305c g     F .text	000000000000005d              Create_func_crosses::create(THD*, Item*, Item*)
0000000000598994  w    F .text	00000000000000b6              handler::ha_rnd_end()
0000000001394cec g     O .bss	0000000000000004              key_my_thread_var_suspend
00000000007bf198  w    F .text	000000000000002d              Create_func_field::Create_func_field()
00000000007e0da2  w    F .text	000000000000001f              Gis_read_stream::~Gis_read_stream()
000000000136cc51 g     O .bss	0000000000000001              trust_function_creators
00000000009ac4c0  w    F .text	0000000000000046              ha_innobase_add_index::~ha_innobase_add_index()
00000000007c0458  w    F .text	000000000000002d              Create_func_like_range_min::Create_func_like_range_min()
00000000007bdb54  w    F .text	000000000000002d              Create_func_bit_count::Create_func_bit_count()
00000000007ba202  w    F .text	0000000000000038              Item_func_asin::Item_func_asin(Item*)
00000000009800b4 g     F .text	000000000000016b              _ft_make_key
00000000006b9c1a g     F .text	0000000000000053              TABLE::mark_columns_needed_for_insert()
00000000005f4160 g     F .text	000000000000002e              sqlcom_can_generate_row_events(THD const*)
00000000005d1d3e  w    F .text	000000000000006a              st_select_lex_unit::~st_select_lex_unit()
000000000136fb90 g     O .bss	0000000000000008              master_retry_count
0000000000566f64  w    F .text	000000000000000f              Item::cols()
00000000007dd19c  w    F .text	000000000000002b              Item_func_bit_neg::~Item_func_bit_neg()
00000000010b4408  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_sum
0000000000849828  w    F .text	000000000000000f              Delete_rows_log_event::get_type_code()
00000000005afc8c  w    F .text	0000000000000077              Item_bool_func2::Item_bool_func2(Item*, Item*)
00000000007cab1c g     F .text	00000000000000b7              Item_func_sin::val_real()
0000000000893b04  w    F .text	0000000000000026              Gis_multi_line_string::~Gis_multi_line_string()
00000000009617c1 g     F .text	0000000000000182              _mi_ck_write_btree
0000000000752544 g     F .text	0000000000000061              Field_double::sort_string(unsigned char*, unsigned int)
0000000001069fa0  w    O .data.rel.ro	0000000000000088              vtable for st_select_lex_unit
00000000007c1cf4  w    F .text	000000000000002d              Create_func_sin::Create_func_sin()
00000000008c2266  w    F .text	0000000000000046              Item_nodeset_func_childbyname::~Item_nodeset_func_childbyname()
00000000007db30e  w    F .text	000000000000000f              Item_func_udf_decimal::result_type() const
0000000001069370  w    O .data.rel.ro	0000000000000028              vtable for GRANT_TABLE
0000000000831ae8 g     F .text	000000000000026a              Log_event::Log_event(char const*, Format_description_log_event const*)
0000000000768224  w    F .text	000000000000002b              Field_timestamp::~Field_timestamp()
00000000006e89cc g     F .text	0000000000000035              fill_query_profile_statistics_info(THD*, TABLE_LIST*, Item*)
0000000000905c81 g     F .text	000000000000069c              init_instruments(PFS_global_param const*)
0000000000781574 g     F .text	0000000000000075              Item_case_expr::this_item() const
00000000012cb580 g     O .data	00000000000000b0              my_charset_utf32_turkish_uca_ci
00000000005c9610 g     F .text	0000000000000097              select_dumpvar::send_eof()
00000000007e1c12  w    F .text	0000000000000023              Item_func_area::fix_length_and_dec()
00000000010a4a98  w    O .data.rel.ro	0000000000000398              vtable for Item_func_set_collation
000000000059c25f g     F .text	0000000000000011              cached_table_definitions()
0000000000886df2 g     F .text	000000000000009a              sp_instr_freturn::print(String*)
000000000073c676  w    F .text	0000000000000020              sp_pcontext::pop_label()
0000000000765e5c  w    F .text	000000000000001d              Field_null::store_decimal(my_decimal const*)
0000000000605af5 g     F .text	000000000000019a              negate_expression(THD*, Item*)
000000000089b3c2 g     F .text	0000000000000052              Server_side_cursor::~Server_side_cursor()
000000000078dec0 g     F .text	0000000000000116              Item_hex_string::safe_charset_converter(charset_info_st*)
000000000059b21e  w    F .text	000000000000001a              List<LEX_COLUMN>::pop()
000000000086b480 g     F .text	0000000000000124              QUICK_INDEX_MERGE_SELECT::add_info_string(String*)
00000000007fba8a g     F .text	000000000000003c              subselect_union_engine::upper_select_const_tables()
00000000007afbb2  w    F .text	0000000000000044              cmp_item_row::cmp_item_row()
00000000006d4756  w    F .text	0000000000000025              List<partition_element>::push_back(partition_element*)
00000000005a953a g     F .text	00000000000008d6              find_item_in_list(Item*, List<Item>&, unsigned int*, find_item_error_report_type, enum_resolution_type*)
0000000000851900 g     F .text	00000000000000fa              Write_rows_log_event_old::do_before_row_operations(Slave_reporting_capability const*)
000000000088b150 g     F .text	00000000000000c7              sp_rcontext::sp_rcontext(sp_pcontext*, Field*, sp_rcontext*)
00000000007d9346 g     F .text	0000000000000285              Item_func_sp::execute_impl(THD*)
00000000005ca199 g     F .text	000000000000001a              thd_charset
00000000007967f2  w    F .text	000000000000003c              Hybrid_type_traits_integer::val_str(Hybrid_type*, String*, unsigned char) const
000000000081b9d1 g     F .text	0000000000000201              check_if_log_table(unsigned long, char const*, unsigned long, char const*, bool)
00000000007fca54  w    F .text	0000000000000046              Item_allany_subselect::~Item_allany_subselect()
00000000007dd5ca  w    F .text	0000000000000046              Item_func_pow::~Item_func_pow()
000000000073bf48  w    F .text	000000000000003d              sp_instr_jump::sp_instr_jump(unsigned int, sp_pcontext*)
00000000007c08a0  w    F .text	0000000000000041              Create_func_log2::~Create_func_log2()
0000000001370738 g     O .bss	0000000000000008              violet_log_file
00000000008523b2  w    F .text	000000000000000f              Update_rows_log_event_old::get_type_code()
00000000005c88fe g     F .text	000000000000000f              Statement::type() const
00000000005d04be  w    F .text	0000000000000070              List<Key_part_spec>::delete_elements()
00000000005b9cb6 g     F .text	0000000000000151              Query_cache::split_block(Query_cache_block*, unsigned long)
00000000007b6a3c g     F .text	0000000000000050              Create_func_uncompress::create(THD*, Item*)
0000000000788438 g     F .text	000000000000004e              Item_copy_int::save_in_field(Field*, bool)
00000000008898e2  w    F .text	000000000000002b              sp_instr_cfetch::~sp_instr_cfetch()
00000000005cee5e  w    F .text	00000000000000ad              Query_tables_list::stmt_accessed_table(Query_tables_list::enum_stmt_accessed_table)
00000000007bf676  w    F .text	0000000000000041              Create_func_geometry_from_wkb::~Create_func_geometry_from_wkb()
00000000012650e0 g     O .data	0000000000000100              pl01
0000000000816652  w    F .text	0000000000000011              Item_func_now_local::func_name() const
000000000090df14  w    F .text	000000000000001b              PFS_simple_index::set_at(PFS_simple_index const*)
0000000000883df6 g     F .text	00000000000001c7              sp_head::reset_lex(THD*)
0000000000566ffa  w    F .text	000000000000000f              Item::get_settable_routine_parameter()
0000000000598294  w    F .text	0000000000000015              base_list::head()
0000000001372020 g     O .bss	0000000000000058              table_def_cache
0000000000000000       F *UND*	0000000000000000              stpcpy@@GLIBC_2.2.5
00000000005c0d82 g     F .text	0000000000000042              thd_enter_cond
00000000007adedc  w    F .text	0000000000000011              Item_func_bit_and::func_name() const
0000000000678848  w    F .text	0000000000000025              List<char>::push_front(char*)
000000000061a01e g     F .text	00000000000004a8              Prepared_statement::swap_prepared_statement(Prepared_statement*)
00000000010e15a0 g     O .data	0000000000001470              sqlstate_map
0000000000b71348  w    F .text	00000000000000aa              ha_partition::lock_auto_increment()
00000000005b1026  w    F .text	0000000000000026              List_iterator<Item_func_set_user_var>::List_iterator(List<Item_func_set_user_var>&)
00000000007e1c00  w    F .text	0000000000000011              Item_func_area::func_name() const
0000000000815aac  w    F .text	0000000000000030              Item_func_dayofyear::fix_length_and_dec()
0000000000989bce g     F .text	0000000000000925              heap_create
00000000010a4700  w    O .data.rel.ro	0000000000000398              vtable for Item_func_charset
0000000001374b20 g     O .bss	0000000000000060              my_locale_nl_NL
00000000007bbc80  w    F .text	0000000000000052              Item_func_unhex::Item_func_unhex(Item*)
00000000005b0138  w    F .text	0000000000000088              THD::activate_stmt_arena_if_needed(Query_arena*)
000000000136fec0 g     O .bss	0000000000000860              sql_statement_names
00000000007be838  w    F .text	000000000000002d              Create_func_dayofyear::Create_func_dayofyear()
00000000007c30e0  w    F .text	0000000000000046              Item_func_like_range_max::~Item_func_like_range_max()
0000000000851d16 g     F .text	000000000000004e              Delete_rows_log_event_old::do_after_row_operations(Slave_reporting_capability const*, int)
00000000009104cc g     F .text	00000000000000af              table_file_summary_by_instance::rnd_pos(void const*)
000000000065c934  w    F .text	0000000000000025              Bitmap<4096u>::operator==(Bitmap<4096u> const&) const
0000000000678a5e  w    F .text	000000000000001b              List<st_foreign_key_info>::List()
000000000106f3d0  w    O .data.rel.ro	0000000000000290              vtable for Field_bit
00000000010efa40 g     O .data	0000000000000010              table_rwlock_instances::m_field_def
000000000057a8e2  w    F .text	0000000000000046              Log_event::~Log_event()
00000000007be2f2  w    F .text	000000000000002d              Create_func_cos::Create_func_cos()
00000000007e91fa g     F .text	0000000000000416              Item_func_ltrim::val_str(String*)
00000000006abfca g     F .text	000000000000005c              Object_creation_ctx::restore_env(THD*, Object_creation_ctx*)
000000000080a5be  w    F .text	0000000000000046              Item_sum_and::~Item_sum_and()
000000000067a0c6 g     F .text	000000000000004c              String::numchars()
000000000083ded2 g     F .text	00000000000002cb              Slave_log_event::Slave_log_event(THD*, Relay_log_info*)
00000000007e2d3e g     F .text	0000000000000134              Item_row::update_used_tables()
000000000067d261 g     F .text	00000000000001b7              filename_to_tablename(char const*, char*, unsigned int, bool)
0000000000559bc2  w    F .text	000000000000001f              base_ilist::~base_ilist()
00000000007dd156  w    F .text	0000000000000046              Item_func_bit_neg::~Item_func_bit_neg()
00000000009854b8 g     F .text	000000000000008d              hp_rb_null_key_length
000000000077daee  w    F .text	000000000000000b              hash_filo_element::hash_filo_element()
000000000065c408  w    F .text	0000000000000026              List_iterator<Item_outer_ref>::List_iterator(List<Item_outer_ref>&)
000000000095937b g     F .text	000000000000028e              _mi_bin_search
0000000001069470  w    O .data.rel.ro	0000000000000028              vtable for Table_check_intact
00000000010b61c8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_timestamp_diff
0000000000888eee  w    F .text	000000000000005e              sp_instr::~sp_instr()
000000000076572e  w    F .text	0000000000000022              Field_medium::key_type() const
0000000001086c40  w    O .data.rel.ro	0000000000000030              vtable for Create_func_substr_index
0000000000000000       F *UND*	0000000000000000              pthread_detach@@GLIBC_2.2.5
00000000007c09cc  w    F .text	0000000000000041              Create_func_ltrim::~Create_func_ltrim()
0000000000766300  w    F .text	000000000000000f              Field_date::cmp_type() const
00000000005592cc  w    F .text	0000000000000041              Gt_creator::~Gt_creator()
000000000080ec02 g     F .text	00000000000005c1              get_interval_value(Item*, interval_type, String*, INTERVAL*)
00000000006e8c2e g     F .text	000000000000004e              PROF_MEASUREMENT::PROF_MEASUREMENT(QUERY_PROFILE*, char const*)
0000000001208b20 g     O .data	0000000000000101              ctype_koi8r_general_ci
0000000000690758  w    F .text	000000000000003d              Alter_table_prelocking_strategy::Alter_table_prelocking_strategy(Alter_info*)
00000000010b2cf8  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_max
00000000005ce4a6  w    F .text	000000000000000b              xid_t::xid_t()
000000000070bcd0  w    F .text	0000000000000033              Sys_var_debug_sync::global_save_default(THD*, set_var*)
0000000000690812  w    F .text	000000000000043d              partition_info::partition_info()
000000000067f987 g     F .text	00000000000002d5              execute_ddl_log_recovery()
00000000006ba7b6 g     F .text	0000000000000075              is_simple_order(st_order*)
0000000000889844  w    F .text	000000000000002b              sp_instr_cclose::~sp_instr_cclose()
00000000005e96ca  w    F .text	0000000000000026              I_List<Delayed_insert>::append(Delayed_insert*)
000000000056499e g     F .text	000000000000020e              Protocol_binary::store_time(st_mysql_time*)
00000000005e98d2  w    F .text	0000000000000026              List_iterator_fast<Item>::init(List<Item>&)
0000000000708d4a  w    F .text	000000000000003c              Sys_var_enum::session_update(THD*, set_var*)
00000000007bc048  w    F .text	0000000000000038              Item_func_inet_ntoa::Item_func_inet_ntoa(Item*)
00000000007ac9c6 g     F .text	0000000000000053              Item_func_ge::negated_item()
00000000005b4900 g     F .text	00000000000013d6              Query_cache::send_result_to_client(THD*, char*, unsigned int)
00000000007a89a8 g     F .text	00000000000000cf              Item_func_in::print(String*, enum_query_type)
0000000000b806a8 g     F .text	0000000000000136              my_strcasecmp_mb
00000000005673a8  w    F .text	000000000000002e              Item_int::decimal_precision() const
000000000073a464  w    F .text	0000000000000038              Item_func_hour::Item_func_hour(Item*)
0000000000910696 g     F .text	00000000000001e7              table_file_summary_by_instance::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000008904dc g     F .text	0000000000000162              Gis_multi_line_string::get_data_size() const
00000000005b1272  w    F .text	0000000000000041              MDL_deadlock_discovery_repair_handler::~MDL_deadlock_discovery_repair_handler()
0000000000900609 g     F .text	0000000000000020              delete_tree
00000000007c2502  w    F .text	0000000000000026              Create_func_time_to_sec::~Create_func_time_to_sec()
0000000000796daa  w    F .text	000000000000003b              Item_ident_for_show::val_real()
0000000000694410 g     F .text	0000000000000189              Table_triggers_list::~Table_triggers_list()
000000000065d98e g     F .text	0000000000000277              mysqld_show_authors(THD*)
00000000010f15a0 g     O .data	0000000000000008              myisam_max_temp_length
000000000077b84a  w    F .text	000000000000000f              handler::extra_rec_buf_length() const
00000000007f3df0  w    F .text	0000000000000058              Item_func_des_decrypt::~Item_func_des_decrypt()
00000000009110e2 g     F .text	0000000000000028              table_setup_consumers::create()
00000000005bd19c g     F .text	0000000000000191              Query_cache::cache_dump()
00000000007f2c5c  w    F .text	0000000000000046              Item_func_export_set::~Item_func_export_set()
0000000001096da8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_ln
000000000138cfc0 g     O .bss	0000000000000008              pfs_editable_acl
000000000136a480 g     O .data	00000000000000d8              my_charset_utf8_handler
00000000005f1f5e  w    F .text	0000000000000031              SQL_I_List<Item_trigger_field>::empty()
000000000078d432 g     F .text	000000000000018a              Item_float::Item_float(char const*, unsigned int)
00000000007c28ac  w    F .text	000000000000002d              Create_func_uncompressed_length::Create_func_uncompressed_length()
000000000073797e  w    F .text	000000000000006e              Item_ref::Item_ref(Name_resolution_context*, char const*, char const*, char const*)
00000000010c1c00  w    O .data.rel.ro	0000000000000078              vtable for Log_event
00000000006aadd1  w    F .text	000000000000003e              hexchar_to_int(char)
0000000000588859 g     F .text	0000000000000093              grant_free()
00000000006bac3a  w    F .text	0000000000000029              Field_iterator_natural_join::create_item(THD*)
000000000097d177 g     F .text	000000000000032a              ft_boolean_read_next
00000000008d51db g     F .text	0000000000000051              list_free
0000000001087a80  w    O .data.rel.ro	0000000000000030              vtable for Create_func_geometry_from_text
000000000073f7f4 g     F .text	0000000000000505              cli_read_rows
0000000000659b8a  w    F .text	0000000000000043              Item_func_rollup_const::val_real()
0000000000598d3c  w    F .text	000000000000001b              SQL_I_List<Sroutine_hash_entry>::~SQL_I_List()
000000000079849c  w    F .text	0000000000000047              Item_outer_ref::save_in_result_field(bool)
000000000065a97a  w    F .text	0000000000000017              QUICK_SELECT_I::is_valid()
00000000007bfbbc  w    F .text	0000000000000041              Create_func_inet_aton::~Create_func_inet_aton()
00000000005d09dc  w    F .text	000000000000001b              List<Alter_column>::List()
000000000059be31 g     F .text	000000000000000f              cached_open_tables()
000000000088798a g     F .text	00000000000000c2              sp_instr_cclose::execute(THD*, unsigned int*)
00000000005ef728 g     F .text	0000000000000200              st_select_lex_unit::set_limit(st_select_lex*)
00000000012b3c80 g     O .data	0000000000000600              page00Edata
000000000065a13a  w    F .text	0000000000000055              Item_cond::Item_cond()
000000000095c534 g     F .text	00000000000000e6              _mi_keylength
00000000010eb300 g     O .data	0000000000000008              unknown_sqlstate
000000000070ce44  w    F .text	0000000000000041              Sys_var_enum::~Sys_var_enum()
00000000008f8364 g     F .text	0000000000000089              queue_remove
00000000008491f4  w    F .text	0000000000000032              Stop_log_event::do_shall_skip(Relay_log_info*)
000000000136fbf0 g     O .bss	0000000000000008              pidfile_name_ptr
0000000000809f86  w    F .text	000000000000002b              Item_func_group_concat::reset_field()
00000000007aeb42  w    F .text	000000000000000f              Item_func_between::decimal_precision() const
0000000000618cb8 g     F .text	000000000000002b              Prepared_statement::~Prepared_statement()
000000000082cbaa  w    F .text	000000000000001d              Log_event_handler::Log_event_handler()
00000000007dadd6  w    F .text	0000000000000011              Item_func_field::func_name() const
00000000007aef22  w    F .text	0000000000000012              in_vector::value_to_item(unsigned int, Item*)
000000000090de98  w    F .text	0000000000000026              PFS_engine_table::~PFS_engine_table()
000000000079954a  w    F .text	000000000000003d              Item_cache_real::Item_cache_real()
0000000000799044  w    F .text	000000000000000f              Item_trigger_field::used_tables() const
00000000005e8a34  w    F .text	0000000000000063              Name_resolution_context_state::save_state(Name_resolution_context*, TABLE_LIST*)
00000000005c2112 g     F .text	000000000000005f              THD::raise_warning(unsigned int)
000000000067840c  w    F .text	000000000000001c              thread_info::operator new(unsigned long)
00000000007e2cbe g     F .text	000000000000007f              Item_row::split_sum_func(THD*, Item**, List<Item>&)
000000000059b606  w    F .text	0000000000000036              Dynamic_array<GRANT_NAME*>::Dynamic_array(unsigned int, unsigned int)
0000000000000000       F *UND*	0000000000000000              pthread_sigmask@@GLIBC_2.2.5
0000000000904e6e g     F .text	0000000000000109              ha_perfschema::rnd_next(unsigned char*)
00000000007bc11c  w    F .text	000000000000004a              Item_func_uncompressed_length::Item_func_uncompressed_length(Item*)
0000000000799dcc  w    F .text	0000000000000013              List_iterator_fast<Item_field>::replace(Item_field*)
00000000007f29ae  w    F .text	000000000000002b              Item_func_uncompress::~Item_func_uncompress()
000000000055fbac  w    F .text	0000000000000032              String::set(unsigned long long, charset_info_st*)
00000000005dd410  w    F .text	0000000000000013              Sql_handler_lock_error_handler::init()
00000000010ca0f8  w    O .data.rel.ro	0000000000000030              vtable for PFS_internal_schema_access
000000000079659e  w    F .text	0000000000000032              Hybrid_type_traits::val_int(Hybrid_type*, bool) const
000000000055883e  w    F .text	0000000000000026              base_list_iterator::base_list_iterator(base_list&)
00000000008845ea g     F .text	00000000000000e2              sp_head::set_info(long long, long long, st_sp_chistics*, unsigned long)
00000000008d52f8 g     F .text	000000000000005d              list_walk
0000000000605da7 g     F .text	000000000000008b              create_definer(THD*, st_mysql_lex_string*, st_mysql_lex_string*)
000000000082d1bc  w    F .text	000000000000005f              Intvar_log_event::Intvar_log_event(THD*, unsigned char, unsigned long long)
00000000008ff9dd g     F .text	0000000000000268              safe_cond_wait
000000000077ce28 g     F .text	00000000000000ae              reset_host_errors(char const*)
0000000000626c5c  w    F .text	0000000000000014              MYSQL_BIN_LOG::get_log_cond()
00000000006ca554 g     F .text	0000000000000183              Event_job_data::construct_drop_event_sql(THD*, String*)
00000000010c03f8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_to_days
00000000010ce840 g     O .data	0000000000000008              mysql_real_data_home_ptr
0000000000000000       F *UND*	0000000000000000              inflateEnd
000000000057b368  w    F .text	000000000000002b              sp_cache::lookup(char*, unsigned int)
000000000077e3ec g     F .text	000000000000013a              Item::val_str_ascii(String*)
00000000010811d8  w    O .data.rel.ro	0000000000000048              vtable for cmp_item_datetime
000000000079a1f4  w    F .text	0000000000000058              Item_cache_decimal::~Item_cache_decimal()
0000000000b5a83c g     F .text	0000000000000142              ha_tina::ha_tina(handlerton*, TABLE_SHARE*)
00000000005c8656 g     F .text	000000000000006f              select_dumpvar::prepare(List<Item>&, st_select_lex_unit*)
000000000065a324  w    F .text	000000000000002a              Item_equal_iterator::operator++(int)
00000000007c2366  w    F .text	000000000000002d              Create_func_tan::Create_func_tan()
0000000000764540  w    F .text	0000000000000027              Field::real_type() const
00000000005b045b  w    F .text	000000000000002f              find_table_in_global_list(TABLE_LIST*, char const*, char const*)
0000000000000000       F *UND*	0000000000000000              fileno@@GLIBC_2.2.5
000000000061f92d g     F .text	0000000000000188              debug_sync_value_ptr(THD*)
00000000008933c4  w    F .text	0000000000000035              Geometry::~Geometry()
000000000080f28e g     F .text	00000000000000a8              Item_date::val_int()
00000000010c4020  w    O .data.rel.ro	00000000000000d0              vtable for Gis_polygon
00000000005c03d6 g     F .text	0000000000000064              free_user_var
0000000000790160 g     F .text	00000000000001e6              Item_ref::val_bool_result()
00000000007dc4fb  w    F .text	0000000000000009              non-virtual thunk to Item_func_get_user_var::~Item_func_get_user_var()
00000000007d3990 g     F .text	0000000000000082              Item_func_set_user_var::val_real()
00000000008170d6  w    F .text	0000000000000011              Item_func_microsecond::func_name() const
0000000000000000       F *UND*	0000000000000000              fdopen@@GLIBC_2.2.5
00000000007dd364  w    F .text	000000000000002b              Item_func_tan::~Item_func_tan()
000000000082459c g     F .text	000000000000042a              MYSQL_BIN_LOG::purge_first_log(Relay_log_info*, bool)
00000000007aefc6  w    F .text	000000000000000f              in_string::result_type()
00000000007f5dfa g     F .text	0000000000000072              Item_singlerow_subselect::bring_value()
000000000096723e g     F .text	000000000000046f              rtree_estimate
00000000005d3b56 g     F .text	000000000000058b              mysql_create_db(THD*, char*, st_ha_create_information*, bool)
00000000007b667c g     F .text	0000000000000058              Create_func_strcmp::create(THD*, Item*, Item*)
00000000005ef536 g     F .text	000000000000002c              LEX::can_not_use_merged()
00000000008dc6a5 g     F .text	00000000000007a4              init_key_cache
0000000000797b22  w    F .text	000000000000004c              Item_ref::update_used_tables()
0000000001370794 g     O .bss	0000000000000004              key_LOCK_server_started
000000000080a75a  w    F .text	000000000000002b              Item_sum_max::~Item_sum_max()
000000000106b430  w    O .data.rel.ro	0000000000000030              vtable for ACL_internal_schema_access
000000000088cd88  w    F .text	0000000000000070              Sql_condition_info::set(unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*)
0000000000797f98  w    F .text	000000000000006e              Item_ref::null_inside()
00000000005cd468 g     F .text	0000000000000329              THD::binlog_query(THD::enum_binlog_query_type, char const*, unsigned long, bool, bool, bool, int)
00000000007f5128 g     F .text	0000000000000039              Item_subselect::fix_length_and_dec()
0000000000607ef8  w    F .text	000000000000004c              SQL_I_List<TABLE_LIST>::link_in_list(TABLE_LIST*, TABLE_LIST**)
000000000136fc60 g     O .bss	0000000000000210              query_cache
0000000000b5db4c g     F .text	000000000000023d              ha_tina::check(THD*, st_ha_check_opt*)
0000000000766c68  w    F .text	000000000000000f              Field_varstring::match_collation_to_optimize_range() const
00000000007bd714  w    F .text	0000000000000026              Create_func_aes_decrypt::~Create_func_aes_decrypt()
0000000000777984 g     F .text	000000000000004e              handler::ha_create_handler_files(char const*, char const*, int, st_ha_create_information*)
00000000008089aa  w    F .text	0000000000000058              Item_sum::~Item_sum()
0000000000709820  w    F .text	0000000000000033              Sys_var_proxy_user::global_update(THD*, set_var*)
00000000007c505a g     F .text	00000000000000a2              Item_real_func::val_str(String*)
00000000007bf22e  w    F .text	000000000000002d              Create_func_find_in_set::Create_func_find_in_set()
0000000001394cf0 g     O .bss	0000000000000004              key_THR_LOCK_lock
000000000065be29  w    F .text	000000000000001c              COND_CMP::operator new(unsigned long)
0000000000765750  w    F .text	000000000000003c              Field_medium::reset()
00000000006c7aba g     F .text	0000000000000144              Event_queue_element::Event_queue_element()
0000000000893420  w    F .text	0000000000000012              Geometry::operator new(unsigned long, void*)
0000000000871ace  w    F .text	0000000000000011              Bitmap<64u>::to_ulonglong() const
000000000121aa60 g     O .data	0000000000000101              ctype_cp850_bin
000000000062c4fc g     F .text	0000000000000073              JOIN::init_save_join_tab()
00000000007dae22  w    F .text	0000000000000011              Item_func_find_in_set::func_name() const
00000000006064bc  w    F .text	0000000000000090              String::shrink(unsigned int)
00000000005e82ce g     F .text	0000000000000126              select_create::send_eof()
00000000007643a6  w    F .text	0000000000000027              Field::max_data_length() const
00000000012cbd00 g     O .data	00000000000000b0              my_charset_utf32_sinhala_uca_ci
000000000079aa14  w    F .text	0000000000000009              non-virtual thunk to Item_param::~Item_param()
00000000006d5816 g     F .text	000000000000013e              is_conversion_ok(int, Relay_log_info*)
00000000007fb9a0 g     F .text	000000000000001f              subselect_union_engine::exclude()
000000000074ce4a g     F .text	00000000000000fd              Field_new_decimal::val_int()
00000000005b0ecc  w    F .text	0000000000000026              List_iterator<String>::List_iterator(List<String>&)
000000000108e0e0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_udf_str
00000000013707e0 g     O .bss	0000000000000004              key_LOG_INFO_lock
0000000001386678 g     O .bss	0000000000000008              Create_func_overlaps::s_singleton
00000000007bdd44  w    F .text	0000000000000041              Create_func_centroid::~Create_func_centroid()
00000000007519b4 g     F .text	0000000000000100              Field_double::store(char const*, unsigned int, charset_info_st*)
00000000007ceed0 g     F .text	00000000000000f8              udf_handler::cleanup()
00000000007c199e  w    F .text	0000000000000041              Create_func_rpad::~Create_func_rpad()
000000000081031c g     F .text	00000000000000f1              Item_func_date_format::format_length(String const*)
00000000008f6c35 g     F .text	0000000000000016              _my_thread_var
00000000007be3b6  w    F .text	0000000000000041              Create_func_cot::~Create_func_cot()
00000000007e26aa  w    F .text	0000000000000046              Item_func_as_wkt::~Item_func_as_wkt()
000000000136ce00 g     O .bss	0000000000000008              max_long_data_size
000000000074db72 g     F .text	00000000000000ac              Field_tiny::val_real()
00000000007bcf40  w    F .text	0000000000000035              Create_func::~Create_func()
00000000005e86ae  w    F .text	0000000000000011              Discrete_interval::minimum() const
0000000000708ede  w    F .text	0000000000000127              Sys_var_mybool::Sys_var_mybool(char const*, char const*, int, long, unsigned long, CMD_LINE, char, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
0000000000848f8e  w    F .text	0000000000000058              Load_log_event::get_data_size()
0000000000839500 g     F .text	0000000000000144              Load_log_event::write_data_header(st_io_cache*)
000000000081b8a0 g     F .text	000000000000004d              Silence_log_table_errors::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
000000000078b126 g     F .text	0000000000000045              Item_field::subst_argument_checker(unsigned char**)
000000000106ceb8  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_mybool
00000000008e88bf g     F .text	0000000000000300              my_multi_malloc
00000000007abb80 g     F .text	00000000000000b1              Item_func_regex::cleanup()
000000000073a202  w    F .text	0000000000000038              Item_func_charset::Item_func_charset(Item*)
000000000137087c g     O .bss	0000000000000004              key_thread_bootstrap
0000000000559aa2  w    F .text	000000000000001b              I_List<Statement>::empty()
00000000007c032c  w    F .text	000000000000002d              Create_func_least::Create_func_least()
0000000000748e60 g     F .text	00000000000000ae              Field::hash(unsigned long*, unsigned long*)
00000000005ee12e g     F .text	0000000000000083              st_select_lex_node::fast_exclude()
000000000136e458 g     O .bss	0000000000000008              bootstrap_file
000000000061c3ba  w    F .text	0000000000000046              st_lex_local::~st_lex_local()
000000000138d5e0 g     O .bss	0000000000000100              table_ews_global_by_event_name::m_table_lock
0000000000798a24  w    F .text	000000000000000f              Item_copy::const_item() const
00000000007964e0  w    F .text	000000000000001c              Hybrid_type_traits::set_zero(Hybrid_type*) const
000000000136cca0 g     O .bss	0000000000000008              thread_created
0000000000755074 g     F .text	00000000000000cf              Field_date::store(double)
00000000007c19e0  w    F .text	0000000000000026              Create_func_rpad::~Create_func_rpad()
0000000000000000       F *UND*	0000000000000000              readlink@@GLIBC_2.2.5
000000000073a3e4  w    F .text	0000000000000038              Item_func_dayofmonth::Item_func_dayofmonth(Item*)
000000000136fb98 g     O .bss	0000000000000008              master_info_file
000000000064947d g     F .text	0000000000000073              join_read_next_same_or_null(READ_RECORD*)
00000000005ee010 g     F .text	0000000000000043              st_select_lex_node::include_standalone(st_select_lex_node*, st_select_lex_node**)
000000000136cd30 g     O .bss	0000000000000008              binlog_cache_size
00000000007c320a  w    F .text	000000000000002b              Item_func_bit_length::~Item_func_bit_length()
00000000005f4238 g     F .text	000000000000017d              execute_init_command(THD*, st_mysql_lex_string*, st_mysql_rwlock*)
000000000076816c  w    F .text	0000000000000046              Field_time::~Field_time()
00000000012cace0 g     O .data	00000000000000b0              my_charset_utf8mb4_hungarian_uca_ci
000000000077b938  w    F .text	000000000000002f              handler::exec_bulk_update(unsigned int*)
00000000005589f0  w    F .text	000000000000002b              ilink::~ilink()
000000000074cd54 g     F .text	00000000000000f5              Field_new_decimal::val_real()
00000000006f1b54 g     F .text	0000000000000196              MDL_map::move_from_hash_to_lock_mutex(MDL_lock*)
00000000005e87a2  w    F .text	0000000000000035              TABLEOP_HOOKS::~TABLEOP_HOOKS()
0000000000852c74 g     F .text	00000000000001b2              decimal_operation_results(int)
000000000087e75c  w    F .text	0000000000000044              Stored_routine_creation_ctx::Stored_routine_creation_ctx(THD*)
000000000067a628 g     F .text	0000000000000057              String::qs_append(char const*, unsigned int)
00000000008c1248  w    F .text	000000000000004e              Item_nodeset_func_selfbyname::Item_nodeset_func_selfbyname(Item*, char const*, unsigned int, String*)
00000000007402b3 g     F .text	00000000000000ae              mysql_get_ssl_cipher
0000000000873d6a  w    F .text	0000000000000026              List_iterator<QUICK_RANGE>::List_iterator(List<QUICK_RANGE>&)
000000000078886c g     F .text	0000000000000086              Item_copy_decimal::copy()
0000000000798de4  w    F .text	0000000000000046              Item_field::~Item_field()
00000000007daa4a  w    F .text	0000000000000046              Item_dec_func::~Item_dec_func()
0000000000942f19 g     F .text	00000000000000cb              mi_report_error
000000000073b82e  w    F .text	0000000000000165              set_var::set_var(enum_var_type, sys_var*, st_mysql_lex_string const*, Item*)
0000000000793114 g     F .text	0000000000000082              Item_cache_int::val_decimal(my_decimal*)
000000000075deb8 g     F .text	0000000000000185              Field_set::val_str(String*, String*)
0000000000566b4e  w    F .text	000000000000000f              Item::is_bool_func()
00000000008c0890  w    F .text	000000000000005d              XPathFilter::append_element(unsigned int, unsigned int)
0000000000567384  w    F .text	0000000000000024              Item_int::neg()
00000000006b4f1d g     F .text	000000000000010c              check_column_name(char const*)
00000000005caade g     F .text	0000000000000074              THD::leave_locked_tables_mode()
0000000000848e96  w    F .text	0000000000000015              Load_log_event::get_db()
000000000065c51c  w    F .text	0000000000000026              List_iterator<Item_field>::List_iterator(List<Item_field>&)
0000000000738ea4  w    F .text	000000000000002b              Item_func_istrue::~Item_func_istrue()
00000000008087d2  w    F .text	0000000000000044              Item_sum::no_rows_in_result()
00000000006eb116 g     F .text	000000000000014e              Event_parse_data::Event_parse_data()
00000000010e2d80 g     O .data	0000000000000010              MYSQL_SCHEMA_NAME
00000000005ab5d5 g     F .text	000000000000044c              setup_wild(THD*, TABLE_LIST*, List<Item>&, List<Item>*, unsigned int)
0000000000796450  w    F .text	000000000000007f              DTCollation::derivation_name() const
00000000005e873e  w    F .text	0000000000000045              String::String(unsigned int)
000000000073841c  w    F .text	0000000000000040              Item_func_num1::Item_func_num1(Item*, Item*)
00000000005ce600  w    F .text	000000000000001f              Warning_info::inc_current_row_for_warning()
000000000090defc  w    F .text	0000000000000017              PFS_simple_index::PFS_simple_index(unsigned int)
00000000007d4f6a g     F .text	0000000000000014              Item_func_get_user_var::result_type() const
00000000006ccace g     F .text	00000000000000f8              Events::drop_schema_events(THD*, char*)
000000000088970e  w    F .text	000000000000000b              sp_instr_cpush::cleanup_stmt()
000000000091329c  w    F .text	0000000000000026              table_rwlock_instances::~table_rwlock_instances()
000000000075c11e g     F .text	0000000000000120              Field_blob::key_cmp(unsigned char const*, unsigned int)
000000000076619e  w    F .text	000000000000002b              Field_tiny::~Field_tiny()
00000000008180b6  w    F .text	000000000000002b              Item_func_yearweek::~Item_func_yearweek()
00000000010c9a68  w    O .data.rel.ro	0000000000000028              vtable for Alter_table_truncate_partition_statement
00000000012be280 g     O .data	0000000000000600              page02Bdata
00000000010eee14 g     O .data	0000000000000004              my_umask_dir
00000000009123b0 g     F .text	0000000000000071              table_mutex_instances::table_mutex_instances()
00000000005af03e  w    F .text	0000000000000012              handler::ha_table_flags() const
000000000073cc36  w    F .text	0000000000000025              List<my_var>::push_back(my_var*)
00000000007bb106  w    F .text	000000000000002d              Item_func_uuid_short::Item_func_uuid_short()
00000000007bc538  w    F .text	0000000000000038              Item_func_issimple::Item_func_issimple(Item*)
00000000007bd60e  w    F .text	000000000000002d              Create_func_aes_encrypt::Create_func_aes_encrypt()
0000000000764324  w    F .text	0000000000000032              Field::save_field_metadata(unsigned char*)
00000000010c44d0  w    O .data.rel.ro	0000000000000060              vtable for field_real
00000000005f1dfe  w    F .text	000000000000001b              List<List<Item> >::List()
000000000077bab8  w    F .text	000000000000000f              handler::ft_init()
000000000073a14e  w    F .text	0000000000000073              Item_func_conv_charset::Item_func_conv_charset(Item*, charset_info_st*)
0000000000739b2a  w    F .text	0000000000000062              Item_func_insert::Item_func_insert(Item*, Item*, Item*, Item*)
0000000000579fa2  w    F .text	0000000000000014              MYSQL_ERROR::get_sql_errno() const
00000000005d1d3e  w    F .text	000000000000006a              st_select_lex_unit::~st_select_lex_unit()
00000000006068e2  w    F .text	0000000000000096              Item_null::Item_null(char*)
0000000001098b78  w    O .data.rel.ro	00000000000003c8              vtable for Item_func_additive_op
000000000098600b g     F .text	000000000000010d              heap_open_from_share_and_register
000000000091f1d0 g     F .text	000000000000009d              ha_myisam::index_last(unsigned char*)
00000000006df906  w    F .text	0000000000000035              TC_LOG::~TC_LOG()
00000000007da044  w    F .text	00000000000000b5              udf_handler::val(char*)
0000000001386398 g     O .bss	0000000000000008              Create_func_bit_length::s_singleton
000000000138cc70 g     O .bss	0000000000000008              rwlock_array
0000000001386588 g     O .bss	0000000000000008              Create_func_isnull::s_singleton
0000000000767f78  w    F .text	000000000000002b              Field_string::~Field_string()
0000000000889080  w    F .text	0000000000000056              sp_instr_set::~sp_instr_set()
000000000089b5ca g     F .text	00000000000002ba              Materialized_cursor::send_result_set_metadata(THD*, List<Item>&)
000000000106c6c0  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_have
000000000080a7f8  w    F .text	0000000000000046              Item_sum_std::~Item_sum_std()
0000000001074750  w    O .data.rel.ro	0000000000000388              vtable for Item_cache_row
00000000008d3bcd g     F .text	000000000000017c              my_hash_first_from_hash_value
00000000007d0726 g     F .text	00000000000000a9              Item_func_udf_int::val_int()
00000000008c2536  w    F .text	0000000000000058              Item_func_xpath_count::~Item_func_xpath_count()
00000000008e4f0a g     F .text	0000000000000037              system_filename
0000000000777b98 g     F .text	0000000000000263              handler::index_next_same(unsigned char*, unsigned char const*, unsigned int)
00000000007c2942  w    F .text	000000000000002d              Create_func_unhex::Create_func_unhex()
00000000007c1746  w    F .text	0000000000000041              Create_func_release_lock::~Create_func_release_lock()
00000000007f2dc4  w    F .text	0000000000000058              Item_func_unhex::~Item_func_unhex()
000000000056b3e8  w    F .text	0000000000000038              AutoRLock::~AutoRLock()
00000000006dc1ac g     F .text	00000000000001af              Relay_log_info::~Relay_log_info()
000000000073a0a8  w    F .text	0000000000000053              Item_func_char::Item_func_char(List<Item>&, charset_info_st*)
00000000005ef3a4 g     F .text	000000000000014b              LEX::can_be_merged()
00000000012abfe0 g     O .data	00000000000000b0              my_charset_sjis_japanese_ci
000000000136fc20 g     O .bss	0000000000000020              sql_rand
0000000000568fe4 g     F .text	0000000000000014              Rpl_filter::get_ignore_db()
000000000089ad0a  w    F .text	00000000000000ea              field_decimal::~field_decimal()
000000000073aac0  w    F .text	000000000000002d              Item_func_now::Item_func_now()
0000000001370828 g     O .bss	0000000000000004              key_COND_manager
00000000008f4d10 g     F .text	000000000000019a              my_realpath
00000000007bdaec  w    F .text	0000000000000041              Create_func_bin::~Create_func_bin()
000000000138d1e0 g     O .bss	0000000000000100              table_events_waits_history::m_table_lock
0000000001079d40  w    O .data.rel.ro	0000000000000358              vtable for Item_null
00000000007b0ef4  w    F .text	000000000000002b              in_double::~in_double()
00000000007c262e  w    F .text	0000000000000026              Create_func_to_days::~Create_func_to_days()
0000000000766d08  w    F .text	0000000000000038              Field_varstring::sort_length() const
00000000006cffce g     F .text	0000000000000025              partition_info::compare_column_values(void const*, void const*)
0000000000817690  w    F .text	000000000000002b              Item_date_typecast::~Item_date_typecast()
0000000000785b00 g     F .text	000000000000002d              Item_null::safe_charset_converter(charset_info_st*)
00000000006599e0  w    F .text	000000000000002e              Item_sum::aggregator_clear()
00000000005bf5c2  w    F .text	000000000000001a              Diagnostics_area::is_eof() const
00000000007e23fe  w    F .text	0000000000000046              Item_func_spatial_decomp_n::~Item_func_spatial_decomp_n()
00000000007bde42  w    F .text	000000000000002d              Create_func_coercibility::Create_func_coercibility()
000000000108c3d8  w    O .data.rel.ro	00000000000003e0              vtable for Item_func_get_user_var
0000000001374700 g     O .bss	0000000000000060              my_locale_id_ID
000000000069ae56 g     F .text	00000000000000c2              mysql_union(THD*, LEX*, select_result*, st_select_lex_unit*, unsigned long)
00000000007a3950 g     F .text	0000000000000100              Item_func_ifnull::decimal_op(my_decimal*)
000000000074869a g     F .text	00000000000000d8              Field_num::Field_num(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
000000000068231b g     F .text	00000000000006d8              prepare_create_field(Create_field*, unsigned int*, int*, int*, long long)
00000000008163ce  w    F .text	0000000000000046              Item_date::~Item_date()
0000000000552f24 g     F .text	000000000000037f              create_thread_to_handle_connection(THD*)
00000000007508aa g     F .text	00000000000000f1              Field_longlong::store(long long, bool)
00000000007bcaf4  w    F .text	0000000000000038              Item_date::Item_date(Item*)
00000000007da49e  w    F .text	000000000000002f              Item_func_num1::str_op(String*)
00000000008a9252  w    F .text	000000000000001d              List_iterator_fast<XML_TAG>::operator++(int)
000000000059ab6a  w    F .text	000000000000007b              GRANT_COLUMN::GRANT_COLUMN(String&, unsigned long)
00000000007afc6c  w    F .text	0000000000000122              Item_func_isnull::update_used_tables()
00000000007aea00  w    F .text	000000000000000f              Item_func_ne::select_optimize() const
0000000000853564 g     F .text	000000000000003a              my_decimal_trim(unsigned long*, unsigned int*)
00000000008483de g     F .text	000000000000002b              Incident_log_event::~Incident_log_event()
00000000007c6806 g     F .text	000000000000007a              Item_func_signed::print(String*, enum_query_type)
0000000000912422 g     F .text	0000000000000021              table_mutex_instances::reset_position()
00000000007518ce g     F .text	00000000000000e5              Field_float::sql_type(String&) const
000000000138cfa0 g     O .bss	0000000000000008              pfs_internal_access
000000000138d0e0 g     O .bss	0000000000000100              table_events_waits_current::m_table_lock
00000000010c0b28  w    O .data.rel.ro	0000000000000398              vtable for Item_func_period_add
0000000000562e6e g     F .text	000000000000002f              Protocol_text::prepare_for_resend()
0000000000ba3ebc g     F .text	0000000000000028              strcend
000000000136cdd8 g     O .bss	0000000000000008              binlog_cache_disk_use
000000000065c906  w    F .text	000000000000002d              Bitmap<4096u>::init()
000000000073c1d2  w    F .text	000000000000004a              sp_instr_hpop::sp_instr_hpop(unsigned int, sp_pcontext*, unsigned int)
00000000007c11d2  w    F .text	000000000000002d              Create_func_overlaps::Create_func_overlaps()
00000000013731a0 g     O .bss	0000000000000070              LOCK_plugin
0000000000843da6 g     F .text	000000000000061d              Table_map_log_event::Table_map_log_event(THD*, TABLE*, unsigned long, bool)
0000000000823614 g     F .text	0000000000000063              MYSQL_BIN_LOG::get_current_log(st_log_info*)
0000000000666040 g     F .text	00000000000001e3              schema_tables_add(THD*, List<st_mysql_lex_string>*, char const*)
00000000005a5ab4 g     F .text	000000000000007b              Lock_tables_prelocking_strategy::handle_table(THD*, Query_tables_list*, TABLE_LIST*, bool*)
000000000082e809 g     F .text	00000000000000be              mysql_unlock_tables(THD*, st_mysql_lock*)
000000000084dd5c g     F .text	0000000000000068              Delete_rows_log_event_old::do_after_row_operations(TABLE*, int)
0000000000816f1c  w    F .text	000000000000002a              Item_func_add_time::tmp_table_field(TABLE*)
00000000005b2c1e g     F .text	00000000000000c3              Query_cache_query::unlock_n_destroy()
000000000087225a  w    F .text	000000000000000f              QUICK_SELECT_DESC::reverse_sorted()
00000000012c9ae0 g     O .data	00000000000000b0              my_charset_utf8_spanish2_uca_ci
00000000008933a6  w    F .text	000000000000001d              Geometry::Geometry()
0000000000778190 g     F .text	0000000000000378              ha_create_table_from_engine(THD*, char const*, char const*)
000000000091ea34 g     F .text	0000000000000267              ha_myisam::check_and_repair(THD*)
000000000073cac6  w    F .text	000000000000001b              List<sp_cond_type>::List()
00000000010d2358 g     O .data	0000000000000004              builtin_mysql_password_sizeof_struct_st_plugin
0000000000678662  w    F .text	000000000000002d              Trigger_error_handler::Trigger_error_handler()
0000000000765bb8  w    F .text	0000000000000089              Field_float::Field_float(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
000000000090ea9c g     F .text	0000000000000046              table_events_waits_summary_by_thread_by_event_name::make_rwlock_row(PFS_thread*, PFS_rwlock_class*)
000000000070a00e  w    F .text	000000000000010d              Sys_var_keycache::Sys_var_keycache(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(THD*, st_key_cache*, long, unsigned long long), char const*)
00000000006eae1e  w    F .text	0000000000000032              Queue<QUERY_PROFILE>::Queue()
00000000007dafb6  w    F .text	000000000000000f              Item_udf_func::functype() const
000000000090af46 g     F .text	000000000000007c              PFS_engine_table::set_field_ulong(Field*, unsigned long)
00000000010c4b68  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_predicate
00000000007c26c4  w    F .text	0000000000000026              Create_func_to_seconds::~Create_func_to_seconds()
00000000005c084d g     F .text	000000000000001e              thd_set_thread_stack(THD*, char*)
00000000007d3b0a g     F .text	000000000000007c              Item_func_set_user_var::val_decimal(my_decimal*)
00000000007bd992  w    F .text	000000000000002d              Create_func_atan::Create_func_atan()
00000000008f81ac g     F .text	000000000000007c              delete_queue
0000000000612bce  w    F .text	0000000000000013              sys_var_pluginvar::session_save_default(THD*, set_var*)
00000000006c1bda  w    F .text	000000000000002d              Time_zone_utc::Time_zone_utc()
00000000005bf4e6  w    F .text	0000000000000011              Query_cache_result::parent()
000000000136ce50 g     O .bss	0000000000000008              server_start_time
00000000008eb0ca g     F .text	00000000000000a8              bitmap_union
0000000000699f89 g     F .text	000000000000098e              mysql_create_function(THD*, st_udf_func*)
00000000008c5be8 g     F .text	00000000000000e7              Event_queue::Event_queue()
0000000001087f90  w    O .data.rel.ro	0000000000000030              vtable for Create_func_datediff
000000000138e388 g     O .bss	0000000000000008              heap_share_list
0000000000809fb2  w    F .text	000000000000002b              Item_func_group_concat::update_field()
0000000000739582  w    F .text	0000000000000038              Item_func_isnull::Item_func_isnull(Item*)
000000000090c37a  w    F .text	000000000000002d              PFS_internal_schema_access::PFS_internal_schema_access()
000000000136e0f8 g     O .bss	0000000000000008              key_map_full
00000000010f1620 g     O .data	0000000000000008              myisam_log_filename
000000000090d3c8 g     F .text	0000000000000028              table_events_waits_current::create()
000000000120a0a0 g     O .data	0000000000000100              sort_order_ascii_general_ci
00000000007db998  w    F .text	0000000000000011              Item_func_row_count::func_name() const
00000000006f52be  w    F .text	0000000000000011              MDL_ticket::get_type() const
000000000089eaca g     F .text	000000000000020d              multi_delete::do_deletes()
00000000006c1b80  w    F .text	000000000000002b              Time_zone::~Time_zone()
000000000136cbb0 g     O .bss	0000000000000008              default_storage_engine
000000000138c8b8 g     O .bss	0000000000000008              my_file_total_opened
000000000075ad1a g     F .text	00000000000000f2              Field_blob::Field_blob(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, TABLE_SHARE*, unsigned int, charset_info_st*)
00000000007bbc36  w    F .text	000000000000004a              Item_func_hex::Item_func_hex(Item*)
00000000006bfb98 g     F .text	00000000000008fe              my_tz_init(THD*, char const*, char)
000000000079b234 g     F .text	000000000000008e              Cached_item_str::Cached_item_str(THD*, Item*)
000000000136f640 g     O .bss	0000000000000070              LOCK_slave_list
00000000007dc538  w    F .text	000000000000006a              Item_func_set_user_var::~Item_func_set_user_var()
0000000000641f2d g     F .text	0000000000000527              create_tmp_field(THD*, TABLE*, Item*, Item::Type, Item***, Field**, Field**, bool, bool, bool, bool, unsigned int)
000000000082a588 g     F .text	00000000000000c6              vprint_msg_to_log(loglevel, char const*, __va_list_tag*)
0000000000796396  w    F .text	0000000000000063              Field_geom::Field_geom(unsigned int, bool, char const*, TABLE_SHARE*, Field::geometry_type)
000000000138c420 g     O .bss	0000000000000001              my_use_symdir
000000000136ce20 g     O .bss	0000000000000008              slow_launch_threads
0000000000b71084  w    F .text	0000000000000031              Discrete_intervals_list::maximum() const
0000000000817ca2  w    F .text	000000000000002b              Item_func_curtime_utc::~Item_func_curtime_utc()
00000000007c1200  w    F .text	0000000000000041              Create_func_overlaps::~Create_func_overlaps()
000000000090fa36 g     F .text	0000000000000071              table_file_instances::table_file_instances()
0000000000696c62 g     F .text	00000000000001b7              Table_triggers_list::change_table_name_in_trignames(char const*, char const*, st_mysql_lex_string*, st_mysql_lex_string*)
00000000007b03ae  w    F .text	0000000000000015              Item_in_subselect::is_top_level_item()
0000000000785521 g     F .text	00000000000001a6              double_from_string_with_check(charset_info_st*, char const*, char*)
000000000073a202  w    F .text	0000000000000038              Item_func_charset::Item_func_charset(Item*)
00000000007c0144  w    F .text	0000000000000026              Create_func_issimple::~Create_func_issimple()
00000000013867f0 g     O .bss	0000000000000008              Create_func_within::s_singleton
000000000082762c g     F .text	00000000000000c4              THD::binlog_set_pending_rows_event(Rows_log_event*, bool)
00000000006cd650 g     F .text	0000000000000353              Events::init(char)
0000000000659b34  w    F .text	0000000000000056              Item_func_rollup_const::Item_func_rollup_const(Item*)
00000000005c04a0 g     F .text	00000000000000d8              Key::Key(Key const&, st_mem_root*)
00000000005f0fc0  w    F .text	000000000000002e              Lex_input_stream::save_in_comment_state()
00000000007ddc78  w    F .text	0000000000000058              Item_decimal_typecast::~Item_decimal_typecast()
00000000007dd95a  w    F .text	0000000000000046              Item_func_neg::~Item_func_neg()
00000000010a8440  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_encode
00000000007bcd2a  w    F .text	0000000000000038              Item_func_sec_to_time::Item_func_sec_to_time(Item*)
0000000000626330 g     F .text	000000000000052c              show_binlogs(THD*)
00000000007dd12a  w    F .text	000000000000002b              Item_func_ceiling::~Item_func_ceiling()
000000000078ffde g     F .text	00000000000000d7              Item_ref::str_result(String*)
00000000006bac94  w    F .text	0000000000000033              Field_iterator_table_ref::name()
0000000001375660 g     O .bss	0000000000000060              my_locale_ar_OM
00000000006206c8  w    F .text	000000000000001b              st_debug_sync_globals::st_debug_sync_globals()
00000000007daf36  w    F .text	000000000000000f              Item_func_sleep::const_item() const
000000000090f6e8 g     F .text	00000000000001c6              table_ews_global_by_event_name::read_row_values(TABLE*, unsigned char*, Field**, bool)
0000000000564402 g     F .text	00000000000000e6              Protocol_binary::store_longlong(long long, bool)
00000000007bf70c  w    F .text	0000000000000041              Create_func_geometry_type::~Create_func_geometry_type()
000000000067a73e g     F .text	0000000000000064              String::qs_append(int)
000000000077c156  w    F .text	000000000000001e              handler::index_read(unsigned char*, unsigned char const*, unsigned int, ha_rkey_function)
00000000005669b0  w    F .text	000000000000000f              Item::basic_const_item() const
00000000008ee29f g     F .text	0000000000000017              getopt_ulonglong2double
000000000061c044  w    F .text	0000000000000024              Prepared_statement::set_sql_prepare()
0000000000000000       F *UND*	0000000000000000              __ctype_b_loc@@GLIBC_2.3
00000000010eee60 g     O .data	0000000000000008              proc_info_hook
000000000083fe4a g     F .text	0000000000000066              Execute_load_log_event::Execute_load_log_event(THD*, char const*, bool)
00000000007f383c  w    F .text	000000000000002b              Item_func_rtrim::~Item_func_rtrim()
000000000080984a  w    F .text	0000000000000011              Item_sum_or::func_name() const
00000000006f05a6  w    F .text	000000000000003a              Observer_info::Observer_info(void*, st_plugin_int*)
000000000073da69 g     F .text	00000000000000df              free_old_query
0000000000000000       F *UND*	0000000000000000              strcasecmp@@GLIBC_2.2.5
0000000000886952 g     F .text	00000000000000b8              sp_instr_jump_if_not::execute(THD*, unsigned int*)
0000000000799e00  w    F .text	000000000000000f              List_iterator_fast<Item_field>::after(Item_field*)
0000000000858b14 g     F .text	0000000000000068              QUICK_RANGE::QUICK_RANGE()
0000000000946412 g     F .text	000000000000019b              mi_get_status
0000000000796212  w    F .text	0000000000000080              Field_datetime::Field_datetime(bool, char const*, charset_info_st*)
000000000057ac1a  w    F .text	0000000000000026              List_iterator_fast<MYSQL_ERROR>::List_iterator_fast(List<MYSQL_ERROR>&)
0000000000795b8c g     F .text	000000000000002f              Item_type_holder::val_decimal(my_decimal*)
00000000007bdfde  w    F .text	0000000000000026              Create_func_concat::~Create_func_concat()
0000000001372e60 g     O .bss	000000000000007c              server_command_flags
00000000010b4348  w    O .data.rel.ro	0000000000000060              vtable for Aggregator_simple
00000000007c9da6 g     F .text	0000000000000065              Item_func_abs::real_op()
00000000007b0034  w    F .text	0000000000000024              Item_equal::compare_collation()
000000000065c3ec  w    F .text	000000000000001b              List<Cached_item>::List()
00000000007dae6e  w    F .text	0000000000000011              Item_func_shift_right::func_name() const
00000000007f22b2  w    F .text	0000000000000051              Item_func_hex::fix_length_and_dec()
00000000008092ea  w    F .text	000000000000002b              Item_std_field::func_name() const
00000000005b08a0  w    F .text	0000000000000017              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >::is_empty() const
00000000010698a0  w    O .data.rel.ro	0000000000000078              vtable for select_dump
00000000005985f4  w    F .text	00000000000000a7              String::c_ptr()
00000000007f1f3a  w    F .text	0000000000000011              Item_func_user::func_name() const
000000000077c174  w    F .text	0000000000000026              handler::index_read_last(unsigned char*, unsigned char const*, unsigned int)
00000000013708e4 g     O .bss	0000000000000004              key_file_send_file
0000000000746800 g     F .text	00000000000005e9              read_texts(char const*, char const*, char const***, unsigned int)
00000000008c231e  w    F .text	000000000000002b              Item_nodeset_func_selfbyname::~Item_nodeset_func_selfbyname()
00000000007f3784  w    F .text	0000000000000046              Item_func_password::~Item_func_password()
0000000000876f0a  w    F .text	000000000000001b              Item_proc_int::set(long long)
000000000106bca0  w    O .data.rel.ro	0000000000000078              vtable for multi_update
000000000088a012 g     F .text	0000000000000192              sp_pcontext::sp_pcontext()
000000000136cd08 g     O .bss	0000000000000008              slave_trans_retries
0000000000921f05 g     F .text	00000000000006f1              chk_del
0000000001371bd8 g     O .bss	0000000000000008              relay_log_space_limit
00000000007685e0  w    F .text	0000000000000046              Field_null::~Field_null()
00000000005b6212 g     F .text	00000000000000f0              Query_cache::invalidate(THD*, char const*, unsigned int, char)
0000000000817118  w    F .text	0000000000000021              Item_func_microsecond::check_valid_arguments_processor(unsigned char*)
00000000005dc890  w    F .text	000000000000000b              MDL_savepoint::MDL_savepoint()
0000000000849086  w    F .text	000000000000000f              Format_description_log_event::get_type_code()
00000000012c81c0 g     O .data	00000000000000b0              my_charset_ucs2_icelandic_uca_ci
000000000070e536  w    F .text	0000000000000045              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000007f2d52  w    F .text	0000000000000046              Item_func_binary::~Item_func_binary()
0000000000981342 g     F .text	00000000000000ee              ha_heap::update_row(unsigned char const*, unsigned char*)
000000000065a4ee  w    F .text	0000000000000046              Item_subselect::change_engine(subselect_engine*)
000000000099233a g     F .text	0000000000000336              myrg_create
000000000073a5bc  w    F .text	000000000000002d              Item_date::Item_date()
0000000000911d6a  w    F .text	0000000000000041              table_setup_instruments::~table_setup_instruments()
00000000010e2d70 g     O .data	0000000000000010              PERFORMANCE_SCHEMA_DB_NAME
0000000000698570  w    F .text	000000000000003d              Handle_old_incorrect_sql_modes_hook::Handle_old_incorrect_sql_modes_hook(char*)
00000000010c18a8  w    O .data.rel.ro	0000000000000078              vtable for Rand_log_event
00000000012c9ba0 g     O .data	00000000000000b0              my_charset_utf8_roman_uca_ci
00000000008499c5  w    F .text	0000000000000075              idempotent_error_code(int)
0000000000696014 g     F .text	0000000000000289              Table_triggers_list::get_trigger_info(THD*, int, st_mysql_lex_string*, unsigned long long*, st_mysql_lex_string*, st_mysql_lex_string*, st_mysql_lex_string*, st_mysql_lex_string*)
00000000007ba948  w    F .text	000000000000007b              Item_func_locate::Item_func_locate(Item*, Item*, Item*)
00000000007bb134  w    F .text	0000000000000040              Item_func_strcmp::Item_func_strcmp(Item*, Item*)
00000000007af20c  w    F .text	0000000000000051              in_decimal::value_to_item(unsigned int, Item*)
000000000088652c g     F .text	000000000000009b              sp_instr_set_trigger_field::execute(THD*, unsigned int*)
0000000001371680 g     O .bss	0000000000000058              slave_list
00000000007b116c  w    F .text	00000000000000a0              Item_func_between::~Item_func_between()
00000000007bd138  w    F .text	0000000000000026              Create_native_func::~Create_native_func()
000000000073a0a8  w    F .text	0000000000000053              Item_func_char::Item_func_char(List<Item>&, charset_info_st*)
000000000088486a g     F .text	00000000000000ec              sp_head::reset_thd_mem_root(THD*)
00000000007b9b02  w    F .text	0000000000000040              Item_sum_udf_decimal::Item_sum_udf_decimal(st_udf_func*, List<Item>&)
00000000006fbf04  w    F .text	0000000000000036              xid_t::eq(xid_t*)
0000000000856f70 g     F .text	0000000000000027              SQL_SELECT::~SQL_SELECT()
000000000082d360  w    F .text	000000000000004f              Xid_log_event::Xid_log_event(THD*, unsigned long long)
00000000007f3d6c  w    F .text	0000000000000058              Item_func_concat_ws::~Item_func_concat_ws()
00000000008734be  w    F .text	000000000000002d              TRP_ROR_INTERSECT::TRP_ROR_INTERSECT()
00000000007be9fa  w    F .text	000000000000002d              Create_func_des_decrypt::Create_func_des_decrypt()
0000000000737d38  w    F .text	0000000000000050              Item_sum_avg::Item_sum_avg(Item*, bool)
00000000006798b8 g     F .text	00000000000000a3              String::fill(unsigned int, char)
0000000000737788  w    F .text	0000000000000043              LEX_COLUMN::LEX_COLUMN(String const&, unsigned int const&)
00000000007befd6  w    F .text	000000000000002d              Create_func_exp::Create_func_exp()
00000000008c094e  w    F .text	0000000000000076              Item_nodeset_func::Item_nodeset_func(String*)
00000000005c9d1a g     F .text	00000000000001ce              Security_context::change_security_context(THD*, st_mysql_lex_string*, st_mysql_lex_string*, st_mysql_lex_string*, Security_context**)
00000000006f14f6 g     F .text	0000000000000043              Deadlock_detection_visitor::leave_node(MDL_context*)
0000000000816aaa  w    F .text	0000000000000011              Item_date_typecast::func_name() const
00000000012b1e80 g     O .data	0000000000000600              page009data
00000000005f198a  w    F .text	000000000000001b              List<String>::List()
00000000005658c4  w    F .text	0000000000000026              Protocol_text::~Protocol_text()
0000000001090138  w    O .data.rel.ro	0000000000000398              vtable for Item_func_field
000000000079a170  w    F .text	0000000000000058              Item_cache_str::~Item_cache_str()
000000000090f8ae  w    F .text	0000000000000041              table_all_instr_class::~table_all_instr_class()
00000000007bfc24  w    F .text	000000000000002d              Create_func_instr::Create_func_instr()
0000000000764508  w    F .text	000000000000000f              Field::key_type() const
00000000010e2f00 g     O .data	00000000000000c0              known_date_time_formats
000000000120dac0 g     O .data	0000000000000101              ctype_latin2_croatian_ci
000000000108d618  w    O .data.rel.ro	0000000000000398              vtable for Item_func_release_lock
00000000007dc196  w    F .text	0000000000000058              Item_func_is_free_lock::~Item_func_is_free_lock()
000000000075a770 g     F .text	0000000000000027              Field_varstring::max_packed_col_length(unsigned int)
00000000005af846  w    F .text	0000000000000033              Field_iterator_table_ref::field()
00000000007d8d5a g     F .text	000000000000007f              my_missing_function_error(st_mysql_lex_string const&, char const*)
00000000009058b2  w    F .text	000000000000002b              handler::~handler()
0000000000678e58 g     F .text	00000000000000d3              String::real_alloc(unsigned int)
00000000005d0b60  w    F .text	0000000000000026              List<Alter_column>::prepand(List<Alter_column>*)
0000000001088230  w    O .data.rel.ro	0000000000000030              vtable for Create_func_char_length
0000000000888fb2  w    F .text	0000000000000019              sp_instr::opt_shortcut_jump(sp_head*, sp_instr*)
00000000007dd4e6  w    F .text	0000000000000046              Item_func_asin::~Item_func_asin()
00000000006e5cbc g     F .text	00000000000000ec              mysql_audit_release(THD*)
00000000007c003e  w    F .text	000000000000002d              Create_func_isnull::Create_func_isnull()
0000000000604905 g     F .text	0000000000000021              comp_ge_creator(bool)
00000000008087c2  w    F .text	000000000000000f              Item_sum::const_during_execution() const
00000000007904e2 g     F .text	0000000000000092              Item_ref::val_str(String*)
00000000005c4e6c g     F .text	00000000000000c6              sql_exchange::sql_exchange(char*, bool, enum_filetype)
000000000090f916  w    F .text	0000000000000041              table_ews_global_by_event_name::~table_ews_global_by_event_name()
0000000000738292  w    F .text	0000000000000048              Item_real_func::Item_real_func(List<Item>&)
00000000007e2eb8 g     F .text	00000000000000ad              Item_row::print(String*, enum_query_type)
000000000081cf16 g     F .text	0000000000000124              Log_to_file_event_handler::log_slow(THD*, long, long, char const*, unsigned int, unsigned long long, unsigned long long, bool, char const*, unsigned int)
00000000007a6b64 g     F .text	0000000000000063              in_longlong::set(unsigned int, Item*)
0000000001374880 g     O .bss	0000000000000060              my_locale_ko_KR
00000000007e1dfc  w    F .text	000000000000002b              Item_func_area::~Item_func_area()
00000000010950e8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_asin
00000000006cae18 g     F .text	0000000000000099              event_basic_identifier_equal(st_mysql_lex_string, st_mysql_lex_string, Event_basic*)
0000000000750dda g     F .text	00000000000000e5              Field_longlong::sort_string(unsigned char*, unsigned int)
0000000000817482  w    F .text	0000000000000046              Item_func_maketime::~Item_func_maketime()
00000000007e863c g     F .text	0000000000000362              Item_func_substr::val_str(String*)
00000000008c4ec0 g     F .text	0000000000000114              Event_scheduler::workers_count()
00000000007bab9e  w    F .text	0000000000000040              Item_func_benchmark::Item_func_benchmark(Item*, Item*)
00000000007dab5e  w    F .text	0000000000000011              Item_func_atan::func_name() const
0000000000784778 g     F .text	00000000000000b5              Item_int::Item_int(char const*, unsigned int)
00000000007c0aca  w    F .text	000000000000002d              Create_func_maketime::Create_func_maketime()
00000000012195e0 g     O .data	0000000000000101              ctype_koi8u_bin
00000000005590d4  w    F .text	0000000000000012              CSET_STRING::length() const
000000000081bbd2 g     F .text	000000000000002d              Log_to_csv_event_handler::Log_to_csv_event_handler()
000000000056428a g     F .text	000000000000006b              Protocol_binary::store_tiny(long long)
00000000006784b0  w    F .text	0000000000000026              I_List<thread_info>::append(thread_info*)
00000000007be1c6  w    F .text	000000000000002d              Create_func_conv::Create_func_conv()
00000000007685b4  w    F .text	000000000000002b              Field_decimal::~Field_decimal()
00000000007535fe g     F .text	00000000000000c5              Field_timestamp::cmp(unsigned char const*, unsigned char const*)
00000000007ba7ae  w    F .text	0000000000000058              Item_func_length::~Item_func_length()
000000000136d480 g     O .bss	0000000000000008              default_tz_name
00000000007c3c44 g     F .text	0000000000000154              Item_func::Item_func(THD*, Item_func*)
0000000001213de0 g     O .data	0000000000000100              sort_order_cp1251_general_ci
00000000005cfd4a  w    F .text	000000000000002b              select_result_interceptor::~select_result_interceptor()
00000000008c1884  w    F .text	0000000000000016              Item_func_xpath_position::fix_length_and_dec()
00000000005d8c6a g     F .text	000000000000004c              Diagnostics_area::disable_status()
0000000000b81167 g     F .text	0000000000000130              my_strnncollsp_mb_bin
00000000006c1bac  w    F .text	000000000000002d              Time_zone_system::Time_zone_system()
00000000007ad7d0 g     F .text	00000000000000d6              Item_equal::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
0000000001395440 g     O .bss	0000000000000038              THR_COND_threads
00000000007fbafc g     F .text	0000000000000030              subselect_union_engine::print(String*, enum_query_type)
00000000007a611e g     F .text	000000000000011f              Item_func_coalesce::fix_length_and_dec()
000000000075a724 g     F .text	000000000000004c              Field_varstring::packed_col_length(unsigned char const*, unsigned int)
000000000088dca6 g     F .text	00000000000000ca              Gis_point::init_from_wkt(Gis_read_stream*, String*)
000000000098a907 g     F .text	00000000000003a2              heap_check_heap
00000000006c6a50  w    F .text	0000000000000041              Pack_header_error_handler::~Pack_header_error_handler()
00000000005f2026 g     F .text	0000000000000131              base_list::base_list(base_list const&, st_mem_root*)
00000000013956b0 g     O .bss	0000000000000004              mi_key_cond_MI_SORT_INFO_cond
000000000070a7fa  w    F .text	00000000000001b6              Sys_var_flagset::Sys_var_flagset(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
00000000007bb69c  w    F .text	0000000000000057              Item_func_substr_index::Item_func_substr_index(Item*, Item*, Item*)
000000000077b8b2  w    F .text	0000000000000012              handler::records()
00000000007be032  w    F .text	0000000000000041              Create_func_concat_ws::~Create_func_concat_ws()
0000000001069c20  w    O .data.rel.ro	0000000000000078              vtable for select_result_interceptor
00000000005bf512  w    F .text	0000000000000031              Query_cache_memory_bin::init(unsigned long)
0000000001386770 g     O .bss	0000000000000008              Create_func_time_format::s_singleton
00000000008495dc  w    F .text	0000000000000015              Table_map_log_event::get_data_size()
0000000000849876  w    F .text	0000000000000015              Incident_log_event::get_data_size()
00000000010c2fc0  w    O .data.rel.ro	0000000000000370              vtable for Item_proc
0000000000804c26 g     F .text	00000000000000f4              Item_avg_field::Item_avg_field(Item_result, Item_sum_avg*)
00000000007afbf6  w    F .text	000000000000000f              in_row::result_type()
00000000007bd032  w    F .text	000000000000002d              Create_udf_func::Create_udf_func()
000000000107b4c0  w    O .data.rel.ro	0000000000000358              vtable for Item_ident_for_show
00000000007c4d6e g     F .text	000000000000022d              Item_func::tmp_table_field(TABLE*)
0000000000852f41 g     F .text	0000000000000194              str_set_decimal(unsigned int, my_decimal const*, unsigned int, unsigned int, char, String*, charset_info_st*)
0000000001370750 g     O .bss	0000000000000004              key_LOCK_des_key_file
000000000075c3a4 g     F .text	00000000000001f9              Field_blob::sort_string(unsigned char*, unsigned int)
00000000007bf5e0  w    F .text	0000000000000041              Create_func_geometry_from_text::~Create_func_geometry_from_text()
0000000000b5df68  w    F .text	000000000000000f              ha_tina::auto_repair() const
000000000079e842 g     F .text	00000000000001b8              Arg_comparator::try_year_cmp_func(Item_result)
0000000000665c18 g     F .text	000000000000001c              get_schema_table_idx(st_schema_table*)
000000000059ad8e  w    F .text	0000000000000035              Silence_routine_definer_errors::Silence_routine_definer_errors()
000000000057b3ba  w    F .text	000000000000002d              sp_cache::enforce_limit(unsigned long)
000000000077c146  w    F .text	000000000000000f              handler::end_bulk_insert()
00000000006bc3d0 g     F .text	0000000000000067              TIME_to_timestamp(THD*, st_mysql_time const*, char*)
00000000006109f6 g     F .text	00000000000000fc              sys_var_pluginvar::value_size()
00000000005d0a4c  w    F .text	0000000000000025              List<Alter_column>::push_back(Alter_column*)
00000000010bee68  w    O .data.rel.ro	0000000000000398              vtable for Item_func_quarter
00000000008f3bdd g     F .text	000000000000028b              my_pread
0000000000567a2e g     F .text	00000000000000ae              Rpl_filter::Rpl_filter()
00000000005906f8 g     F .text	0000000000000068              Silence_routine_definer_errors::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
000000000082ddd6  w    F .text	0000000000000041              TC_LOG_DUMMY::~TC_LOG_DUMMY()
00000000007b51f8 g     F .text	0000000000000050              Create_func_log10::create(THD*, Item*)
00000000007f2014  w    F .text	0000000000000011              Item_func_current_user::fully_qualified_func_name() const
000000000080953a  w    F .text	000000000000003b              Item_sum_hybrid::result_as_longlong()
00000000009082b1  w    F .text	0000000000000040              PFS_atomic::add_u32(unsigned int volatile*, unsigned int)
00000000007657ac  w    F .text	000000000000003d              Field_medium::pack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000008cab20  w    F .text	000000000000002d              Event_db_intact::Event_db_intact()
000000000069c518 g     F .text	0000000000000e83              st_select_lex_unit::exec()
0000000001372010 g     O .bss	0000000000000004              table_cache_count
00000000010875d0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_like_range_min
0000000000679be0 g     F .text	0000000000000033              String::append(char const*)
00000000007e3300  w    F .text	0000000000000012              Item_row::used_tables() const
000000000075166c g     F .text	0000000000000167              Field_float::sort_string(unsigned char*, unsigned int)
000000000073a2ea  w    F .text	0000000000000040              Item_func_point::Item_func_point(Item*, Item*)
000000000070a516  w    F .text	000000000000003e              Sys_var_double::session_update(THD*, set_var*)
00000000008d0421 g     F .text	0000000000000054              resolve_collation
000000000054cc0b g     F .text	000000000000004c              print_signal_warning
00000000005d0330  w    F .text	0000000000000026              List<Key_part_spec>::List(List<Key_part_spec> const&)
000000000065f132 g     F .text	00000000000006c8              mysqld_show_create_db(THD*, char*, st_ha_create_information*)
000000000070ceac  w    F .text	000000000000006f              Sys_var_tx_isolation::Sys_var_tx_isolation(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*))
00000000005b0784  w    F .text	0000000000000045              MDL_deadlock_handler::MDL_deadlock_handler(Open_table_context*)
000000000136cbf1 g     O .bss	0000000000000001              opt_error_log
00000000007e0d54  w    F .text	000000000000004e              Gis_read_stream::Gis_read_stream(charset_info_st*, char const*, int)
0000000000849b36  w    F .text	000000000000001b              sql_exchange::~sql_exchange()
00000000010a1848  w    O .data.rel.ro	0000000000000398              vtable for Item_func_uncompress
0000000001086880  w    O .data.rel.ro	0000000000000030              vtable for Create_func_x
0000000000b5e258 g     F .text	000000000000001f              Transparent_file::~Transparent_file()
0000000000849bc4  w    F .text	0000000000000046              Write_rows_log_event::~Write_rows_log_event()
00000000007bf102  w    F .text	000000000000002d              Create_func_exteriorring::Create_func_exteriorring()
000000000107def8  w    O .data.rel.ro	0000000000000028              vtable for Cached_item_real
00000000013866f8 g     O .bss	0000000000000008              Create_func_sha::s_singleton
00000000007650da  w    F .text	0000000000000046              Field_num::~Field_num()
0000000000b712c8  w    F .text	000000000000004d              ha_partition::index_flags(unsigned int, unsigned int, bool) const
000000000063cbe2 g     F .text	00000000000000c4              find_item_equal(COND_EQUAL*, Field*, bool*)
00000000008c1754  w    F .text	0000000000000043              Item_xpath_cast_number::val_real()
0000000001386a80 g     O .bss	0000000000000d20              mysql_bin_log
00000000005ee944 g     F .text	00000000000000f1              st_select_lex::setup_ref_array(THD*, unsigned int)
00000000007bd264  w    F .text	0000000000000026              Create_func_arg1::~Create_func_arg1()
000000000065a534  w    F .text	0000000000000077              subselect_engine::subselect_engine(Item_subselect*, select_subselect*)
0000000001374160 g     O .bss	0000000000000060              my_locale_de_AT
000000000074e826 g     F .text	00000000000000b6              Field_short::cmp(unsigned char const*, unsigned char const*)
00000000007aecb6  w    F .text	0000000000000011              Item_func_ifnull::func_name() const
00000000007bceea  w    F .text	0000000000000038              Item_func_last_day::Item_func_last_day(Item*)
0000000000873f9c  w    F .text	0000000000000025              List<SEL_IMERGE>::push_back(SEL_IMERGE*)
000000000070d558  w    F .text	000000000000003b              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::session_update(THD*, set_var*)
00000000005a505c g     F .text	0000000000000830              open_tables(THD*, TABLE_LIST**, unsigned int*, unsigned int, Prelocking_strategy*)
0000000000784016 g     F .text	00000000000000a6              Item_field::get_date_result(st_mysql_time*, unsigned int)
0000000000569100  w    F .text	0000000000000046              i_string_pair::~i_string_pair()
00000000006f52e2  w    F .text	0000000000000063              MDL_ticket::MDL_ticket(MDL_context*, enum_mdl_type, enum_mdl_duration)
00000000005af7b0  w    F .text	0000000000000058              Field_iterator_table_ref::end_of_fields()
000000000065a992  w    F .text	000000000000000f              QUICK_RANGE_SELECT::reverse_sorted()
0000000000598c90  w    F .text	000000000000002f              TABLE_LIST::get_db_name()
00000000007b9dbc  w    F .text	000000000000002d              Item_func_connection_id::Item_func_connection_id()
00000000005c4e44 g     F .text	0000000000000027              select_result::check_simple_select() const
00000000005cff9a  w    F .text	0000000000000012              Rows_log_event::get_table_id() const
0000000001086e80  w    O .data.rel.ro	0000000000000030              vtable for Create_func_sha
00000000007c17dc  w    F .text	0000000000000041              Create_func_reverse::~Create_func_reverse()
000000000082cfda  w    F .text	0000000000000019              Log_event::use_direct_logging()
00000000006c1ce0  w    F .text	0000000000000046              Time_zone_db::~Time_zone_db()
00000000008b064c g     F .text	0000000000000299              get_partition_id_range_for_endpoint(partition_info*, bool, bool)
0000000000961943 g     F .text	00000000000000db              _mi_ck_real_write_btree
00000000007f6868 g     F .text	000000000000009b              Item_exists_subselect::val_str(String*)
00000000007fc2c8  w    F .text	000000000000002b              Item_subselect::func_name() const
00000000005b1126  w    F .text	000000000000000f              I_P_List_no_push_back<TABLE>::I_P_List_no_push_back(TABLE**)
000000000065a1e6  w    F .text	0000000000000052              Item_cond::add(Item*)
0000000000893c18  w    F .text	000000000000002d              Gis_geometry_collection::Gis_geometry_collection()
0000000001069398  w    O .data.rel.ro	0000000000000028              vtable for GRANT_NAME
0000000001386390 g     O .bss	0000000000000008              Create_func_bit_count::s_singleton
0000000000910cba g     F .text	000000000000009d              table_performance_timers::rnd_next()
00000000007fd9f2 g     F .text	0000000000000158              Item_sum::get_tmp_table_item(THD*)
00000000007bdeb2  w    F .text	0000000000000026              Create_func_coercibility::~Create_func_coercibility()
0000000000849a85  w    F .text	000000000000002d              concurrency_error_code(int)
0000000000970aa3 g     F .text	0000000000001b11              rtree_perimeter_increase
0000000000793b24 g     F .text	0000000000000076              Item_cache_real::cache_value()
0000000000000000       F *UND*	0000000000000000              strrchr@@GLIBC_2.2.5
0000000000856e38 g     F .text	0000000000000091              SQL_SELECT::SQL_SELECT()
000000000073766e  w    F .text	0000000000000037              Alter_drop::Alter_drop(Alter_drop::drop_type, char const*)
00000000005c42d2 g     F .text	000000000000026e              THD::add_changed_table(char const*, long)
000000000080189c g     F .text	00000000000000c2              Item_sum_variance::Item_sum_variance(THD*, Item_sum_variance*)
00000000009631dd g     F .text	0000000000000218              _mi_find_half_pos
0000000000564208 g     F .text	0000000000000081              Protocol_binary::store_null()
00000000007f3218  w    F .text	000000000000002b              Item_func_rpad::~Item_func_rpad()
00000000007f67e4 g     F .text	0000000000000084              Item_exists_subselect::val_int()
00000000008ccdfe g     F .text	00000000000000ff              Gis_read_stream::get_next_toc_type()
00000000005d17de  w    F .text	000000000000001b              Key_part_spec::~Key_part_spec()
0000000000888236 g     F .text	0000000000000066              sp_instr_set_case_expr::opt_move(unsigned int, List<sp_instr>*)
00000000010c4410  w    O .data.rel.ro	0000000000000060              vtable for field_longlong
00000000006baab8  w    F .text	000000000000005a              Wait_for_flush::Wait_for_flush(MDL_context*, TABLE_SHARE*, unsigned int)
00000000007f6544 g     F .text	000000000000016f              Item_allany_subselect::Item_allany_subselect(Item*, Comp_creator* (*)(bool), st_select_lex*, bool)
00000000010a1f78  w    O .data.rel.ro	0000000000000398              vtable for Item_func_crc32
0000000000788520 g     F .text	000000000000004d              Item_copy_uint::val_str(String*)
00000000010c7688  w    O .data.rel.ro	0000000000000398              vtable for Item_func_xpath_position
0000000001087540  w    O .data.rel.ro	0000000000000030              vtable for Create_func_load_file
00000000007c1b60  w    F .text	0000000000000041              Create_func_sha::~Create_func_sha()
00000000012c8700 g     O .data	00000000000000b0              my_charset_ucs2_swedish_uca_ci
000000000081b8ed g     F .text	0000000000000052              make_log_name(char*, char const*, char const*)
00000000007affc8  w    F .text	0000000000000016              Item_cond::top_level_item()
0000000000888dbe  w    F .text	0000000000000012              Warning_info::warn_id() const
00000000008319b0 g     F .text	00000000000000b8              Log_event::Log_event(THD*, unsigned short, bool)
0000000000678ccc  w    F .text	0000000000000046              Item_blob::~Item_blob()
0000000000000000       F *UND*	0000000000000000              fseek@@GLIBC_2.2.5
00000000007669b2  w    F .text	000000000000002b              Field_longstr::~Field_longstr()
00000000007f1ade  w    F .text	0000000000000011              Item_func_trim::func_name() const
0000000000788202 g     F .text	00000000000000c3              Item_copy_string::val_int()
00000000008490e6  w    F .text	000000000000000f              Rand_log_event::get_data_size()
00000000010dfd60 g     O .data	0000000000000168              processlist_fields_info
000000000059bd60 g     F .text	000000000000002c              No_such_table_error_handler::safely_trapped_errors()
00000000007c161a  w    F .text	0000000000000041              Create_func_radians::~Create_func_radians()
0000000000b82827 g     F .text	0000000000000034              my_strnxfrmlen_simple
000000000070ba4c  w    F .text	00000000000000c4              Sys_var_debug_sync::Sys_var_debug_sync(char const*, char const*, int, CMD_LINE, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
0000000000589ae0 g     F .text	000000000000064b              check_grant(THD*, unsigned long, TABLE_LIST*, bool, unsigned int, bool)
0000000000793a98 g     F .text	000000000000008c              Item_cache_datetime::val_int()
0000000000696568 g     F .text	0000000000000222              Table_triggers_list::drop_all_triggers(THD*, char*, char*)
0000000000876620  w    F .text	000000000000002e              Item_sum_count::make_const(long long)
0000000000ba4dcd g     F .text	00000000000006a0              my_xml_parse
00000000008400de g     F .text	00000000000003f0              Execute_load_log_event::do_apply_event(Relay_log_info const*)
0000000000658d70  w    F .text	0000000000000065              Field_longstr::Field_longstr(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
000000000078fc1e g     F .text	0000000000000193              Item_ref::print(String*, enum_query_type)
0000000000b6f910 g     F .text	00000000000001e6              ha_partition::cmp_ref(unsigned char const*, unsigned char const*)
00000000007bffd6  w    F .text	0000000000000041              Create_func_isempty::~Create_func_isempty()
000000000067fdcd g     F .text	00000000000000af              build_table_shadow_filename(char*, unsigned long, st_lock_param_type*)
000000000059b196  w    F .text	000000000000002d              List<LEX_COLUMN>::push_back(LEX_COLUMN*, st_mem_root*)
000000000077be8e  w    F .text	0000000000000012              handler::min_record_length(unsigned int) const
0000000000000000       F *UND*	0000000000000000              memchr@@GLIBC_2.2.5
00000000007bad30  w    F .text	0000000000000038              Item_func_udf_int::Item_func_udf_int(st_udf_func*)
00000000007be7a2  w    F .text	000000000000002d              Create_func_dayofweek::Create_func_dayofweek()
00000000008170c4  w    F .text	0000000000000011              Item_func_maketime::func_name() const
0000000000ba5655 g     F .text	00000000000000e4              my_strcspn
00000000007fc860  w    F .text	000000000000002b              Item_singlerow_subselect::~Item_singlerow_subselect()
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@@GLIBC_2.4
000000000138c440 g     O .bss	0000000000000001              my_init_done
000000000077fa0a g     F .text	000000000000003c              Item::check_cols(unsigned int)
00000000010b5a98  w    O .data.rel.ro	0000000000000398              vtable for Item_func_str_to_date
00000000007babde  w    F .text	0000000000000038              Item_func_sleep::Item_func_sleep(Item*)
0000000000659b34  w    F .text	0000000000000056              Item_func_rollup_const::Item_func_rollup_const(Item*)
00000000007c2492  w    F .text	000000000000002d              Create_func_time_to_sec::Create_func_time_to_sec()
00000000007dd610  w    F .text	000000000000002b              Item_func_pow::~Item_func_pow()
0000000000584669 g     F .text	000000000000001f              free_grant_table(GRANT_TABLE*)
0000000000779c38 g     F .text	000000000000009e              handler::index_read_idx_map(unsigned char*, unsigned int, unsigned char const*, unsigned long, ha_rkey_function)
00000000007389e0  w    F .text	0000000000000040              Item_func_shift_right::Item_func_shift_right(Item*, Item*)
0000000000753590 g     F .text	000000000000006d              Field_timestamp::send_binary(Protocol*)
00000000007c03c2  w    F .text	000000000000002d              Create_func_length::Create_func_length()
00000000007a372a g     F .text	0000000000000014              Item_func_ifnull::field_type() const
0000000001386768 g     O .bss	0000000000000008              Create_func_tan::s_singleton
0000000000886290 g     F .text	0000000000000038              sp_instr_stmt::exec_core(THD*, unsigned int*)
000000000070c952  w    F .text	000000000000002e              Sys_var_struct::session_save_default(THD*, set_var*)
00000000010ef6a0 g     O .data	0000000000000010              table_file_summary_by_event_name::m_field_def
000000000083fb3a g     F .text	00000000000000e5              Delete_file_log_event::Delete_file_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000010ef4d0 g     O .data	0000000000000010              table_events_waits_summary_by_instance::m_field_def
0000000000834cd6 g     F .text	00000000000017d6              Query_log_event::Query_log_event(char const*, unsigned int, Format_description_log_event const*, Log_event_type)
00000000007cad6c g     F .text	0000000000000103              Item_func_shift_left::val_int()
000000000065a6b4  w    F .text	0000000000000033              Item_subselect::is_evaluated() const
00000000007e4388 g     F .text	00000000000001c3              Item_func_sha::val_str_ascii(String*)
000000000073b4ee  w    F .text	0000000000000038              select_export::select_export(sql_exchange*)
00000000007ce4dc g     F .text	0000000000000106              Item_func_field::fix_length_and_dec()
00000000012af880 g     O .data	0000000000000600              page002data
00000000007cc694 g     F .text	00000000000000ae              Item_func_sign::val_int()
00000000005c0922 g     F .text	0000000000000041              thd_close_connection(THD*)
0000000000559984  w    F .text	000000000000001b              I_List<i_string_pair>::empty()
00000000005f19a6  w    F .text	0000000000000026              List<String>::List(List<String> const&)
00000000007db536  w    F .text	000000000000000f              Item_func_udf_str::result_type() const
000000000059b3de  w    F .text	0000000000000025              List<st_lex_user>::push_front(st_lex_user*)
000000000106bdb8  w    O .data.rel.ro	0000000000000050              vtable for Field_iterator_table
00000000006ec0c8 g     F .text	000000000000016c              Event_parse_data::check_parse_data(THD*)
00000000005490a0 g     F .init	0000000000000000              _init
0000000000799f84  w    F .text	0000000000000026              List<List<Item> >::concat(List<List<Item> >*)
000000000090e2ca  w    F .text	0000000000000041              table_events_waits_history::~table_events_waits_history()
000000000094ba4e g     F .text	0000000000001838              mi_state_info_write
00000000008f90fc g     F .text	00000000000000e3              my_safe_snprintf
0000000000753758 g     F .text	0000000000000067              Field_timestamp::set_time()
0000000000583aa4 g     F .text	0000000000000092              GRANT_NAME::GRANT_NAME(char const*, char const*, char const*, char const*, unsigned long, bool)
0000000000739e52  w    F .text	0000000000000038              Item_func_rtrim::Item_func_rtrim(Item*)
00000000006cc81a g     F .text	00000000000002b4              Events::drop_event(THD*, st_mysql_lex_string, st_mysql_lex_string, bool)
00000000007dca78  w    F .text	0000000000000046              Item_func_bit_count::~Item_func_bit_count()
00000000010b1ab0  w    O .data.rel.ro	0000000000000368              vtable for Item_avg_field
00000000010c6490  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_union
000000000070ea36  w    F .text	0000000000000026              Sys_var_flagset::~Sys_var_flagset()
0000000000ba8aa1 g     F .text	000000000000002a              free_vio_ssl_acceptor_fd
000000000106c120  w    O .data.rel.ro	0000000000000040              vtable for TC_LOG
0000000000678700  w    F .text	0000000000000026              List_iterator_fast<char>::List_iterator_fast(List<char>&)
000000000069daf2  w    F .text	00000000000000e1              JOIN::~JOIN()
000000000082d28e  w    F .text	000000000000005f              Rand_log_event::Rand_log_event(THD*, unsigned long long, unsigned long long)
0000000000b7a74a g     F .text	0000000000000034              _db_lock_file_
000000000057b262 g     F .text	000000000000001b              sp_cache::~sp_cache()
000000000088b10c  w    F .text	0000000000000026              List_iterator_fast<sp_label>::List_iterator_fast(List<sp_label>&)
0000000000708c5a  w    F .text	00000000000000f0              Sys_var_enum::Sys_var_enum(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
0000000000784978 g     F .text	000000000000004b              Item_uint::Item_uint(char const*, long long, unsigned int)
000000000095c6d5 g     F .text	000000000000004f              _mi_move_key
0000000000b8438a g     F .text	0000000000000020              my_numcells_8bit
000000000136fbc8 g     O .bss	0000000000000008              opt_relaylog_index_name
00000000006980ea  w    F .text	000000000000011c              Table_triggers_list::Table_triggers_list(TABLE*)
0000000000738ed0  w    F .text	0000000000000011              Item_func_istrue::func_name() const
0000000000823678 g     F .text	0000000000000071              MYSQL_BIN_LOG::raw_get_current_log(st_log_info*)
00000000008c263e  w    F .text	0000000000000046              Item_nodeset_context_cache::~Item_nodeset_context_cache()
00000000007fc5e6  w    F .text	0000000000000046              subselect_engine::~subselect_engine()
00000000007dbe92  w    F .text	0000000000000017              User_level_lock::initialized()
00000000008ec318 g     F .text	000000000000011d              my_delete
000000000077f1cc g     F .text	000000000000008f              Item::cleanup()
000000000067d418 g     F .text	0000000000000041              check_mysql50_prefix(char const*)
000000000077e160 g     F .text	0000000000000059              Hybrid_type_traits_decimal::val_real(Hybrid_type*) const
000000000073ca04  w    F .text	0000000000000045              Signal_statement::Signal_statement(LEX*, sp_cond_type const*, Set_signal_information const&)
00000000007dc0a0  w    F .text	0000000000000046              Item_func_row_count::~Item_func_row_count()
00000000007966aa  w    F .text	000000000000002d              Hybrid_type_traits_decimal::Hybrid_type_traits_decimal()
00000000005b0910  w    F .text	0000000000000039              I_P_List<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> >::I_P_List()
00000000007fc3ec  w    F .text	0000000000000016              Item_exists_subselect::reset()
0000000000000000       F *UND*	0000000000000000              fopen64@@GLIBC_2.2.5
00000000007dd9cc  w    F .text	0000000000000046              Item_func_mod::~Item_func_mod()
0000000001215ea0 g     O .data	0000000000000100              to_lower_armscii8_bin
00000000005a042d g     F .text	0000000000000153              rename_temporary_table(THD*, TABLE*, char const*, char const*)
0000000000812cf4 g     F .text	00000000000000cc              Item_date_typecast::val_int()
0000000000912aac g     F .text	0000000000000127              table_rwlock_instances::make_row(PFS_rwlock*)
0000000000912510 g     F .text	00000000000000b3              table_mutex_instances::rnd_pos(void const*)
0000000000d4645c g     O .rodata	0000000000000004              ha_partition::NO_CURRENT_PART_ID
00000000007b0d0c  w    F .text	000000000000002b              cmp_item_real::~cmp_item_real()
00000000013865e0 g     O .bss	0000000000000008              Create_func_locate::s_singleton
0000000000659cda  w    F .text	0000000000000089              Item_func_rollup_const::fix_length_and_dec()
0000000000605e62 g     F .text	000000000000005c              check_string_byte_length(st_mysql_lex_string*, char const*, unsigned int)
00000000007be70c  w    F .text	000000000000002d              Create_func_dayofmonth::Create_func_dayofmonth()
00000000007f63dc g     F .text	0000000000000167              Item_in_subselect::Item_in_subselect(Item*, st_select_lex*)
0000000000895f08 g     F .text	00000000000003d5              field_longlong::add()
0000000000812dc0 g     F .text	00000000000001ca              Item_func_makedate::val_str(String*)
000000000136cc78 g     O .bss	0000000000000004              mysqld_port_timeout
000000000069d7e0 g     F .text	00000000000000a6              st_select_lex_unit::get_unit_column_types()
00000000007fc6c4  w    F .text	0000000000000012              subselect_uniquesubquery_engine::no_rows()
0000000000ba54f7 g     F .text	000000000000001e              my_xml_set_user_data
0000000000b5df46  w    F .text	000000000000000f              ha_tina::fast_key_read()
00000000012cc660 g     O .data	00000000000000b0              my_charset_utf16_danish_uca_ci
00000000013867e8 g     O .bss	0000000000000008              Create_func_weekofyear::s_singleton
00000000007684d0  w    F .text	000000000000002b              Field_short::~Field_short()
0000000000607170  w    F .text	000000000000000b              Set_signal_information::Set_signal_information()
000000000077af43 g     F .text	000000000000008b              signal_log_not_needed(handlerton, char*)
00000000007b00b0  w    F .text	000000000000002b              Item_cond::~Item_cond()
000000000054beea g     F .text	0000000000000030              Buffered_logs::cleanup()
00000000007383e4  w    F .text	0000000000000038              Item_func_num1::Item_func_num1(Item*)
00000000007e25c6  w    F .text	0000000000000046              Item_func_geometry_type::~Item_func_geometry_type()
00000000006a9120 g     F .text	000000000000059e              mysql_drop_view(THD*, TABLE_LIST*, enum_drop_mode)
00000000013708bc g     O .bss	0000000000000004              key_file_global_ddl_log
00000000005e98ac  w    F .text	0000000000000026              I_List<delayed_row>::move_elements_to(I_List<delayed_row>*)
00000000005a030c g     F .text	0000000000000121              close_temporary(TABLE*, bool, bool)
00000000005e620e g     F .text	00000000000002ec              select_insert::send_data(List<Item>&)
00000000007663a0  w    F .text	000000000000000f              Field_date::pack_length() const
00000000012bca80 g     O .data	0000000000000600              page027data
0000000000000000       F *UND*	0000000000000000              fputs@@GLIBC_2.2.5
000000000070ce86  w    F .text	0000000000000026              Sys_var_enum::~Sys_var_enum()
0000000000893d6e g     F .text	0000000000000038              sortcmp2(void*, String const*, String const*)
0000000001209560 g     O .data	0000000000000200              to_uni_latin2_general_ci
00000000006df7d8 g     F .text	000000000000012e              Relay_log_info::slave_close_thread_tables(THD*)
000000000083b762 g     F .text	0000000000000100              Rotate_log_event::write(st_io_cache*)
00000000010a63c0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_make_set
0000000001087a20  w    O .data.rel.ro	0000000000000030              vtable for Create_func_geometry_type
000000000075918a g     F .text	0000000000000111              Field_string::do_save_field_metadata(unsigned char*)
000000000056b36c  w    F .text	0000000000000038              AutoWLock::~AutoWLock()
0000000000852550  w    F .text	000000000000002b              Write_rows_log_event_old::~Write_rows_log_event_old()
00000000007d8b26 g     F .text	0000000000000094              Item_func_sp::cleanup()
00000000005d1c54  w    F .text	0000000000000041              Drop_table_error_handler::~Drop_table_error_handler()
0000000001386358 g     O .bss	0000000000000008              Create_func_area::s_singleton
0000000000b6332c g     F .text	00000000000002f8              ha_partition::copy_partitions(unsigned long long*, unsigned long long*)
00000000010d8ac0 g     O .data	0000000000000010              sym_group_geom
00000000010c46b8  w    O .data.rel.ro	0000000000000050              vtable for Materialized_cursor
000000000073aa64  w    F .text	000000000000002d              Item_func_curdate_local::Item_func_curdate_local()
000000000065c8c2  w    F .text	0000000000000026              List_iterator<Index_hint>::List_iterator(List<Index_hint>&)
0000000000b5a4c4 g     F .text	0000000000000073              ha_tina::is_crashed() const
00000000007389a0  w    F .text	0000000000000040              Item_func_shift_left::Item_func_shift_left(Item*, Item*)
000000000065a0b6  w    F .text	0000000000000040              Item_func_equal::Item_func_equal(Item*, Item*)
0000000000000000       F *UND*	0000000000000000              listen@@GLIBC_2.2.5
000000000070e854  w    F .text	0000000000000041              Sys_var_bit::~Sys_var_bit()
000000000077c03c  w    F .text	0000000000000013              handler::write_row(unsigned char*)
00000000007ddf04 g     F .text	0000000000000270              Item_func_geometry_from_text::val_str(String*)
0000000000920712  w    F .text	000000000000000f              ha_myisam::max_supported_key_length() const
00000000007d40ee g     F .text	0000000000000521              Item_func_set_user_var::save_in_field(Field*, bool, bool)
000000000066dd6a g     F .text	0000000000000471              fill_schema_proc(THD*, TABLE_LIST*, Item*)
0000000000697cf5 g     F .text	0000000000000027              check_trn_exists(st_mysql_lex_string const*)
00000000009828a8  w    F .text	0000000000000014              ha_heap::table_flags() const
000000000087e7f2  w    F .text	0000000000000035              Proc_table_intact::Proc_table_intact()
00000000010efac0 g     O .data	0000000000000058              table_rwlock_instances::m_share
0000000000606e02  w    F .text	0000000000000038              Item_func_not::Item_func_not(Item*)
00000000007affb8  w    F .text	000000000000000f              Item_cond::type() const
000000000073a2ea  w    F .text	0000000000000040              Item_func_point::Item_func_point(Item*, Item*)
00000000006b25c8 g     F .text	00000000000001d6              closefrm(TABLE*, bool)
0000000000765120  w    F .text	000000000000002b              Field_num::~Field_num()
00000000005afb6e  w    F .text	0000000000000061              Item_int_func::Item_int_func(Item*, Item*)
000000000082d628  w    F .text	0000000000000041              Silence_log_table_errors::~Silence_log_table_errors()
000000000075e03e g     F .text	00000000000001ec              Field_set::sql_type(String&) const
00000000007c1c5e  w    F .text	000000000000002d              Create_func_sign::Create_func_sign()
0000000000944ed2 g     F .text	0000000000000232              mi_assign_to_key_cache
00000000010878a0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_inet_aton
00000000005593ca  w    F .text	000000000000002d              Ge_creator::Ge_creator()
000000000059abe6  w    F .text	0000000000000046              GRANT_NAME::~GRANT_NAME()
00000000010e2b50 g     O .data	0000000000000018              sql_modes_parameters
000000000136f024 g     O .bss	0000000000000004              THR_MALLOC
00000000005c7f36 g     F .text	0000000000000133              select_max_min_finder_subselect::cmp_real()
00000000012cb7c0 g     O .data	00000000000000b0              my_charset_utf32_lithuanian_uca_ci
0000000000793d78 g     F .text	00000000000000c1              Item_cache_decimal::cache_value()
000000000097f159 g     F .text	000000000000001b              ft_nlq_close_search
00000000006b88f2 g     F .text	0000000000000318              Field_iterator_table_ref::set_field_iterator()
0000000000780846 g     F .text	00000000000000f5              Item_string::eq(Item const*, bool) const
00000000008c199c  w    F .text	00000000000000aa              Item_func_xpath_count::val_int()
00000000007fc466  w    F .text	0000000000000046              Item_exists_subselect::~Item_exists_subselect()
00000000007b99da  w    F .text	0000000000000038              Item_sum_udf_int::Item_sum_udf_int(st_udf_func*)
0000000000805950 g     F .text	0000000000000050              Item_sum_udf_float::copy_or_same(THD*)
000000000107ede0  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_like
00000000007886bc g     F .text	0000000000000067              Item_copy_decimal::save_in_field(Field*, bool)
00000000008c1136  w    F .text	0000000000000011              Item_nodeset_func_axisbyname::func_name() const
000000000073b310  w    F .text	000000000000002a              Query_tables_list::last_table()
000000000055c0ea  w    F .text	000000000000001b              NAMED_ILIST::NAMED_ILIST()
0000000000690caa  w    F .text	000000000000001b              List_iterator<Create_field>::rewind()
000000000075dd9e g     F .text	0000000000000119              Field_set::store(long long, bool)
00000000012c87c0 g     O .data	00000000000000b0              my_charset_ucs2_turkish_uca_ci
000000000079176e g     F .text	0000000000000393              Item_insert_value::fix_fields(THD*, Item**)
00000000008865c8 g     F .text	000000000000005b              sp_instr_set_trigger_field::exec_core(THD*, unsigned int*)
00000000008f162a g     F .text	000000000000005d              my_micro_time
0000000000739d9a  w    F .text	0000000000000040              Item_func_ltrim::Item_func_ltrim(Item*, Item*)
0000000000905ac6  w    F .text	0000000000000011              ha_perfschema::estimate_rows_upper_bound()
000000000079a8a2  w    F .text	0000000000000046              Item_copy_uint::~Item_copy_uint()
000000000073c366  w    F .text	000000000000004a              sp_instr_cclose::sp_instr_cclose(unsigned int, sp_pcontext*, unsigned int)
00000000006dbcc8 g     F .text	00000000000004e4              Relay_log_info::Relay_log_info(bool)
0000000000874322  w    F .text	0000000000000041              QUICK_RANGE_SELECT_GEOM::~QUICK_RANGE_SELECT_GEOM()
00000000005e918e  w    F .text	000000000000021b              Delayed_insert::~Delayed_insert()
000000000136cc36 g     O .bss	0000000000000001              opt_allow_suspicious_udfs
0000000000908c27 g     F .text	00000000000000a8              init_file_class(unsigned int)
00000000007be1a0  w    F .text	0000000000000026              Create_func_contains::~Create_func_contains()
00000000007989b4  w    F .text	0000000000000011              Item_copy::field_type() const
0000000000764fce  w    F .text	0000000000000011              Field_str::max_display_length()
00000000006e8c7c g     F .text	0000000000000058              PROF_MEASUREMENT::PROF_MEASUREMENT(QUERY_PROFILE*, char const*, char const*, char const*, unsigned int)
000000000138cc40 g     O .bss	0000000000000008              table_max
00000000007bb0d8  w    F .text	000000000000002d              Item_func_found_rows::Item_func_found_rows()
00000000005800c0 g     F .text	000000000000008a              is_acl_user(char const*, char const*)
000000000079a914  w    F .text	0000000000000046              Item_copy_string::~Item_copy_string()
000000000077c0ae  w    F .text	0000000000000013              handler::check_for_upgrade(st_ha_check_opt*)
0000000000606760  w    F .text	0000000000000042              Key_part_spec::Key_part_spec(st_mysql_lex_string const&, unsigned int)
0000000000b5e358 g     F .text	000000000000009c              Transparent_file::read_next()
000000000108dd48  w    O .data.rel.ro	0000000000000398              vtable for Item_master_pos_wait
00000000008180e2  w    F .text	0000000000000046              Item_func_week::~Item_func_week()
0000000000886a94 g     F .text	00000000000000ce              sp_instr_jump_if_not::print(String*)
000000000078af98 g     F .text	0000000000000030              Item_field::safe_charset_converter(charset_info_st*)
0000000000b6d39c g     F .text	0000000000000140              ha_partition::loop_extra(ha_extra_function)
00000000007f0406 g     F .text	000000000000061a              Item_func_quote::val_str(String*)
00000000006faa18 g     F .text	000000000000016c              trans_commit_stmt(THD*)
0000000000982d09 g     F .text	00000000000000e5              hp_rb_delete_key
00000000008bf924 g     F .text	0000000000000367              Item_xml_str_func::fix_length_and_dec()
0000000000877220  w    F .text	0000000000000029              Item_proc_string::val_str(String*)
0000000000675c61 g     F .text	00000000000001bb              make_columns_old_format(THD*, st_schema_table*)
00000000005e87a2  w    F .text	0000000000000035              TABLEOP_HOOKS::~TABLEOP_HOOKS()
0000000000748d2a g     F .text	0000000000000136              Field::Field(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*)
0000000000889e42  w    F .text	0000000000000026              List_iterator_fast<sp_instr>::List_iterator_fast(List<sp_instr>&)
00000000005990b1  w    F .text	0000000000000054              my_ok(THD*, unsigned long long, unsigned long long, char const*)
00000000012ca560 g     O .data	00000000000000b0              my_charset_utf8mb4_swedish_uca_ci
00000000005928ca g     F .text	0000000000000457              fill_schema_table_privileges(THD*, TABLE_LIST*, Item*)
00000000007be236  w    F .text	0000000000000026              Create_func_conv::~Create_func_conv()
0000000000878dd1 g     F .text	00000000000000d0              load_collation(st_mem_root*, Field*, charset_info_st*, charset_info_st**)
0000000001088170  w    O .data.rel.ro	0000000000000030              vtable for Create_func_compress
0000000000856f70 g     F .text	0000000000000027              SQL_SELECT::~SQL_SELECT()
0000000000000000       F *UND*	0000000000000000              __lxstat64@@GLIBC_2.2.5
00000000007cb086 g     F .text	00000000000000b7              Item_func_int_val::fix_num_length_and_dec()
00000000007c0746  w    F .text	000000000000002d              Create_func_log::Create_func_log()
000000000077bee0  w    F .text	000000000000000f              handler::lock_count() const
00000000007c1e4e  w    F .text	0000000000000041              Create_func_soundex::~Create_func_soundex()
000000000070c000  w    F .text	000000000000003c              Sys_var_bit::session_save_default(THD*, set_var*)
00000000013707f4 g     O .bss	0000000000000004              key_LOCK_thread_created
00000000008035a8 g     F .text	000000000000033e              Item_sum_avg::reset_field()
00000000005e89c8  w    F .text	0000000000000030              Table_triggers_list::has_triggers(trg_event_type, trg_action_time_type)
0000000000849b52  w    F .text	0000000000000046              Delete_rows_log_event::~Delete_rows_log_event()
00000000005afe0a  w    F .text	00000000000000a9              Query_tables_list::set_stmt_unsafe_flags(unsigned int)
00000000005bf81c  w    F .text	0000000000000065              Query_cache_block::result()
0000000000796eea  w    F .text	0000000000000033              Item_field::cast_to_int_type() const
000000000091ff74 g     F .text	0000000000000029              ha_myisam::rename_table(char const*, char const*)
000000000065996e  w    F .text	0000000000000025              Item_sum::get_arg(unsigned int)
0000000000797218  w    F .text	000000000000000f              Item_int::field_type() const
00000000006e88a4 g     F .text	0000000000000022              thd_scheduler::thd_scheduler()
00000000007dac3c  w    F .text	0000000000000013              Item_func_ceiling::check_partition_func_processor(unsigned char*)
0000000001087420  w    O .data.rel.ro	0000000000000030              vtable for Create_func_ltrim
000000000079bcbc  w    F .text	000000000000002b              Cached_item_field::~Cached_item_field()
00000000007bf130  w    F .text	0000000000000041              Create_func_exteriorring::~Create_func_exteriorring()
000000000121b1a0 g     O .data	0000000000000100              to_upper_cp852_bin
000000000077bc7a  w    F .text	0000000000000017              handler::assign_to_keycache(THD*, st_ha_check_opt*)
0000000000598d58  w    F .text	000000000000001f              Query_tables_list::Query_tables_list()
00000000007daaf2  w    F .text	0000000000000011              Item_func_log2::func_name() const
0000000000b5f3fe g     F .text	000000000000009f              ha_partition::ha_partition(handlerton*, TABLE_SHARE*)
00000000006904cc  w    F .text	000000000000007d              base_list::swap(base_list&)
00000000008146fe g     F .text	000000000000011f              Item_func_get_format::print(String*, enum_query_type)
0000000000817db2  w    F .text	0000000000000046              Item_func_curdate_local::~Item_func_curdate_local()
00000000010f6274 g     O .data	0000000000000004              builtin_csv_sizeof_struct_st_plugin
00000000008548b8 g     F .text	0000000000000905              str_to_time
000000000088a56a g     F .text	0000000000000091              sp_pcontext::diff_handlers(sp_pcontext*, bool)
0000000000893710  w    F .text	000000000000006a              Gis_point::get_xy(double*, double*) const
000000000055fca6  w    F .text	000000000000001d              List_iterator_fast<unsigned long long>::operator++(int)
00000000005d0db3  w    F .text	0000000000000012              Item_change_record::operator new(unsigned long, void*)
00000000005dc1a1 g     F .text	0000000000000123              mysql_ha_rm_tables(THD*, TABLE_LIST*)
00000000013865d0 g     O .bss	0000000000000008              Create_func_ln::s_singleton
0000000001086d00  w    O .data.rel.ro	0000000000000030              vtable for Create_func_srid
00000000007bc8fa  w    F .text	0000000000000038              Item_func_to_seconds::Item_func_to_seconds(Item*)
000000000087bb82 g     F .text	00000000000002e0              sp_drop_routine(THD*, int, sp_name*)
00000000006f5a7e  w    F .text	0000000000000043              I_P_List_iterator<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> >::operator++(int)
0000000000659188  w    F .text	00000000000000a2              Field_blob::Field_blob(unsigned int, bool, char const*, charset_info_st*)
00000000005bf40e  w    F .text	0000000000000018              Query_cache_table::key_length(unsigned int)
000000000095e4ec g     F .text	00000000000004c5              _mi_write_static_record
0000000000568584 g     F .text	00000000000000c1              Rpl_filter::add_wild_ignore_table(char const*)
000000000080f864 g     F .text	0000000000000073              Item_func_now::val_str(String*)
000000000067b328 g     F .text	0000000000000155              String::print(String*)
0000000000873388  w    F .text	0000000000000046              TRP_RANGE::~TRP_RANGE()
0000000000591434 g     F .text	00000000000003e6              acl_check_proxy_grant_access(THD*, char const*, char const*, bool)
0000000001367c20 g     O .data	0000000000001000              my_uni_ctype
0000000001386360 g     O .bss	0000000000000008              Create_func_as_wkb::s_singleton
00000000012c2c80 g     O .data	0000000000000400              page0A1data
0000000000876fa0  w    F .text	000000000000001b              Item_proc_int::val_real()
00000000007814a8 g     F .text	0000000000000009              non-virtual thunk to Item_splocal::set_value(THD*, sp_rcontext*, Item**)
0000000000628baa g     F .text	0000000000003598              JOIN::optimize()
0000000000748f0e g     F .text	0000000000000088              Field::do_last_null_byte() const
000000000120e920 g     O .data	0000000000000100              to_upper_latin5_turkish_ci
000000000136cc35 g     O .bss	0000000000000001              opt_sync_frm
000000000081bc00 g     F .text	0000000000000041              Log_to_csv_event_handler::~Log_to_csv_event_handler()
00000000007a4656 g     F .text	00000000000000a8              Item_func_nullif::val_int()
00000000005b1156  w    F .text	000000000000000f              I_P_List_no_push_back<MDL_request>::I_P_List_no_push_back(MDL_request**)
00000000013707fc g     O .bss	0000000000000004              key_rwlock_LOCK_logger
0000000000b82ef0 g     F .text	00000000000000b8              my_wc_mb_8bit
000000000076805c  w    F .text	000000000000002b              Field_newdate::~Field_newdate()
0000000000766254  w    F .text	000000000000007b              Field_date::Field_date(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
00000000007da61a  w    F .text	0000000000000046              Item_func_signed::~Item_func_signed()
0000000000598014  w    F .text	000000000000001b              list_node::~list_node()
00000000005c989e g     F .text	00000000000000ee              Security_context::init()
00000000010840e8  w    O .data.rel.ro	00000000000003a8              vtable for Item_func_ge
00000000007a7b42 g     F .text	000000000000004b              cmp_item_datetime::compare(cmp_item*)
0000000000000000       F *UND*	0000000000000000              endpwent@@GLIBC_2.2.5
000000000082d6e4  w    F .text	0000000000000041              Mutex_sentry::~Mutex_sentry()
00000000008c517c g     F .text	00000000000001c2              Event_scheduler::cond_wait(THD*, timespec*, char const*, char const*, unsigned int)
00000000007646e6  w    F .text	000000000000000f              Field::decimals() const
00000000008ee286 g     F .text	0000000000000019              getopt_double2ulonglong
0000000000607ec2  w    F .text	000000000000001b              List<Item_equal>::List()
000000000056cb1f g     F .text	0000000000000478              terminate_slave_threads(Master_info*, int, bool)
00000000007b9a12  w    F .text	0000000000000040              Item_sum_udf_int::Item_sum_udf_int(st_udf_func*, List<Item>&)
00000000007a781a g     F .text	000000000000009c              cmp_item_row::compare(cmp_item*)
0000000000815a30  w    F .text	0000000000000021              Item_func_month::check_valid_arguments_processor(unsigned char*)
000000000088d9a6 g     F .text	000000000000009d              Geometry::create_point(String*, char const*) const
00000000008048b8 g     F .text	000000000000016a              Item_sum_hybrid::min_max_update_int_field()
000000000136cdd0 g     O .bss	0000000000000008              binlog_cache_use
0000000000797292  w    F .text	0000000000000050              Item_uint::clone_item()
000000000067b47e g     F .text	00000000000000c4              String::swap(String&)
000000000136cc70 g     O .bss	0000000000000004              dropping_tables
0000000000847dec g     F .text	0000000000000082              Update_rows_log_event::~Update_rows_log_event()
00000000005c40ee g     F .text	00000000000000d3              THD::update_charset()
00000000007c30e0  w    F .text	0000000000000046              Item_func_like_range_max::~Item_func_like_range_max()
0000000000597f20  w    F .text	000000000000005c              base_list::base_list(base_list const&)
00000000006f5896  w    F .text	000000000000003e              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> >::I_P_List()
000000000073c48e  w    F .text	000000000000007a              sp_instr_set_case_expr::sp_instr_set_case_expr(unsigned int, sp_pcontext*, unsigned int, Item*, LEX*)
0000000001207ce0 g     O .data	0000000000000200              to_uni_cp850_general_ci
00000000010a0690  w    O .data.rel.ro	0000000000000398              vtable for Item_func_geometry_from_wkb
00000000010b85d8  w    O .data.rel.ro	00000000000003a0              vtable for Item_char_typecast
00000000007dad6e  w    F .text	0000000000000016              Item_func_char_length::fix_length_and_dec()
00000000007f3712  w    F .text	0000000000000046              Item_func_old_password::~Item_func_old_password()
000000000073c31c  w    F .text	000000000000004a              sp_instr_copen::sp_instr_copen(unsigned int, sp_pcontext*, unsigned int)
00000000008b9e9b g     F .text	0000000000000068              get_partition_field_store_length(Field*)
000000000082f77e g     F .text	00000000000001cf              lock_schema_name(THD*, char const*)
0000000000b6e2aa g     F .text	00000000000002c8              ha_partition::append_row_to_str(String&)
0000000000769cbe g     F .text	0000000000000122              Copy_field::set(unsigned char*, Field*)
0000000000910376 g     F .text	0000000000000071              table_file_summary_by_instance::table_file_summary_by_instance()
0000000001372420 g     O .bss	0000000000000001              empty_c_string
000000000058d268 g     F .text	00000000000000e4              get_privilege_desc(char*, unsigned int, unsigned long)
000000000073a9a2  w    F .text	000000000000002d              Item_func_curtime_local::Item_func_curtime_local()
00000000007a6e68 g     F .text	0000000000000055              in_decimal::in_decimal(unsigned int)
00000000007bac62  w    F .text	0000000000000056              Item_udf_func::Item_udf_func(st_udf_func*, List<Item>&)
000000000090c192  w    F .text	0000000000000026              PFS_updatable_acl::~PFS_updatable_acl()
00000000007aea22  w    F .text	0000000000000016              Item_func_opt_neg::top_level_item()
0000000000793672 g     F .text	0000000000000310              Item_cache_datetime::val_str(String*)
000000000089f838 g     F .text	00000000000001b8              search_topics(THD*, TABLE*, st_find_field*, SQL_SELECT*, List<String>*, String*, String*, String*)
000000000069d700 g     F .text	00000000000000df              st_select_lex_unit::change_result(select_subselect*, select_subselect*)
0000000000849640  w    F .text	0000000000000033              Rows_log_event::is_valid() const
00000000008f8a80 g     F .text	0000000000000070              my_safe_utoa
00000000005ba356 g     F .text	00000000000001fd              Query_cache::find_bin(unsigned long)
0000000000561800 g     F .text	00000000000002ac              Protocol::end_statement()
00000000010792d0  w    O .data.rel.ro	0000000000000360              vtable for Item_copy_int
000000000090f47e  w    F .text	0000000000000041              table_events_waits_summary_by_thread_by_event_name::~table_events_waits_summary_by_thread_by_event_name()
00000000010eef24 g     O .data	0000000000000004              pfs_storage_engine
00000000005cacd8 g     F .text	000000000000002d              xid_free_hash
00000000005af8d0  w    F .text	000000000000003e              Field::init(TABLE*)
0000000000745333 g     F .text	0000000000000258              mysql_fetch_row
000000000059b6b6  w    F .text	0000000000000027              LEX_COLUMN::~LEX_COLUMN()
00000000007f193c  w    F .text	0000000000000011              Item_func_sha::func_name() const
000000000079c674 g     F .text	0000000000000049              Ne_creator::create(Item*, Item*) const
00000000010c1040  w    O .data.rel.ro	0000000000000040              vtable for TC_LOG_DUMMY
00000000007dcaea  w    F .text	000000000000006a              Item_func_find_in_set::~Item_func_find_in_set()
00000000007c327c  w    F .text	000000000000002b              Item_func_max::~Item_func_max()
000000000088cf94  w    F .text	000000000000002b              Select_fetch_into_spvars::~Select_fetch_into_spvars()
00000000008c2eec  w    F .text	000000000000002e              table_mapping::find_entry(unsigned long)
0000000001375ea0 g     O .bss	0000000000000060              my_locale_es_EC
00000000007bc8fa  w    F .text	0000000000000038              Item_func_to_seconds::Item_func_to_seconds(Item*)
000000000073c7a8  w    F .text	0000000000000038              Analyze_table_statement::Analyze_table_statement(LEX*)
0000000000559172  w    F .text	000000000000002d              Eq_creator::Eq_creator()
000000000081674a  w    F .text	0000000000000029              Item_func_date_format::func_name() const
0000000000b5f59e g     F .text	0000000000000102              ha_partition::ha_partition(handlerton*, TABLE_SHARE*, partition_info*, ha_partition*, st_mem_root*)
0000000000618502 g     F .text	000000000000003e              Select_fetch_protocol_binary::send_eof()
00000000006d4798  w    F .text	0000000000000025              List<p_elem_val>::push_back(p_elem_val*)
0000000000765614  w    F .text	000000000000000f              Field_short::max_display_length()
00000000006ed978  w    F .text	000000000000002b              Signal_common::~Signal_common()
000000000106a5a8  w    O .data.rel.ro	0000000000000068              vtable for Prepared_statement
00000000009178aa g     F .text	000000000000002f              table_all_instr::reset_position()
00000000005bf5dc  w    F .text	0000000000000020              THD::in_multi_stmt_transaction_mode()
0000000000b84019 g     F .text	0000000000000054              my_wildcmp_8bit
000000000073a618  w    F .text	0000000000000038              Item_date_func::Item_date_func(Item*)
00000000008d5093 g     F .text	00000000000000ea              list_add
0000000001219c20 g     O .data	0000000000000100              to_lower_latin2_bin
000000000081e1ae g     F .text	00000000000000a7              LOGGER::deactivate_log_handler(THD*, unsigned int)
00000000007c0a0e  w    F .text	0000000000000026              Create_func_ltrim::~Create_func_ltrim()
00000000010b9f08  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_sysdate_local
000000000070cd6c  w    F .text	0000000000000026              Sys_var_tz::global_save_default(THD*, set_var*)
00000000007d9d76  w    F .text	0000000000000049              str_set_decimal(my_decimal const*, String*, charset_info_st*)
0000000000817372  w    F .text	000000000000002b              Item_func_get_format::~Item_func_get_format()
00000000007a6a46 g     F .text	00000000000000d3              in_row::set(unsigned int, Item*)
0000000000b6ef76 g     F .text	000000000000052e              ha_partition::final_add_index(handler_add_index*, bool)
00000000007e112a  w    F .text	000000000000007b              MBR::contains(MBR const*)
000000000081713a  w    F .text	0000000000000011              Item_func_timestamp_diff::func_name() const
0000000000873c6e  w    F .text	000000000000001a              List<QUICK_RANGE>::pop()
000000000079a4d4  w    F .text	000000000000002b              Item_insert_value::~Item_insert_value()
00000000005f142c  w    F .text	000000000000000b              Set_signal_information::~Set_signal_information()
000000000077de58 g     F .text	0000000000000044              Hybrid_type_traits::val_decimal(Hybrid_type*, my_decimal*) const
00000000005d80cc g     F .text	000000000000011a              MYSQL_ERROR::clear()
000000000061bd3e g     F .text	000000000000001a              Protocol_local::send_error(unsigned int, char const*, char const*)
00000000007fd576 g     F .text	000000000000029d              Item_sum::Item_sum(THD*, Item_sum*)
00000000007bca7c  w    F .text	000000000000003f              Item_func_unix_timestamp::Item_func_unix_timestamp()
000000000070f173 g     F .text	00000000000001c2              dd_frm_type(THD*, char*, legacy_db_type*)
0000000000785aec g     F .text	0000000000000013              Item_null::val_decimal(my_decimal*)
0000000000561361 g     F .text	0000000000000101              net_send_eof(THD*, unsigned int, unsigned int)
00000000007fdb4a g     F .text	00000000000000f4              Item_sum::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
00000000007b999a  w    F .text	0000000000000040              Item_sum_udf_float::Item_sum_udf_float(st_udf_func*, List<Item>&)
000000000079132e g     F .text	000000000000009c              Item_default_value::print(String*, enum_query_type)
000000000088e8f4 g     F .text	00000000000000c5              Gis_line_string::end_point(String*) const
000000000138c460 g     O .bss	0000000000000004              thd_lib_detected
00000000006d14ae g     F .text	00000000000001ec              partition_info::print_no_partition_found(TABLE*)
00000000007b0e82  w    F .text	000000000000002b              in_decimal::~in_decimal()
00000000007b0454  w    F .text	00000000000001c6              cmp_item_row::alloc_comparators(Item*)
000000000098da88 g     F .text	00000000000000a1              ha_myisammrg::index_prev(unsigned char*)
0000000000678556  w    F .text	000000000000001b              I_List<thread_info>::~I_List()
000000000087e9ce  w    F .text	0000000000000041              Bad_db_error_handler::~Bad_db_error_handler()
000000000078041a g     F .text	0000000000000265              Item_param::safe_charset_converter(charset_info_st*)
000000000070e7ec  w    F .text	0000000000000041              Sys_var_session_special::~Sys_var_session_special()
000000000077df62 g     F .text	00000000000000b8              Hybrid_type_traits_decimal::add(Hybrid_type*, Field*) const
00000000008841a8 g     F .text	0000000000000066              sp_head::push_backpatch(sp_instr*, sp_label*)
000000000073ba7e  w    F .text	000000000000008d              sp_name::sp_name(st_mysql_lex_string, st_mysql_lex_string, bool)
00000000005b0fe2  w    F .text	000000000000001d              List_iterator_fast<TABLE_LIST>::operator++(int)
00000000007c0b8e  w    F .text	0000000000000041              Create_func_make_set::~Create_func_make_set()
00000000010a99e8  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_ltrim
00000000007c39aa g     F .text	00000000000000cc              check_reserved_words(st_mysql_lex_string*)
000000000070e57c  w    F .text	0000000000000041              Sys_var_tx_isolation::~Sys_var_tx_isolation()
0000000000987b52 g     F .text	00000000000004d4              heap_update
0000000000768542  w    F .text	000000000000002b              Field_new_decimal::~Field_new_decimal()
0000000000b5a97e g     F .text	0000000000000464              ha_tina::encode_quote(unsigned char*)
0000000000946d95 g     F .text	0000000000000133              _mi_mark_file_changed
000000000094e119 g     F .text	0000000000000116              mi_state_info_read_dsk
0000000000c1ddd0 g     O .rodata	0000000000000010              null_lex_str
0000000000738502  w    F .text	0000000000000059              Item_int_func::Item_int_func(List<Item>&)
00000000008e9ca0 g     F .text	00000000000000a9              set_prealloc_root
0000000000868726 g     F .text	000000000000009a              QUICK_INDEX_MERGE_SELECT::is_keys_used(st_bitmap const*)
00000000007fbfc8 g     F .text	0000000000000060              subselect_single_select_engine::may_be_null()
00000000005f1a04  w    F .text	0000000000000027              SQL_I_List<st_order>::SQL_I_List()
000000000084571c g     F .text	00000000000000c4              Table_map_log_event::pack_info(Protocol*)
00000000008933c4  w    F .text	0000000000000035              Geometry::~Geometry()
0000000000b6f4a4 g     F .text	000000000000007b              ha_partition::prepare_drop_index(TABLE*, unsigned int*, unsigned int)
000000000055c96c g     F .text	00000000000000e2              mysql_client_plugin_deinit
000000000081606e  w    F .text	0000000000000011              Item_func_time_to_sec::func_name() const
0000000001376440 g     O .bss	0000000000000060              my_locale_fr_CH
0000000000765de8  w    F .text	000000000000000f              Field_null::match_collation_to_optimize_range() const
0000000000788376 g     F .text	0000000000000029              Item_copy_string::val_str(String*)
0000000000559666  w    F .text	000000000000001b              List<Buffered_log>::~List()
0000000000899a7c  w    F .text	000000000000002b              field_info::~field_info()
000000000138ce00 g     O .bss	0000000000000008              table_share_array
0000000000565480  w    F .text	0000000000000038              Protocol_text::Protocol_text(THD*)
00000000008a047b g     F .text	000000000000021a              send_answer_1(Protocol*, String*, String*, String*)
00000000005f01d4 g     F .text	0000000000000086              st_select_lex::add_index_hint(THD*, char*, unsigned int)
00000000007a52f6 g     F .text	00000000000006c2              Item_func_case::fix_length_and_dec()
000000000120e700 g     O .data	0000000000000101              ctype_latin5_turkish_ci
000000000058d419 g     F .text	00000000000004d2              open_grant_tables(THD*, TABLE_LIST*)
000000000095dfc2 g     F .text	0000000000000029              _mi_store_static_key
00000000005ce310  w    F .text	0000000000000012              String::is_alloced() const
0000000000752798 g     F .text	000000000000009f              Field_timestamp::Field_timestamp(bool, char const*, charset_info_st*)
00000000005bb3b8 g     F .text	000000000000117c              Query_cache::move_by_type(unsigned char**, Query_cache_block**, unsigned long*, Query_cache_block*)
0000000000607646  w    F .text	00000000000000ee              Incident_log_event::Incident_log_event(THD*, Incident)
00000000007aff64  w    F .text	0000000000000011              Item_func_regex::func_name() const
00000000006c762c g     F .text	00000000000000d2              Event_basic::Event_basic()
00000000005b04ea  w    F .text	0000000000000012              Open_table_context::has_protection_against_grl() const
00000000008166f8  w    F .text	0000000000000013              Item_func_from_days::check_partition_func_processor(unsigned char*)
00000000006f5464  w    F .text	000000000000000e              MDL_lock::Ticket_list::operator I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> > const&() const
0000000001086fd0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_release_lock
00000000005a5958 g     F .text	00000000000000af              DML_prelocking_strategy::handle_table(THD*, Query_tables_list*, TABLE_LIST*, bool*)
00000000005ce9b8  w    F .text	000000000000001b              List<Item_field>::~List()
0000000001217520 g     O .data	0000000000000200              to_uni_cp866_bin
000000000079aad2  w    F .text	0000000000000046              Item_uint::~Item_uint()
00000000005ce56a  w    F .text	000000000000002a              Ha_trx_info::reset()
00000000007db78a  w    F .text	00000000000000dd              Item_func_match::cleanup()
000000000136dec8 g     O .bss	0000000000000008              opt_tc_log_file
000000000073845c  w    F .text	0000000000000040              Item_num_op::Item_num_op(Item*, Item*)
0000000000893548  w    F .text	0000000000000016              Geometry::interior_ring_n(unsigned int, String*) const
00000000007e1bd0  w    F .text	0000000000000011              Item_func_numpoints::func_name() const
00000000007990fc  w    F .text	0000000000000080              Item_cache::Item_cache()
00000000008aef52 g     F .text	000000000000015c              partition_key_modified(TABLE*, st_bitmap const*)
000000000070d5c8  w    F .text	0000000000000014              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::check_update_type(Item_result)
00000000007bc932  w    F .text	0000000000000038              Item_func_monthname::Item_func_monthname(Item*)
00000000009183f8  w    F .text	0000000000000016              pos_all_instr::has_more_view()
00000000007b0238  w    F .text	0000000000000038              Item_cond_or::Item_cond_or(List<Item>&)
000000000073aff4  w    F .text	0000000000000048              Item_func_get_format::Item_func_get_format(enum_mysql_timestamp_type, Item*)
00000000006eb06a  w    F .text	0000000000000016              Queue<QUERY_PROFILE>::iterator_next(void*)
0000000000b683dc g     F .text	00000000000000c1              ha_partition::start_bulk_insert(unsigned long long)
0000000000793196 g     F .text	0000000000000066              Item_cache_int::val_real()
000000000136cc42 g     O .bss	0000000000000001              lower_case_file_system
000000000080a6e8  w    F .text	000000000000002b              Item_sum_or::~Item_sum_or()
00000000006f5390  w    F .text	0000000000000015              MDL_context::get_needs_thr_lock_abort() const
0000000001209980 g     O .data	0000000000000100              to_upper_swe7_swedish_ci
000000000079c882 g     F .text	000000000000004e              Item_func_not::print(String*, enum_query_type)
0000000000876e56  w    F .text	0000000000000013              Item_proc_real::val_real()
000000000077c3e2  w    F .text	000000000000004a              Write_rows_log_event::binlog_row_logging_function(THD*, TABLE*, bool, st_bitmap*, unsigned int, unsigned char const*, unsigned char const*)
0000000000889184  w    F .text	0000000000000046              sp_instr_opt_meta::~sp_instr_opt_meta()
00000000006592ac  w    F .text	0000000000000058              Field_blob::set_ptr(unsigned char*, unsigned char*)
00000000007a33d0 g     F .text	00000000000002e7              Item_func_ifnull::fix_length_and_dec()
00000000007bf7a2  w    F .text	0000000000000041              Create_func_geometryn::~Create_func_geometryn()
00000000005e991e  w    F .text	0000000000000046              select_create::~select_create()
00000000008ffdce g     F .text	000000000000012c              safe_mutex_destroy
00000000008c0688  w    F .text	0000000000000071              Item_xml_str_func::Item_xml_str_func(Item*, Item*, Item*)
0000000000b5fb08 g     F .text	0000000000000309              ha_partition::initialize_partition(st_mem_root*)
000000000075afe0 g     F .text	00000000000000db              Field_blob::put_length(unsigned char*, unsigned int)
00000000007c0102  w    F .text	0000000000000041              Create_func_issimple::~Create_func_issimple()
00000000007b1238  w    F .text	0000000000000046              Item_func_interval::~Item_func_interval()
00000000010a7d00  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_sysconst
00000000012cb640 g     O .data	00000000000000b0              my_charset_utf32_czech_uca_ci
000000000079a278  w    F .text	0000000000000046              Item_cache_real::~Item_cache_real()
00000000005654f2  w    F .text	0000000000000039              Item_result_field::Item_result_field()
000000000079482e g     F .text	00000000000000ed              Item_cache_row::cache_value()
000000000106c440  w    O .data.rel.ro	0000000000000028              vtable for Analyze_table_statement
00000000010b1748  w    O .data.rel.ro	0000000000000368              vtable for Item_std_field
00000000007c055e  w    F .text	0000000000000026              Create_func_like_range_max::~Create_func_like_range_max()
0000000001088650  w    O .data.rel.ro	0000000000000030              vtable for Create_sp_func
00000000008518b4 g     F .text	000000000000004b              Write_rows_log_event_old::Write_rows_log_event_old(char const*, unsigned int, Format_description_log_event const*)
00000000008939d2  w    F .text	000000000000002d              Gis_multi_point::Gis_multi_point()
00000000008d4e15 g     F .text	000000000000027e              my_hash_check
0000000001215760 g     O .data	0000000000000101              ctype_cp1257_general_ci
0000000000981012 g     F .text	000000000000008d              ha_heap::set_keys_for_scanning()
00000000005d0330  w    F .text	0000000000000026              List<Key_part_spec>::List(List<Key_part_spec> const&)
00000000007e454c g     F .text	000000000000006a              Item_func_sha::fix_length_and_dec()
00000000007fc340  w    F .text	000000000000000f              Item_singlerow_subselect::substype()
00000000006eff60 g     F .text	000000000000027c              Binlog_relay_IO_delegate::after_queue_event(THD*, Master_info*, char const*, unsigned long, bool)
00000000007667d0  w    F .text	000000000000000f              Field_datetime::cmp_type() const
0000000000779bda g     F .text	000000000000005d              handler::compare_key(st_key_range*)
00000000005d7d98  w    F .text	00000000000000a0              TMP_TABLE_PARAM::TMP_TABLE_PARAM()
00000000008f1bc9 g     F .text	000000000000020d              my_init
00000000010ef400 g     O .data	0000000000000058              table_events_waits_history::m_share
000000000054e29b g     F .text	00000000000000d3              end_thread_signal
0000000000709730  w    F .text	0000000000000088              Sys_var_proxy_user::Sys_var_proxy_user(char const*, char const*, charset_enum)
00000000005afb6e  w    F .text	0000000000000061              Item_int_func::Item_int_func(Item*, Item*)
000000000069800a  w    F .text	0000000000000035              Object_creation_ctx::~Object_creation_ctx()
00000000007bdd44  w    F .text	0000000000000041              Create_func_centroid::~Create_func_centroid()
00000000012caaa0 g     O .data	00000000000000b0              my_charset_utf8mb4_roman_uca_ci
000000000076816c  w    F .text	0000000000000046              Field_time::~Field_time()
00000000005dc908  w    F .text	0000000000000014              handler::get_index() const
00000000005afdc6  w    F .text	0000000000000043              Query_tables_list::chop_off_not_own_tables()
00000000005d0096  w    F .text	000000000000001a              List<Key>::head()
000000000106c348  w    O .data.rel.ro	0000000000000048              vtable for MDL_lock
00000000013707e8 g     O .bss	0000000000000004              key_PARTITION_LOCK_auto_inc
00000000007e323a  w    F .text	0000000000000026              Item_row::make_field(Send_field*)
00000000005b10ec  w    F .text	000000000000001d              List_iterator<Item_func_match>::operator++(int)
00000000007bc4b0  w    F .text	0000000000000050              Item_func_spatial_decomp_n::Item_func_spatial_decomp_n(Item*, Item*, Item_func::Functype)
0000000000000000       F *UND*	0000000000000000              getpwuid@@GLIBC_2.2.5
0000000000815796  w    F .text	0000000000000011              Item_func_to_days::func_name() const
000000000079f93a g     F .text	000000000000017c              Arg_comparator::compare_e_decimal()
00000000005a21a6 g     F .text	00000000000000ee              find_locked_table(TABLE*, char const*, char const*)
000000000086b5a4 g     F .text	000000000000017b              QUICK_ROR_INTERSECT_SELECT::add_info_string(String*)
000000000090c122  w    F .text	000000000000002d              PFS_updatable_acl::PFS_updatable_acl()
0000000000000000       F *UND*	0000000000000000              ftime@@GLIBC_2.2.5
0000000000841d2e g     F .text	000000000000002b              Rows_log_event::~Rows_log_event()
00000000007bb7b4  w    F .text	000000000000004a              Item_func_des_decrypt::Item_func_des_decrypt(Item*)
00000000007f3a3a  w    F .text	000000000000002b              Item_func_right::~Item_func_right()
0000000000785264 g     F .text	00000000000002bd              Item_string::print(String*, enum_query_type)
0000000000678b46  w    F .text	0000000000000026              List_iterator<p_elem_val>::List_iterator(List<p_elem_val>&)
00000000007cc814 g     F .text	0000000000000406              Item_func_min_max::fix_length_and_dec()
000000000088923c  w    F .text	000000000000002b              sp_instr_jump::~sp_instr_jump()
0000000000872158  w    F .text	0000000000000093              QUICK_ROR_UNION_SELECT::is_valid()
00000000008f85ee g     F .text	0000000000000015              my_init_stacktrace
0000000000816b4a  w    F .text	0000000000000030              Item_date_typecast::val_real()
00000000008caa54  w    F .text	00000000000000cc              Event_db_intact::report_error(unsigned int, char const*, ...)
000000000073a96a  w    F .text	0000000000000038              Item_func_curtime::Item_func_curtime(Item*)
00000000006e95cc g     F .text	0000000000000091              PROFILING::discard_current_query()
000000000089c0ac  w    F .text	0000000000000046              Select_materialize::~Select_materialize()
00000000005d001c  w    F .text	0000000000000025              List<Key>::push_back(Key*)
000000000074caae g     F .text	0000000000000196              Field_new_decimal::store(long long, bool)
00000000007104c8 g     F .text	0000000000000078              MYSQLerror(THD*, char const*)
00000000007ea5b6 g     F .text	0000000000000051              Item_func_old_password::alloc(THD*, char const*, unsigned long)
0000000000912176 g     F .text	0000000000000119              table_setup_timers::update_row_values(TABLE*, unsigned char const*, unsigned char*, Field**)
00000000007c9308 g     F .text	00000000000000c8              Item_func_int_div::fix_length_and_dec()
00000000007bdf06  w    F .text	0000000000000041              Create_func_compress::~Create_func_compress()
000000000065c5fa  w    F .text	000000000000001d              List_iterator_fast<Item_equal>::operator++(int)
0000000001087810  w    O .data.rel.ro	0000000000000030              vtable for Create_func_intersects
00000000005ceb90  w    F .text	000000000000001b              List<Key>::~List()
00000000005ef562 g     F .text	0000000000000047              LEX::only_view_structure()
00000000005bf6e2  w    F .text	000000000000004b              Query_cache_block_table::block()
0000000001209140 g     O .data	0000000000000101              ctype_latin2_general_ci
000000000090a9da g     F .text	00000000000001ed              PFS_engine_table_share::check_one_table(THD*)
00000000007e3d48 g     F .text	000000000000013c              Item_str_func::val_decimal(my_decimal*)
00000000005653d6  w    F .text	0000000000000035              Protocol::~Protocol()
00000000010c3480  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_error
00000000005b3712 g     F .text	0000000000000058              query_cache_invalidate_by_MyISAM_filename
00000000007beed8  w    F .text	0000000000000041              Create_func_envelope::~Create_func_envelope()
00000000005e8784  w    F .text	000000000000001d              TABLEOP_HOOKS::TABLEOP_HOOKS()
00000000007b5348 g     F .text	0000000000000058              Create_func_makedate::create(THD*, Item*, Item*)
0000000000000000       F *UND*	0000000000000000              pthread_mutex_destroy@@GLIBC_2.2.5
00000000007dd402  w    F .text	0000000000000046              Item_func_cos::~Item_func_cos()
00000000005c883a g     F .text	00000000000000c3              Statement::Statement(LEX*, st_mem_root*, Query_arena::enum_state, unsigned long)
000000000065b684  w    F .text	0000000000000015              store_key_field::name() const
00000000010dc400 g     O .data	0000000000000008              any_db
00000000010eb268 g     O .data	0000000000000008              Sys_autocommit_ptr
00000000007c93d0 g     F .text	00000000000001cf              Item_func_mod::int_op()
00000000005dc556 g     F .text	00000000000000d4              mysql_ha_cleanup(THD*)
00000000006987cc  w    F .text	000000000000001b              List<unsigned long long>::List()
000000000073ab8c  w    F .text	000000000000002d              Item_func_now_utc::Item_func_now_utc()
0000000000b90298 g     F .text	00000000000001a7              my_strnxfrm_unicode_full_bin
0000000000847a30 g     F .text	000000000000004b              Delete_rows_log_event::Delete_rows_log_event(char const*, unsigned int, Format_description_log_event const*)
0000000000849236  w    F .text	0000000000000014              Rotate_log_event::get_data_size()
000000000078ff46 g     F .text	0000000000000097              Item_ref::val_int_result()
000000000057b27e g     F .text	0000000000000055              sp_cache::init()
000000000070eb2c  w    F .text	0000000000000041              Sys_var_keycache::~Sys_var_keycache()
000000000056676a  w    F .text	0000000000000032              Item::save_safe_in_field(Field*)
000000000136e3d0 g     O .bss	0000000000000008              thread_handling
00000000006f6180  w    F .text	0000000000000041              MDL_object_lock::~MDL_object_lock()
00000000007ba1ca  w    F .text	0000000000000038              Item_func_acos::Item_func_acos(Item*)
00000000005cf1fa  w    F .text	0000000000000239              LEX::~LEX()
00000000007088b4  w    F .text	000000000000011a              Sys_var_typelib::Sys_var_typelib(char const*, char const*, int, long, CMD_LINE, enum_mysql_show_type, char const**, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
0000000001386470 g     O .bss	0000000000000008              Create_func_disjoint::s_singleton
0000000000b6f594 g     F .text	0000000000000011              ha_partition::bas_ext() const
00000000006e8c7c g     F .text	0000000000000058              PROF_MEASUREMENT::PROF_MEASUREMENT(QUERY_PROFILE*, char const*, char const*, char const*, unsigned int)
00000000007bd6a4  w    F .text	000000000000002d              Create_func_aes_decrypt::Create_func_aes_decrypt()
000000000077a936 g     F .text	00000000000000e7              handler::ha_external_lock(THD*, int)
00000000008d0166 g     F .text	00000000000000f9              get_charset_by_name
000000000077c1d2  w    F .text	000000000000001b              handler::delete_all_rows()
000000000093a68a g     F .text	0000000000000264              mi_delete_table
000000000092ad91 g     F .text	0000000000001bb5              mi_repair_parallel
000000000073bcf2  w    F .text	0000000000000075              sp_instr_stmt::sp_instr_stmt(unsigned int, sp_pcontext*, LEX*)
000000000085848a g     F .text	0000000000000026              QUICK_ROR_INTERSECT_SELECT::~QUICK_ROR_INTERSECT_SELECT()
0000000001087ba0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_find_in_set
0000000000797738  w    F .text	0000000000000013              Item_static_string_func::check_partition_func_processor(unsigned char*)
0000000000000000  w      *UND*	0000000000000000              _Jv_RegisterClasses
0000000000678bf2  w    F .text	0000000000000046              thread_info::~thread_info()
000000000069dbd4  w    F .text	0000000000000056              select_union::~select_union()
0000000000000000       F *UND*	0000000000000000              fflush@@GLIBC_2.2.5
0000000000817d14  w    F .text	000000000000002b              Item_func_curtime_local::~Item_func_curtime_local()
00000000007dc8b0  w    F .text	0000000000000046              Item_func_udf_str::~Item_func_udf_str()
00000000005cfc7c  w    F .text	0000000000000013              select_result::initialize_tables(JOIN*)
00000000010c3db0  w    O .data.rel.ro	00000000000000d0              vtable for Gis_multi_polygon
00000000012c2280 g     O .data	0000000000000600              page04Ddata
000000000060717c  w    F .text	000000000000002b              Yacc_state::Yacc_state()
0000000000638dbb g     F .text	00000000000000e6              store_val_in_field(Field*, Item*, enum_check_fields)
00000000007bf198  w    F .text	000000000000002d              Create_func_field::Create_func_field()
0000000000598fee  w    F .text	0000000000000070              THD::clear_current_stmt_binlog_format_row()
00000000005c4e0c g     F .text	000000000000002c              select_result::send_error(unsigned int, char const*)
000000000090b2cc g     F .text	0000000000000034              PFS_updatable_acl::check(unsigned long, unsigned long*) const
00000000010c7a20  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_context_cache
0000000000815b12  w    F .text	0000000000000011              Item_func_hour::func_name() const
000000000073c0a8  w    F .text	000000000000007b              sp_instr_freturn::sp_instr_freturn(unsigned int, sp_pcontext*, Item*, enum_field_types, LEX*)
0000000000739dda  w    F .text	0000000000000038              Item_func_ltrim::Item_func_ltrim(Item*)
0000000000568a27 g     F .text	0000000000000023              free_table_ent
000000000086a94e g     F .text	00000000000000f2              QUICK_RANGE_SELECT::row_in_ranges()
0000000001372f08 g     O .bss	0000000000000008              opt_plugin_dir_ptr
000000000107b168  w    O .data.rel.ro	0000000000000358              vtable for Item_ident
0000000000768250  w    F .text	0000000000000046              Field_double::~Field_double()
00000000008c1148  w    F .text	000000000000008d              Item_nodeset_func_axisbyname::validname(my_xml_node_st*)
00000000007c1fe2  w    F .text	000000000000002d              Create_func_srid::Create_func_srid()
000000000055fbde  w    F .text	000000000000005e              File_parser::File_parser()
00000000007664ec  w    F .text	000000000000000f              Field_newdate::key_type() const
000000000073a1c2  w    F .text	0000000000000040              Item_func_set_collation::Item_func_set_collation(Item*, Item*)
00000000008e9afe g     F .text	00000000000001a2              free_root
0000000000815fd2  w    F .text	0000000000000011              Item_func_dayname::func_name() const
0000000001376988 g     O .bss	0000000000000008              binlog_storage_delegate
00000000007f1af0  w    F .text	0000000000000011              Item_func_trim::mode_name() const
00000000006fd10a g     F .text	000000000000006e              fix_delay_key_write(sys_var*, THD*, enum_var_type)
00000000006786f0  w    F .text	000000000000000f              List_iterator_fast<char>::ref()
000000000069824c  w    F .text	000000000000004b              Stored_program_creation_ctx::Stored_program_creation_ctx(THD*)
00000000005d7d36  w    F .text	0000000000000012              st_select_lex::next_select_in_list()
0000000000816bca  w    F .text	000000000000002a              Item_date_typecast::save_in_field(Field*, bool)
00000000007b16ac  w    F .text	0000000000000046              Item_func_nop_all::~Item_func_nop_all()
00000000010c22f0  w    O .data.rel.ro	00000000000000a0              vtable for QUICK_ROR_UNION_SELECT
00000000007376a6  w    F .text	000000000000003a              Alter_column::Alter_column(char const*, Item*)
00000000008ca0da g     F .text	00000000000002f3              Event_db_repository::load_named_event(THD*, st_mysql_lex_string, st_mysql_lex_string, Event_basic*)
0000000000794774 g     F .text	00000000000000b9              Item_cache_row::store(Item*)
00000000007b4520 g     F .text	0000000000000086              Create_func_get_lock::create(THD*, Item*, Item*)
000000000056b3e8  w    F .text	0000000000000038              AutoRLock::~AutoRLock()
0000000000889aa8  w    F .text	0000000000000012              sp_cursor::get_lex_keeper()
000000000065abc8  w    F .text	000000000000004a              FT_SELECT::get_next()
00000000005dc94f  w    F .text	000000000000007c              open_tables(THD*, TABLE_LIST**, unsigned int*, unsigned int)
00000000005cf7e2  w    F .text	0000000000000059              Locked_tables_list::Locked_tables_list()
00000000005af9f8  w    F .text	000000000000003a              Name_resolution_context::init()
00000000007afa40  w    F .text	0000000000000119              Item_func_in::cleanup()
0000000000b94bfb g     F .text	00000000000004c8              decimal2string
0000000000607280  w    F .text	000000000000003e              Parser_state::reset(char*, unsigned int)
00000000012130a0 g     O .data	0000000000000100              to_lower_latin1_general_cs
00000000006bb92b g     F .text	0000000000000049              sql_memdup(void const*, unsigned long)
0000000000793f78 g     F .text	00000000000000be              Item_cache_decimal::val_str(String*)
00000000013708f4 g     O .bss	0000000000000004              key_file_init
000000000065ca3e  w    F .text	0000000000000056              store_key_field::~store_key_field()
00000000010debe0 g     O .data	00000000000000c8              user_privileges_fields_info
0000000000875154 g     F .text	0000000000000332              simple_pred(Item_func*, Item**, bool*)
000000000138c421 g     O .bss	0000000000000001              wild_prefix
000000000080a044  w    F .text	00000000000000b8              Item_func_group_concat::val_int()
00000000006a3c30 g     F .text	0000000000000214              multi_update::abort_result_set()
000000000067ab72 g     F .text	000000000000011a              copy_and_convert(char*, unsigned int, charset_info_st*, char const*, unsigned int, charset_info_st*, unsigned int*)
00000000013743a0 g     O .bss	0000000000000060              my_locale_fi_FI
000000000090c2e4  w    F .text	000000000000002d              PFS_check_intact::PFS_check_intact()
00000000012caec0 g     O .data	00000000000000b0              my_charset_utf32_unicode_ci
000000000082d28e  w    F .text	000000000000005f              Rand_log_event::Rand_log_event(THD*, unsigned long long, unsigned long long)
00000000007dc640  w    F .text	0000000000000046              Item_func_benchmark::~Item_func_benchmark()
00000000007bed58  w    F .text	0000000000000026              Create_func_encode::~Create_func_encode()
0000000000889e86  w    F .text	0000000000000025              List<sp_instr>::push_front(sp_instr*)
00000000007f5b50 g     F .text	0000000000000021              Item_singlerow_subselect::field_type() const
0000000000796c2a  w    F .text	0000000000000036              Item_case_expr::type() const
000000000087358c  w    F .text	0000000000000046              TRP_ROR_UNION::~TRP_ROR_UNION()
00000000008d0475 g     F .text	0000000000000236              escape_string_for_mysql
000000000090c24e  w    F .text	000000000000002d              PFS_unknown_acl::PFS_unknown_acl()
00000000007898e8 g     F .text	0000000000000c6f              Item_field::fix_outer_field(THD*, Field**, Item**)
00000000007844b2 g     F .text	00000000000001ae              Item_field::eq(Item const*, bool) const
000000000059bd00 g     F .text	000000000000005f              No_such_table_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
00000000007672fe  w    F .text	000000000000000f              Field_enum::zero_pack() const
000000000074fe48 g     F .text	0000000000000111              Field_long::val_real()
0000000000889e42  w    F .text	0000000000000026              List_iterator_fast<sp_instr>::List_iterator_fast(List<sp_instr>&)
00000000008523c2  w    F .text	0000000000000029              Update_rows_log_event_old::do_apply_event(Relay_log_info const*)
00000000007111e7 g     F .text	00000000000001f3              setup_select_in_parentheses(LEX*)
00000000005e8e36  w    F .text	000000000000001b              I_List<delayed_row>::~I_List()
0000000000889954  w    F .text	000000000000002b              sp_instr_error::~sp_instr_error()
00000000008722f8  w    F .text	0000000000000074              SEL_ARG::SEL_ARG(SEL_ARG::Type)
00000000008feab7 g     F .text	000000000000005e              thr_multi_unlock
00000000012cb340 g     O .data	00000000000000b0              my_charset_utf32_estonian_uca_ci
00000000007660e8  w    F .text	0000000000000037              Field_timestamp::pack(unsigned char*, unsigned char const*, unsigned int, bool)
0000000000659058  w    F .text	0000000000000085              Field_varstring::Field_varstring(unsigned char*, unsigned int, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, TABLE_SHARE*, charset_info_st*)
0000000001386880 g     O .bss	0000000000000070              LOCK_user_locks
00000000007f69a2 g     F .text	0000000000000081              Item_exists_subselect::val_bool()
0000000000b76565 g     F .text	0000000000000017              my_set_alarm_variable
00000000010c1c98  w    O .data.rel.ro	00000000000000b8              vtable for Update_rows_log_event_old
00000000007eb3ea g     F .text	00000000000004aa              Item_func_soundex::val_str(String*)
0000000000852e26 g     F .text	000000000000011b              my_decimal2string(unsigned int, my_decimal const*, unsigned int, unsigned int, char, String*)
00000000007bc932  w    F .text	0000000000000038              Item_func_monthname::Item_func_monthname(Item*)
000000000059b7e0  w    F .text	0000000000000041              DML_prelocking_strategy::~DML_prelocking_strategy()
0000000001374280 g     O .bss	0000000000000060              my_locale_es_ES
0000000001094620  w    O .data.rel.ro	0000000000000398              vtable for Item_func_sin
00000000007965d0  w    F .text	0000000000000017              Hybrid_type_traits::val_real(Hybrid_type*) const
0000000000b9b691 g     F .text	0000000000000a99              my_gcvt
000000000083978e g     F .text	000000000000064e              Load_log_event::Load_log_event(THD*, sql_exchange*, char const*, char const*, List<Item>&, bool, enum_duplicates, bool, bool)
00000000007f3e74  w    F .text	000000000000006a              Item_func_des_encrypt::~Item_func_des_encrypt()
0000000000957426 g     F .text	00000000000000a6              mi_rfirst
000000000076462e  w    F .text	0000000000000046              Field::cmp_binary_offset(unsigned int)
0000000000873ef8  w    F .text	0000000000000026              List_iterator_fast<QUICK_SELECT_I>::List_iterator_fast(List<QUICK_SELECT_I>&)
000000000136cbfc g     O .bss	0000000000000001              in_bootstrap
000000000081792c  w    F .text	0000000000000046              Item_func_convert_tz::~Item_func_convert_tz()
00000000007dc994  w    F .text	0000000000000046              Item_func_udf_int::~Item_func_udf_int()
000000000061c3ba  w    F .text	0000000000000046              st_lex_local::~st_lex_local()
000000000073838e  w    F .text	0000000000000056              Item_func_numhybrid::Item_func_numhybrid(List<Item>&)
00000000007aa09a g     F .text	00000000000001ad              and_expressions(Item*, Item*, Item**)
000000000121ab80 g     O .data	0000000000000100              to_lower_cp850_bin
000000000106cc60  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_dbug
000000000077c310  w    F .text	000000000000005f              Field::val_int_offset(unsigned int)
00000000006788a2  w    F .text	000000000000001a              List<char>::pop()
0000000000568942 g     F .text	00000000000000b3              Rpl_filter::add_ignore_db(char const*)
000000000088fe18 g     F .text	0000000000000011              Gis_polygon::get_class_info() const
00000000007dd84a  w    F .text	000000000000002b              Item_func_log::~Item_func_log()
00000000005e97b4  w    F .text	000000000000001b              I_List<delayed_row>::I_List()
000000000109e638  w    O .data.rel.ro	0000000000000398              vtable for Item_func_spatial_collection
0000000000797bd8  w    F .text	000000000000004e              Item_ref::save_in_result_field(bool)
000000000055fc3c  w    F .text	0000000000000026              List_iterator_fast<st_mysql_lex_string>::List_iterator_fast(List<st_mysql_lex_string>&)
0000000000764a39  w    F .text	0000000000000077              Field::handle_int24(unsigned char*, unsigned char const*, bool, bool)
0000000000809eae  w    F .text	0000000000000040              Item_sum_udf_decimal::Item_sum_udf_decimal(THD*, Item_sum_udf_decimal*)
0000000000000000       F *UND*	0000000000000000              signal@@GLIBC_2.2.5
00000000006e6b3e g     F .text	0000000000000139              release_user_connection(THD*)
0000000000796d9a  w    F .text	000000000000000f              Item_ident_for_show::type() const
000000000076608c  w    F .text	000000000000005c              Field_timestamp::store_timestamp(long)
00000000007b6896 g     F .text	0000000000000058              Create_func_timediff::create(THD*, Item*, Item*)
000000000121cc40 g     O .data	0000000000000100              to_lower_cp1250_polish_ci
0000000000ba3fb2 g     F .text	0000000000000044              strnmov
00000000008fd30c g     F .text	0000000000000015              init_thr_lock
00000000005586e0  w    F .text	000000000000000f              Sql_alloc::operator delete(void*, unsigned long)
0000000000000000       F *UND*	0000000000000000              free@@GLIBC_2.2.5
0000000000698934  w    F .text	0000000000000041              Deprecated_trigger_syntax_handler::~Deprecated_trigger_syntax_handler()
0000000000766aa2  w    F .text	00000000000000b0              Field_string::reset()
000000000065b4ea  w    F .text	000000000000002b              store_key::~store_key()
000000000091f354 g     F .text	0000000000000063              ha_myisam::rnd_next(unsigned char*)
00000000007f2682  w    F .text	000000000000004e              Item_func_collation::fix_length_and_dec()
00000000005d19ee  w    F .text	000000000000002b              select_exists_subselect::~select_exists_subselect()
00000000007547fe g     F .text	000000000000002e              Field_time::sql_type(String&) const
000000000078e12c g     F .text	000000000000002d              Item_null::send(Protocol*, String*)
00000000007818ec g     F .text	0000000000000195              Item_name_const::Item_name_const(Item*, Item*)
00000000007e2296  w    F .text	0000000000000046              Item_func_spatial_rel::~Item_func_spatial_rel()
00000000007bc842  w    F .text	0000000000000040              Item_func_period_add::Item_func_period_add(Item*, Item*)
0000000000812be8 g     F .text	000000000000003c              Item_date_typecast::get_time(st_mysql_time*)
000000000089f6ae g     F .text	000000000000018a              memorize_variant_topic(THD*, TABLE*, int, st_find_field*, List<String>*, String*, String*, String*)
00000000010683a0  w    O .data.rel.ro	0000000000000028              vtable for File_parser_dummy_hook
00000000006e80db g     F .text	0000000000000283              thd_prepare_connection(THD*)
0000000000607252  w    F .text	000000000000002d              Parser_state::~Parser_state()
00000000010dc600 g     O .data	0000000000000040              plugin_type_deinitialize
0000000000767080  w    F .text	000000000000002b              Field_blob::~Field_blob()
00000000009047b0 g     F .text	0000000000000046              ha_perfschema::~ha_perfschema()
00000000012bb680 g     O .data	0000000000000a00              page024data
0000000000799744  w    F .text	0000000000000026              Item_cache_row::make_field(Send_field*)
00000000010ef640 g     O .data	0000000000000058              table_file_instances::m_share
0000000000b5dda0  w    F .text	00000000000000c7              ha_tina::~ha_tina()
0000000000808cf2  w    F .text	000000000000002b              Item_sum_int::~Item_sum_int()
0000000000559362  w    F .text	0000000000000041              Lt_creator::~Lt_creator()
00000000007c1bc8  w    F .text	000000000000002d              Create_func_sha2::Create_func_sha2()
00000000007bc570  w    F .text	0000000000000038              Item_func_isclosed::Item_func_isclosed(Item*)
00000000009052f2 g     F .text	0000000000000027              ha_perfschema::truncate()
00000000006f5dfe  w    F .text	000000000000001e              I_P_List_iterator<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> >::rewind()
00000000008038e6 g     F .text	00000000000000f1              Item_sum_bit::reset_field()
0000000000779e5a g     F .text	0000000000000183              ha_known_exts()
000000000106a778  w    O .data.rel.ro	0000000000000030              vtable for store_key_field
0000000000808b52  w    F .text	0000000000000040              Item_sum_int::Item_sum_int(THD*, Item_sum_int*)
00000000007d5ae8 g     F .text	0000000000000089              Item_func_get_system_var::result_type() const
00000000013956c4 g     O .bss	0000000000000004              rg_key_file_MRG
000000000085183a g     F .text	000000000000007a              Write_rows_log_event_old::Write_rows_log_event_old(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
0000000000678908  w    F .text	0000000000000026              List<char>::prepand(List<char>*)
00000000007c022e  w    F .text	0000000000000041              Create_func_last_insert_id::~Create_func_last_insert_id()
000000000057d412 g     F .text	00000000000006c4              acl_reload(THD*)
0000000001375c60 g     O .bss	0000000000000060              my_locale_es_AR
00000000007bc9e2  w    F .text	000000000000005b              Item_func_weekday::Item_func_weekday(Item*, bool)
0000000000767654  w    F .text	000000000000000f              Field_bit::str_needs_quotes()
00000000005b2ce1 g     F .text	0000000000000083              query_cache_query_get_key
0000000000b7398b g     F .text	000000000000008c              lf_pinbox_init
0000000000901527 g     F .text	0000000000000066              tree_walk
0000000001386778 g     O .bss	0000000000000008              Create_func_time_to_sec::s_singleton
0000000000859634 g     F .text	000000000000101c              SQL_SELECT::test_quick_select(THD*, Bitmap<64u>, unsigned long long, unsigned long long, bool)
000000000080f62e g     F .text	0000000000000054              Item_func_curdate::get_date(st_mysql_time*, unsigned int)
000000000075fe7e g     F .text	0000000000000166              Field_bit::cmp_max(unsigned char const*, unsigned char const*, unsigned int)
0000000000815766  w    F .text	0000000000000011              Item_func_period_diff::func_name() const
00000000007e3286  w    F .text	0000000000000026              Item_row::val_int()
00000000007aee9c  w    F .text	000000000000002b              in_vector::~in_vector()
00000000012cb940 g     O .data	00000000000000b0              my_charset_utf32_spanish2_uca_ci
000000000056d9a0 g     F .text	00000000000000b6              close_active_mi()
000000000088eaa6 g     F .text	000000000000015e              Gis_polygon::get_data_size() const
00000000006787ce  w    F .text	0000000000000026              List<char>::List(List<char> const&)
00000000007dbd2e  w    F .text	000000000000002b              sys_var::is_written_to_binlog(enum_var_type)
000000000136cc88 g     O .bss	0000000000000004              protocol_version
000000000090c3a8  w    F .text	0000000000000041              PFS_internal_schema_access::~PFS_internal_schema_access()
00000000007e3e84 g     F .text	000000000000016d              Item_str_func::val_real()
0000000000797548  w    F .text	0000000000000067              Item_float::clone_item()
0000000000765c52  w    F .text	000000000000000f              Field_float::key_type() const
00000000010bb128  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_curtime_local
0000000000679298 g     F .text	0000000000000044              String::copy()
000000000081728e  w    F .text	000000000000002b              Item_func_last_day::~Item_func_last_day()
000000000061bd58  w    F .text	0000000000000038              Protocol_binary::Protocol_binary(THD*)
0000000001091a60  w    O .data.rel.ro	0000000000000398              vtable for Item_func_sign
000000000080809e g     F .text	0000000000000052              Item_func_group_concat::make_unique()
00000000006d7fda  w    F .text	000000000000001b              THD::set_server_id(unsigned int)
000000000098ee6e  w    F .text	0000000000000010              Mrg_child_def::get_child_table_ref_type()
00000000007cd6ec g     F .text	0000000000000273              Item_func_min_max::val_decimal(my_decimal*)
00000000006d3676 g     F .text	0000000000000cab              partition_info::has_same_partitioning(partition_info*)
00000000007dcb80  w    F .text	0000000000000058              Item_func_ord::~Item_func_ord()
000000000138d7e0 g     O .bss	0000000000000100              table_file_summary_by_event_name::m_table_lock
00000000007e2444  w    F .text	000000000000002b              Item_func_spatial_decomp_n::~Item_func_spatial_decomp_n()
0000000001216ce0 g     O .data	0000000000000101              ctype_cp1256_bin
00000000006ba87a  w    F .text	0000000000000025              Bitmap<64u>::is_overlapping(Bitmap<64u> const&) const
00000000010cd990 g     O .data	0000000000000008              my_localhost
00000000005cf7e2  w    F .text	0000000000000059              Locked_tables_list::Locked_tables_list()
000000000082292c g     F .text	0000000000000071              MYSQL_BIN_LOG::init_pthread_objects()
00000000005af074  w    F .text	0000000000000069              TABLE_SHARE::TABLE_SHARE()
000000000106e638  w    O .data.rel.ro	0000000000000398              vtable for Item_func_isnottrue
00000000005e899c  w    F .text	000000000000002b              Field_blob::clear_temporary()
000000000082d2ee  w    F .text	0000000000000046              Rand_log_event::~Rand_log_event()
00000000008f31e9 g     F .text	000000000000019f              my_once_alloc
00000000008523fc  w    F .text	0000000000000029              Delete_rows_log_event_old::do_apply_event(Relay_log_info const*)
0000000000000000       F *UND*	0000000000000000              atol@@GLIBC_2.2.5
0000000000805b52 g     F .text	000000000000001a              Item_sum_udf_decimal::val_int()
00000000007b194c g     F .text	0000000000000079              Create_udf_func::create_func(THD*, st_mysql_lex_string, List<Item>*)
00000000007c2052  w    F .text	0000000000000026              Create_func_srid::~Create_func_srid()
00000000007bc2d8  w    F .text	0000000000000038              Item_func_geometry_from_wkb::Item_func_geometry_from_wkb(Item*)
00000000006070ba  w    F .text	000000000000003d              st_select_lex::make_empty_select()
000000000070df96  w    F .text	0000000000000014              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::check_update_type(Item_result)
00000000007bc1b0  w    F .text	000000000000004a              Item_func_uncompress::Item_func_uncompress(Item*)
00000000006bf5e8 g     F .text	000000000000004d              Time_zone_db::Time_zone_db(st_time_zone_info*, String const*)
000000000080248e g     F .text	00000000000000d9              Item_sum_hybrid::val_decimal(my_decimal*)
00000000005ef5d6 g     F .text	000000000000007b              LEX::get_effective_with_check(TABLE_LIST*)
00000000007dab94  w    F .text	0000000000000011              Item_func_tan::func_name() const
0000000000817824  w    F .text	0000000000000046              Item_extract::~Item_extract()
00000000007dc394  w    F .text	0000000000000058              Item_func_get_system_var::~Item_func_get_system_var()
000000000070bdf0  w    F .text	0000000000000174              Sys_var_bit::Sys_var_bit(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, char, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
00000000007db728  w    F .text	000000000000000f              Item_func_get_system_var::used_tables() const
000000000077bc6a  w    F .text	000000000000000f              handler::update_create_info(st_ha_create_information*)
00000000006780b6  w    F .text	0000000000000012              Stored_program_creation_ctx::get_db_cl()
00000000005656b8  w    F .text	0000000000000021              THD::is_error() const
0000000001375a80 g     O .bss	0000000000000060              my_locale_en_IN
0000000000767988  w    F .text	000000000000000f              Field_bit_as_char::size_of() const
00000000008284df g     F .text	0000000000000034              error_log_print(loglevel, char const*, __va_list_tag*)
0000000001214400 g     O .data	0000000000000100              sort_order_cp1251_general_cs
000000000061c068  w    F .text	0000000000000056              Protocol_local::~Protocol_local()
00000000005640f4 g     F .text	0000000000000068              Protocol_binary::prepare_for_resend()
00000000007b5724 g     F .text	0000000000000058              Create_func_nullif::create(THD*, Item*, Item*)
0000000000000000       F *UND*	0000000000000000              madvise@@GLIBC_2.2.5
0000000000566b3e  w    F .text	000000000000000f              Item::is_result_field()
0000000000559720  w    F .text	000000000000001a              I_List<THD>::is_empty()
00000000007ddcfc  w    F .text	0000000000000046              Item_func_unsigned::~Item_func_unsigned()
000000000120dee0 g     O .data	0000000000000200              to_uni_latin2_croatian_ci
00000000005c9ee8 g     F .text	0000000000000029              Security_context::restore_security_context(THD*, Security_context*)
00000000007bd63c  w    F .text	0000000000000041              Create_func_aes_encrypt::~Create_func_aes_encrypt()
0000000000877290  w    F .text	000000000000002b              Item_proc_real::~Item_proc_real()
0000000001395480 g     O .bss	0000000000000070              THR_LOCK_net
000000000106c310  w    O .data.rel.ro	0000000000000038              vtable for MDL_wait_for_graph_visitor
00000000007f2f3e  w    F .text	0000000000000046              Item_func_charset::~Item_func_charset()
0000000000626c2e  w    F .text	000000000000002d              st_log_info::~st_log_info()
0000000000598e8c  w    F .text	0000000000000035              Internal_error_handler::~Internal_error_handler()
00000000007c9fd0 g     F .text	00000000000000d5              Item_func_ln::val_real()
00000000007f6aac g     F .text	00000000000000bd              Item_in_subselect::val_bool()
0000000001087bd0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_field
00000000007668ec  w    F .text	000000000000000f              Field_datetime::zero_pack() const
00000000007e2308  w    F .text	0000000000000058              Item_func_spatial_collection::~Item_func_spatial_collection()
000000000074f69a g     F .text	00000000000001ba              Field_medium::cmp(unsigned char const*, unsigned char const*)
0000000000826e3a g     F .text	000000000000003b              ending_trans(THD*, bool)
00000000007f9ee4 g     F .text	00000000000001f4              subselect_single_select_engine::prepare()
00000000005d1922  w    F .text	0000000000000026              I_List<Item_change_record>::append(Item_change_record*)
000000000077c136  w    F .text	000000000000000f              handler::start_bulk_insert(unsigned long long)
00000000005d0472  w    F .text	0000000000000026              List<Key_part_spec>::disjoin(List<Key_part_spec>*)
00000000005af90e  w    F .text	0000000000000063              Field_null::Field_null(unsigned char*, unsigned int, Field::utype, char const*, charset_info_st*)
00000000008fc10d g     F .text	000000000000038c              init_thr_alarm
000000000078dabc g     F .text	000000000000007b              Item_hex_string::val_decimal(my_decimal*)
00000000007c0bf6  w    F .text	000000000000002d              Create_func_master_pos_wait::Create_func_master_pos_wait()
00000000007f27f2  w    F .text	0000000000000011              Item_func_uuid::func_name() const
000000000055ffcd g     F .text	00000000000001a5              scramble_323
00000000007bf41e  w    F .text	0000000000000041              Create_func_found_rows::~Create_func_found_rows()
000000000078763e g     F .text	00000000000001dd              Item_param::eq(Item const*, bool) const
0000000000c00e60 g     O .rodata	00000000000009a8              log_10
00000000005991ad  w    F .text	000000000000007d              open_and_lock_tables(THD*, TABLE_LIST*, bool, unsigned int)
00000000007bc71a  w    F .text	000000000000004a              Item_func_numpoints::Item_func_numpoints(Item*)
00000000007bd866  w    F .text	000000000000002d              Create_func_as_wkt::Create_func_as_wkt()
00000000010a6758  w    O .data.rel.ro	0000000000000398              vtable for Item_func_elt
00000000008d6219 g     F .text	00000000000000f6              real_open_cached_file
0000000000599fcd  w    F .text	000000000000004d              ACL_PROXY_USER::auth_element_equals(char const*, char const*)
0000000000738868  w    F .text	0000000000000040              Item_func_bit::Item_func_bit(Item*, Item*)
00000000007b337e g     F .text	000000000000006e              Create_func_degrees::create(THD*, Item*)
00000000010c4470  w    O .data.rel.ro	0000000000000060              vtable for field_decimal
00000000007ce6a0 g     F .text	0000000000000195              Item_func_ord::val_int()
00000000007c2cf4  w    F .text	0000000000000041              Create_func_weekofyear::~Create_func_weekofyear()
0000000000756e8c g     F .text	00000000000000ac              Field_datetime::val_int()
000000000090b1a2 g     F .text	000000000000001f              PFS_engine_table::update_row_values(TABLE*, unsigned char const*, unsigned char*, Field**)
00000000005ce9d4  w    F .text	0000000000000017              Item_subselect::assigned()
00000000008731e4  w    F .text	000000000000001b              List<QUICK_SELECT_I>::~List()
000000000060874c g     F .text	0000000000000049              check_valid_path(char const*, unsigned long)
0000000000678d3e  w    F .text	0000000000000046              Item_return_date_time::~Item_return_date_time()
00000000008d3485 g     F .text	00000000000000ae              wait_for_free_space
00000000008687c0 g     F .text	000000000000009a              QUICK_ROR_INTERSECT_SELECT::is_keys_used(st_bitmap const*)
0000000000737fb8  w    F .text	000000000000003d              Item_sum_or::Item_sum_or(Item*)
00000000005d052e  w    F .text	0000000000000026              List_iterator<Key_part_spec>::List_iterator(List<Key_part_spec>&)
00000000007f553c g     F .text	0000000000000156              Item_maxmin_subselect::Item_maxmin_subselect(THD*, Item_subselect*, st_select_lex*, bool)
00000000007b5b60 g     F .text	0000000000000058              Create_func_pow::create(THD*, Item*, Item*)
0000000000796ea6  w    F .text	000000000000000f              Item_field::type() const
0000000000739876  w    F .text	0000000000000040              Item_str_func::Item_str_func(Item*)
000000000073b703  w    F .text	0000000000000030              add_value_to_list(THD*, Item*)
000000000065b95e  w    F .text	000000000000008f              store_key_const_item::store_key_const_item(THD*, Field*, unsigned char*, unsigned char*, unsigned int, Item*)
00000000013736c8 g     O .bss	0000000000000004              max_binlog_dump_events
00000000008e8523 g     F .text	000000000000039c              wild_compare
0000000000780c78 g     F .text	0000000000000012              Item::default_charset()
00000000007602bc g     F .text	00000000000000c8              Field_bit::do_save_field_metadata(unsigned char*)
0000000001087d50  w    O .data.rel.ro	0000000000000030              vtable for Create_func_encode
0000000000877c97 g     F .text	00000000000000ad              end_read_record(READ_RECORD*)
00000000010a3c38  w    O .data.rel.ro	0000000000000398              vtable for Item_func_unhex
000000000082d580  w    F .text	0000000000000046              Stop_log_event::~Stop_log_event()
0000000000000000       F *UND*	0000000000000000              pthread_cond_init@@GLIBC_2.3.2
000000000066b06e g     F .text	00000000000002be              fill_schema_charsets(THD*, TABLE_LIST*, Item*)
0000000000708dbc  w    F .text	000000000000002e              Sys_var_enum::session_save_default(THD*, set_var*)
0000000000607136  w    F .text	000000000000000b              Lex_input_stream::Lex_input_stream()
00000000008007ac g     F .text	000000000000008a              Item_sum_sum::val_decimal(my_decimal*)
0000000000816484  w    F .text	0000000000000046              Item_func_curdate::~Item_func_curdate()
00000000007af016  w    F .text	000000000000004e              in_longlong::value_to_item(unsigned int, Item*)
00000000007d2d0c g     F .text	00000000000000e5              Item_func_set_user_var::update_hash(void*, unsigned int, Item_result, charset_info_st*, Derivation, bool)
00000000007dc02e  w    F .text	0000000000000046              Item_func_found_rows::~Item_func_found_rows()
00000000005e99f8  w    F .text	000000000000001b              I_List<Delayed_insert>::~I_List()
000000000057a98c  w    F .text	000000000000000f              Log_event::get_data_size()
00000000007dc994  w    F .text	0000000000000046              Item_func_udf_int::~Item_func_udf_int()
00000000007bb92e  w    F .text	000000000000001b              SQL_CRYPT::SQL_CRYPT()
0000000000000000       F *UND*	0000000000000000              crypt@@GLIBC_2.2.5
0000000000893b56  w    F .text	000000000000002d              Gis_multi_polygon::Gis_multi_polygon()
00000000010f1a80 g     O .data	0000000000000020              merge_insert_method
0000000000b6a93a g     F .text	00000000000002b8              ha_partition::partition_scan_set_up(unsigned char*, bool)
000000000073aebe  w    F .text	0000000000000038              Item_datetime_typecast::Item_datetime_typecast(Item*)
00000000007dbca6  w    F .text	0000000000000013              Item_func_uuid_short::check_partition_func_processor(unsigned char*)
0000000001211c20 g     O .data	0000000000000200              to_uni_latin7_general_cs
000000000055aacb g     F .text	00000000000004b4              net_real_write
0000000000797a08  w    F .text	0000000000000058              Item_ref::get_tmp_table_field()
0000000000785026 g     F .text	00000000000000cb              Item_decimal::eq(Item const*, bool) const
0000000000549ac0       F *UND*	0000000000000000              exit@@GLIBC_2.2.5
00000000008edfcf g     F .text	000000000000001a              my_fileno
00000000007f1b02  w    F .text	000000000000006a              Item_func_trim::~Item_func_trim()
00000000006f09ec  w    F .text	000000000000001b              Binlog_storage_delegate::Binlog_storage_delegate()
0000000000566f32  w    F .text	000000000000000e              Item::this_item()
0000000000983b0e g     F .text	000000000000012d              hp_search_next
000000000084858e g     F .text	00000000000000e2              Incident_log_event::do_apply_event(Relay_log_info const*)
000000000074ee06 g     F .text	00000000000002df              Field_medium::store(long long, bool)
0000000000000000       F *UND*	0000000000000000              pthread_attr_init@@GLIBC_2.2.5
000000000120e820 g     O .data	0000000000000100              to_lower_latin5_turkish_ci
0000000000000000       F *UND*	0000000000000000              getenv@@GLIBC_2.2.5
00000000009862f5 g     F .text	000000000000011c              hp_find_named_heap
000000000136cc9c g     O .bss	0000000000000004              thread_running
00000000005699fc g     F .text	0000000000000022              sys_var::global_value_ptr(THD*, st_mysql_lex_string*)
000000000089a466  w    F .text	00000000000001e4              field_longlong::std(String*, unsigned long long)
0000000001093b58  w    O .data.rel.ro	0000000000000398              vtable for Item_func_shift_left
00000000007dc82c  w    F .text	0000000000000058              Item_master_pos_wait::~Item_master_pos_wait()
00000000008a9236  w    F .text	000000000000001b              List_iterator_fast<XML_TAG>::rewind()
000000000083fce2 g     F .text	0000000000000085              Delete_file_log_event::pack_info(Protocol*)
000000000098349c g     F .text	0000000000000049              heap_reset
0000000000816224  w    F .text	0000000000000046              Item_str_timefunc::~Item_str_timefunc()
00000000008935a4  w    F .text	0000000000000025              Geometry::shift_wkb_header()
000000000107fc48  w    O .data.rel.ro	0000000000000398              vtable for Item_cond_or
000000000061ab8c g     F .text	000000000000004d              Prepared_statement::deallocate()
000000000109ed68  w    O .data.rel.ro	0000000000000398              vtable for Item_func_spatial_decomp_n
00000000006cd2aa g     F .text	0000000000000209              Events::show_create_event(THD*, st_mysql_lex_string, st_mysql_lex_string)
00000000005b0e94  w    F .text	000000000000001d              List_iterator<Item>::operator++(int)
00000000007c10d4  w    F .text	0000000000000041              Create_func_oct::~Create_func_oct()
0000000000765e1c  w    F .text	000000000000001e              Field_null::store(double)
000000000059fe85 g     F .text	0000000000000085              find_temporary_table(THD*, TABLE_LIST const*)
000000000070e9f4  w    F .text	0000000000000041              Sys_var_flagset::~Sys_var_flagset()
0000000001370764 g     O .bss	0000000000000004              key_LOCK_active_mi
00000000007b5c76 g     F .text	0000000000000135              Create_func_rand::create_native(THD*, st_mysql_lex_string, List<Item>*)
000000000138bf40 g     O .bss	0000000000000001              my_getopt_use_args_separator
0000000000c430d8 g     O .rodata	0000000000000008              MDL_scoped_lock::m_granted_incompatible
0000000000886dac g     F .text	0000000000000045              sp_instr_freturn::exec_core(THD*, unsigned int*)
00000000007b3a4e g     F .text	000000000000026e              Create_func_export_set::create_native(THD*, st_mysql_lex_string, List<Item>*)
000000000077ca06 g     F .text	00000000000000c1              hostname_cache_init()
0000000000607336  w    F .text	0000000000000039              THD::is_valid_time()
00000000006e02ce g     F .text	0000000000000107              Master_info::~Master_info()
00000000005d8cb6 g     F .text	000000000000009e              Warning_info::Warning_info(unsigned long long, bool)
000000000085670c g     F .text	0000000000000066              SEL_IMERGE::or_sel_imerge_with_checks(RANGE_OPT_PARAM*, SEL_IMERGE*)
0000000000738dac  w    F .text	0000000000000046              Item_func_truth::~Item_func_truth()
00000000007b09f8  w    F .text	0000000000000058              Item_cond_and::~Item_cond_and()
00000000008f7fd7 g     F .text	00000000000000d0              reinit_queue
0000000000784978 g     F .text	000000000000004b              Item_uint::Item_uint(char const*, long long, unsigned int)
00000000007e0d54  w    F .text	000000000000004e              Gis_read_stream::Gis_read_stream(charset_info_st*, char const*, int)
00000000005d9bb8  w    F .text	0000000000000039              Warning_info::append_warning_info(THD*, Warning_info*)
000000000120bd40 g     O .data	0000000000000100              to_lower_latin2_hungarian_ci
0000000000606890  w    F .text	000000000000003e              DTCollation::set(charset_info_st*, Derivation)
000000000079b3f0 g     F .text	0000000000000072              Cached_item_str::~Cached_item_str()
00000000012c8280 g     O .data	00000000000000b0              my_charset_ucs2_latvian_uca_ci
00000000007ae4a8  w    F .text	000000000000002d              Item_bool_func2::cleanup()
00000000005cd792 g     F .text	0000000000000102              Discrete_intervals_list::append(unsigned long long, unsigned long long, unsigned long long)
00000000008cfd9a g     F .text	000000000000006b              get_charset_name
00000000010cd8d3 g     O .data	0000000000000001              sp_automatic_privileges
00000000005cf502  w    F .text	0000000000000029              Query_arena::strdup(char const*)
00000000007db972  w    F .text	0000000000000026              Item_func_is_used_lock::fix_length_and_dec()
000000000083e994 g     F .text	000000000000004d              Create_file_log_event::write_base(st_io_cache*)
00000000007d3cf6 g     F .text	0000000000000084              Item_func_set_user_var::str_result(String*)
0000000000815816  w    F .text	0000000000000026              Item_func_to_seconds::fix_length_and_dec()
000000000070bf64  w    F .text	0000000000000051              Sys_var_bit::session_update(THD*, set_var*)
00000000005cf8a8  w    F .text	000000000000002d              Global_read_lock::Global_read_lock()
000000000062445a g     F .text	00000000000003a8              reset_slave(THD*, Master_info*)
0000000001069260  w    O .data.rel.ro	0000000000000038              vtable for PolyLock
00000000005cd894 g     F .text	000000000000010d              Discrete_intervals_list::append(Discrete_interval*)
00000000010a26a8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_quote
00000000012135a0 g     O .data	0000000000000101              ctype_cp1251_bin
00000000007d9f59  w    F .text	0000000000000048              agg_item_charsets_for_string_result_with_comparison(DTCollation&, char const*, Item**, unsigned int, int)
00000000007bb504  w    F .text	000000000000004a              Item_func_concat::Item_func_concat(List<Item>&)
00000000007d0ee2 g     F .text	0000000000000075              item_user_lock_release(User_level_lock*)
0000000000855bfe g     F .text	00000000000003bf              number_to_datetime
00000000010ef3a0 g     O .data	0000000000000058              table_events_waits_current::m_share
00000000007f5b2e g     F .text	0000000000000021              Item_singlerow_subselect::result_type() const
0000000001069738  w    O .data.rel.ro	0000000000000078              vtable for select_exists_subselect
00000000007a6046 g     F .text	00000000000000d7              Item_func_coalesce::decimal_op(my_decimal*)
00000000009894e0 g     F .text	000000000000005a              heap_disable_indexes
0000000000678a7a  w    F .text	0000000000000026              List_iterator_fast<st_foreign_key_info>::List_iterator_fast(List<st_foreign_key_info>&)
00000000010d26a0 g     O .data	0000000000000028              del_exts
00000000005c1436 g     F .text	0000000000000982              THD::THD()
00000000008500b8 g     F .text	0000000000000061              Old_rows_log_event::write_data_body(st_io_cache*)
00000000008ccdbc  w    F .text	000000000000001b              List_iterator_fast<st_foreign_key_info>::List_iterator_fast()
00000000007d8306 g     F .text	0000000000000109              Item_func_match::print(String*, enum_query_type)
00000000007e1ba0  w    F .text	0000000000000011              Item_func_numinteriorring::func_name() const
000000000061ac62 g     F .text	00000000000000c0              Ed_result_set::Ed_result_set(List<Ed_row>*, unsigned long, st_mem_root*)
0000000000607734  w    F .text	0000000000000121              sp_head::is_not_allowed_in_function(char const*)
0000000000766ff0  w    F .text	0000000000000037              Field_blob::has_charset() const
0000000000558742  w    F .text	0000000000000030              base_list::empty()
00000000007fc944  w    F .text	000000000000002b              subselect_indexsubquery_engine::~subselect_indexsubquery_engine()
00000000005ce10a  w    F .text	000000000000006c              Discrete_intervals_list::copy_shallow(Discrete_intervals_list const*)
00000000007bf9cc  w    F .text	000000000000002d              Create_func_hex::Create_func_hex()
00000000009071fd g     F .text	0000000000000041              destroy_cond(PFS_cond*)
000000000093b452 g     F .text	000000000000005c              mi_nommap_pread
00000000007c1f7a  w    F .text	0000000000000041              Create_func_sqrt::~Create_func_sqrt()
00000000007d352c g     F .text	00000000000001c0              Item_func_set_user_var::save_item_result(Item*)
00000000007da5e4  w    F .text	0000000000000035              Item_func_signed::decimal_precision() const
0000000000816050  w    F .text	000000000000001e              Item_func_unix_timestamp::fix_length_and_dec()
00000000006705ed g     F .text	0000000000000222              store_key_column_usage(TABLE*, st_mysql_lex_string*, st_mysql_lex_string*, char const*, unsigned int, char const*, unsigned int, long long)
00000000007fe1f4 g     F .text	00000000000000d3              Aggregator_distinct::composite_key_cmp(void*, unsigned char*, unsigned char*)
00000000007f1972  w    F .text	0000000000000011              Item_func_aes_decrypt::func_name() const
00000000008b08e5 g     F .text	000000000000003a              get_partition_id_hash_nosub(partition_info*, unsigned int*, long long*)
00000000008492bc  w    F .text	000000000000002b              Create_file_log_event::~Create_file_log_event()
00000000013736cc g     O .bss	0000000000000001              opt_sporadic_binlog_dump_fail
0000000000889600  w    F .text	0000000000000046              sp_instr_hreturn::~sp_instr_hreturn()
00000000007fc5c0  w    F .text	0000000000000025              Item_allany_subselect::substype()
00000000005cebe4  w    F .text	000000000000001f              Query_tables_list::is_stmt_unsafe() const
0000000000764ff0  w    F .text	0000000000000046              Field_str::~Field_str()
000000000106ccd8  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_lexstring
00000000006b581e g     F .text	00000000000001e2              TABLE_SHARE::visit_subgraph(Wait_for_flush*, MDL_wait_for_graph_visitor*)
0000000000808a84  w    F .text	000000000000005c              Item_sum_num::val_int()
0000000000751b6a g     F .text	0000000000000062              Field_double::store(long long, bool)
00000000005d744e  w    F .text	0000000000000031              SQL_I_List<TABLE_LIST>::empty()
000000000080a358  w    F .text	000000000000002b              Item_sum_udf_str::~Item_sum_udf_str()
00000000010cac90  w    O .data.rel.ro	0000000000000468              vtable for ha_heap
000000000056b538  w    F .text	000000000000002b              set_var_password::~set_var_password()
000000000136cce0 g     O .bss	0000000000000008              slow_launch_time
00000000005c8b32 g     F .text	00000000000000cb              THD::set_n_backup_active_arena(Query_arena*, Query_arena*)
00000000008ce105 g     F .text	0000000000000075              delete_dynamic_element
000000000098a860 g     F .text	00000000000000a7              hp_free
0000000000764be8  w    F .text	000000000000004c              Field::unpack_int16(unsigned char*, unsigned char const*, bool)
00000000007daf58  w    F .text	000000000000003e              Item_func_sleep::update_used_tables()
000000000136efd8 g     O .bss	0000000000000008              table_alias_charset
0000000001374340 g     O .bss	0000000000000060              my_locale_eu_ES
00000000006f0542 g     F .text	0000000000000032              register_binlog_relay_io_observer
00000000008181c6  w    F .text	0000000000000046              Item_func_minute::~Item_func_minute()
00000000005a2294 g     F .text	000000000000016a              find_table_for_mdl_upgrade(THD*, char const*, char const*, bool)
000000000069274e  w    F .text	0000000000000029              I_P_List_iterator<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::init(I_P_List<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> > const&)
000000000079814c  w    F .text	0000000000000095              Item_ref::is_outer_field() const
000000000077499c g     F .text	00000000000000ff              get_canonical_filename(handler*, char const*, char*)
000000000089bc06 g     F .text	000000000000013f              Materialized_cursor::close()
000000000055989c  w    F .text	0000000000000026              I_List<i_string>::append(i_string*)
0000000000b6d688 g     F .text	0000000000000115              ha_partition::late_extra_no_cache(unsigned int)
00000000006048e4 g     F .text	0000000000000021              comp_eq_creator(bool)
00000000008db2e4 g     F .text	0000000000000140              my_b_gets
00000000007c2fb4  w    F .text	000000000000002d              Create_func_y::Create_func_y()
00000000007fc466  w    F .text	0000000000000046              Item_exists_subselect::~Item_exists_subselect()
00000000007f939e g     F .text	000000000000002c              Item_in_subselect::select_transformer(JOIN*)
000000000136cd10 g     O .bss	0000000000000004              slave_net_timeout
000000000070c734  w    F .text	0000000000000013              Sys_var_have::global_save_default(THD*, set_var*)
00000000012c92a0 g     O .data	00000000000000b0              my_charset_utf8_romanian_uca_ci
00000000007bd4e2  w    F .text	000000000000002d              Create_func_acos::Create_func_acos()
00000000007b59e8 g     F .text	0000000000000058              Create_func_period_add::create(THD*, Item*, Item*)
0000000001375c00 g     O .bss	0000000000000060              my_locale_en_ZW
000000000076848a  w    F .text	0000000000000046              Field_short::~Field_short()
00000000005661b8 g     F .text	0000000000000041              end_slave_list()
000000000056aac2 g     F .text	0000000000000063              set_var_user::check(THD*)
00000000005d061c  w    F .text	000000000000001b              List_iterator<Key_part_spec>::remove()
00000000008b0f79 g     F .text	000000000000014e              get_part_id_from_key(TABLE const*, unsigned char*, st_key*, st_key_range const*, unsigned int*)
00000000005e9990  w    F .text	0000000000000041              Delayed_prelocking_strategy::~Delayed_prelocking_strategy()
00000000007b0f66  w    F .text	000000000000002b              in_datetime::~in_datetime()
00000000007c1c38  w    F .text	0000000000000026              Create_func_sha2::~Create_func_sha2()
000000000068afac g     F .text	000000000000397b              mysql_alter_table(THD*, char*, char*, st_ha_create_information*, TABLE_LIST*, Alter_info*, unsigned int, st_order*, bool)
00000000007dcef0  w    F .text	000000000000002b              Item_func_units::~Item_func_units()
00000000008585ea g     F .text	0000000000000165              QUICK_ROR_UNION_SELECT::init()
00000000007ddc78  w    F .text	0000000000000058              Item_decimal_typecast::~Item_decimal_typecast()
00000000007c0a34  w    F .text	000000000000002d              Create_func_makedate::Create_func_makedate()
0000000000817972  w    F .text	000000000000002b              Item_func_convert_tz::~Item_func_convert_tz()
0000000000766408  w    F .text	0000000000000037              Field_date::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
0000000000745b68 g     F .text	0000000000000024              mysql_error
00000000010c3880  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_freturn
000000000062769c g     F .text	0000000000001322              JOIN::prepare(Item***, TABLE_LIST*, unsigned int, Item*, unsigned int, st_order*, st_order*, Item*, st_order*, st_select_lex*, st_select_lex_unit*)
000000000090b132 g     F .text	0000000000000070              PFS_engine_table::get_field_enum(Field*)
0000000001386650 g     O .bss	0000000000000008              Create_func_numgeometries::s_singleton
000000000091b8f2 g     F .text	000000000000001b              killed_ptr
0000000000955af1 g     F .text	00000000000002fb              mi_panic
000000000087058c g     F .text	00000000000003a6              QUICK_GROUP_MIN_MAX_SELECT::next_max_in_range()
0000000000954f7d g     F .text	0000000000000116              read_pack_length
00000000005baa02 g     F .text	0000000000000383              Query_cache::process_and_count_tables(THD*, TABLE_LIST*, unsigned char*)
0000000000b6f79c g     F .text	00000000000000ad              ha_partition::extra_rec_buf_length() const
00000000008ba836 g     F .text	0000000000000049              Unique::~Unique()
00000000007f1d5a  w    F .text	0000000000000011              Item_func_encode::func_name() const
00000000013707ac g     O .bss	0000000000000004              key_LOCK_uuid_generator
00000000010efe50 g     O .data	0000000000000008              ft_query_expansion_limit
000000000070ea5c  w    F .text	0000000000000041              Sys_var_max_user_conn::~Sys_var_max_user_conn()
00000000007afb5a  w    F .text	000000000000000f              Item_func_in::select_optimize() const
00000000005c4c78 g     F .text	0000000000000091              THD::nocheck_register_item_tree_change(Item**, Item*, st_mem_root*)
0000000000848f16  w    F .text	000000000000002b              Load_log_event::~Load_log_event()
0000000000739356  w    F .text	0000000000000053              Item_func_if::Item_func_if(Item*, Item*, Item*)
00000000008091ae  w    F .text	000000000000000b              Item_variance_field::fix_length_and_dec()
000000000082dae2  w    F .text	000000000000005c              binlog_cache_data::compute_statistics()
0000000000950178 g     F .text	00000000000000aa              mi_enable_indexes
00000000007fcac6  w    F .text	0000000000000046              Item_maxmin_subselect::~Item_maxmin_subselect()
00000000005cf4b0  w    F .text	0000000000000052              Query_arena::calloc(unsigned long)
00000000007576e6 g     F .text	000000000000002a              Field_datetime::get_time(st_mysql_time*)
00000000007eed7e g     F .text	000000000000040d              Item_func_hex::val_str_ascii(String*)
00000000005d0964  w    F .text	000000000000001b              List_iterator<Alter_drop>::rewind()
000000000086055c g     F .text	000000000000014c              TRP_INDEX_MERGE::make_quick(PARAM*, bool, st_mem_root*)
00000000007446bc g     F .text	000000000000000f              mysql_detach_stmt_list
000000000055fd1f g     F .text	0000000000000090              randominit
0000000000561c62 g     F .text	0000000000000050              net_store_data(unsigned char*, unsigned char const*, unsigned long)
000000000090bf9a  w    F .text	0000000000000035              ACL_internal_table_access::~ACL_internal_table_access()
00000000007dc28c  w    F .text	000000000000006a              Item_func_match::~Item_func_match()
000000000120ade0 g     O .data	0000000000000200              to_uni_latin1_danish_ci
0000000000784e0c g     F .text	00000000000000b6              Item_decimal::Item_decimal(unsigned char const*, int, int)
00000000007b6b2c g     F .text	0000000000000101              Create_func_unix_timestamp::create_native(THD*, st_mysql_lex_string, List<Item>*)
0000000000569036  w    F .text	000000000000004d              i_string_pair::i_string_pair(char const*, char const*)
000000000120f460 g     O .data	0000000000000100              to_lower_cp866_general_ci
00000000007afdc8  w    F .text	0000000000000046              Item_func_isnull::~Item_func_isnull()
00000000010c2188  w    O .data.rel.ro	00000000000000a0              vtable for QUICK_SELECT_I
00000000007827cd g     F .text	0000000000000171              agg_item_collations(DTCollation&, char const*, Item**, unsigned int, unsigned int, int)
0000000001375240 g     O .bss	0000000000000060              my_locale_vi_VN
0000000000871efa  w    F .text	000000000000000f              QUICK_SELECT_I::add_info_string(String*)
00000000007f3c26  w    F .text	000000000000002b              Item_func_insert::~Item_func_insert()
00000000007b06fc  w    F .text	000000000000002b              Item_equal::~Item_equal()
000000000078781c g     F .text	00000000000000e3              Item_param::print(String*, enum_query_type)
000000000062c622 g     F .text	000000000000283f              JOIN::exec()
000000000086a08a g     F .text	000000000000035a              QUICK_RANGE_SELECT::get_next()
0000000000577a51 g     F .text	0000000000000183              end_relay_log_info(Relay_log_info*)
000000000065c4cc  w    F .text	0000000000000026              Bitmap<4096u>::merge(Bitmap<4096u>&)
00000000009810a0 g     F .text	0000000000000174              ha_heap::update_key_stats()
0000000000647cbf g     F .text	00000000000000bc              report_error(TABLE*, int)
0000000000824f8c g     F .text	0000000000000132              MYSQL_BIN_LOG::open_purge_index_file(bool)
00000000008c162a  w    F .text	00000000000000df              Item_xpath_cast_bool::val_int()
0000000001394cf4 g     O .bss	0000000000000004              key_THR_COND_threads
0000000000784a7c g     F .text	00000000000000d0              Item_decimal::Item_decimal(char const*, unsigned int, charset_info_st*)
00000000005d0356  w    F .text	000000000000002e              List<Key_part_spec>::List(List<Key_part_spec> const&, st_mem_root*)
00000000008911fe g     F .text	00000000000001e9              Gis_multi_polygon::get_data_size() const
00000000006f5be0  w    F .text	0000000000000029              I_P_List_iterator<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >::I_P_List_iterator(I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> > const&)
00000000008250be g     F .text	00000000000000d9              MYSQL_BIN_LOG::close_purge_index_file()
00000000005c2a70 g     F .text	00000000000001a1              THD::init()
00000000006f50f0  w    F .text	000000000000001a              I_P_List_counter::dec()
00000000007bbe2c  w    F .text	0000000000000042              Item_func_like_range_min::Item_func_like_range_min(Item*, Item*)
00000000008052aa g     F .text	0000000000000162              Item_std_field::val_decimal(my_decimal*)
000000000069dad6  w    F .text	000000000000001b              List<Cached_item>::~List()
00000000007ea608 g     F .text	000000000000031c              Item_func_encrypt::val_str(String*)
0000000000788724 g     F .text	000000000000006d              Item_copy_decimal::val_str(String*)
00000000005efc92 g     F .text	0000000000000098              LEX::cleanup_after_one_table_open()
0000000000764e48  w    F .text	0000000000000011              Field_num::charset() const
000000000089ab24  w    F .text	00000000000000c3              analyse::~analyse()
00000000010777e0  w    O .data.rel.ro	0000000000000358              vtable for Item_hex_string
00000000005b0552  w    F .text	0000000000000063              Query_log_event::~Query_log_event()
00000000007c95a0 g     F .text	000000000000014a              Item_func_mod::real_op()
0000000001386520 g     O .bss	0000000000000008              Create_func_glength::s_singleton
000000000070e854  w    F .text	0000000000000041              Sys_var_bit::~Sys_var_bit()
00000000008d1f01 g     F .text	0000000000000082              free_defaults
00000000006e04c4 g     F .text	0000000000000055              Master_info::clear_in_memory_info(bool)
0000000000659ac2  w    F .text	0000000000000046              Item_int_func::~Item_int_func()
00000000008d3826 g     F .text	00000000000000ae              my_hash_reset
00000000005d9bf2  w    F .text	0000000000000087              Warning_info::append_warnings(THD*, List<MYSQL_ERROR>*)
00000000005b005c  w    F .text	0000000000000038              Global_read_lock::can_acquire_protection() const
00000000013761a0 g     O .bss	0000000000000060              my_locale_es_PY
000000000061c38e  w    F .text	000000000000002b              Select_fetch_protocol_binary::~Select_fetch_protocol_binary()
000000000077219a g     F .text	000000000000007c              ha_end()
00000000007c7544 g     F .text	00000000000001d5              Item_func_plus::int_op()
00000000007c1556  w    F .text	000000000000002d              Create_func_quote::Create_func_quote()
00000000005af9a2  w    F .text	0000000000000056              Name_resolution_context::Name_resolution_context()
0000000000000000       F *UND*	0000000000000000              getrlimit64@@GLIBC_2.2.5
00000000005bcc88 g     F .text	0000000000000149              Query_cache::wreck(unsigned int, char const*)
00000000007f2660  w    F .text	000000000000000f              Item_func_charset::not_null_tables() const
00000000008cc956 g     F .text	0000000000000303              Truncate_statement::truncate_table(THD*, TABLE_LIST*)
0000000000698638  w    F .text	000000000000011b              Deprecated_trigger_syntax_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
00000000008059a0 g     F .text	0000000000000118              Item_sum_udf_float::val_real()
000000000070f560 g     F .text	0000000000000081              dd_check_storage_engine_flag(THD*, char const*, char const*, unsigned int, bool*)
00000000008c170a  w    F .text	0000000000000038              Item_xpath_cast_number::Item_xpath_cast_number(Item*)
00000000007665ba  w    F .text	000000000000007b              Field_time::Field_time(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
000000000056b464  w    F .text	000000000000001b              List_iterator_fast<set_var_base>::rewind()
0000000000824ecc g     F .text	00000000000000bf              MYSQL_BIN_LOG::set_purge_index_file_name(char const*)
00000000005c905a g     F .text	000000000000000b              Statement_map::close_transient_cursors()
000000000083c7b4 g     F .text	0000000000000081              Xid_log_event::write(st_io_cache*)
00000000008c154e  w    F .text	0000000000000011              Item_nodeset_func_elementbyindex::func_name() const
00000000007f9bb6 g     F .text	00000000000000a9              subselect_single_select_engine::subselect_single_select_engine(st_select_lex*, select_subselect*, Item_subselect*)
00000000007c25be  w    F .text	000000000000002d              Create_func_to_days::Create_func_to_days()
00000000010b3f90  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_count
0000000001087480  w    O .data.rel.ro	0000000000000030              vtable for Create_func_log2
0000000000873c14  w    F .text	0000000000000025              List<QUICK_RANGE>::push_front(QUICK_RANGE*)
0000000000877024  w    F .text	000000000000003e              Item_proc_string::set(double)
00000000008c2390  w    F .text	000000000000002b              Item_nodeset_func_union::~Item_nodeset_func_union()
00000000008c1872  w    F .text	0000000000000011              Item_func_xpath_position::func_name() const
00000000008d650d g     F .text	0000000000000106              convert_dirname
00000000007c1b32  w    F .text	000000000000002d              Create_func_sha::Create_func_sha()
00000000007bb060  w    F .text	000000000000004a              Item_func_is_used_lock::Item_func_is_used_lock(Item*)
000000000061bdfa  w    F .text	0000000000000060              Statement::Statement()
00000000007bab38  w    F .text	000000000000002d              Item_func_last_insert_id::Item_func_last_insert_id()
0000000000809aae  w    F .text	000000000000000b              Item_udf_sum::update_field()
00000000008984ac g     F .text	0000000000000176              field_decimal::get_opt_type(String*, unsigned long long)
00000000007c7bf2 g     F .text	00000000000001f6              Item_func_minus::int_op()
00000000010c1a10  w    O .data.rel.ro	0000000000000078              vtable for Load_log_event
00000000013865f0 g     O .bss	0000000000000008              Create_func_log10::s_singleton
0000000000598526  w    F .text	0000000000000045              base_list_iterator::remove()
0000000000b7ff64 g     F .text	00000000000000a4              my_casedn_str_mb
00000000005c3992 g     F .text	00000000000000af              THD::disconnect()
0000000001087330  w    O .data.rel.ro	0000000000000030              vtable for Create_func_md5
0000000000567a2e g     F .text	00000000000000ae              Rpl_filter::Rpl_filter()
000000000081143e g     F .text	0000000000000279              Item_extract::fix_length_and_dec()
00000000009476cd g     F .text	00000000000001da              _myisam_log
0000000000816de0  w    F .text	000000000000000f              Item_datetime_typecast::result_as_longlong()
0000000000877523 g     F .text	0000000000000774              init_read_record(READ_RECORD*, THD*, TABLE*, SQL_SELECT*, int, bool, bool)
000000000079ad0c  w    F .text	0000000000000071              Item_splocal::~Item_splocal()
00000000008f2170 g     F .text	000000000000009e              my_init_mysys_psi_keys
0000000000559afe  w    F .text	0000000000000026              I_List<Statement>::push_back(Statement*)
00000000008722b8  w    F .text	0000000000000024              optimizer_flag(THD*, unsigned int)
00000000007ef6be g     F .text	000000000000007a              Item_func_binary::print(String*, enum_query_type)
00000000007fde62 g     F .text	0000000000000171              Item_sum::update_used_tables()
00000000007ba18a  w    F .text	0000000000000040              Item_func_pow::Item_func_pow(Item*, Item*)
00000000007bdf06  w    F .text	0000000000000041              Create_func_compress::~Create_func_compress()
0000000000942ae3 g     F .text	0000000000000015              mi_position
00000000007b652e g     F .text	0000000000000050              Create_func_sqrt::create(THD*, Item*)
00000000010c3cc0  w    O .data.rel.ro	0000000000000020              vtable for sp_cursor
0000000001372600 u     O .bss	0000000000000040              show_system_thread(enum_thread_type)::buf
0000000000889d62  w    F .text	0000000000000025              List<sp_head::bp_t>::push_front(sp_head::bp_t*)
0000000001370894 g     O .bss	0000000000000004              key_file_map
0000000000000000       F *UND*	0000000000000000              initgroups@@GLIBC_2.2.5
0000000000795e88  w    F .text	0000000000000087              my_decimal::swap(my_decimal&)
000000000059ad07  w    F .text	0000000000000058              table_hash_search(char const*, char const*, char const*, char const*, char const*, bool)
000000000073c626  w    F .text	0000000000000050              sp_pcontext::last_label()
000000000079ab8a  w    F .text	000000000000002b              Item_ident_for_show::~Item_ident_for_show()
00000000013708d0 g     O .bss	0000000000000004              key_file_master_info
00000000007ba62a  w    F .text	0000000000000058              Item_func_min_max::~Item_func_min_max()
00000000007da80a  w    F .text	0000000000000013              Item_func_mul::check_partition_func_processor(unsigned char*)
00000000007c1682  w    F .text	000000000000002d              Create_func_rand::Create_func_rand()
00000000009084e4  w    F .text	000000000000001a              PFS_scan::next_pass()
000000000081bc42 g     F .text	0000000000000026              Log_to_csv_event_handler::~Log_to_csv_event_handler()
0000000001069f18  w    O .data.rel.ro	0000000000000088              vtable for st_select_lex
0000000001370818 g     O .bss	0000000000000004              key_COND_pool
00000000013877a8 g     O .bss	0000000000000008              tc_log_page_waits
00000000008cb2a8  w    F .text	0000000000000046              Alter_table_analyze_partition_statement::~Alter_table_analyze_partition_statement()
000000000073b64a  w    F .text	0000000000000060              my_var::my_var(st_mysql_lex_string&, bool, unsigned int, enum_field_types)
00000000007b2750 g     F .text	0000000000000050              Create_func_as_wkb::create(THD*, Item*)
0000000000767136  w    F .text	000000000000000f              Field_geom::type() const
00000000008bb6d6 g     F .text	000000000000034c              Item_nodeset_func_union::val_nodeset(String*)
00000000008cb360  w    F .text	000000000000002b              Alter_table_check_partition_statement::~Alter_table_check_partition_statement()
0000000000603068 g     F .text	00000000000007b9              st_select_lex::add_table_to_list(THD*, Table_ident*, st_mysql_lex_string*, unsigned long, thr_lock_type, enum_mdl_type, List<Index_hint>*, st_mysql_lex_string*)
00000000005982da  w    F .text	000000000000008a              base_list::after(void*, list_node*)
00000000007b105c  w    F .text	000000000000002b              Item_func_nullif::~Item_func_nullif()
00000000008468fa g     F .text	00000000000000b5              Write_rows_log_event::do_exec_row(Relay_log_info const*)
0000000000ba414e g     F .text	0000000000000186              strxnmov
00000000005c0e53 g     F .text	0000000000000028              thd_get_ha_data
0000000000678c38  w    F .text	000000000000002b              thread_info::~thread_info()
00000000006f5f18  w    F .text	0000000000000012              I_P_List<MDL_object_lock, MDL_object_lock_cache_adapter, I_P_List_counter, I_P_List_no_push_back<MDL_object_lock> >::front()
00000000007f2e48  w    F .text	0000000000000058              Item_func_hex::~Item_func_hex()
00000000007ae27a  w    F .text	000000000000000f              Gt_creator::eqne_op() const
00000000007da8ae  w    F .text	0000000000000011              Item_func_mod::func_name() const
00000000008182f0  w    F .text	000000000000002b              Item_func_quarter::~Item_func_quarter()
0000000000809502  w    F .text	000000000000000f              Item_sum_hybrid::keep_field_type() const
000000000088c49e g     F .text	000000000000008a              sp_rcontext::raised_condition() const
0000000000000000       F *UND*	0000000000000000              sigsuspend@@GLIBC_2.2.5
00000000005d052e  w    F .text	0000000000000026              List_iterator<Key_part_spec>::List_iterator(List<Key_part_spec>&)
0000000000795bbc g     F .text	000000000000002f              Item_type_holder::val_str(String*)
000000000083e220 g     F .text	000000000000001d              Slave_log_event::get_data_size()
00000000007c0cfc  w    F .text	0000000000000026              Create_func_md5::~Create_func_md5()
000000000055823a g     F .text	0000000000000100              refresh_status(THD*)
00000000007393aa  w    F .text	000000000000013e              Item_func_case::Item_func_case(List<Item>&, Item*, Item*)
00000000007bf9fa  w    F .text	0000000000000041              Create_func_hex::~Create_func_hex()
00000000007aec0e  w    F .text	0000000000000011              Item_func_coalesce::func_name() const
0000000000873e3c  w    F .text	000000000000001b              List_iterator<QUICK_RANGE>::rewind()
00000000007f3662  w    F .text	000000000000002b              Item_func_decode::~Item_func_decode()
00000000005ee8ca g     F .text	0000000000000026              st_select_lex::inc_in_sum_expr()
00000000007c47a4 g     F .text	000000000000013d              Item_func::update_used_tables()
000000000095ecc3 g     F .text	00000000000000f5              _mi_cmp_static_unique
00000000008f1002 g     F .text	0000000000000566              my_print_variables
0000000000b82c0c g     F .text	0000000000000058              my_caseup_str_8bit
0000000001086eb0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_sec_to_time
0000000000564e96  w    F .text	0000000000000018              String::length(unsigned int)
0000000000873020  w    F .text	000000000000005d              SEL_TREE::SEL_TREE(SEL_TREE::Type)
0000000000000000       F *UND*	0000000000000000              fputc@@GLIBC_2.2.5
00000000008e9317 g     F .text	0000000000000188              reset_root_defaults
00000000006d6c54 g     F .text	00000000000003c8              table_def::table_def(unsigned char*, unsigned long, unsigned char*, int, unsigned char*, unsigned short)
000000000055fcf2  w    F .text	000000000000002d              List<st_mysql_lex_string>::push_back(st_mysql_lex_string*, st_mem_root*)
00000000005b11e4  w    F .text	0000000000000026              Alter_table_prelocking_strategy::~Alter_table_prelocking_strategy()
00000000007560d6 g     F .text	000000000000006d              Field_newdate::send_binary(Protocol*)
00000000010e2d90 g     O .data	0000000000000010              GENERAL_LOG_NAME
0000000000818472  w    F .text	0000000000000046              Item_func_dayofyear::~Item_func_dayofyear()
00000000008a9c25 g     F .text	00000000000000c2              is_name_in_list(char*, List<char>)
00000000007bcdd0  w    F .text	0000000000000040              Item_func_makedate::Item_func_makedate(Item*, Item*)
00000000006aa6d9 g     F .text	00000000000000d2              unhex_type2(st_typelib*)
00000000007bfc52  w    F .text	0000000000000041              Create_func_instr::~Create_func_instr()
000000000098eeb8  w    F .text	0000000000000071              Mrg_child_def::Mrg_child_def(char*, unsigned long, char*, unsigned long)
000000000079aa1e  w    F .text	000000000000002b              Item_param::~Item_param()
000000000120ea20 g     O .data	0000000000000100              sort_order_latin5_turkish_ci
00000000010b0c60  w    O .data.rel.ro	00000000000003c0              vtable for Item_sum_udf_float
000000000079af6e  w    F .text	0000000000000046              Item_bin_string::~Item_bin_string()
0000000000000000       F *UND*	0000000000000000              sigemptyset@@GLIBC_2.2.5
000000000057ac40  w    F .text	000000000000001d              List_iterator_fast<MYSQL_ERROR>::operator++(int)
000000000079ba00  w    F .text	000000000000002d              List<Cached_item>::push_back(Cached_item*, st_mem_root*)
0000000000872ece  w    F .text	0000000000000065              SEL_ARG::free_tree()
00000000007c48e2 g     F .text	0000000000000015              Item_func::used_tables() const
000000000120fc80 g     O .data	0000000000000100              sort_order_keybcs2_general_ci
0000000000852498  w    F .text	0000000000000046              Delete_rows_log_event_old::~Delete_rows_log_event_old()
0000000000bb0231 g     F .text	00000000000000ad              my_regfree
000000000106bc28  w    O .data.rel.ro	0000000000000078              vtable for select_union
000000000090f916  w    F .text	0000000000000041              table_ews_global_by_event_name::~table_ews_global_by_event_name()
00000000006f5fd6  w    F .text	0000000000000016              I_P_List_adapter<MDL_object_lock, &MDL_object_lock::next_in_cache, &MDL_object_lock::prev_in_cache>::prev_ptr(MDL_object_lock*)
0000000000738ee2  w    F .text	000000000000003f              Item_func_isnottrue::Item_func_isnottrue(Item*)
0000000001376080 g     O .bss	0000000000000060              my_locale_es_PA
0000000000000000       F *UND*	0000000000000000              sigaction@@GLIBC_2.2.5
0000000000586872 g     F .text	0000000000000ee1              mysql_table_grant(THD*, TABLE_LIST*, List<st_lex_user>&, List<LEX_COLUMN>&, unsigned long, bool)
00000000007f9db4 g     F .text	0000000000000019              subselect_union_engine::is_executed() const
00000000007c21a4  w    F .text	000000000000002d              Create_func_strcmp::Create_func_strcmp()
000000000070e8bc  w    F .text	0000000000000041              Sys_var_debug_sync::~Sys_var_debug_sync()
00000000008171d8  w    F .text	000000000000002a              Item_func_str_to_date::tmp_table_field(TABLE*)
0000000000558e0e  w    F .text	0000000000000011              String::ptr() const
000000000088d6d0 g     F .text	00000000000000ff              Geometry::create_from_wkb(Geometry_buffer*, char const*, unsigned int, String*)
0000000000000000       F *UND*	0000000000000000              bsearch@@GLIBC_2.2.5
0000000000b5fadc g     F .text	000000000000002b              ha_partition::~ha_partition()
00000000006a345e g     F .text	00000000000007a3              multi_update::send_data(List<Item>&)
000000000098b37a g     F .text	000000000000002b              ha_myisammrg::~ha_myisammrg()
00000000012cb880 g     O .data	00000000000000b0              my_charset_utf32_slovak_uca_ci
00000000005d8a38 g     F .text	000000000000010c              Diagnostics_area::set_eof_status(THD*)
000000000120cfa0 g     O .data	0000000000000100              to_lower_greek_general_ci
00000000008091ce  w    F .text	000000000000002b              Item_variance_field::func_name() const
0000000000815804  w    F .text	0000000000000011              Item_func_to_seconds::func_name() const
00000000008ed564 g     F .text	00000000000001c0              my_fclose
000000000076565c  w    F .text	0000000000000037              Field_short::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
000000000070ec64  w    F .text	0000000000000041              Sys_var_external_user::~Sys_var_external_user()
00000000008f85b6 g     F .text	0000000000000038              queue_fix
000000000088bd44 g     F .text	0000000000000143              sp_rcontext::push_handler(sp_cond_type*, unsigned int, int)
0000000000785e20 g     F .text	0000000000000112              Item_param::set_decimal(char const*, unsigned long)
00000000006d70ae g     F .text	0000000000000036              Deferred_log_events::add(Log_event*)
00000000013708fc g     O .bss	0000000000000004              key_file_slow_log
0000000001086b50  w    O .data.rel.ro	0000000000000030              vtable for Create_func_timediff
0000000000b6a1b4 g     F .text	0000000000000241              ha_partition::index_read_idx_map(unsigned char*, unsigned int, unsigned char const*, unsigned long, ha_rkey_function)
00000000005d2f8d g     F .text	00000000000000a4              my_dboptions_cache_init()
0000000000809900  w    F .text	000000000000006e              Item_udf_sum::Item_udf_sum(THD*, Item_udf_sum*)
0000000000000000       F *UND*	0000000000000000              getaddrinfo@@GLIBC_2.2.5
0000000000899666 g     F .text	0000000000000103              append_escaped(String*, String*)
000000000098dc6e g     F .text	00000000000000a7              ha_myisammrg::index_next_same(unsigned char*, unsigned char const*, unsigned int)
00000000007c26ea  w    F .text	000000000000002d              Create_func_touches::Create_func_touches()
0000000000658f60  w    F .text	0000000000000088              Field_double::Field_double(unsigned int, bool, char const*, unsigned char, char)
00000000007f222c  w    F .text	0000000000000011              Item_func_rpad::func_name() const
0000000001097140  w    O .data.rel.ro	00000000000003c0              vtable for Item_func_abs
000000000067d4b1 g     F .text	00000000000001a4              tablename_to_filename(char const*, char*, unsigned int)
000000000097f05b g     F .text	00000000000000fe              ft_nlq_find_relevance
00000000007b03f8  w    F .text	000000000000003c              Item_cache_int::Item_cache_int()
0000000000808e9c  w    F .text	0000000000000089              Item_sum_sum::~Item_sum_sum()
00000000008c22d8  w    F .text	0000000000000046              Item_nodeset_func_selfbyname::~Item_nodeset_func_selfbyname()
000000000070d646  w    F .text	000000000000003e              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::max_var_ptr()
00000000005b885a g     F .text	000000000000006e              Query_cache::invalidate_table_internal(THD*, unsigned char*, unsigned int)
0000000000b6eccc g     F .text	00000000000002a9              ha_partition::add_index(TABLE*, st_key*, unsigned int, handler_add_index**)
0000000000566b2e  w    F .text	000000000000000f              Item::set_result_field(Field*)
0000000001375540 g     O .bss	0000000000000060              my_locale_ar_LB
000000000065950e  w    F .text	0000000000000041              Item_null::clone_item()
00000000005af33c  w    F .text	0000000000000056              TABLE_LIST::placeholder()
000000000064f5c7 g     F .text	00000000000000be              cp_buffer_from_ref(THD*, TABLE*, st_table_ref*)
00000000005bf392  w    F .text	0000000000000024              Query_cache_query::query()
0000000000b7116e  w    F .text	0000000000000054              ha_partition::is_fatal_error(int, unsigned int)
000000000070d594  w    F .text	0000000000000034              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::global_update(THD*, set_var*)
00000000005660ce g     F .text	000000000000001b              slave_info_free
000000000059c672 g     F .text	0000000000000438              get_table_share(THD*, TABLE_LIST*, char*, unsigned int, unsigned int, int*, unsigned int)
00000000005b0616  w    F .text	00000000000000fd              sp_head::propagate_attributes(Query_tables_list*)
0000000000612a40  w    F .text	0000000000000025              sys_var_pluginvar::operator new(unsigned long, st_mem_root*)
00000000007bd7aa  w    F .text	0000000000000026              Create_func_area::~Create_func_area()
00000000008c21c8  w    F .text	000000000000002b              Item_nodeset_func_ancestorbyname::~Item_nodeset_func_ancestorbyname()
0000000000796b70  w    F .text	0000000000000046              Item_sp_variable::send(Protocol*, String*)
0000000001090c00  w    O .data.rel.ro	0000000000000398              vtable for Item_func_char_length
0000000000908179 g     F .text	000000000000001b              reset_events_waits_by_instance()
00000000008ea621 g     F .text	00000000000000b1              bitmap_free
00000000007c1530  w    F .text	0000000000000026              Create_func_pow::~Create_func_pow()
00000000006e2068 g     F .text	0000000000000226              servers_reload(THD*)
00000000005f07d2  w    F .text	0000000000000051              String::String(String const&)
00000000008c1cf8  w    F .text	0000000000000065              Item_nodeset_to_const_comparator::Item_nodeset_to_const_comparator(Item*, Item*, String*)
000000000088ce94  w    F .text	0000000000000062              sp_cursor::~sp_cursor()
0000000000709dd0  w    F .text	0000000000000047              Sys_var_dbug::session_update(THD*, set_var*)
000000000136cc41 g     O .bss	0000000000000001              opt_log_slow_slave_statements
0000000000815af0  w    F .text	0000000000000021              Item_func_dayofyear::check_valid_arguments_processor(unsigned char*)
0000000000000000       F *UND*	0000000000000000              strncasecmp@@GLIBC_2.2.5
0000000000566f74  w    F .text	0000000000000011              Item::element_index(unsigned int)
00000000012103a0 g     O .data	0000000000000200              to_uni_macce_general_ci
00000000006f525a  w    F .text	000000000000002a              MDL_key::get_wait_state_name() const
00000000007f2448  w    F .text	0000000000000011              Item_func_binary::func_name() const
0000000000749490 g     F .text	0000000000000204              Field::make_field(Send_field*)
00000000006985fc  w    F .text	000000000000003c              Deprecated_trigger_syntax_handler::Deprecated_trigger_syntax_handler()
00000000008fffd7 g     F .text	000000000000005f              rw_pr_rdlock
000000000136ccd8 g     O .bss	0000000000000008              what_to_log
0000000000559866  w    F .text	000000000000001b              I_List<i_string>::empty()
000000000088aa84 g     F .text	000000000000009b              sp_pcontext::push_cond(st_mysql_lex_string*, sp_cond_type*)
000000000120d2a0 g     O .data	0000000000000200              to_uni_greek_general_ci
000000000067809c  w    F .text	0000000000000019              partition_info::is_sub_partitioned()
00000000009000f0 g     F .text	00000000000000ec              rw_pr_unlock
000000000106db70  w    O .data.rel.ro	0000000000000398              vtable for Item_str_ascii_func
0000000000ba67ec g     F .text	0000000000000014              vio_description
0000000000943a2d g     F .text	0000000000000604              _mi_pack_key
00000000006f2b02 g     F .text	0000000000000026              MDL_wait_for_graph_visitor::~MDL_wait_for_graph_visitor()
000000000087724a  w    F .text	0000000000000046              Item_proc_real::~Item_proc_real()
00000000006bb0e6  w    F .text	000000000000001a              List<String>::head()
00000000007be5e0  w    F .text	000000000000002d              Create_func_datediff::Create_func_datediff()
0000000000563932 g     F .text	00000000000001dc              Protocol_text::store(Field*)
00000000009125c4 g     F .text	0000000000000104              table_mutex_instances::make_row(PFS_mutex*)
0000000000571bcf g     F .text	00000000000000b2              set_slave_thread_options(THD*)
000000000079bb0a  w    F .text	0000000000000026              List_iterator<Cached_item>::init(List<Cached_item>&)
00000000006eee80 g     F .text	00000000000002a0              Binlog_transmit_delegate::before_send_event(THD*, unsigned short, String*, char const*, unsigned long long)
00000000007bff12  w    F .text	000000000000002d              Create_func_isclosed::Create_func_isclosed()
00000000007fadb2 g     F .text	000000000000004d              subselect_union_engine::exec()
0000000000000000       F *UND*	0000000000000000              sigdelset@@GLIBC_2.2.5
0000000000808f52  w    F .text	000000000000006a              Item_sum_avg::Item_sum_avg(THD*, Item_sum_avg*)
00000000007c0584  w    F .text	000000000000002d              Create_func_ln::Create_func_ln()
00000000006cb4dc g     F .text	000000000000009c              Events::check_if_system_tables_error()
00000000012b7080 g     O .data	0000000000000600              page017data
0000000000567800  w    F .text	0000000000000046              Item_partition_func_safe_string::~Item_partition_func_safe_string()
00000000006babb0  w    F .text	000000000000001b              Field_iterator_table::end_of_fields()
0000000000889980  w    F .text	0000000000000022              sp_instr_error::opt_mark(sp_head*, List<sp_instr>*)
00000000005ba554 g     F .text	000000000000009a              Query_cache::move_to_query_list_end(Query_cache_block*)
00000000007388a8  w    F .text	0000000000000038              Item_func_bit::Item_func_bit(Item*)
0000000000986b7d g     F .text	0000000000000366              heap_rkey
000000000073ab26  w    F .text	000000000000002d              Item_func_now_local::Item_func_now_local()
00000000008806d6 g     F .text	0000000000000288              sp_head::~sp_head()
00000000007c0b60  w    F .text	000000000000002d              Create_func_make_set::Create_func_make_set()
0000000000816c3a  w    F .text	000000000000002a              Item_time_typecast::tmp_table_field(TABLE*)
00000000007a70d6 g     F .text	0000000000000041              cmp_item_sort_string::make_same()
000000000098efa2  w    F .text	000000000000000f              ha_myisammrg::max_supported_keys() const
000000000095dcdf g     F .text	00000000000002e3              _mi_calc_bin_pack_key_length
0000000000799df4  w    F .text	000000000000000b              List_iterator_fast<Item_field>::remove()
0000000000992a17 g     F .text	0000000000000275              myrg_status
00000000007ecabc g     F .text	00000000000002b3              Item_func_make_set::val_str(String*)
00000000007ac6b6 g     F .text	0000000000000062              Item_cond_and::neg_transformer(THD*)
000000000080a676  w    F .text	000000000000002b              Item_sum_xor::~Item_sum_xor()
000000000056b480  w    F .text	0000000000000046              set_var_collation_client::~set_var_collation_client()
00000000005e9852  w    F .text	0000000000000026              I_List<delayed_row>::push_back(delayed_row*)
00000000010684b0  w    O .data.rel.ro	00000000000000e8              vtable for Protocol_text
00000000006576ba g     F .text	0000000000000232              JOIN::cache_const_exprs()
0000000000899efc  w    F .text	0000000000000052              field_real::get_min_arg(String*)
000000000065e0fe g     F .text	00000000000007b9              find_files(THD*, List<st_mysql_lex_string>*, char const*, char const*, char const*, bool, st_mem_root*)
0000000000858d2e g     F .text	0000000000000112              SEL_ARG::SEL_ARG(Field*, unsigned char, unsigned char*, unsigned char*, unsigned char, unsigned char, unsigned char)
00000000007fba4e g     F .text	000000000000003c              subselect_single_select_engine::upper_select_const_tables()
0000000001394cf8 g     O .bss	0000000000000004              key_THR_LOCK_myisam_mmap
0000000000981a8c g     F .text	0000000000000037              ha_heap::position(unsigned char const*)
000000000074bdb2 g     F .text	0000000000000112              Field_new_decimal::Field_new_decimal(unsigned int, bool, char const*, unsigned char, bool)
00000000007f395e  w    F .text	0000000000000058              Item_func_substr::~Item_func_substr()
0000000000905a86  w    F .text	000000000000000f              ha_perfschema::max_supported_record_length() const
000000000081686e  w    F .text	0000000000000014              Item_date_add_interval::field_type() const
000000000065ad1a  w    F .text	000000000000011f              JOIN::JOIN(THD*, List<Item>&, unsigned long long, select_result*)
00000000006caf22  w    F .text	0000000000000051              Event_creation_ctx::Event_creation_ctx(charset_info_st*, charset_info_st*, charset_info_st*)
00000000005597e0  w    F .text	0000000000000026              I_List_iterator<THD>::I_List_iterator(I_List<THD>&)
000000000106c100  w    O .data.rel.ro	0000000000000020              vtable for Relay_log_info
00000000007dab16  w    F .text	0000000000000011              Item_func_sqrt::func_name() const
00000000006aa20f g     F .text	000000000000021c              find_set(st_typelib*, char const*, unsigned int, charset_info_st*, char**, unsigned int*, bool*)
0000000001088590  w    O .data.rel.ro	0000000000000030              vtable for Create_func_arg2
000000000121b0a0 g     O .data	0000000000000100              to_lower_cp852_bin
0000000001082b20  w    O .data.rel.ro	0000000000000398              vtable for Item_func_interval
00000000007379ec  w    F .text	00000000000000bd              Item_sum::Item_sum(Item*)
00000000010891c8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_max
00000000006d4a0c g     F .text	000000000000012d              compare_lengths(Field*, enum_field_types, unsigned short)
00000000006593ea  w    F .text	000000000000002e              Field_bit::set_bit_ptr(unsigned char*, unsigned char)
0000000000858d2e g     F .text	0000000000000112              SEL_ARG::SEL_ARG(Field*, unsigned char, unsigned char*, unsigned char*, unsigned char, unsigned char, unsigned char)
00000000006d701c g     F .text	0000000000000036              table_def::~table_def()
000000000076752c  w    F .text	000000000000000f              Field_bit::size_of() const
000000000085cc0c g     F .text	000000000000028f              get_sweep_read_cost(PARAM const*, unsigned long long)
000000000065c42e  w    F .text	000000000000001d              List_iterator<Item_outer_ref>::operator++(int)
00000000006bb100  w    F .text	000000000000001a              List<String>::head_ref()
000000000073c700  w    F .text	0000000000000038              Alter_table_common::Alter_table_common(LEX*)
0000000000739356  w    F .text	0000000000000053              Item_func_if::Item_func_if(Item*, Item*, Item*)
00000000012ccae0 g     O .data	00000000000000b0              my_charset_utf16_esperanto_uca_ci
00000000005673d6  w    F .text	0000000000000013              Item_int::check_partition_func_processor(unsigned char*)
00000000007c57a6 g     F .text	00000000000000ab              Item_int_func::val_real()
00000000007aca1a g     F .text	0000000000000053              Item_func_gt::negated_item()
0000000000b9575f g     F .text	00000000000007e9              decimal_shift
000000000136cc43 g     O .bss	0000000000000001              opt_large_pages
0000000000848b58  w    F .text	000000000000000b              sql_ex_info::sql_ex_info()
00000000007fc81a  w    F .text	0000000000000046              Item_singlerow_subselect::~Item_singlerow_subselect()
00000000006528c7 g     F .text	000000000000006a              copy_funcs(Item**, THD const*)
00000000010ec500 g     O .data	0000000000000028              tx_isolation_names
00000000008741ea  w    F .text	000000000000001b              List<Item_sum>::List()
00000000010f15a8 g     O .data	0000000000000008              myisam_data_pointer_size
00000000008c12f6  w    F .text	0000000000000011              Item_nodeset_func_childbyname::func_name() const
000000000083f6cc g     F .text	000000000000000f              Append_block_log_event::get_create_or_append() const
0000000000000000       F *UND*	0000000000000000              ntohl@@GLIBC_2.2.5
00000000007dae80  w    F .text	0000000000000011              Item_func_bit_neg::func_name() const
0000000000000000       F *UND*	0000000000000000              __fxstat64@@GLIBC_2.2.5
0000000000b5a2b8 g     F .text	00000000000000a3              ha_tina::check_and_repair(THD*)
00000000008c75aa g     F .text	000000000000023d              Event_queue::dump_internal_status()
0000000000763ce4 g     F .text	00000000000000f5              Field::set_datetime_warning(MYSQL_ERROR::enum_warning_level, unsigned int, long long, enum_mysql_timestamp_type, int)
000000000095c2eb g     F .text	0000000000000249              _mi_get_last_key
00000000007997b6  w    F .text	000000000000002a              Item_cache_row::val_str(String*)
00000000005c8d65 g     F .text	0000000000000006              non-virtual thunk to Statement::~Statement()
00000000006f05a6  w    F .text	000000000000003a              Observer_info::Observer_info(void*, st_plugin_int*)
0000000000849096  w    F .text	000000000000000f              Format_description_log_event::get_data_size()
00000000006d2116 g     F .text	00000000000000a2              partition_info::add_max_value()
00000000008904ca g     F .text	0000000000000011              Gis_multi_point::get_class_info() const
00000000007a4f82 g     F .text	0000000000000132              Item_func_case::val_decimal(my_decimal*)
000000000085609c g     F .text	000000000000004b              TIME_to_ulonglong_time
0000000000886c9a g     F .text	0000000000000083              sp_instr_jump_if_not::opt_move(unsigned int, List<sp_instr>*)
0000000000798b86  w    F .text	0000000000000046              Item_copy_int::~Item_copy_int()
00000000005f19a6  w    F .text	0000000000000026              List<String>::List(List<String> const&)
000000000083c15c g     F .text	00000000000001ab              Rand_log_event::Rand_log_event(char const*, Format_description_log_event const*)
00000000008b0b05 g     F .text	0000000000000059              get_partition_id_hash_sub(partition_info*, unsigned int*)
000000000138e368 g     O .bss	0000000000000001              myisam_flush
00000000005b6966 g     F .text	00000000000000ec              Query_cache::init()
0000000000b772e6 g     F .text	000000000000011d              FixTraceFlags
00000000006bb11a  w    F .text	000000000000001a              List<String>::pop()
00000000007b74cd g     F .text	0000000000000011              find_qualified_function_builder(THD*)
00000000007bc228  w    F .text	0000000000000038              Item_geometry_func::Item_geometry_func(Item*)
00000000008494ae  w    F .text	000000000000000f              Execute_load_log_event::get_data_size()
000000000073aef6  w    F .text	0000000000000075              Item_func_add_time::Item_func_add_time(Item*, Item*, bool, bool)
00000000007bd6d2  w    F .text	0000000000000041              Create_func_aes_decrypt::~Create_func_aes_decrypt()
00000000008f3067 g     F .text	0000000000000145              my_mkdir
00000000007acac2 g     F .text	000000000000002b              Item_bool_rowready_func2::negated_item()
000000000062057c g     F .text	00000000000000ee              debug_sync_set_action(THD*, char const*, unsigned long)
000000000084996b  w    F .text	0000000000000026              unsigned int available_buffer<unsigned int>(char const*, char const*, unsigned int)
0000000000760384 g     F .text	0000000000000041              Field_bit::pack_length_from_metadata(unsigned int)
0000000001374a60 g     O .bss	0000000000000060              my_locale_ms_MY
0000000000799da0  w    F .text	000000000000000f              List_iterator_fast<Item>::ref()
00000000008095e8  w    F .text	0000000000000040              Item_sum_min::Item_sum_min(THD*, Item_sum_min*)
00000000007bac16  w    F .text	000000000000004b              Item_udf_func::Item_udf_func(st_udf_func*)
00000000005589aa  w    F .text	0000000000000046              ilink::~ilink()
000000000091eff6 g     F .text	000000000000009d              ha_myisam::index_next(unsigned char*)
0000000000792fb6 g     F .text	0000000000000087              Item_cache_int::cache_value()
0000000000765440  w    F .text	000000000000000f              Field_tiny::result_type() const
0000000001087cf0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_endpoint
000000000056c309 g     F .text	0000000000000215              init_slave()
000000000077b4d2  w    F .text	00000000000000c8              Ha_trx_info::register_ha(THD_TRANS*, handlerton*)
000000000084158a g     F .text	0000000000000715              Rows_log_event::Rows_log_event(char const*, unsigned int, Log_event_type, Format_description_log_event const*)
00000000010c3b38  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_stmt
000000000088a358 g     F .text	00000000000000f1              sp_pcontext::destroy()
000000000077c050  w    F .text	0000000000000017              handler::update_row(unsigned char const*, unsigned char*)
0000000000817e96  w    F .text	0000000000000046              Item_func_time_to_sec::~Item_func_time_to_sec()
0000000000606fa4  w    F .text	0000000000000037              COND_EQUAL::COND_EQUAL()
00000000007be09a  w    F .text	000000000000002d              Create_func_connection_id::Create_func_connection_id()
00000000010cb560  w    O .data.rel.ro	0000000000000468              vtable for ha_innobase
00000000007be10a  w    F .text	0000000000000026              Create_func_connection_id::~Create_func_connection_id()
000000000058b56d g     F .text	00000000000017f8              mysql_show_grants(THD*, st_lex_user*)
0000000000765e7a  w    F .text	000000000000000f              Field_null::reset()
00000000010695b8  w    O .data.rel.ro	0000000000000028              vtable for No_such_table_error_handler
000000000120a1a0 g     O .data	0000000000000200              to_uni_ascii_general_ci
0000000000659188  w    F .text	00000000000000a2              Field_blob::Field_blob(unsigned int, bool, char const*, charset_info_st*)
000000000079ac6e  w    F .text	000000000000002b              Item_name_const::~Item_name_const()
0000000000b75b13 g     F .text	000000000000004e              my_timer_milliseconds
00000000007e2554  w    F .text	0000000000000046              Item_func_envelope::~Item_func_envelope()
000000000073d297 g     F .text	0000000000000048              net_clear_error
0000000001088700  w    O .data.rel.ro	0000000000000398              vtable for Item_func_like_range_max
000000000073bd68  w    F .text	0000000000000088              sp_instr_set::sp_instr_set(unsigned int, sp_pcontext*, unsigned int, Item*, enum_field_types, LEX*, bool)
000000000061d715 g     F .text	00000000000000c7              debug_sync_init_thread(THD*)
00000000007b0bd2  w    F .text	0000000000000046              cmp_item_datetime::~cmp_item_datetime()
00000000007848d6 g     F .text	000000000000005c              Item_int::print(String*, enum_query_type)
00000000006fafdc g     F .text	0000000000000238              trans_rollback_to_savepoint(THD*, st_mysql_lex_string)
0000000000799af4  w    F .text	0000000000000072              Item_aggregate_ref::print(String*, enum_query_type)
0000000000759eba g     F .text	0000000000000100              Field_varstring::cmp_max(unsigned char const*, unsigned char const*, unsigned int)
00000000005af668  w    F .text	0000000000000020              Field_iterator_view::end_of_fields()
0000000000b6926c g     F .text	0000000000000108              ha_partition::rnd_pos(unsigned char*, unsigned char*)
00000000007daed0  w    F .text	0000000000000036              Item_func_last_insert_id::fix_length_and_dec()
0000000001078f70  w    O .data.rel.ro	0000000000000360              vtable for Item_copy_uint
00000000013862e0 g     O .bss	0000000000000020              my_null_string
0000000000889aba  w    F .text	0000000000000012              sp_cursor::get_instr()
000000000081d1e4 g     F .text	0000000000000031              Log_to_file_event_handler::cleanup()
000000000074c03e g     F .text	00000000000000ce              Field_new_decimal::set_value_on_overflow(my_decimal*, bool)
00000000005586f0  w    F .text	000000000000000b              Sql_alloc::Sql_alloc()
00000000005a38ca g     F .text	00000000000000af              Open_table_context::Open_table_context(THD*, unsigned int)
0000000000908518  w    F .text	000000000000001d              PFS_scan::last() const
00000000007c1a76  w    F .text	0000000000000026              Create_func_rtrim::~Create_func_rtrim()
000000000084dbf2 g     F .text	0000000000000169              Delete_rows_log_event_old::do_before_row_operations(TABLE*)
00000000005654c8  w    F .text	000000000000000f              Protocol_binary::type()
00000000007bcaf4  w    F .text	0000000000000038              Item_date::Item_date(Item*)
0000000000748225 g     F .text	000000000000000d              get_client_errmsgs
000000000057aa2c  w    F .text	0000000000000013              Log_event::do_apply_event(Relay_log_info const*)
000000000138c8c0 g     O .bss	0000000000000004              my_dont_interrupt
00000000007f5118 g     F .text	000000000000000f              Item_subselect::type() const
00000000007c1010  w    F .text	000000000000002d              Create_func_numpoints::Create_func_numpoints()
00000000007c1908  w    F .text	0000000000000041              Create_func_row_count::~Create_func_row_count()
000000000082dbf4  w    F .text	0000000000000078              binlog_cache_mngr::binlog_cache_mngr(unsigned long long, unsigned long long, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
00000000012ca6e0 g     O .data	00000000000000b0              my_charset_utf8mb4_czech_uca_ci
000000000136cd18 g     O .bss	0000000000000008              slave_exec_mode_options
00000000005d0a1e  w    F .text	000000000000002e              List<Alter_column>::List(List<Alter_column> const&, st_mem_root*)
0000000000646001 g     F .text	00000000000007fe              create_myisam_from_heap(THD*, TABLE*, TMP_TABLE_PARAM*, int, bool)
00000000006e8f78 g     F .text	00000000000000dd              QUERY_PROFILE::QUERY_PROFILE(PROFILING*, char const*)
000000000089ecd8 g     F .text	00000000000003b2              multi_delete::do_table_deletes(TABLE*, bool)
0000000000796c16  w    F .text	0000000000000014              Item_splocal::result_type() const
00000000007566ee g     F .text	000000000000002a              Field_newdate::get_time(st_mysql_time*)
000000000077c2fc  w    F .text	0000000000000013              handler::rename_partitions(char const*)
00000000008ae3e1 g     F .text	0000000000000b71              generate_partition_syntax(partition_info*, unsigned int*, bool, bool, st_ha_create_information*, Alter_info*, char const*)
0000000000b6b1da g     F .text	00000000000005bc              ha_partition::handle_ordered_index_scan(unsigned char*, bool)
000000000073a394  w    F .text	0000000000000050              Item_func_spatial_rel::Item_func_spatial_rel(Item*, Item*, Item_func::Functype)
00000000007b0986  w    F .text	0000000000000046              Item_cond_or::~Item_cond_or()
00000000007867dc g     F .text	00000000000001bb              Item_param::save_in_field(Field*, bool)
0000000000561d44 g     F .text	0000000000000092              net_store_data(unsigned char*, long long)
00000000007bb6f4  w    F .text	000000000000005c              Item_func_des_encrypt::Item_func_des_encrypt(Item*)
0000000000000000       F *UND*	0000000000000000              operator delete[](void*)@@GLIBCXX_3.4
00000000008f6abf g     F .text	0000000000000176              my_thread_end
00000000006c1b3a  w    F .text	0000000000000046              Time_zone::~Time_zone()
000000000085736a g     F .text	0000000000000214              QUICK_RANGE_SELECT::~QUICK_RANGE_SELECT()
000000000059b6de  w    F .text	0000000000000031              SQL_I_List<Sroutine_hash_entry>::empty()
000000000070adec  w    F .text	000000000000004a              Sys_var_flagset::global_value_ptr(THD*, st_mysql_lex_string*)
0000000000776022 g     F .text	00000000000001f5              handler::print_keydup_error(unsigned int, char const*)
000000000089ae92  w    F .text	000000000000006a              field_str::~field_str()
00000000005d9b2c  w    F .text	000000000000004a              String::String(char const*, unsigned int, charset_info_st*)
00000000009829fa  w    F .text	000000000000002e              ha_heap::cmp_ref(unsigned char const*, unsigned char const*)
00000000007963fa  w    F .text	000000000000003e              DTCollation::DTCollation(charset_info_st*, Derivation)
000000000088e8c0 g     F .text	0000000000000034              Gis_line_string::start_point(String*) const
000000000076529c  w    F .text	000000000000000f              Field_decimal::zero_pack() const
0000000000790e2e g     F .text	0000000000000128              Item_outer_ref::fix_fields(THD*, Item**)
00000000005c0f34 g     F .text	0000000000000020              thd_test_options
0000000001094288  w    O .data.rel.ro	0000000000000398              vtable for Item_func_tan
00000000007dd0b8  w    F .text	000000000000002b              Item_func_floor::~Item_func_floor()
0000000000889a4c  w    F .text	0000000000000012              sp_rcontext::is_return_value_set() const
0000000000931f12 g     F .text	000000000000019a              mi_checksum
0000000000b752cf g     F .text	000000000000011c              lf_hash_init
0000000000921df3 g     F .text	0000000000000112              chk_status
000000000081d442 g     F .text	00000000000000ac              LOGGER::init_base()
00000000007b562c g     F .text	0000000000000050              Create_func_md5::create(THD*, Item*)
000000000089222a g     F .text	0000000000000011              Gis_multi_polygon::get_class_info() const
000000000059b11c  w    F .text	0000000000000026              List<LEX_COLUMN>::List(List<LEX_COLUMN> const&)
00000000012651e0 g     O .data	0000000000000100              pl02
000000000075f4a2 g     F .text	0000000000000031              Field_bit::store(double)
00000000007f2a32  w    F .text	000000000000002b              Item_func_compress::~Item_func_compress()
0000000000612c3c  w    F .text	000000000000002b              sys_var_pluginvar::~sys_var_pluginvar()
000000000065bd87  w    F .text	00000000000000a2              add_cond_and_fix(Item**, Item*)
000000000073a9a2  w    F .text	000000000000002d              Item_func_curtime_local::Item_func_curtime_local()
00000000005c3dee g     F .text	00000000000001df              THD::convert_string(st_mysql_lex_string*, charset_info_st*, char const*, unsigned int, charset_info_st*)
00000000007b163a  w    F .text	0000000000000046              Item_in_optimizer::~Item_in_optimizer()
000000000089393e  w    F .text	0000000000000041              Gis_polygon::~Gis_polygon()
00000000007513bc g     F .text	0000000000000051              Field_float::val_int()
000000000087e7a0  w    F .text	0000000000000051              Stored_routine_creation_ctx::Stored_routine_creation_ctx(charset_info_st*, charset_info_st*, charset_info_st*)
0000000000765828  w    F .text	000000000000007a              Field_long::Field_long(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, bool, bool)
000000000106bd18  w    O .data.rel.ro	0000000000000050              vtable for Field_iterator_table_ref
000000000076490a  w    F .text	000000000000000f              Field::derivation() const
00000000005c9212 g     F .text	00000000000000c8              Statement_map::~Statement_map()
00000000010bce10  w    O .data.rel.ro	0000000000000398              vtable for Item_func_unix_timestamp
0000000000000000       F *UND*	0000000000000000              confstr@@GLIBC_2.2.5
0000000000607c66  w    F .text	000000000000002d              Lock_tables_prelocking_strategy::Lock_tables_prelocking_strategy()
00000000008938e4  w    F .text	000000000000002c              Gis_line_string::dimension(unsigned int*, char const**) const
0000000000893622  w    F .text	0000000000000058              Geometry::not_enough_points(char const*, unsigned int, unsigned int) const
0000000000796606  w    F .text	0000000000000035              Hybrid_type_traits::~Hybrid_type_traits()
00000000005e982c  w    F .text	0000000000000026              I_List<delayed_row>::append(delayed_row*)
00000000007b4c86 g     F .text	0000000000000050              Create_func_lcase::create(THD*, Item*)
000000000108a3c0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_found_rows
0000000000799034  w    F .text	000000000000000f              Item_trigger_field::type() const
000000000059b51c  w    F .text	000000000000001a              Thd_charset_adapter::Thd_charset_adapter(THD*)
00000000007a65c6 g     F .text	0000000000000096              in_string::~in_string()
00000000006f08ae  w    F .text	0000000000000037              Delegate::unlock()
00000000007c9a04 g     F .text	000000000000011d              Item_func_neg::int_op()
00000000007c1718  w    F .text	000000000000002d              Create_func_release_lock::Create_func_release_lock()
00000000008098ee  w    F .text	0000000000000011              Item_sum_xor::func_name() const
00000000008c094e  w    F .text	0000000000000076              Item_nodeset_func::Item_nodeset_func(String*)
000000000090b264 g     F .text	0000000000000034              PFS_readonly_acl::check(unsigned long, unsigned long*) const
00000000009a8096  w    F .text	0000000000000025              List<st_foreign_key_info>::push_back(st_foreign_key_info*)
0000000000848a24  w    F .text	000000000000007d              Query_tables_list::set_stmt_row_injection()
00000000005e8cfe  w    F .text	00000000000000a5              delayed_row::delayed_row(st_mysql_lex_string, enum_duplicates, bool, bool)
0000000000606ca6  w    F .text	000000000000004e              Item_int_func::Item_int_func()
0000000000886d1e g     F .text	000000000000008d              sp_instr_freturn::execute(THD*, unsigned int*)
00000000005f1eb2  w    F .text	000000000000001b              List<Index_hint>::List()
00000000008f83ed g     F .text	00000000000001c9              _downheap
00000000005e3870 g     F .text	00000000000000ec              Delayed_insert::open_and_lock_table()
00000000005588f0  w    F .text	000000000000001f              ilink::operator delete(void*, unsigned long)
00000000007bd7d0  w    F .text	000000000000002d              Create_func_as_wkb::Create_func_as_wkb()
0000000000599096  w    F .text	000000000000001b              THD::has_invoker()
0000000000872084  w    F .text	000000000000000f              QUICK_ROR_INTERSECT_SELECT::get_type()
00000000007d0dae g     F .text	0000000000000029              ull_get_key(User_level_lock const*, unsigned long*, char)
0000000000606fdc  w    F .text	0000000000000052              Item_cond_and::Item_cond_and(Item*, Item*)
00000000005af602  w    F .text	0000000000000045              Field_iterator_view::Field_iterator_view()
00000000008cab4e  w    F .text	0000000000000041              Event_db_intact::~Event_db_intact()
00000000007b45a6 g     F .text	0000000000000050              Create_func_glength::create(THD*, Item*)
00000000012cda20 g     O .data	00000000000000b0              my_charset_ucs2_bin
0000000001217f60 g     O .data	0000000000000200              to_uni_greek_bin
000000000073ac20  w    F .text	0000000000000088              Item_date_add_interval::Item_date_add_interval(Item*, Item*, interval_type, bool)
00000000006bc437 g     F .text	0000000000000096              str_to_time_with_warn(charset_info_st*, char const*, unsigned int, st_mysql_time*)
00000000010c3798  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_hpop
000000000094fdf8 g     F .text	00000000000000a6              mi_recinfo_read
000000000087e66c  w    F .text	000000000000005c              Stored_routine_creation_ctx::clone(st_mem_root*)
00000000010ef6c0 g     O .data	0000000000000058              table_file_summary_by_event_name::m_share
0000000000607142  w    F .text	000000000000000b              Lex_input_stream::~Lex_input_stream()
0000000000560b1e g     F .text	0000000000000118              Protocol::net_store_data(unsigned char const*, unsigned long)
00000000010eee18 g     O .data	0000000000000004              my_file_limit
0000000000899e36  w    F .text	00000000000000c5              field_real::field_real(Item*, analyse*)
000000000136cbf6 g     O .bss	0000000000000001              opt_endinfo
00000000007c0584  w    F .text	000000000000002d              Create_func_ln::Create_func_ln()
00000000008ec686 g     F .text	000000000000017a              my_printf_error
00000000007e21b2  w    F .text	0000000000000046              Item_func_issimple::~Item_func_issimple()
00000000007dd792  w    F .text	0000000000000046              Item_func_log2::~Item_func_log2()
000000000073aaee  w    F .text	0000000000000038              Item_func_now::Item_func_now(Item*)
0000000000606d5e  w    F .text	000000000000002d              Item_bool_func::Item_bool_func()
00000000007a1256 g     F .text	000000000000006c              Item_func_ne::val_int()
0000000000b97478 g     F .text	0000000000000822              bin2decimal
00000000007aa9e4 g     F .text	0000000000000740              Item_func_like::fix_fields(THD*, Item**)
00000000010c3560  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_cclose
00000000006a4ec4  w    F .text	000000000000001b              List<TABLE>::List()
00000000005b2a0a g     F .text	000000000000009f              Query_cache_block::destroy()
00000000007645a2  w    F .text	0000000000000047              Field::cmp_binary(unsigned char const*, unsigned char const*, unsigned int)
000000000070eb2c  w    F .text	0000000000000041              Sys_var_keycache::~Sys_var_keycache()
00000000013867f8 g     O .bss	0000000000000008              Create_func_x::s_singleton
00000000007667f0  w    F .text	000000000000000f              Field_datetime::repertoire() const
00000000006ce754 g     F .text	00000000000000d2              partition_info::create_subpartition_name(unsigned int, char const*)
0000000000737d88  w    F .text	0000000000000065              Item_sum_variance::Item_sum_variance(Item*, unsigned int)
00000000006594fe  w    F .text	000000000000000f              Item_null::basic_const_item() const
0000000000000000       F *UND*	0000000000000000              freeaddrinfo@@GLIBC_2.2.5
00000000005c0f69 g     F .text	0000000000000014              thd_tx_isolation
00000000006787ce  w    F .text	0000000000000026              List<char>::List(List<char> const&)
0000000000841338 g     F .text	0000000000000251              Rows_log_event::Rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
000000000098f6ca g     F .text	0000000000000a00              myrg_open
00000000007dbfbc  w    F .text	0000000000000046              Item_func_uuid_short::~Item_func_uuid_short()
00000000005d1bb6  w    F .text	000000000000002b              select_send::~select_send()
0000000000b69762 g     F .text	000000000000034e              ha_partition::index_init(unsigned int, bool)
00000000010efba0 g     O .data	0000000000000058              table_threads::m_share
00000000007be6a4  w    F .text	0000000000000041              Create_func_dayname::~Create_func_dayname()
00000000006d80f2  w    F .text	00000000000000e8              injector::transaction::transaction(MYSQL_BIN_LOG*, THD*)
00000000008903b2 g     F .text	0000000000000118              Gis_multi_point::geometry_n(unsigned int, String*) const
00000000005d3062 g     F .text	0000000000000096              my_dbopt_cleanup()
000000000055ca4e g     F .text	00000000000000fb              mysql_client_register_plugin
0000000000b77694 g     F .text	0000000000001533              _db_explain_
00000000007db960  w    F .text	0000000000000011              Item_func_is_used_lock::func_name() const
000000000076e83f g     F .text	000000000000010e              reuse_freed_buff(st_queue*, st_buffpek*, unsigned int)
000000000079a500  w    F .text	0000000000000046              Item_default_value::~Item_default_value()
00000000010c22c8  w    O .data.rel.ro	0000000000000028              vtable for TABLE_READ_PLAN
00000000006f5a1a  w    F .text	0000000000000039              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >::I_P_List()
000000000074869a g     F .text	00000000000000d8              Field_num::Field_num(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
0000000000817bea  w    F .text	0000000000000046              Item_func_now_local::~Item_func_now_local()
000000000082d03a  w    F .text	000000000000002b              Start_log_event_v3::~Start_log_event_v3()
0000000001374be0 g     O .bss	0000000000000060              my_locale_pt_BR
00000000005653d6  w    F .text	0000000000000035              Protocol::~Protocol()
0000000000678572  w    F .text	000000000000003d              thread_info::thread_info()
000000000120bc20 g     O .data	0000000000000101              ctype_latin2_hungarian_ci
00000000005d3031 g     F .text	0000000000000031              my_dboptions_cache_free()
00000000007daae0  w    F .text	0000000000000011              Item_func_log::func_name() const
00000000005d7404  w    F .text	0000000000000021              st_ha_create_information::st_ha_create_information()
0000000000566fb4  w    F .text	000000000000000f              Item::filed_for_view_update()
00000000007e168a  w    F .text	0000000000000061              Item_func_spatial_decomp::func_name() const
0000000000750c60 g     F .text	00000000000000bc              Field_longlong::send_binary(Protocol*)
000000000075099c g     F .text	00000000000000f8              Field_longlong::val_real()
00000000005ad9f1 g     F .text	0000000000000496              mysql_rm_tmp_tables()
0000000000708e98  w    F .text	0000000000000045              Sys_var_enum::make_symbolic(void (*)(void*, unsigned long, char const*))
000000000059b062  w    F .text	0000000000000025              List_iterator<st_lex_user>::replace(List<st_lex_user>&)
00000000007c22fe  w    F .text	0000000000000041              Create_func_subtime::~Create_func_subtime()
0000000000000000       F *UND*	0000000000000000              pthread_attr_getstacksize@@GLIBC_2.2.5
0000000000847a7c g     F .text	00000000000000f1              Delete_rows_log_event::do_before_row_operations(Slave_reporting_capability const*)
00000000010edca0 g     O .data	00000000000000a0              log_10_int
00000000005f1552  w    F .text	000000000000006d              Mem_root_array<st_order*, true>::Mem_root_array(st_mem_root*)
00000000009545fa g     F .text	0000000000000359              _mi_memmap_file
0000000000b66a60 g     F .text	0000000000000185              ha_partition::clone(char const*, st_mem_root*)
00000000007b0182  w    F .text	0000000000000076              Item_cond_and::copy_andor_structure(THD*, bool)
00000000007c2718  w    F .text	0000000000000041              Create_func_touches::~Create_func_touches()
00000000007c1268  w    F .text	000000000000002d              Create_func_period_add::Create_func_period_add()
000000000091123a g     F .text	000000000000007d              table_setup_consumers::rnd_pos(void const*)
00000000013865a0 g     O .bss	0000000000000008              Create_func_last_insert_id::s_singleton
00000000005c4ac4 g     F .text	00000000000000f5              THD::close_active_vio()
0000000000571c81 g     F .text	00000000000000c9              set_slave_thread_default_charset(THD*, Relay_log_info const*)
0000000000796c60  w    F .text	0000000000000036              Item_case_expr::result_type() const
00000000007ca8fe g     F .text	0000000000000165              Item_func_atan::val_real()
00000000008affbb g     F .text	0000000000000228              get_list_array_idx_for_endpoint(partition_info*, bool, bool)
00000000005e98f8  w    F .text	0000000000000025              List<Create_field>::push_back(Create_field*)
00000000007744cb g     F .text	00000000000001ae              ha_savepoint(THD*, st_savepoint*)
00000000007b6f90 g     F .text	0000000000000050              Create_func_x::create(THD*, Item*)
00000000007f1a46  w    F .text	000000000000002b              Item_str_conv::~Item_str_conv()
00000000010ee7e0 g     O .data	0000000000000108              globerrs
00000000006e88d1 g     F .text	0000000000000084              my_thread_scheduler_set
00000000005b37aa g     F .text	00000000000001d6              Query_cache::Query_cache(unsigned long, unsigned long, unsigned long, unsigned int, unsigned int)
0000000001211e20 g     O .data	0000000000000101              ctype_macce_bin
000000000106a028  w    O .data.rel.ro	0000000000000088              vtable for st_select_lex_node
0000000000699c71 g     F .text	0000000000000152              find_udf(char const*, unsigned int, bool)
00000000007c1b32  w    F .text	000000000000002d              Create_func_sha::Create_func_sha()
0000000001083250  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_strcmp
000000000079a5b8  w    F .text	000000000000002b              Item_outer_ref::~Item_outer_ref()
0000000000782fb4 g     F .text	000000000000016c              Item_field::Item_field(THD*, Name_resolution_context*, Field*)
00000000007ab43a g     F .text	00000000000004e6              Item_func_regex::fix_fields(THD*, Item**)
000000000107dea8  w    O .data.rel.ro	0000000000000028              vtable for Cached_item_field
000000000080e65a g     F .text	0000000000000079              Item_func_year::val_int()
0000000000b7a7b2 g     F .text	0000000000000029              _db_get_func_
0000000000738e5e  w    F .text	0000000000000046              Item_func_istrue::~Item_func_istrue()
000000000061bda6  w    F .text	000000000000001e              st_select_lex_unit::set_thd(THD*)
00000000008bb698 g     F .text	000000000000003d              Item_nodeset_func_rootelement::val_nodeset(String*)
00000000010adaa0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_sha
000000000081040e g     F .text	0000000000000312              Item_func_date_format::val_str(String*)
00000000005b094a  w    F .text	000000000000001b              List_iterator_fast<Natural_join_column>::List_iterator_fast()
000000000081583c  w    F .text	0000000000000013              Item_func_to_seconds::check_partition_func_processor(unsigned char*)
00000000005aede8  w    F .text	000000000000000b              I_P_List_null_counter::dec()
00000000007e1c7e  w    F .text	000000000000001e              Item_func_srid::fix_length_and_dec()
000000000090c2be  w    F .text	0000000000000026              PFS_unknown_acl::~PFS_unknown_acl()
000000000120abe0 g     O .data	0000000000000100              to_upper_latin1_danish_ci
0000000001370760 g     O .bss	0000000000000004              key_hash_filo_lock
000000000065c02a  w    F .text	000000000000002e              List<Item_func_match>::List(List<Item_func_match> const&, st_mem_root*)
000000000136d6a0 g     O .bss	0000000000000200              glob_hostname
00000000008097de  w    F .text	000000000000002b              Item_sum_bit::~Item_sum_bit()
0000000000906699 g     F .text	000000000000017d              cleanup_instruments()
000000000089da2f g     F .text	00000000000002fd              mysql_multi_delete_prepare(THD*)
00000000005ceab0  w    F .text	000000000000001b              SQL_I_List<TABLE_LIST>::~SQL_I_List()
00000000005bf454  w    F .text	000000000000001b              Query_cache_table::callback(char (*)(THD*, char*, unsigned int, unsigned long long*))
0000000000797696  w    F .text	0000000000000072              Item_static_string_func::Item_static_string_func(char const*, char const*, unsigned int, charset_info_st*, Derivation)
00000000007a1574 g     F .text	0000000000000188              Item_func_opt_neg::eq(Item const*, bool) const
00000000006e6eda g     F .text	0000000000000013              free_max_user_conn()
00000000007bda02  w    F .text	0000000000000026              Create_func_atan::~Create_func_atan()
00000000005f1caa  w    F .text	000000000000009c              void list_copy_and_replace_each_value<Key>(List<Key>&, st_mem_root*)
000000000091f4c4 g     F .text	000000000000046a              ha_myisam::info(unsigned int)
00000000006d7d24 g     F .text	00000000000000e2              injector::record_incident(THD*, Incident, st_mysql_lex_string)
0000000000795f35  w    F .text	000000000000001f              my_decimal_is_zero(my_decimal const*)
00000000007b2450 g     F .text	00000000000000fb              Create_func_arg3::create_func(THD*, st_mysql_lex_string, List<Item>*)
00000000007bce9e  w    F .text	000000000000004b              Item_func_str_to_date::Item_func_str_to_date(Item*, Item*)
000000000080a312  w    F .text	0000000000000046              Item_sum_udf_str::~Item_sum_udf_str()
000000000057a112  w    F .text	0000000000000014              MYSQL_BIN_LOG::get_open_count()
00000000007c210e  w    F .text	000000000000002d              Create_func_str_to_date::Create_func_str_to_date()
000000000070d406  w    F .text	0000000000000152              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::do_check(THD*, set_var*)
00000000007bea90  w    F .text	000000000000002d              Create_func_des_encrypt::Create_func_des_encrypt()
000000000073ca4a  w    F .text	0000000000000045              Resignal_statement::Resignal_statement(LEX*, sp_cond_type const*, Set_signal_information const&)
00000000006f6022  w    F .text	0000000000000011              I_P_List_fast_push_back<MDL_ticket>::get_last() const
000000000084eb78 g     F .text	000000000000002b              Old_rows_log_event::~Old_rows_log_event()
00000000007becc2  w    F .text	0000000000000026              Create_func_elt::~Create_func_elt()
00000000007c0de6  w    F .text	0000000000000041              Create_func_name_const::~Create_func_name_const()
000000000121b9c0 g     O .data	0000000000000101              ctype_geostd8_general_ci
00000000007c80dc g     F .text	0000000000000239              Item_func_mul::int_op()
000000000088a928 g     F .text	0000000000000074              sp_pcontext::push_label(char*, unsigned int)
0000000000558c74  w    F .text	0000000000000032              base_ilist_iterator::base_ilist_iterator(base_ilist&)
0000000001208500 g     O .data	0000000000000101              ctype_hp8_english_ci
0000000000768140  w    F .text	000000000000002b              Field_year::~Field_year()
00000000006a48d2 g     F .text	000000000000046e              multi_update::send_eof()
00000000008feb15 g     F .text	000000000000015b              thr_abort_locks
0000000000849838  w    F .text	000000000000000f              Incident_log_event::get_type_code()
0000000001083998  w    O .data.rel.ro	00000000000003a8              vtable for Item_func_le
000000000107f518  w    O .data.rel.ro	0000000000000398              vtable for Item_is_not_null_test
00000000007a1142 g     F .text	0000000000000034              Item_in_optimizer::is_null()
00000000007b131c  w    F .text	0000000000000046              Item_func_lt::~Item_func_lt()
0000000000682255 g     F .text	00000000000000c6              calculate_interval_lengths(charset_info_st*, st_typelib*, unsigned int*, unsigned int*)
0000000000ba6058 g     F .text	0000000000000026              vio_buff_has_data
00000000005b07ca  w    F .text	0000000000000041              MDL_deadlock_handler::~MDL_deadlock_handler()
0000000000653cb4 g     F .text	0000000000000086              JOIN::clear()
0000000000856f98 g     F .text	0000000000000033              QUICK_SELECT_I::QUICK_SELECT_I()
00000000006f57fa  w    F .text	000000000000006e              MDL_lock::create(MDL_key const*)
000000000091325a  w    F .text	0000000000000041              table_rwlock_instances::~table_rwlock_instances()
0000000000743d1d g     F .text	0000000000000489              mysql_reconnect
00000000007bf29e  w    F .text	0000000000000026              Create_func_find_in_set::~Create_func_find_in_set()
0000000000991302 g     F .text	00000000000000ea              myrg_rnext
00000000006984b4  w    F .text	0000000000000026              Stored_program_creation_ctx::~Stored_program_creation_ctx()
00000000007dbed0  w    F .text	00000000000000ec              Interruptible_wait::set_timeout(unsigned long long)
0000000000000000       F *UND*	0000000000000000              pthread_attr_setdetachstate@@GLIBC_2.2.5
000000000136cc34 g     O .bss	0000000000000001              relay_log_recovery
00000000005b7496 g     F .text	0000000000000119              Query_cache::make_disabled()
0000000000876d84  w    F .text	000000000000000f              Item_proc_real::result_type() const
0000000000558708  w    F .text	000000000000003a              list_node::list_node(void*, list_node*)
0000000000757c8e g     F .text	00000000000001f6              Field_str::store(double)
00000000005a6512 g     F .text	00000000000001bd              open_normal_and_derived_tables(THD*, TABLE_LIST*, unsigned int)
00000000010694d0  w    O .data.rel.ro	0000000000000038              vtable for Lock_tables_prelocking_strategy
00000000007d8506 g     F .text	0000000000000138              get_system_var(THD*, enum_var_type, st_mysql_lex_string, st_mysql_lex_string)
000000000136ccf0 g     O .bss	0000000000000008              open_files_limit
00000000008866c2 g     F .text	0000000000000011              sp_instr_opt_meta::get_cont_dest()
0000000000698322  w    F .text	0000000000000015              sp_head::get_creation_ctx()
00000000008ea47a g     F .text	00000000000001a7              bitmap_init
0000000000711884 g     F .text	0000000000025c02              MYSQLparse(THD*)
000000000120ce80 g     O .data	0000000000000101              ctype_greek_general_ci
0000000000867f76 g     F .text	000000000000066e              get_quick_keys(PARAM*, QUICK_RANGE_SELECT*, st_key_part*, SEL_ARG*, unsigned char*, unsigned int, unsigned char*, unsigned int)
000000000070c9d4  w    F .text	0000000000000056              Sys_var_struct::session_value_ptr(THD*, st_mysql_lex_string*)
000000000076514c  w    F .text	0000000000000011              Field_real::max_display_length()
00000000007dca06  w    F .text	0000000000000046              Item_func_udf_float::~Item_func_udf_float()
0000000000758ec4 g     F .text	0000000000000194              Field_string::pack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000007aea78  w    F .text	0000000000000046              Item_func_opt_neg::~Item_func_opt_neg()
0000000000808f26  w    F .text	000000000000002b              Item_sum_sum::~Item_sum_sum()
00000000007bd5a6  w    F .text	0000000000000041              Create_func_addtime::~Create_func_addtime()
0000000001086c10  w    O .data.rel.ro	0000000000000030              vtable for Create_func_subtime
00000000006d7bc2 g     F .text	00000000000000a4              injector::new_trans(THD*, injector::transaction*)
0000000000777710 g     F .text	0000000000000043              handler::ha_analyze(THD*, st_ha_check_opt*)
00000000006792dc g     F .text	000000000000008d              String::copy(String const&)
00000000007c7af8 g     F .text	00000000000000f9              Item_func_minus::real_op()
000000000074ccd4 g     F .text	0000000000000080              Field_new_decimal::store_time(st_mysql_time*, enum_mysql_timestamp_type)
000000000057b320  w    F .text	000000000000001e              sp_head::set_sp_cache_version(unsigned long)
00000000007d95cc g     F .text	00000000000000e0              Item_func_sp::make_field(Send_field*)
00000000007bdb2e  w    F .text	0000000000000026              Create_func_bin::~Create_func_bin()
0000000000709128  w    F .text	0000000000000129              Sys_var_charptr::Sys_var_charptr(char const*, char const*, int, long, unsigned long, CMD_LINE, charset_enum, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000007386dc  w    F .text	0000000000000040              Item_func_mod::Item_func_mod(Item*, Item*)
00000000008994d7 g     F .text	0000000000000047              compare_longlong(long long const*, long long const*)
00000000008ff602 g     F .text	0000000000000247              safe_mutex_lock
000000000056415c g     F .text	000000000000005d              Protocol_binary::store(char const*, unsigned long, charset_info_st*)
00000000007be032  w    F .text	0000000000000041              Create_func_concat_ws::~Create_func_concat_ws()
00000000008405d2 g     F .text	00000000000000b6              Execute_load_query_log_event::Execute_load_query_log_event(THD*, char const*, unsigned long, unsigned int, unsigned int, enum_load_dup_handling, bool, bool, bool, int)
00000000007bda28  w    F .text	000000000000002d              Create_func_benchmark::Create_func_benchmark()
000000000107ded0  w    O .data.rel.ro	0000000000000028              vtable for Cached_item_int
0000000000817566  w    F .text	0000000000000046              Item_func_add_time::~Item_func_add_time()
00000000005b7bae g     F .text	000000000000018f              Query_cache::write_block_data(unsigned long, unsigned char*, unsigned long, Query_cache_block::block_type, unsigned int)
0000000000558de0  w    F .text	000000000000001b              String::~String()
00000000006a9d45 g     F .text	000000000000009f              view_checksum(THD*, TABLE_LIST*)
00000000005e1d9f g     F .text	00000000000001c0              check_that_all_fields_are_given_values(THD*, TABLE*, TABLE_LIST*)
0000000000709f7e  w    F .text	0000000000000014              Sys_var_dbug::check_update_type(Item_result)
00000000006fa29e g     F .text	0000000000000220              trans_begin(THD*, unsigned int)
0000000000b9694b g     F .text	0000000000000108              decimal2ulonglong
00000000005d0c38  w    F .text	0000000000000026              List_iterator<Alter_column>::init(List<Alter_column>&)
00000000005d0042  w    F .text	000000000000002d              List<Key>::push_back(Key*, st_mem_root*)
000000000076654e  w    F .text	000000000000003c              Field_newdate::reset()
0000000000767a84  w    F .text	0000000000000026              List<Create_field>::List(List<Create_field> const&)
0000000000ba5e5d g     F .text	00000000000001fb              vio_read_buff
0000000000778ebc g     F .text	0000000000000152              ha_discover(THD*, char const*, char const*, unsigned char**, unsigned long*)
000000000070b2ba  w    F .text	0000000000000035              Sys_var_set::global_update(THD*, set_var*)
000000000082cbc8  w    F .text	0000000000000035              Log_event_handler::~Log_event_handler()
00000000005af744  w    F .text	000000000000006c              Field_iterator_table_ref::Field_iterator_table_ref()
0000000000911180 g     F .text	0000000000000021              table_setup_consumers::reset_position()
00000000007bc11c  w    F .text	000000000000004a              Item_func_uncompressed_length::Item_func_uncompressed_length(Item*)
000000000059ae92  w    F .text	000000000000001b              List_iterator<LEX_COLUMN>::List_iterator()
0000000000000000       F *UND*	0000000000000000              pthread_rwlock_rdlock@@GLIBC_2.2.5
00000000006ce574 g     F .text	00000000000001df              partition_info::set_show_version_string(String*)
00000000007c5dc6 g     F .text	0000000000000036              Item_func_num1::fix_num_length_and_dec()
000000000091f476 g     F .text	000000000000004d              ha_myisam::position(unsigned char const*)
00000000010898f8  w    O .data.rel.ro	0000000000000398              vtable for Item_dec_func
00000000005af5c8  w    F .text	0000000000000039              Field_iterator_table::Field_iterator_table()
000000000073a9d0  w    F .text	0000000000000038              Item_func_curtime_local::Item_func_curtime_local(Item*)
00000000010f1590 g     O .data	0000000000000008              myisam_block_size
0000000000990c3b g     F .text	0000000000000106              myrg_panic
00000000007bd578  w    F .text	000000000000002d              Create_func_addtime::Create_func_addtime()
0000000000738fa6  w    F .text	000000000000003f              Item_func_isfalse::Item_func_isfalse(Item*)
000000000080fdbc g     F .text	000000000000007b              Item_func_sysdate_local::save_in_field(Field*, bool)
00000000007c0296  w    F .text	000000000000002d              Create_func_lcase::Create_func_lcase()
0000000000891744 g     F .text	0000000000000301              Gis_multi_polygon::get_data_as_wkt(String*, char const**) const
000000000092021e g     F .text	0000000000000037              ha_myisam::records_in_range(unsigned int, st_key_range*, st_key_range*)
000000000136bf50 g     O .data	0000000000000008              my_str_free
00000000012cd580 g     O .data	00000000000000b0              my_charset_utf32_general_ci
00000000007dd63c  w    F .text	0000000000000046              Item_func_sqrt::~Item_func_sqrt()
00000000005bf964  w    F .text	00000000000000b0              Query_cache_query::lock_reading()
000000000073acf0  w    F .text	0000000000000038              Item_typecast::Item_typecast(Item*)
000000000061ba08 g     F .text	000000000000002a              Protocol_local::store_date(st_mysql_time*)
000000000138cc88 g     O .bss	0000000000000008              file_array
000000000082cafc  w    F .text	0000000000000017              TC_LOG_DUMMY::log_xid(THD*, unsigned long long)
00000000005b0f10  w    F .text	000000000000001b              List<Natural_join_column>::List()
000000000055c0ce  w    F .text	000000000000001b              I_List<NAMED_ILINK>::~I_List()
000000000091746d g     F .text	000000000000008e              reset_events_waits_current()
000000000089103e g     F .text	00000000000001ae              Gis_multi_line_string::is_closed(int*) const
0000000000b95f48 g     F .text	00000000000005e1              internal_str2dec
00000000010c1a88  w    O .data.rel.ro	0000000000000078              vtable for Format_description_log_event
000000000070a61c  w    F .text	0000000000000045              Sys_var_double::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000008c21f4  w    F .text	0000000000000046              Item_nodeset_func_descendantbyname::~Item_nodeset_func_descendantbyname()
00000000008009c0 g     F .text	000000000000004e              Aggregator_simple::arg_val_decimal(my_decimal*)
000000000136cc64 g     O .bss	0000000000000004              mysqld_port
0000000000912388 g     F .text	0000000000000028              table_mutex_instances::create()
00000000007bf6de  w    F .text	000000000000002d              Create_func_geometry_type::Create_func_geometry_type()
000000000073a80c  w    F .text	0000000000000011              Item_str_timefunc::charset_for_protocol() const
00000000005dd478  w    F .text	0000000000000041              Sql_handler_lock_error_handler::~Sql_handler_lock_error_handler()
00000000010efa50 g     O .data	0000000000000010              table_cond_instances::m_field_def
00000000005654b8  w    F .text	000000000000000f              Protocol_text::type()
00000000006b7dc8 g     F .text	0000000000000284              TABLE_LIST::prepare_security(THD*)
00000000005d747f g     F .text	000000000000011b              mysql_handle_derived(LEX*, bool (*)(THD*, LEX*, TABLE_LIST*))
000000000073a544  w    F .text	0000000000000040              Item_func_week::Item_func_week(Item*, Item*)
000000000056329e g     F .text	00000000000000ce              Protocol_text::store_tiny(long long)
00000000007996de  w    F .text	000000000000000f              Item_cache_str::result_type() const
000000000105e380 g     O .data.rel.ro	0000000000000008              TRN_EXT
000000000138cf20 g     O .bss	0000000000000080              pfs_param
000000000075fdd0 g     F .text	00000000000000ae              Field_bit::val_decimal(my_decimal*)
0000000000765d62  w    F .text	000000000000000f              Field_double::key_type() const
00000000007f579e g     F .text	00000000000002f0              Item_singlerow_subselect::select_transformer(JOIN*)
000000000054bf8e g     F .text	0000000000000078              Buffered_logs::print()
0000000000559334  w    F .text	000000000000002d              Lt_creator::Lt_creator()
00000000006c7aba g     F .text	0000000000000144              Event_queue_element::Event_queue_element()
000000000109ff60  w    O .data.rel.ro	0000000000000398              vtable for Item_func_as_wkb
000000000057ac5e  w    F .text	0000000000000046              Heartbeat_log_event::~Heartbeat_log_event()
00000000005b658c g     F .text	00000000000001ad              Query_cache::flush()
0000000000799406  w    F .text	0000000000000048              Item_cache::result_type() const
00000000005a62ab g     F .text	0000000000000267              open_and_lock_tables(THD*, TABLE_LIST*, bool, unsigned int, Prelocking_strategy*)
00000000007aff32  w    F .text	000000000000000f              Item_func_like::functype() const
0000000000876da4  w    F .text	000000000000001e              Item_proc_real::set(double)
00000000005b1136  w    F .text	000000000000000f              I_P_List_no_push_back<Wait_for_flush>::I_P_List_no_push_back(Wait_for_flush**)
0000000000000000       F *UND*	0000000000000000              exp@@GLIBC_2.2.5
00000000006eae50  w    F .text	000000000000006d              Queue<QUERY_PROFILE>::is_empty()
000000000074bc96 g     F .text	000000000000011b              Field_new_decimal::Field_new_decimal(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
00000000007e1c6c  w    F .text	0000000000000011              Item_func_srid::func_name() const
00000000007966aa  w    F .text	000000000000002d              Hybrid_type_traits_decimal::Hybrid_type_traits_decimal()
000000000136e700 g     O .bss	0000000000000238              max_system_variables
00000000006178dc g     F .text	0000000000000356              mysqld_stmt_fetch(THD*, char*, unsigned int)
0000000001087ed0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_dayofyear
00000000006f2be8 g     F .text	000000000000005f              MDL_ticket::is_incompatible_when_granted(enum_mdl_type) const
00000000005d1afe  w    F .text	0000000000000046              select_dump::~select_dump()
00000000009725b4 g     F .text	0000000000002ee6              rtree_page_mbr
00000000007ba23a  w    F .text	0000000000000038              Item_func_atan::Item_func_atan(Item*)
000000000073c41a  w    F .text	000000000000002a              sp_instr_cfetch::add_to_varlist(sp_variable*)
0000000000667669 g     F .text	0000000000000b8f              get_all_tables(THD*, TABLE_LIST*, Item*)
00000000007c2682  w    F .text	0000000000000041              Create_func_to_seconds::~Create_func_to_seconds()
00000000007f9d22 g     F .text	0000000000000091              subselect_union_engine::cleanup()
00000000005b0f52  w    F .text	0000000000000026              List_iterator_fast<String>::List_iterator_fast(List<String>&)
0000000001081268  w    O .data.rel.ro	0000000000000048              vtable for cmp_item_row
0000000000848eac  w    F .text	000000000000006a              Load_log_event::~Load_log_event()
00000000008ba02e g     F .text	0000000000000065              unique_write_to_ptrs(unsigned char*, unsigned int, Unique*)
00000000008c1986  w    F .text	0000000000000016              Item_func_xpath_count::fix_length_and_dec()
00000000007d9bfe g     F .text	0000000000000066              Item_func_sp::update_used_tables()
00000000005cfd04  w    F .text	0000000000000046              select_result_interceptor::~select_result_interceptor()
00000000006ac026 g     F .text	0000000000000057              Default_object_creation_ctx::Default_object_creation_ctx(THD*)
00000000012137c0 g     O .data	0000000000000100              to_upper_cp1251_bin
00000000007bb87a  w    F .text	0000000000000056              Item_func_encrypt::Item_func_encrypt(Item*)
0000000000776ac2 g     F .text	0000000000000016              handler::get_error_message(int, String*)
0000000000738ee2  w    F .text	000000000000003f              Item_func_isnottrue::Item_func_isnottrue(Item*)
00000000007a43f6 g     F .text	00000000000000bd              Item_func_if::val_decimal(my_decimal*)
000000000084231e g     F .text	000000000000120f              Rows_log_event::do_apply_event(Relay_log_info const*)
000000000073cb08  w    F .text	000000000000001b              List<sp_variable>::List()
00000000007678d6  w    F .text	0000000000000064              Field_bit::eq(Field*)
00000000007b468e g     F .text	0000000000000050              Create_func_hex::create(THD*, Item*)
000000000106a610  w    O .data.rel.ro	0000000000000028              vtable for Execute_sql_statement
00000000005b08ca  w    F .text	000000000000000b              I_P_List_null_counter::I_P_List_null_counter()
0000000000747e61 g     F .text	0000000000000227              readfrm(char const*, unsigned char**, unsigned long*)
00000000007dc196  w    F .text	0000000000000058              Item_func_is_free_lock::~Item_func_is_free_lock()
00000000005d1948  w    F .text	000000000000001b              I_List<Item_change_record>::empty()
0000000000766bee  w    F .text	0000000000000011              Field_string::row_pack_length() const
0000000000b998a9 g     F .text	000000000000006a              decimal_cmp
00000000005e873e  w    F .text	0000000000000045              String::String(unsigned int)
000000000059aed4  w    F .text	000000000000001d              List_iterator<LEX_COLUMN>::operator++(int)
00000000010b1020  w    O .data.rel.ro	00000000000003c0              vtable for Item_udf_sum
00000000007ca5be g     F .text	000000000000012d              Item_func_pow::val_real()
00000000007ac77a g     F .text	00000000000000a8              Item_func_nop_all::neg_transformer(THD*)
0000000000607136  w    F .text	000000000000000b              Lex_input_stream::Lex_input_stream()
00000000005cf10c  w    F .text	000000000000001b              List<Item_func_set_user_var>::~List()
00000000006f09ec  w    F .text	000000000000001b              Binlog_storage_delegate::Binlog_storage_delegate()
000000000087ede9 g     F .text	0000000000000057              sp_map_item_type(enum_field_types)
0000000000000000       F *UND*	0000000000000000              malloc@@GLIBC_2.2.5
000000000086bd86 g     F .text	00000000000000c5              QUICK_ROR_UNION_SELECT::add_keys_and_lengths(String*, String*)
000000000076726e  w    F .text	000000000000000f              Field_enum::cmp_type() const
000000000065a79e  w    F .text	0000000000000015              st_select_lex::agg_func_used() const
0000000000817e6a  w    F .text	000000000000002b              Item_func_from_days::~Item_func_from_days()
0000000000000000       F *UND*	0000000000000000              vfprintf@@GLIBC_2.2.5
00000000007d0ad0 g     F .text	000000000000010a              Item_func_udf_decimal::val_str(String*)
000000000088677a g     F .text	000000000000005f              sp_instr_jump::print(String*)
000000000077bd84  w    F .text	0000000000000013              handler::get_default_no_partitions(st_ha_create_information*)
0000000001099308  w    O .data.rel.ro	0000000000000398              vtable for Item_decimal_typecast
0000000000799a1a  w    F .text	0000000000000011              Item_type_holder::get_geometry_type() const
00000000007c07dc  w    F .text	000000000000002d              Create_func_log10::Create_func_log10()
000000000077ba1c  w    F .text	0000000000000013              handler::index_prev(unsigned char*)
0000000000816df0  w    F .text	0000000000000028              Item_datetime_typecast::val_real()
00000000012ccba0 g     O .data	00000000000000b0              my_charset_utf16_hungarian_uca_ci
00000000005d7426  w    F .text	0000000000000027              SQL_I_List<TABLE_LIST>::SQL_I_List()
00000000008c0c46  w    F .text	00000000000002c7              Item_nodeset_func::val_str(String*)
0000000001217a40 g     O .data	0000000000000200              to_uni_dec8_bin
000000000065b8ec  w    F .text	0000000000000046              store_key_item::~store_key_item()
00000000006bb877 g     F .text	0000000000000059              sql_strdup(char const*)
00000000005af456  w    F .text	000000000000005c              TABLE_LIST::is_table_ref_id_equal(TABLE_SHARE*) const
0000000000b7024c g     F .text	000000000000000b              ha_partition::init_table_handle_for_HANDLER()
00000000005afd52  w    F .text	0000000000000040              Item_func_eq::Item_func_eq(Item*, Item*)
000000000083b3ba g     F .text	0000000000000170              Rotate_log_event::Rotate_log_event(char const*, unsigned int, unsigned long long, unsigned int)
000000000088cf32  w    F .text	000000000000001b              Sql_condition_info::Sql_condition_info()
00000000007393aa  w    F .text	000000000000013e              Item_func_case::Item_func_case(List<Item>&, Item*, Item*)
00000000007dd92e  w    F .text	000000000000002b              Item_func_abs::~Item_func_abs()
0000000000908230  w    F .text	0000000000000046              reset_file_stat(PFS_file_stat*)
00000000007c1ba2  w    F .text	0000000000000026              Create_func_sha::~Create_func_sha()
00000000013877d0 g     O .bss	0000000000000008              tc_log_dummy
00000000007f34b4  w    F .text	0000000000000058              Item_func_soundex::~Item_func_soundex()
0000000000855b4e g     F .text	00000000000000b0              my_TIME_to_str
0000000000815b92  w    F .text	0000000000000026              Item_func_minute::fix_length_and_dec()
00000000007aa598 g     F .text	0000000000000070              Item_func_isnotnull::val_int()
0000000000b84dab g     F .text	0000000000000698              my_strntoull10rnd_8bit
0000000000764d64  w    F .text	000000000000004c              Field::pack_int64(unsigned char*, unsigned char const*, bool)
00000000007da958  w    F .text	000000000000000f              Item_func_neg::functype() const
0000000000871f1c  w    F .text	000000000000000f              QUICK_RANGE_SELECT::get_type()
0000000000659604  w    F .text	000000000000003e              Item_null_result::Item_null_result()
000000000138cc50 g     O .bss	0000000000000008              events_waits_history_per_thread
000000000067a400 g     F .text	0000000000000050              String::replace(unsigned int, unsigned int, String const&)
00000000006aa42b g     F .text	000000000000010b              find_type(st_typelib const*, char const*, unsigned int, bool)
0000000000b766e9 g     F .text	0000000000000af4              DbugParse
00000000006bb834 g     F .text	0000000000000043              sql_calloc(unsigned long)
000000000065be54  w    F .text	000000000000004d              COND_CMP::COND_CMP(Item*, Item_func*)
000000000060561c g     F .text	00000000000000bd              delete_precheck(THD*, TABLE_LIST*)
00000000007bb8d0  w    F .text	000000000000005e              Item_func_encrypt::Item_func_encrypt(Item*, Item*)
0000000000766e90  w    F .text	000000000000000f              Field_blob::key_length() const
0000000000845c76 g     F .text	0000000000000024              is_duplicate_key_error(int)
00000000012cc960 g     O .data	00000000000000b0              my_charset_utf16_roman_uca_ci
00000000005673ea  w    F .text	0000000000000046              Item_int::~Item_int()
00000000006b8f72 g     F .text	0000000000000071              Field_iterator_table_ref::grant()
00000000005d0bf6  w    F .text	0000000000000026              List_iterator<Alter_column>::List_iterator(List<Alter_column>&)
00000000005c0bc3 g     F .text	000000000000001d              thd_store_globals(THD*)
00000000005cf9b0  w    F .text	000000000000004c              THD::really_abort_on_warning()
00000000007bada8  w    F .text	0000000000000038              Item_func_udf_decimal::Item_func_udf_decimal(st_udf_func*)
00000000006baa56  w    F .text	000000000000001d              Object_creation_ctx::Object_creation_ctx()
000000000082d6a2  w    F .text	0000000000000042              Mutex_sentry::Mutex_sentry(st_mysql_mutex*)
00000000005f19cc  w    F .text	000000000000001b              List<st_mysql_lex_string>::List()
00000000013708d8 g     O .bss	0000000000000004              key_file_partition
00000000007e2140  w    F .text	0000000000000046              Item_func_isclosed::~Item_func_isclosed()
00000000008a9076  w    F .text	000000000000001b              List<XML_TAG>::~List()
000000000089b414 g     F .text	000000000000002b              Server_side_cursor::~Server_side_cursor()
0000000000752fe4 g     F .text	0000000000000480              Field_timestamp::val_str(String*, String*)
00000000009895b2 g     F .text	000000000000003d              heap_indexes_are_disabled
00000000007c2bc8  w    F .text	0000000000000041              Create_func_version::~Create_func_version()
00000000008ea72c g     F .text	0000000000000078              bitmap_test_and_set
00000000007c142a  w    F .text	000000000000002d              Create_func_pointn::Create_func_pointn()
000000000060644c g     F .text	0000000000000070              merge_charset_and_collation(charset_info_st*, charset_info_st*)
00000000007d5366 g     F .text	000000000000004a              Item_user_var_as_out_param::set_null_value(charset_info_st*)
00000000010b5700  w    O .data.rel.ro	0000000000000398              vtable for Item_func_last_day
00000000009827a0  w    F .text	0000000000000046              ha_heap::~ha_heap()
000000000079821e  w    F .text	0000000000000046              Item_ref::~Item_ref()
00000000007993e8  w    F .text	000000000000001e              Item_cache::clear()
00000000007bba72  w    F .text	0000000000000052              Item_func_format::Item_func_format(Item*, Item*)
00000000007fc0f8  w    F .text	000000000000006d              Item_in_optimizer::Item_in_optimizer(Item*, Item_in_subselect*)
0000000000784ccc g     F .text	000000000000008d              Item_decimal::Item_decimal(char const*, my_decimal const*, unsigned int, unsigned int)
000000000077f7d4 g     F .text	0000000000000146              Item_field::collect_item_field_processor(unsigned char*)
0000000001087960  w    O .data.rel.ro	0000000000000030              vtable for Create_func_greatest
00000000012af280 g     O .data	0000000000000600              page001data
00000000007c1080  w    F .text	0000000000000026              Create_func_numpoints::~Create_func_numpoints()
0000000000809e9e  w    F .text	000000000000000f              Item_sum_udf_str::result_type() const
00000000006984da  w    F .text	0000000000000044              Trigger_creation_ctx::Trigger_creation_ctx(THD*)
00000000007e2f66 g     F .text	00000000000000dc              Item_row::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
0000000001088290  w    O .data.rel.ro	0000000000000030              vtable for Create_func_ceiling
0000000000775ba2 g     F .text	00000000000000a8              handler::column_bitmaps_signal()
000000000079ab44  w    F .text	0000000000000046              Item_ident_for_show::~Item_ident_for_show()
000000000074dc1e g     F .text	00000000000000a8              Field_tiny::val_int()
00000000007989a4  w    F .text	000000000000000f              Item_copy::type() const
0000000001395500 g     O .bss	0000000000000070              THR_LOCK_isam
00000000007659c2  w    F .text	000000000000007a              Field_longlong::Field_longlong(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, bool, bool)
00000000007bd18c  w    F .text	0000000000000041              Create_func_arg0::~Create_func_arg0()
000000000090d708 g     F .text	0000000000000028              table_events_waits_history::create()
0000000000619ce4 g     F .text	00000000000002a4              Prepared_statement::reprepare()
0000000000931100 g     F .text	0000000000000159              write_data_suffix
000000000109acb0  w    O .data.rel.ro	0000000000000398              vtable for Item_int_func
00000000006e9da4 g     F .text	0000000000000ca5              PROFILING::fill_statistics_info(THD*, TABLE_LIST*, Item*)
000000000137076c g     O .bss	0000000000000004              key_LOCK_crypt
0000000000794bd0 g     F .text	0000000000000146              Item_type_holder::Item_type_holder(THD*, Item*)
000000000090f38a  w    F .text	0000000000000036              pos_events_waits_summary_by_thread_by_event_name::pos_events_waits_summary_by_thread_by_event_name()
000000000080f1c4 g     F .text	00000000000000ca              Item_date::val_str(String*)
000000000073b0e8  w    F .text	0000000000000058              Item_insert_value::Item_insert_value(Name_resolution_context*, Item*)
00000000005da0a9 g     F .text	000000000000091a              mysql_ha_open(THD*, TABLE_LIST*, bool)
000000000138c988 g     O .bss	0000000000000001              my_use_large_pages
000000000080964a  w    F .text	0000000000000040              Item_sum_max::Item_sum_max(THD*, Item_sum_max*)
0000000000b5b8ec g     F .text	0000000000000250              ha_tina::open(char const*, int, unsigned int)
000000000077ed2c g     F .text	0000000000000092              Item::save_str_value_in_field(Field*, String*)
0000000000876774 g     F .text	0000000000000169              net_field_length_ll
0000000000816080  w    F .text	0000000000000026              Item_func_time_to_sec::fix_length_and_dec()
00000000005bd850 g     F .text	0000000000000195              Query_cache::tables_dump()
00000000012079e0 g     O .data	0000000000000100              to_lower_cp850_general_ci
00000000007bf51c  w    F .text	000000000000002d              Create_func_from_unixtime::Create_func_from_unixtime()
00000000006c762c g     F .text	00000000000000d2              Event_basic::Event_basic()
0000000000567278  w    F .text	000000000000000f              Item_int::type() const
00000000007afdae  w    F .text	0000000000000019              Item_func_isnull::compare_collation()
00000000007a7ac2 g     F .text	000000000000007f              cmp_item_datetime::cmp(Item*)
0000000000698864  w    F .text	0000000000000041              Handle_old_incorrect_trigger_table_hook::~Handle_old_incorrect_trigger_table_hook()
00000000005d0dd4  w    F .text	000000000000002d              Item_change_record::Item_change_record()
000000000107bb78  w    O .data.rel.ro	0000000000000358              vtable for Item_name_const
00000000006f22fc g     F .text	0000000000000149              MDL_wait::timed_wait(THD*, timespec*, bool, char const*)
00000000007f60c0 g     F .text	00000000000000ae              Item_singlerow_subselect::val_decimal(my_decimal*)
000000000136f6c0 g     O .bss	0000000000000070              LOCK_active_mi
000000000079a780  w    F .text	000000000000002b              Item_ref_null_helper::~Item_ref_null_helper()
00000000005d5efa g     F .text	00000000000005d6              mysql_change_db(THD*, st_mysql_lex_string const*, bool)
000000000057a72e  w    F .text	000000000000002d              Relay_log_info::get_flag(Relay_log_info::enum_state_flag)
0000000001069108  w    O .data.rel.ro	0000000000000038              vtable for set_var_password
000000000079578a g     F .text	000000000000022b              Item_type_holder::make_field_by_type(TABLE*)
0000000000987922 g     F .text	00000000000001e2              heap_scan
00000000007edbd4 g     F .text	0000000000000412              Item_func_lpad::val_str(String*)
00000000007dbada  w    F .text	0000000000000055              Item_func_sp::val_decimal(my_decimal*)
00000000007c0d22  w    F .text	000000000000002d              Create_func_monthname::Create_func_monthname()
00000000005aedb4  w    F .text	0000000000000027              Bitmap<64u>::merge(Bitmap<64u>&)
0000000000837898 g     F .text	000000000000006d              Start_log_event_v3::Start_log_event_v3()
0000000001086cd0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_startpoint
0000000000798bf8  w    F .text	0000000000000040              Item_copy_uint::Item_copy_uint(Item*)
0000000000767028  w    F .text	0000000000000058              Field_blob::~Field_blob()
00000000005ce682  w    F .text	000000000000002d              Protocol_text::Protocol_text()
00000000007d9fa2  w    F .text	0000000000000050              Item_result_field::Item_result_field(THD*, Item_result_field*)
0000000000598364  w    F .text	000000000000003a              base_list_iterator::base_list_iterator()
00000000007c8790 g     F .text	0000000000000205              Item_func_div::decimal_op(my_decimal*)
00000000006f0b22  w    F .text	000000000000001b              List_iterator<Observer_info>::remove()
000000000073c51a  w    F .text	000000000000001a              sp_pcontext::current_var_count()
000000000065c28a  w    F .text	0000000000000026              List_iterator<Item_func_match>::after(Item_func_match*)
00000000008bb602  w    F .text	0000000000000066              log2_n_fact(double)
00000000007c63dc g     F .text	0000000000000255              Item_func_numhybrid::val_int()
000000000081820c  w    F .text	000000000000002b              Item_func_minute::~Item_func_minute()
00000000007e13a6  w    F .text	00000000000000da              Geometry::as_wkt(String*, char const**)
00000000008086ea  w    F .text	0000000000000015              Item_sum::has_force_copy_fields() const
000000000065bee4  w    F .text	000000000000001b              I_List<COND_CMP>::empty()
000000000077c02c  w    F .text	000000000000000f              handler::rnd_end()
00000000008494be  w    F .text	0000000000000016              Execute_load_log_event::is_valid() const
000000000079a986  w    F .text	000000000000008e              Item_param::~Item_param()
00000000005e9ecf g     F .text	0000000000000118              lex_init()
000000000073cb7e  w    F .text	000000000000004c              SQL_I_List<Item_trigger_field>::link_in_list(Item_trigger_field*, Item_trigger_field**)
0000000000738e1e  w    F .text	000000000000003f              Item_func_istrue::Item_func_istrue(Item*)
00000000005af0de  w    F .text	0000000000000033              TABLE_SHARE::db_type() const
00000000010a2a40  w    O .data.rel.ro	0000000000000398              vtable for Item_func_inet_ntoa
000000000081670c  w    F .text	000000000000003e              Item_func_from_days::check_valid_arguments_processor(unsigned char*)
000000000136cbe3 g     O .bss	0000000000000001              opt_slow_log
00000000005afa32  w    F .text	0000000000000035              Item::fix_char_length(unsigned int)
000000000079ba7c  w    F .text	0000000000000026              List<Cached_item>::concat(List<Cached_item>*)
00000000006d76a8 g     F .text	000000000000014a              injector::transaction::write_row(unsigned int, injector::transaction::table, st_bitmap const*, unsigned long, unsigned char*)
0000000001376d60 g     O .bss	0000000000000004              have_csv
0000000000775504 g     F .text	0000000000000068              handler::adjust_next_insert_id_after_explicit_value(unsigned long long)
00000000006000c7 g     F .text	0000000000000806              check_access(THD*, unsigned long, char const*, unsigned long*, st_grant_internal_info*, bool, bool)
0000000000739840  w    F .text	0000000000000035              Item_str_func::Item_str_func()
00000000005f0c00  w    F .text	00000000000000a8              st_select_lex_unit::st_select_lex_unit()
00000000005f1e8a  w    F .text	0000000000000027              SQL_I_List<Item_trigger_field>::SQL_I_List()
0000000000000000       F *UND*	0000000000000000              fesetround@@GLIBC_2.2.5
000000000073912e  w    F .text	000000000000005b              Item_func_opt_neg::Item_func_opt_neg(Item*, Item*, Item*)
000000000059afdc  w    F .text	000000000000001b              List_iterator<st_lex_user>::List_iterator()
000000000076653e  w    F .text	000000000000000f              Field_newdate::binary() const
00000000007d5514 g     F .text	00000000000000c8              Item_func_get_system_var::Item_func_get_system_var(sys_var*, enum_var_type, st_mysql_lex_string*, char const*, unsigned long)
0000000000739840  w    F .text	0000000000000035              Item_str_func::Item_str_func()
000000000078d19e g     F .text	0000000000000159              Item_int_with_ref::clone_item()
00000000008cbaf2  w    F .text	0000000000000046              Alter_table_statement::~Alter_table_statement()
0000000000798350  w    F .text	000000000000000f              Item_direct_view_ref::ref_type()
000000000073c266  w    F .text	000000000000006b              sp_instr_cpush::sp_instr_cpush(unsigned int, sp_pcontext*, LEX*, unsigned int)
00000000007fca54  w    F .text	0000000000000046              Item_allany_subselect::~Item_allany_subselect()
00000000005e8e52  w    F .text	000000000000033c              Delayed_insert::Delayed_insert(st_select_lex*)
00000000007c1ee4  w    F .text	0000000000000041              Create_func_space::~Create_func_space()
00000000007d51fa g     F .text	000000000000016c              Item_user_var_as_out_param::fix_fields(THD*, Item**)
00000000007db5b8  w    F .text	000000000000001e              Item_master_pos_wait::fix_length_and_dec()
00000000006f047a g     F .text	0000000000000032              register_binlog_storage_observer
000000000120c460 g     O .data	0000000000000100              to_upper_koi8u_general_ci
0000000000696e1a g     F .text	00000000000004a7              Table_triggers_list::change_table_name(THD*, char const*, char const*, char const*, char const*, char const*)
000000000055c1e0  w    F .text	0000000000000056              NAMED_ILINK::~NAMED_ILINK()
0000000001370b40 g     O .bss	0000000000000990              zero_key_cache
00000000007f31ae  w    F .text	000000000000006a              Item_func_rpad::~Item_func_rpad()
0000000000975c00 g     F .text	00000000000006b7              rtree_split_page
0000000000783120 g     F .text	00000000000000f7              Item_field::Item_field(Name_resolution_context*, char const*, char const*, char const*)
00000000007ba8c6  w    F .text	000000000000004a              Item_func_char_length::Item_func_char_length(Item*)
0000000000559bfe  w    F .text	0000000000000070              List<Buffered_log>::delete_elements()
0000000000907482 g     F .text	00000000000000b2              sanitize_thread(PFS_thread*)
0000000000905aea  w    F .text	000000000000000f              ha_perfschema::table_cache_type()
00000000012b8e80 g     O .data	0000000000000600              page01Fdata
0000000000799876  w    F .text	0000000000000016              Item_cache_row::keep_array()
000000000064717c g     F .text	0000000000000161              sub_select(JOIN*, st_join_table*, bool)
000000000121c200 g     O .data	0000000000000100              to_upper_geostd8_bin
00000000006bb684  w    F .text	0000000000000052              View_creation_ctx::~View_creation_ctx()
0000000000b968c1 g     F .text	000000000000002d              ulonglong2decimal
0000000000000000       F *UND*	0000000000000000              fmod@@GLIBC_2.2.5
00000000005c8bfe g     F .text	00000000000000cb              THD::restore_active_arena(Query_arena*, Query_arena*)
00000000005cfdf8  w    F .text	000000000000001b              List<my_var>::~List()
000000000082d422  w    F .text	00000000000000be              User_var_log_event::User_var_log_event(THD*, char*, unsigned int, char*, unsigned long, Item_result, unsigned int, unsigned char)
00000000006caf22  w    F .text	0000000000000051              Event_creation_ctx::Event_creation_ctx(charset_info_st*, charset_info_st*, charset_info_st*)
00000000013708d4 g     O .bss	0000000000000004              key_file_misc
000000000073ca04  w    F .text	0000000000000045              Signal_statement::Signal_statement(LEX*, sp_cond_type const*, Set_signal_information const&)
00000000007087da  w    F .text	000000000000003d              PolyLock_rwlock::PolyLock_rwlock(st_mysql_rwlock*)
00000000005f11c4  w    F .text	000000000000006f              Lex_input_stream::yySkipn(int)
00000000008315de g     F .text	000000000000006b              str_to_hex(char*, char const*, unsigned int)
00000000007d4ffe g     F .text	00000000000000fc              Item_func_get_user_var::eq(Item const*, bool) const
00000000006f2b84 g     F .text	0000000000000063              MDL_ticket::has_stronger_or_equal_type(enum_mdl_type) const
00000000005edda0 g     F .text	00000000000001f5              st_select_lex::init_select()
00000000012c6a80 g     O .data	0000000000000600              page0FEdata
00000000005c1db8 g     F .text	0000000000000052              THD::push_internal_handler(Internal_error_handler*)
00000000005ea140 g     F .text	0000000000000171              Lex_input_stream::reset(char*, unsigned int)
000000000083bdee g     F .text	000000000000003a              Intvar_log_event::get_var_type_name()
00000000005d98da g     F .text	0000000000000251              convert_error_message(char*, unsigned int, charset_info_st*, char const*, unsigned int, charset_info_st*, unsigned int*)
000000000088988c  w    F .text	0000000000000056              sp_instr_cfetch::~sp_instr_cfetch()
00000000005dc91c  w    F .text	0000000000000033              Name_resolution_context::resolve_in_table_list_only(TABLE_LIST*)
00000000007a7bd0 g     F .text	000000000000007d              Item_func_in::nulls_in_row()
00000000012c3880 g     O .data	0000000000000600              page0A4data
000000000073c1d2  w    F .text	000000000000004a              sp_instr_hpop::sp_instr_hpop(unsigned int, sp_pcontext*, unsigned int)
00000000005b13aa  w    F .text	0000000000000046              Field_iterator_table::~Field_iterator_table()
00000000008494f6  w    F .text	0000000000000046              Execute_load_query_log_event::~Execute_load_query_log_event()
00000000007bc080  w    F .text	000000000000004a              Item_func_quote::Item_func_quote(Item*)
00000000007391fe  w    F .text	00000000000000bc              Item_func_between::Item_func_between(Item*, Item*, Item*)
0000000000678b02  w    F .text	0000000000000026              List_iterator<partition_element>::List_iterator(List<partition_element>&)
00000000008913e8 g     F .text	0000000000000194              Gis_multi_polygon::init_from_wkt(Gis_read_stream*, String*)
00000000008d6613 g     F .text	00000000000000d3              fn_ext
00000000009ac506  w    F .text	000000000000002b              ha_innobase_add_index::~ha_innobase_add_index()
00000000008493d2  w    F .text	0000000000000012              Append_block_log_event::get_db()
0000000000816170  w    F .text	000000000000002a              Item_date::tmp_table_field(TABLE*)
00000000006d250c g     F .text	00000000000002a6              partition_info::add_column_list_value(THD*, Item*)
00000000008868ec g     F .text	0000000000000066              sp_instr_jump::opt_move(unsigned int, List<sp_instr>*)
000000000060399c g     F .text	0000000000000187              st_select_lex::end_nested_join(THD*)
00000000008172ba  w    F .text	0000000000000046              Item_func_str_to_date::~Item_func_str_to_date()
0000000000760cbc g     F .text	000000000000009f              Field_bit_as_char::Field_bit_as_char(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*)
00000000007642ac  w    F .text	0000000000000067              Field::pack_length_from_metadata(unsigned int)
00000000005c352c g     F .text	00000000000000e7              add_diff_to_status(system_status_var*, system_status_var*, system_status_var*)
00000000007b61ac g     F .text	0000000000000050              Create_func_sha::create(THD*, Item*)
000000000084e522 g     F .text	00000000000005c7              Old_rows_log_event::Old_rows_log_event(char const*, unsigned int, Log_event_type, Format_description_log_event const*)
0000000000ba7f84 g     F .text	000000000000004e              sslGetErrString
000000000088dd70 g     F .text	00000000000000bd              Gis_point::init_from_wkb(char const*, unsigned int, Geometry::wkbByteOrder, String*)
00000000012c2880 g     O .data	0000000000000400              page0A0data
00000000006bb605  w    F .text	0000000000000016              I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>::prev_ptr(Wait_for_flush*)
000000000062c142 g     F .text	0000000000000092              JOIN::restore_tmp()
000000000081714c  w    F .text	000000000000001b              Item_func_timestamp_diff::fix_length_and_dec()
00000000007ac822 g     F .text	00000000000000a8              Item_func_not_all::neg_transformer(THD*)
00000000005bfc4e  w    F .text	0000000000000093              Query_cache::get_min_first_result_data_size()
00000000007b6372 g     F .text	0000000000000050              Create_func_soundex::create(THD*, Item*)
000000000079b8fc  w    F .text	000000000000008a              Cached_item_field::Cached_item_field(Item_field*)
00000000010a8f10  w    O .data.rel.ro	0000000000000398              vtable for Item_func_password
00000000005bf49e  w    F .text	0000000000000024              Query_cache_table::data()
00000000007f3538  w    F .text	0000000000000046              Item_func_current_user::~Item_func_current_user()
000000000088e9ba g     F .text	00000000000000da              Gis_line_string::point_n(unsigned int, String*) const
00000000006186ba g     F .text	00000000000001f6              Execute_sql_statement::execute_server_code(THD*)
00000000007c541a g     F .text	00000000000000de              Item_func::count_only_length()
00000000005598c2  w    F .text	0000000000000026              I_List<i_string>::push_back(i_string*)
00000000007de56e g     F .text	0000000000000044              Item_func_as_wkt::fix_length_and_dec()
00000000007aff52  w    F .text	0000000000000011              Item_func_like::func_name() const
0000000000754102 g     F .text	0000000000000283              Field_time::val_str(String*, String*)
00000000005d0276  w    F .text	0000000000000025              List_iterator<Key>::replace(List<Key>&)
0000000000871f2c  w    F .text	000000000000005b              QUICK_RANGE_SELECT_GEOM::QUICK_RANGE_SELECT_GEOM(THD*, TABLE*, unsigned int, bool, st_mem_root*)
000000000109fbc8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_geometry_type
00000000006df906  w    F .text	0000000000000035              TC_LOG::~TC_LOG()
0000000000907df4 g     F .text	00000000000001a5              create_table(PFS_table_share*, void const*)
00000000010b9440  w    O .data.rel.ro	0000000000000398              vtable for Item_func_from_unixtime
00000000005c9212 g     F .text	00000000000000c8              Statement_map::~Statement_map()
00000000005d0e02  w    F .text	000000000000001b              I_List<Statement>::~I_List()
000000000138cfe0 g     O .bss	00000000000000a0              pfs_timer_info
000000000070e5e4  w    F .text	0000000000000041              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::~Sys_var_unsigned()
00000000005abf45 g     F .text	00000000000000c0              make_leaves_list(TABLE_LIST**, TABLE_LIST*)
00000000007a231a g     F .text	00000000000003b6              Item_func_between::fix_length_and_dec()
00000000008e2eb0 g     F .text	0000000000000136              flush_key_blocks
000000000070ca2a  w    F .text	000000000000004f              Sys_var_struct::global_value_ptr(THD*, st_mysql_lex_string*)
000000000120b720 g     O .data	0000000000000100              to_lower_latin7_estonian_cs
000000000065ae3a  w    F .text	00000000000003c0              JOIN::init(THD*, List<Item>&, unsigned long long, select_result*)
0000000000866a8b g     F .text	000000000000029c              rb_delete_fixup(SEL_ARG*, SEL_ARG*, SEL_ARG*)
0000000000000000       O *UND*	0000000000000000              stderr@@GLIBC_2.2.5
00000000010ca548  w    O .data.rel.ro	0000000000000048              vtable for table_setup_instruments
00000000005ca2d7 g     F .text	000000000000001a              thd_sqlcom_can_generate_row_events
0000000000602ea3 g     F .text	0000000000000027              store_position_for_column(char const*)
00000000008893b6  w    F .text	0000000000000056              sp_instr_freturn::~sp_instr_freturn()
00000000007785c3 g     F .text	00000000000001e4              ha_check_if_supported_system_table(handlerton*, char const*, char const*)
00000000006eabe4  w    F .text	0000000000000032              Queue<PROF_MEASUREMENT>::Queue()
00000000007bd5e8  w    F .text	0000000000000026              Create_func_addtime::~Create_func_addtime()
00000000007c6632 g     F .text	00000000000001d4              Item_func_numhybrid::val_decimal(my_decimal*)
0000000000b6da0a g     F .text	0000000000000102              ha_partition::scan_time()
00000000010ef1a0 g     O .data	0000000000000010              PERFORMANCE_SCHEMA_str
0000000000815d3a  w    F .text	0000000000000013              Item_func_yearweek::check_partition_func_processor(unsigned char*)
000000000065a34e  w    F .text	000000000000001b              Item_equal_iterator::rewind()
00000000012bfa80 g     O .data	0000000000000600              page031data
0000000001372f20 g     O .bss	0000000000000200              opt_plugin_dir
000000000056b2f8  w    F .text	000000000000002b              PolyLock_mutex::unlock()
0000000001087de0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_dimension
000000000105ee20 g     O .data.rel.ro	00000000000001d0              Diag_condition_item_names
000000000056345a g     F .text	00000000000000f9              Protocol_text::store_long(long long)
0000000001387f00 g     O .bss	0000000000000008              charsets_dir
00000000008731a1  w    F .text	0000000000000026              imerge_list_and_list(List<SEL_IMERGE>*, List<SEL_IMERGE>*)
0000000000691ae9 g     F .text	000000000000040c              print_plan(JOIN*, unsigned int, double, double, double, char const*)
00000000008c12a8  w    F .text	000000000000004e              Item_nodeset_func_childbyname::Item_nodeset_func_childbyname(Item*, char const*, unsigned int, String*)
00000000005bc534 g     F .text	00000000000000ad              Query_cache::relink(Query_cache_block*, Query_cache_block*, Query_cache_block*, Query_cache_block*, Query_cache_block*, Query_cache_block*)
00000000006a3192 g     F .text	000000000000029f              multi_update::~multi_update()
00000000008c5be8 g     F .text	00000000000000e7              Event_queue::Event_queue()
00000000008c07e2  w    F .text	0000000000000069              Item_func_xml_update::Item_func_xml_update(Item*, Item*, Item*)
0000000000911054  w    F .text	0000000000000026              table_performance_timers::~table_performance_timers()
000000000081b940 g     F .text	0000000000000091              LOGGER::is_log_table_enabled(unsigned int)
00000000007bdc80  w    F .text	000000000000002d              Create_func_ceiling::Create_func_ceiling()
000000000087e8ec  w    F .text	000000000000002d              Lock_db_routines_error_handler::Lock_db_routines_error_handler()
00000000010ef6b0 g     O .data	0000000000000010              table_file_summary_by_instance::m_field_def
000000000081764a  w    F .text	0000000000000046              Item_date_typecast::~Item_date_typecast()
00000000007ae52e  w    F .text	000000000000002b              Item_bool_func2::~Item_bool_func2()
00000000007e23d2  w    F .text	000000000000002b              Item_func_point::~Item_func_point()
000000000079790c  w    F .text	0000000000000087              Item_ref::eq(Item const*, bool) const
00000000007bbcd2  w    F .text	000000000000007f              Item_func_like_range::Item_func_like_range(Item*, Item*, bool)
0000000000844ae0 g     F .text	000000000000002b              Table_map_log_event::~Table_map_log_event()
000000000087236c  w    F .text	000000000000008d              SEL_ARG::is_same(SEL_ARG const*) const
00000000007815ea g     F .text	0000000000000075              Item_case_expr::this_item_addr(THD*, Item**)
00000000005d70bb g     F .text	00000000000000b8              check_db_dir_existence(char const*)
000000000098c76a g     F .text	0000000000000197              ha_myisammrg::clone(char const*, st_mem_root*)
00000000007b4968 g     F .text	000000000000007e              Create_func_is_used_lock::create(THD*, Item*)
00000000005c9bbc g     F .text	0000000000000012              Security_context::get_ip()
0000000000564e72  w    F .text	0000000000000012              String::charset() const
00000000013754e0 g     O .bss	0000000000000060              my_locale_ar_KW
00000000007a06ce g     F .text	0000000000000037              Item_func_truth::val_int()
0000000000848d72  w    F .text	0000000000000013              Query_log_event::write_post_header_for_derived(st_io_cache*)
00000000007b03e2  w    F .text	0000000000000015              Item_cache::field()
00000000007b033e  w    F .text	0000000000000011              Item_cond_xor::func_name() const
0000000000765dd8  w    F .text	000000000000000f              Field_null::type() const
00000000007bfce8  w    F .text	0000000000000041              Create_func_interiorringn::~Create_func_interiorringn()
000000000083ecbe g     F .text	00000000000001dc              Create_file_log_event::pack_info(Protocol*)
000000000138cdc0 g     O .bss	0000000000000008              cond_class_max
00000000006f4408 g     F .text	00000000000000c6              MDL_context::find_deadlock()
000000000065cb78  w    F .text	000000000000002b              Item_func_rollup_const::~Item_func_rollup_const()
000000000079976a  w    F .text	0000000000000025              Item_cache_row::val_real()
0000000000b66be6 g     F .text	000000000000018a              ha_partition::close()
0000000000855af3 g     F .text	000000000000005b              my_datetime_to_str
000000000087739f g     F .text	0000000000000184              init_read_record_idx(READ_RECORD*, THD*, TABLE*, bool, unsigned int, bool)
000000000077bc1e  w    F .text	000000000000004b              handler::set_next_insert_id(unsigned long long)
000000000058a420 g     F .text	00000000000001dc              check_column_grant_in_table_ref(THD*, TABLE_LIST*, char const*, unsigned int)
000000000107a098  w    O .data.rel.ro	0000000000000358              vtable for Item_string
00000000013708c0 g     O .bss	0000000000000004              key_file_load
00000000007c11ac  w    F .text	0000000000000026              Create_func_ord::~Create_func_ord()
00000000007b68ee g     F .text	0000000000000050              Create_func_to_days::create(THD*, Item*)
0000000000893ac2  w    F .text	0000000000000041              Gis_multi_line_string::~Gis_multi_line_string()
00000000007c0d50  w    F .text	0000000000000041              Create_func_monthname::~Create_func_monthname()
00000000013766e0 g     O .bss	0000000000000060              my_locale_el_GR
00000000007d9764 g     F .text	00000000000000e5              Item_func_sp::result_type() const
00000000007defcc g     F .text	0000000000000305              Item_func_spatial_decomp_n::val_str(String*)
0000000000598dc2  w    F .text	000000000000001b              List<st_lex_user>::~List()
000000000070b95e  w    F .text	0000000000000014              Sys_var_plugin::check_update_type(Item_result)
00000000007f2c30  w    F .text	000000000000002b              Item_func_inet_ntoa::~Item_func_inet_ntoa()
0000000000765f42  w    F .text	000000000000000f              Field_timestamp::type() const
0000000000738c72  w    F .text	000000000000009d              Arg_comparator::Arg_comparator()
0000000000817f08  w    F .text	0000000000000058              Item_func_unix_timestamp::~Item_func_unix_timestamp()
00000000005c2927 g     F .text	0000000000000027              thd_alloc
000000000081127a g     F .text	0000000000000109              Item_date_add_interval::print(String*, enum_query_type)
000000000091cdde g     F .text	00000000000002de              ha_myisam::repair(THD*, st_ha_check_opt*)
00000000007afb8c  w    F .text	000000000000000f              Item_func_in::is_bool_func()
0000000000b5e278 g     F .text	00000000000000a9              Transparent_file::init_buff(int)
00000000008ec905 g     F .text	0000000000000151              my_printf_warning
0000000000797b6e  w    F .text	000000000000003b              Item_ref::not_null_tables() const
000000000121b6c0 g     O .data	0000000000000100              to_upper_swe7_bin
00000000007bd2b8  w    F .text	0000000000000041              Create_func_arg2::~Create_func_arg2()
000000000065b7d8  w    F .text	0000000000000114              store_key_item::copy_inner()
000000000098e4c8 g     F .text	0000000000000019              ha_myisammrg::store_lock(THD*, st_thr_lock_data**, thr_lock_type)
00000000007ae2d0  w    F .text	000000000000000f              Lt_creator::l_op() const
00000000007b9b42  w    F .text	0000000000000137              Item_func::Item_func(Item*, Item*, Item*, Item*, Item*)
000000000084a0d0 g     F .text	0000000000000caf              unpack_row(Relay_log_info const*, TABLE*, unsigned int, unsigned char const*, st_bitmap const*, unsigned char const**, unsigned long*, unsigned char const*)
00000000008a6880 g     F .text	00000000000002f6              READ_INFO::read_fixed_length()
0000000000817a94  w    F .text	0000000000000046              Item_func_sec_to_time::~Item_func_sec_to_time()
000000000078dfd6 g     F .text	0000000000000155              Item_bin_string::Item_bin_string(char const*, unsigned int)
000000000081d5ec g     F .text	0000000000000057              LOGGER::flush_slow_log()
000000000067a88f g     F .text	000000000000008d              stringcmp(String const*, String const*)
000000000098938a g     F .text	000000000000001e              heap_clear_keys
00000000005e37f4 g     F .text	000000000000003f              Delayed_prelocking_strategy::handle_routine(THD*, Query_tables_list*, Sroutine_hash_entry*, sp_head*, bool*)
00000000006b66da g     F .text	00000000000002f5              TABLE_LIST::prep_where(THD*, Item**, bool)
0000000000567544  w    F .text	00000000000000cf              Item_string::Item_string(char const*, char const*, unsigned int, charset_info_st*, Derivation, unsigned int)
0000000000798616  w    F .text	000000000000025e              Item_func_conv_charset::Item_func_conv_charset(Item*, charset_info_st*, bool)
000000000079340e g     F .text	00000000000001e5              Item_cache_datetime::cache_value()
00000000007dc0a0  w    F .text	0000000000000046              Item_func_row_count::~Item_func_row_count()
0000000000000000       F *UND*	0000000000000000              pthread_key_delete@@GLIBC_2.2.5
00000000010bead0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_hour
00000000007a9db0 g     F .text	00000000000000f3              Item_cond::neg_arguments(THD*)
0000000000818128  w    F .text	000000000000002b              Item_func_week::~Item_func_week()
00000000005d0d5c  w    F .text	000000000000003b              Security_context::~Security_context()
0000000000599106  w    F .text	0000000000000035              Prelocking_strategy::~Prelocking_strategy()
00000000007d4d58 g     F .text	00000000000001c8              Item_func_get_user_var::fix_length_and_dec()
00000000006bf6b8 g     F .text	0000000000000157              Time_zone_offset::Time_zone_offset(long)
0000000000675f70 g     F .text	0000000000000185              make_proc_old_format(THD*, st_schema_table*)
00000000006220a5 g     F .text	0000000000001c24              mysql_binlog_send(THD*, char*, unsigned long long, unsigned short)
000000000079691e  w    F .text	0000000000000041              Item::decimal_int_part() const
00000000007b9c7a  w    F .text	000000000000003d              Item_real_func::Item_real_func()
00000000005ad771 g     F .text	0000000000000074              fill_record_n_invoke_before_triggers(THD*, List<Item>&, List<Item>&, bool, Table_triggers_list*, trg_event_type)
000000000089343e  w    F .text	0000000000000013              Geometry::get_x(double*) const
00000000007be15e  w    F .text	0000000000000041              Create_func_contains::~Create_func_contains()
00000000007d1d82 g     F .text	0000000000000042              Item_func_last_insert_id::fix_fields(THD*, Item**)
000000000095cc67 g     F .text	000000000000026b              _mi_search_first
00000000007c0f12  w    F .text	0000000000000041              Create_func_numgeometries::~Create_func_numgeometries()
0000000000847e6e g     F .text	000000000000002b              Update_rows_log_event::~Update_rows_log_event()
00000000007bfde6  w    F .text	000000000000002d              Create_func_is_free_lock::Create_func_is_free_lock()
000000000082cb68  w    F .text	000000000000002a              MYSQL_QUERY_LOG::MYSQL_QUERY_LOG()
00000000007c12d8  w    F .text	0000000000000026              Create_func_period_add::~Create_func_period_add()
00000000005c4d0a g     F .text	00000000000000c4              THD::rollback_item_tree_changes()
000000000079788a  w    F .text	0000000000000046              Item_ident::~Item_ident()
00000000010873c0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_maketime
000000000065c78c  w    F .text	0000000000000025              List_iterator<TABLE_LIST>::replace(List<TABLE_LIST>&)
0000000000793640 g     F .text	0000000000000031              Item_cache_datetime::store(Item*)
00000000007f1322 g     F .text	000000000000044a              Item_func_uuid::val_str(String*)
000000000078fba0 g     F .text	000000000000007d              Item_ref::cleanup()
00000000005f0ade  w    F .text	0000000000000027              Item::val_uint()
0000000000777dfc g     F .text	0000000000000127              handler::get_dynamic_partition_info(PARTITION_STATS*, unsigned int)
000000000095c724 g     F .text	0000000000000543              _mi_search_next
00000000007a5f74 g     F .text	00000000000000d1              Item_func_coalesce::real_op()
00000000007bfbbc  w    F .text	0000000000000041              Create_func_inet_aton::~Create_func_inet_aton()
00000000007994c0  w    F .text	0000000000000044              Item_cache_int::Item_cache_int(enum_field_types)
00000000007c1dfa  w    F .text	0000000000000026              Create_func_sleep::~Create_func_sleep()
000000000121b2a0 g     O .data	0000000000000200              to_uni_cp852_bin
000000000059aef2  w    F .text	0000000000000025              List_iterator<LEX_COLUMN>::replace(LEX_COLUMN*)
00000000007f37f6  w    F .text	0000000000000046              Item_func_rtrim::~Item_func_rtrim()
00000000007fc73c  w    F .text	0000000000000054              select_max_min_finder_subselect::select_max_min_finder_subselect(Item_subselect*, bool)
0000000000b64c7c g     F .text	0000000000000085              ha_partition::clear_handler_file()
00000000013749a0 g     O .bss	0000000000000060              my_locale_mk_MK
00000000008cf82b g     F .text	0000000000000177              get_charsets_dir
00000000005cebc8  w    F .text	000000000000001b              List<char>::~List()
0000000000848398 g     F .text	0000000000000046              Incident_log_event::~Incident_log_event()
00000000005f0b1a  w    F .text	0000000000000056              Index_hint::Index_hint(index_hint_type, unsigned char, char*, unsigned int)
0000000000826bea g     F .text	0000000000000075              MYSQL_BIN_LOG::start_union_events(THD*, long long)
00000000007c20a6  w    F .text	0000000000000041              Create_func_startpoint::~Create_func_startpoint()
00000000005690bc  w    F .text	0000000000000026              I_List_iterator<i_string_pair>::I_List_iterator(I_List<i_string_pair>&)
00000000007b4b76 g     F .text	0000000000000110              Create_func_last_insert_id::create_native(THD*, st_mysql_lex_string, List<Item>*)
000000000136f540 g     O .bss	0000000000000070              LOCK_global_system_variables
0000000000737bdc  w    F .text	0000000000000038              Item_sum_int::Item_sum_int(List<Item>&)
00000000007c1eb6  w    F .text	000000000000002d              Create_func_space::Create_func_space()
00000000007bbbf0  w    F .text	0000000000000045              Item_func_conv::Item_func_conv(Item*, Item*, Item*)
0000000001394cfc g     O .bss	0000000000000004              key_my_thread_var_mutex
00000000005657d6  w    F .text	0000000000000026              List_iterator_fast<Item_param>::List_iterator_fast(List<Item_param>&)
000000000090db64 g     F .text	0000000000000028              table_events_waits_history_long::create()
00000000005eb815 g     F .text	00000000000000da              consume_comment(Lex_input_stream*, int)
00000000013707d8 g     O .bss	0000000000000004              key_TABLE_SHARE_LOCK_ha_data
0000000001374dc0 g     O .bss	0000000000000060              my_locale_sk_SK
00000000008b2541 g     F .text	00000000000020be              prep_alter_part_table(THD*, TABLE*, Alter_info*, st_ha_create_information*, handlerton*, bool*, char*, char const*, char const*, TABLE**)
00000000005d9ba4  w    F .text	0000000000000014              MYSQL_ERROR::get_level() const
0000000000889330  w    F .text	000000000000002b              sp_instr_jump_if_not::~sp_instr_jump_if_not()
000000000121bfe0 g     O .data	0000000000000101              ctype_geostd8_bin
00000000009816fa g     F .text	0000000000000091              ha_heap::index_next(unsigned char*)
000000000085694a g     F .text	0000000000000176              SEL_IMERGE::SEL_IMERGE(SEL_IMERGE*, RANGE_OPT_PARAM*)
00000000007d0d46 g     F .text	0000000000000068              udf_handler::~udf_handler()
000000000077bb66  w    F .text	0000000000000016              handler::rnd_same(unsigned char*, unsigned int)
00000000007b5298 g     F .text	0000000000000060              Create_func_lpad::create(THD*, Item*, Item*, Item*)
000000000090edea g     F .text	000000000000012b              table_events_waits_summary_by_instance::make_instr_row(PFS_instr*, PFS_instr_class*, void const*)
000000000106b460  w    O .data.rel.ro	0000000000000358              vtable for Item_blob
000000000059b1ea  w    F .text	000000000000001a              List<LEX_COLUMN>::head()
0000000000959609 g     F .text	0000000000000328              _mi_seq_search
000000000091f9ba g     F .text	0000000000000052              ha_myisam::extra_opt(ha_extra_function, unsigned long)
000000000081659c  w    F .text	0000000000000044              Item_func_now::val_int()
000000000070c7d6  w    F .text	00000000000000f1              Sys_var_struct::Sys_var_struct(char const*, char const*, int, long, unsigned long, CMD_LINE, long, void*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
000000000075d31c g     F .text	0000000000000104              Field_enum::store(long long, bool)
0000000000000000       F *UND*	0000000000000000              posix_fadvise64@@GLIBC_2.2.5
000000000076651c  w    F .text	000000000000000f              Field_newdate::repertoire() const
000000000073c124  w    F .text	0000000000000083              sp_instr_hpush_jump::sp_instr_hpush_jump(unsigned int, sp_pcontext*, int, unsigned int)
00000000005c8df0 g     F .text	00000000000000b7              Statement_map::Statement_map()
0000000000767346  w    F .text	0000000000000046              Field_enum::~Field_enum()
00000000006f08fc  w    F .text	000000000000001b              List<Observer_info>::~List()
00000000006f9fbe  w    F .text	0000000000000046              Optimize_table_statement::~Optimize_table_statement()
00000000008c88a6 g     F .text	000000000000015f              Event_db_repository::table_scan_all_for_i_s(THD*, TABLE*, TABLE*)
0000000000811ee4 g     F .text	000000000000018e              Item_char_typecast::print(String*, enum_query_type)
000000000070e924  w    F .text	0000000000000041              Sys_var_plugin::~Sys_var_plugin()
00000000006d70fa g     F .text	00000000000000b6              Deferred_log_events::execute(Relay_log_info*)
00000000007fd576 g     F .text	000000000000029d              Item_sum::Item_sum(THD*, Item_sum*)
0000000001386330 g     O .bss	0000000000000008              Create_func_abs::s_singleton
00000000007a67a2 g     F .text	0000000000000039              in_string::get_value(Item*)
000000000087717a  w    F .text	00000000000000a5              Item_proc_string::val_int()
000000000094d286 g     F .text	0000000000000e93              mi_state_info_read
0000000000857338 g     F .text	0000000000000031              QUICK_RANGE_SELECT::range_end()
000000000136cc01 g     O .bss	0000000000000001              opt_local_infile
000000000060553b g     F .text	00000000000000e1              update_precheck(THD*, TABLE_LIST*)
000000000065a190  w    F .text	0000000000000056              Item_cond::Item_cond(List<Item>&)
000000000076516e  w    F .text	0000000000000046              Field_real::~Field_real()
00000000007d2728 g     F .text	00000000000000e9              Item_func_set_user_var::set_entry(THD*, bool)
00000000010c9b08  w    O .data.rel.ro	0000000000000028              vtable for Alter_table_analyze_partition_statement
0000000000b5ff20 g     F .text	00000000000001ee              ha_partition::create_handler_files(char const*, char const*, int, st_ha_create_information*)
00000000007da6dc  w    F .text	0000000000000046              Item_num_op::~Item_num_op()
000000000067913e g     F .text	000000000000015a              String::set_real(double, unsigned int, charset_info_st*)
000000000138cbd0 g     O .bss	0000000000000008              pfs_hton
000000000067ece9 g     F .text	000000000000047e              write_ddl_log_entry(st_ddl_log_entry*, st_ddl_log_memory_entry**)
0000000000912fe6 g     F .text	00000000000000c3              table_cond_instances::make_row(PFS_cond*)
000000000109cd08  w    O .data.rel.ro	0000000000000398              vtable for Item_func_numgeometries
0000000000817212  w    F .text	0000000000000011              Item_func_last_day::func_name() const
0000000000708c5a  w    F .text	00000000000000f0              Sys_var_enum::Sys_var_enum(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
000000000136e480 g     O .bss	0000000000000020              threads
0000000000809316  w    F .text	0000000000000046              Item_sum_variance::~Item_sum_variance()
00000000005bf336  w    F .text	000000000000001b              Query_cache_query::tables_type(unsigned char)
00000000005c9c2e g     F .text	0000000000000051              Security_context::set_ip(char const*)
000000000094579d g     F .text	0000000000000c75              mi_lock_database
00000000007f1b98  w    F .text	0000000000000011              Item_func_ltrim::func_name() const
00000000010cd8a0 g       .data	0000000000000000              __data_start
000000000079939c  w    F .text	000000000000004c              Item_cache::basic_const_item() const
0000000001386498 g     O .bss	0000000000000008              Create_func_envelope::s_singleton
00000000008bc1a8 g     F .text	0000000000000140              Item_nodeset_func_attributebyname::val_nodeset(String*)
0000000000817b4c  w    F .text	000000000000002b              Item_func_sysdate_local::~Item_func_sysdate_local()
00000000013864c8 g     O .bss	0000000000000008              Create_func_find_in_set::s_singleton
000000000109b778  w    O .data.rel.ro	0000000000000398              vtable for Item_func_srid
00000000005987c6  w    F .text	00000000000000b6              handler::ha_index_end()
0000000000815ff4  w    F .text	0000000000000013              Item_func_dayname::check_partition_func_processor(unsigned char*)
00000000007ba4ba  w    F .text	0000000000000038              Item_func_sign::Item_func_sign(Item*)
00000000008b1359 g     F .text	0000000000000568              get_partition_set(TABLE const*, unsigned char*, unsigned int, st_key_range const*, part_id_range*)
0000000000887dcc g     F .text	00000000000000c3              sp_instr_error::execute(THD*, unsigned int*)
0000000001088350  w    O .data.rel.ro	0000000000000030              vtable for Create_func_benchmark
000000000087ea10  w    F .text	0000000000000026              Bad_db_error_handler::~Bad_db_error_handler()
00000000007beb26  w    F .text	000000000000002d              Create_func_dimension::Create_func_dimension()
00000000007bf2c4  w    F .text	000000000000002d              Create_func_floor::Create_func_floor()
00000000007ac4dc g     F .text	00000000000000eb              Item_cond_xor::val_int()
00000000009330d5 g     F .text	00000000000025c9              mi_create
00000000007ac666 g     F .text	0000000000000050              Item_func_isnotnull::neg_transformer(THD*)
00000000007ae57e  w    F .text	0000000000000011              Item_func_not::func_name() const
0000000000816ea4  w    F .text	000000000000000f              Item_func_makedate::field_type() const
00000000005693a2 g     F .text	0000000000000136              sys_var_init()
000000000055a3b1 g     F .text	00000000000000f1              net_flush
00000000005641ba g     F .text	000000000000004e              Protocol_binary::store(char const*, unsigned long, charset_info_st*, charset_info_st*)
00000000005b2536 g     F .text	0000000000000162              Query_cache::unlock()
00000000007c1242  w    F .text	0000000000000026              Create_func_overlaps::~Create_func_overlaps()
00000000007bdb82  w    F .text	0000000000000041              Create_func_bit_count::~Create_func_bit_count()
0000000000b6788a g     F .text	0000000000000485              ha_partition::update_row(unsigned char const*, unsigned char*)
00000000007a514c g     F .text	00000000000000b3              Item_func_case::agg_str_lengths(Item*)
00000000008c107a  w    F .text	0000000000000045              Item_nodeset_func_union::Item_nodeset_func_union(Item*, Item*, String*)
0000000001083d40  w    O .data.rel.ro	00000000000003a8              vtable for Item_func_gt
00000000008061af g     F .text	0000000000000159              group_concat_key_cmp_with_order
0000000000805d20 g     F .text	000000000000010a              Item_sum_udf_int::val_int()
00000000007aeabe  w    F .text	000000000000002b              Item_func_opt_neg::~Item_func_opt_neg()
00000000007e2224  w    F .text	0000000000000046              Item_func_isempty::~Item_func_isempty()
0000000000766d40  w    F .text	000000000000002c              Field_varstring::store(double)
00000000007fc44a  w    F .text	000000000000001b              Item_in_subselect::have_guarded_conds()
00000000008c137c  w    F .text	0000000000000062              Item_nodeset_func_ancestorbyname::Item_nodeset_func_ancestorbyname(Item*, char const*, unsigned int, String*, bool)
00000000007e1da4  w    F .text	0000000000000058              Item_func_area::~Item_func_area()
00000000008ede32 g     F .text	00000000000000d0              my_fseek
0000000000649427 g     F .text	0000000000000056              join_read_always_key_or_null(st_join_table*)
0000000000764712  w    F .text	000000000000004a              Field::move_field_offset(long long)
00000000005ccd1c g     F .text	000000000000010d              THD::binlog_flush_pending_rows_event(bool, bool)
00000000005efda4 g     F .text	0000000000000098              LEX::table_or_sp_used()
00000000007399f4  w    F .text	000000000000004a              Item_str_ascii_func::Item_str_ascii_func(Item*)
000000000087f584 g     F .text	00000000000000f2              sp_name::init_qname(THD*)
0000000000612a74  w    F .text	00000000000000e8              sys_var_pluginvar::sys_var_pluginvar(sys_var_chain*, char const*, st_mysql_sys_var*)
000000000073784c  w    F .text	0000000000000044              Item::fix_length_and_charset_datetime(unsigned int)
0000000000000000       F *UND*	0000000000000000              shutdown@@GLIBC_2.2.5
00000000012ca4a0 g     O .data	00000000000000b0              my_charset_utf8mb4_spanish_uca_ci
0000000000658c5c  w    F .text	0000000000000049              Field::set_null(long long)
00000000007c016a  w    F .text	000000000000002d              Create_func_last_day::Create_func_last_day()
00000000007394e8  w    F .text	0000000000000099              Item_func_in::Item_func_in(List<Item>&)
00000000007f2208  w    F .text	0000000000000011              Item_func_char::func_name() const
000000000088592e g     F .text	0000000000000471              sp_lex_keeper::reset_lex_and_exec_core(THD*, unsigned int*, bool, sp_instr*)
00000000005f1afa  w    F .text	0000000000000031              SQL_I_List<st_order>::empty()
00000000006c76fe g     F .text	000000000000009e              Event_basic::~Event_basic()
000000000074e93e g     F .text	00000000000000a6              Field_short::sql_type(String&) const
0000000001376998 g     O .bss	0000000000000008              binlog_relay_io_delegate
00000000007acdae g     F .text	0000000000000104              Item_equal::compare_const(Item*)
000000000138c9a0 g     O .bss	0000000000000008              PSI_server
00000000007d3a12 g     F .text	0000000000000074              Item_func_set_user_var::val_int()
00000000010ef1d0 g     O .data	0000000000000010              cond_instrument_prefix
00000000006f5d24  w    F .text	0000000000000043              I_P_List_iterator<MDL_request, I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>, I_P_List_counter, I_P_List_no_push_back<MDL_request> >::operator++(int)
00000000013750c0 g     O .bss	0000000000000060              my_locale_th_TH
00000000007d2ef8 g     F .text	0000000000000100              user_var_entry::val_int(char*) const
0000000000766d6c  w    F .text	0000000000000039              Field_varstring::cmp(unsigned char const*, unsigned char const*)
0000000000826ab4 g     F .text	0000000000000136              MYSQL_BIN_LOG::flush_and_sync(bool*)
000000000079bce8  w    F .text	0000000000000046              Cached_item_int::~Cached_item_int()
00000000007b5fec g     F .text	00000000000000c0              Create_func_row_count::create(THD*)
000000000085229e  w    F .text	00000000000000da              Old_rows_log_event::unpack_current_row(Relay_log_info const*)
000000000070ad46  w    F .text	000000000000002e              Sys_var_flagset::session_save_default(THD*, set_var*)
000000000070ceac  w    F .text	000000000000006f              Sys_var_tx_isolation::Sys_var_tx_isolation(char const*, char const*, int, long, unsigned long, CMD_LINE, char const**, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*))
000000000120bf40 g     O .data	0000000000000100              sort_order_latin2_hungarian_ci
0000000000799db0  w    F .text	000000000000001b              List_iterator_fast<Item>::List_iterator_fast()
00000000007e18ca  w    F .text	0000000000000036              Item_func_spatial_rel::functype() const
0000000000b65c4a g     F .text	0000000000000e15              ha_partition::open(char const*, int, unsigned int)
0000000000992827 g     F .text	000000000000009b              myrg_extrafunc
000000000078d0c8 g     F .text	00000000000000d6              Item_int::eq(Item const*, bool) const
000000000070bc6e  w    F .text	0000000000000033              Sys_var_debug_sync::global_update(THD*, set_var*)
00000000005c9be0 g     F .text	000000000000004d              Security_context::set_host(char const*)
00000000009108e6  w    F .text	0000000000000041              table_file_summary_by_instance::~table_file_summary_by_instance()
00000000010a5560  w    O .data.rel.ro	0000000000000398              vtable for Item_func_lpad
00000000005ea53a g     F .text	000000000000011d              Lex_input_stream::body_utf8_append_literal(THD*, st_mysql_lex_string const*, charset_info_st*, char const*)
000000000081860e  w    F .text	000000000000002b              Item_func_period_diff::~Item_func_period_diff()
000000000065a190  w    F .text	0000000000000056              Item_cond::Item_cond(List<Item>&)
000000000057b246 g     F .text	000000000000001b              sp_cache::sp_cache()
00000000006a9de4 g     F .text	00000000000003ab              mysql_rename_view(THD*, char const*, char const*, TABLE_LIST*)
00000000006b6f64 g     F .text	000000000000021c              TABLE_LIST::hide_view_error(THD*)
000000000055bdc9 g     F .text	0000000000000166              create_key_cache(char const*, unsigned int)
000000000077bec0  w    F .text	000000000000000f              handler::is_crashed() const
000000000081588a  w    F .text	0000000000000021              Item_func_to_seconds::check_valid_arguments_processor(unsigned char*)
0000000001069a80  w    O .data.rel.ro	0000000000000078              vtable for select_result
00000000007ba48c  w    F .text	000000000000002d              Item_func_rand::Item_func_rand()
0000000000809766  w    F .text	0000000000000031              Item_sum_bit::cleanup()
00000000008c258e  w    F .text	000000000000002b              Item_func_xpath_count::~Item_func_xpath_count()
000000000136e0e4 g     O .bss	0000000000000004              mysql_real_data_home_len
0000000000b94aca g     F .text	0000000000000131              decimal_actual_fraction
00000000007ae7b2  w    F .text	0000000000000011              Item_func_equal::func_name() const
00000000005aea3a g     F .text	0000000000000032              close_system_tables(THD*, Open_tables_backup*)
000000000059a484  w    F .text	000000000000001e              ACL_PROXY_USER::set_data(ACL_PROXY_USER*)
000000000070e7ec  w    F .text	0000000000000041              Sys_var_session_special::~Sys_var_session_special()
000000000070e096  w    F .text	0000000000000223              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
000000000058b205 g     F .text	0000000000000133              get_table_grant(THD*, TABLE_LIST*)
0000000000797628  w    F .text	000000000000002b              Item_float::~Item_float()
000000000087be62 g     F .text	00000000000004b4              sp_update_routine(THD*, int, sp_name*, st_sp_chistics*)
0000000001087c60  w    O .data.rel.ro	0000000000000030              vtable for Create_func_exp
0000000001370844 g     O .bss	0000000000000004              key_master_info_start_cond
000000000065cba4  w    F .text	0000000000000046              Item_null_result::~Item_null_result()
0000000000894cb8 g     F .text	0000000000000698              field_str::add()
0000000000559208  w    F .text	000000000000002d              Ne_creator::Ne_creator()
000000000078e6e6 g     F .text	0000000000000145              Item::cache_const_expr_analyzer(unsigned char**)
00000000007fc1cc  w    F .text	000000000000004b              Item_is_not_null_test::Item_is_not_null_test(Item_in_subselect*, Item*)
00000000006bf6b8 g     F .text	0000000000000157              Time_zone_offset::Time_zone_offset(long)
00000000007c3152  w    F .text	0000000000000046              Item_func_like_range_min::~Item_func_like_range_min()
00000000007afe7e  w    F .text	000000000000000f              Item_func_isnotnull::functype() const
00000000007089ce  w    F .text	00000000000001fe              Sys_var_typelib::do_check(THD*, set_var*)
000000000070f335 g     F .text	000000000000022b              dd_frm_storage_engine(THD*, char const*, char const*, handlerton**)
0000000000817d86  w    F .text	000000000000002b              Item_func_curdate_utc::~Item_func_curdate_utc()
00000000008cddcc g     F .text	000000000000004a              pop_dynamic
0000000000776e0a g     F .text	00000000000000b5              handler::check_old_types()
00000000006eaa4a  w    F .text	0000000000000017              my_decimal::sign() const
00000000007bba14  w    F .text	000000000000005d              Item_func_make_set::Item_func_make_set(Item*, List<Item>&)
00000000005e95aa  w    F .text	000000000000001b              List_iterator_fast<List<Item> >::List_iterator_fast()
00000000008f3659 g     F .text	00000000000000d6              my_open
0000000000819118 g     F .text	0000000000000447              field_unpack(String*, Field*, unsigned char const*, unsigned int, bool)
00000000007a1070 g     F .text	0000000000000041              Item_in_optimizer::keep_top_level_cache()
00000000005d7e84 g     F .text	00000000000001cf              MYSQL_ERROR::MYSQL_ERROR()
000000000070c494  w    F .text	0000000000000033              Sys_var_session_special::global_value_ptr(THD*, st_mysql_lex_string*)
000000000077c212  w    F .text	0000000000000017              handler::optimize(THD*, st_ha_check_opt*)
0000000000698472  w    F .text	0000000000000041              Stored_program_creation_ctx::~Stored_program_creation_ctx()
00000000007c035a  w    F .text	0000000000000041              Create_func_least::~Create_func_least()
00000000007c11d2  w    F .text	000000000000002d              Create_func_overlaps::Create_func_overlaps()
00000000007dcabe  w    F .text	000000000000002b              Item_func_bit_count::~Item_func_bit_count()
000000000065c3b2  w    F .text	000000000000001d              List_iterator_fast<Item_field>::operator++(int)
000000000065982c  w    F .text	0000000000000046              Item_result_field::~Item_result_field()
00000000007b1556  w    F .text	0000000000000046              Item_func_equal::~Item_func_equal()
000000000084525a g     F .text	00000000000001f1              Table_map_log_event::write_data_header(st_io_cache*)
00000000005e9584  w    F .text	0000000000000026              List_iterator_fast<List<Item> >::List_iterator_fast(List<List<Item> >&)
0000000000898be3 g     F .text	000000000000008f              collect_string(String*, unsigned int, st_tree_info*)
00000000010886a8  w    O .data.rel.ro	0000000000000030              vtable for Create_qfunc
000000000089157c g     F .text	00000000000001c7              Gis_multi_polygon::init_from_wkb(char const*, unsigned int, Geometry::wkbByteOrder, String*)
0000000001397098 g       .bss	0000000000000000              _end
00000000010d2354 g     O .data	0000000000000004              builtin_mysql_password_plugin_interface_version
00000000006e965e g     F .text	00000000000001c5              PROFILING::finish_current_query()
00000000005d8870 g     F .text	0000000000000077              Diagnostics_area::reset_diagnostics_area()
000000000105e360 g     O .data.rel.ro	0000000000000008              TRG_EXT
0000000000766c78  w    F .text	0000000000000011              Field_varstring::row_pack_length() const
000000000058f11b g     F .text	0000000000000425              mysql_create_user(THD*, List<st_lex_user>&)
000000000136ccb0 g     O .bss	0000000000000008              connect_timeout
000000000055fe5c g     F .text	00000000000000c9              hash_password
00000000007882f8 g     F .text	000000000000007e              Item_copy_string::copy()
00000000008eb5c3 g     F .text	00000000000002a5              my_chsize
0000000001374c40 g     O .bss	0000000000000060              my_locale_pt_PT
0000000000784932 g     F .text	0000000000000046              Item_uint::Item_uint(char const*, unsigned int)
000000000059b100  w    F .text	000000000000001b              List<LEX_COLUMN>::List()
00000000007d3c08 g     F .text	0000000000000074              Item_func_set_user_var::val_int_result()
000000000074b114 g     F .text	000000000000025b              Field_decimal::store(double)
000000000087407c  w    F .text	0000000000000074              List<QUICK_RANGE_SELECT>::delete_elements()
000000000082d832  w    F .text	0000000000000015              binlog_cache_data::pending() const
00000000005d0d00  w    F .text	0000000000000026              List_iterator<Alter_column>::after(Alter_column*)
0000000000960c0a g     F .text	0000000000000acf              mi_write
0000000000873842  w    F .text	00000000000000ac              QUICK_SELECT_I::QUICK_SELECT_I(QUICK_SELECT_I const&)
0000000000802710 g     F .text	0000000000000033              Item_sum_hybrid::no_rows_in_result()
000000000063b6da g     F .text	00000000000000c4              error_if_full_join(JOIN*)
00000000005d7426  w    F .text	0000000000000027              SQL_I_List<TABLE_LIST>::SQL_I_List()
000000000056b18c  w    F .text	000000000000002b              set_var_base::~set_var_base()
00000000008405d2 g     F .text	00000000000000b6              Execute_load_query_log_event::Execute_load_query_log_event(THD*, char const*, unsigned long, unsigned int, unsigned int, enum_load_dup_handling, bool, bool, bool, int)
0000000000805f48 g     F .text	0000000000000050              Item_sum_udf_str::copy_or_same(THD*)
00000000012cada0 g     O .data	00000000000000b0              my_charset_utf8mb4_sinhala_uca_ci
00000000010ca298  w    O .data.rel.ro	0000000000000048              vtable for table_events_waits_common
0000000000801e54 g     F .text	0000000000000050              Item_sum_variance::val_decimal(my_decimal*)
00000000009056d4  w    F .text	000000000000013b              handler::handler(handlerton*, TABLE_SHARE*)
0000000000985e6d g     F .text	000000000000019e              heap_open_from_share
00000000007c03f0  w    F .text	0000000000000041              Create_func_length::~Create_func_length()
00000000005845be g     F .text	0000000000000056              GRANT_TABLE::~GRANT_TABLE()
00000000013956b4 g     O .bss	0000000000000004              mi_key_file_kfile
00000000007681b2  w    F .text	000000000000002b              Field_time::~Field_time()
00000000009865a5 g     F .text	0000000000000143              hp_panic
0000000000000000       F *UND*	0000000000000000              pthread_mutexattr_init@@GLIBC_2.2.5
00000000006f24ee g     F .text	0000000000000080              MDL_lock::Ticket_list::add_ticket(MDL_ticket*)
00000000008936a8  w    F .text	0000000000000041              Gis_point::~Gis_point()
0000000000559cfc  w    F .text	000000000000001b              I_List<THD>::~I_List()
00000000005aee98  w    F .text	0000000000000047              MDL_request::set_type(enum_mdl_type)
00000000007f2250  w    F .text	0000000000000011              Item_func_conv::func_name() const
00000000008699ea g     F .text	000000000000024a              QUICK_ROR_UNION_SELECT::get_next()
00000000005aee73  w    F .text	0000000000000025              MDL_request::operator new(unsigned long, st_mem_root*)
000000000081ddf4 g     F .text	0000000000000097              LOGGER::init_error_log(unsigned int)
000000000136f00c g     O .bss	0000000000000004              have_query_cache
0000000000825e7c g     F .text	000000000000001f              MYSQL_BIN_LOG::new_file()
000000000070ce44  w    F .text	0000000000000041              Sys_var_enum::~Sys_var_enum()
000000000070e896  w    F .text	0000000000000026              Sys_var_bit::~Sys_var_bit()
00000000007e3ac4 g     F .text	0000000000000196              Item_str_func::val_str_from_val_str_ascii(String*, String*)
00000000006788e2  w    F .text	0000000000000026              List<char>::disjoin(List<char>*)
00000000007bdb54  w    F .text	000000000000002d              Create_func_bit_count::Create_func_bit_count()
0000000000816f58  w    F .text	0000000000000028              Item_func_add_time::val_real()
000000000121bce0 g     O .data	0000000000000100              sort_order_geostd8_general_ci
0000000000816ade  w    F .text	0000000000000011              Item_date_typecast::charset_for_protocol() const
00000000005cf128  w    F .text	000000000000001b              List<Item_param>::~List()
0000000000b82cbc g     F .text	0000000000000099              my_caseup_8bit
00000000008847cc g     F .text	000000000000009d              sp_head::set_definer(st_mysql_lex_string const*, st_mysql_lex_string const*)
00000000010c9ae0  w    O .data.rel.ro	0000000000000028              vtable for Alter_table_check_partition_statement
000000000073b7e2  w    F .text	000000000000001d              sys_var::is_struct()
0000000000587753 g     F .text	00000000000008ab              mysql_routine_grant(THD*, TABLE_LIST*, bool, List<st_lex_user>&, unsigned long, bool, bool)
00000000005980d2  w    F .text	000000000000005f              base_list::concat(base_list*)
000000000080920a  w    F .text	0000000000000041              Item_sum_variance::result_item(Field*)
00000000005595a0  w    F .text	0000000000000026              Unknown_key_hook::~Unknown_key_hook()
00000000007bd9c0  w    F .text	0000000000000041              Create_func_atan::~Create_func_atan()
0000000000000000       F *UND*	0000000000000000              gai_strerror@@GLIBC_2.2.5
0000000000ba0e4a g     F .text	000000000000002e              llstr
00000000006bb8d0 g     F .text	000000000000005b              sql_strmake(char const*, unsigned long)
000000000075ee96 g     F .text	0000000000000073              Field_bit::is_equal(Create_field*)
00000000007374ae  w    F .text	0000000000000095              xid_t::set(long, char const*, long, char const*, long)
00000000007db2e0  w    F .text	000000000000000f              Item_func_udf_int::result_type() const
00000000005aed46  w    F .text	000000000000002f              Bitmap<64u>::set_bit(unsigned int)
000000000073afa4  w    F .text	0000000000000050              Item_func_timestamp_diff::Item_func_timestamp_diff(Item*, Item*, interval_type)
00000000007c2df2  w    F .text	000000000000002d              Create_func_x::Create_func_x()
00000000010bfcc8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_dayofyear
0000000000609dc0 g     F .text	00000000000000d3              plugin_lock(THD*, st_plugin_int***)
000000000080a8dc  w    F .text	0000000000000046              Item_sum_count::~Item_sum_count()
00000000007512aa g     F .text	0000000000000062              Field_float::store(long long, bool)
0000000000889080  w    F .text	0000000000000056              sp_instr_set::~sp_instr_set()
0000000000756832 g     F .text	0000000000000172              Field_datetime::store(char const*, unsigned int, charset_info_st*)
0000000000964acc g     F .text	00000000000000c0              mi_end_bulk_insert
00000000006ef388 g     F .text	0000000000000220              Binlog_transmit_delegate::after_reset_master(THD*, unsigned short)
000000000082d334  w    F .text	000000000000002b              Rand_log_event::~Rand_log_event()
0000000000697ef6  w    F .text	0000000000000036              Discrete_interval::Discrete_interval()
0000000000b6134e g     F .text	0000000000000082              ha_partition::assign_to_keycache(THD*, st_ha_check_opt*)
0000000000738aea  w    F .text	0000000000000074              Item_user_var_as_out_param::Item_user_var_as_out_param(st_mysql_lex_string)
0000000001395570 g     O .bss	0000000000000004              my_fast_mutexattr
00000000006924b6 g     F .text	0000000000000297              mysql_print_status()
00000000010ba648  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_now_utc
000000000077f466 g     F .text	00000000000000f1              Item_ident::Item_ident(TABLE_LIST*, char const*)
00000000006c0496 g     F .text	000000000000005a              my_tz_free()
0000000000568e24 g     F .text	000000000000003e              Rpl_filter::get_ignore_table(String*)
00000000010c2020  w    O .data.rel.ro	0000000000000028              vtable for TRP_GROUP_MIN_MAX
0000000001385dc0 g     O .bss	0000000000000030              default_key_create_info
000000000097db13 g     F .text	0000000000000017              ft_boolean_get_relevance
0000000000803e3e g     F .text	00000000000001a1              Item_sum_count::update_field()
000000000079fed8 g     F .text	00000000000000f0              Arg_comparator::compare_int_signed_unsigned()
0000000000598d78  w    F .text	000000000000001f              Query_tables_list::~Query_tables_list()
00000000007b2fbc g     F .text	0000000000000050              Create_func_cot::create(THD*, Item*)
000000000106c0a0  w    O .data.rel.ro	0000000000000028              vtable for Event_basic
0000000001210de0 g     O .data	0000000000000100              to_upper_cp852_general_ci
00000000007b0914  w    F .text	0000000000000046              Item_is_not_null_test::~Item_is_not_null_test()
0000000000598ee8  w    F .text	0000000000000022              Dummy_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
00000000007bfaf8  w    F .text	000000000000002d              Create_func_inet_ntoa::Create_func_inet_ntoa()
000000000136ccd0 g     O .bss	0000000000000008              table_def_size
00000000008d3159 g     F .text	0000000000000118              print_defaults
00000000005af528  w    F .text	000000000000002d              Field_iterator::Field_iterator()
0000000000797820  w    F .text	000000000000000f              Item_hex_string::result_type() const
0000000000871ebe  w    F .text	0000000000000030              QUICK_SELECT_I::init_ror_merged_scan(bool)
000000000079944e  w    F .text	0000000000000046              Item_cache::~Item_cache()
00000000009194a6 g     F .text	0000000000000160              ftparser_call_initializer
00000000006bb1a6  w    F .text	0000000000000070              List<String>::delete_elements()
00000000006b8856 g     F .text	000000000000009b              Field_iterator_natural_join::next()
0000000000798534  w    F .text	000000000000000f              Item_outer_ref::not_null_tables() const
0000000000894b55 g     F .text	0000000000000148              get_ev_num_info(st_extreme_value_number_info*, st_number_info*, char const*)
000000000077bc92  w    F .text	0000000000000017              handler::preload_keys(THD*, st_ha_check_opt*)
000000000056c21b g     F .text	000000000000009e              unlock_slave_threads(Master_info*)
0000000000946c5f g     F .text	0000000000000136              _mi_test_if_changed
0000000000558f44  w    F .text	000000000000001b              my_decimal::~my_decimal()
000000000070e9ce  w    F .text	0000000000000026              Sys_var_set::~Sys_var_set()
000000000061b4c8 g     F .text	0000000000000061              Protocol_local::store_null()
00000000007db22a  w    F .text	0000000000000069              Item_func_udf_float::val_decimal(my_decimal*)
000000000065fe37 g     F .text	0000000000000094              get_quote_char_for_identifier(THD*, char const*, unsigned int)
00000000007e03e2 g     F .text	000000000000011e              Item_func_numgeometries::val_int()
000000000065a720  w    F .text	0000000000000012              Item_copy::get_item()
00000000007632ce g     F .text	0000000000000771              Create_field::Create_field(Field*, Field*)
0000000000895350 g     F .text	00000000000005c4              field_real::add()
00000000007fa15c g     F .text	00000000000001fa              subselect_engine::set_row(List<Item>&, Item_cache**)
0000000000929522 g     F .text	00000000000002cc              filecopy
000000000061bac0 g     F .text	0000000000000060              Protocol_local::store(Field*)
000000000057835d g     F .text	00000000000002dd              rpl_connect_master
00000000005b6a52 g     F .text	0000000000000a44              Query_cache::init_cache()
0000000000b766a6 g     F .text	0000000000000043              _db_process_
000000000138cc58 g     O .bss	0000000000000008              instr_class_per_thread
000000000073931e  w    F .text	0000000000000038              Item_func_coalesce::Item_func_coalesce(List<Item>&)
000000000088c5e4 g     F .text	000000000000001f              sp_rcontext::get_item_addr(unsigned int)
0000000000816414  w    F .text	000000000000002b              Item_date::~Item_date()
00000000005ca940 g     F .text	0000000000000062              THD::set_query(CSET_STRING const&)
000000000090afc2 g     F .text	000000000000007c              PFS_engine_table::set_field_ulonglong(Field*, unsigned long long)
00000000007be838  w    F .text	000000000000002d              Create_func_dayofyear::Create_func_dayofyear()
0000000000766158  w    F .text	0000000000000046              Field_tiny::~Field_tiny()
000000000120b200 g     O .data	0000000000000100              to_upper_hebrew_general_ci
000000000056df90 g     F .text	000000000000009b              net_request_file(st_net*, char const*)
0000000000b5d8d4 g     F .text	0000000000000277              ha_tina::create(char const*, TABLE*, st_ha_create_information*)
000000000075f66c g     F .text	0000000000000023              Field_bit::val_real()
000000000080896e  w    F .text	000000000000002f              Aggregator_simple::add()
000000000106bfc8  w    O .data.rel.ro	0000000000000038              vtable for Time_zone
0000000000ba6aa5 g     F .text	00000000000002eb              vio_peer_addr
00000000007d5514 g     F .text	00000000000000c8              Item_func_get_system_var::Item_func_get_system_var(sys_var*, enum_var_type, st_mysql_lex_string*, char const*, unsigned long)
0000000000739f4a  w    F .text	000000000000002d              Item_func_database::Item_func_database()
000000000090df68  w    F .text	0000000000000024              PFS_double_index::PFS_double_index(unsigned int, unsigned int)
000000000070d166  w    F .text	000000000000000f              List_iterator_fast<set_var_base>::after(set_var_base*)
000000000085011a g     F .text	00000000000000df              Old_rows_log_event::pack_info(Protocol*)
00000000007fc66a  w    F .text	0000000000000011              subselect_engine::field_type()
000000000076793a  w    F .text	000000000000003d              Field_bit::move_field_offset(long long)
0000000000816c64  w    F .text	000000000000000f              Item_time_typecast::result_as_longlong()
000000000084af3a  w    F .text	0000000000000081              table_def::maybe_null(unsigned int) const
00000000007105ad g     F .text	0000000000000056              case_stmt_action_case(LEX*)
000000000107c5c8  w    O .data.rel.ro	0000000000000358              vtable for Item_sp_variable
00000000010868b0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_within
0000000000b6f5a6 g     F .text	00000000000000f2              ha_partition::min_of_the_max_uint(unsigned int (handler::*)() const) const
00000000013708b0 g     O .bss	0000000000000004              key_select_to_file
00000000007e1a78  w    F .text	0000000000000011              Item_func_issimple::func_name() const
00000000007ae828  w    F .text	000000000000000f              Item_func_ge::rev_functype() const
000000000081772e  w    F .text	0000000000000046              Item_datetime_typecast::~Item_datetime_typecast()
00000000008c2684  w    F .text	000000000000002b              Item_nodeset_context_cache::~Item_nodeset_context_cache()
000000000136cc68 g     O .bss	0000000000000004              test_flags
0000000000626bb0  w    F .text	000000000000007d              st_log_info::st_log_info()
0000000000783788 g     F .text	00000000000004c3              Item_ident::print(String*, enum_query_type)
00000000007683a6  w    F .text	0000000000000046              Field_long::~Field_long()
00000000007c0198  w    F .text	0000000000000041              Create_func_last_day::~Create_func_last_day()
00000000007bc63c  w    F .text	000000000000004a              Item_func_y::Item_func_y(Item*)
0000000000876e82  w    F .text	0000000000000046              Item_proc_real::val_str(String*)
00000000005d01f0  w    F .text	000000000000001b              List_iterator<Key>::List_iterator()
0000000000809eae  w    F .text	0000000000000040              Item_sum_udf_decimal::Item_sum_udf_decimal(THD*, Item_sum_udf_decimal*)
00000000006b87dc g     F .text	000000000000007a              Field_iterator_natural_join::set(TABLE_LIST*)
0000000000802050 g     F .text	0000000000000258              Item_sum_variance::update_field()
000000000136fbf8 g     O .bss	0000000000000004              orig_argc
0000000000590ba0 g     F .text	0000000000000714              sp_grant_privileges(THD*, char const*, char const*, bool)
000000000065878a  w    F .text	0000000000000025              Sql_alloc::operator new[](unsigned long, st_mem_root*)
00000000007bd7fe  w    F .text	0000000000000041              Create_func_as_wkb::~Create_func_as_wkb()
0000000001214920 g     O .data	0000000000000100              to_upper_macroman_bin
00000000008d8120 g     F .text	0000000000000397              reinit_io_cache
00000000010693e8  w    O .data.rel.ro	0000000000000038              vtable for Prelocking_strategy
00000000010bb868  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_curdate_utc
000000000121b7c0 g     O .data	0000000000000200              to_uni_swe7_bin
00000000007d9930 g     F .text	00000000000000f6              Item_func_sp::sp_check_access(THD*)
00000000005cebc8  w    F .text	000000000000001b              List<char>::~List()
000000000079aee0  w    F .text	0000000000000026              Hybrid_type_traits_integer::~Hybrid_type_traits_integer()
00000000007bef6e  w    F .text	0000000000000041              Create_func_equals::~Create_func_equals()
0000000000816b3a  w    F .text	000000000000000f              Item_date_typecast::result_as_longlong()
00000000007f9e80 g     F .text	0000000000000063              subselect_union_engine::subselect_union_engine(st_select_lex_unit*, select_subselect*, Item_subselect*)
00000000007ac190 g     F .text	000000000000034c              Item_func_like::turboBM_matches(char const*, int) const
00000000008160dc  w    F .text	000000000000000f              Item_date::result_type() const
00000000008cd01c g     F .text	0000000000000130              Gis_read_stream::get_next_number(double*)
00000000006cd4b4 g     F .text	000000000000019b              Events::fill_schema_events(THD*, TABLE_LIST*, Item*)
00000000005f1234  w    F .text	0000000000000059              Lex_input_stream::yyUnput(char)
00000000007dba82  w    F .text	0000000000000058              Item_func_sp::val_real()
0000000000737ff6  w    F .text	000000000000003f              Item_sum_and::Item_sum_and(Item*)
00000000007dbc48  w    F .text	0000000000000011              Item_func_found_rows::func_name() const
00000000005ee6ba g     F .text	000000000000000e              st_select_lex_unit::master_unit()
00000000007f3aea  w    F .text	0000000000000046              Item_func_ucase::~Item_func_ucase()
00000000006b857e g     F .text	0000000000000016              Field_iterator_view::name()
0000000000838bf2 g     F .text	00000000000000a8              Load_log_event::get_query_buffer_length()
00000000006b85d7 g     F .text	0000000000000204              create_view_field(THD*, TABLE_LIST*, Item**, char const*)
0000000000804d1a g     F .text	0000000000000160              Item_avg_field::val_real()
0000000000848aa2  w    F .text	0000000000000051              Statement::reset_query_inner()
00000000005d0d98  w    F .text	000000000000001b              I_List<Item_change_record>::~I_List()
00000000005c4bba g     F .text	00000000000000bd              THD::change_item_tree_place(Item**, Item**)
0000000000801d62 g     F .text	00000000000000f1              Item_sum_variance::val_real()
0000000000764412  w    F .text	000000000000000b              Field::reset_fields()
0000000000559ba4  w    F .text	000000000000001d              I_List_iterator<Statement>::operator++(int)
0000000000737ce0  w    F .text	0000000000000058              Item_sum_count::Item_sum_count(List<Item>&)
00000000007e2090  w    F .text	000000000000002b              Item_func_numinteriorring::~Item_func_numinteriorring()
0000000000767b0c  w    F .text	000000000000001a              List<Create_field>::pop()
000000000065b4a4  w    F .text	0000000000000046              store_key::~store_key()
00000000005ce216  w    F .text	0000000000000011              Discrete_intervals_list::nb_elements() const
0000000000565294  w    F .text	0000000000000055              Diagnostics_area::statement_warn_count() const
000000000069890e  w    F .text	0000000000000026              Handle_old_incorrect_sql_modes_hook::~Handle_old_incorrect_sql_modes_hook()
0000000000000000       F *UND*	0000000000000000              shmat@@GLIBC_2.2.5
0000000000b71695 g     F .text	0000000000000089              ha_compare_text
000000000082d21c  w    F .text	0000000000000046              Intvar_log_event::~Intvar_log_event()
00000000007d9a26 g     F .text	00000000000001d8              Item_func_sp::fix_fields(THD*, Item**)
00000000008eafb1 g     F .text	000000000000006f              bitmap_set_above
000000000061bf62  w    F .text	000000000000001b              Ed_result_set::~Ed_result_set()
00000000008494d4  w    F .text	0000000000000012              Execute_load_log_event::get_db()
000000000136cd80 g     O .bss	0000000000000008              aborted_connects
00000000008c14f6  w    F .text	0000000000000011              Item_nodeset_func_predicate::func_name() const
0000000000819b8e  w    F .text	0000000000000043              Field::is_null_in_record_with_offset(long long)
000000000088de2e g     F .text	00000000000000dc              Gis_point::get_data_as_wkt(String*, char const**) const
0000000001086f10  w    O .data.rel.ro	0000000000000030              vtable for Create_func_rpad
000000000070ba38  w    F .text	0000000000000013              Sys_var_plugin::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000007e2c2e g     F .text	0000000000000090              Item_row::cleanup()
000000000106a748  w    O .data.rel.ro	0000000000000030              vtable for store_key_item
00000000007ae176  w    F .text	0000000000000040              Item_bool_func::Item_bool_func(THD*, Item_bool_func*)
000000000079ab18  w    F .text	000000000000002b              Item_uint::~Item_uint()
0000000001372f00 g     O .bss	0000000000000008              opt_plugin_load
00000000005d0dc5  w    F .text	000000000000000f              Item_change_record::operator delete(void*, unsigned long)
00000000005e2840 g     F .text	0000000000000692              Delayed_insert::get_local_table(THD*)
00000000012106c0 g     O .data	0000000000000100              to_lower_macroman_general_ci
00000000005d0bf6  w    F .text	0000000000000026              List_iterator<Alter_column>::List_iterator(List<Alter_column>&)
00000000010c60f8  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_selfbyname
00000000007a4268 g     F .text	00000000000000b2              Item_func_if::val_int()
0000000000760fd4 g     F .text	00000000000001ff              Create_field::create_length_to_internal_length()
000000000090fa36 g     F .text	0000000000000071              table_file_instances::table_file_instances()
0000000000767a34  w    F .text	0000000000000050              MBR::MBR()
000000000106a4c0  w    O .data.rel.ro	00000000000000e8              vtable for Protocol_local
000000000073b800  w    F .text	000000000000002d              set_var_base::set_var_base()
0000000000796544  w    F .text	000000000000005a              Hybrid_type_traits::div(Hybrid_type*, unsigned long long) const
00000000007bcfca  w    F .text	0000000000000041              Create_qfunc::~Create_qfunc()
000000000073aac0  w    F .text	000000000000002d              Item_func_now::Item_func_now()
0000000000873eb4  w    F .text	0000000000000026              List_iterator_fast<QUICK_RANGE_SELECT>::List_iterator_fast(List<QUICK_RANGE_SELECT>&)
000000000061b2d8 g     F .text	00000000000000b9              Protocol_local::Protocol_local(THD*, Ed_connection*)
0000000000000000       F *UND*	0000000000000000              putchar@@GLIBC_2.2.5
000000000075a520 g     F .text	00000000000000e4              Field_varstring::pack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000005f1a9c  w    F .text	000000000000001b              List<Create_field>::List()
0000000000848b0a  w    F .text	000000000000004d              THD::set_invoker(st_mysql_lex_string const*, st_mysql_lex_string const*)
0000000000000000       O *UND*	0000000000000000              tzname@@GLIBC_2.2.5
00000000006dc382 g     F .text	0000000000000e7f              init_relay_log_info(Relay_log_info*, char const*)
00000000008997fc  w    F .text	0000000000000043              Item_proc_int::Item_proc_int(char const*)
0000000000658886  w    F .text	0000000000000028              Bitmap<64u>::is_subset(Bitmap<64u> const&) const
00000000007dd5ca  w    F .text	0000000000000046              Item_func_pow::~Item_func_pow()
00000000008c136a  w    F .text	0000000000000011              Item_nodeset_func_descendantbyname::func_name() const
000000000061bf3e  w    F .text	0000000000000011              Reprepare_observer::is_invalidated() const
00000000007ba6ec  w    F .text	0000000000000011              Item_func_min::func_name() const
00000000008fee84 g     F .text	00000000000001d9              thr_upgrade_write_delay_lock
000000000086095c g     F .text	000000000000016d              TRP_ROR_UNION::make_quick(PARAM*, bool, st_mem_root*)
0000000000ba7c6b g     F .text	000000000000008f              sslaccept
00000000007acaee g     F .text	00000000000000cc              Item_equal::Item_equal(Item_field*, Item_field*)
000000000080893e  w    F .text	0000000000000030              Aggregator_simple::clear()
00000000009029a3 g     F .text	0000000000000048              base64_needed_encoded_length
0000000000000000       F *UND*	0000000000000000              pthread_getspecific@@GLIBC_2.2.5
0000000000816338  w    F .text	0000000000000046              Item_func_curtime::~Item_func_curtime()
00000000007bd6d2  w    F .text	0000000000000041              Create_func_aes_decrypt::~Create_func_aes_decrypt()
00000000005ce488  w    F .text	000000000000001e              MDL_context::init(THD*)
00000000007110b5 g     F .text	0000000000000132              add_select_to_union_list(LEX*, bool, bool)
0000000000000000       F *UND*	0000000000000000              strcmp@@GLIBC_2.2.5
0000000000750d1c g     F .text	00000000000000bd              Field_longlong::cmp(unsigned char const*, unsigned char const*)
00000000007af5f0  w    F .text	000000000000002d              cmp_item_int::cmp_item_int()
00000000008176bc  w    F .text	0000000000000046              Item_time_typecast::~Item_time_typecast()
0000000000b801f9 g     F .text	000000000000018e              my_casedn_mb
0000000000799598  w    F .text	000000000000003f              Item_cache_decimal::Item_cache_decimal()
00000000005cffc8  w    F .text	0000000000000026              List<Key>::List(List<Key> const&)
00000000007dba0c  w    F .text	000000000000002b              Item_func_sp::~Item_func_sp()
00000000007ba322  w    F .text	0000000000000038              Item_func_tan::Item_func_tan(Item*)
00000000005f101c  w    F .text	000000000000006f              Lex_input_stream::skip_binary(int)
00000000010b8d10  w    O .data.rel.ro	0000000000000398              vtable for Item_date_add_interval
000000000097f9bb g     F .text	0000000000000185              _mi_ft_cmp
00000000006cb02e  w    F .text	000000000000002b              Event_creation_ctx::~Event_creation_ctx()
00000000005b0b7e  w    F .text	0000000000000025              Hash_set<TABLE_LIST, &schema_set_get_key>::Hash_set()
000000000079a48e  w    F .text	0000000000000046              Item_insert_value::~Item_insert_value()
00000000012c8940 g     O .data	00000000000000b0              my_charset_ucs2_danish_uca_ci
000000000096d79c g     F .text	0000000000001861              rtree_overlapping_area
00000000006d473a  w    F .text	000000000000001b              List<p_elem_val>::List()
00000000005eae77 g     F .text	0000000000000052              is_keyword(char const*, unsigned int)
000000000070c3ca  w    F .text	0000000000000033              Sys_var_session_special::global_update(THD*, set_var*)
00000000007db9aa  w    F .text	000000000000001b              Item_func_row_count::fix_length_and_dec()
00000000008901d4 g     F .text	0000000000000127              Gis_multi_point::get_data_as_wkt(String*, char const**) const
000000000080e4c0 g     F .text	00000000000000a0              Item_func_dayname::fix_length_and_dec()
00000000006f2c48 g     F .text	0000000000000063              MDL_ticket::is_incompatible_when_waiting(enum_mdl_type) const
00000000007ec5be g     F .text	00000000000000fa              Item_func_elt::val_int()
00000000007dca06  w    F .text	0000000000000046              Item_func_udf_float::~Item_func_udf_float()
0000000000781286 g     F .text	0000000000000073              Item_splocal::this_item()
000000000107df70  w    O .data.rel.ro	0000000000000398              vtable for Item_equal
000000000056af1c  w    F .text	000000000000001d              base_list_iterator::rewind()
00000000007399e4  w    F .text	000000000000000f              Item_str_func::result_type() const
00000000007b577c g     F .text	0000000000000050              Create_func_numgeometries::create(THD*, Item*)
000000000077c4ff  w    F .text	000000000000009e              compute_next_insert_id(unsigned long long, system_variables*)
00000000007c132c  w    F .text	0000000000000041              Create_func_period_diff::~Create_func_period_diff()
000000000080f8d8 g     F .text	00000000000000a2              Item_func_now::fix_length_and_dec()
00000000007646f6  w    F .text	000000000000000f              Field::can_be_compared_as_longlong() const
0000000000000000       F *UND*	0000000000000000              strtol@@GLIBC_2.2.5
00000000007aff02  w    F .text	0000000000000019              Item_func_isnotnull::compare_collation()
00000000007b97cc  w    F .text	0000000000000062              udf_handler::udf_handler(st_udf_func*)
0000000000766da6  w    F .text	000000000000000f              Field_varstring::size_of() const
00000000007bdd86  w    F .text	0000000000000026              Create_func_centroid::~Create_func_centroid()
00000000007fc9b6  w    F .text	000000000000002b              subselect_union_engine::~subselect_union_engine()
00000000006cafb6  w    F .text	0000000000000026              Event_job_data::~Event_job_data()
0000000000739582  w    F .text	0000000000000038              Item_func_isnull::Item_func_isnull(Item*)
0000000000738a58  w    F .text	0000000000000091              Item_func_get_user_var::Item_func_get_user_var(st_mysql_lex_string)
00000000006df9ee  w    F .text	000000000000001a              Relay_log_info::reset_row_stmt_start_timestamp()
00000000008c1004  w    F .text	000000000000002b              Item_nodeset_func::~Item_nodeset_func()
000000000120fb80 g     O .data	0000000000000100              to_upper_keybcs2_general_ci
00000000008eac96 g     F .text	00000000000000ee              bitmap_is_subset
0000000000b66d70 g     F .text	0000000000000213              ha_partition::external_lock(THD*, int)
000000000087401e  w    F .text	000000000000001b              List<QUICK_RANGE_SELECT>::List()
0000000000678496  w    F .text	000000000000001a              I_List<thread_info>::is_empty()
0000000000b69224 g     F .text	0000000000000047              ha_partition::column_bitmaps_signal()
00000000005ac40a g     F .text	0000000000000123              setup_tables_and_check_access(THD*, Name_resolution_context*, List<TABLE_LIST>*, TABLE_LIST*, TABLE_LIST**, bool, unsigned long, unsigned long)
0000000000000000       F *UND*	0000000000000000              ioctl@@GLIBC_2.2.5
00000000005d8832 g     F .text	000000000000003d              MYSQL_ERROR::set_sqlstate(char const*)
000000000079c752 g     F .text	0000000000000049              Ge_creator::create(Item*, Item*) const
0000000000913546 g     F .text	00000000000000b6              table_threads::rnd_pos(void const*)
00000000007af31c  w    F .text	0000000000000035              cmp_item::store_value_by_template(cmp_item*, Item*)
00000000007dafc6  w    F .text	00000000000000ab              Item_udf_func::fix_fields(THD*, Item**)
0000000000825ebc g     F .text	00000000000006f3              MYSQL_BIN_LOG::new_file_impl(bool)
00000000010ec580 g     O .data	0000000000000160              mysqld_system_tables
000000000088eff0 g     F .text	0000000000000200              Gis_polygon::get_data_as_wkt(String*, char const**) const
00000000007d76ce g     F .text	0000000000000334              Item_func_match::fix_fields(THD*, Item**)
00000000008089aa  w    F .text	0000000000000058              Item_sum::~Item_sum()
0000000000708514  w    F .text	0000000000000030              Discrete_intervals_list::minimum() const
000000000106cf30  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_enum
00000000007970a2  w    F .text	0000000000000072              Item_field::get_geometry_type() const
00000000010813d0  w    O .data.rel.ro	0000000000000048              vtable for in_double
00000000008c2b0e g     F .text	000000000000008c              table_mapping::expand()
0000000000767aaa  w    F .text	000000000000002d              List<Create_field>::push_back(Create_field*, st_mem_root*)
00000000008a8f6e  w    F .text	0000000000000027              READ_INFO::end_io_cache()
00000000007965e8  w    F .text	000000000000001d              Hybrid_type_traits::Hybrid_type_traits()
000000000106f140  w    O .data.rel.ro	0000000000000290              vtable for Field_bit_as_char
00000000005ca1ef g     F .text	0000000000000018              thd_non_transactional_update
0000000000694410 g     F .text	0000000000000189              Table_triggers_list::~Table_triggers_list()
00000000007bfa3c  w    F .text	0000000000000026              Create_func_hex::~Create_func_hex()
00000000010f1580 g     O .data	0000000000000004              myisam_file_magic
00000000006f52e2  w    F .text	0000000000000063              MDL_ticket::MDL_ticket(MDL_context*, enum_mdl_type, enum_mdl_duration)
00000000006f1eda g     F .text	0000000000000093              MDL_context::MDL_context()
00000000007af45c  w    F .text	0000000000000042              cmp_item_sort_string::store_value(Item*)
000000000106a660  w    O .data.rel.ro	0000000000000078              vtable for Select_fetch_protocol_binary
00000000013748e0 g     O .bss	0000000000000060              my_locale_lt_LT
00000000006b823c g     F .text	000000000000005c              Natural_join_column::field()
000000000078becc g     F .text	0000000000000896              Item::tmp_table_field_from_field_type(TABLE*, bool)
0000000000b78c34 g     F .text	0000000000000230              _db_enter_
0000000000b6e9f0 g     F .text	00000000000000f8              ha_partition::get_error_message(int, String*)
000000000073beda  w    F .text	000000000000006d              sp_instr_opt_meta::sp_instr_opt_meta(unsigned int, sp_pcontext*, unsigned int)
000000000138cfc8 g     O .bss	0000000000000008              pfs_unknown_acl
000000000090a878 g     F .text	0000000000000074              PFS_engine_table_share::check_all_tables(THD*)
000000000081e266 g     F .text	00000000000000db              LOGGER::set_handlers(unsigned int, unsigned int, unsigned int)
0000000000849136  w    F .text	000000000000000f              User_var_log_event::get_type_code()
00000000005572bc g     F .text	00000000000004bd              check_secure_file_priv_path()
00000000005e918e  w    F .text	000000000000021b              Delayed_insert::~Delayed_insert()
00000000005e97d0  w    F .text	0000000000000025              I_List<delayed_row>::is_last(delayed_row*)
000000000055c262  w    F .text	0000000000000026              I_List_iterator<NAMED_ILINK>::I_List_iterator(I_List<NAMED_ILINK>&)
0000000000602435 g     F .text	0000000000000381              mysql_parse(THD*, char*, unsigned int, Parser_state*)
0000000000709ca0  w    F .text	0000000000000130              Sys_var_dbug::do_check(THD*, set_var*)
00000000006ce48a g     F .text	00000000000000e9              partition_info::create_default_partition_names(unsigned int, unsigned int, unsigned int)
00000000006786e0  w    F .text	000000000000000f              List_iterator_fast<char>::after(char*)
00000000007ba402  w    F .text	0000000000000038              Item_func_floor::Item_func_floor(Item*)
0000000000852426  w    F .text	0000000000000046              Update_rows_log_event_old::~Update_rows_log_event_old()
000000000077bbfc  w    F .text	000000000000000b              handler::unlock_row()
00000000006068e2  w    F .text	0000000000000096              Item_null::Item_null(char*)
000000000082caae  w    F .text	000000000000002d              TC_LOG_DUMMY::TC_LOG_DUMMY()
00000000006e5b8b g     F .text	0000000000000131              mysql_audit_notify(THD*, unsigned int, unsigned int, ...)
00000000013717a0 g     O .bss	0000000000000020              slave_error_mask
0000000000756dfa g     F .text	000000000000006d              Field_datetime::send_binary(Protocol*)
0000000000659d64  w    F .text	000000000000010f              Item_func_set_user_var::Item_func_set_user_var(THD*, Item_func_set_user_var*)
000000000070e6b4  w    F .text	0000000000000041              Sys_var_tz::~Sys_var_tz()
00000000010d2660 g     O .data	0000000000000010              EMPTY_STR
00000000007a9ea4 g     F .text	0000000000000110              Item_cond_and::val_int()
000000000080a5be  w    F .text	0000000000000046              Item_sum_and::~Item_sum_and()
00000000007a0190 g     F .text	00000000000000da              Arg_comparator::compare_e_int_diff_signedness()
00000000005cffc8  w    F .text	0000000000000026              List<Key>::List(List<Key> const&)
0000000000ba63ca g     F .text	0000000000000123              vio_fastsend
00000000007acc7a g     F .text	0000000000000134              Item_equal::Item_equal(Item_equal*)
0000000000000000       F *UND*	0000000000000000              kill@@GLIBC_2.2.5
00000000006cfe62 g     F .text	0000000000000025              partition_info::list_part_cmp(void const*, void const*)
0000000000681fcb g     F .text	000000000000028a              check_duplicates_in_interval(char const*, char const*, st_typelib*, charset_info_st*, unsigned int*)
000000000138d4e0 g     O .bss	0000000000000100              table_events_waits_summary_by_instance::m_table_lock
000000000098ee90  w    F .text	0000000000000027              Mrg_child_def::set_child_def_version(enum_table_ref_type, unsigned long)
00000000007b2eac g     F .text	0000000000000060              Create_func_conv::create(THD*, Item*, Item*, Item*)
00000000005a6f1b g     F .text	000000000000044a              open_table_uncached(THD*, char const*, char const*, char const*, bool)
00000000008c1560  w    F .text	000000000000003a              Item_bool::Item_bool(int)
00000000006ef866 g     F .text	000000000000023a              Binlog_relay_IO_delegate::thread_stop(THD*, Master_info*)
000000000085007a g     F .text	000000000000003e              Old_rows_log_event::write_data_header(st_io_cache*)
00000000006bb06c  w    F .text	0000000000000025              List<String>::push_back(String*)
00000000005e9502  w    F .text	000000000000002d              Delayed_prelocking_strategy::Delayed_prelocking_strategy()
0000000000796f94  w    F .text	0000000000000026              Item_field::is_null()
0000000000895914 g     F .text	00000000000005f3              field_decimal::add()
0000000000889054  w    F .text	000000000000002b              sp_instr_stmt::~sp_instr_stmt()
00000000007f329c  w    F .text	000000000000002b              Item_func_repeat::~Item_func_repeat()
000000000136ce2c g     O .bss	0000000000000004              sync_relaylog_period
00000000006cadc2 g     F .text	0000000000000056              event_basic_db_equal(st_mysql_lex_string, Event_basic*)
00000000006793f4 g     F .text	00000000000000a5              String::needs_conversion(unsigned int, charset_info_st*, charset_info_st*, unsigned int*)
0000000000558772  w    F .text	0000000000000027              base_list::base_list()
00000000008490d6  w    F .text	000000000000000f              Rand_log_event::get_type_code()
00000000008b667a g     F .text	00000000000002cf              handle_alter_part_error(st_lock_param_type*, bool, bool, bool, bool)
00000000007fcb76 g     F .text	0000000000000103              Item_sum::init_sum_func_check(THD*)
00000000007af402  w    F .text	0000000000000059              cmp_item_sort_string::cmp_item_sort_string(charset_info_st*)
00000000007964d0  w    F .text	000000000000000f              Hybrid_type_traits::type() const
000000000061bf50  w    F .text	0000000000000012              Reprepare_observer::reset_reprepare_observer()
00000000007615a4 g     F .text	0000000000000ff6              Create_field::init(THD*, char*, enum_field_types, char*, char*, unsigned int, Item*, Item*, st_mysql_lex_string*, char*, List<String>*, charset_info_st*, unsigned int)
0000000000752e3a g     F .text	00000000000001aa              Field_timestamp::val_int()
00000000006fab84 g     F .text	0000000000000124              trans_rollback_stmt(THD*)
000000000056568e  w    F .text	0000000000000029              Query_arena::alloc(unsigned long)
00000000007f2e1c  w    F .text	000000000000002b              Item_func_unhex::~Item_func_unhex()
0000000001394d00 g     O .bss	0000000000000004              key_THR_LOCK_net
000000000073855c  w    F .text	0000000000000040              Item_func_additive_op::Item_func_additive_op(Item*, Item*)
00000000007b3daa g     F .text	0000000000000058              Create_func_find_in_set::create(THD*, Item*, Item*)
00000000007e26aa  w    F .text	0000000000000046              Item_func_as_wkt::~Item_func_as_wkt()
00000000008cfd28 g     F .text	0000000000000072              get_charset_number
000000000079a2ea  w    F .text	0000000000000058              Item_cache_datetime::~Item_cache_datetime()
0000000000794642 g     F .text	0000000000000131              Item_cache_row::setup(Item*)
000000000073bc3c  w    F .text	0000000000000090              sp_lex_keeper::~sp_lex_keeper()
00000000005ee6da g     F .text	000000000000003a              st_select_lex::add_order_to_list(THD*, Item*, bool)
00000000007c08e2  w    F .text	0000000000000026              Create_func_log2::~Create_func_log2()
000000000067936a g     F .text	0000000000000089              String::copy(char const*, unsigned int, charset_info_st*)
000000000070a11c  w    F .text	00000000000000d7              Sys_var_keycache::global_update(THD*, set_var*)
00000000006c7d20 g     F .text	0000000000000041              Event_timed::~Event_timed()
0000000000000000       F *UND*	0000000000000000              deflateReset
00000000005669c0  w    F .text	000000000000000f              Item::clone_item()
000000000073bdf0  w    F .text	000000000000007d              sp_instr_set_trigger_field::sp_instr_set_trigger_field(unsigned int, sp_pcontext*, Item_trigger_field*, Item*, LEX*)
0000000000000000       F *UND*	0000000000000000              rint@@GLIBC_2.2.5
000000000061bf7e  w    F .text	000000000000003a              Ed_row::Ed_row(Ed_column*, unsigned long)
00000000008741a6  w    F .text	0000000000000026              List_iterator_fast<SEL_IMERGE>::List_iterator_fast(List<SEL_IMERGE>&)
00000000007b25ec g     F .text	0000000000000063              Create_func_addtime::create(THD*, Item*, Item*)
0000000000872148  w    F .text	000000000000000f              QUICK_ROR_UNION_SELECT::get_type()
0000000000840f0a g     F .text	00000000000001b4              sql_ex_info::write_data(st_io_cache*)
0000000000766022  w    F .text	000000000000000f              Field_timestamp::can_be_compared_as_longlong() const
000000000105e570 g     O .data.rel.ro	0000000000000010              view_type
00000000007f3df0  w    F .text	0000000000000058              Item_func_des_decrypt::~Item_func_des_decrypt()
00000000007ee590 g     F .text	0000000000000055              Item_func_conv_charset::fix_length_and_dec()
0000000001089c90  w    O .data.rel.ro	0000000000000398              vtable for Item_func_uuid_short
00000000008093d8  w    F .text	0000000000000041              Item_sum_std::result_item(Field*)
0000000001373120 g     O .bss	0000000000000070              LOCK_plugin_delete
00000000007dd4ba  w    F .text	000000000000002b              Item_func_atan::~Item_func_atan()
0000000000b685aa g     F .text	000000000000009f              ha_partition::estimate_read_buffer_size(long)
000000000073c21c  w    F .text	000000000000004a              sp_instr_hreturn::sp_instr_hreturn(unsigned int, sp_pcontext*, unsigned int)
000000000138cfb8 g     O .bss	0000000000000008              pfs_updatable_acl
00000000005bc5e2 g     F .text	00000000000004dd              Query_cache::join_results(unsigned long)
0000000001218280 g     O .data	0000000000000100              to_lower_hebrew_bin
00000000006bb7fc g     F .text	0000000000000038              sql_alloc(unsigned long)
0000000000645d89 g     F .text	0000000000000278              free_tmp_table(THD*, TABLE*)
000000000077e9ee g     F .text	00000000000000aa              Item::val_decimal_from_time(my_decimal*)
00000000006edb3c g     F .text	00000000000000b6              get_user_var_real
0000000000708714  w    F .text	0000000000000032              LOGGER::get_slow_log_file_handler() const
0000000000766b52  w    F .text	000000000000002c              Field_string::store(double)
00000000012078c0 g     O .data	0000000000000101              ctype_cp850_general_ci
00000000008d63e0 g     F .text	0000000000000052              dirname_length
00000000007da946  w    F .text	0000000000000011              Item_func_neg::func_name() const
0000000000808f52  w    F .text	000000000000006a              Item_sum_avg::Item_sum_avg(THD*, Item_sum_avg*)
000000000109c240  w    O .data.rel.ro	0000000000000398              vtable for Item_func_y
00000000009109de g     F .text	00000000000002ba              table_performance_timers::table_performance_timers()
00000000007daa1e  w    F .text	000000000000002b              Item_real_func::~Item_real_func()
00000000008ba980 g     F .text	0000000000000070              Unique::reset()
000000000091057c g     F .text	000000000000011a              table_file_summary_by_instance::make_row(PFS_file*)
00000000007c0296  w    F .text	000000000000002d              Create_func_lcase::Create_func_lcase()
000000000089e7c8 g     F .text	000000000000007f              multi_delete::send_error(unsigned int, char const*)
000000000090c1e6  w    F .text	0000000000000041              PFS_editable_acl::~PFS_editable_acl()
00000000005ce228  w    F .text	0000000000000011              Discrete_intervals_list::get_head() const
0000000001370864 g     O .bss	0000000000000004              key_TABLE_SHARE_cond
00000000005e97f6  w    F .text	000000000000001b              I_List<delayed_row>::empty()
00000000007f33be  w    F .text	0000000000000046              Item_func_elt::~Item_func_elt()
00000000013707b4 g     O .bss	0000000000000004              key_master_info_data_lock
0000000000857ba8 g     F .text	000000000000040a              QUICK_RANGE_SELECT::init_ror_merged_scan(bool)
00000000007dab82  w    F .text	0000000000000011              Item_func_sin::func_name() const
000000000060b3b1 g     F .text	000000000000097d              plugin_init(int*, char**, int)
00000000006f5472  w    F .text	0000000000000023              MDL_lock::Ticket_list::Ticket_list()
000000000110fe60 g     O .data	0000000000000058              my_collation_8bit_bin_handler
000000000136fb78 g     O .bss	0000000000000004              mysqld_server_started
0000000001372440 g     O .bss	0000000000000070              LOCK_xid_cache
0000000000b65c18 g     F .text	0000000000000032              ha_data_partition_destroy(st_ha_data_partition*)
000000000073db48 g     F .text	00000000000000fa              flush_one_result
0000000000689b1d g     F .text	000000000000148f              mysql_prepare_alter_table(THD*, TABLE*, st_ha_create_information*, Alter_info*)
00000000006f0a40  w    F .text	000000000000001b              Trans_delegate::~Trans_delegate()
00000000005596c2  w    F .text	000000000000001b              I_List<THD>::I_List()
00000000012cd8a0 g     O .data	00000000000000b0              my_charset_ucs2_general_ci
0000000000000000       F *UND*	0000000000000000              setbuf@@GLIBC_2.2.5
0000000001086620  w    O .data.rel.ro	0000000000000040              vtable for Ne_creator
000000000077c27a  w    F .text	0000000000000020              handler::discard_or_import_tablespace(char)
00000000005b1136  w    F .text	000000000000000f              I_P_List_no_push_back<Wait_for_flush>::I_P_List_no_push_back(Wait_for_flush**)
00000000010ca2e0  w    O .data.rel.ro	0000000000000068              vtable for table_events_waits_summary_by_instance
0000000001088410  w    O .data.rel.ro	0000000000000030              vtable for Create_func_as_wkb
00000000013708a0 g     O .bss	0000000000000004              key_file_casetest
0000000001087c00  w    O .data.rel.ro	0000000000000030              vtable for Create_func_exteriorring
00000000007b0c18  w    F .text	000000000000002b              cmp_item_datetime::~cmp_item_datetime()
00000000007f420a g     F .text	00000000000000d3              Item_subselect::Item_subselect()
00000000013864d8 g     O .bss	0000000000000008              Create_func_format::s_singleton
0000000000565444  w    F .text	000000000000001f              Protocol::free()
000000000073849c  w    F .text	0000000000000066              Item_int_func::Item_int_func(Item*, Item*, Item*)
000000000060480b g     F .text	00000000000000d9              check_simple_select()
0000000000566afa  w    F .text	0000000000000028              Item::update_null_value()
0000000000000000       F *UND*	0000000000000000              __xstat64@@GLIBC_2.2.5
0000000000565382  w    F .text	000000000000001b              Send_field::Send_field()
00000000007aebee  w    F .text	000000000000000b              Item_func_coalesce::find_num_type()
0000000000b5c96a g     F .text	00000000000006ea              ha_tina::rnd_end()
00000000007be004  w    F .text	000000000000002d              Create_func_concat_ws::Create_func_concat_ws()
00000000006b9c6e g     F .text	00000000000000d5              TABLE_LIST::reinit_before_use(THD*)
00000000007883a0 g     F .text	0000000000000045              Item_copy_string::val_decimal(my_decimal*)
00000000008a9eed g     F .text	0000000000000227              check_reorganise_list(partition_info*, partition_info*, List<char>)
000000000084b348 g     F .text	0000000000000070              Slave_reporting_capability::Slave_reporting_capability(char const*)
00000000008c2402  w    F .text	000000000000002b              Item_nodeset_func_rootelement::~Item_nodeset_func_rootelement()
00000000007dce26  w    F .text	0000000000000058              Item_func_char_length::~Item_func_char_length()
00000000008139f4 g     F .text	0000000000000381              Item_func_maketime::val_str(String*)
0000000000847c44 g     F .text	0000000000000075              Update_rows_log_event::Update_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, st_bitmap const*, bool)
00000000007add8a  w    F .text	0000000000000046              Item_func_numhybrid::~Item_func_numhybrid()
00000000007dc3ec  w    F .text	000000000000002b              Item_func_get_system_var::~Item_func_get_system_var()
0000000000b6d82a g     F .text	000000000000015f              ha_partition::min_rows_for_estimate()
000000000106c0c8  w    O .data.rel.ro	0000000000000038              vtable for Event_creation_ctx
00000000008c4fd4 g     F .text	00000000000000d4              Event_scheduler::lock_data(char const*, unsigned int)
00000000007bd0c8  w    F .text	000000000000002d              Create_native_func::Create_native_func()
000000000073a4d4  w    F .text	0000000000000038              Item_func_quarter::Item_func_quarter(Item*)
00000000007b3e02 g     F .text	0000000000000050              Create_func_floor::create(THD*, Item*)
00000000008b9f20  w    F .text	0000000000000025              List_iterator<partition_element>::replace(partition_element*)
000000000073d0c3 g     F .text	00000000000001d4              set_mysql_error
0000000001072c98  w    O .data.rel.ro	0000000000000290              vtable for Field_tiny
0000000000739e12  w    F .text	0000000000000040              Item_func_rtrim::Item_func_rtrim(Item*, Item*)
00000000005cf160  w    F .text	0000000000000021              st_ha_create_information::~st_ha_create_information()
00000000007fa0d8 g     F .text	0000000000000036              subselect_union_engine::prepare()
00000000007bf8a0  w    F .text	000000000000002d              Create_func_glength::Create_func_glength()
0000000000709854  w    F .text	0000000000000033              Sys_var_proxy_user::session_save_default(THD*, set_var*)
000000000088cf22  w    F .text	0000000000000010              sp_pcontext::max_var_index()
00000000007ae5d6  w    F .text	000000000000002b              Item_func_not::~Item_func_not()
000000000094fe9e g     F .text	0000000000000240              mi_open_datafile
00000000008c20e4  w    F .text	000000000000002b              Item_nodeset_func_attributebyname::~Item_nodeset_func_attributebyname()
00000000007975e2  w    F .text	0000000000000046              Item_float::~Item_float()
000000000079a24c  w    F .text	000000000000002b              Item_cache_decimal::~Item_cache_decimal()
0000000000889646  w    F .text	000000000000002b              sp_instr_hreturn::~sp_instr_hreturn()
00000000007be4e2  w    F .text	0000000000000041              Create_func_crosses::~Create_func_crosses()
00000000005b1342  w    F .text	0000000000000041              No_such_table_error_handler::~No_such_table_error_handler()
0000000001386320 g     O .bss	0000000000000008              Create_udf_func::s_singleton
000000000091f312 g     F .text	0000000000000041              ha_myisam::rnd_init(bool)
00000000007bc350  w    F .text	0000000000000038              Item_func_as_wkt::Item_func_as_wkt(Item*)
000000000079afb4  w    F .text	000000000000002b              Item_bin_string::~Item_bin_string()
00000000008d630f g     F .text	00000000000000d1              close_cached_file
00000000006978e0 g     F .text	00000000000001d0              Handle_old_incorrect_sql_modes_hook::process_unknown_string(char*&, unsigned char*, st_mem_root*, char*)
00000000005b9746 g     F .text	00000000000003dc              Query_cache::get_free_block(unsigned long, char, unsigned long)
00000000008b0c24 g     F .text	0000000000000067              get_partition_id_linear_key_sub(partition_info*, unsigned int*)
00000000007b2bda g     F .text	0000000000000050              Create_func_char_length::create(THD*, Item*)
00000000008015aa g     F .text	0000000000000075              Item_sum_avg::val_str(String*)
00000000007671ba  w    F .text	0000000000000094              Field_enum::Field_enum(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned int, st_typelib*, charset_info_st*)
00000000007887fa g     F .text	0000000000000071              Item_copy_decimal::val_int()
0000000000827332 g     F .text	000000000000027f              THD::binlog_write_table_map(TABLE*, bool)
00000000006188b0 g     F .text	000000000000012b              Prepared_statement::Prepared_statement(THD*)
00000000008ffc45 g     F .text	0000000000000189              safe_cond_timedwait
0000000001091df8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_rand
000000000070c4dc  w    F .text	00000000000001a7              Sys_var_have::Sys_var_have(char const*, char const*, int, long, unsigned long, CMD_LINE, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000007b9f40  w    F .text	0000000000000038              Item_dec_func::Item_dec_func(Item*)
0000000000690d08  w    F .text	0000000000000025              List<Create_field>::push_front(Create_field*)
00000000005af90e  w    F .text	0000000000000063              Field_null::Field_null(unsigned char*, unsigned int, Field::utype, char const*, charset_info_st*)
00000000007cfd90 g     F .text	000000000000030d              udf_handler::get_arguments()
00000000008c202c  w    F .text	0000000000000046              Item_nodeset_func_predicate::~Item_nodeset_func_predicate()
000000000059faad g     F .text	00000000000000d6              unique_table(THD*, TABLE_LIST*, TABLE_LIST*, bool)
0000000000656942 g     F .text	0000000000000178              Index_hint::print(THD*, String*)
00000000007587d0 g     F .text	00000000000001f8              Field_string::val_decimal(my_decimal*)
000000000073cca7 g     F .text	00000000000001e2              my_connect
00000000007f40e4  w    F .text	0000000000000046              Item_func_sha::~Item_func_sha()
00000000007a4e50 g     F .text	0000000000000132              Item_func_case::val_real()
00000000005af5c8  w    F .text	0000000000000039              Field_iterator_table::Field_iterator_table()
000000000080eb52 g     F .text	00000000000000b0              Item_func_time_to_sec::val_int()
00000000007dd7d8  w    F .text	000000000000002b              Item_func_log2::~Item_func_log2()
00000000007ed1a2 g     F .text	0000000000000123              Item_func_repeat::fix_length_and_dec()
00000000010743f8  w    O .data.rel.ro	0000000000000358              vtable for Item_type_holder
00000000008d8aff g     F .text	0000000000000274              remove_io_thread
000000000070ea9e  w    F .text	0000000000000026              Sys_var_max_user_conn::~Sys_var_max_user_conn()
0000000000816d6c  w    F .text	000000000000000f              Item_datetime_typecast::field_type() const
00000000008cf9a2 g     F .text	0000000000000065              add_compiled_collation
00000000009886d0 g     F .text	00000000000005de              hp_write_key
00000000007f2304  w    F .text	0000000000000011              Item_func_unhex::func_name() const
00000000005af688  w    F .text	0000000000000049              Field_iterator_natural_join::Field_iterator_natural_join()
00000000008c42b0 g     F .text	0000000000000043              Event_scheduler::~Event_scheduler()
0000000000754c5e g     F .text	0000000000000100              Field_year::val_int()
0000000000765a5c  w    F .text	0000000000000022              Field_longlong::key_type() const
00000000009ac46c  w    F .text	0000000000000053              ha_innobase_add_index::ha_innobase_add_index(TABLE*, st_key*, unsigned int, dict_table_struct*)
00000000007547a6 g     F .text	0000000000000057              Field_time::sort_string(unsigned char*, unsigned int)
0000000000738170  w    F .text	0000000000000122              Item_func::Item_func(Item*, Item*, Item*, Item*)
00000000007d9c64 g     F .text	0000000000000033              uuid_short_init()
00000000005f0d48  w    F .text	000000000000012e              st_select_lex::st_select_lex()
00000000012c95a0 g     O .data	00000000000000b0              my_charset_utf8_spanish_uca_ci
00000000008cdc08 g     F .text	0000000000000095              insert_dynamic
000000000079bc76  w    F .text	0000000000000046              Cached_item_field::~Cached_item_field()
00000000007bbe6e  w    F .text	0000000000000011              Item_func_like_range_min::func_name() const
0000000000858b7c g     F .text	00000000000000cc              SEL_ARG::SEL_ARG(SEL_ARG&)
00000000005b313e g     F .text	00000000000001f8              Query_cache::abort(Query_cache_tls*)
000000000098ef2a  w    F .text	0000000000000011              ha_myisammrg::table_type() const
0000000000800016 g     F .text	0000000000000050              Item_sum_sum::copy_or_same(THD*)
000000000136cda8 g     O .bss	0000000000000008              delayed_insert_writes
000000000078fdb2 g     F .text	0000000000000082              Item_ref::send(Protocol*, String*)
0000000000000000       F *UND*	0000000000000000              fprintf@@GLIBC_2.2.5
00000000005593f8  w    F .text	0000000000000041              Ge_creator::~Ge_creator()
00000000007c3bf2 g     F .text	0000000000000052              Item_func::Item_func(List<Item>&)
000000000081bbd2 g     F .text	000000000000002d              Log_to_csv_event_handler::Log_to_csv_event_handler()
00000000007ae730  w    F .text	000000000000000f              Item_func_eq::functype() const
000000000081f43e g     F .text	00000000000000d4              MYSQL_BIN_LOG::check_write_error(THD*)
0000000000911536  w    F .text	0000000000000041              table_setup_consumers::~table_setup_consumers()
0000000000793a04 g     F .text	0000000000000094              Item_cache_datetime::val_real()
00000000010c34f0  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_cfetch
0000000000765f12  w    F .text	000000000000000f              Field_null::pack_length() const
00000000007ce836 g     F .text	0000000000000203              Item_func_find_in_set::fix_length_and_dec()
00000000007bedac  w    F .text	0000000000000041              Create_func_encrypt::~Create_func_encrypt()
00000000005af8b6  w    F .text	000000000000001a              Field::operator new(unsigned long)
0000000000787e9a g     F .text	0000000000000006              non-virtual thunk to Item_param::set_out_param_info(Send_field*)
0000000000764938  w    F .text	0000000000000014              Field::check_overflow(int)
000000000077c4d2  w    F .text	000000000000002d              Ha_delete_table_error_handler::Ha_delete_table_error_handler()
0000000000566f0a  w    F .text	0000000000000013              Item::check_valid_arguments_processor(unsigned char*)
00000000007dd31e  w    F .text	0000000000000046              Item_func_tan::~Item_func_tan()
00000000008e3ee2 g     F .text	000000000000002a              multi_key_cache_change
0000000001370798 g     O .bss	0000000000000004              key_LOCK_status
00000000010a5c90  w    O .data.rel.ro	0000000000000398              vtable for Item_func_repeat
00000000005d02b8  w    F .text	000000000000001b              List_iterator<Key>::remove()
00000000009a785c g     F .text	0000000000000078              innobase_convert_to_filename_charset
00000000006caf0e  w    F .text	0000000000000013              Event_creation_ctx::create_backup_ctx(THD*) const
00000000007ae3b8  w    F .text	000000000000002c              Item_bool_func2::print(String*, enum_query_type)
00000000007f420a g     F .text	00000000000000d3              Item_subselect::Item_subselect()
00000000010937c0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_shift_right
00000000005b869a g     F .text	00000000000000d3              Query_cache::invalidate_table(THD*, TABLE_LIST*)
000000000090a5d0 g     F .text	0000000000000131              initialize_performance_schema(PFS_global_param const*)
00000000007a6688 g     F .text	0000000000000119              in_string::set(unsigned int, Item*)
00000000006197ba g     F .text	0000000000000297              Prepared_statement::execute_loop(String*, bool, unsigned char*, unsigned char*)
0000000001211400 g     O .data	0000000000000100              to_upper_latin7_general_ci
000000000136fe98 g     O .bss	0000000000000008              opt_ssl_key
00000000007fc398  w    F .text	0000000000000016              Item_maxmin_subselect::reset_value_registration()
00000000007affde  w    F .text	000000000000000f              Item_cond::field_type() const
0000000000559116  w    F .text	0000000000000035              Comp_creator::~Comp_creator()
0000000000798a34  w    F .text	0000000000000017              Item_copy::is_null()
00000000008c2e26 g     F .text	00000000000000c5              table_mapping::clear_tables()
0000000000790b7a g     F .text	000000000000005b              Item_direct_ref::val_bool()
00000000005ee5ec g     F .text	0000000000000014              st_select_lex_node::set_braces(bool)
0000000001087240  w    O .data.rel.ro	0000000000000030              vtable for Create_func_numinteriorring
0000000001086bb0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_time_format
000000000090f958  w    F .text	0000000000000026              table_ews_global_by_event_name::~table_ews_global_by_event_name()
00000000007e2800 g     F .text	0000000000000134              Item_row::Item_row(List<Item>&)
0000000000767e22  w    F .text	000000000000002b              Field_set::~Field_set()
000000000082ddd6  w    F .text	0000000000000041              TC_LOG_DUMMY::~TC_LOG_DUMMY()
00000000010edb80 g     O .data	0000000000000018              sql_print_message_handlers
00000000007c003e  w    F .text	000000000000002d              Create_func_isnull::Create_func_isnull()
00000000005d0232  w    F .text	000000000000001d              List_iterator<Key>::operator++(int)
000000000088a44a g     F .text	000000000000006c              sp_pcontext::push_context(label_scope_type)
00000000006f3ccc g     F .text	00000000000002e1              MDL_context::upgrade_shared_lock_to_exclusive(MDL_ticket*, unsigned long)
0000000000567f0a g     F .text	00000000000001fa              Rpl_filter::db_ok(char const*)
00000000006bb180  w    F .text	0000000000000026              List<String>::prepand(List<String>*)
0000000000889b3c  w    F .text	000000000000001b              List<LEX>::List()
00000000008590ea g     F .text	000000000000004c              SEL_ARG::first()
000000000070a242  w    F .text	0000000000000056              Sys_var_keycache::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000007971c0  w    F .text	0000000000000045              Item_param::is_null()
0000000000848670 g     F .text	00000000000000c7              Incident_log_event::write_data_header(st_io_cache*)
000000000090e374  w    F .text	0000000000000026              table_events_waits_history_long::~table_events_waits_history_long()
0000000000000000       F *UND*	0000000000000000              read@@GLIBC_2.2.5
000000000106c738  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_session_special
00000000005c880e g     F .text	000000000000002b              Query_arena::cleanup_stmt()
00000000008299d6 g     F .text	00000000000000c9              MYSQL_BIN_LOG::wait_for_update_relay_log(THD*)
00000000008894dc  w    F .text	000000000000002b              sp_instr_hpush_jump::~sp_instr_hpush_jump()
0000000000849568  w    F .text	000000000000000f              Execute_load_query_log_event::get_type_code()
00000000005c5236 g     F .text	00000000000000a1              select_to_file::send_error(unsigned int, char const*)
0000000000769de0 g     F .text	00000000000002f9              Copy_field::set(Field*, Field*, bool)
00000000007b740a g     F .text	000000000000006a              item_create_cleanup()
000000000087226a  w    F .text	000000000000000f              QUICK_SELECT_DESC::get_type()
00000000005b5cd6 g     F .text	00000000000001c1              Query_cache::invalidate(THD*, TABLE_LIST*, char)
00000000008a8fb4  w    F .text	00000000000000c1              READ_INFO::skip_data_till_eof()
00000000006df93c  w    F .text	0000000000000026              TC_LOG::~TC_LOG()
00000000007b160e  w    F .text	000000000000002b              Item_func_eq::~Item_func_eq()
00000000010c39e0  w    O .data.rel.ro	0000000000000078              vtable for sp_instr_opt_meta
00000000007e1b3a  w    F .text	0000000000000011              Item_func_y::func_name() const
0000000000874002  w    F .text	000000000000001b              List_iterator<SEL_IMERGE>::remove()
0000000000920616  w    F .text	0000000000000046              ha_myisam::~ha_myisam()
00000000010a58f8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_rpad
0000000000610242 g     F .text	0000000000000086              sys_var_pluginvar::plugin_var_typelib()
000000000077787c g     F .text	0000000000000043              handler::ha_rename_table(char const*, char const*)
0000000000648d12 g     F .text	0000000000000051              read_first_record_seq(st_join_table*)
000000000067d459 g     F .text	0000000000000058              check_n_cut_mysql50_prefix(char const*, char*, unsigned int)
00000000013758a0 g     O .bss	0000000000000060              my_locale_de_CH
00000000006978a8 g     F .text	0000000000000038              Table_triggers_list::set_parse_error_message(char*)
00000000008494f6  w    F .text	0000000000000046              Execute_load_query_log_event::~Execute_load_query_log_event()
00000000010f1980 g     O .data	00000000000000d0              builtin_myisammrg_plugin
0000000001375000 g     O .bss	0000000000000060              my_locale_ta_IN
00000000007c4fc8 g     F .text	0000000000000091              Item_func::val_decimal(my_decimal*)
00000000007ee5e6 g     F .text	00000000000000a9              Item_func_conv_charset::print(String*, enum_query_type)
00000000012190c0 g     O .data	0000000000000101              ctype_koi8r_bin
0000000000783218 g     F .text	00000000000000d5              Item_field::Item_field(THD*, Item_field*)
0000000000917f9a g     F .text	0000000000000211              table_all_instr_class::rnd_next()
000000000136d260 g     O .bss	000000000000001e              system_time_zone
000000000073c1a8  w    F .text	000000000000002a              sp_instr_hpush_jump::add_condition(sp_cond_type*)
00000000008b99d8 g     F .text	000000000000023d              create_partition_name(char*, char const*, char const*, unsigned int, bool)
00000000008c234a  w    F .text	0000000000000046              Item_nodeset_func_union::~Item_nodeset_func_union()
00000000007a6cc6 g     F .text	00000000000000b7              in_datetime::get_value(Item*)
00000000007ff0f0 g     F .text	0000000000000290              Aggregator_distinct::add()
000000000107aab0  w    O .data.rel.ro	0000000000000360              vtable for Item_int
0000000000678b46  w    F .text	0000000000000026              List_iterator<p_elem_val>::List_iterator(List<p_elem_val>&)
0000000000912f2c g     F .text	00000000000000b9              table_cond_instances::rnd_pos(void const*)
0000000000598c5a  w    F .text	0000000000000036              TABLE_LIST::is_anonymous_derived_table() const
000000000097662d g     F .text	0000000000000911              _create_index_by_sort
000000000138dee0 g     O .bss	0000000000000100              table_rwlock_instances::m_table_lock
00000000006b3442 g     F .text	0000000000000427              open_table_error(TABLE_SHARE*, int, int, int)
0000000000981d74 g     F .text	0000000000000050              ha_heap::enable_indexes(unsigned int)
0000000000808db8  w    F .text	000000000000002e              Item_sum_count::func_name() const
000000000057a0fe  w    F .text	0000000000000014              MYSQL_BIN_LOG::get_log_file()
000000000077e93a g     F .text	00000000000000b4              Item::val_decimal_from_date(my_decimal*)
000000000088cef6  w    F .text	000000000000002b              sp_cursor::~sp_cursor()
00000000005dec2a g     F .text	0000000000001553              mysql_insert(THD*, TABLE_LIST*, List<Item>&, List<List<Item> >&, List<Item>&, List<Item>&, enum_duplicates, bool)
00000000007adc34  w    F .text	0000000000000060              Item_int_with_ref::Item_int_with_ref(long long, Item*, char)
00000000008c0ad0  w    F .text	00000000000000b0              Item_nodeset_func::prepare_nodes()
0000000000566138 g     F .text	0000000000000080              init_slave_list()
0000000000798360  w    F .text	00000000000000b3              Item_outer_ref::Item_outer_ref(Name_resolution_context*, Item_field*)
00000000005aeee0  w    F .text	000000000000003a              MDL_ticket::is_upgradable_or_exclusive() const
000000000073b140  w    F .text	00000000000000d8              Item_trigger_field::Item_trigger_field(Name_resolution_context*, Item_trigger_field::row_version_type, char const*, unsigned long, bool)
00000000005c5dda g     F .text	00000000000017b9              select_export::send_data(List<Item>&)
00000000005bf62e  w    F .text	0000000000000071              Query_cache_wait_state::Query_cache_wait_state(THD*, char const*, char const*, unsigned int)
000000000074c480 g     F .text	000000000000042c              Field_new_decimal::store(char const*, unsigned int, charset_info_st*)
000000000106a908  w    O .data.rel.ro	0000000000000398              vtable for Item_func_trig_cond
000000000065c6d6  w    F .text	0000000000000026              List<Item>::concat(List<Item>*)
000000000080e314 g     F .text	00000000000000dc              Item_func_yearweek::val_int()
0000000000739bde  w    F .text	0000000000000052              Item_func_right::Item_func_right(Item*, Item*)
0000000001217e60 g     O .data	0000000000000100              to_upper_greek_bin
00000000012074c0 g     O .data	0000000000000100              to_upper_dec8_swedish_ci
0000000000663f3e g     F .text	00000000000001f5              remove_status_vars(st_mysql_show_var*)
00000000008c10d2  w    F .text	0000000000000063              Item_nodeset_func_axisbyname::Item_nodeset_func_axisbyname(Item*, char const*, unsigned int, String*)
00000000013756c0 g     O .bss	0000000000000060              my_locale_ar_QA
000000000069839a  w    F .text	000000000000001f              unsigned long long* alloc_type<unsigned long long>(st_mem_root*)
00000000006786ac  w    F .text	0000000000000013              List_iterator_fast<char>::replace(char*)
000000000120cb80 g     O .data	0000000000000100              sort_order_cp1251_ukrainian_ci
00000000005c86ee g     F .text	0000000000000017              select_dumpvar::cleanup()
0000000000ba3258 g     F .text	000000000000077c              my_vsnprintf_ex
00000000005e96b0  w    F .text	000000000000001a              I_List<Delayed_insert>::is_empty()
00000000005f110a  w    F .text	0000000000000020              Lex_input_stream::yyPeekn(int)
00000000007672b2  w    F .text	000000000000000f              Field_enum::real_type() const
00000000007ae740  w    F .text	000000000000000f              Item_func_eq::rev_functype() const
00000000007f22a0  w    F .text	0000000000000011              Item_func_hex::func_name() const
000000000080e3f0 g     F .text	00000000000000d0              Item_func_weekday::val_int()
0000000001386620 g     O .bss	0000000000000008              Create_func_make_set::s_singleton
0000000000709076  w    F .text	0000000000000046              Sys_var_mybool::session_save_default(THD*, set_var*)
00000000010efe60 g     O .data	0000000000000008              ft_boolean_syntax
00000000012b9e80 g     O .data	0000000000000a00              page021data
0000000001088260  w    O .data.rel.ro	0000000000000030              vtable for Create_func_centroid
00000000005f1e52  w    F .text	000000000000001b              List<Item_param>::List()
0000000000899886  w    F .text	0000000000000052              Procedure::Procedure(select_result*, unsigned int)
00000000007bde42  w    F .text	000000000000002d              Create_func_coercibility::Create_func_coercibility()
00000000006f5fec  w    F .text	000000000000000f              I_P_List_no_push_back<MDL_object_lock>::set_last(MDL_object_lock**)
00000000010ab6b0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_insert
0000000000981430 g     F .text	00000000000000cf              ha_heap::delete_row(unsigned char const*)
00000000007ff8a0 g     F .text	00000000000002d9              Item_sum_hybrid::fix_fields(THD*, Item**)
00000000007c12fe  w    F .text	000000000000002d              Create_func_period_diff::Create_func_period_diff()
0000000000873283  w    F .text	0000000000000027              TABLE_READ_PLAN::operator new(unsigned long, st_mem_root*)
00000000009297ee g     F .text	00000000000015a3              mi_repair_by_sort
000000000079446c g     F .text	0000000000000091              Item_cache_str::val_decimal(my_decimal*)
0000000000592453 g     F .text	0000000000000477              fill_schema_schema_privileges(THD*, TABLE_LIST*, Item*)
0000000000558a6e  w    F .text	000000000000001f              base_ilist::is_empty()
00000000007e3cde g     F .text	000000000000006a              Item_str_func::fix_fields(THD*, Item**)
0000000000815eea  w    F .text	000000000000000f              Item_func_weekday::result_type() const
00000000007e2224  w    F .text	0000000000000046              Item_func_isempty::~Item_func_isempty()
00000000005d1dd4  w    F .text	000000000000011c              st_select_lex::~st_select_lex()
00000000007e1548  w    F .text	0000000000000046              Item_geometry_func::~Item_geometry_func()
000000000078c982 g     F .text	000000000000001e              Item_null::save_safe_in_field(Field*)
00000000006594ee  w    F .text	000000000000000f              Item_null::field_type() const
00000000010edba0 g     O .data	00000000000000d0              builtin_binlog_plugin
00000000006eb52c g     F .text	0000000000000242              Event_parse_data::init_execute_at(THD*)
0000000000817248  w    F .text	0000000000000046              Item_func_last_day::~Item_func_last_day()
0000000000759fba g     F .text	000000000000014f              Field_varstring::key_cmp(unsigned char const*, unsigned int)
00000000005b10aa  w    F .text	000000000000001b              List_iterator_fast<Item>::rewind()
00000000008527da g     F .text	0000000000000409              unpack_row_old(Relay_log_info*, TABLE*, unsigned int, unsigned char*, unsigned char const*, st_bitmap const*, unsigned char const**, unsigned long*, st_bitmap*, Log_event_type)
000000000079b9ac  w    F .text	000000000000002e              List<Cached_item>::List(List<Cached_item> const&, st_mem_root*)
00000000006d7fce  w    F .text	000000000000000b              injector::~injector()
000000000080fc06 g     F .text	0000000000000072              Item_func_sysdate_local::val_int()
00000000008b925d g     F .text	000000000000043f              get_part_iter_for_interval_via_walking(partition_info*, bool, unsigned int*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, st_partition_iter*)
00000000006b2b2e g     F .text	000000000000012c              read_string(int, unsigned char**, unsigned long)
00000000007c13c2  w    F .text	0000000000000041              Create_func_pi::~Create_func_pi()
0000000000568a4a g     F .text	0000000000000064              Rpl_filter::init_table_rule_hash(st_hash*, bool*)
0000000000ba55dc g     F .text	0000000000000079              my_strchr
00000000006d7af2 g     F .text	0000000000000047              injector::free_instance()
00000000005aeace g     F .text	00000000000000cc              open_system_table_for_update(THD*, TABLE_LIST*)
000000000073c6e6  w    F .text	000000000000001a              sp_pcontext::current_cursor_count()
0000000000796292  w    F .text	0000000000000104              Field_blob::Field_blob(unsigned int, bool, char const*, charset_info_st*, bool)
00000000007bf06c  w    F .text	000000000000002d              Create_func_export_set::Create_func_export_set()
00000000007c2b04  w    F .text	000000000000002d              Create_func_uuid_short::Create_func_uuid_short()
0000000000ba54bb g     F .text	000000000000001e              my_xml_set_enter_handler
0000000000767b72  w    F .text	0000000000000026              List<Create_field>::prepand(List<Create_field>*)
00000000007df2d2 g     F .text	000000000000000f              Item_func_point::get_geometry_type() const
00000000006f6064  w    F .text	0000000000000016              I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>::next_ptr(MDL_ticket*)
0000000000876d12  w    F .text	0000000000000046              Item_proc::~Item_proc()
0000000000618492 g     F .text	000000000000006f              Select_fetch_protocol_binary::send_result_set_metadata(List<Item>&, unsigned int)
000000000073b76d  w    F .text	000000000000003a              add_gorder_to_list(THD*, Item*, bool)
00000000005667e2  w    F .text	0000000000000034              Item::val_int_endpoint(bool, bool*)
00000000005eea36 g     F .text	00000000000001b6              st_select_lex_unit::print(String*, enum_query_type)
000000000073b5b6  w    F .text	0000000000000060              Table_ident::Table_ident(st_select_lex_unit*)
000000000085835a g     F .text	000000000000012f              QUICK_ROR_INTERSECT_SELECT::~QUICK_ROR_INTERSECT_SELECT()
00000000008083d6 g     F .text	00000000000000a3              Item_func_group_concat::~Item_func_group_concat()
000000000070bca2  w    F .text	000000000000002e              Sys_var_debug_sync::session_save_default(THD*, set_var*)
000000000073b244  w    F .text	000000000000001a              st_select_lex::clear_index_hints()
00000000005cff0e  w    F .text	000000000000002d              Rows_log_event::set_flags(unsigned short)
0000000000785ce4 g     F .text	000000000000009d              Item_param::set_int(long long, unsigned int)
00000000007bd060  w    F .text	0000000000000041              Create_udf_func::~Create_udf_func()
00000000007b37c6 g     F .text	0000000000000133              Create_func_encrypt::create_native(THD*, st_mysql_lex_string, List<Item>*)
000000000069d886 g     F .text	0000000000000165              st_select_lex::cleanup()
0000000000808e2a  w    F .text	0000000000000025              Item_avg_field::field_type() const
000000000054e16e g     F .text	000000000000012d              close_connection(THD*, unsigned int)
00000000006f0a08  w    F .text	000000000000001b              Binlog_transmit_delegate::Binlog_transmit_delegate()
0000000000797708  w    F .text	0000000000000030              Item_static_string_func::print(String*, enum_query_type)
00000000007aee56  w    F .text	0000000000000046              in_vector::~in_vector()
000000000090f8f0  w    F .text	0000000000000026              table_all_instr_class::~table_all_instr_class()
0000000000606760  w    F .text	0000000000000042              Key_part_spec::Key_part_spec(st_mysql_lex_string const&, unsigned int)
0000000000737aaa  w    F .text	000000000000002d              Item_sum::init_aggregator()
00000000005690a0  w    F .text	000000000000001b              I_List<i_string_pair>::~I_List()
00000000007bf648  w    F .text	000000000000002d              Create_func_geometry_from_wkb::Create_func_geometry_from_wkb()
0000000000873b50  w    F .text	000000000000001b              List<QUICK_RANGE>::List()
000000000078006e g     F .text	0000000000000174              Item_static_float_func::safe_charset_converter(charset_info_st*)
00000000006c6a50  w    F .text	0000000000000041              Pack_header_error_handler::~Pack_header_error_handler()
0000000000816a04  w    F .text	000000000000000f              Item_char_typecast::functype() const
00000000008907fa g     F .text	00000000000001c7              Gis_multi_line_string::init_from_wkb(char const*, unsigned int, Geometry::wkbByteOrder, String*)
00000000005b04b2  w    F .text	0000000000000012              Open_table_context::get_timeout() const
0000000000806dc6 g     F .text	0000000000000221              Item_func_group_concat::cleanup()
00000000008c3ec4 g     F .text	0000000000000079              event_worker_thread
000000000076492a  w    F .text	000000000000000e              Field::set_derivation(Derivation)
00000000008f2828 g     F .text	000000000000019d              my_stat
000000000065b5ba  w    F .text	00000000000000ca              store_key_field::store_key_field(THD*, Field*, unsigned char*, unsigned char*, unsigned int, Field*, char const*)
00000000008e322c g     F .text	000000000000012d              reset_key_cache_counters
000000000059b822  w    F .text	0000000000000026              DML_prelocking_strategy::~DML_prelocking_strategy()
0000000000849940  w    F .text	0000000000000016              Relay_log_info::set_long_find_row_note_printed()
0000000000558864  w    F .text	000000000000003e              base_list_iterator::init(base_list&)
00000000010dd7c0 g     O .data	0000000000000320              columns_fields_info
0000000000917f6a g     F .text	000000000000002f              table_all_instr_class::reset_position()
00000000007c2f8e  w    F .text	0000000000000026              Create_func_xml_update::~Create_func_xml_update()
000000000073aa64  w    F .text	000000000000002d              Item_func_curdate_local::Item_func_curdate_local()
00000000007b27f0 g     F .text	0000000000000050              Create_func_asin::create(THD*, Item*)
00000000007c17ae  w    F .text	000000000000002d              Create_func_reverse::Create_func_reverse()
000000000059362d g     F .text	000000000000005b              get_cached_schema_access(st_grant_internal_info*, char const*)
0000000000564bac g     F .text	0000000000000212              Protocol_binary::send_out_parameters(List<Item_param>*)
00000000007bfe7c  w    F .text	000000000000002d              Create_func_is_used_lock::Create_func_is_used_lock()
00000000007842be g     F .text	00000000000001b7              Item_field::val_bool_result()
00000000007f9940 g     F .text	00000000000000bd              Item_in_subselect::fix_fields(THD*, Item**)
00000000005cf904  w    F .text	000000000000001b              st_xid_state::st_xid_state()
0000000001394cb0 g     O .bss	0000000000000008              sql_print_warning_hook
0000000000913304  w    F .text	0000000000000026              table_cond_instances::~table_cond_instances()
000000000057046e g     F .text	0000000000001761              show_master_info(THD*, Master_info*)
00000000007da61a  w    F .text	0000000000000046              Item_func_signed::~Item_func_signed()
0000000000784476 g     F .text	000000000000003c              Item_field::is_null_result()
0000000000906fef g     F .text	0000000000000041              destroy_rwlock(PFS_rwlock*)
0000000000000000       F *UND*	0000000000000000              sched_yield@@GLIBC_2.2.5
00000000005c078a g     F .text	0000000000000015              thd_get_scheduler_data(THD*)
00000000005d00ca  w    F .text	000000000000001a              List<Key>::pop()
000000000073ae86  w    F .text	0000000000000038              Item_time_typecast::Item_time_typecast(Item*)
00000000008d9d86 g     F .text	00000000000000a6              _my_b_get
00000000007bee14  w    F .text	000000000000002d              Create_func_endpoint::Create_func_endpoint()
0000000000ba6800 g     F .text	0000000000000014              vio_type
000000000078ed12 g     F .text	00000000000000bb              Item_ref::Item_ref(TABLE_LIST*, Item**, char const*, bool)
00000000010efa30 g     O .data	0000000000000010              table_mutex_instances::m_field_def
00000000010763b0  w    O .data.rel.ro	0000000000000358              vtable for Item_insert_value
0000000000848dae  w    F .text	00000000000000a8              Query_log_event::is_trans_keyword()
00000000010a7220  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_current_user
000000000070c398  w    F .text	0000000000000031              Sys_var_session_special::session_update(THD*, set_var*)
000000000065ca3e  w    F .text	0000000000000056              store_key_field::~store_key_field()
00000000005cf1de  w    F .text	000000000000001b              SQL_I_List<Item_trigger_field>::~SQL_I_List()
0000000000000000       F *UND*	0000000000000000              getpid@@GLIBC_2.2.5
00000000007d863e g     F .text	0000000000000174              Item_func_is_free_lock::val_int()
0000000001373da0 g     O .bss	0000000000000060              my_locale_ar_AE
0000000000774e12 g     F .text	00000000000000f9              handler::clone(char const*, st_mem_root*)
000000000059b31a  w    F .text	000000000000001b              List<st_lex_user>::List()
0000000000909ad8 g     F .text	0000000000000532              find_or_create_table_share(PFS_thread*, char const*, unsigned int, char const*, unsigned int)
00000000006185aa g     F .text	0000000000000061              Reprepare_observer::report_error(THD*)
00000000008093c8  w    F .text	000000000000000f              Item_sum_std::sum_func() const
00000000007e2934 g     F .text	0000000000000086              Item_row::illegal_method_call(char const*)
00000000006bd16d g     F .text	000000000000005f              make_datetime(st_date_time_format const*, st_mysql_time const*, String*)
00000000007bb3c2  w    F .text	000000000000004a              Item_func_md5::Item_func_md5(Item*)
00000000005d0dd4  w    F .text	000000000000002d              Item_change_record::Item_change_record()
0000000000607ec2  w    F .text	000000000000001b              List<Item_equal>::List()
000000000090db8c g     F .text	0000000000000070              table_events_waits_history_long::table_events_waits_history_long()
0000000000912e5a g     F .text	00000000000000d2              table_cond_instances::rnd_next()
00000000005d0796  w    F .text	000000000000001a              List<Alter_drop>::pop()
00000000005a0125 g     F .text	00000000000001e7              close_temporary_table(THD*, TABLE*, bool, bool)
00000000007c3078  w    F .text	0000000000000041              Create_func_year_week::~Create_func_year_week()
00000000005cf0d4  w    F .text	000000000000001b              List<List<Item> >::~List()
00000000007a026a g     F .text	00000000000001e2              Arg_comparator::compare_row()
0000000000000000       F *UND*	0000000000000000              dlopen@@GLIBC_2.2.5
00000000009856be g     F .text	00000000000004f2              heap_update_auto_increment
00000000005c86c6 g     F .text	0000000000000027              select_dumpvar::check_simple_select() const
000000000087e7f2  w    F .text	0000000000000035              Proc_table_intact::Proc_table_intact()
00000000006f55c8  w    F .text	0000000000000047              MDL_lock::~MDL_lock()
0000000000560e69 g     F .text	000000000000017b              net_send_error(THD*, unsigned int, char const*, char const*)
000000000120a5c0 g     O .data	0000000000000100              to_upper_cp1251_bulgarian_ci
000000000095a613 g     F .text	000000000000026d              _mi_kpos
0000000000765cc8  w    F .text	0000000000000089              Field_double::Field_double(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
0000000000817d40  w    F .text	0000000000000046              Item_func_curdate_utc::~Item_func_curdate_utc()
00000000008c061c  w    F .text	000000000000006c              Item_xml_str_func::Item_xml_str_func(Item*, Item*)
000000000055ff98 g     F .text	0000000000000035              make_scrambled_password_323
0000000000659fd4  w    F .text	000000000000004b              Item_func_trig_cond::Item_func_trig_cond(Item*, bool*)
0000000001370858 g     O .bss	0000000000000004              key_relay_log_info_start_cond
0000000000ba6f5c g     F .text	00000000000000f8              vio_is_connected
00000000005e553a g     F .text	000000000000011b              select_insert::select_insert(TABLE_LIST*, TABLE*, List<Item>*, List<Item>*, List<Item>*, enum_duplicates, bool)
000000000076652c  w    F .text	0000000000000011              Field_newdate::charset() const
00000000008167e6  w    F .text	0000000000000023              Item_func_sec_to_time::fix_length_and_dec()
00000000007664dc  w    F .text	000000000000000f              Field_newdate::match_collation_to_optimize_range() const
000000000074de5a g     F .text	000000000000003b              Field_tiny::send_binary(Protocol*)
000000000136f940 g     O .bss	0000000000000040              LOCK_grant
0000000000739bde  w    F .text	0000000000000052              Item_func_right::Item_func_right(Item*, Item*)
000000000079b868  w    F .text	000000000000004a              Cached_item_real::Cached_item_real(Item*)
0000000000799d90  w    F .text	000000000000000f              List_iterator_fast<Item>::after(Item*)
00000000007f4ca2 g     F .text	00000000000002cb              Item_subselect::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
000000000073c6c4  w    F .text	0000000000000021              sp_pcontext::add_handlers(unsigned int)
0000000000000000       F *UND*	0000000000000000              pthread_mutex_lock@@GLIBC_2.2.5
00000000010eeae0 g     O .data	0000000000000001              my_getopt_print_errors
000000000120d5c0 g     O .data	0000000000000100              to_lower_cp1250_general_ci
00000000005affa8  w    F .text	0000000000000035              Query_arena::~Query_arena()
000000000079a73a  w    F .text	0000000000000046              Item_ref_null_helper::~Item_ref_null_helper()
0000000000b82dee g     F .text	0000000000000092              my_strcasecmp_8bit
00000000009869a1 g     F .text	00000000000001dc              heap_rfirst
00000000007b9d00  w    F .text	0000000000000050              Item_real_func::Item_real_func(Item*, Item*)
00000000007fc67c  w    F .text	0000000000000017              subselect_single_select_engine::is_executed() const
00000000007f19ee  w    F .text	0000000000000058              Item_str_conv::~Item_str_conv()
000000000069daf2  w    F .text	00000000000000e1              JOIN::~JOIN()
000000000138d9e0 g     O .bss	0000000000000100              table_performance_timers::m_table_lock
0000000000804a22 g     F .text	0000000000000203              Item_sum_hybrid::min_max_update_decimal_field()
000000000090edaa g     F .text	000000000000003f              table_events_waits_summary_by_instance::table_events_waits_summary_by_instance()
0000000000000000       F *UND*	0000000000000000              chdir@@GLIBC_2.2.5
00000000007adeee  w    F .text	0000000000000066              Arg_comparator::compare()
0000000000739c30  w    F .text	0000000000000052              Item_func_substr::Item_func_substr(Item*, Item*)
00000000007aeb74  w    F .text	000000000000002c              Item_func_strcmp::print(String*, enum_query_type)
00000000007bb1b4  w    F .text	0000000000000040              Item_func_ifnull::Item_func_ifnull(Item*, Item*)
000000000078115a g     F .text	0000000000000039              Item_sp_variable::is_null()
00000000005f0a6a  w    F .text	000000000000003a              Alter_drop::clone(st_mem_root*) const
00000000008c1296  w    F .text	0000000000000011              Item_nodeset_func_selfbyname::func_name() const
00000000007ae7a2  w    F .text	000000000000000f              Item_func_equal::eq_cmp_result() const
0000000000904952 g     F .text	00000000000000c5              ha_perfschema::close()
00000000009650c7 g     F .text	000000000000020c              rtree_find_next
000000000095532c g     F .text	0000000000000246              _mi_write_keypage
00000000007bf5b2  w    F .text	000000000000002d              Create_func_geometry_from_text::Create_func_geometry_from_text()
00000000007e85ce g     F .text	000000000000006e              Item_func_right::fix_length_and_dec()
00000000007dac50  w    F .text	0000000000000011              Item_func_floor::func_name() const
00000000007106e0 g     F .text	00000000000001c3              case_stmt_action_when(LEX*, Item*, bool)
000000000079b8b2  w    F .text	0000000000000049              Cached_item_int::Cached_item_int(Item*)
00000000005597e0  w    F .text	0000000000000026              I_List_iterator<THD>::I_List_iterator(I_List<THD>&)
00000000005c0a9e g     F .text	000000000000002d              thd_lock_data(THD*)
000000000091087e  w    F .text	0000000000000041              table_file_summary_by_event_name::~table_file_summary_by_event_name()
0000000000849126  w    F .text	000000000000000f              Xid_log_event::is_valid() const
0000000000000000       F *UND*	0000000000000000              backtrace@@GLIBC_2.2.5
00000000007bf3f0  w    F .text	000000000000002d              Create_func_found_rows::Create_func_found_rows()
0000000000800836 g     F .text	0000000000000063              Aggregator_distinct::unique_walk_function(void*)
00000000012072a0 g     O .data	0000000000000101              ctype_dec8_swedish_ci
000000000059b778  w    F .text	0000000000000041              Dummy_error_handler::~Dummy_error_handler()
00000000006f5234  w    F .text	0000000000000026              MDL_key::MDL_key(MDL_key const*)
0000000000606f1e  w    F .text	0000000000000086              Item_cond::Item_cond(Item*, Item*)
0000000000559ce0  w    F .text	000000000000001b              I_List<NAMED_ILINK>::empty()
00000000008c2882  w    F .text	000000000000002b              Item_func_xml_update::~Item_func_xml_update()
00000000007dc368  w    F .text	000000000000002b              Item_func_inet_aton::~Item_func_inet_aton()
00000000006f58d4  w    F .text	0000000000000018              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> >::is_empty() const
0000000001086970  w    O .data.rel.ro	0000000000000030              vtable for Create_func_uuid_short
00000000007dc686  w    F .text	000000000000002b              Item_func_benchmark::~Item_func_benchmark()
00000000010df140 g     O .data	0000000000000208              key_column_usage_fields_info
00000000005e8e52  w    F .text	000000000000033c              Delayed_insert::Delayed_insert(st_select_lex*)
00000000010c0f00  w    O .data.rel.ro	0000000000000040              vtable for TC_LOG_MMAP
00000000008c06fa  w    F .text	0000000000000040              Item_func_xml_extractvalue::Item_func_xml_extractvalue(Item*, Item*)
00000000006c165c g     F .text	00000000000003b3              my_tz_find(THD*, String const*)
0000000000871fd0  w    F .text	0000000000000093              QUICK_INDEX_MERGE_SELECT::is_valid()
00000000012cc360 g     O .data	00000000000000b0              my_charset_utf16_spanish_uca_ci
00000000006e5ef9 g     F .text	0000000000000127              initialize_audit_plugin(st_plugin_int*)
0000000000874252  w    F .text	000000000000001b              List_iterator<Item_sum>::rewind()
000000000136cbf0 g     O .bss	0000000000000001              opt_log_queries_not_using_indexes
0000000000876a94 g     F .text	000000000000004d              Item_proc_int::val_decimal(my_decimal*)
00000000007b7098 g     F .text	0000000000000050              Create_func_y::create(THD*, Item*)
0000000000982812  w    F .text	0000000000000037              ha_heap::table_type() const
0000000000560741 g     F .text	0000000000000035              make_scrambled_password
000000000084b658  w    F .text	000000000000001b              Slave_reporting_capability::Error::Error()
00000000010cb9c8  w    O .data.rel.ro	0000000000000020              vtable for ha_innobase_add_index
0000000000564f0c  w    F .text	0000000000000035              String::alloc(unsigned int)
0000000000566ef8  w    F .text	0000000000000012              Item::replace_equal_field(unsigned char*)
000000000073aa36  w    F .text	000000000000002d              Item_func_curdate::Item_func_curdate()
0000000000750256 g     F .text	00000000000000a9              Field_long::send_binary(Protocol*)
000000000079b832  w    F .text	0000000000000035              Cached_item::Cached_item()
000000000076598a  w    F .text	0000000000000037              Field_long::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000008c3da1 g     F .text	0000000000000123              event_scheduler_thread
000000000075a4ce g     F .text	0000000000000051              Field_varstring::data_length()
0000000000888184 g     F .text	00000000000000b1              sp_instr_set_case_expr::opt_mark(sp_head*, List<sp_instr>*)
0000000000709964  w    F .text	0000000000000026              Sys_var_proxy_user::~Sys_var_proxy_user()
00000000007c2c5e  w    F .text	0000000000000041              Create_func_weekday::~Create_func_weekday()
00000000007baf86  w    F .text	0000000000000057              Item_master_pos_wait::Item_master_pos_wait(Item*, Item*, Item*)
00000000005d17de  w    F .text	000000000000001b              Key_part_spec::~Key_part_spec()
00000000005ceb3c  w    F .text	000000000000001b              List<st_udf_func>::~List()
00000000007ae8ca  w    F .text	0000000000000011              Item_func_gt::func_name() const
000000000079688c  w    F .text	0000000000000035              Settable_routine_parameter::~Settable_routine_parameter()
00000000007ae28a  w    F .text	000000000000000f              Gt_creator::l_op() const
0000000000678786  w    F .text	000000000000001b              List_iterator_fast<char>::rewind()
000000000110f980 g     O .data	00000000000000b0              my_charset_big5_chinese_ci
00000000005e5372 g     F .text	00000000000001c7              mysql_insert_select_prepare(THD*)
000000000073a5bc  w    F .text	000000000000002d              Item_date::Item_date()
000000000136cbd0 g     O .bss	0000000000000010              opt_init_slave
000000000106ed68  w    O .data.rel.ro	0000000000000398              vtable for Item_func_bit
00000000007ba7ae  w    F .text	0000000000000058              Item_func_length::~Item_func_length()
00000000007e1eac  w    F .text	0000000000000058              Item_func_x::~Item_func_x()
00000000008742a8  w    F .text	0000000000000053              QUICK_SELECT_DESC::~QUICK_SELECT_DESC()
000000000089351e  w    F .text	0000000000000013              Geometry::centroid(String*) const
0000000000913882  w    F .text	0000000000000026              table_threads::~table_threads()
000000000073bb0c  w    F .text	0000000000000014              sp_head::instructions()
000000000106c7b0  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_bit
0000000000805f98 g     F .text	0000000000000025              Item_sum_udf_str::val_decimal(my_decimal*)
000000000136ce60 g     O .bss	0000000000000200              mysql_home
000000000136f000 g     O .bss	0000000000000004              have_ssl
0000000000739b8c  w    F .text	0000000000000052              Item_func_left::Item_func_left(Item*, Item*)
0000000001086be0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_tan
00000000005f0cbe  w    F .text	0000000000000034              st_select_lex::return_after_parsing()
000000000080f448 g     F .text	00000000000000a6              Item_func_curdate::fix_length_and_dec()
00000000007e2470  w    F .text	0000000000000046              Item_func_spatial_decomp::~Item_func_spatial_decomp()
000000000077e1ba g     F .text	0000000000000099              Hybrid_type_traits_decimal::val_str(Hybrid_type*, String*, unsigned char) const
000000000061bb20 g     F .text	00000000000000d5              Protocol_local::send_result_set_metadata(List<Item>*, unsigned int)
0000000000798290  w    F .text	000000000000000f              Item_direct_ref::ref_type()
000000000098dd6e g     F .text	000000000000009c              ha_myisammrg::rnd_next(unsigned char*)
000000000079774c  w    F .text	000000000000000f              Item_hex_string::type() const
00000000007fc4d8  w    F .text	0000000000000070              Item_in_subselect::Item_in_subselect()
0000000000917f0a g     F .text	0000000000000060              table_all_instr_class::table_all_instr_class(PFS_engine_table_share const*)
000000000056834a g     F .text	00000000000000bb              Rpl_filter::add_do_table(char const*)
000000000089b1dc g     F .text	00000000000001e5              mysql_open_cursor(THD*, select_result*, Server_side_cursor**)
00000000007bcb72  w    F .text	0000000000000040              Item_str_timefunc::Item_str_timefunc(Item*, Item*)
000000000054bf1a g     F .text	0000000000000074              Buffered_logs::buffer(loglevel, char const*)
000000000065a0a0  w    F .text	0000000000000015              Item_func_trig_cond::get_trig_var()
000000000087724a  w    F .text	0000000000000046              Item_proc_real::~Item_proc_real()
00000000006069e4  w    F .text	000000000000001b              Item_result_field::set_result_field(Field*)
00000000010dcf40 g     O .data	0000000000000060              show_table_contributors
00000000007b0c9a  w    F .text	000000000000002b              cmp_item_decimal::~cmp_item_decimal()
0000000000858750 g     F .text	000000000000026e              QUICK_ROR_UNION_SELECT::reset()
00000000007655d8  w    F .text	000000000000002b              Field_short::reset()
000000000075140e g     F .text	00000000000001e1              Field_float::val_str(String*, String*)
000000000062c570 g     F .text	00000000000000b2              JOIN::save_join_tab()
00000000007fbecc g     F .text	0000000000000050              subselect_single_select_engine::change_result(Item_subselect*, select_subselect*)
00000000007dc504  w    F .text	000000000000002b              Item_func_get_user_var::~Item_func_get_user_var()
000000000059b088  w    F .text	000000000000001b              List_iterator<st_lex_user>::rewind()
000000000138d3e0 g     O .bss	0000000000000100              table_events_waits_summary_by_thread_by_event_name::m_table_lock
000000000106bbc0  w    O .data.rel.ro	0000000000000038              vtable for Stored_program_creation_ctx
00000000005f1a48  w    F .text	000000000000001b              List<TABLE_LIST>::List()
0000000001395688 g     O .bss	0000000000000008              thr_lock_thread_list
00000000008721ec  w    F .text	000000000000000f              QUICK_GROUP_MIN_MAX_SELECT::reverse_sorted()
0000000000558e80  w    F .text	0000000000000053              String::free()
00000000005b0966  w    F .text	00000000000000ac              I_P_List<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::push_front(TABLE*)
00000000007aeb0a  w    F .text	0000000000000011              Item_func_between::func_name() const
00000000008725f2  w    F .text	000000000000004b              SEL_ARG::cmp_max_to_max(SEL_ARG const*) const
000000000057b124 g     F .text	000000000000007b              sp_cache_flush_obsolete(sp_cache**, sp_head**)
000000000084352e g     F .text	0000000000000061              Rows_log_event::do_shall_skip(Relay_log_info*)
0000000000754386 g     F .text	00000000000000c6              Field_time::get_date(st_mysql_time*, unsigned int)
000000000073a5ea  w    F .text	000000000000002d              Item_date_func::Item_date_func()
0000000000709fe8  w    F .text	0000000000000026              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::~Sys_var_unsigned()
0000000001386740 g     O .bss	0000000000000008              Create_func_startpoint::s_singleton
000000000073994c  w    F .text	0000000000000058              Item_str_func::Item_str_func(Item*, Item*, Item*, Item*)
00000000006c7ed8 g     F .text	00000000000002b4              Event_job_data::load_from_row(THD*, TABLE*)
0000000000889eec  w    F .text	0000000000000026              List_iterator_fast<sp_cond_type>::List_iterator_fast(List<sp_cond_type>&)
00000000006bc1e3 g     F .text	0000000000000096              str_to_time(charset_info_st*, char const*, unsigned int, st_mysql_time*, int*)
000000000067783e g     F .text	00000000000001d8              show_create_trigger(THD*, sp_name const*)
00000000005d1904  w    F .text	000000000000001d              I_List_iterator<Item_change_record>::operator++(int)
0000000000815b24  w    F .text	0000000000000026              Item_func_hour::fix_length_and_dec()
00000000005ceae8  w    F .text	000000000000001b              List<Item_func_match>::~List()
00000000006067a2  w    F .text	00000000000000bc              Key::Key(Key::Keytype, st_mysql_lex_string const&, st_key_create_information*, bool, List<Key_part_spec>&)
00000000006ed8f6  w    F .text	000000000000002b              Sql_statement::~Sql_statement()
000000000120ca80 g     O .data	0000000000000100              to_upper_cp1251_ukrainian_ci
0000000000907534 g     F .text	00000000000000c4              sanitize_file_name(char const*)
00000000007bf172  w    F .text	0000000000000026              Create_func_exteriorring::~Create_func_exteriorring()
0000000000000000       F *UND*	0000000000000000              pthread_mutex_init@@GLIBC_2.2.5
00000000007f9a5c g     F .text	0000000000000114              Item_allany_subselect::print(String*, enum_query_type)
0000000000000000       F *UND*	0000000000000000              fread@@GLIBC_2.2.5
0000000000799fd0  w    F .text	0000000000000026              List<List<Item> >::prepand(List<List<Item> >*)
00000000005c3485 g     F .text	00000000000000a7              add_to_status(system_status_var*, system_status_var*)
00000000007b0a7c  w    F .text	0000000000000046              Item_func_bit_and::~Item_func_bit_and()
000000000098db2a g     F .text	00000000000000a1              ha_myisammrg::index_first(unsigned char*)
000000000062727c g     F .text	0000000000000420              fix_inner_refs(THD*, List<Item>&, st_select_lex*, Item**, st_order*)
000000000091168e g     F .text	000000000000002f              table_setup_instruments::reset_position()
00000000008cb38c  w    F .text	0000000000000046              Alter_table_optimize_partition_statement::~Alter_table_optimize_partition_statement()
000000000089abe8  w    F .text	0000000000000026              analyse::~analyse()
0000000000783d18 g     F .text	00000000000000a5              Item_field::val_real()
000000000090efc2 g     F .text	0000000000000055              table_events_waits_summary_by_instance::make_cond_row(PFS_cond*)
00000000007c1c5e  w    F .text	000000000000002d              Create_func_sign::Create_func_sign()
0000000000579977 g     F .text	00000000000001c7              rpl_master_has_bug(Relay_log_info const*, unsigned int, bool, bool (*)(void const*), void const*)
000000000073a41c  w    F .text	0000000000000048              Item_func_month::Item_func_month(Item*)
00000000008fcd10 g     F .text	00000000000000d6              thr_alarm_kill
0000000000808794  w    F .text	0000000000000017              Item_sum::is_null()
000000000073c534  w    F .text	0000000000000019              sp_pcontext::var_context2runtime(unsigned int)
00000000007bbb86  w    F .text	0000000000000069              Item_func_lpad::Item_func_lpad(Item*, Item*, Item*)
000000000098d69e g     F .text	00000000000000a3              ha_myisammrg::update_row(unsigned char const*, unsigned char*)
0000000000565672  w    F .text	000000000000001b              List<Item>::~List()
0000000001069140  w    O .data.rel.ro	0000000000000038              vtable for set_var_user
000000000077c29a  w    F .text	000000000000000b              handler::prepare_for_alter()
00000000007f1df0  w    F .text	0000000000000011              Item_func_decode::func_name() const
00000000012cc2a0 g     O .data	00000000000000b0              my_charset_utf16_estonian_uca_ci
00000000006db278  w    F .text	00000000000000bc              MY_LOCALE::MY_LOCALE(unsigned int, char const*, char const*, bool, st_typelib*, st_typelib*, st_typelib*, st_typelib*, unsigned int, unsigned int, unsigned int, unsigned int, char const*, my_locale_errmsgs*)
0000000001375f60 g     O .bss	0000000000000060              my_locale_es_HN
0000000001084be0  w    O .data.rel.ro	00000000000003a8              vtable for Item_func_eq
000000000090df4e  w    F .text	000000000000001a              PFS_simple_index::next()
00000000005ce3c0  w    F .text	0000000000000025              my_decimal_cmp(my_decimal const*, my_decimal const*)
0000000000796f64  w    F .text	0000000000000015              Item_field::get_tmp_table_field()
00000000010f1588 g     O .data	0000000000000004              myisam_log_file
0000000000824a28 g     F .text	00000000000004a4              MYSQL_BIN_LOG::purge_logs(char const*, bool, bool, bool, unsigned long long*)
00000000007be70c  w    F .text	000000000000002d              Create_func_dayofmonth::Create_func_dayofmonth()
0000000000b484b6 g     F .text	000000000000015c              row_purge_validate_pcur
00000000006596fa  w    F .text	000000000000003d              Item_uint::Item_uint(unsigned long long)
0000000000805e76 g     F .text	00000000000000d1              Item_sum_udf_str::fix_length_and_dec()
0000000000889acc  w    F .text	000000000000001b              List<LEX>::~List()
0000000000b5be5e g     F .text	0000000000000116              ha_tina::open_update_temp_file_if_needed()
00000000008ce17a g     F .text	0000000000000089              freeze_size
00000000007bb99c  w    F .text	0000000000000040              Item_func_decode::Item_func_decode(Item*, Item*)
0000000000c430f0 g     O .rodata	0000000000000008              MDL_object_lock::m_waiting_incompatible
00000000007bffd6  w    F .text	0000000000000041              Create_func_isempty::~Create_func_isempty()
00000000007b0b60  w    F .text	0000000000000046              Item_func_in::~Item_func_in()
00000000008579d6 g     F .text	0000000000000026              QUICK_INDEX_MERGE_SELECT::~QUICK_INDEX_MERGE_SELECT()
000000000073a23a  w    F .text	0000000000000038              Item_func_collation::Item_func_collation(Item*)
0000000000893a00  w    F .text	0000000000000041              Gis_multi_point::~Gis_multi_point()
00000000006b72a2 g     F .text	0000000000000121              TABLE_LIST::view_check_option(THD*, bool)
00000000008ff05d g     F .text	00000000000001ae              thr_reschedule_write_lock
0000000000889c82  w    F .text	0000000000000021              Dynamic_array<Item_splocal*>::back()
0000000000559ad8  w    F .text	0000000000000026              I_List<Statement>::append(Statement*)
0000000000849106  w    F .text	000000000000000f              Xid_log_event::get_type_code()
00000000007b5bb8 g     F .text	0000000000000050              Create_func_quote::create(THD*, Item*)
00000000006e607c g     F .text	0000000000000137              finalize_audit_plugin(st_plugin_int*)
0000000000981214 g     F .text	000000000000012e              ha_heap::write_row(unsigned char*)
000000000106a7a8  w    O .data.rel.ro	0000000000000030              vtable for store_key
0000000000834364 g     F .text	0000000000000799              Query_log_event::Query_log_event(THD*, char const*, unsigned long, bool, bool, bool, int)
00000000007be93e  w    F .text	0000000000000026              Create_func_decode::~Create_func_decode()
00000000005ef10e g     F .text	0000000000000296              LEX::LEX()
00000000005c5402 g     F .text	000000000000008b              select_to_file::~select_to_file()
00000000006b601a g     F .text	00000000000000b9              TABLE::reset_item_list(List<Item>*) const
00000000005dc8ba  w    F .text	000000000000004d              handler::ha_index_or_rnd_end()
000000000065c542  w    F .text	000000000000001d              List_iterator<Item_field>::operator++(int)
000000000078136e g     F .text	0000000000000073              Item_splocal::this_item_addr(THD*, Item**)
00000000007f1be0  w    F .text	0000000000000028              Item_func_password::fix_length_and_dec()
00000000005aeb9a g     F .text	0000000000000139              open_log_table(THD*, TABLE_LIST*, Open_tables_backup*)
0000000000566c08  w    F .text	000000000000000f              Item::compare_collation()
0000000000000000       F *UND*	0000000000000000              gethostname@@GLIBC_2.2.5
00000000012c8640 g     O .data	00000000000000b0              my_charset_ucs2_spanish_uca_ci
00000000007b0150  w    F .text	0000000000000031              Item_cond_and::not_null_tables() const
00000000007a3a50 g     F .text	0000000000000131              Item_func_ifnull::str_op(String*)
0000000000799d10  w    F .text	0000000000000026              List_iterator<Item>::init(List<Item>&)
0000000000889c70  w    F .text	0000000000000011              Dynamic_array<Item_splocal*>::front()
00000000008016bc g     F .text	0000000000000050              Item_sum_std::copy_or_same(THD*)
00000000007f3c52  w    F .text	000000000000006a              Item_func_replace::~Item_func_replace()
00000000012655e0 g     O .data	0000000000000100              combo1map
000000000077b968  w    F .text	000000000000000b              handler::end_bulk_update()
00000000007969a2  w    F .text	00000000000000b0              Item::has_compatible_context(Item*) const
00000000012ccc60 g     O .data	00000000000000b0              my_charset_utf16_sinhala_uca_ci
00000000006f5140  w    F .text	0000000000000056              MDL_key::mdl_key_init(MDL_key const*)
000000000097fe62 g     F .text	0000000000000129              _mi_ft_add
0000000001085320  w    O .data.rel.ro	0000000000000398              vtable for Item_func_truth
00000000005684c2 g     F .text	00000000000000c1              Rpl_filter::add_wild_do_table(char const*)
00000000007ae6ac  w    F .text	0000000000000011              Item_func_nop_all::func_name() const
0000000000000000       F *UND*	0000000000000000              opendir@@GLIBC_2.2.5
00000000006d81da  w    F .text	000000000000000b              injector::injector()
0000000001080e40  w    O .data.rel.ro	0000000000000398              vtable for Item_func_in
0000000001394d04 g     O .bss	0000000000000004              key_IO_CACHE_SHARE_mutex
00000000008c24b2  w    F .text	0000000000000058              Item_func_xpath_sum::~Item_func_xpath_sum()
0000000000b7160a  w    F .text	000000000000002b              ha_partition_add_index::~ha_partition_add_index()
000000000073918a  w    F .text	000000000000004e              Item_func_opt_neg::Item_func_opt_neg(List<Item>&)
0000000001386428 g     O .bss	0000000000000008              Create_func_dayname::s_singleton
00000000008c9d62 g     F .text	0000000000000378              Event_db_repository::drop_schema_events(THD*, st_mysql_lex_string)
00000000007c1c8c  w    F .text	0000000000000041              Create_func_sign::~Create_func_sign()
00000000012aea80 g     O .data	0000000000000800              page000data
00000000005b12da  w    F .text	0000000000000041              Repair_mrg_table_error_handler::~Repair_mrg_table_error_handler()
0000000000663d57 g     F .text	0000000000000034              init_status_vars()
00000000008ce203 g     F .text	000000000000005f              get_index_dynamic
000000000065c058  w    F .text	000000000000002d              List<Item_func_match>::push_back(Item_func_match*, st_mem_root*)
00000000006e03d6 g     F .text	0000000000000026              Master_info::~Master_info()
000000000067981e g     F .text	0000000000000099              String::set_ascii(char const*, unsigned int)
0000000000569100  w    F .text	0000000000000046              i_string_pair::~i_string_pair()
0000000000738754  w    F .text	0000000000000053              Item_func_round::Item_func_round(Item*, Item*, bool)
000000000059922a  w    F .text	000000000000003d              append_identifier(THD*, String*, char const*, unsigned int)
00000000007f2596  w    F .text	0000000000000011              Item_func_conv_charset::func_name() const
0000000000849158  w    F .text	0000000000000023              User_var_log_event::set_deferred(long long)
00000000005d0ac6  w    F .text	000000000000001a              List<Alter_column>::head()
0000000000849262  w    F .text	0000000000000059              Create_file_log_event::~Create_file_log_event()
000000000136cbe8 g     O .bss	0000000000000008              log_output_options
00000000007e27d4  w    F .text	000000000000002b              Item_func_geometry_from_text::~Item_func_geometry_from_text()
000000000081753a  w    F .text	000000000000002b              Item_func_timediff::~Item_func_timediff()
0000000000751fb2 g     F .text	000000000000022d              Field_double::val_int()
00000000006588ae  w    F .text	0000000000000022              Bitmap<64u>::operator==(Bitmap<64u> const&) const
00000000005b9410 g     F .text	0000000000000174              Query_cache::unlink_table(Query_cache_block_table*)
00000000008498fe  w    F .text	0000000000000041              Relay_log_info::set_row_stmt_start_timestamp()
0000000000799ee2  w    F .text	000000000000002d              List<List<Item> >::push_back(List<Item>*, st_mem_root*)
00000000005ca8de g     F .text	0000000000000062              THD::set_statement(Statement*)
000000000065c95a  w    F .text	0000000000000046              COND_CMP::~COND_CMP()
00000000007ae1ee  w    F .text	000000000000000f              Eq_creator::eqne_op() const
000000000091fa0c g     F .text	0000000000000021              ha_myisam::delete_all_rows()
0000000000559334  w    F .text	000000000000002d              Lt_creator::Lt_creator()
00000000007992f6  w    F .text	0000000000000014              Item_cache::field_type() const
0000000000799de0  w    F .text	0000000000000013              List_iterator_fast<Item_field>::replace(List<Item_field>&)
00000000006f5f08  w    F .text	000000000000000f              I_P_List_no_push_back<MDL_object_lock>::I_P_List_no_push_back(MDL_object_lock**)
00000000005aedf4  w    F .text	0000000000000015              I_P_List_counter::I_P_List_counter()
00000000010dd340 g     O .data	00000000000000f0              schema_fields_info
000000000098edcd g     F .text	000000000000001b              myisammrg_panic(handlerton*, ha_panic_function)
0000000000751bcc g     F .text	00000000000002c9              Field_real::truncate(double*, double)
00000000007c1458  w    F .text	0000000000000041              Create_func_pointn::~Create_func_pointn()
000000000073bf86  w    F .text	0000000000000041              sp_instr_jump::sp_instr_jump(unsigned int, sp_pcontext*, unsigned int)
00000000006c1dc4  w    F .text	0000000000000046              Time_zone_system::~Time_zone_system()
000000000080f572 g     F .text	0000000000000068              Item_func_curdate_local::store_now_in_TIME(st_mysql_time*)
0000000001082030  w    O .data.rel.ro	0000000000000398              vtable for Item_func_if
0000000000910376 g     F .text	0000000000000071              table_file_summary_by_instance::table_file_summary_by_instance()
000000000089bdca g     F .text	000000000000002b              Materialized_cursor::~Materialized_cursor()
0000000000612bf6  w    F .text	0000000000000046              sys_var_pluginvar::~sys_var_pluginvar()
00000000006a28be g     F .text	00000000000008d3              multi_update::initialize_tables(JOIN*)
00000000007b66d4 g     F .text	0000000000000060              Create_func_substr_index::create(THD*, Item*, Item*, Item*)
00000000007ba74e  w    F .text	000000000000004a              Item_func_length::Item_func_length(Item*)
00000000008a1da3 g     F .text	000000000000198f              mysql_load(THD*, sql_exchange*, TABLE_LIST*, List<Item>&, List<Item>&, List<Item>&, enum_duplicates, bool, bool)
0000000000893910  w    F .text	000000000000002d              Gis_polygon::Gis_polygon()
0000000000808700  w    F .text	000000000000000f              Item_sum::type() const
00000000008dd1ea g     F .text	00000000000001ec              end_key_cache
000000000089bfda  w    F .text	000000000000000b              select_result::begin_dataset()
00000000007643ce  w    F .text	0000000000000043              Field::reset()
0000000000944876 g     F .text	00000000000004c8              retrieve_auto_increment
00000000010f1584 g     O .data	0000000000000004              myisam_pack_file_magic
0000000000848cf4  w    F .text	000000000000001d              Log_event::is_artificial_event() const
000000000065c146  w    F .text	0000000000000026              List<Item_func_match>::prepand(List<Item_func_match>*)
0000000000767c8a  w    F .text	000000000000001e              field_type2index(enum_field_types)
000000000055f171 g     F .text	000000000000017f              get_file_options_ulllist(char*&, char*, char*, unsigned char*, File_option*, st_mem_root*)
00000000007d565c g     F .text	0000000000000457              Item_func_get_system_var::fix_length_and_dec()
0000000000809aba  w    F .text	0000000000000058              Item_udf_sum::~Item_udf_sum()
00000000009468b7 g     F .text	00000000000001c0              _mi_readinfo
000000000081626a  w    F .text	000000000000002b              Item_str_timefunc::~Item_str_timefunc()
00000000007c0d92  w    F .text	0000000000000026              Create_func_monthname::~Create_func_monthname()
0000000000800a60 g     F .text	000000000000010d              Aggregator_simple::arg_is_null(bool)
00000000012c8c40 g     O .data	00000000000000b0              my_charset_ucs2_roman_uca_ci
0000000000000000       F *UND*	0000000000000000              poll@@GLIBC_2.2.5
0000000000764284  w    F .text	0000000000000027              Field::pack_length_in_rec() const
00000000005f49f2 g     F .text	000000000000003a              handle_bootstrap
00000000008ce096 g     F .text	000000000000006f              delete_dynamic
000000000070df60  w    F .text	0000000000000035              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::global_update(THD*, set_var*)
00000000005f1f90 g     F .text	000000000000004b              free_list(I_List<i_string_pair>*)
00000000008738ee  w    F .text	0000000000000245              QUICK_RANGE_SELECT::QUICK_RANGE_SELECT(QUICK_RANGE_SELECT const&)
00000000006f22ae g     F .text	000000000000004d              MDL_wait::reset_status()
0000000000751e96 g     F .text	000000000000006e              Field_real::store_decimal(my_decimal const*)
0000000000599bb4  w    F .text	0000000000000012              ACL_PROXY_USER::get_host()
0000000000869328 g     F .text	00000000000001bc              QUICK_INDEX_MERGE_SELECT::get_next()
000000000055c194  w    F .text	000000000000004b              NAMED_ILINK::cmp(char const*, unsigned int)
00000000005e9564  w    F .text	000000000000000f              List_iterator_fast<List<Item> >::after(List<Item>*)
00000000007bbb1c  w    F .text	0000000000000069              Item_func_rpad::Item_func_rpad(Item*, Item*, Item*)
00000000007be6e6  w    F .text	0000000000000026              Create_func_dayname::~Create_func_dayname()
00000000006cd9a4 g     F .text	00000000000000ee              Events::deinit()
0000000000766dc6  w    F .text	0000000000000037              Field_varstring::has_charset() const
000000000079b208 g     F .text	000000000000002b              Cached_item::~Cached_item()
000000000059ae3e  w    F .text	000000000000002d              Dummy_error_handler::Dummy_error_handler()
000000000079a6c8  w    F .text	0000000000000046              Item_empty_string::~Item_empty_string()
0000000000741cd2 g     F .text	00000000000007ea              run_plugin_auth
000000000120f040 g     O .data	0000000000000100              sort_order_armscii8_general_ci
00000000005b021c  w    F .text	000000000000005e              THD::set_open_tables(TABLE*)
000000000059ad5f  w    F .text	000000000000002f              column_hash_search(GRANT_TABLE*, char const*, unsigned int)
00000000008d3b4d g     F .text	0000000000000080              my_hash_first
0000000001068d38  w    O .data.rel.ro	0000000000000358              vtable for Item_basic_constant
000000000090834b  w    F .text	000000000000000b              PFS_atomic::wrunlock(void volatile*)
00000000007bad68  w    F .text	0000000000000040              Item_func_udf_int::Item_func_udf_int(st_udf_func*, List<Item>&)
000000000081682c  w    F .text	0000000000000030              Item_date_add_interval::val_str(String*)
0000000000708bf2  w    F .text	0000000000000041              Sys_var_typelib::~Sys_var_typelib()
00000000007c0936  w    F .text	0000000000000041              Create_func_lpad::~Create_func_lpad()
0000000000b8545a g     F .text	0000000000000017              my_propagate_complex
000000000089a3a8  w    F .text	00000000000000be              field_longlong::avg(String*, unsigned long long)
000000000094b4ff g     F .text	00000000000001a5              mi_alloc_rec_buff
00000000007bec80  w    F .text	0000000000000041              Create_func_elt::~Create_func_elt()
0000000000b7eba1 g     F .text	0000000000000247              my_strnncoll_gbk_internal
0000000000766686  w    F .text	000000000000000f              Field_time::repertoire() const
0000000000889870  w    F .text	000000000000001b              List<sp_variable>::~List()
000000000136efc0 g     O .bss	0000000000000008              system_charset_info
0000000001069540  w    O .data.rel.ro	0000000000000028              vtable for MDL_deadlock_discovery_repair_handler
000000000076259a g     F .text	000000000000004d              get_blob_type_from_length(unsigned long)
00000000007e1480  w    F .text	0000000000000058              Item_str_ascii_func::~Item_str_ascii_func()
000000000082d6e4  w    F .text	0000000000000041              Mutex_sentry::~Mutex_sentry()
000000000065182a g     F .text	00000000000000bf              copy_fields(TMP_TABLE_PARAM*)
000000000075e44e g     F .text	0000000000000110              Field_enum::is_equal(Create_field*)
0000000000b7749e g     F .text	0000000000000087              _db_push_
0000000000b82d55 g     F .text	0000000000000099              my_casedn_8bit
000000000088c604 g     F .text	0000000000000075              sp_cursor::sp_cursor(sp_lex_keeper*, sp_instr_cpush*)
00000000012131a0 g     O .data	0000000000000100              to_upper_latin1_general_cs
00000000007bbf9c  w    F .text	0000000000000050              Item_func_export_set::Item_func_export_set(Item*, Item*, Item*, Item*)
0000000001091330  w    O .data.rel.ro	0000000000000398              vtable for Item_func_min_max
0000000000825198 g     F .text	0000000000000072              MYSQL_BIN_LOG::is_inited_purge_index_file()
0000000000626bb0  w    F .text	000000000000007d              st_log_info::st_log_info()
00000000005f1632  w    F .text	0000000000000056              Mem_root_array<st_order*, true>::at(unsigned long) const
00000000007bb1f4  w    F .text	000000000000004e              Item_func_nullif::Item_func_nullif(Item*, Item*)
00000000007fd3e8 g     F .text	000000000000018d              Item_sum::Item_sum(List<Item>&)
00000000007bed16  w    F .text	0000000000000041              Create_func_encode::~Create_func_encode()
0000000000b5b80a g     F .text	000000000000000f              tina_check_status
000000000080f5da g     F .text	0000000000000053              Item_func_curdate_utc::store_now_in_TIME(st_mysql_time*)
00000000007ba06a  w    F .text	0000000000000038              Item_func_log::Item_func_log(Item*)
000000000061b852 g     F .text	00000000000000fa              Protocol_local::store_decimal(my_decimal const*)
00000000005ce9b8  w    F .text	000000000000001b              List<Item_field>::~List()
000000000136cb70 g       .bss	0000000000000000              __bss_start
0000000000698754  w    F .text	0000000000000015              Deprecated_trigger_syntax_handler::get_trigger_name()
000000000073c8f8  w    F .text	0000000000000038              Alter_table_optimize_partition_statement::Alter_table_optimize_partition_statement(LEX*)
0000000000000000       F *UND*	0000000000000000              pthread_cond_timedwait@@GLIBC_2.3.2
0000000000568646 g     F .text	0000000000000068              Rpl_filter::add_db_rewrite(char const*, char const*)
00000000007c1010  w    F .text	000000000000002d              Create_func_numpoints::Create_func_numpoints()
00000000008c3bc2 g     F .text	00000000000001df              pre_init_event_thread(THD*)
00000000005aef1a  w    F .text	000000000000002a              MDL_savepoint::MDL_savepoint(MDL_ticket*, MDL_ticket*)
000000000098e3f0 g     F .text	0000000000000084              ha_myisammrg::extra_opt(ha_extra_function, unsigned long)
00000000005cfbc0  w    F .text	0000000000000046              select_result::~select_result()
00000000005c9f12 g     F .text	0000000000000057              Security_context::user_matches(Security_context*)
00000000005a5b74 g     F .text	000000000000001f              Alter_table_prelocking_strategy::handle_view(THD*, Query_tables_list*, TABLE_LIST*, bool*)
0000000000b838f8 g     F .text	0000000000000067              my_strntod_8bit
000000000061bd90  w    F .text	0000000000000016              st_select_lex_unit::unclean()
00000000007ba600  w    F .text	0000000000000015              Item_func_min_max::result_as_longlong()
0000000001086a60  w    O .data.rel.ro	0000000000000030              vtable for Create_func_uncompress
000000000090d730 g     F .text	0000000000000066              table_events_waits_history::table_events_waits_history()
00000000005e3579 g     F .text	00000000000001dc              kill_delayed_threads()
00000000007e271c  w    F .text	0000000000000046              Item_func_geometry_from_wkb::~Item_func_geometry_from_wkb()
00000000005cff84  w    F .text	0000000000000015              Rows_log_event::get_width() const
000000000061bf22  w    F .text	000000000000001b              select_result::set_thd(THD*)
00000000010f6340 g     O .data	00000000000000d0              builtin_csv_plugin
0000000000568aee g     F .text	0000000000000108              Rpl_filter::find_wild(st_dynamic_array*, char const*, int)
00000000007c27f0  w    F .text	0000000000000026              Create_func_ucase::~Create_func_ucase()
00000000006ba998  w    F .text	000000000000001d              MDL_wait_for_subgraph::MDL_wait_for_subgraph()
00000000007972f4  w    F .text	0000000000000013              Item_uint::check_partition_func_processor(unsigned char*)
000000000057a572  w    F .text	000000000000002e              THD::reset_db(char*, unsigned long)
0000000001372c40 g     O .bss	0000000000000218              sql_command_flags
00000000006b60d4 g     F .text	000000000000017d              TABLE_LIST::calc_md5(char*)
00000000008c27a6  w    F .text	0000000000000046              Item_bool::~Item_bool()
000000000065c63e  w    F .text	0000000000000026              List_iterator<Item_equal>::List_iterator(List<Item_equal>&)
00000000005b2dba g     F .text	0000000000000384              Query_cache::insert(Query_cache_tls*, char const*, unsigned long, unsigned int)
000000000106a878  w    O .data.rel.ro	0000000000000090              vtable for subselect_engine
00000000007b2daa g     F .text	0000000000000050              Create_func_compress::create(THD*, Item*)
0000000000825e9c g     F .text	000000000000001f              MYSQL_BIN_LOG::new_file_without_locking()
000000000087426e  w    F .text	000000000000001d              List_iterator<Item_sum>::operator++(int)
0000000000809718  w    F .text	000000000000000f              Item_sum_bit::sum_func() const
000000000074920e g     F .text	0000000000000081              Field::store(char const*, unsigned int, charset_info_st*, enum_check_fields)
000000000056b324  w    F .text	0000000000000047              AutoWLock::AutoWLock(PolyLock*)
000000000081651a  w    F .text	0000000000000046              Item_date_func::~Item_date_func()
00000000007ffb7a g     F .text	0000000000000156              Item_sum_hybrid::setup_hybrid(Item*, Item*)
00000000008c11d6  w    F .text	0000000000000046              Item_nodeset_func_axisbyname::~Item_nodeset_func_axisbyname()
00000000008da2cb g     F .text	000000000000020c              my_block_write
00000000013707c4 g     O .bss	0000000000000004              key_relay_log_info_data_lock
0000000001376620 g     O .bss	0000000000000060              my_locale_sv_FI
00000000006f2cac g     F .text	0000000000000128              MDL_context::find_ticket(MDL_request*, enum_mdl_duration*)
00000000008741a6  w    F .text	0000000000000026              List_iterator_fast<SEL_IMERGE>::List_iterator_fast(List<SEL_IMERGE>&)
0000000000569672 g     F .text	00000000000001e2              sys_var::sys_var(sys_var_chain*, char const*, char const*, int, long, int, get_opt_arg_type, enum_mysql_show_type, long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
000000000136cd60 g     O .bss	0000000000000008              refresh_version
00000000006289be g     F .text	0000000000000128              JOIN::remove_subq_pushed_predicates(Item**)
00000000007e1a68  w    F .text	000000000000000f              Item_func_issimple::select_optimize() const
0000000000799054  w    F .text	000000000000000f              Item_trigger_field::get_tmp_table_field()
00000000012cd960 g     O .data	00000000000000b0              my_charset_ucs2_general_mysql500_ci
00000000007a67dc g     F .text	0000000000000105              in_row::in_row(unsigned int, Item*)
0000000001088560  w    O .data.rel.ro	0000000000000030              vtable for Create_func_arg3
0000000000659444  w    F .text	000000000000002b              Copy_field::~Copy_field()
00000000008939d2  w    F .text	000000000000002d              Gis_multi_point::Gis_multi_point()
000000000073861c  w    F .text	0000000000000040              Item_func_mul::Item_func_mul(Item*, Item*)
00000000005ce594  w    F .text	000000000000001b              Ha_trx_info::Ha_trx_info()
00000000008871b6 g     F .text	000000000000009a              sp_instr_hpop::execute(THD*, unsigned int*)
000000000079a500  w    F .text	0000000000000046              Item_default_value::~Item_default_value()
00000000008c1814  w    F .text	000000000000005d              Item_func_xpath_position::Item_func_xpath_position(Item*, String*)
0000000000690576  w    F .text	000000000000004c              handler::max_keys() const
00000000007a50b4 g     F .text	0000000000000098              Item_func_case::fix_fields(THD*, Item**)
00000000005f12c0  w    F .text	000000000000006e              Lex_input_stream::start_token()
00000000007647c4  w    F .text	000000000000003f              Field::get_key_image(unsigned char*, unsigned int, Field::imagetype)
0000000000799d36  w    F .text	0000000000000025              List_iterator<Item>::replace(List<Item>&)
00000000007bb4c4  w    F .text	0000000000000040              Item_func_aes_decrypt::Item_func_aes_decrypt(Item*, Item*)
00000000008e8c28 g     F .text	0000000000000114              check_if_legal_tablename
00000000007b171e  w    F .text	0000000000000056              cmp_item_sort_string_in_static::~cmp_item_sort_string_in_static()
000000000090f322  w    F .text	0000000000000041              table_all_instr::~table_all_instr()
00000000005672da  w    F .text	000000000000004a              Item_int::val_real()
000000000077def2 g     F .text	000000000000003e              Hybrid_type_traits_decimal::fix_length_and_dec(Item*, Item*) const
00000000005593a4  w    F .text	0000000000000026              Lt_creator::~Lt_creator()
00000000007727cf g     F .text	000000000000072a              ha_commit_trans(THD*, bool)
0000000001376860 g     O .bss	0000000000000008              mysql_global_audit_mask
000000000083feb0 g     F .text	00000000000000e5              Execute_load_log_event::Execute_load_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000006980ce  w    F .text	000000000000001b              List<unsigned long long>::~List()
000000000094b6a4 g     F .text	000000000000003f              mi_safe_mul
00000000008c07e2  w    F .text	0000000000000069              Item_func_xml_update::Item_func_xml_update(Item*, Item*, Item*)
000000000090c27c  w    F .text	0000000000000041              PFS_unknown_acl::~PFS_unknown_acl()
000000000060587f g     F .text	0000000000000276              create_table_precheck(THD*, TABLE_LIST*, TABLE_LIST*)
00000000009500de g     F .text	0000000000000071              mi_open_keyfile
00000000007c15ec  w    F .text	000000000000002d              Create_func_radians::Create_func_radians()
0000000000908ccf g     F .text	0000000000000040              cleanup_file_class()
00000000006bb3d2  w    F .text	0000000000000043              I_P_List_iterator<Wait_for_flush, I_P_List_adapter<Wait_for_flush, &Wait_for_flush::next_in_share, &Wait_for_flush::prev_in_share>, I_P_List_null_counter, I_P_List_no_push_back<Wait_for_flush> >::operator++(int)
00000000007da450  w    F .text	0000000000000039              Item_real_func::fix_length_and_dec()
00000000006bc576 g     F .text	0000000000000136              calc_time_from_sec(st_mysql_time*, long, long)
00000000008c1508  w    F .text	0000000000000045              Item_nodeset_func_elementbyindex::Item_nodeset_func_elementbyindex(Item*, Item*, String*)
000000000120a6c0 g     O .data	0000000000000100              sort_order_cp1251_bulgarian_ci
000000000070b972  w    F .text	0000000000000066              Sys_var_plugin::session_value_ptr(THD*, st_mysql_lex_string*)
00000000007da660  w    F .text	000000000000002b              Item_func_signed::~Item_func_signed()
0000000000000000       F *UND*	0000000000000000              dup@@GLIBC_2.2.5
00000000007ec9ec g     F .text	00000000000000d0              Item_func_make_set::update_used_tables()
00000000008f9aa6 g     F .text	00000000000005f1              rijndaelKeySetupDec
0000000000739fcc  w    F .text	0000000000000040              Item_func_current_user::Item_func_current_user(Name_resolution_context*)
0000000000767fa4  w    F .text	0000000000000046              Field_datetime::~Field_datetime()
0000000000871bcc  w    F .text	0000000000000014              Unique::get_size() const
00000000005d1d12  w    F .text	000000000000002b              Foreign_key::~Foreign_key()
0000000000799946  w    F .text	000000000000006c              Item_cache_datetime::Item_cache_datetime(enum_field_types)
00000000005b2aa9 g     F .text	0000000000000083              query_cache_table_get_key
0000000000566876  w    F .text	0000000000000035              Item::val_result()
000000000136cda0 g     O .bss	0000000000000008              delayed_insert_threads
00000000007c7fc0 g     F .text	000000000000011c              Item_func_mul::real_op()
000000000065c4f2  w    F .text	000000000000002a              Bitmap<4096u>::operator!=(Bitmap<4096u> const&) const
0000000000b8433b g     F .text	000000000000002f              my_fill_8bit
0000000000785902 g     F .text	000000000000009c              Item_string::val_int()
0000000001395680 g     O .bss	0000000000000008              alarm_thread
00000000006b8400 g     F .text	0000000000000074              Field_iterator_view::set(TABLE_LIST*)
000000000077beb0  w    F .text	000000000000000f              handler::checksum() const
0000000001156c80 g     O .data	00000000000000b0              my_charset_latin2_czech_ci
000000000089b43f g     F .text	00000000000000be              Server_side_cursor::operator delete(void*, unsigned long)
00000000006bf6a6 g     F .text	0000000000000012              Time_zone_db::get_name() const
00000000006789b4  w    F .text	0000000000000041              IS_internal_schema_access::~IS_internal_schema_access()
0000000001373d48 g     O .bss	0000000000000001              Events::check_system_tables_error
00000000007c10a6  w    F .text	000000000000002d              Create_func_oct::Create_func_oct()
00000000013867d0 g     O .bss	0000000000000008              Create_func_uuid_short::s_singleton
00000000008c1560  w    F .text	000000000000003a              Item_bool::Item_bool(int)
00000000006b81b8 g     F .text	0000000000000083              Natural_join_column::create_item(THD*)
00000000006f9576 g     F .text	00000000000001bf              mysql_assign_to_keycache(THD*, TABLE_LIST*, st_mysql_lex_string*)
000000000073912e  w    F .text	000000000000005b              Item_func_opt_neg::Item_func_opt_neg(Item*, Item*, Item*)
00000000007f1f24  w    F .text	0000000000000016              Item_func_user::fix_length_and_dec()
000000000079982e  w    F .text	0000000000000025              Item_cache_row::element_index(unsigned int)
0000000000849054  w    F .text	0000000000000032              Start_log_event_v3::do_shall_skip(Relay_log_info*)
0000000000739f78  w    F .text	0000000000000053              Item_func_user::Item_func_user()
000000000080fc78 g     F .text	000000000000009b              Item_func_sysdate_local::val_real()
0000000000738d50  w    F .text	000000000000005c              Item_func_truth::Item_func_truth(Item*, bool, bool)
00000000007fc17a  w    F .text	0000000000000015              Item_func_not_all::top_level()
00000000010abde0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_reverse
0000000000678010  w    F .text	000000000000001d              ACL_internal_schema_access::ACL_internal_schema_access()
000000000077ba08  w    F .text	0000000000000013              handler::index_next(unsigned char*)
0000000000591ffd g     F .text	0000000000000456              fill_schema_user_privileges(THD*, TABLE_LIST*, Item*)
000000000087e650  w    F .text	000000000000001b              sp_name::~sp_name()
0000000000816008  w    F .text	0000000000000011              Item_func_unix_timestamp::func_name() const
00000000008ebae1 g     F .text	000000000000016f              my_uncompress
00000000010eee28 g     O .data	0000000000000004              my_once_extra
00000000007e1678  w    F .text	0000000000000011              Item_func_point::func_name() const
000000000056540c  w    F .text	0000000000000026              Protocol::~Protocol()
00000000012140e0 g     O .data	0000000000000101              ctype_cp1251_general_cs
00000000007c2492  w    F .text	000000000000002d              Create_func_time_to_sec::Create_func_time_to_sec()
00000000005cda8e g     F .text	00000000000000a7              THD::decrement_user_connections_counter()
00000000010eee58 g     O .data	0000000000000008              soundex_map
0000000000841ecc g     F .text	0000000000000452              Rows_log_event::do_add_row_data(unsigned char*, unsigned long)
000000000088c56e g     F .text	0000000000000053              sp_rcontext::set_variable(THD*, Field*, Item**)
000000000073ab8c  w    F .text	000000000000002d              Item_func_now_utc::Item_func_now_utc()
0000000000b75a9d g     F .text	0000000000000076              my_timer_microseconds
0000000000796bda  w    F .text	0000000000000014              Item_splocal::get_settable_routine_parameter()
00000000006eb0a8  w    F .text	0000000000000016              Queue<PROF_MEASUREMENT>::iterator_next(void*)
000000000074faaa g     F .text	0000000000000203              Field_long::store(double)
00000000006ed9a4  w    F .text	0000000000000046              Signal_statement::~Signal_statement()
00000000006cb484 g     F .text	0000000000000058              sortcmp_lex_string(st_mysql_lex_string, st_mysql_lex_string, charset_info_st*)
0000000000908f75 g     F .text	0000000000000204              register_rwlock_class(char const*, unsigned int, int)
00000000008d527e g     F .text	000000000000004d              list_reverse
00000000007e1c36  w    F .text	0000000000000011              Item_func_glength::func_name() const
0000000000791dec g     F .text	00000000000001ed              Item_trigger_field::fix_fields(THD*, Item**)
00000000007da6be  w    F .text	000000000000000b              Item_decimal_typecast::fix_length_and_dec()
000000000073b090  w    F .text	0000000000000058              Item_default_value::Item_default_value(Name_resolution_context*, Item*)
0000000000931b96 g     F .text	000000000000008d              mi_test_if_sort_rep
00000000005bf774  w    F .text	0000000000000023              Query_cache_block::data()
0000000001374fa0 g     O .bss	0000000000000060              my_locale_sv_SE
000000000059b49e  w    F .text	0000000000000026              List<st_lex_user>::prepand(List<st_lex_user>*)
00000000007dbd7c  w    F .text	00000000000000c7              User_level_lock::User_level_lock(unsigned char const*, unsigned int, unsigned long)
000000000136f9c0 g     O .bss	0000000000000040              LOCK_sys_init_slave
00000000008a9092  w    F .text	000000000000002f              XML_TAG::~XML_TAG()
00000000007b6e46 g     F .text	0000000000000055              Create_func_weekday::create(THD*, Item*)
0000000000b5f98e g     F .text	000000000000014d              ha_partition::~ha_partition()
0000000000677dfe  w    F .text	000000000000001b              String::set_charset(charset_info_st*)
000000000057a6ba  w    F .text	0000000000000031              Relay_log_info::until_pos()
0000000000889e68  w    F .text	000000000000001d              List_iterator_fast<sp_instr>::operator++(int)
00000000005f1390  w    F .text	0000000000000012              Lex_input_stream::get_cpp_ptr()
000000000079baee  w    F .text	000000000000001b              List_iterator<Cached_item>::List_iterator()
0000000000601734 g     F .text	0000000000000174              check_stack_overrun(THD*, long, unsigned char*)
00000000007aa248 g     F .text	000000000000008c              Item_func_isnull::val_int()
00000000006e9056 g     F .text	0000000000000066              QUERY_PROFILE::~QUERY_PROFILE()
000000000080a4ae  w    F .text	000000000000002b              Item_sum_udf_float::~Item_sum_udf_float()
00000000008a5dac g     F .text	00000000000000d9              READ_INFO::~READ_INFO()
00000000007e899e g     F .text	00000000000001ff              Item_func_substr::fix_length_and_dec()
00000000005986a8  w    F .text	000000000000001f              MDL_request::MDL_request()
000000000106c1f8  w    O .data.rel.ro	0000000000000028              vtable for Sql_statement
00000000007fb142 g     F .text	00000000000002b8              subselect_uniquesubquery_engine::exec()
000000000079cec2 g     F .text	00000000000004ea              Item_bool_func2::fix_length_and_dec()
0000000000000000       F *UND*	0000000000000000              ftello64@@GLIBC_2.2.5
0000000000766832  w    F .text	0000000000000099              Field_datetime::reset()
0000000000815f60  w    F .text	0000000000000046              Item_func_weekday::~Item_func_weekday()
000000000137088c g     O .bss	0000000000000004              key_thread_one_connection
00000000005d0596  w    F .text	000000000000001d              List_iterator<Key_part_spec>::operator++(int)
00000000013707b0 g     O .bss	0000000000000004              key_LOG_LOCK_log
00000000007af26e  w    F .text	000000000000003c              cmp_item::cmp_item()
000000000076754c  w    F .text	0000000000000108              Field_bit::reset()
00000000007bc388  w    F .text	0000000000000038              Item_func_as_wkb::Item_func_as_wkb(Item*)
0000000000000000       F *UND*	0000000000000000              pthread_cond_wait@@GLIBC_2.3.2
00000000005bf426  w    F .text	000000000000001b              Query_cache_table::type(unsigned char)
00000000007e6d88 g     F .text	00000000000000c3              Item_func_concat_ws::fix_length_and_dec()
00000000007c8316 g     F .text	00000000000001c9              Item_func_mul::decimal_op(my_decimal*)
000000000073a544  w    F .text	0000000000000040              Item_func_week::Item_func_week(Item*, Item*)
0000000000815bee  w    F .text	0000000000000011              Item_func_quarter::func_name() const
000000000070c29e  w    F .text	00000000000000f9              Sys_var_session_special::Sys_var_session_special(char const*, char const*, int, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(THD*, set_var*), unsigned long long (*)(THD*), char const*)
0000000000599162  w    F .text	000000000000001d              Prelocking_strategy::Prelocking_strategy()
0000000000ba667c g     F .text	0000000000000170              vio_close
00000000007c2c30  w    F .text	000000000000002d              Create_func_weekday::Create_func_weekday()
000000000091110a g     F .text	0000000000000075              table_setup_consumers::table_setup_consumers()
000000000108b950  w    O .data.rel.ro	0000000000000398              vtable for Item_func_inet_aton
00000000007dd876  w    F .text	0000000000000046              Item_func_ln::~Item_func_ln()
00000000005ce8ba  w    F .text	0000000000000016              Query_cache_tls::Query_cache_tls()
00000000007f3712  w    F .text	0000000000000046              Item_func_old_password::~Item_func_old_password()
00000000013755a0 g     O .bss	0000000000000060              my_locale_ar_LY
00000000010ae1d0  w    O .data.rel.ro	0000000000000398              vtable for Item_str_func
0000000001079990  w    O .data.rel.ro	00000000000003b0              vtable for Item_param
00000000007f6904 g     F .text	000000000000009e              Item_exists_subselect::val_decimal(my_decimal*)
000000000090fe96  w    F .text	0000000000000041              table_file_instances::~table_file_instances()
0000000000765460  w    F .text	0000000000000022              Field_tiny::key_type() const
000000000106b408  w    O .data.rel.ro	0000000000000028              vtable for Show_create_error_handler
00000000008edf02 g     F .text	00000000000000cd              my_ftell
000000000083f3ba g     F .text	0000000000000174              Append_block_log_event::Append_block_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000008c223a  w    F .text	000000000000002b              Item_nodeset_func_descendantbyname::~Item_nodeset_func_descendantbyname()
00000000007ac616 g     F .text	0000000000000050              Item_func_isnull::neg_transformer(THD*)
0000000000784160 g     F .text	000000000000007a              Item_field::val_result()
0000000000b715c4  w    F .text	0000000000000046              ha_partition_add_index::~ha_partition_add_index()
0000000000796f1e  w    F .text	0000000000000035              Item_field::field_type() const
00000000007b0728  w    F .text	0000000000000046              Item_cond_xor::~Item_cond_xor()
0000000000792f26 g     F .text	000000000000008f              Item_cache::print(String*, enum_query_type)
00000000008c0b80  w    F .text	00000000000000b5              Item_nodeset_func::prepare(String*)
000000000080d782 g     F .text	0000000000000143              Item_func_to_seconds::val_int_endpoint(bool, bool*)
00000000005d077c  w    F .text	000000000000001a              List<Alter_drop>::head_ref()
0000000000797318  w    F .text	000000000000000f              Item_decimal::result_type() const
00000000007d2df2 g     F .text	0000000000000105              user_var_entry::val_real(char*)
00000000005e93f2  w    F .text	00000000000000fd              Delayed_insert::unlock()
00000000007db738  w    F .text	0000000000000011              Item_func_get_system_var::func_name() const
0000000000775c4a g     F .text	0000000000000337              handler::get_auto_increment(unsigned long long, unsigned long long, unsigned long long, unsigned long long*, unsigned long long*)
00000000005cef0c  w    F .text	00000000000001c7              Query_tables_list::is_mixed_stmt_unsafe(bool, bool, bool, unsigned int)
00000000005985da  w    F .text	000000000000001a              String::operator[](unsigned int) const
00000000007c2816  w    F .text	000000000000002d              Create_func_uncompress::Create_func_uncompress()
0000000000745b42 g     F .text	0000000000000026              mysql_errno
00000000007ddb94  w    F .text	0000000000000046              Item_func_minus::~Item_func_minus()
00000000007c1970  w    F .text	000000000000002d              Create_func_rpad::Create_func_rpad()
0000000000ba7dad g     F .text	0000000000000026              vio_ssl_has_data
0000000000803452 g     F .text	0000000000000156              Item_sum_count::reset_field()
00000000010bf930  w    O .data.rel.ro	0000000000000398              vtable for Item_func_dayofmonth
000000000073ab54  w    F .text	0000000000000038              Item_func_now_local::Item_func_now_local(Item*)
0000000000768088  w    F .text	0000000000000046              Field_date::~Field_date()
00000000005c04a0 g     F .text	00000000000000d8              Key::Key(Key const&, st_mem_root*)
00000000007f361c  w    F .text	0000000000000046              Item_func_decode::~Item_func_decode()
00000000007bdc18  w    F .text	0000000000000041              Create_func_bit_length::~Create_func_bit_length()
00000000007671a6  w    F .text	0000000000000014              Field_geom::get_geometry_type()
00000000007bc882  w    F .text	0000000000000040              Item_func_period_diff::Item_func_period_diff(Item*, Item*)
00000000005cfcca  w    F .text	0000000000000013              select_result_interceptor::field_count(List<Item>&) const
000000000080089a g     F .text	00000000000000fa              Aggregator_distinct::~Aggregator_distinct()
000000000077de4a g     F .text	000000000000000d              Hybrid_type_traits::instance()
00000000008909c2 g     F .text	0000000000000204              Gis_multi_line_string::get_data_as_wkt(String*, char const**) const
000000000070ebfc  w    F .text	0000000000000041              Sys_var_lexstring::~Sys_var_lexstring()
00000000007ea0d2 g     F .text	0000000000000107              Item_func_trim::fix_length_and_dec()
00000000007c3bf2 g     F .text	0000000000000052              Item_func::Item_func(List<Item>&)
0000000000780de6 g     F .text	00000000000000c5              Item_sp_variable::fix_fields(THD*, Item**)
00000000013746a0 g     O .bss	0000000000000060              my_locale_hu_HU
0000000000568338 g     F .text	0000000000000011              Rpl_filter::is_on()
00000000007655a6  w    F .text	000000000000000f              Field_short::type() const
00000000005af6d2  w    F .text	0000000000000046              Field_iterator_natural_join::~Field_iterator_natural_join()
0000000000964652 g     F .text	00000000000003fc              mi_init_bulk_insert
000000000121a760 g     O .data	0000000000000100              to_upper_latin7_bin
00000000007f2ea0  w    F .text	000000000000002b              Item_func_hex::~Item_func_hex()
0000000000000000       F *UND*	0000000000000000              sigaddset@@GLIBC_2.2.5
000000000076fdc6 g     F .text	0000000000000177              change_double_for_sort(double, unsigned char*)
000000000054bda8 g     F .text	000000000000003f              next_global_thread(THD*)
00000000007c00d4  w    F .text	000000000000002d              Create_func_issimple::Create_func_issimple()
00000000012c8f40 g     O .data	00000000000000b0              my_charset_ucs2_sinhala_uca_ci
0000000000911606 g     F .text	0000000000000028              table_setup_instruments::create()
000000000076848a  w    F .text	0000000000000046              Field_short::~Field_short()
000000000076724e  w    F .text	000000000000000f              Field_enum::type() const
0000000000800d80 g     F .text	0000000000000050              Item_sum_count::copy_or_same(THD*)
0000000000678bf2  w    F .text	0000000000000046              thread_info::~thread_info()
0000000000737ee2  w    F .text	000000000000003d              Item_sum_min::Item_sum_min(Item*)
00000000005a8432 g     F .text	000000000000077a              find_field_in_table_ref(THD*, TABLE_LIST*, char const*, unsigned int, char const*, char const*, char const*, Item**, bool, bool, unsigned int*, bool, TABLE_LIST**)
000000000089ac26  w    F .text	0000000000000046              field_ulonglong::~field_ulonglong()
0000000000799faa  w    F .text	0000000000000026              List<List<Item> >::disjoin(List<List<Item> >*)
000000000079102c g     F .text	0000000000000077              Item_default_value::eq(Item const*, bool) const
0000000000871fa8  w    F .text	000000000000000f              QUICK_INDEX_MERGE_SELECT::get_type()
000000000069880e  w    F .text	000000000000001d              List_iterator<unsigned long long>::operator++(int)
00000000005668d4  w    F .text	0000000000000032              Item::str_result(String*)
0000000001386608 g     O .bss	0000000000000008              Create_func_ltrim::s_singleton
00000000008098ae  w    F .text	0000000000000040              Item_sum_xor::Item_sum_xor(THD*, Item_sum_xor*)
000000000065ac12  w    F .text	000000000000000f              FT_SELECT::get_type()
0000000000767b26  w    F .text	0000000000000026              List<Create_field>::concat(List<Create_field>*)
00000000007c2dcc  w    F .text	0000000000000026              Create_func_within::~Create_func_within()
00000000006f60b0  w    F .text	0000000000000041              MDL_ticket::~MDL_ticket()
00000000007668fc  w    F .text	0000000000000037              Field_datetime::pack(unsigned char*, unsigned char const*, unsigned int, bool)
000000000065a5be  w    F .text	000000000000000f              subselect_engine::is_executed() const
0000000000764f12  w    F .text	000000000000000f              Field_str::decimals() const
0000000000b8427c g     F .text	00000000000000bf              my_scan_8bit
000000000106a6d8  w    O .data.rel.ro	0000000000000020              vtable for st_lex_local
0000000000558cfe  w    F .text	0000000000000023              Bitmap<64u>::Bitmap(unsigned int)
0000000000817300  w    F .text	000000000000002b              Item_func_str_to_date::~Item_func_str_to_date()
0000000000808fe6  w    F .text	0000000000000031              Item_sum_avg::val_int()
000000000065a3d6  w    F .text	000000000000004a              Item_cond_and::Item_cond_and(List<Item>&)
0000000000794098 g     F .text	000000000000012c              Item_cache_str::cache_value()
0000000000606b18  w    F .text	0000000000000034              Item_func::is_null()
000000000073cc82  w    F .text	0000000000000025              List<Item_param>::push_back(Item_param*)
000000000136fe88 g     O .bss	0000000000000008              opt_ssl_cert
0000000000b6d178 g     F .text	00000000000000cb              ha_partition::prepare_extra_cache(unsigned int)
000000000090cf10 g     F .text	00000000000004b8              table_events_waits_common::read_row_values(TABLE*, unsigned char*, Field**, bool)
0000000000801298 g     F .text	000000000000006f              Item_sum_avg::add()
0000000000738170  w    F .text	0000000000000122              Item_func::Item_func(Item*, Item*, Item*, Item*)
0000000001069918  w    O .data.rel.ro	0000000000000078              vtable for select_export
00000000007acbba g     F .text	00000000000000bf              Item_equal::Item_equal(Item*, Item_field*)
0000000000800066 g     F .text	00000000000000ab              Item_sum_sum::clear()
000000000077bea0  w    F .text	000000000000000f              handler::low_byte_first() const
0000000000839ddc g     F .text	0000000000000184              Load_log_event::Load_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000006f21b0 g     F .text	0000000000000037              MDL_wait::~MDL_wait()
00000000008911ec g     F .text	0000000000000011              Gis_multi_line_string::get_class_info() const
00000000007398b6  w    F .text	0000000000000048              Item_str_func::Item_str_func(Item*, Item*)
00000000010de200 g     O .data	0000000000000078              coll_charset_app_fields_info
00000000006f57d8  w    F .text	0000000000000021              MDL_map::MDL_map()
00000000005669e0  w    F .text	000000000000002d              Item::const_item() const
00000000010835f0  w    O .data.rel.ro	00000000000003a8              vtable for Item_func_lt
00000000005e8a28  w    F .text	000000000000000b              Name_resolution_context_state::Name_resolution_context_state()
00000000006603cd g     F .text	000000000000199f              store_create_info(THD*, TABLE_LIST*, String*, st_ha_create_information*, bool)
00000000008176bc  w    F .text	0000000000000046              Item_time_typecast::~Item_time_typecast()
000000000090f40e  w    F .text	0000000000000017              pos_events_waits_summary_by_thread_by_event_name::has_more_view()
0000000000000000       F *UND*	0000000000000000              puts@@GLIBC_2.2.5
00000000005cfc32  w    F .text	0000000000000023              select_result::prepare(List<Item>&, st_select_lex_unit*)
00000000007dcf8e  w    F .text	0000000000000046              Item_func_rand::~Item_func_rand()
00000000007c2a06  w    F .text	0000000000000041              Create_func_unix_timestamp::~Create_func_unix_timestamp()
00000000010c40f0  w    O .data.rel.ro	00000000000000d0              vtable for Gis_line_string
00000000005a0844 g     F .text	0000000000000225              check_if_table_exists(THD*, TABLE_LIST*, bool*)
000000000120d7c0 g     O .data	0000000000000100              sort_order_cp1250_general_ci
000000000061b74e g     F .text	0000000000000055              Protocol_local::store_short(long long)
000000000059869c  w    F .text	000000000000000b              MDL_key::MDL_key()
00000000007bbed4  w    F .text	0000000000000038              Item_func_binary::Item_func_binary(Item*)
000000000098d742 g     F .text	000000000000006f              ha_myisammrg::delete_row(unsigned char const*)
0000000001386658 g     O .bss	0000000000000008              Create_func_numinteriorring::s_singleton
000000000109a190  w    O .data.rel.ro	00000000000003c0              vtable for Item_func_num1
00000000006baa08  w    F .text	000000000000004e              MDL_context::done_waiting_for()
0000000000606aca  w    F .text	000000000000000f              Item_func::have_rev_func() const
00000000008088bc  w    F .text	0000000000000038              Aggregator_simple::Aggregator_simple(Item_sum*)
000000000082107a g     F .text	000000000000076a              MYSQL_QUERY_LOG::write(long, char const*, unsigned int, int, char const*, unsigned int, char const*, unsigned int)
000000000083c54c g     F .text	0000000000000025              Rand_log_event::do_shall_skip(Relay_log_info*)
0000000000788134 g     F .text	00000000000000cd              Item_copy_string::val_real()
00000000007b32d6 g     F .text	0000000000000050              Create_func_dayofyear::create(THD*, Item*)
000000000098b30a g     F .text	000000000000006f              ha_myisammrg::~ha_myisammrg()
00000000007b138e  w    F .text	0000000000000046              Item_func_le::~Item_func_le()
00000000005e888e  w    F .text	000000000000003f              handler::ha_start_bulk_insert(unsigned long long)
00000000006aa190  w    F .text	0000000000000012              File_parser::ok()
000000000085222e  w    F .text	000000000000001f              Old_rows_log_event::get_flags(unsigned short) const
0000000001370890 g     O .bss	0000000000000004              key_thread_signal_hand
000000000070c980  w    F .text	000000000000002e              Sys_var_struct::global_save_default(THD*, set_var*)
00000000005e0e74 g     F .text	0000000000000f2b              write_record(THD*, TABLE*, st_copy_info*)
0000000000000000       F *UND*	0000000000000000              feof@@GLIBC_2.2.5
000000000084988c  w    F .text	0000000000000028              Relay_log_info::notify_group_master_log_name_update()
0000000000567872  w    F .text	000000000000007f              Item_empty_string::Item_empty_string(char const*, unsigned int, charset_info_st*)
00000000005c0e7b g     F .text	00000000000000b9              thd_set_ha_data
00000000005b1165  w    F .text	0000000000000016              I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>::next_ptr(MDL_request*)
00000000006eb096  w    F .text	0000000000000011              Queue<PROF_MEASUREMENT>::new_iterator()
000000000065b4a4  w    F .text	0000000000000046              store_key::~store_key()
0000000000617f2e g     F .text	00000000000000ff              mysql_sql_stmt_close(THD*)
0000000000000000       F *UND*	0000000000000000              fnmatch@@GLIBC_2.2.5
00000000005ce8d0  w    F .text	000000000000001b              List<st_mysql_lex_string>::~List()
000000000137078c g     O .bss	0000000000000004              key_LOCK_prepared_stmt_count
00000000005e60b8 g     F .text	000000000000002b              select_insert::cleanup()
000000000088b218 g     F .text	0000000000000038              sp_rcontext::~sp_rcontext()
0000000000558f10  w    F .text	000000000000000b              st_decimal_t::st_decimal_t()
00000000007fff0a g     F .text	000000000000010c              Item_sum_sum::Item_sum_sum(THD*, Item_sum_sum*)
000000000067824a  w    F .text	00000000000001c2              Show_create_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
00000000006f5452  w    F .text	0000000000000012              Deadlock_detection_visitor::get_victim() const
000000000065c7b2  w    F .text	0000000000000026              List_iterator_fast<Create_field>::List_iterator_fast(List<Create_field>&)
00000000008f6dc3 g     F .text	000000000000033c              my_write
0000000000888fcc  w    F .text	000000000000001c              sp_instr::opt_move(unsigned int, List<sp_instr>*)
00000000007bb99c  w    F .text	0000000000000040              Item_func_decode::Item_func_decode(Item*, Item*)
00000000010c2570  w    O .data.rel.ro	0000000000000370              vtable for Item_proc_real
000000000098198e g     F .text	0000000000000063              ha_heap::rnd_next(unsigned char*)
000000000061c12e  w    F .text	0000000000000038              is_param_long_data_type(Item_param*)
00000000007090e2  w    F .text	0000000000000045              Sys_var_mybool::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000009135fc g     F .text	00000000000000d3              table_threads::make_row(PFS_thread*)
000000000085359e g     F .text	00000000000001ab              print_decimal(my_decimal const*)
00000000007ae63a  w    F .text	0000000000000046              Item_func_not_all::~Item_func_not_all()
00000000006ecc84 g     F .text	0000000000000628              Signal_common::eval_signal_informations(THD*, MYSQL_ERROR*)
0000000000798a4c  w    F .text	0000000000000046              Item_copy::~Item_copy()
000000000078518a g     F .text	0000000000000073              Item_float::val_str(String*)
000000000057a18a  w    F .text	000000000000006c              Protocol::store(String*)
0000000000799b66  w    F .text	000000000000000f              Item_aggregate_ref::ref_type()
0000000000606d5e  w    F .text	000000000000002d              Item_bool_func::Item_bool_func()
00000000007652ea  w    F .text	000000000000003d              Field_decimal::pack(unsigned char*, unsigned char const*, unsigned int, bool)
0000000000899886  w    F .text	0000000000000052              Procedure::Procedure(select_result*, unsigned int)
0000000001073970  w    O .data.rel.ro	0000000000000290              vtable for Field_num
0000000000808840  w    F .text	000000000000006c              Aggregator_distinct::Aggregator_distinct(Item_sum*)
000000000093ebaf g     F .text	00000000000007cc              _mi_rec_unpack
0000000001069568  w    O .data.rel.ro	0000000000000028              vtable for MDL_deadlock_handler
00000000007bc166  w    F .text	000000000000004a              Item_func_compress::Item_func_compress(Item*)
00000000008ccdd8  w    F .text	0000000000000026              List_iterator_fast<st_foreign_key_info>::init(List<st_foreign_key_info>&)
00000000009616d9 g     F .text	00000000000000e8              _mi_ck_write
00000000009172e0 g     F .text	0000000000000027              cleanup_events_waits_history_long()
00000000008a7120 g     F .text	00000000000000e8              READ_INFO::clear_level(int)
0000000000000000       F *UND*	0000000000000000              strnlen@@GLIBC_2.2.5
00000000007e1e28  w    F .text	0000000000000058              Item_func_y::~Item_func_y()
00000000010ef9c0 g     O .data	0000000000000058              table_setup_timers::m_share
00000000007684fc  w    F .text	0000000000000046              Field_new_decimal::~Field_new_decimal()
00000000005c4f52 g     F .text	0000000000000063              select_send::send_result_set_metadata(List<Item>&, unsigned int)
00000000005b7d3e g     F .text	0000000000000430              Query_cache::append_result_data(Query_cache_block**, unsigned long, unsigned char*, Query_cache_block*)
000000000084b5e0 g     F .text	0000000000000051              Slave_reporting_capability::~Slave_reporting_capability()
0000000000767e4e  w    F .text	0000000000000046              Field_geom::~Field_geom()
00000000007d0cce g     F .text	0000000000000078              Item_func_udf_str::val_str(String*)
00000000007d12aa g     F .text	0000000000000763              Item_func_get_lock::val_int()
00000000007c2a6e  w    F .text	000000000000002d              Create_func_uuid::Create_func_uuid()
00000000008290c2 g     F .text	0000000000000265              MYSQL_BIN_LOG::write_incident(THD*, bool)
0000000000899a26  w    F .text	0000000000000056              field_info::~field_info()
00000000007f33be  w    F .text	0000000000000046              Item_func_elt::~Item_func_elt()
00000000006f4f5e g     F .text	0000000000000140              MDL_context::set_transaction_duration_for_all_locks()
00000000007fc658  w    F .text	0000000000000011              subselect_engine::type()
0000000000815fa6  w    F .text	000000000000002b              Item_func_weekday::~Item_func_weekday()
00000000005e61e2 g     F .text	000000000000002b              select_insert::~select_insert()
00000000010ef7a0 g     O .data	0000000000000058              table_performance_timers::m_share
00000000005609ed g     F .text	000000000000002f              get_salt_from_password
00000000010ef1f0 g     O .data	0000000000000010              file_instrument_prefix
000000000083f61c g     F .text	00000000000000b0              Append_block_log_event::pack_info(Protocol*)
000000000070e4d2  w    F .text	0000000000000026              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::global_save_default(THD*, set_var*)
00000000007f2a5e  w    F .text	0000000000000058              Item_func_crc32::~Item_func_crc32()
000000000090a227 g     F .text	000000000000018a              sanitize_table_object_name(char const*)
000000000091834a  w    F .text	0000000000000020              pos_all_instr_class::reset()
00000000008080f0 g     F .text	000000000000009c              Item_func_group_concat::val_str(String*)
0000000000b672a2 g     F .text	0000000000000115              ha_partition::was_semi_consistent_read()
000000000096effd g     F .text	0000000000001aa6              rtree_area_increase
000000000080fd3c g     F .text	000000000000007f              Item_func_sysdate_local::get_date(st_mysql_time*, unsigned int)
000000000079a8e8  w    F .text	000000000000002b              Item_copy_uint::~Item_copy_uint()
000000000078d7de g     F .text	0000000000000045              Item_hex_string::Item_hex_string()
000000000061c1b2  w    F .text	0000000000000026              List<Item>::List(List<Item> const&)
00000000007592e8 g     F .text	0000000000000027              Field_string::max_packed_col_length(unsigned int)
000000000077c22a  w    F .text	0000000000000017              handler::analyze(THD*, st_ha_check_opt*)
00000000008166e6  w    F .text	0000000000000011              Item_func_from_days::func_name() const
000000000108f2d8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_bit_count
000000000091ee66 g     F .text	0000000000000084              ha_myisam::index_read_idx_map(unsigned char*, unsigned int, unsigned char const*, unsigned long, ha_rkey_function)
000000000083b52a g     F .text	0000000000000238              Rotate_log_event::Rotate_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000008732ba  w    F .text	000000000000003a              TABLE_READ_PLAN::~TABLE_READ_PLAN()
00000000007c0200  w    F .text	000000000000002d              Create_func_last_insert_id::Create_func_last_insert_id()
00000000008177a0  w    F .text	0000000000000058              Item_char_typecast::~Item_char_typecast()
00000000006ec624 g     F .text	000000000000019c              Signal_common::eval_defaults(THD*, MYSQL_ERROR*)
0000000000788d3e g     F .text	0000000000000092              Item_ref_null_helper::get_date(st_mysql_time*, unsigned int)
00000000007bdf6e  w    F .text	000000000000002d              Create_func_concat::Create_func_concat()
00000000005ee74e g     F .text	00000000000000ac              st_select_lex::add_item_to_list(THD*, Item*)
00000000010f1950 g     O .data	0000000000000004              builtin_myisammrg_sizeof_struct_st_plugin
0000000001212960 g     O .data	0000000000000101              ctype_latin1_general_ci
00000000006f153a g     F .text	000000000000002c              Deadlock_detection_visitor::inspect_edge(MDL_context*)
000000000090c066  w    F .text	0000000000000026              PFS_readonly_acl::~PFS_readonly_acl()
0000000001069ea8  w    O .data.rel.ro	0000000000000020              vtable for Delayed_insert
00000000005d0d5c  w    F .text	000000000000003b              Security_context::~Security_context()
000000000059afdc  w    F .text	000000000000001b              List_iterator<st_lex_user>::List_iterator()
0000000000765da0  w    F .text	000000000000000f              Field_double::pack_length() const
00000000007f1b6c  w    F .text	000000000000002b              Item_func_trim::~Item_func_trim()
000000000058387e g     F .text	0000000000000225              GRANT_NAME::set_user_details(char const*, char const*, char const*, char const*, bool)
000000000073e2ad g     F .text	0000000000000b71              mysql_read_default_options
00000000008895d4  w    F .text	000000000000002b              sp_instr_hpop::~sp_instr_hpop()
000000000074f5f0 g     F .text	00000000000000a9              Field_medium::send_binary(Protocol*)
000000000079a7ac  w    F .text	0000000000000058              Item_copy_decimal::~Item_copy_decimal()
00000000010ef380 g     O .data	0000000000000010              table_events_waits_current::m_field_def
00000000007a4c80 g     F .text	00000000000000ae              Item_func_case::val_str(String*)
0000000000677f62  w    F .text	000000000000004c              Item_blob::Item_blob(char const*, unsigned int)
00000000008170a0  w    F .text	0000000000000023              Item_func_timediff::fix_length_and_dec()
0000000000815adc  w    F .text	0000000000000013              Item_func_dayofyear::check_partition_func_processor(unsigned char*)
00000000007dc922  w    F .text	0000000000000046              Item_func_udf_decimal::~Item_func_udf_decimal()
00000000007ae4d6  w    F .text	0000000000000058              Item_bool_func2::~Item_bool_func2()
000000000081ceb0 g     F .text	0000000000000033              Log_to_file_event_handler::log_error(loglevel, char const*, __va_list_tag*)
00000000007fc08e  w    F .text	0000000000000069              Item_ref_null_helper::Item_ref_null_helper(Name_resolution_context*, Item_in_subselect*, Item**, char const*, char const*)
00000000013752a0 g     O .bss	0000000000000060              my_locale_zh_CN
000000000136cbfd g     O .bss	0000000000000001              grant_option
0000000000904d94 g     F .text	00000000000000d9              ha_perfschema::rnd_end()
00000000008383bc g     F .text	00000000000003c7              Format_description_log_event::Format_description_log_event(char const*, unsigned int, Format_description_log_event const*)
0000000000871654 g     F .text	0000000000000187              QUICK_ROR_INTERSECT_SELECT::dbug_dump(int, bool)
00000000007aed8a  w    F .text	000000000000000f              Item_func_nullif::not_null_tables() const
00000000005d7173  w    F .text	0000000000000065              is_infoschema_db(char const*, unsigned long)
000000000080574c g     F .text	0000000000000074              Item_udf_sum::clear()
00000000010dd440 g     O .data	0000000000000370              tables_fields_info
00000000005af392  w    F .text	000000000000002b              TABLE_LIST::top_table()
000000000073c582  w    F .text	000000000000002d              sp_pcontext::push_case_expr_id(int)
000000000070d04c  w    F .text	0000000000000026              List<set_var_base>::concat(List<set_var_base>*)
0000000000817410  w    F .text	0000000000000046              Item_func_microsecond::~Item_func_microsecond()
00000000005f27d1 g     F .text	00000000000002e4              handle_manager
00000000012cc120 g     O .data	00000000000000b0              my_charset_utf16_slovenian_uca_ci
0000000000709e4c  w    F .text	0000000000000013              Sys_var_dbug::session_save_default(THD*, set_var*)
0000000001395580 g     O .bss	0000000000000070              THR_LOCK_lock
000000000057a158  w    F .text	0000000000000032              Protocol::store(unsigned long long)
000000000106a638  w    O .data.rel.ro	0000000000000028              vtable for Server_runnable
0000000000579b3e g     F .text	0000000000000096              rpl_master_erroneous_autoinc(THD*)
0000000000c00b40 g     F .text	0000000000000065              __libc_csu_init
0000000000b5c2da g     F .text	0000000000000113              ha_tina::init_data_file()
00000000007da428  w    F .text	0000000000000028              Item_func::check_decimal_overflow(int)
0000000000831836 g     F .text	000000000000014d              Log_event::get_type_str(Log_event_type)
00000000007bc9a2  w    F .text	0000000000000040              Item_func_yearweek::Item_func_yearweek(Item*, Item*)
00000000007fc280  w    F .text	0000000000000015              Item_subselect::get_used_tables_cache()
00000000007b67e8 g     F .text	000000000000005d              Create_func_time_format::create(THD*, Item*, Item*)
00000000007afd9e  w    F .text	000000000000000f              Item_func_isnull::select_optimize() const
0000000000738d10  w    F .text	0000000000000040              Item_bool_func::Item_bool_func(Item*, Item*)
00000000007f2038  w    F .text	0000000000000011              Item_func_elt::func_name() const
00000000007bab66  w    F .text	0000000000000038              Item_func_last_insert_id::Item_func_last_insert_id(Item*)
00000000006df962  w    F .text	000000000000001a              MYSQL_BIN_LOG::reset_bytes_written()
00000000010b47c0  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_hybrid
000000000062f0f8 g     F .text	0000000000000096              JOIN::cleanup_item_list(List<Item>&) const
0000000000981e82 g     F .text	000000000000003f              ha_heap::drop_table(char const*)
00000000010d0a20 g     O .data	0000000000000ab0              status_vars
00000000005bf364  w    F .text	000000000000002d              Query_cache_query::add(unsigned long)
00000000008e9dde g     F .text	000000000000004f              memdup_root
0000000000000000       F *UND*	0000000000000000              atoi@@GLIBC_2.2.5
00000000005afa68  w    F .text	0000000000000052              Item_int::Item_int(long long, unsigned int)
0000000000b5e258 g     F .text	000000000000001f              Transparent_file::~Transparent_file()
00000000007c17ae  w    F .text	000000000000002d              Create_func_reverse::Create_func_reverse()
00000000009082f1  w    F .text	000000000000004f              PFS_atomic::cas_32(int volatile*, int*, int)
00000000007bf35a  w    F .text	000000000000002d              Create_func_format::Create_func_format()
00000000007ae35c  w    F .text	000000000000000f              Le_creator::l_op() const
00000000007e19ea  w    F .text	0000000000000013              Item_func_spatial_rel::fix_length_and_dec()
00000000007af2f0  w    F .text	000000000000002b              cmp_item::~cmp_item()
00000000007c2cc6  w    F .text	000000000000002d              Create_func_weekofyear::Create_func_weekofyear()
00000000005f0824  w    F .text	000000000000000b              st_ha_check_opt::st_ha_check_opt()
0000000000619a52 g     F .text	0000000000000292              Prepared_statement::execute_server_runnable(Server_runnable*)
00000000005d0b3a  w    F .text	0000000000000026              List<Alter_column>::disjoin(List<Alter_column>*)
000000000090c122  w    F .text	000000000000002d              PFS_updatable_acl::PFS_updatable_acl()
00000000010ef1c0 g     O .data	0000000000000010              rwlock_instrument_prefix
000000000079a2ea  w    F .text	0000000000000058              Item_cache_datetime::~Item_cache_datetime()
000000000080a2a0  w    F .text	0000000000000046              Item_variance_field::~Item_variance_field()
0000000001077120  w    O .data.rel.ro	0000000000000360              vtable for Item_direct_ref
000000000073beda  w    F .text	000000000000006d              sp_instr_opt_meta::sp_instr_opt_meta(unsigned int, sp_pcontext*, unsigned int)
0000000000778df7 g     F .text	000000000000002a              ha_change_key_cache(st_key_cache*, st_key_cache*)
00000000013708c4 g     O .bss	0000000000000004              key_file_loadfile
00000000010ec560 g     O .data	0000000000000008              mysqld_system_database
0000000000858aee g     F .text	0000000000000026              QUICK_ROR_UNION_SELECT::~QUICK_ROR_UNION_SELECT()
00000000013707b8 g     O .bss	0000000000000004              key_master_info_run_lock
0000000000797048  w    F .text	000000000000005a              Item_field::is_outer_field() const
00000000007bef1a  w    F .text	0000000000000026              Create_func_envelope::~Create_func_envelope()
00000000008d06ab g     F .text	0000000000000194              escape_quotes_for_mysql
0000000000797dac  w    F .text	000000000000000f              Item_ref::ref_type()
000000000061b1c0 g     F .text	0000000000000117              Ed_connection::store_result_set()
000000000079207f g     F .text	0000000000000069              item_cmp_type(Item_result, Item_result)
00000000006b75ae g     F .text	000000000000004e              TABLE_LIST::is_leaf_for_name_resolution()
00000000006bf4f6 g     F .text	0000000000000011              Time_zone_system::get_name() const
0000000000659058  w    F .text	0000000000000085              Field_varstring::Field_varstring(unsigned char*, unsigned int, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, TABLE_SHARE*, charset_info_st*)
0000000001394d08 g     O .bss	0000000000000004              key_IO_CACHE_SHARE_cond
00000000008a6b76 g     F .text	0000000000000394              READ_INFO::next_line()
00000000008e4f41 g     F .text	00000000000000e4              intern_filename
0000000000817224  w    F .text	0000000000000023              Item_func_last_day::fix_length_and_dec()
0000000000766342  w    F .text	000000000000000f              Field_date::binary() const
0000000000809bce  w    F .text	000000000000001b              Item_sum_udf_float::fix_length_and_dec()
00000000007818ec g     F .text	0000000000000195              Item_name_const::Item_name_const(Item*, Item*)
0000000000767842  w    F .text	0000000000000038              Field_bit::sort_string(unsigned char*, unsigned int)
00000000005b04d6  w    F .text	0000000000000013              Open_table_context::set_has_protection_against_grl()
000000000090341b g     F .text	00000000000000f0              my_large_malloc
00000000010a6028  w    O .data.rel.ro	0000000000000398              vtable for Item_func_char
00000000007dc394  w    F .text	0000000000000058              Item_func_get_system_var::~Item_func_get_system_var()
0000000000780d7c g     F .text	0000000000000069              Item_sp_variable::Item_sp_variable(char*, unsigned int)
00000000007978d0  w    F .text	000000000000002b              Item_ident::~Item_ident()
00000000007aa608 g     F .text	0000000000000070              Item_func_isnotnull::print(String*, enum_query_type)
00000000007f2f12  w    F .text	000000000000002b              Item_func_collation::~Item_func_collation()
00000000007bcf22  w    F .text	000000000000001d              Create_func::Create_func()
00000000008a9092  w    F .text	000000000000002f              XML_TAG::~XML_TAG()
0000000000562f02 g     F .text	000000000000009e              Protocol::store_string_aux(char const*, unsigned long, charset_info_st*, charset_info_st*)
00000000005d00b0  w    F .text	000000000000001a              List<Key>::head_ref()
000000000055fbde  w    F .text	000000000000005e              File_parser::File_parser()
00000000005ef5aa g     F .text	000000000000002c              LEX::need_correct_ident()
000000000065ac22  w    F .text	0000000000000070              st_join_table::is_using_loose_index_scan()
000000000076728e  w    F .text	0000000000000014              Field_enum::pack_length() const
0000000000b8395f g     F .text	00000000000001b5              my_long10_to_str_8bit
000000000088e1ac g     F .text	0000000000000151              Gis_line_string::init_from_wkb(char const*, unsigned int, Geometry::wkbByteOrder, String*)
000000000070eac4  w    F .text	0000000000000041              Sys_var_double::~Sys_var_double()
000000000136cc05 g     O .bss	0000000000000001              opt_log_slave_updates
0000000000983c7c g     F .text	000000000000003b              hp_movelink
00000000007d9e43  w    F .text	0000000000000042              my_decimal_mod(unsigned int, my_decimal*, my_decimal const*, my_decimal const*)
00000000006f0918  w    F .text	000000000000006b              Delegate::Delegate()
00000000005f16ca  w    F .text	0000000000000033              Mem_root_array<st_order*, true>::clear()
0000000000ba5d00 g     F .text	000000000000015d              vio_read
0000000000873b6c  w    F .text	0000000000000026              List<QUICK_RANGE>::List(List<QUICK_RANGE> const&)
0000000001385c20 g     O .bss	0000000000000008              mysql_unix_port
0000000001218dc0 g     O .data	0000000000000100              to_upper_keybcs2_bin
00000000012c4a80 g     O .data	0000000000000800              page0FBdata
000000000098ed7a g     F .text	0000000000000031              ha_myisammrg::check(THD*, st_ha_check_opt*)
00000000007aea78  w    F .text	0000000000000046              Item_func_opt_neg::~Item_func_opt_neg()
000000000136dee0 g     O .bss	0000000000000200              mysql_unpacked_real_data_home
00000000005f137e  w    F .text	0000000000000012              Lex_input_stream::get_ptr()
00000000007f2ff6  w    F .text	000000000000002b              Item_func_set_collation::~Item_func_set_collation()
00000000008e792a g     F .text	0000000000000146              array_append_string_unique
000000000138dbe0 g     O .bss	0000000000000100              table_setup_instruments::m_table_lock
000000000138cd90 u     O .bss	0000000000000004              randomized_index(void const*, unsigned int)::seed2
0000000000878ea2 g     F .text	000000000000022a              Stored_routine_creation_ctx::load_from_db(THD*, sp_name const*, TABLE*)
000000000056ab26 g     F .text	000000000000003d              set_var_user::light_check(THD*)
000000000070cf56  w    F .text	000000000000002e              List<set_var_base>::List(List<set_var_base> const&, st_mem_root*)
00000000005bafe8 g     F .text	000000000000016f              Query_cache::ask_handler_allowance(THD*, TABLE_LIST*)
00000000006ac104 g     F .text	0000000000000045              Default_object_creation_ctx::change_env(THD*) const
00000000010872a0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_nullif
0000000000b7449b g     F .text	0000000000000032              lf_dynarray_init
0000000000000000       F *UND*	0000000000000000              fgets@@GLIBC_2.2.5
00000000008936ea  w    F .text	0000000000000026              Gis_point::~Gis_point()
000000000093b91e g     F .text	000000000000002d              _mi_delete_dynamic_record
00000000007fa13a g     F .text	0000000000000021              subselect_single_select_engine::no_rows()
000000000061c21c  w    F .text	0000000000000026              List_iterator<Item_param>::List_iterator(List<Item_param>&)
0000000000873c54  w    F .text	000000000000001a              List<QUICK_RANGE>::head_ref()
00000000007dcbd8  w    F .text	000000000000002b              Item_func_ord::~Item_func_ord()
0000000000783e56 g     F .text	0000000000000077              Item_field::val_decimal(my_decimal*)
00000000007f6346 g     F .text	0000000000000095              Item_in_subselect::test_limit(st_select_lex_unit*)
0000000000893334  w    F .text	0000000000000072              MBR::add_xy(char const*, char const*)
0000000000831a68 g     F .text	0000000000000080              Log_event::Log_event()
00000000010c1998  w    O .data.rel.ro	0000000000000078              vtable for Rotate_log_event
00000000007aebde  w    F .text	000000000000000f              Item_func_interval::decimal_precision() const
0000000000565672  w    F .text	000000000000001b              List<Item>::~List()
000000000081680a  w    F .text	0000000000000011              Item_func_sec_to_time::func_name() const
000000000079b9da  w    F .text	0000000000000025              List<Cached_item>::push_back(Cached_item*)
00000000006e7be0 g     F .text	00000000000001d6              end_connection(THD*)
000000000083d30e g     F .text	0000000000000444              User_var_log_event::write(st_io_cache*)
00000000013866b0 g     O .bss	0000000000000008              Create_func_radians::s_singleton
00000000007e2296  w    F .text	0000000000000046              Item_func_spatial_rel::~Item_func_spatial_rel()
00000000008899f8  w    F .text	000000000000002b              sp_instr_set_case_expr::~sp_instr_set_case_expr()
00000000007e334e  w    F .text	0000000000000014              Item_row::cols()
00000000007d0486 g     F .text	000000000000002d              Item_udf_func::cleanup()
000000000087428c  w    F .text	000000000000001b              QUICK_RANGE::~QUICK_RANGE()
000000000087f676 g     F .text	00000000000000e9              check_routine_name(st_mysql_lex_string*)
00000000005f1948  w    F .text	000000000000000f              Mem_root_array<st_order*, true>::element_size() const
00000000005ee4b0 g     F .text	000000000000013c              st_select_lex::mark_as_dependent(st_select_lex*)
0000000000799b75  w    F .text	000000000000003c              char_val(char)
00000000007be09a  w    F .text	000000000000002d              Create_func_connection_id::Create_func_connection_id()
000000000084059c g     F .text	000000000000000f              Begin_load_query_log_event::get_create_or_append() const
0000000000b5ade2 g     F .text	000000000000022b              ha_tina::chain_append()
00000000008d4904 g     F .text	000000000000049a              my_hash_update
000000000106c298  w    O .data.rel.ro	0000000000000048              vtable for MDL_object_lock
00000000007b33ec g     F .text	000000000000011e              Create_func_des_decrypt::create_native(THD*, st_mysql_lex_string, List<Item>*)
00000000012bb080 g     O .data	0000000000000600              page023data
000000000083c4a6 g     F .text	0000000000000081              Rand_log_event::do_apply_event(Relay_log_info const*)
00000000008a92d0  w    F .text	000000000000001b              List_iterator<XML_TAG>::rewind()
00000000006066da  w    F .text	000000000000003b              ErrConvString::ErrConvString(char const*, unsigned int, charset_info_st*)
0000000000b790b3 g     F .text	0000000000000210              _db_doprnt_
00000000007f3118  w    F .text	000000000000006a              Item_func_lpad::~Item_func_lpad()
00000000006eb116 g     F .text	000000000000014e              Event_parse_data::Event_parse_data()
0000000000840558 g     F .text	0000000000000043              Begin_load_query_log_event::Begin_load_query_log_event(char const*, unsigned int, Format_description_log_event const*)
000000000060108a g     F .text	000000000000015c              check_some_access(THD*, unsigned long, TABLE_LIST*)
00000000005d08d4  w    F .text	0000000000000026              List_iterator<Alter_drop>::init(List<Alter_drop>&)
000000000061f878 g     F .text	00000000000000b5              debug_sync_update(THD*, char*)
0000000000b69bcc g     F .text	00000000000000d1              ha_partition::index_read_map(unsigned char*, unsigned char const*, unsigned long, ha_rkey_function)
00000000005b1090  w    F .text	000000000000001a              List<TABLE_LIST>::head()
0000000000566dbe  w    F .text	0000000000000013              Item::intro_version(unsigned char*)
00000000006f09d0  w    F .text	000000000000001b              Trans_delegate::Trans_delegate()
000000000087d66a g     F .text	0000000000000167              sp_add_used_routine(Query_tables_list*, Query_arena*, MDL_key const*, TABLE_LIST*)
000000000138cb80 g     O .bss	0000000000000008              locks_immediate
00000000007be5ba  w    F .text	0000000000000026              Create_func_date_format::~Create_func_date_format()
0000000000749f60 g     F .text	0000000000000127              Field::store_time(st_mysql_time*, enum_mysql_timestamp_type)
000000000091f3f0 g     F .text	0000000000000085              ha_myisam::rnd_pos(unsigned char*, unsigned char*)
000000000136e448 g     O .bss	0000000000000008              ge_creator
00000000008db424 g     F .text	0000000000000073              my_b_filelength
0000000000827290 g     F .text	00000000000000a1              THD::binlog_set_stmt_begin()
0000000001386560 g     O .bss	0000000000000008              Create_func_intersects::s_singleton
00000000008a7832 g     F .text	0000000000001706              READ_INFO::read_xml()
0000000000b5c600 g     F .text	0000000000000090              ha_tina::position(unsigned char const*)
0000000000564664 g     F .text	0000000000000065              Protocol_binary::store(float, unsigned int, String*)
000000000055c106  w    F .text	000000000000008d              NAMED_ILINK::NAMED_ILINK(I_List<NAMED_ILINK>*, char const*, unsigned int, unsigned char*)
000000000085537c g     F .text	00000000000001e2              calc_daynr
00000000007b9b42  w    F .text	0000000000000137              Item_func::Item_func(Item*, Item*, Item*, Item*, Item*)
00000000006c6ab8 g     F .text	000000000000073f              mysql_client_binlog_statement(THD*)
00000000007b9ffa  w    F .text	0000000000000038              Item_func_exp::Item_func_exp(Item*)
000000000057a67a  w    F .text	000000000000001d              Deferred_log_events::is_last(Log_event*)
00000000008171b2  w    F .text	0000000000000011              Item_func_str_to_date::func_name() const
0000000000849ab2  w    F .text	0000000000000044              unexpected_error_code(int)
000000000075d60e g     F .text	0000000000000061              Field_enum::do_save_field_metadata(unsigned char*)
0000000001210bc0 g     O .data	0000000000000101              ctype_cp852_general_ci
0000000001375720 g     O .bss	0000000000000060              my_locale_ar_SD
00000000006f0a78  w    F .text	000000000000001b              Binlog_transmit_delegate::~Binlog_transmit_delegate()
000000000081bc82 g     F .text	00000000000006d2              Log_to_csv_event_handler::log_general(THD*, long, char const*, unsigned int, int, char const*, unsigned int, char const*, unsigned int, charset_info_st*)
00000000006ed5c2 g     F .text	0000000000000222              Resignal_statement::execute(THD*)
00000000013762c0 g     O .bss	0000000000000060              my_locale_es_UY
000000000136ce48 g     O .bss	0000000000000008              stored_program_cache_size
0000000000659872  w    F .text	000000000000002b              Item_result_field::~Item_result_field()
0000000000764d18  w    F .text	000000000000004c              Field::unpack_int32(unsigned char*, unsigned char const*, bool)
0000000000849848  w    F .text	000000000000002d              Incident_log_event::is_valid() const
0000000001072f28  w    O .data.rel.ro	0000000000000290              vtable for Field_new_decimal
0000000000559bc2  w    F .text	000000000000001f              base_ilist::~base_ilist()
000000000067995c g     F .text	0000000000000065              String::strip_sp()
000000000136ded8 g     O .bss	0000000000000008              log_error_file_ptr
00000000010ca080  w    O .data.rel.ro	0000000000000028              vtable for PFS_updatable_acl
00000000007b3326 g     F .text	0000000000000058              Create_func_decode::create(THD*, Item*, Item*)
00000000008179e4  w    F .text	000000000000002b              Item_func_from_unixtime::~Item_func_from_unixtime()
00000000013751e0 g     O .bss	0000000000000060              my_locale_ur_PK
0000000000796c96  w    F .text	000000000000002d              Item_name_const::result_type() const
00000000010edb68 g     O .data	0000000000000004              binlog_storage_engine
00000000007ba3ca  w    F .text	0000000000000038              Item_func_ceiling::Item_func_ceiling(Item*)
00000000012111e0 g     O .data	0000000000000101              ctype_latin7_general_ci
0000000000598d98  w    F .text	0000000000000029              Query_tables_list::first_not_own_table()
00000000005c8914 g     F .text	000000000000005d              Statement::set_statement(Statement*)
00000000008cd3d6 g     F .text	00000000000000b1              SHA256
000000000056773e  w    F .text	0000000000000046              Item_string::~Item_string()
0000000000811e2e g     F .text	00000000000000b6              Item_typecast::print(String*, enum_query_type)
00000000010e2fe0 g     O .data	0000000000000008              my_tz_SYSTEM
00000000007bd73a  w    F .text	000000000000002d              Create_func_area::Create_func_area()
0000000000568104 g     F .text	0000000000000233              Rpl_filter::db_ok_with_wild_table(char const*)
0000000001081340  w    O .data.rel.ro	0000000000000048              vtable for cmp_item_sort_string
000000000079b986  w    F .text	0000000000000026              List<Cached_item>::List(List<Cached_item> const&)
00000000007f3868  w    F .text	0000000000000046              Item_func_ltrim::~Item_func_ltrim()
000000000136cde8 g     O .bss	0000000000000008              binlog_stmt_cache_disk_use
0000000000678700  w    F .text	0000000000000026              List_iterator_fast<char>::List_iterator_fast(List<char>&)
0000000000b6e026 g     F .text	00000000000000cb              ha_partition::can_switch_engines()
00000000005cae16 g     F .text	0000000000000081              xid_cache_search(xid_t*)
000000000082cb2c  w    F .text	000000000000003b              TC_LOG_MMAP::TC_LOG_MMAP()
0000000000808c72  w    F .text	000000000000000b              Item_sum_sum::no_rows_in_result()
00000000007c5696 g     F .text	000000000000006b              Item_func::signal_divide_by_null()
0000000000912916 g     F .text	00000000000000d7              table_rwlock_instances::rnd_next()
000000000069990d g     F .text	0000000000000144              udf_free()
000000000106c2e0  w    O .data.rel.ro	0000000000000030              vtable for MDL_wait_for_subgraph
0000000001394070 g     O .bss	0000000000000008              my_string_stack_guard
000000000136feb0 g     O .bss	0000000000000004              connection_count
0000000000598b60  w    F .text	0000000000000021              TABLE_LIST::TABLE_LIST()
000000000065a396  w    F .text	000000000000003f              Item_cond_and::Item_cond_and()
00000000007aec8a  w    F .text	000000000000002b              Item_func_coalesce::~Item_func_coalesce()
00000000012cb4c0 g     O .data	00000000000000b0              my_charset_utf32_swedish_uca_ci
000000000075929c g     F .text	000000000000004c              Field_string::packed_col_length(unsigned char const*, unsigned int)
00000000008083d6 g     F .text	00000000000000a3              Item_func_group_concat::~Item_func_group_concat()
00000000006f2e92 g     F .text	000000000000032e              MDL_context::try_acquire_lock_impl(MDL_request*, MDL_ticket**)
00000000007fc6a4  w    F .text	000000000000000f              subselect_uniquesubquery_engine::uncacheable()
000000000079988c  w    F .text	00000000000000ba              Item_cache_row::cleanup()
0000000000756144 g     F .text	000000000000008b              Field_newdate::val_real()
000000000090f272  w    F .text	0000000000000031              PFS_triple_index::PFS_triple_index(unsigned int, unsigned int, unsigned int)
00000000007b1472  w    F .text	0000000000000046              Item_func_ge::~Item_func_ge()
000000000061bc2c g     F .text	0000000000000112              Protocol_local::send_eof(unsigned int, unsigned int)
0000000000790bd6 g     F .text	000000000000003b              Item_direct_ref::is_null()
00000000010b1e18  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_and
0000000000606a68  w    F .text	0000000000000051              Item_func::Item_func()
0000000000780f38 g     F .text	0000000000000086              Item_sp_variable::val_int()
00000000005d07fc  w    F .text	0000000000000026              List<Alter_drop>::prepand(List<Alter_drop>*)
0000000000887250 g     F .text	000000000000005f              sp_instr_hpop::print(String*)
00000000005d8f64 g     F .text	000000000000009a              Warning_info::push_warning(THD*, MYSQL_ERROR const*)
0000000000764874  w    F .text	000000000000004d              Field::charset_for_protocol() const
000000000090768b g     F .text	0000000000000058              get_filename_hash_pins(PFS_thread*)
0000000000610644 g     F .text	00000000000003b2              sys_var_pluginvar::global_update(THD*, set_var*)
0000000000796e76  w    F .text	000000000000002f              Item_ident_for_show::charset_for_protocol() const
00000000007bb242  w    F .text	0000000000000063              Item_str_func::Item_str_func(Item*, Item*, Item*, Item*, Item*)
0000000000982942  w    F .text	000000000000005e              ha_heap::scan_time()
000000000059b778  w    F .text	0000000000000041              Dummy_error_handler::~Dummy_error_handler()
0000000000815dbc  w    F .text	0000000000000021              Item_func_year::check_valid_arguments_processor(unsigned char*)
00000000007bc048  w    F .text	0000000000000038              Item_func_inet_ntoa::Item_func_inet_ntoa(Item*)
000000000070c0ce  w    F .text	0000000000000064              Sys_var_bit::global_value_ptr(THD*, st_mysql_lex_string*)
00000000006f6180  w    F .text	0000000000000041              MDL_object_lock::~MDL_object_lock()
0000000000889e26  w    F .text	000000000000001b              List<sp_instr>::List()
00000000007c02c4  w    F .text	0000000000000041              Create_func_lcase::~Create_func_lcase()
00000000006bf94c g     F .text	0000000000000038              my_tz_names_get_key
000000000068616a g     F .text	0000000000000156              sp_prepare_create_field(THD*, Create_field*)
0000000000b5e334 g     F .text	0000000000000012              Transparent_file::start()
000000000087355e  w    F .text	000000000000002d              TRP_ROR_UNION::TRP_ROR_UNION()
000000000079308a g     F .text	000000000000008a              Item_cache_int::val_str(String*)
00000000008685e4 g     F .text	00000000000000ad              QUICK_RANGE_SELECT::unique_key_range()
000000000059ff0a g     F .text	000000000000007e              find_temporary_table(THD*, char const*, unsigned int)
00000000012ca9e0 g     O .data	00000000000000b0              my_charset_utf8mb4_spanish2_uca_ci
000000000060ad6c g     F .text	00000000000000e8              plugin_unlock(THD*, st_plugin_int**)
000000000138cbe0 g     O .bss	0000000000000008              mutex_max
00000000007e1a9e  w    F .text	000000000000000f              Item_func_isclosed::select_optimize() const
0000000001385d30 g     O .bss	0000000000000004              des_default_key
00000000007d9ff2  w    F .text	0000000000000029              udf_handler::name() const
0000000000709624  w    F .text	0000000000000033              Sys_var_charptr::session_save_default(THD*, set_var*)
000000000086b144 g     F .text	0000000000000075              QUICK_RANGE_SELECT::make_reverse(unsigned int)
00000000007c6c20 g     F .text	000000000000007a              Item_func_unsigned::print(String*, enum_query_type)
00000000007b482e g     F .text	000000000000005d              Create_func_interiorringn::create(THD*, Item*, Item*)
00000000007bc686  w    F .text	000000000000004a              Item_func_numgeometries::Item_func_numgeometries(Item*)
00000000005ca2f1 g     F .text	0000000000000050              thd_wait_begin
00000000007ea314 g     F .text	0000000000000128              Item_func_password::val_str_ascii(String*)
00000000008d03c8 g     F .text	0000000000000059              resolve_charset
00000000007ae56e  w    F .text	000000000000000f              Item_func_not::functype() const
000000000089b4fe g     F .text	00000000000000cb              Materialized_cursor::Materialized_cursor(select_result*, TABLE*)
00000000008ac27f g     F .text	0000000000000033              set_linear_hash_mask(partition_info*, unsigned int)
0000000000599ba2  w    F .text	0000000000000012              ACL_PROXY_USER::get_user()
000000000073ff29 g     F .text	00000000000000fb              mysql_init
000000000083fc20 g     F .text	00000000000000c2              Delete_file_log_event::write(st_io_cache*)
000000000059b35c  w    F .text	000000000000002e              List<st_lex_user>::List(List<st_lex_user> const&, st_mem_root*)
00000000007c1f4c  w    F .text	000000000000002d              Create_func_sqrt::Create_func_sqrt()
00000000005f1e1a  w    F .text	000000000000001b              List<set_var_base>::List()
00000000007bd67e  w    F .text	0000000000000026              Create_func_aes_encrypt::~Create_func_aes_encrypt()
00000000007966d8  w    F .text	000000000000000f              Hybrid_type_traits_integer::type() const
0000000000659994  w    F .text	0000000000000014              Item_sum::get_arg_count() const
00000000008c15aa  w    F .text	000000000000005d              Item_xpath_cast_bool::Item_xpath_cast_bool(Item*, String*)
00000000005af234  w    F .text	000000000000003d              TABLE_SHARE::get_table_ref_version() const
00000000005b0552  w    F .text	0000000000000063              Query_log_event::~Query_log_event()
00000000006ba850  w    F .text	000000000000002a              Bitmap<64u>::subtract(Bitmap<64u>&)
00000000006ee844 g     F .text	000000000000023c              Binlog_transmit_delegate::transmit_start(THD*, unsigned short, char const*, unsigned long long)
000000000055995e  w    F .text	0000000000000025              I_List<i_string_pair>::is_last(i_string_pair*)
00000000010f1948 g     O .data	0000000000000004              myisammrg_storage_engine
000000000082bd08 g     F .text	0000000000000256              TC_LOG_MMAP::recover()
00000000005d9cc4  w    F .text	000000000000001b              List<MYSQL_ERROR>::List()
000000000136e320 g     O .bss	0000000000000020              global_datetime_format
0000000000606e3a  w    F .text	000000000000006c              Item_func_not_all::Item_func_not_all(Item*)
00000000007ba62a  w    F .text	0000000000000058              Item_func_min_max::~Item_func_min_max()
0000000000565882  w    F .text	0000000000000041              Protocol_text::~Protocol_text()
00000000006e5da8 g     F .text	0000000000000047              mysql_audit_init_thd(THD*)
00000000006e931e g     F .text	0000000000000080              PROFILING::~PROFILING()
00000000008c28f4  w    F .text	000000000000002b              Item_func_xml_extractvalue::~Item_func_xml_extractvalue()
00000000008275b2 g     F .text	000000000000007a              THD::binlog_get_pending_rows_event(bool) const
00000000013865c0 g     O .bss	0000000000000008              Create_func_like_range_min::s_singleton
00000000006d477c  w    F .text	000000000000001b              List_iterator<partition_element>::rewind()
0000000000737c14  w    F .text	0000000000000083              Item_sum_sum::Item_sum_sum(Item*, bool)
00000000006189dc g     F .text	0000000000000106              Prepared_statement::setup_set_params()
00000000007663c0  w    F .text	000000000000000f              Field_date::zero_pack() const
00000000007dc82c  w    F .text	0000000000000058              Item_master_pos_wait::~Item_master_pos_wait()
00000000007bf25c  w    F .text	0000000000000041              Create_func_find_in_set::~Create_func_find_in_set()
00000000005d2f22 g     F .text	000000000000001b              free_dbopt
00000000008b969c g     F .text	000000000000006c              get_next_partition_id_range(st_partition_iter*)
0000000000604989 g     F .text	0000000000000021              comp_ne_creator(bool)
000000000120d4a0 g     O .data	0000000000000101              ctype_cp1250_general_ci
0000000000b6cab8 g     F .text	0000000000000136              ha_partition::get_dynamic_partition_info(PARTITION_STATS*, unsigned int)
000000000084884b g     F .text	0000000000000055              my_strmov_quoted_identifier(THD*, char*, char const*, unsigned int)
00000000013707d0 g     O .bss	0000000000000004              key_relay_log_info_sleep_lock
00000000008c234a  w    F .text	0000000000000046              Item_nodeset_func_union::~Item_nodeset_func_union()
00000000007bdc18  w    F .text	0000000000000041              Create_func_bit_length::~Create_func_bit_length()
00000000007bce50  w    F .text	000000000000004d              Item_func_maketime::Item_func_maketime(Item*, Item*, Item*)
000000000085835a g     F .text	000000000000012f              QUICK_ROR_INTERSECT_SELECT::~QUICK_ROR_INTERSECT_SELECT()
00000000007c0f54  w    F .text	0000000000000026              Create_func_numgeometries::~Create_func_numgeometries()
000000000074a088 g     F .text	000000000000004e              Field::optimize_range(unsigned int, unsigned int)
00000000005bf3d0  w    F .text	0000000000000011              Query_cache_table::table()
00000000007b12aa  w    F .text	0000000000000046              Item_func_strcmp::~Item_func_strcmp()
00000000005c9872 g     F .text	000000000000002b              THD::set_status_var_init()
000000000088226a g     F .text	00000000000004b1              sp_head::execute_trigger(THD*, st_mysql_lex_string const*, st_mysql_lex_string const*, st_grant_info*)
00000000006fb328 g     F .text	00000000000002a8              trans_xa_start(THD*)
00000000010eab20 g     O .data	00000000000002f8              query_profile_statistics_info
00000000005b08b8  w    F .text	0000000000000011              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >::front()
00000000007906c2 g     F .text	0000000000000098              Item_ref::save_in_field(Field*, bool)
00000000012cc1e0 g     O .data	00000000000000b0              my_charset_utf16_polish_uca_ci
000000000075ce98 g     F .text	0000000000000126              Field_enum::store_type(unsigned long long)
00000000008f0a82 g     F .text	0000000000000022              my_cleanup_options
000000000136cd88 g     O .bss	0000000000000008              delayed_insert_timeout
000000000074a0d6 g     F .text	0000000000000110              Field::new_field(st_mem_root*, TABLE*, bool)
00000000007a373e g     F .text	000000000000002a              Item_func_ifnull::tmp_table_field(TABLE*)
000000000059b658  w    F .text	000000000000002a              Dynamic_array<GRANT_NAME*>::append(GRANT_NAME*&)
000000000057afa3 g     F .text	00000000000000ca              sp_cache_insert(sp_cache**, sp_head*)
0000000000767e4e  w    F .text	0000000000000046              Field_geom::~Field_geom()
0000000000766666  w    F .text	000000000000000f              Field_time::cmp_type() const
00000000007bc7f8  w    F .text	000000000000004a              Item_func_srid::Item_func_srid(Item*)
00000000006c1d26  w    F .text	000000000000002b              Time_zone_db::~Time_zone_db()
0000000000b66f84 g     F .text	00000000000000ff              ha_partition::store_lock(THD*, st_thr_lock_data**, thr_lock_type)
00000000010c2c50  w    O .data.rel.ro	0000000000000370              vtable for Item_proc_string
00000000007da1ac  w    F .text	0000000000000055              Item_func::agg_arg_charsets_for_string_result_with_comparison(DTCollation&, Item**, unsigned int, int)
00000000007c1584  w    F .text	0000000000000041              Create_func_quote::~Create_func_quote()
00000000006ba8ae  w    F .text	000000000000007b              my_decimal_precision_to_length_no_truncation(unsigned int, unsigned char, bool)
00000000007c8d60 g     F .text	00000000000005a8              Item_func_int_div::val_int()
000000000080a86a  w    F .text	0000000000000046              Item_sum_avg::~Item_sum_avg()
000000000107bed0  w    O .data.rel.ro	0000000000000358              vtable for Item_case_expr
000000000106bee8  w    O .data.rel.ro	0000000000000038              vtable for Time_zone_offset
0000000000678abe  w    F .text	0000000000000026              List_iterator<char>::List_iterator(List<char>&)
00000000008092ba  w    F .text	000000000000000f              Item_std_field::type() const
00000000012ca320 g     O .data	00000000000000b0              my_charset_utf8mb4_polish_uca_ci
000000000093683a g     F .text	0000000000000061              _mi_ck_delete
00000000006b279e g     F .text	00000000000000a9              free_blobs(TABLE*)
000000000054ccab g     F .text	000000000000001d              unireg_end()
00000000005f07bf  w    F .text	0000000000000012              operator new(unsigned long, void*)
00000000007f63dc g     F .text	0000000000000167              Item_in_subselect::Item_in_subselect(Item*, st_select_lex*)
00000000007db4d4  w    F .text	0000000000000061              Item_func_udf_str::val_decimal(my_decimal*)
0000000000755144 g     F .text	00000000000001fd              Field_date::store(long long, bool)
0000000001386388 g     O .bss	0000000000000008              Create_func_bin::s_singleton
00000000007bd47a  w    F .text	0000000000000041              Create_func_abs::~Create_func_abs()
0000000000803b4a g     F .text	00000000000002f4              Item_sum_sum::update_field()
000000000089377a  w    F .text	0000000000000050              Gis_point::get_x(double*) const
00000000008168de  w    F .text	000000000000000f              Item_extract::functype() const
000000000138e360 g     O .bss	0000000000000008              myisam_open_list
0000000000659304  w    F .text	00000000000000e5              Field_blob::copy()
00000000007c1cf4  w    F .text	000000000000002d              Create_func_sin::Create_func_sin()
00000000005dd424  w    F .text	000000000000002d              Sql_handler_lock_error_handler::Sql_handler_lock_error_handler()
00000000006ac0cc g     F .text	0000000000000037              Default_object_creation_ctx::create_backup_ctx(THD*) const
0000000000b7a77e g     F .text	0000000000000034              _db_unlock_file_
000000000056b1b8  w    F .text	0000000000000030              set_var_base::light_check(THD*)
00000000012071e0 g     O .data	00000000000000b0              my_charset_eucjpms_bin
000000000105dd00 g     O .data.rel.ro	00000000000001f0              command_name
00000000007679c4  w    F .text	000000000000002e              Field_bit_as_char::store(long long, bool)
00000000006784fc  w    F .text	000000000000001a              I_List<thread_info>::get()
0000000000000000       F *UND*	0000000000000000              compressBound@@ZLIB_1.2.0
0000000000817896  w    F .text	000000000000006a              Item_date_add_interval::~Item_date_add_interval()
00000000007af896  w    F .text	0000000000000048              cmp_item_sort_string_in_static::cmp_item_sort_string_in_static(charset_info_st*)
000000000074903a g     F .text	0000000000000113              Field::send_binary(Protocol*)
00000000007c3ac0 g     F .text	0000000000000131              Item_func::set_arguments(List<Item>&)
00000000007677e0  w    F .text	0000000000000031              Field_bit::set_image(unsigned char const*, unsigned int, charset_info_st*)
00000000007bc228  w    F .text	0000000000000038              Item_geometry_func::Item_geometry_func(Item*)
00000000009116be g     F .text	00000000000001e2              table_setup_instruments::rnd_next()
000000000105df60 g     O .data.rel.ro	0000000000000080              plugin_type_names
00000000007fc6d6  w    F .text	0000000000000015              st_select_lex_unit::is_prepared()
000000000070a662  w    F .text	0000000000000041              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::~Sys_var_unsigned()
00000000005a397a g     F .text	000000000000013e              Open_table_context::request_backoff_action(Open_table_context::enum_open_table_action, TABLE_LIST*)
00000000007e8b9e g     F .text	000000000000005f              Item_func_substr_index::fix_length_and_dec()
0000000000678b6c  w    F .text	000000000000001d              List_iterator<p_elem_val>::operator++(int)
00000000007f1e48  w    F .text	000000000000002b              Item_func_sysconst::~Item_func_sysconst()
00000000006a5cd2 g     F .text	0000000000000fc5              mysql_create_view(THD*, TABLE_LIST*, enum_view_create_mode)
00000000010c9a40  w    O .data.rel.ro	0000000000000028              vtable for Event_db_intact
00000000005b08d6  w    F .text	0000000000000039              I_P_List<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::I_P_List()
00000000007f3784  w    F .text	0000000000000046              Item_func_password::~Item_func_password()
000000000085265b g     F .text	000000000000017f              pack_row_old(TABLE*, st_bitmap const*, unsigned char*, unsigned char const*)
0000000000602950 g     F .text	0000000000000553              add_field_to_list(THD*, st_mysql_lex_string*, enum_field_types, char*, char*, unsigned int, Item*, Item*, st_mysql_lex_string*, char*, List<String>*, charset_info_st*, unsigned int)
00000000007c16f2  w    F .text	0000000000000026              Create_func_rand::~Create_func_rand()
00000000005c87d0 g     F .text	000000000000003d              Query_arena::set_query_arena(Query_arena*)
00000000007c0774  w    F .text	0000000000000041              Create_func_log::~Create_func_log()
0000000000788960 g     F .text	00000000000000c6              Item_ref_null_helper::val_real()
00000000007bebbc  w    F .text	000000000000002d              Create_func_disjoint::Create_func_disjoint()
00000000005bf5a8  w    F .text	0000000000000019              Diagnostics_area::is_set() const
00000000007682c2  w    F .text	0000000000000046              Field_float::~Field_float()
00000000007649bc  w    F .text	000000000000000f              Field::is_updatable() const
000000000089f2dc g     F .text	000000000000016d              mysql_do(THD*, List<Item>&)
000000000137080c g     O .bss	0000000000000004              key_rwlock_query_cache_query_lock
0000000000816ef6  w    F .text	0000000000000014              Item_func_add_time::field_type() const
0000000000796de6  w    F .text	000000000000002d              Item_ident_for_show::val_int()
000000000076526a  w    F .text	000000000000000f              Field_decimal::type() const
0000000000559460  w    F .text	000000000000002d              Le_creator::Le_creator()
0000000000840688 g     F .text	00000000000001eb              Execute_load_query_log_event::Execute_load_query_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000008a92ec  w    F .text	000000000000001b              List_iterator<XML_TAG>::remove()
000000000087221c  w    F .text	000000000000003d              QUICK_GROUP_MIN_MAX_SELECT::append_loose_scan_type(String*)
0000000000809798  w    F .text	0000000000000046              Item_sum_bit::~Item_sum_bit()
00000000005efd6a g     F .text	000000000000003a              LEX::restore_backup_query_tables_list(Query_tables_list*)
00000000008aa28b g     F .text	000000000000019b              get_part_for_delete(unsigned char const*, unsigned char const*, partition_info*, unsigned int*)
0000000000991b50 g     F .text	000000000000009f              myrg_records
0000000001210ee0 g     O .data	0000000000000100              sort_order_cp852_general_ci
0000000000b947c4 g     F .text	0000000000000059              my_charset_is_ascii_compatible
000000000079bd5a  w    F .text	0000000000000046              Cached_item_real::~Cached_item_real()
00000000005ef10e g     F .text	0000000000000296              LEX::LEX()
0000000000849396  w    F .text	000000000000000f              Append_block_log_event::get_type_code()
00000000007c5bf6 g     F .text	00000000000001d0              Item_func_num1::find_num_type()
0000000000758c68 g     F .text	0000000000000076              Field_string::sort_string(unsigned char*, unsigned int)
0000000001212a80 g     O .data	0000000000000100              to_lower_latin1_general_ci
00000000005a7365 g     F .text	0000000000000196              rm_temporary_table(handlerton*, char const*)
0000000000ba3ff6 g     F .text	0000000000000158              strxmov
00000000005888ec g     F .text	0000000000000112              grant_init()
00000000007f223e  w    F .text	0000000000000011              Item_func_lpad::func_name() const
00000000007bded8  w    F .text	000000000000002d              Create_func_compress::Create_func_compress()
00000000006d473a  w    F .text	000000000000001b              List<p_elem_val>::List()
00000000008d43f8 g     F .text	000000000000050c              my_hash_delete
00000000010efe31 g     O .data	0000000000000001              flag_events_waits_history
000000000121a860 g     O .data	0000000000000200              to_uni_latin7_bin
000000000091c3f2 g     F .text	00000000000000ae              ha_myisam::write_row(unsigned char*)
00000000007e19fe  w    F .text	0000000000000034              Item_func_spatial_rel::is_null()
00000000008c2182  w    F .text	0000000000000046              Item_nodeset_func_ancestorbyname::~Item_nodeset_func_ancestorbyname()
00000000007e0dc2  w    F .text	0000000000000056              MBR::MBR(double, double, double, double)
00000000007f1ea8  w    F .text	0000000000000011              Item_func_database::func_name() const
00000000007c1872  w    F .text	0000000000000041              Create_func_round::~Create_func_round()
000000000082b914 g     F .text	00000000000001c1              TC_LOG_MMAP::unlog(unsigned long, unsigned long long)
000000000073855c  w    F .text	0000000000000040              Item_func_additive_op::Item_func_additive_op(Item*, Item*)
0000000000606716  w    F .text	0000000000000049              Create_field::Create_field()
00000000005b9b22 g     F .text	0000000000000193              Query_cache::free_memory_block(Query_cache_block*)
0000000000739ec2  w    F .text	0000000000000038              Item_func_old_password::Item_func_old_password(Item*)
0000000000814964 g     F .text	000000000000027d              Item_func_str_to_date::fix_length_and_dec()
0000000000559b7e  w    F .text	0000000000000026              I_List_iterator<Statement>::I_List_iterator(I_List<Statement>&)
0000000000755612 g     F .text	00000000000001ab              Field_date::val_str(String*, String*)
00000000012ae900 g     O .data	00000000000000b0              my_charset_tis620_thai_ci
00000000007562d6 g     F .text	000000000000031f              Field_newdate::val_str(String*, String*)
00000000010ab318  w    O .data.rel.ro	0000000000000398              vtable for Item_str_conv
00000000007bee42  w    F .text	0000000000000041              Create_func_endpoint::~Create_func_endpoint()
00000000007fc23c  w    F .text	0000000000000034              Item_subselect::is_null()
000000000077bf74  w    F .text	0000000000000012              handler::cond_push(Item const*)
000000000086f420 g     F .text	00000000000001b6              QUICK_GROUP_MIN_MAX_SELECT::update_key_stat()
00000000008e82a2 g     F .text	0000000000000276              create_temp_file
000000000082870c g     F .text	000000000000005f              general_log_write(THD*, enum_server_command, char const*, unsigned int)
0000000000567624  w    F .text	0000000000000045              Item_string::val_str(String*)
000000000082d066  w    F .text	0000000000000059              Format_description_log_event::~Format_description_log_event()
00000000007ba682  w    F .text	000000000000002b              Item_func_min_max::~Item_func_min_max()
000000000090c3a8  w    F .text	0000000000000041              PFS_internal_schema_access::~PFS_internal_schema_access()
00000000012c98a0 g     O .data	00000000000000b0              my_charset_utf8_danish_uca_ci
00000000013955f0 g     O .bss	0000000000000004              THR_KEY_mysys
000000000120ff80 g     O .data	0000000000000101              ctype_macce_general_ci
00000000005c2dc6 g     F .text	0000000000000269              THD::cleanup()
00000000007ae6be  w    F .text	0000000000000046              Item_bool_rowready_func2::~Item_bool_rowready_func2()
000000000070d0be  w    F .text	0000000000000074              List<set_var_base>::delete_elements()
00000000009081f5  w    F .text	000000000000003b              reset_single_stat_link(PFS_single_stat_chain*)
00000000007e10ae  w    F .text	000000000000007b              MBR::within(MBR const*)
000000000093059e g     F .text	00000000000000f6              test_if_almost_full
00000000010c1740  w    O .data.rel.ro	0000000000000078              vtable for Slave_log_event
0000000000876ae2 g     F .text	000000000000004b              Item_proc_real::val_decimal(my_decimal*)
00000000007bab00  w    F .text	0000000000000038              Item_func_bit_count::Item_func_bit_count(Item*)
00000000007bab66  w    F .text	0000000000000038              Item_func_last_insert_id::Item_func_last_insert_id(Item*)
000000000075d7ba g     F .text	000000000000006c              Field_enum::sort_string(unsigned char*, unsigned int)
0000000000658ee8  w    F .text	0000000000000077              Field_longlong::Field_longlong(unsigned int, bool, char const*, bool)
00000000008c1d80  w    F .text	000000000000000f              Item_nodeset_to_const_comparator::is_bool_func()
0000000000000000       F *UND*	0000000000000000              backtrace_symbols_fd@@GLIBC_2.2.5
00000000006a4ea8  w    F .text	000000000000001b              List<TABLE>::~List()
000000000059b170  w    F .text	0000000000000025              List<LEX_COLUMN>::push_back(LEX_COLUMN*)
00000000005d0980  w    F .text	000000000000001b              List_iterator<Alter_drop>::remove()
0000000001086ca0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_str_to_date
00000000007dc260  w    F .text	000000000000002b              Item_func_bit_xor::~Item_func_bit_xor()
00000000007cd960 g     F .text	000000000000009e              Item_func_length::val_int()
0000000000000000       F *UND*	0000000000000000              snprintf@@GLIBC_2.2.5
0000000000772529 g     F .text	00000000000001be              ha_prepare(THD*)
0000000000815a1c  w    F .text	0000000000000013              Item_func_month::check_partition_func_processor(unsigned char*)
0000000000889ae8  w    F .text	000000000000001b              List<sp_head::bp_t>::~List()
000000000136cc58 g     O .bss	0000000000000008              opt_binlog_rows_event_max_size
00000000007fc166  w    F .text	0000000000000014              Item_in_optimizer::get_cache()
00000000005b0f96  w    F .text	0000000000000026              List<Natural_join_column>::concat(List<Natural_join_column>*)
000000000088dbac g     F .text	00000000000000ea              Geometry::get_mbr_for_points(MBR*, char const*, unsigned int) const
0000000000847fec g     F .text	00000000000001d0              Update_rows_log_event::do_exec_row(Relay_log_info const*)
00000000007b999a  w    F .text	0000000000000040              Item_sum_udf_float::Item_sum_udf_float(st_udf_func*, List<Item>&)
00000000005e86fc  w    F .text	0000000000000041              base_list_iterator::sublist(base_list&, unsigned int)
00000000007bddda  w    F .text	0000000000000041              Create_func_char_length::~Create_func_char_length()
00000000007f3abe  w    F .text	000000000000002b              Item_func_left::~Item_func_left()
000000000077af24 g     F .text	000000000000001f              handler::use_hidden_primary_key()
00000000007625e7 g     F .text	00000000000000d2              calc_pack_length(enum_field_types, unsigned int)
00000000008d3ef2 g     F .text	0000000000000506              my_hash_insert
00000000007a3b82 g     F .text	0000000000000107              Item_func_if::fix_fields(THD*, Item**)
00000000007bf80a  w    F .text	000000000000002d              Create_func_get_lock::Create_func_get_lock()
00000000006f57d8  w    F .text	0000000000000021              MDL_map::MDL_map()
000000000082ddb0  w    F .text	0000000000000026              Log_to_file_event_handler::~Log_to_file_event_handler()
000000000079baa2  w    F .text	0000000000000026              List<Cached_item>::disjoin(List<Cached_item>*)
000000000069dc2a  w    F .text	000000000000002b              select_union::~select_union()
00000000007adc34  w    F .text	0000000000000060              Item_int_with_ref::Item_int_with_ref(long long, Item*, char)
00000000007f3b5c  w    F .text	0000000000000046              Item_func_lcase::~Item_func_lcase()
00000000010cd9d8 g     O .data	0000000000000008              in_having_cond
00000000007da202  w    F .text	00000000000000ea              Item_func::raise_numeric_overflow(char const*)
00000000005e9544  w    F .text	0000000000000013              List_iterator_fast<List<Item> >::replace(List<List<Item> >&)
00000000008daf4e g     F .text	0000000000000204              my_b_seek
00000000010689e0  w    O .data.rel.ro	0000000000000358              vtable for Item_partition_func_safe_string
00000000007b1016  w    F .text	0000000000000046              Item_func_nullif::~Item_func_nullif()
00000000005cac42 g     F .text	000000000000005e              THD::mark_transaction_to_rollback(bool)
00000000012bf480 g     O .data	0000000000000600              page030data
0000000001208c40 g     O .data	0000000000000100              to_lower_koi8r_general_ci
00000000007c3c44 g     F .text	0000000000000154              Item_func::Item_func(THD*, Item_func*)
00000000007bfb26  w    F .text	0000000000000041              Create_func_inet_ntoa::~Create_func_inet_ntoa()
000000000091724a g     F .text	0000000000000096              init_events_waits_history_long(unsigned int)
0000000000658e70  w    F .text	0000000000000077              Field_long::Field_long(unsigned int, bool, char const*, bool)
0000000000566c18  w    F .text	000000000000003a              Item::charset_for_protocol() const
00000000005ceacc  w    F .text	000000000000001b              SQL_I_List<st_order>::~SQL_I_List()
00000000007c1aca  w    F .text	0000000000000041              Create_func_sec_to_time::~Create_func_sec_to_time()
000000000136d280 g     O .bss	0000000000000200              default_logfile_name
0000000000858c48 g     F .text	00000000000000e6              SEL_ARG::SEL_ARG(Field*, unsigned char const*, unsigned char const*)
000000000075cfbe g     F .text	000000000000032b              Field_enum::store(char const*, unsigned int, charset_info_st*)
000000000086a3e4 g     F .text	000000000000037d              QUICK_RANGE_SELECT::get_next_prefix(unsigned int, unsigned int, unsigned char*)
000000000083a46a g     F .text	0000000000000def              Load_log_event::do_apply_event(st_net*, Relay_log_info const*, bool)
00000000007b1400  w    F .text	0000000000000046              Item_func_gt::~Item_func_gt()
000000000062ee62 g     F .text	0000000000000296              JOIN::destroy()
0000000000843630 g     F .text	0000000000000112              Rows_log_event::do_update_pos(Relay_log_info*)
0000000000986ee3 g     F .text	0000000000000048              heap_find
000000000062c1d4 g     F .text	0000000000000328              JOIN::reinit()
000000000090350b g     F .text	0000000000000099              my_large_free
00000000007bc842  w    F .text	0000000000000040              Item_func_period_add::Item_func_period_add(Item*, Item*)
000000000088cf32  w    F .text	000000000000001b              Sql_condition_info::Sql_condition_info()
000000000138cdf0 g     O .bss	0000000000000008              table_share_max
0000000001374040 g     O .bss	0000000000000060              my_locale_ca_ES
00000000007d3a86 g     F .text	0000000000000084              Item_func_set_user_var::val_str(String*)
00000000008c1308  w    F .text	0000000000000062              Item_nodeset_func_descendantbyname::Item_nodeset_func_descendantbyname(Item*, char const*, unsigned int, String*, bool)
0000000000558ca6  w    F .text	0000000000000058              base_ilist_iterator::next()
00000000006f5508  w    F .text	00000000000000c0              MDL_lock::MDL_lock(MDL_key const*)
00000000008051b6 g     F .text	0000000000000049              Item_avg_field::val_str(String*)
000000000069d644 g     F .text	00000000000000bc              st_select_lex_unit::reinit_exec_mechanism()
00000000007dab4c  w    F .text	0000000000000011              Item_func_asin::func_name() const
00000000007b2240 g     F .text	000000000000007c              Create_func_arg0::create_func(THD*, st_mysql_lex_string, List<Item>*)
000000000077baf6  w    F .text	0000000000000057              handler::rnd_pos_by_record(unsigned char*)
00000000009174fb g     F .text	00000000000000bb              reset_events_waits_history()
00000000007d9cfc  w    F .text	000000000000003d              my_decimal_floor(unsigned int, my_decimal const*, my_decimal*)
0000000001385d40 g     O .bss	0000000000000078              hton2plugin
00000000010871b0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_ord
000000000055c262  w    F .text	0000000000000026              I_List_iterator<NAMED_ILINK>::I_List_iterator(I_List<NAMED_ILINK>&)
00000000007ab920 g     F .text	0000000000000260              Item_func_regex::val_int()
0000000000567800  w    F .text	0000000000000046              Item_partition_func_safe_string::~Item_partition_func_safe_string()
0000000000658483 g     F .text	00000000000002ed              get_index_for_order(st_order*, TABLE*, SQL_SELECT*, unsigned long long, bool*, bool*)
000000000082b374 g     F .text	0000000000000054              TC_LOG_MMAP::overflow()
0000000001214700 g     O .data	0000000000000101              ctype_macroman_bin
00000000010df360 g     O .data	00000000000000c8              table_names_fields_info
00000000007bc298  w    F .text	0000000000000040              Item_func_geometry_from_text::Item_func_geometry_from_text(Item*, Item*)
00000000008fa097 g     F .text	0000000000000915              rijndaelEncrypt
0000000001087450  w    O .data.rel.ro	0000000000000030              vtable for Create_func_lpad
00000000007968c2  w    F .text	0000000000000026              Settable_routine_parameter::~Settable_routine_parameter()
0000000000612938 g     F .text	00000000000000ac              add_plugin_options(st_dynamic_array*, st_mem_root*)
000000000087eb58  w    F .text	000000000000002b              Stored_routine_creation_ctx::~Stored_routine_creation_ctx()
000000000077bcdc  w    F .text	0000000000000012              handler::is_fk_defined_on_table_or_index(unsigned int)
0000000000800348 g     F .text	0000000000000229              Item_sum_sum::add()
00000000006f600b  w    F .text	0000000000000016              I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>::next_ptr(MDL_ticket*)
000000000061c0e4  w    F .text	000000000000000f              Protocol_local::type()
000000000059b452  w    F .text	0000000000000026              List<st_lex_user>::concat(List<st_lex_user>*)
00000000007ca426 g     F .text	00000000000000c3              Item_func_exp::val_real()
0000000000599106  w    F .text	0000000000000035              Prelocking_strategy::~Prelocking_strategy()
00000000007bff40  w    F .text	0000000000000041              Create_func_isclosed::~Create_func_isclosed()
00000000008579fc g     F .text	000000000000013a              QUICK_ROR_INTERSECT_SELECT::QUICK_ROR_INTERSECT_SELECT(THD*, TABLE*, bool, st_mem_root*)
000000000073ba7e  w    F .text	000000000000008d              sp_name::sp_name(st_mysql_lex_string, st_mysql_lex_string, bool)
0000000001218380 g     O .data	0000000000000100              to_upper_hebrew_bin
0000000000798b86  w    F .text	0000000000000046              Item_copy_int::~Item_copy_int()
0000000000969e07 g     F .text	0000000000000c56              rtree_rect_volume
000000000090aed6 g     F .text	0000000000000037              PFS_engine_table::get_position(void*)
00000000010eef28 g     O .data	0000000000000004              builtin_perfschema_plugin_interface_version
0000000000756f38 g     F .text	0000000000000643              Field_datetime::val_str(String*, String*)
000000000055b605 g     F .text	000000000000047d              my_net_read
00000000006d45f6  w    F .text	0000000000000102              partition_element::partition_element(partition_element*)
00000000007bae98  w    F .text	0000000000000052              Item_func_get_lock::Item_func_get_lock(Item*, Item*)
0000000000000000       F *UND*	0000000000000000              closedir@@GLIBC_2.2.5
00000000006d747c g     F .text	0000000000000044              injector::transaction::~transaction()
00000000013707bc g     O .bss	0000000000000004              key_master_info_sleep_lock
0000000000b82a68 g     F .text	00000000000001a4              my_strnncollsp_simple
00000000005c0bac g     F .text	0000000000000017              thd_get_fd(THD*)
00000000006074f2  w    F .text	0000000000000035              select_send::select_send()
000000000076773a  w    F .text	000000000000002f              Field_bit::cmp_binary_offset(unsigned int)
000000000059af76  w    F .text	0000000000000026              List_iterator<LEX_COLUMN>::after(LEX_COLUMN*)
00000000007da968  w    F .text	0000000000000035              Item_func_neg::decimal_precision() const
0000000000567080  w    F .text	0000000000000039              Item_basic_constant::Item_basic_constant()
00000000007be5e0  w    F .text	000000000000002d              Create_func_datediff::Create_func_datediff()
0000000000848d30  w    F .text	000000000000001b              Log_event::register_temp_buf(char*)
0000000000768296  w    F .text	000000000000002b              Field_double::~Field_double()
0000000000559abe  w    F .text	000000000000001a              I_List<Statement>::is_empty()
00000000007ba9c4  w    F .text	000000000000006e              Item_func_field::Item_func_field(List<Item>&)
000000000083fe4a g     F .text	0000000000000066              Execute_load_log_event::Execute_load_log_event(THD*, char const*, bool)
0000000001087780  w    O .data.rel.ro	0000000000000030              vtable for Create_func_isclosed
0000000001386530 g     O .bss	0000000000000008              Create_func_hex::s_singleton
00000000007f9e80 g     F .text	0000000000000063              subselect_union_engine::subselect_union_engine(st_select_lex_unit*, select_subselect*, Item_subselect*)
00000000006787a2  w    F .text	000000000000002c              List_iterator_fast<char>::sublist(List<char>&, unsigned int)
00000000005b0f78  w    F .text	000000000000001d              List_iterator_fast<String>::operator++(int)
00000000008364e0 g     F .text	000000000000118f              Query_log_event::do_apply_event(Relay_log_info const*, char const*, unsigned int)
000000000106bbf8  w    O .data.rel.ro	0000000000000030              vtable for Object_creation_ctx
0000000000b5deba  w    F .text	0000000000000014              ha_tina::table_flags() const
00000000008495f2  w    F .text	0000000000000012              Table_map_log_event::get_db()
000000000067a91c g     F .text	00000000000000ec              copy_if_not_alloced(String*, String*, unsigned int)
00000000006b96be g     F .text	000000000000009e              TABLE::restore_column_maps_after_mark_index()
0000000000000000       F *UND*	0000000000000000              times@@GLIBC_2.2.5
00000000010c3640  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_cpop
00000000007e238c  w    F .text	0000000000000046              Item_func_point::~Item_func_point()
000000000090fed8  w    F .text	0000000000000026              table_file_instances::~table_file_instances()
00000000006e451f g     F .text	00000000000000e6              servers_free(bool)
00000000007ba032  w    F .text	0000000000000038              Item_func_ln::Item_func_ln(Item*)
000000000090e452 g     F .text	0000000000000010              table_events_waits_summary_by_thread_by_event_name::delete_all_rows()
00000000005ceb20  w    F .text	000000000000001b              List<Item_outer_ref>::~List()
00000000007e1602  w    F .text	000000000000000f              Item_func_as_wkb::field_type() const
00000000007ba9c4  w    F .text	000000000000006e              Item_func_field::Item_func_field(List<Item>&)
00000000005919e4 g     F .text	000000000000039c              wild_case_compare(charset_info_st*, char const*, char const*)
0000000000658bfc  w    F .text	0000000000000017              Warning_info::reset_current_row_for_warning()
000000000090e332  w    F .text	0000000000000041              table_events_waits_history_long::~table_events_waits_history_long()
00000000008854c0 g     F .text	000000000000046d              sp_head::show_routine_code(THD*)
00000000008cb2a8  w    F .text	0000000000000046              Alter_table_analyze_partition_statement::~Alter_table_analyze_partition_statement()
0000000001386600 g     O .bss	0000000000000008              Create_func_lpad::s_singleton
0000000000873fe8  w    F .text	000000000000001a              List<SEL_IMERGE>::head()
00000000007c06de  w    F .text	0000000000000041              Create_func_locate::~Create_func_locate()
0000000001217c40 g     O .data	0000000000000101              ctype_greek_bin
00000000010ca428  w    O .data.rel.ro	0000000000000048              vtable for table_file_summary_by_instance
000000000136e428 g     O .bss	0000000000000008              eq_creator
00000000007f1e74  w    F .text	0000000000000033              Item_func_database::fix_length_and_dec()
000000000082caf0  w    F .text	000000000000000b              TC_LOG_DUMMY::close()
0000000000887614 g     F .text	000000000000009a              sp_instr_cpop::execute(THD*, unsigned int*)
000000000065b1fa  w    F .text	0000000000000048              JOIN::set_items_ref_array(Item**)
00000000010c35d0  w    O .data.rel.ro	0000000000000070              vtable for sp_instr_copen
00000000005670f4  w    F .text	0000000000000046              Item_basic_constant::~Item_basic_constant()
00000000007c016a  w    F .text	000000000000002d              Create_func_last_day::Create_func_last_day()
000000000106bd68  w    O .data.rel.ro	0000000000000050              vtable for Field_iterator_natural_join
0000000000b5dd8a g     F .text	0000000000000016              ha_tina::check_if_incompatible_data(st_ha_create_information*, unsigned int)
000000000080863a  w    F .text	000000000000003d              Aggregator::Aggregator(Item_sum*)
00000000007bc764  w    F .text	000000000000004a              Item_func_area::Item_func_area(Item*)
0000000000607370  w    F .text	0000000000000013              THD::current_utime()
00000000007af73e  w    F .text	000000000000002d              cmp_item_real::cmp_item_real()
0000000000000000       F *UND*	0000000000000000              gettimeofday@@GLIBC_2.2.5
00000000007bd44c  w    F .text	000000000000002d              Create_func_abs::Create_func_abs()
0000000000797452  w    F .text	0000000000000045              Item_float::val_real()
000000000075bc9c g     F .text	00000000000000d5              Field_blob::cmp_max(unsigned char const*, unsigned char const*, unsigned int)
0000000000600df1 g     F .text	00000000000001c5              check_routine_access(THD*, unsigned long, char*, char*, bool, bool)
00000000009833d2 g     F .text	00000000000000ca              heap_extra
00000000007557ec g     F .text	00000000000000c5              Field_date::cmp(unsigned char const*, unsigned char const*)
00000000005f1a80  w    F .text	000000000000001b              List<st_udf_func>::List()
0000000000612bf6  w    F .text	0000000000000046              sys_var_pluginvar::~sys_var_pluginvar()
0000000000884956 g     F .text	000000000000012e              sp_head::restore_thd_mem_root(THD*)
0000000001085a58  w    O .data.rel.ro	0000000000000398              vtable for Item_func_nop_all
0000000000566a4e  w    F .text	0000000000000041              Item::print(String*, enum_query_type)
00000000007b0372  w    F .text	000000000000003c              Item_in_subselect::set_cond_guard_var(int, bool)
00000000008c68e8 g     F .text	000000000000011f              Event_queue::empty_queue()
0000000000851c5a g     F .text	00000000000000bc              Delete_rows_log_event_old::do_before_row_operations(Slave_reporting_capability const*)
000000000070e784  w    F .text	0000000000000041              Sys_var_have::~Sys_var_have()
0000000000618eba g     F .text	00000000000007f3              Prepared_statement::prepare(char const*, unsigned int)
0000000000763f85  w    F .text	00000000000000b7              my_decimal2int(unsigned int, my_decimal const*, char, long long*)
0000000000b7a615 g     F .text	0000000000000039              _db_flush_
0000000001074e60  w    O .data.rel.ro	0000000000000388              vtable for Item_cache_decimal
000000000093c8ba g     F .text	000000000000104d              _mi_write_part_record
000000000086fa7c g     F .text	00000000000002df              QUICK_GROUP_MIN_MAX_SELECT::next_min()
00000000007fc970  w    F .text	0000000000000046              subselect_union_engine::~subselect_union_engine()
000000000087ea36  w    F .text	0000000000000041              Silence_deprecated_warning::~Silence_deprecated_warning()
000000000070c720  w    F .text	0000000000000013              Sys_var_have::session_save_default(THD*, set_var*)
000000000136fba8 g     O .bss	0000000000000008              report_user
000000000069054a  w    F .text	000000000000002b              String::chop()
0000000000900dc5 g     F .text	00000000000000d9              tree_search
00000000007e1f04  w    F .text	000000000000002b              Item_func_x::~Item_func_x()
000000000070e8bc  w    F .text	0000000000000041              Sys_var_debug_sync::~Sys_var_debug_sync()
00000000013866d8 g     O .bss	0000000000000008              Create_func_row_count::s_singleton
00000000007916f6 g     F .text	0000000000000077              Item_insert_value::eq(Item const*, bool) const
0000000000559d18  w    F .text	0000000000000041              File_parser_dummy_hook::~File_parser_dummy_hook()
000000000077b73c  w    F .text	0000000000000033              handler::init()
00000000006b580c g     F .text	0000000000000011              Wait_for_flush::get_deadlock_weight() const
000000000106b3e8  w    O .data.rel.ro	0000000000000020              vtable for thread_info
0000000001386548 g     O .bss	0000000000000008              Create_func_inet_aton::s_singleton
00000000007b079a  w    F .text	000000000000006a              Item_func_regex::~Item_func_regex()
000000000055bfa7 g     F .text	0000000000000030              free_key_cache(char const*, st_key_cache*)
00000000007524c2 g     F .text	0000000000000082              Field_double::cmp(unsigned char const*, unsigned char const*)
00000000010877b0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_is_used_lock
00000000007fbf1c g     F .text	000000000000005a              subselect_union_engine::change_result(Item_subselect*, select_subselect*)
000000000087fe5c g     F .text	00000000000001aa              sp_head::init_sp_name(THD*, sp_name*)
0000000000991a98 g     F .text	0000000000000047              myrg_update
000000000079f4e0 g     F .text	00000000000000c7              Arg_comparator::compare_e_binary_string()
000000000136cc40 g     O .bss	0000000000000001              opt_log_slow_admin_statements
0000000000904752 g     F .text	000000000000005e              ha_perfschema::ha_perfschema(handlerton*, TABLE_SHARE*)
0000000000910d58 g     F .text	0000000000000083              table_performance_timers::rnd_pos(void const*)
0000000000809512  w    F .text	0000000000000014              Item_sum_hybrid::result_type() const
0000000000817a68  w    F .text	000000000000002b              Item_func_date_format::~Item_func_date_format()
00000000007c2340  w    F .text	0000000000000026              Create_func_subtime::~Create_func_subtime()
00000000006f2152 g     F .text	000000000000005d              MDL_wait::MDL_wait()
0000000000755b2c g     F .text	00000000000000b0              Field_newdate::store(double)
00000000010cd9a0 g     O .data	0000000000000020              binlog_format_names
0000000000697ca1 g     F .text	0000000000000054              build_trn_path(THD*, sp_name const*, st_mysql_lex_string*)
0000000000ba0b4b g     F .text	000000000000017e              int2str
00000000007ee40e g     F .text	0000000000000182              Item_func_conv_charset::val_str(String*)
00000000013708f8 g     O .bss	0000000000000004              key_file_query_log
00000000005b7656 g     F .text	00000000000000d5              Query_cache::flush_cache()
0000000000745b8c g     F .text	0000000000000124              mysql_get_server_version
00000000005c2302 g     F .text	0000000000000101              THD::raise_note(unsigned int)
00000000007af698  w    F .text	000000000000004b              cmp_item_int::compare(cmp_item*)
00000000007b3230 g     F .text	0000000000000050              Create_func_dayofmonth::create(THD*, Item*)
0000000000876ec8  w    F .text	000000000000000f              Item_proc_int::result_type() const
00000000008d3ab5 g     F .text	000000000000005a              my_hash_search_using_hash_value
00000000008c06fa  w    F .text	0000000000000040              Item_func_xml_extractvalue::Item_func_xml_extractvalue(Item*, Item*)
000000000077f092 g     F .text	00000000000000a8              Item::decimal_precision() const
0000000001371be0 g     O .bss	0000000000000004              disconnect_slave_event_count
00000000005f0ca8  w    F .text	0000000000000015              st_select_lex_unit::return_after_parsing()
0000000000000000       F *UND*	0000000000000000              memmove@@GLIBC_2.2.5
0000000000889eec  w    F .text	0000000000000026              List_iterator_fast<sp_cond_type>::List_iterator_fast(List<sp_cond_type>&)
0000000000798cc0  w    F .text	0000000000000028              Item_copy_float::val_real()
000000000065cb06  w    F .text	000000000000002b              Item_func_trig_cond::~Item_func_trig_cond()
0000000000000000       F *UND*	0000000000000000              _exit@@GLIBC_2.2.5
00000000007bd3b6  w    F .text	000000000000002d              Create_sp_func::Create_sp_func()
0000000001208200 g     O .data	0000000000000100              sort_order_latin1_german1_ci
0000000001087f30  w    O .data.rel.ro	0000000000000030              vtable for Create_func_dayofmonth
0000000000b7baba g     F .text	0000000000000016              my_lengthsp_binary
0000000000847e9a g     F .text	000000000000004b              Update_rows_log_event::Update_rows_log_event(char const*, unsigned int, Format_description_log_event const*)
000000000082dc8c  w    F .text	0000000000000025              binlog_cache_mngr::get_binlog_cache_data(bool)
000000000098f180  w    F .text	000000000000001b              List<Mrg_child_def>::List()
00000000007db3fe  w    F .text	00000000000000d6              Item_func_udf_str::val_int()
000000000070dac4  w    F .text	0000000000000042              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::session_save_default(THD*, set_var*)
00000000007e24e2  w    F .text	0000000000000046              Item_func_centroid::~Item_func_centroid()
0000000001214300 g     O .data	0000000000000100              to_upper_cp1251_general_cs
000000000070a752  w    F .text	0000000000000061              Sys_var_max_user_conn::session_value_ptr(THD*, st_mysql_lex_string*)
000000000077e01a g     F .text	00000000000000c5              Hybrid_type_traits_decimal::div(Hybrid_type*, unsigned long long) const
00000000007376a6  w    F .text	000000000000003a              Alter_column::Alter_column(char const*, Item*)
000000000056063e g     F .text	0000000000000103              my_make_scrambled_password
000000000078093c g     F .text	000000000000022d              Item::get_date(st_mysql_time*, unsigned int)
00000000006596fa  w    F .text	000000000000003d              Item_uint::Item_uint(unsigned long long)
00000000005e95aa  w    F .text	000000000000001b              List_iterator_fast<List<Item> >::List_iterator_fast()
0000000000b5c8ae g     F .text	00000000000000bb              ha_tina::get_write_pos(unsigned long long*, tina_set*)
00000000010ba2a8  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_now
000000000088978c  w    F .text	0000000000000046              sp_instr_copen::~sp_instr_copen()
00000000007c8996 g     F .text	0000000000000193              Item_func_div::result_precision()
00000000005b0ba4  w    F .text	000000000000001b              Hash_set<TABLE_LIST, &schema_set_get_key>::~Hash_set()
000000000065be45  w    F .text	000000000000000f              COND_CMP::operator delete(void*, unsigned long)
00000000005d1a1a  w    F .text	0000000000000046              select_max_min_finder_subselect::~select_max_min_finder_subselect()
00000000007663d0  w    F .text	0000000000000037              Field_date::pack(unsigned char*, unsigned char const*, unsigned int, bool)
000000000059b710  w    F .text	0000000000000041              Acl_table_intact::~Acl_table_intact()
00000000010983e8  w    O .data.rel.ro	00000000000003c8              vtable for Item_func_mul
0000000000766ef6  w    F .text	0000000000000027              Field_blob::max_data_length() const
000000000090de52 g     F .text	0000000000000010              table_events_waits_history_long::delete_all_rows()
0000000000871b75  w    F .text	0000000000000056              Unique::get_cost_calc_buff_size(unsigned long, unsigned int, unsigned long long)
000000000089a65c  w    F .text	00000000000000b3              field_ulonglong::field_ulonglong(Item*, analyse*)
000000000073bcf2  w    F .text	0000000000000075              sp_instr_stmt::sp_instr_stmt(unsigned int, sp_pcontext*, LEX*)
00000000005f16fe  w    F .text	000000000000004c              Mem_root_array<st_order*, true>::chop(unsigned long)
0000000000848d4c  w    F .text	0000000000000015              Query_log_event::get_db()
00000000007c3078  w    F .text	0000000000000041              Create_func_year_week::~Create_func_year_week()
0000000000a9d4be g     F .text	0000000000000197              dict_table_check_foreign_keys
0000000001069ee8  w    O .data.rel.ro	0000000000000030              vtable for TABLEOP_HOOKS
00000000010c5298  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_parentbyname
000000000065c51c  w    F .text	0000000000000026              List_iterator<Item_field>::List_iterator(List<Item_field>&)
0000000000000000       F *UND*	0000000000000000              pthread_rwlock_unlock@@GLIBC_2.2.5
000000000087ed92 g     F .text	0000000000000057              sp_map_result_type(enum_field_types)
0000000000659f1e  w    F .text	0000000000000046              Item_bool_func::~Item_bool_func()
00000000010eee80 g     O .data	0000000000000004              thr_upgraded_concurrent_insert_lock
00000000010afd68  w    O .data.rel.ro	00000000000003b8              vtable for Item_func_group_concat
0000000000887c26 g     F .text	00000000000001a5              sp_instr_cfetch::print(String*)
00000000008039d8 g     F .text	0000000000000171              Item_sum_bit::update_field()
00000000005e99d2  w    F .text	0000000000000026              Delayed_prelocking_strategy::~Delayed_prelocking_strategy()
000000000074a314 g     F .text	000000000000002e              Field_null::sql_type(String&) const
00000000009047b0 g     F .text	0000000000000046              ha_perfschema::~ha_perfschema()
0000000000b637d8 g     F .text	0000000000000012              ha_partition::update_table_comment(char const*)
000000000059d809 g     F .text	00000000000006d3              close_cached_tables(THD*, TABLE_LIST*, bool, unsigned long)
0000000000873eb4  w    F .text	0000000000000026              List_iterator_fast<QUICK_RANGE_SELECT>::List_iterator_fast(List<QUICK_RANGE_SELECT>&)
000000000087252c  w    F .text	0000000000000031              SEL_ARG::is_null_interval()
00000000007bcabc  w    F .text	0000000000000038              Item_func_time_to_sec::Item_func_time_to_sec(Item*)
000000000056552c  w    F .text	000000000000007e              Item_func::Item_func(Item*)
00000000008576d4 g     F .text	0000000000000066              QUICK_INDEX_MERGE_SELECT::init()
00000000006f5496  w    F .text	000000000000001a              MDL_lock::Ticket_list::is_empty() const
00000000008742a8  w    F .text	0000000000000053              QUICK_SELECT_DESC::~QUICK_SELECT_DESC()
0000000000764f7e  w    F .text	0000000000000014              Field_str::derivation() const
00000000005b2032 g     F .text	0000000000000283              Query_cache::try_lock(bool)
00000000005f15c0  w    F .text	000000000000001b              Mem_root_array<st_order*, true>::~Mem_root_array()
00000000007b0f92  w    F .text	0000000000000058              Item_func_case::~Item_func_case()
00000000005e9502  w    F .text	000000000000002d              Delayed_prelocking_strategy::Delayed_prelocking_strategy()
00000000007addd0  w    F .text	000000000000002b              Item_func_numhybrid::~Item_func_numhybrid()
00000000013863d0 g     O .bss	0000000000000008              Create_func_compress::s_singleton
000000000059b536  w    F .text	000000000000004e              Thd_charset_adapter::init_client_charset(unsigned int)
00000000006f5346  w    F .text	0000000000000015              MDL_context::get_thd() const
0000000000766696  w    F .text	0000000000000011              Field_time::charset() const
00000000013863f0 g     O .bss	0000000000000008              Create_func_convert_tz::s_singleton
0000000000799504  w    F .text	0000000000000026              Item_cache_int::store(Item*)
00000000007deace g     F .text	000000000000024c              Item_func_centroid::val_str(String*)
0000000000000000       F *UND*	0000000000000000              pthread_rwlock_init@@GLIBC_2.2.5
000000000080ea62 g     F .text	00000000000000f0              Item_func_unix_timestamp::val_int_endpoint(bool, bool*)
000000000057a928  w    F .text	000000000000002b              Log_event::~Log_event()
000000000079ac28  w    F .text	0000000000000046              Item_name_const::~Item_name_const()
00000000007b2b3a g     F .text	0000000000000050              Create_func_ceiling::create(THD*, Item*)
000000000077233f g     F .text	0000000000000032              ha_close_connection(THD*)
0000000001087360  w    O .data.rel.ro	0000000000000030              vtable for Create_func_master_pos_wait
000000000079954a  w    F .text	000000000000003d              Item_cache_real::Item_cache_real()
000000000136cc08 g     O .bss	0000000000000008              opt_slave_skip_errors
000000000080980a  w    F .text	0000000000000040              Item_sum_or::Item_sum_or(THD*, Item_sum_or*)
00000000007d5456 g     F .text	000000000000002f              Item_user_var_as_out_param::val_str(String*)
0000000000766c9a  w    F .text	000000000000003d              Field_varstring::reset()
00000000007a6438 g     F .text	0000000000000116              in_vector::find(Item*)
00000000005dc890  w    F .text	000000000000000b              MDL_savepoint::MDL_savepoint()
00000000008eb3c4 g     F .text	00000000000000ab              bitmap_get_first_set
0000000000834364 g     F .text	0000000000000799              Query_log_event::Query_log_event(THD*, char const*, unsigned long, bool, bool, bool, int)
00000000006067a2  w    F .text	00000000000000bc              Key::Key(Key::Keytype, st_mysql_lex_string const&, st_key_create_information*, bool, List<Key_part_spec>&)
0000000000775f82 g     F .text	000000000000009f              handler::ha_release_auto_increment()
00000000005d1964  w    F .text	0000000000000026              List_iterator_fast<my_var>::List_iterator_fast(List<my_var>&)
00000000007c1db8  w    F .text	0000000000000041              Create_func_sleep::~Create_func_sleep()
0000000000000000       F *UND*	0000000000000000              realloc@@GLIBC_2.2.5
00000000006c1e0a  w    F .text	000000000000002b              Time_zone_system::~Time_zone_system()
00000000010a9d88  w    O .data.rel.ro	0000000000000398              vtable for Item_func_substr_index
0000000000848a12  w    F .text	0000000000000012              table_mapping::count() const
0000000000889376  w    F .text	000000000000003f              sp_instr_jump_if_not::set_destination(unsigned int, unsigned int)
0000000000748a1c g     F .text	000000000000017e              Field_num::get_int(charset_info_st*, char const*, unsigned int, long long*, unsigned long long, long long, long long)
000000000061d42e g     F .text	0000000000000113              debug_sync_init()
000000000138e310 g     O .bss	0000000000000008              ft_stopword_file
00000000007b610c g     F .text	0000000000000050              Create_func_rtrim::create(THD*, Item*)
00000000007be44c  w    F .text	0000000000000041              Create_func_crc32::~Create_func_crc32()
00000000007c103e  w    F .text	0000000000000041              Create_func_numpoints::~Create_func_numpoints()
000000000077bb4e  w    F .text	0000000000000017              handler::restart_rnd_next(unsigned char*, unsigned char*)
00000000007b1446  w    F .text	000000000000002b              Item_func_gt::~Item_func_gt()
00000000007f99fe g     F .text	000000000000005d              Item_allany_subselect::select_transformer(JOIN*)
00000000008c061c  w    F .text	000000000000006c              Item_xml_str_func::Item_xml_str_func(Item*, Item*)
0000000000000000       F *UND*	0000000000000000              pread64@@GLIBC_2.2.5
00000000005bf618  w    F .text	0000000000000015              ha_myisammrg::myrg_info()
000000000082dcb2  w    F .text	0000000000000025              binlog_cache_mngr::get_binlog_cache_log(bool)
000000000079ad7d  w    F .text	0000000000000009              non-virtual thunk to Item_splocal::~Item_splocal()
00000000007b079a  w    F .text	000000000000006a              Item_func_regex::~Item_func_regex()
00000000007c1872  w    F .text	0000000000000041              Create_func_round::~Create_func_round()
00000000007b0986  w    F .text	0000000000000046              Item_cond_or::~Item_cond_or()
00000000007b076e  w    F .text	000000000000002b              Item_cond_xor::~Item_cond_xor()
00000000010cb0f8  w    O .data.rel.ro	0000000000000468              vtable for ha_myisammrg
00000000005aed3a  w    F .text	000000000000000b              Bitmap<64u>::Bitmap()
0000000000790c7c g     F .text	00000000000001b1              Item_direct_view_ref::fix_fields(THD*, Item**)
000000000075a2da g     F .text	000000000000006c              Field_varstring::key_type() const
00000000006d6c54 g     F .text	00000000000003c8              table_def::table_def(unsigned char*, unsigned long, unsigned char*, int, unsigned char*, unsigned short)
00000000010d2630 g     O .data	0000000000000008              not_found_item
0000000001087030  w    O .data.rel.ro	0000000000000030              vtable for Create_func_radians
00000000007dc6b2  w    F .text	0000000000000046              Item_func_last_insert_id::~Item_func_last_insert_id()
000000000121d140 g     O .data	0000000000002aa0              compiled_charsets
000000000077e0e0 g     F .text	000000000000007f              Hybrid_type_traits_decimal::val_int(Hybrid_type*, bool) const
00000000007cd314 g     F .text	000000000000020a              Item_func_min_max::val_real()
00000000008376bc g     F .text	00000000000001dc              Query_log_event::do_shall_skip(Relay_log_info*)
0000000000781b78 g     F .text	00000000000002b2              Item_name_const::fix_fields(THD*, Item**)
0000000000871b12  w    F .text	0000000000000063              in_vector::compare_elems(unsigned int, unsigned int)
0000000000808d9e  w    F .text	000000000000001a              Item_sum_count::no_rows_in_result()
0000000000914b23 g     F .text	00000000000000af              pfs_spawn_thread
0000000000738fe6  w    F .text	0000000000000046              Item_func_isfalse::~Item_func_isfalse()
00000000007888f2 g     F .text	000000000000006e              Item::fix_fields(THD*, Item**)
00000000007afec6  w    F .text	000000000000000f              Item_func_isnotnull::select_optimize() const
0000000000710193 g     F .text	00000000000001aa              flush_tables_with_read_lock(THD*, TABLE_LIST*)
00000000007f1c1a  w    F .text	0000000000000028              Item_func_old_password::fix_length_and_dec()
000000000136cd68 g     O .bss	0000000000000008              global_query_id
0000000000783120 g     F .text	00000000000000f7              Item_field::Item_field(Name_resolution_context*, char const*, char const*, char const*)
00000000008111f6 g     F .text	0000000000000083              Item_date_add_interval::eq(Item const*, bool) const
00000000008f52d7 g     F .text	0000000000000107              my_delete_with_symlink
00000000007ee91a g     F .text	0000000000000176              Item_func_set_collation::eq(Item const*, bool) const
00000000007ae492  w    F .text	0000000000000016              Item_bool_func2::top_level_item()
00000000005ef4f0 g     F .text	0000000000000045              LEX::can_use_merged()
000000000080a54c  w    F .text	0000000000000046              Item_avg_field::~Item_avg_field()
00000000006206e4  w    F .text	000000000000001b              st_debug_sync_globals::~st_debug_sync_globals()
00000000006c7a22 g     F .text	0000000000000097              Event_basic::load_time_zone(THD*, st_mysql_lex_string)
0000000001069c98  w    O .data.rel.ro	0000000000000020              vtable for LEX
00000000007b6254 g     F .text	0000000000000050              Create_func_sign::create(THD*, Item*)
00000000005f1ef4  w    F .text	0000000000000026              List_iterator<Create_field>::List_iterator(List<Create_field>&)
000000000097db2a g     F .text	000000000000001b              ft_boolean_reinit_search
00000000013864f8 g     O .bss	0000000000000008              Create_func_geometry_from_text::s_singleton
0000000000559cc2  w    F .text	000000000000001d              List_iterator_fast<Buffered_log>::operator++(int)
0000000000b7a534 g     F .text	0000000000000067              _db_longjmp_
0000000000000000       F *UND*	0000000000000000              fseeko64@@GLIBC_2.2.5
00000000007b035c  w    F .text	0000000000000015              Item_maxmin_subselect::any_value()
00000000006758da g     F .text	0000000000000387              make_table_names_old_format(THD*, st_schema_table*)
00000000007f39b6  w    F .text	000000000000002b              Item_func_substr::~Item_func_substr()
0000000000000000       F *UND*	0000000000000000              pthread_once@@GLIBC_2.2.5
00000000008cb444  w    F .text	000000000000002b              Alter_table_repair_partition_statement::~Alter_table_repair_partition_statement()
00000000007f2bbe  w    F .text	000000000000002b              Item_func_quote::~Item_func_quote()
00000000007c04c8  w    F .text	0000000000000026              Create_func_like_range_min::~Create_func_like_range_min()
00000000007c2fb4  w    F .text	000000000000002d              Create_func_y::Create_func_y()
00000000010874b0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_log10
000000000069b40a g     F .text	000000000000110d              st_select_lex_unit::prepare(THD*, select_result*, unsigned long)
00000000012ba880 g     O .data	0000000000000800              page022data
0000000000947a76 g     F .text	00000000000003ed              _myisam_log_record
00000000010de280 g     O .data	00000000000004d8              proc_fields_info
000000000075757c g     F .text	0000000000000169              Field_datetime::get_date(st_mysql_time*, unsigned int)
00000000005af9a2  w    F .text	0000000000000056              Name_resolution_context::Name_resolution_context()
000000000073c888  w    F .text	0000000000000038              Alter_table_analyze_partition_statement::Alter_table_analyze_partition_statement(LEX*)
000000000067f167 g     F .text	0000000000000238              write_execute_ddl_log_entry(unsigned int, bool, st_ddl_log_memory_entry**)
0000000001073448  w    O .data.rel.ro	0000000000000298              vtable for Field_null
000000000059aeae  w    F .text	0000000000000026              List_iterator<LEX_COLUMN>::init(List<LEX_COLUMN>&)
00000000005af744  w    F .text	000000000000006c              Field_iterator_table_ref::Field_iterator_table_ref()
00000000007f36e6  w    F .text	000000000000002b              Item_func_encrypt::~Item_func_encrypt()
00000000006f0984  w    F .text	000000000000004b              Delegate::~Delegate()
000000000109c5d8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_x
0000000000807986 g     F .text	0000000000000717              Item_func_group_concat::setup(THD*)
0000000000767892  w    F .text	0000000000000014              Field_bit::pack_length_in_rec() const
0000000001394d0c g     O .bss	0000000000000004              key_KEY_CACHE_cache_lock
00000000008902fc g     F .text	000000000000004a              Gis_multi_point::get_mbr(MBR*, char const**) const
0000000001386700 g     O .bss	0000000000000008              Create_func_sha2::s_singleton
00000000008b091f g     F .text	0000000000000042              get_partition_id_linear_hash_nosub(partition_info*, unsigned int*, long long*)
00000000007bf838  w    F .text	0000000000000041              Create_func_get_lock::~Create_func_get_lock()
00000000006eaad0  w    F .text	0000000000000025              max_internal_decimal(my_decimal*)
000000000084ff68 g     F .text	0000000000000112              Old_rows_log_event::do_update_pos(Relay_log_info*)
00000000008891ca  w    F .text	000000000000002b              sp_instr_opt_meta::~sp_instr_opt_meta()
000000000074a342 g     F .text	000000000000003a              Field_decimal::reset()
00000000007b9d50  w    F .text	000000000000005c              Item_real_func::val_int()
0000000000783570 g     F .text	0000000000000036              Item_field::reset_field(Field*)
00000000005bf798  w    F .text	0000000000000041              Query_cache_block::query()
00000000009914d0 g     F .text	00000000000000ea              myrg_rprev
000000000074e7e4 g     F .text	0000000000000041              Field_short::send_binary(Protocol*)
000000000073b218  w    F .text	000000000000002c              st_select_lex::pop_index_hints()
000000000059b25e  w    F .text	0000000000000026              List<LEX_COLUMN>::disjoin(List<LEX_COLUMN>*)
00000000007d54b6 g     F .text	000000000000005e              Item_user_var_as_out_param::print(String*, enum_query_type)
00000000007394e8  w    F .text	0000000000000099              Item_func_in::Item_func_in(List<Item>&)
0000000000b96529 g     F .text	0000000000000152              decimal2double
00000000007812fa g     F .text	0000000000000073              Item_splocal::this_item() const
0000000000883126 g     F .text	0000000000000ccf              sp_head::execute_procedure(THD*, List<Item>*)
000000000073aef6  w    F .text	0000000000000075              Item_func_add_time::Item_func_add_time(Item*, Item*, bool, bool)
00000000008892b2  w    F .text	0000000000000027              sp_instr_jump::set_destination(unsigned int, unsigned int)
0000000000678010  w    F .text	000000000000001d              ACL_internal_schema_access::ACL_internal_schema_access()
000000000080a3ca  w    F .text	000000000000002b              Item_sum_udf_int::~Item_sum_udf_int()
000000000088b250 g     F .text	000000000000027a              sp_rcontext::init(THD*)
00000000006c1c08  w    F .text	0000000000000027              Tz_names_entry::Tz_names_entry()
00000000007bf9fa  w    F .text	0000000000000041              Create_func_hex::~Create_func_hex()
00000000013715c0 g     O .bss	0000000000000070              LOCK_rpl_status
000000000078c762 g     F .text	00000000000000cf              Item_field::make_field(Send_field*)
00000000010c47d0  w    O .data.rel.ro	0000000000000398              vtable for Item_nodeset_func_elementbyindex
0000000000658d30  w    F .text	000000000000001b              Field::move_field(unsigned char*)
000000000073b46c  w    F .text	0000000000000020              LEX::current_context()
000000000054f1f6 g     F .text	00000000000004e9              signal_hand
00000000008101d8 g     F .text	0000000000000143              Item_func_date_format::eq(Item const*, bool) const
00000000007ae9ce  w    F .text	0000000000000011              Item_func_lt::func_name() const
00000000005bf470  w    F .text	0000000000000012              Query_cache_table::engine_data()
000000000087cb77 g     F .text	0000000000000197              sp_show_create_routine(THD*, int, sp_name*)
000000000077daee  w    F .text	000000000000000b              hash_filo_element::hash_filo_element()
000000000089ae20  w    F .text	0000000000000046              field_real::~field_real()
0000000000b71316  w    F .text	000000000000001b              ha_partition::low_byte_first() const
00000000010c1ec0  w    O .data.rel.ro	00000000000000b8              vtable for Old_rows_log_event
0000000000764dfc  w    F .text	000000000000001b              Field::field_flags_are_binary()
00000000007c5974 g     F .text	0000000000000282              Item_num_op::find_num_type()
00000000007e0ab4 g     F .text	0000000000000162              Item_func_srid::val_int()
00000000005e6614 g     F .text	00000000000006ae              select_insert::send_eof()
00000000008c1ab6  w    F .text	0000000000000241              Item_func_xpath_sum::val_real()
0000000001213ee0 g     O .data	0000000000000200              to_uni_cp1251_general_ci
0000000000816d7c  w    F .text	0000000000000011              Item_datetime_typecast::charset_for_protocol() const
0000000001209fa0 g     O .data	0000000000000100              to_upper_ascii_general_ci
00000000010b90a8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_convert_tz
00000000006f52d0  w    F .text	0000000000000012              MDL_ticket::get_lock() const
00000000005d1831  w    F .text	0000000000000091              void list_copy_and_replace_each_value<Key_part_spec>(List<Key_part_spec>&, st_mem_root*)
000000000081993d g     F .text	0000000000000251              key_rec_cmp
000000000136be80 g     O .data	0000000000000025              _dig_vec_upper
00000000006f21e8 g     F .text	0000000000000078              MDL_wait::set_status(MDL_wait::enum_wait_status)
000000000079ffc8 g     F .text	00000000000000f7              Arg_comparator::compare_int_unsigned_signed()
0000000001239480 g     O .data	00000000000000b0              my_charset_gb2312_chinese_ci
0000000001375b40 g     O .bss	0000000000000060              my_locale_en_PH
0000000000ba64ed g     F .text	00000000000000e8              vio_keepalive
0000000000598dfa  w    F .text	000000000000001e              Statement::query() const
00000000006ac19a g     F .text	00000000000001ff              View_creation_ctx::create(THD*, TABLE_LIST*)
00000000012b4e80 g     O .data	0000000000000600              page011data
0000000000871fb8  w    F .text	0000000000000018              QUICK_INDEX_MERGE_SELECT::clustered_pk_range()
0000000000673d7f g     F .text	00000000000002b5              fill_open_tables(THD*, TABLE_LIST*, Item*)
0000000001069690  w    O .data.rel.ro	0000000000000030              vtable for Query_arena
00000000007b57cc g     F .text	0000000000000050              Create_func_numinteriorring::create(THD*, Item*)
000000000083e64a g     F .text	0000000000000060              Stop_log_event::do_update_pos(Relay_log_info*)
00000000007b2700 g     F .text	0000000000000050              Create_func_area::create(THD*, Item*)
00000000006071f4  w    F .text	000000000000002d              Parser_state::Parser_state()
000000000090563a  w    F .text	0000000000000099              ha_statistics::ha_statistics()
000000000080a122  w    F .text	000000000000000b              Item_func_group_concat::no_rows_in_result()
00000000005c806a g     F .text	0000000000000125              select_max_min_finder_subselect::cmp_int()
00000000008ccd90  w    F .text	000000000000002b              Truncate_statement::~Truncate_statement()
00000000007b14e4  w    F .text	0000000000000046              Item_func_ne::~Item_func_ne()
00000000007bda98  w    F .text	0000000000000026              Create_func_benchmark::~Create_func_benchmark()
00000000005af808  w    F .text	000000000000003e              Field_iterator_table_ref::create_item(THD*)
000000000077768e g     F .text	000000000000003e              handler::ha_reset_auto_increment(unsigned long long)
000000000056041c g     F .text	000000000000003d              make_password_from_salt_323
0000000001394d10 g     O .bss	0000000000000004              key_file_proc_meminfo
00000000007ab124 g     F .text	0000000000000026              Item_func_like::cleanup()
00000000006f4c0c g     F .text	0000000000000078              MDL_context::release_statement_locks()
00000000012662c0 g     O .data	00000000000000b0              my_charset_latin1_bin
000000000084917c  w    F .text	0000000000000018              User_var_log_event::is_valid() const
00000000007cee30 g     F .text	00000000000000a0              Item_func_bit_count::val_int()
00000000005ce24c  w    F .text	0000000000000012              Discrete_intervals_list::get_current() const
0000000000690812  w    F .text	000000000000043d              partition_info::partition_info()
0000000000606a10  w    F .text	0000000000000037              Item_result_field::save_in_result_field(bool)
0000000000767d58  w    F .text	0000000000000046              Field_bit_as_char::~Field_bit_as_char()
0000000000598d3c  w    F .text	000000000000001b              SQL_I_List<Sroutine_hash_entry>::~SQL_I_List()
000000000056af3a  w    F .text	000000000000005a              String::set(char const*, unsigned int, charset_info_st*)
00000000007bbed4  w    F .text	0000000000000038              Item_func_binary::Item_func_binary(Item*)
000000000069475a g     F .text	0000000000001676              Table_triggers_list::check_n_load(THD*, char const*, char const*, TABLE*, bool)
000000000070a662  w    F .text	0000000000000041              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::~Sys_var_unsigned()
0000000001211500 g     O .data	0000000000000100              sort_order_latin7_general_ci
000000000121bde0 g     O .data	0000000000000200              to_uni_geostd8_general_ci
0000000000964fbd g     F .text	000000000000010a              rtree_find_first
000000000090278b g     F .text	0000000000000218              find_set_from_flags
000000000075ad1a g     F .text	00000000000000f2              Field_blob::Field_blob(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, TABLE_SHARE*, unsigned int, charset_info_st*)
00000000007c4724 g     F .text	000000000000007f              Item_func::split_sum_func(THD*, Item**, List<Item>&)
00000000006bbdab g     F .text	00000000000001e5              get_date_from_daynr(long, unsigned int*, unsigned int*, unsigned int*)
00000000008851a6 g     F .text	0000000000000069              sp_head::add_instr(sp_instr*)
00000000005ce322  w    F .text	000000000000009e              String::is_ascii() const
0000000000b67e86 g     F .text	00000000000000c0              ha_partition::delete_all_rows()
000000000081863a  w    F .text	0000000000000046              Item_func_period_add::~Item_func_period_add()
00000000010881d0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_concat
0000000000780b6a g     F .text	000000000000010e              Item::get_time(st_mysql_time*)
00000000007672c2  w    F .text	0000000000000013              Field_enum::pack_length_from_metadata(unsigned int)
00000000005d0aa0  w    F .text	0000000000000025              List<Alter_column>::push_front(Alter_column*)
00000000005e86c0  w    F .text	000000000000003b              Discrete_intervals_list::get_next()
00000000010d20a0 g     O .data	0000000000000020              rpl_role_typelib
0000000000567980  w    F .text	000000000000003c              my_eof(THD*)
000000000074886e g     F .text	00000000000001ae              Field_num::check_int(charset_info_st*, char const*, int, char const*, int)
00000000007bdaec  w    F .text	0000000000000041              Create_func_bin::~Create_func_bin()
00000000008eda28 g     F .text	000000000000020d              my_fread
000000000070eb06  w    F .text	0000000000000026              Sys_var_double::~Sys_var_double()
00000000008ccefe g     F .text	000000000000011e              Gis_read_stream::get_next_word(st_mysql_lex_string*)
000000000074063c g     F .text	000000000000001a              cli_read_change_user_result
0000000000900711 g     F .text	000000000000038d              tree_insert
000000000054bd79 g     F .text	000000000000002f              first_global_thread()
0000000000000000       F *UND*	0000000000000000              pthread_attr_destroy@@GLIBC_2.2.5
0000000000802a50 g     F .text	0000000000000021              Item_sum_bit::clear()
00000000007bc1fa  w    F .text	000000000000002d              Item_func_uuid::Item_func_uuid()
00000000010ae688  w    O .data.rel.ro	0000000000000090              vtable for subselect_union_engine
00000000010ce7a0 g     O .data	00000000000000a0              Arg_comparator::comparator_matrix
00000000006786d4  w    F .text	000000000000000b              List_iterator_fast<char>::remove()
000000000136cdb8 g     O .bss	0000000000000008              delayed_insert_errors
00000000007eb298 g     F .text	00000000000000b4              Item_func_soundex::fix_length_and_dec()
00000000007ba35a  w    F .text	0000000000000038              Item_func_cot::Item_func_cot(Item*)
000000000088f994 g     F .text	00000000000003fb              Gis_polygon::centroid_xy(double*, double*) const
00000000005dd4ba  w    F .text	0000000000000026              Sql_handler_lock_error_handler::~Sql_handler_lock_error_handler()
000000000065b2be  w    F .text	000000000000004f              JOIN::send_row_on_empty_set()
00000000005b1272  w    F .text	0000000000000041              MDL_deadlock_discovery_repair_handler::~MDL_deadlock_discovery_repair_handler()
000000000082d7dc  w    F .text	0000000000000056              binlog_cache_data::empty() const
00000000006f31c0 g     F .text	000000000000017b              MDL_context::clone_ticket(MDL_request*)
00000000007f26d0  w    F .text	000000000000000f              Item_func_collation::not_null_tables() const
000000000087228c  w    F .text	000000000000002c              QUICK_SELECT_DESC::reset()
00000000007bebea  w    F .text	0000000000000041              Create_func_disjoint::~Create_func_disjoint()
000000000109d0a0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_numinteriorring
00000000007daa4a  w    F .text	0000000000000046              Item_dec_func::~Item_dec_func()
00000000005efbd2 g     F .text	00000000000000c0              LEX::link_first_table_back(TABLE_LIST*, bool)
000000000070e71c  w    F .text	0000000000000041              Sys_var_struct::~Sys_var_struct()
000000000098df42 g     F .text	0000000000000069              ha_myisammrg::records_in_range(unsigned int, st_key_range*, st_key_range*)
000000000088df0a g     F .text	000000000000009a              Gis_point::get_mbr(MBR*, char const**) const
00000000010865e0  w    O .data.rel.ro	0000000000000040              vtable for Gt_creator
00000000007a3d3a g     F .text	0000000000000406              Item_func_if::fix_length_and_dec()
00000000010a0a28  w    O .data.rel.ro	0000000000000398              vtable for Item_func_geometry_from_text
000000000117cb00 g     O .data	00000000000000b0              my_charset_euckr_bin
00000000007776cc g     F .text	0000000000000043              handler::ha_optimize(THD*, st_ha_check_opt*)
00000000007bd426  w    F .text	0000000000000026              Create_sp_func::~Create_sp_func()
00000000006599a8  w    F .text	0000000000000038              Item_sum::aggregator_setup(THD*)
00000000007e3222  w    F .text	0000000000000017              Item_row::is_null()
00000000007383e4  w    F .text	0000000000000038              Item_func_num1::Item_func_num1(Item*)
00000000007f4f6e g     F .text	00000000000001a9              Item_subselect::exec()
00000000010eee68 g     O .data	0000000000000004              my_thread_end_wait_time
0000000000737c14  w    F .text	0000000000000083              Item_sum_sum::Item_sum_sum(Item*, bool)
00000000007510c4 g     F .text	0000000000000100              Field_float::store(char const*, unsigned int, charset_info_st*)
00000000006e8887 g     F .text	000000000000001d              one_thread_scheduler()
00000000007bcd62  w    F .text	000000000000006d              Item_char_typecast::Item_char_typecast(Item*, int, charset_info_st*)
00000000007a7a30 g     F .text	0000000000000091              cmp_item_datetime::store_value(Item*)
000000000136d4a0 g     O .bss	0000000000000200              log_error_file
0000000000626d26  w    F .text	000000000000002b              Begin_load_query_log_event::~Begin_load_query_log_event()
00000000005e6cc2 g     F .text	0000000000000257              select_insert::abort_result_set()
00000000006bade3  w    F .text	000000000000025b              is_system_table_name(char const*, unsigned int)
00000000005c081e g     F .text	000000000000002f              thd_clear_errors(THD*)
00000000012ca920 g     O .data	00000000000000b0              my_charset_utf8mb4_slovak_uca_ci
00000000007ac5e2 g     F .text	0000000000000033              Item_bool_rowready_func2::neg_transformer(THD*)
0000000000858c48 g     F .text	00000000000000e6              SEL_ARG::SEL_ARG(Field*, unsigned char const*, unsigned char const*)
00000000007c0f7a  w    F .text	000000000000002d              Create_func_numinteriorring::Create_func_numinteriorring()
00000000013708e0 g     O .bss	0000000000000004              key_file_relay_log_info
000000000059d016 g     F .text	00000000000003c7              list_open_tables(THD*, char const*, char const*)
00000000007ade4c  w    F .text	000000000000000b              Item_int_func::fix_length_and_dec()
0000000000b713f2  w    F .text	0000000000000095              ha_partition::unlock_auto_increment()
00000000007ae37c  w    F .text	000000000000000f              Item_bool_func2::rev_functype() const
000000000085aba1 g     F .text	00000000000000bd              store_key_image_to_rec(Field*, unsigned char*, unsigned int)
0000000000784f70 g     F .text	0000000000000058              Item_decimal::val_str(String*)
00000000007e1c9c  w    F .text	0000000000000058              Item_func_srid::~Item_func_srid()
00000000007c96ea g     F .text	00000000000001d0              Item_func_mod::decimal_op(my_decimal*)
000000000073b55e  w    F .text	0000000000000057              Table_ident::Table_ident(st_mysql_lex_string)
00000000007fc07e g     F .text	000000000000000f              subselect_uniquesubquery_engine::no_tables()
00000000006fbcf2 g     F .text	0000000000000211              trans_xa_rollback(THD*)
00000000005c4e6c g     F .text	00000000000000c6              sql_exchange::sql_exchange(char*, bool, enum_filetype)
000000000075d826 g     F .text	00000000000001ec              Field_enum::sql_type(String&) const
00000000007fca9a  w    F .text	000000000000002b              Item_allany_subselect::~Item_allany_subselect()
0000000001081c90  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_nullif
00000000007deabe g     F .text	000000000000000f              Item_func_centroid::get_geometry_type() const
00000000005ce1fa  w    F .text	000000000000001b              Discrete_intervals_list::~Discrete_intervals_list()
00000000007d0c02 g     F .text	00000000000000cb              Item_func_udf_str::fix_length_and_dec()
00000000007adfb8  w    F .text	000000000000003d              Arg_comparator::~Arg_comparator()
00000000006f5ffc  w    F .text	000000000000000f              I_P_List_no_push_back<MDL_ticket>::I_P_List_no_push_back(MDL_ticket**)
00000000008c41c6 g     F .text	00000000000000e9              Event_scheduler::Event_scheduler(Event_queue*)
0000000000815fe4  w    F .text	000000000000000f              Item_func_dayname::result_type() const
00000000007f34b4  w    F .text	0000000000000058              Item_func_soundex::~Item_func_soundex()
00000000006acb8c g     F .text	00000000000001bf              TABLE_SHARE::destroy()
00000000007bfaf8  w    F .text	000000000000002d              Create_func_inet_ntoa::Create_func_inet_ntoa()
000000000056a109 g     F .text	00000000000000ff              throw_bounds_warning(THD*, char const*, bool, double)
00000000005b0334  w    F .text	0000000000000127              setup_table_map(TABLE*, TABLE_LIST*, unsigned int)
000000000057a0da  w    F .text	0000000000000012              MYSQL_BIN_LOG::get_log_fname()
0000000000873c3a  w    F .text	000000000000001a              List<QUICK_RANGE>::head()
0000000000797e2a  w    F .text	0000000000000075              Item_ref::element_index(unsigned int)
000000000077b974  w    F .text	000000000000002b              handler::end_bulk_delete()
000000000070bd82  w    F .text	000000000000006d              Sys_var_bit::set(unsigned char*, unsigned long long)
00000000007ddb94  w    F .text	0000000000000046              Item_func_minus::~Item_func_minus()
00000000007f2262  w    F .text	000000000000003d              Item_func_conv::fix_length_and_dec()
00000000007c28ac  w    F .text	000000000000002d              Create_func_uncompressed_length::Create_func_uncompressed_length()
00000000007ee748 g     F .text	00000000000001d2              Item_func_set_collation::fix_length_and_dec()
0000000000563d28 g     F .text	0000000000000178              Protocol_text::store_time(st_mysql_time*)
00000000006066da  w    F .text	000000000000003b              ErrConvString::ErrConvString(char const*, unsigned int, charset_info_st*)
00000000005af317  w    F .text	0000000000000012              TABLE_share::next_ptr(TABLE*)
00000000007bd60e  w    F .text	000000000000002d              Create_func_aes_encrypt::Create_func_aes_encrypt()
00000000010c41c0  w    O .data.rel.ro	00000000000000d0              vtable for Gis_point
0000000001209880 g     O .data	0000000000000100              to_lower_swe7_swedish_ci
000000000083c736 g     F .text	000000000000007d              Xid_log_event::Xid_log_event(char const*, Format_description_log_event const*)
00000000007c5702 g     F .text	00000000000000a3              Item_func::get_tmp_table_item(THD*)
000000000081838e  w    F .text	0000000000000046              Item_func_month::~Item_func_month()
00000000007a9172 g     F .text	0000000000000414              Item_cond::fix_fields(THD*, Item**)
0000000001076a60  w    O .data.rel.ro	0000000000000360              vtable for Item_outer_ref
0000000001394d14 g     O .bss	0000000000000004              key_THR_LOCK_myisam
0000000001087ea0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_decode
00000000007bc3c0  w    F .text	0000000000000038              Item_func_geometry_type::Item_func_geometry_type(Item*)
00000000008c5b4f g     F .text	0000000000000098              event_queue_element_compare_q
00000000006f615a  w    F .text	0000000000000026              MDL_scoped_lock::~MDL_scoped_lock()
0000000000000000       F *UND*	0000000000000000              asin@@GLIBC_2.2.5
0000000000899ab8  w    F .text	0000000000000106              field_str::field_str(Item*, analyse*)
00000000007977da  w    F .text	0000000000000045              Item_hex_string::val_str(String*)
00000000008161fa  w    F .text	000000000000002a              Item_date::save_in_field(Field*, bool)
0000000000816e92  w    F .text	0000000000000011              Item_func_makedate::func_name() const
00000000007f2c5c  w    F .text	0000000000000046              Item_func_export_set::~Item_func_export_set()
00000000008c3f3e g     F .text	0000000000000287              Event_worker_thread::run(THD*, Event_queue_element_for_exec*)
000000000065a290  w    F .text	0000000000000014              Item_cond::argument_list()
0000000000798f7e  w    F .text	00000000000000b5              Item_insert_value::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
00000000013867c0 g     O .bss	0000000000000008              Create_func_unix_timestamp::s_singleton
0000000000809aba  w    F .text	0000000000000058              Item_udf_sum::~Item_udf_sum()
000000000106be08  w    O .data.rel.ro	0000000000000050              vtable for Field_iterator_view
000000000090e75a g     F .text	00000000000001cc              table_events_waits_summary_by_thread_by_event_name::rnd_pos(void const*)
00000000005cf1de  w    F .text	000000000000001b              SQL_I_List<Item_trigger_field>::~SQL_I_List()
00000000008dadbe g     F .text	0000000000000136              my_b_append_tell
00000000008efdcd g     F .text	0000000000000063              getopt_compare_strings
0000000000606ca6  w    F .text	000000000000004e              Item_int_func::Item_int_func()
000000000136ce08 g     O .bss	0000000000000008              max_prepared_stmt_count
00000000006bdc9c g     F .text	0000000000000091              my_time_compare(st_mysql_time*, st_mysql_time*)
0000000000764568  w    F .text	000000000000003a              Field::cmp_max(unsigned char const*, unsigned char const*, unsigned int)
00000000005d00e4  w    F .text	0000000000000026              List<Key>::concat(List<Key>*)
00000000005f0aa4  w    F .text	000000000000003a              Alter_column::clone(st_mem_root*) const
00000000005c8d33 g     F .text	0000000000000006              non-virtual thunk to Statement::~Statement()
0000000000697f2c  w    F .text	00000000000000ac              MDL_key::mdl_key_init(MDL_key::enum_mdl_namespace, char const*, char const*)
0000000000808c34  w    F .text	000000000000002a              Item_sum_sum::sum_func() const
000000000075a10a g     F .text	000000000000008d              Field_varstring::key_cmp(unsigned char const*, unsigned char const*)
000000000077be5e  w    F .text	000000000000000f              handler::max_supported_key_parts() const
000000000056e424 g     F .text	0000000000000328              init_dynarray_intvar_from_file(st_dynamic_array*, st_io_cache*)
00000000005592cc  w    F .text	0000000000000041              Gt_creator::~Gt_creator()
00000000007c14c0  w    F .text	000000000000002d              Create_func_pow::Create_func_pow()
000000000056b0a6  w    F .text	0000000000000056              sys_var::register_option(st_dynamic_array*, int)
00000000007bae58  w    F .text	0000000000000040              Item_func_udf_str::Item_func_udf_str(st_udf_func*, List<Item>&)
00000000006df3fe g     F .text	00000000000000a7              Relay_log_info::stmt_done(unsigned long long, long)
000000000057a9cc  w    F .text	0000000000000030              Log_event::update_pos(Relay_log_info*)
000000000077c484  w    F .text	000000000000004d              Delete_rows_log_event::binlog_row_logging_function(THD*, TABLE*, bool, st_bitmap*, unsigned int, unsigned char const*, unsigned char const*)
00000000007bd00c  w    F .text	0000000000000026              Create_qfunc::~Create_qfunc()
000000000086bb28 g     F .text	000000000000025d              QUICK_ROR_INTERSECT_SELECT::add_keys_and_lengths(String*, String*)
000000000061b9de g     F .text	000000000000002a              Protocol_local::store(st_mysql_time*)
0000000001373960 g     O .bss	0000000000000070              LOCK_gdl
000000000055879a  w    F .text	00000000000000a4              base_list::push_back(void*, st_mem_root*)
0000000000690c8e  w    F .text	000000000000001b              List_iterator<Create_field>::remove()
00000000005678f2  w    F .text	000000000000005b              Item_return_int::Item_return_int(char const*, unsigned int, enum_field_types, long long)
0000000000857b36 g     F .text	0000000000000072              QUICK_ROR_INTERSECT_SELECT::init()
0000000000601db2 g     F .text	000000000000044c              mysql_new_select(LEX*, bool)
000000000076a0da g     F .text	00000000000007f5              Copy_field::get_copy_func(Field*, Field*)
0000000000ba7512 g     F .text	0000000000000109              vio_ssl_write
000000000120aae0 g     O .data	0000000000000100              to_lower_latin1_danish_ci
00000000005cfe96  w    F .text	0000000000000032              Relay_log_info::cleanup_after_query()
0000000000559a7c  w    F .text	0000000000000025              I_List<Statement>::is_last(Statement*)
00000000005f142c  w    F .text	000000000000000b              Set_signal_information::~Set_signal_information()
00000000012bd480 g     O .data	0000000000000400              page029data
000000000074d7de g     F .text	00000000000001d5              Field_tiny::store(double)
0000000000b84442 g     F .text	00000000000001ce              my_instr_simple
00000000007bb40c  w    F .text	0000000000000038              Item_func_sha::Item_func_sha(Item*)
000000000078c8b0 g     F .text	00000000000000a8              Item_field::save_in_field(Field*, bool)
00000000007ba5ec  w    F .text	0000000000000014              Item_func_min_max::result_type() const
00000000007eec9c g     F .text	00000000000000e1              Item_func_collation::val_str(String*)
0000000000739a3e  w    F .text	0000000000000030              Item_str_ascii_func::val_str(String*)
00000000010d2010 g     O .data	0000000000000008              rpl_status
00000000010af288  w    O .data.rel.ro	00000000000003a0              vtable for Item_maxmin_subselect
000000000093b722 g     F .text	0000000000000125              _mi_write_blob_record
00000000007bc7f8  w    F .text	000000000000004a              Item_func_srid::Item_func_srid(Item*)
00000000009ac3fa  w    F .text	0000000000000046              handler_add_index::~handler_add_index()
000000000070a7b4  w    F .text	0000000000000045              Sys_var_max_user_conn::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000007c1404  w    F .text	0000000000000026              Create_func_pi::~Create_func_pi()
00000000008f7f11 g     F .text	00000000000000c6              init_queue_ex
00000000007fc402  w    F .text	000000000000000f              Item_exists_subselect::result_type() const
00000000005d06e8  w    F .text	0000000000000025              List<Alter_drop>::push_back(Alter_drop*)
000000000073c54e  w    F .text	0000000000000018              sp_pcontext::declare_var_boundary(unsigned int)
00000000007baeea  w    F .text	000000000000004a              Item_func_release_lock::Item_func_release_lock(Item*)
00000000007da8c0  w    F .text	0000000000000013              Item_func_mod::check_partition_func_processor(unsigned char*)
0000000000659d64  w    F .text	000000000000010f              Item_func_set_user_var::Item_func_set_user_var(THD*, Item_func_set_user_var*)
0000000000991205 g     F .text	00000000000000fd              myrg_rlast
000000000088b150 g     F .text	00000000000000c7              sp_rcontext::sp_rcontext(sp_pcontext*, Field*, sp_rcontext*)
000000000079b682 g     F .text	000000000000005d              Cached_item_decimal::Cached_item_decimal(Item*)
0000000000911ce8  w    F .text	0000000000000025              pos_setup_instruments::pos_setup_instruments()
00000000007bf8a0  w    F .text	000000000000002d              Create_func_glength::Create_func_glength()
000000000061c400  w    F .text	000000000000002b              st_lex_local::~st_lex_local()
00000000010ae7a8  w    O .data.rel.ro	00000000000003a0              vtable for Item_allany_subselect
0000000000831a68 g     F .text	0000000000000080              Log_event::Log_event()
00000000005d0b14  w    F .text	0000000000000026              List<Alter_column>::concat(List<Alter_column>*)
0000000000848e7e  w    F .text	0000000000000018              Load_log_event::check_fname_outside_temp_buf()
00000000008d66e6 g     F .text	0000000000000531              fn_format
00000000007dcd88  w    F .text	000000000000002b              Item_func_locate::~Item_func_locate()
000000000098741e g     F .text	00000000000002f8              heap_rprev
0000000001086d60  w    O .data.rel.ro	0000000000000030              vtable for Create_func_space
0000000000899cf6  w    F .text	000000000000012e              field_decimal::field_decimal(Item*, analyse*)
000000000106ce40  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_charptr
00000000007bb9dc  w    F .text	0000000000000038              Item_func_elt::Item_func_elt(List<Item>&)
0000000000737f20  w    F .text	000000000000003d              Item_sum_max::Item_sum_max(Item*)
0000000001086af0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_to_seconds
0000000000886418 g     F .text	0000000000000113              sp_instr_set::print(String*)
000000000070c8e0  w    F .text	000000000000003c              Sys_var_struct::session_update(THD*, set_var*)
0000000000800dd0 g     F .text	000000000000001a              Item_sum_count::clear()
0000000000000000       F *UND*	0000000000000000              access@@GLIBC_2.2.5
00000000008732f4  w    F .text	000000000000002b              TABLE_READ_PLAN::~TABLE_READ_PLAN()
0000000000784246 g     F .text	0000000000000077              Item_field::val_decimal_result(my_decimal*)
00000000012100a0 g     O .data	0000000000000100              to_lower_macce_general_ci
00000000006f46ae g     F .text	0000000000000140              MDL_context::release_locks_stored_before(enum_mdl_duration, MDL_ticket*)
00000000012cbb80 g     O .data	00000000000000b0              my_charset_utf32_esperanto_uca_ci
00000000007d0684 g     F .text	00000000000000a1              Item_func_udf_float::val_str(String*)
000000000061be96  w    F .text	000000000000008b              Statement_map::find(unsigned long)
00000000007e0f28  w    F .text	000000000000002d              MBR::intersects(MBR const*)
00000000006de84e g     F .text	00000000000005a9              purge_relay_logs(Relay_log_info*, THD*, bool, char const**)
000000000083e9e2 g     F .text	00000000000002dc              Create_file_log_event::Create_file_log_event(char const*, unsigned int, Format_description_log_event const*)
000000000056b000  w    F .text	000000000000000e              ErrConvString::ptr()
00000000005ba7ae g     F .text	0000000000000109              Query_cache::double_linked_list_simple_include(Query_cache_block*, Query_cache_block**)
000000000065a642  w    F .text	0000000000000071              subselect_indexsubquery_engine::subselect_indexsubquery_engine(THD*, st_join_table*, Item_subselect*, Item*, Item*, bool)
0000000000ba770c g     F .text	0000000000000071              vio_ssl_delete
0000000001386670 g     O .bss	0000000000000008              Create_func_ord::s_singleton
00000000005b22b6 g     F .text	0000000000000147              Query_cache::lock_and_suspend()
00000000007dd558  w    F .text	0000000000000046              Item_func_acos::~Item_func_acos()
000000000065a420  w    F .text	000000000000002d              Item_cond_or::Item_cond_or()
000000000106bb10  w    O .data.rel.ro	0000000000000028              vtable for Handle_old_incorrect_trigger_table_hook
000000000091fba0 g     F .text	000000000000006d              ha_myisam::update_create_info(st_ha_create_information*)
0000000000837898 g     F .text	000000000000006d              Start_log_event_v3::Start_log_event_v3()
000000000078dce4 g     F .text	0000000000000106              Item_hex_string::print(String*, enum_query_type)
00000000007e1a8a  w    F .text	0000000000000013              Item_func_issimple::fix_length_and_dec()
0000000000ba65d5 g     F .text	0000000000000046              vio_should_retry
00000000012ac1e0 g     O .data	00000000000000b0              my_charset_sjis_bin
000000000120c980 g     O .data	0000000000000100              to_lower_cp1251_ukrainian_ci
00000000005f7e31 g     F .text	0000000000007c29              mysql_execute_command(THD*)
00000000006cdb34 g     F .text	000000000000000c              Events::init_mutexes()
0000000001099dd0  w    O .data.rel.ro	00000000000003c0              vtable for Item_func_numhybrid
000000000077ea98 g     F .text	00000000000000a8              Item::val_real_from_decimal()
00000000005b772c g     F .text	0000000000000179              Query_cache::free_old_query()
00000000005f1e52  w    F .text	000000000000001b              List<Item_param>::List()
000000000077cac7 g     F .text	0000000000000038              hostname_cache_free()
00000000005b78a6 g     F .text	0000000000000234              Query_cache::free_query_internal(Query_cache_block*)
00000000009133e2 g     F .text	0000000000000071              table_threads::table_threads()
0000000000871ea2  w    F .text	000000000000000b              QUICK_SELECT_I::range_end()
0000000000b8436a g     F .text	0000000000000020              my_numchars_8bit
00000000008c1cf8  w    F .text	0000000000000065              Item_nodeset_to_const_comparator::Item_nodeset_to_const_comparator(Item*, Item*, String*)
00000000008c170a  w    F .text	0000000000000038              Item_xpath_cast_number::Item_xpath_cast_number(Item*)
0000000000989160 g     F .text	0000000000000104              hp_free_level
00000000007e1c48  w    F .text	0000000000000023              Item_func_glength::fix_length_and_dec()
000000000080a630  w    F .text	0000000000000046              Item_sum_xor::~Item_sum_xor()
0000000000b82e80 g     F .text	0000000000000070              my_mb_wc_8bit
00000000007f3244  w    F .text	0000000000000058              Item_func_repeat::~Item_func_repeat()
000000000081601a  w    F .text	0000000000000013              Item_func_unix_timestamp::check_partition_func_processor(unsigned char*)
00000000007c2e88  w    F .text	000000000000002d              Create_func_xml_extractvalue::Create_func_xml_extractvalue()
00000000008e3eb3 g     F .text	000000000000002f              multi_key_cache_set
000000000077bd28  w    F .text	0000000000000017              handler::get_foreign_key_list(THD*, List<st_foreign_key_info>*)
00000000007c0db8  w    F .text	000000000000002d              Create_func_name_const::Create_func_name_const()
00000000005b60f0 g     F .text	0000000000000121              Query_cache::invalidate(THD*, TABLE*, char)
00000000013867e0 g     O .bss	0000000000000008              Create_func_weekday::s_singleton
00000000007d9c98 g     F .text	0000000000000064              Item_func_uuid_short::val_int()
00000000009097bc g     F .text	0000000000000091              sanitize_thread_class(PFS_thread_class*)
000000000061c2b4  w    F .text	000000000000001b              List<Ed_row>::List()
000000000065898a  w    F .text	000000000000001b              my_decimal::fix_buffer_pointer()
00000000007b0eae  w    F .text	0000000000000046              in_double::~in_double()
00000000007bf6b8  w    F .text	0000000000000026              Create_func_geometry_from_wkb::~Create_func_geometry_from_wkb()
000000000057ac5e  w    F .text	0000000000000046              Heartbeat_log_event::~Heartbeat_log_event()
00000000005cdc22 g     F .text	0000000000000076              THD::increment_questions_counter()
000000000098195a g     F .text	0000000000000033              ha_heap::rnd_init(bool)
00000000005c9bae g     F .text	000000000000000e              Security_context::get_host()
00000000005c07d2 g     F .text	0000000000000015              thd_get_net_wait_timeout(THD*)
000000000090f2dc  w    F .text	000000000000003a              PFS_triple_index::set_after(PFS_triple_index const*)
00000000008c23bc  w    F .text	0000000000000046              Item_nodeset_func_rootelement::~Item_nodeset_func_rootelement()
000000000059abe6  w    F .text	0000000000000046              GRANT_NAME::~GRANT_NAME()
0000000000737dee  w    F .text	000000000000003e              Item_sum_std::Item_sum_std(Item*, unsigned int)
0000000000ba6657 g     F .text	0000000000000025              mysql_socket_shutdown
000000000095d137 g     F .text	0000000000000047              _mi_calc_static_key_length
00000000007db1da  w    F .text	000000000000004f              Item_func_udf_float::val_int()
00000000005d0e02  w    F .text	000000000000001b              I_List<Statement>::~I_List()
000000000079491c g     F .text	0000000000000086              Item_cache_row::illegal_method_call(char const*)
0000000000796a52  w    F .text	00000000000000c6              Item_sp_variable::make_field(Send_field*)
00000000007ef3f8 g     F .text	00000000000002c6              Item_func_like_range::val_str(String*)
000000000088b5f0 g     F .text	00000000000000e5              sp_rcontext::init_var_items()
00000000010ca390  w    O .data.rel.ro	0000000000000050              vtable for table_ews_global_by_event_name
00000000006f5234  w    F .text	0000000000000026              MDL_key::MDL_key(MDL_key const*)
000000000077e254 g     F .text	000000000000000d              Hybrid_type_traits_integer::instance()
00000000008934ba  w    F .text	0000000000000013              Geometry::num_points(unsigned int*) const
00000000007d3f18 g     F .text	00000000000000b2              Item_func_set_user_var::print_as_stmt(String*, enum_query_type)
00000000008364ac g     F .text	0000000000000034              Query_log_event::do_apply_event(Relay_log_info const*)
000000000073cac6  w    F .text	000000000000001b              List<sp_cond_type>::List()
00000000007a5d0c g     F .text	00000000000000d5              Item_func_case::cleanup()
0000000000873cfa  w    F .text	0000000000000070              List<QUICK_RANGE>::delete_elements()
000000000083bcd0 g     F .text	000000000000011d              Intvar_log_event::Intvar_log_event(char const*, Format_description_log_event const*)
000000000059984c  w    F .text	000000000000001b              ACL_PROXY_USER::ACL_PROXY_USER()
00000000007a7184 g     F .text	0000000000000036              cmp_item_row::make_same()
00000000006ac026 g     F .text	0000000000000057              Default_object_creation_ctx::Default_object_creation_ctx(THD*)
0000000000562ce0 g     F .text	000000000000018d              Protocol::store(I_List<i_string>*)
00000000007c0458  w    F .text	000000000000002d              Create_func_like_range_min::Create_func_like_range_min()
0000000001375420 g     O .bss	0000000000000060              my_locale_ar_IN
000000000093b2b4 g     F .text	0000000000000045              mi_remap_file
0000000000569a5c g     F .text	000000000000025b              sys_var::check(THD*, set_var*)
00000000006ce162 g     F .text	0000000000000327              partition_info::get_clone(bool)
0000000000896736 g     F .text	0000000000000b84              analyse::end_of_records()
00000000006e8cd4 g     F .text	000000000000005a              PROF_MEASUREMENT::~PROF_MEASUREMENT()
00000000005d0e1e  w    F .text	000000000000033f              Rows_log_event* THD::binlog_prepare_pending_rows_event<Write_rows_log_event>(TABLE*, unsigned int, st_bitmap const*, unsigned long, unsigned long, bool, Write_rows_log_event*)
000000000077f558 g     F .text	0000000000000123              Item_ident::Item_ident(THD*, Item_ident*)
00000000007c199e  w    F .text	0000000000000041              Create_func_rpad::~Create_func_rpad()
00000000007b0ac2  w    F .text	000000000000002b              Item_func_bit_and::~Item_func_bit_and()
000000000120a3a0 g     O .data	0000000000000101              ctype_cp1251_bulgarian_ci
0000000000b8313f g     F .text	0000000000000202              my_strntol_8bit
000000000076845e  w    F .text	000000000000002b              Field_medium::~Field_medium()
0000000000912882 g     F .text	0000000000000071              table_rwlock_instances::table_rwlock_instances()
00000000006bc04e g     F .text	00000000000000ad              convert_month_to_period(unsigned long)
0000000000563784 g     F .text	00000000000000d4              Protocol_text::store(float, unsigned int, String*)
00000000005d06ba  w    F .text	000000000000002e              List<Alter_drop>::List(List<Alter_drop> const&, st_mem_root*)
000000000090e42a g     F .text	0000000000000028              table_events_waits_summary_by_thread_by_event_name::create()
00000000006c1c08  w    F .text	0000000000000027              Tz_names_entry::Tz_names_entry()
00000000007c24c0  w    F .text	0000000000000041              Create_func_time_to_sec::~Create_func_time_to_sec()
00000000005beb4a g     F .text	0000000000000252              Query_cache::in_list(Query_cache_block*, Query_cache_block*, char const*)
00000000005b6302 g     F .text	00000000000001bf              Query_cache::invalidate(char*)
00000000006ca3aa g     F .text	00000000000001aa              Event_job_data::construct_sp_sql(THD*, String*)
0000000001386338 g     O .bss	0000000000000008              Create_func_acos::s_singleton
000000000080968a  w    F .text	000000000000000f              Item_sum_max::sum_func() const
00000000005b0aa8  w    F .text	0000000000000029              I_P_List_iterator<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::I_P_List_iterator(I_P_List<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> > const&)
0000000000917763 g     F .text	00000000000000e7              pfs_print_error(char const*, ...)
00000000007bbb86  w    F .text	0000000000000069              Item_func_lpad::Item_func_lpad(Item*, Item*, Item*)
00000000007f4000  w    F .text	0000000000000046              Item_func_aes_encrypt::~Item_func_aes_encrypt()
0000000001386580 g     O .bss	0000000000000008              Create_func_isempty::s_singleton
00000000005af4fa  w    F .text	000000000000002e              TABLE_LIST::set_table_ref_id(enum_table_ref_type, unsigned long)
0000000000652c3c g     F .text	0000000000000048              free_underlaid_joins(THD*, st_select_lex*)
00000000010682f8  w    O .data.rel.ro	0000000000000028              vtable for Unknown_key_hook
0000000000905a30  w    F .text	0000000000000014              ha_perfschema::table_type() const
00000000010c16c8  w    O .data.rel.ro	0000000000000078              vtable for Stop_log_event
0000000000738036  w    F .text	000000000000003d              Item_sum_xor::Item_sum_xor(Item*)
00000000007f3182  w    F .text	000000000000002b              Item_func_lpad::~Item_func_lpad()
000000000082cb2c  w    F .text	000000000000003b              TC_LOG_MMAP::TC_LOG_MMAP()
0000000000b6f700 g     F .text	0000000000000033              ha_partition::max_supported_key_part_length() const
0000000001086820  w    O .data.rel.ro	0000000000000030              vtable for Create_func_xml_update
00000000006b5a00 g     F .text	000000000000028f              TABLE_SHARE::wait_for_old_version(THD*, timespec*, unsigned int)
0000000000559806  w    F .text	000000000000001d              I_List_iterator<THD>::operator++(int)
00000000007a5200 g     F .text	00000000000000b8              Item_func_case::agg_num_lengths(Item*)
0000000000893e53 g     F .text	000000000000080d              proc_analyse_init(THD*, st_order*, select_result*, List<Item>&)
000000000079f852 g     F .text	00000000000000e8              Arg_comparator::compare_e_real()
00000000005e8e0a  w    F .text	000000000000002b              delayed_row::~delayed_row()
000000000079aad2  w    F .text	0000000000000046              Item_uint::~Item_uint()
0000000000873c88  w    F .text	0000000000000026              List<QUICK_RANGE>::concat(List<QUICK_RANGE>*)
00000000008ac2f7 g     F .text	00000000000000ca              field_is_partition_charset(Field*)
0000000000796d26  w    F .text	000000000000003d              Item_name_const::send(Protocol*, String*)
0000000000566960  w    F .text	0000000000000027              Item::is_null_result()
0000000000738d10  w    F .text	0000000000000040              Item_bool_func::Item_bool_func(Item*, Item*)
0000000000849116  w    F .text	000000000000000f              Xid_log_event::get_data_size()
00000000007ba616  w    F .text	0000000000000014              Item_func_min_max::field_type() const
000000000079b682 g     F .text	000000000000005d              Cached_item_decimal::Cached_item_decimal(Item*)
00000000007afc16  w    F .text	0000000000000043              Item_func_isnull::fix_length_and_dec()
00000000010f11c0 g     O .data	0000000000000020              myisam_recover_typelib
0000000000849c9c g     F .text	0000000000000434              pack_row(TABLE*, st_bitmap const*, unsigned char*, unsigned char const*)
00000000007f3e48  w    F .text	000000000000002b              Item_func_des_decrypt::~Item_func_des_decrypt()
000000000089b3c2 g     F .text	0000000000000052              Server_side_cursor::~Server_side_cursor()
00000000005d09f8  w    F .text	0000000000000026              List<Alter_column>::List(List<Alter_column> const&)
00000000008dd0f5 g     F .text	00000000000000f5              change_key_cache_param
000000000073c7a8  w    F .text	0000000000000038              Analyze_table_statement::Analyze_table_statement(LEX*)
00000000007963fa  w    F .text	000000000000003e              DTCollation::DTCollation(charset_info_st*, Derivation)
00000000006a3192 g     F .text	000000000000029f              multi_update::~multi_update()
00000000007bd060  w    F .text	0000000000000041              Create_udf_func::~Create_udf_func()
000000000090abc8 g     F .text	000000000000003c              PFS_engine_table_share::init_all_locks()
00000000007a71ba g     F .text	000000000000015a              cmp_item_row::~cmp_item_row()
00000000007f2fb0  w    F .text	0000000000000046              Item_func_set_collation::~Item_func_set_collation()
000000000088ce68  w    F .text	000000000000001b              Select_fetch_into_spvars::set_spvar_list(List<sp_variable>*)
0000000000783c4c g     F .text	00000000000000cc              Item_field::val_str(String*)
00000000013745e0 g     O .bss	0000000000000060              my_locale_hi_IN
000000000073869c  w    F .text	0000000000000040              Item_func_int_div::Item_func_int_div(Item*, Item*)
000000000079b8fc  w    F .text	000000000000008a              Cached_item_field::Cached_item_field(Item_field*)
000000000136cba8 g     O .bss	0000000000000008              max_used_connections
0000000000889be0  w    F .text	000000000000001b              Dynamic_array<Item_splocal*>::~Dynamic_array()
00000000007b3d12 g     F .text	0000000000000098              Create_func_field::create_native(THD*, st_mysql_lex_string, List<Item>*)
00000000010c17b8  w    O .data.rel.ro	0000000000000078              vtable for User_var_log_event
000000000106a7d8  w    O .data.rel.ro	00000000000000a0              vtable for FT_SELECT
000000000065b8ec  w    F .text	0000000000000046              store_key_item::~store_key_item()
00000000005c7b94 g     F .text	000000000000006e              select_max_min_finder_subselect::cleanup()
0000000000598b60  w    F .text	0000000000000021              TABLE_LIST::TABLE_LIST()
000000000059b3b0  w    F .text	000000000000002d              List<st_lex_user>::push_back(st_lex_user*, st_mem_root*)
000000000138c9e0 g     O .bss	0000000000000001              thr_alarm_inited
00000000006e6840 g     F .text	00000000000001ec              check_for_max_user_connections(THD*, user_conn const*)
00000000007bb36a  w    F .text	0000000000000057              Item_str_ascii_func::Item_str_ascii_func(Item*, Item*, Item*)
0000000000872bea  w    F .text	0000000000000102              SEL_ARG::store_min_key(st_key_part*, unsigned char**, unsigned int*, unsigned int)
000000000059b752  w    F .text	0000000000000026              Acl_table_intact::~Acl_table_intact()
00000000006ec49e g     F .text	00000000000000a9              Event_parse_data::check_originator_id(THD*)
0000000000774817 g     F .text	0000000000000083              ha_start_consistent_snapshot(THD*)
0000000000808de6  w    F .text	000000000000000f              Item_avg_field::type() const
00000000007b4a86 g     F .text	0000000000000050              Create_func_isnull::create(THD*, Item*)
00000000007096ac  w    F .text	0000000000000014              Sys_var_charptr::check_update_type(Item_result)
00000000007da68c  w    F .text	0000000000000011              Item_func_unsigned::func_name() const
00000000008501fa g     F .text	0000000000000bac              Old_rows_log_event::write_row(Relay_log_info const*, bool)
000000000073a870  w    F .text	0000000000000028              Item_str_timefunc::val_real()
00000000007aeb52  w    F .text	000000000000000f              Item_func_strcmp::select_optimize() const
00000000007de5b2 g     F .text	0000000000000161              Item_func_as_wkb::val_str(String*)
00000000006eaa62  w    F .text	000000000000001b              my_decimal::sign(bool)
000000000082d792  w    F .text	000000000000004a              binlog_cache_data::~binlog_cache_data()
000000000056b244  w    F .text	000000000000001d              PolyLock::PolyLock()
00000000010e0ce0 g     O .data	00000000000008c0              schema_tables
0000000000739e8a  w    F .text	0000000000000038              Item_func_password::Item_func_password(Item*)
000000000090f4e6  w    F .text	0000000000000041              table_events_waits_summary_by_instance::~table_events_waits_summary_by_instance()
00000000007b29cc g     F .text	00000000000000ce              Create_func_bin::create(THD*, Item*)
00000000009a78d4 g     F .text	00000000000000b7              ib_warn_row_too_big
0000000001376200 g     O .bss	0000000000000060              my_locale_es_SV
000000000138cc00 g     O .bss	0000000000000008              cond_max
00000000007ba74e  w    F .text	000000000000004a              Item_func_length::Item_func_length(Item*)
000000000090c228  w    F .text	0000000000000026              PFS_editable_acl::~PFS_editable_acl()
00000000006cdc62 g     F .text	0000000000000018              Events::stop()
00000000008f3430 g     F .text	0000000000000095              my_once_free
000000000073a41c  w    F .text	0000000000000048              Item_func_month::Item_func_month(Item*)
00000000008a9308  w    F .text	0000000000000025              List<XML_TAG>::push_front(XML_TAG*)
00000000007b01f8  w    F .text	0000000000000040              Item_cond_or::Item_cond_or(THD*, Item_cond_or*)
00000000007c0d50  w    F .text	0000000000000041              Create_func_monthname::~Create_func_monthname()
0000000000765932  w    F .text	000000000000000f              Field_long::pack_length() const
000000000082a854 g     F .text	0000000000000103              sql_print_information(char const*, ...)
0000000000661fc3 g     F .text	0000000000000098              view_store_options(THD*, TABLE_LIST*, String*)
00000000007bf130  w    F .text	0000000000000041              Create_func_exteriorring::~Create_func_exteriorring()
00000000006f3fae g     F .text	00000000000003a2              MDL_lock::visit_subgraph(MDL_ticket*, MDL_wait_for_graph_visitor*)
0000000001208d40 g     O .data	0000000000000100              to_upper_koi8r_general_ci
0000000000911d6a  w    F .text	0000000000000041              table_setup_instruments::~table_setup_instruments()
000000000075aee8 g     F .text	00000000000000f7              Field_blob::get_length(unsigned char const*, unsigned int, bool)
000000000082d726  w    F .text	000000000000006c              binlog_cache_data::binlog_cache_data()
0000000000697fd8  w    F .text	0000000000000031              MDL_key::MDL_key(MDL_key::enum_mdl_namespace, char const*, char const*)
0000000001086f70  w    O .data.rel.ro	0000000000000030              vtable for Create_func_round
000000000083fb3a g     F .text	00000000000000e5              Delete_file_log_event::Delete_file_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000010696c0  w    O .data.rel.ro	0000000000000078              vtable for select_dumpvar
0000000000873532  w    F .text	000000000000002b              TRP_ROR_INTERSECT::~TRP_ROR_INTERSECT()
0000000001394d18 g     O .bss	0000000000000004              key_THR_LOCK_threads
00000000010c3ba8  w    O .data.rel.ro	0000000000000070              vtable for sp_instr
000000000077ba30  w    F .text	0000000000000013              handler::index_first(unsigned char*)
0000000000597f7c  w    F .text	0000000000000098              base_list::push_front(void*)
000000000059964e  w    F .text	000000000000000b              READ_RECORD::READ_RECORD()
00000000005cf6cc  w    F .text	0000000000000078              Open_tables_state::reset_open_tables_state(THD*)
0000000000709c0c  w    F .text	0000000000000094              Sys_var_dbug::Sys_var_dbug(char const*, char const*, int, CMD_LINE, char const*, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
0000000001208820 g     O .data	0000000000000100              sort_order_hp8_english_ci
00000000007bd320  w    F .text	000000000000002d              Create_func_arg3::Create_func_arg3()
0000000000598030  w    F .text	00000000000000a2              base_list::remove(list_node**)
00000000008a6f0a g     F .text	0000000000000216              READ_INFO::find_start_of_fields()
000000000090118d g     F .text	00000000000001ac              tree_search_next
0000000000b71332  w    F .text	0000000000000015              ha_partition::primary_key_is_clustered()
0000000000599840  w    F .text	000000000000000b              ACL_ACCESS::ACL_ACCESS()
00000000006f2964 g     F .text	0000000000000092              MDL_lock::remove_ticket(MDL_lock::Ticket_list MDL_lock::*, MDL_ticket*)
000000000069d9ec g     F .text	00000000000000a1              st_select_lex::cleanup_all_joins(bool)
000000000077b928  w    F .text	000000000000000f              handler::start_bulk_delete()
0000000000566906  w    F .text	0000000000000032              Item::val_decimal_result(my_decimal*)
0000000000558bca  w    F .text	0000000000000032              ilink::operator=(ilink const&)
000000000057b394  w    F .text	0000000000000026              sp_cache::remove(sp_head*)
00000000006f5680  w    F .text	0000000000000011              MDL_scoped_lock::incompatible_waiting_types_bitmap() const
000000000081827e  w    F .text	000000000000002b              Item_func_hour::~Item_func_hour()
00000000005dd424  w    F .text	000000000000002d              Sql_handler_lock_error_handler::Sql_handler_lock_error_handler()
0000000000647032 g     F .text	000000000000014a              sub_select_cache(JOIN*, st_join_table*, bool)
00000000005f132e  w    F .text	000000000000002b              Lex_input_stream::restart_token()
000000000076856e  w    F .text	0000000000000046              Field_decimal::~Field_decimal()
0000000000825dcc g     F .text	000000000000007e              MYSQL_BIN_LOG::make_log_name(char*, char const*)
0000000000955f62 g     F .text	000000000000041c              mi_preload
00000000007aebcc  w    F .text	0000000000000011              Item_func_interval::func_name() const
00000000007edabe g     F .text	0000000000000115              Item_func_lpad::fix_length_and_dec()
00000000007bf004  w    F .text	0000000000000041              Create_func_exp::~Create_func_exp()
00000000006e885a g     F .text	000000000000002d              one_thread_per_connection_scheduler()
00000000007c1458  w    F .text	0000000000000041              Create_func_pointn::~Create_func_pointn()
0000000001086d30  w    O .data.rel.ro	0000000000000030              vtable for Create_func_sqrt
0000000000737ce0  w    F .text	0000000000000058              Item_sum_count::Item_sum_count(List<Item>&)
0000000001212d80 g     O .data	0000000000000200              to_uni_latin1_general_ci
000000000087307e  w    F .text	0000000000000087              SEL_TREE::SEL_TREE()
00000000007666b8  w    F .text	000000000000003c              Field_time::reset()
0000000000625fa4 g     F .text	000000000000038c              show_binlog_info(THD*)
00000000007e3312  w    F .text	0000000000000015              Item_row::const_item() const
000000000081d644 g     F .text	0000000000000057              LOGGER::flush_general_log()
00000000007a6bc8 g     F .text	0000000000000065              in_longlong::get_value(Item*)
00000000007d09c2 g     F .text	000000000000010d              Item_func_udf_decimal::val_decimal(my_decimal*)
00000000007dd95a  w    F .text	0000000000000046              Item_func_neg::~Item_func_neg()
00000000013867d8 g     O .bss	0000000000000008              Create_func_version::s_singleton
00000000005d9c96  w    F .text	0000000000000012              Warning_info::is_read_only() const
0000000000560459 g     F .text	0000000000000070              create_random_string
0000000000826d41 g     F .text	0000000000000079              stmt_has_updated_trans_table(Ha_trx_info*)
00000000006f5966  w    F .text	00000000000000b4              I_P_List<MDL_object_lock, MDL_object_lock_cache_adapter, I_P_List_counter, I_P_List_no_push_back<MDL_object_lock> >::push_front(MDL_object_lock*)
00000000005aecd3 g     F .text	0000000000000026              close_log_table(THD*, Open_tables_backup*)
000000000065bfc0  w    F .text	0000000000000026              I_List_iterator<COND_CMP>::I_List_iterator(I_List<COND_CMP>&)
0000000000853749 g     F .text	000000000000009b              print_decimal_buff(my_decimal const*, unsigned char const*, int)
0000000000868d5a g     F .text	00000000000005ce              QUICK_INDEX_MERGE_SELECT::read_keys_and_merge()
0000000000799eb4  w    F .text	000000000000002e              List<List<Item> >::List(List<List<Item> > const&, st_mem_root*)
0000000000000000       F *UND*	0000000000000000              floor@@GLIBC_2.2.5
0000000000559208  w    F .text	000000000000002d              Ne_creator::Ne_creator()
0000000000851ad2 g     F .text	0000000000000085              Write_rows_log_event_old::do_exec_row(Relay_log_info const*)
0000000001088200  w    O .data.rel.ro	0000000000000030              vtable for Create_func_coercibility
00000000006eb0be  w    F .text	0000000000000015              Queue<PROF_MEASUREMENT>::iterator_value(void*)
00000000006049aa g     F .text	00000000000001a4              all_any_subquery_creator(Item*, Comp_creator* (*)(bool), bool, st_select_lex*)
0000000000770e4c g     F .text	0000000000000160              ha_resolve_by_name(THD*, st_mysql_lex_string const*)
00000000006fbfa6  w    F .text	0000000000000018              xid_t::is_null()
00000000008fd50f g     F .text	000000000000004d              thr_lock_data_init
000000000065c120  w    F .text	0000000000000026              List<Item_func_match>::disjoin(List<Item_func_match>*)
0000000000848e56  w    F .text	0000000000000018              Slave_log_event::is_valid() const
000000000079b8b2  w    F .text	0000000000000049              Cached_item_int::Cached_item_int(Item*)
00000000007c3198  w    F .text	000000000000002b              Item_func_like_range_min::~Item_func_like_range_min()
00000000008712b0 g     F .text	0000000000000243              QUICK_RANGE_SELECT::dbug_dump(int, bool)
0000000001087ff0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_crosses
0000000000989264 g     F .text	000000000000001e              heap_clear
0000000000781194 g     F .text	00000000000000f1              Item_splocal::Item_splocal(st_mysql_lex_string const&, unsigned int, enum_field_types, unsigned int, unsigned int)
0000000000887844 g     F .text	000000000000005f              sp_instr_copen::exec_core(THD*, unsigned int*)
00000000008972ba g     F .text	0000000000000705              field_str::get_opt_type(String*, unsigned long long)
00000000007bd96c  w    F .text	0000000000000026              Create_func_asin::~Create_func_asin()
000000000059b478  w    F .text	0000000000000026              List<st_lex_user>::disjoin(List<st_lex_user>*)
000000000083a3ba g     F .text	00000000000000b0              Load_log_event::set_fields(char const*, List<Item>&, Name_resolution_context*)
00000000007da52a  w    F .text	0000000000000011              Item_func_connection_id::func_name() const
00000000007c1268  w    F .text	000000000000002d              Create_func_period_add::Create_func_period_add()
00000000008ba880 g     F .text	0000000000000100              Unique::flush()
000000000079f1de g     F .text	00000000000000e8              Arg_comparator::compare_string()
00000000006595d8  w    F .text	000000000000002b              Item_null::~Item_null()
0000000000845236 g     F .text	0000000000000023              Table_map_log_event::do_update_pos(Relay_log_info*)
00000000010ee7a8 g     O .data	0000000000000008              default_charset_info
00000000007bb750  w    F .text	0000000000000064              Item_func_des_encrypt::Item_func_des_encrypt(Item*, Item*)
000000000082d892  w    F .text	0000000000000016              binlog_cache_data::set_changes_to_non_trans_temp_table()
00000000012c5880 g     O .data	0000000000001200              page0FDdata
00000000007c2886  w    F .text	0000000000000026              Create_func_uncompress::~Create_func_uncompress()
000000000136fac0 g     O .bss	0000000000000070              LOCK_server_started
00000000007ae8ba  w    F .text	000000000000000f              Item_func_gt::eq_cmp_result() const
00000000006f54c2  w    F .text	0000000000000046              MDL_lock::is_empty() const
00000000006789b4  w    F .text	0000000000000041              IS_internal_schema_access::~IS_internal_schema_access()
000000000089b062 g     F .text	00000000000000bc              SQL_CRYPT::encode(char*, unsigned int)
0000000000598f68  w    F .text	0000000000000015              THD::get_user_connect()
00000000007bb1b4  w    F .text	0000000000000040              Item_func_ifnull::Item_func_ifnull(Item*, Item*)
0000000001395600 g     O .bss	0000000000000070              THR_LOCK_heap
000000000076494c  w    F .text	0000000000000043              Field::char_length()
0000000000790a4e g     F .text	000000000000005c              Item_direct_ref::val_int()
00000000007be7a2  w    F .text	000000000000002d              Create_func_dayofweek::Create_func_dayofweek()
00000000006f08fc  w    F .text	000000000000001b              List<Observer_info>::~List()
0000000000849466  w    F .text	000000000000000f              Delete_file_log_event::get_data_size()
0000000000768b30 g     F .text	000000000000018a              set_field_to_null_with_conversions(Field*, bool)
0000000000737d88  w    F .text	0000000000000065              Item_sum_variance::Item_sum_variance(Item*, unsigned int)
0000000000601a80 g     F .text	00000000000002a0              THD::reset_for_next_command()
00000000007b0c44  w    F .text	0000000000000056              cmp_item_decimal::~cmp_item_decimal()
00000000006fa4be g     F .text	000000000000016c              trans_commit(THD*)
000000000137075c g     O .bss	0000000000000004              key_delayed_insert_mutex
0000000000559942  w    F .text	000000000000001b              I_List<i_string_pair>::I_List()
0000000000774f6a g     F .text	0000000000000098              handler::ha_thd() const
0000000000677e7a  w    F .text	0000000000000012              Default_object_creation_ctx::get_client_cs()
000000000087e7a0  w    F .text	0000000000000051              Stored_routine_creation_ctx::Stored_routine_creation_ctx(charset_info_st*, charset_info_st*, charset_info_st*)
000000000073c8f8  w    F .text	0000000000000038              Alter_table_optimize_partition_statement::Alter_table_optimize_partition_statement(LEX*)
00000000007af98e  w    F .text	0000000000000041              cmp_item_sort_string_in_static::make_same()
00000000006bb974 g     F .text	0000000000000141              sql_strmake_with_convert(char const*, unsigned long, charset_info_st*, unsigned long, charset_info_st*, unsigned long*)
00000000007c2078  w    F .text	000000000000002d              Create_func_startpoint::Create_func_startpoint()
00000000010cd8b0 g     O .data	0000000000000001              opt_large_files
0000000000816136  w    F .text	0000000000000011              Item_date::func_name() const
00000000005e8106 g     F .text	000000000000004f              select_create::store_values(List<Item>&)
00000000007e1da4  w    F .text	0000000000000058              Item_func_area::~Item_func_area()
00000000006f51f0  w    F .text	0000000000000044              MDL_key::cmp(MDL_key const*) const
0000000001216f00 g     O .data	0000000000000100              to_upper_cp1256_bin
00000000007d8928 g     F .text	000000000000004e              Item_func_row_count::val_int()
00000000008c0a46  w    F .text	0000000000000089              Item_nodeset_func::Item_nodeset_func(Item*, Item*, String*)
00000000013956b8 g     O .bss	0000000000000004              mi_key_rwlock_MYISAM_SHARE_mmap_lock
00000000007c0648  w    F .text	0000000000000041              Create_func_load_file::~Create_func_load_file()
0000000000955572 g     F .text	00000000000001c3              _mi_dispose
000000000107d690  w    O .data.rel.ro	0000000000000068              vtable for Hybrid_type_traits_integer
0000000000658dd6  w    F .text	0000000000000099              Field_real::Field_real(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
00000000007e1a42  w    F .text	0000000000000011              Item_func_isempty::func_name() const
0000000001371c80 g     O .bss	0000000000000001              mysql_user_table_is_in_short_password_format
00000000008c263e  w    F .text	0000000000000046              Item_nodeset_context_cache::~Item_nodeset_context_cache()
0000000000815c00  w    F .text	0000000000000026              Item_func_quarter::fix_length_and_dec()
0000000000567298  w    F .text	0000000000000041              Item_int::val_int()
00000000010c3408  w    O .data.rel.ro	0000000000000078              vtable for sp_instr_set_case_expr
000000000069d39c g     F .text	00000000000002a7              st_select_lex_unit::cleanup()
00000000005d0678  w    F .text	000000000000001b              List<Alter_drop>::List()
000000000090d7ca g     F .text	00000000000001be              table_events_waits_history::rnd_next()
000000000076e747 g     F .text	00000000000000f8              read_to_buffer(st_io_cache*, st_buffpek*, unsigned int)
0000000000566988  w    F .text	0000000000000027              Item::not_null_tables() const
000000000136cdc8 g     O .bss	0000000000000008              specialflag
00000000007beb00  w    F .text	0000000000000026              Create_func_des_encrypt::~Create_func_des_encrypt()
000000000087f988 g     F .text	00000000000002ca              sp_head::sp_head()
000000000065f7fa g     F .text	00000000000002cc              mysqld_list_fields(THD*, TABLE_LIST*, char const*)
00000000008575a4 g     F .text	000000000000012f              QUICK_INDEX_MERGE_SELECT::QUICK_INDEX_MERGE_SELECT(THD*, TABLE*)
0000000000568ff8  w    F .text	000000000000003d              i_string::i_string(char const*)
00000000007856c8 g     F .text	00000000000000aa              Item_string::val_real()
00000000007fcb38 g     F .text	000000000000003d              Item_sum::ram_limitation(THD*)
000000000065cb32  w    F .text	0000000000000046              Item_func_rollup_const::~Item_func_rollup_const()
00000000005bf882  w    F .text	0000000000000031              Query_cache_block::table(unsigned int)
00000000008095e8  w    F .text	0000000000000040              Item_sum_min::Item_sum_min(THD*, Item_sum_min*)
0000000000917332 g     F .text	00000000000000a0              insert_events_waits_history(PFS_thread*, PFS_events_waits*)
0000000000797f16  w    F .text	0000000000000082              Item_ref::check_cols(unsigned int)
000000000106bb88  w    O .data.rel.ro	0000000000000038              vtable for Trigger_creation_ctx
00000000007a3c8a g     F .text	00000000000000af              Item_func_if::cache_type_info(Item*)
00000000006f4abe g     F .text	0000000000000027              MDL_ticket::has_pending_conflicting_lock() const
00000000008f40e1 g     F .text	000000000000000c              pthread_dummy
000000000138c480 g     O .bss	0000000000000001              timed_mutexes
000000000120be40 g     O .data	0000000000000100              to_upper_latin2_hungarian_ci
000000000065886e  w    F .text	0000000000000017              Bitmap<64u>::is_clear_all() const
000000000083b52a g     F .text	0000000000000238              Rotate_log_event::Rotate_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000010af628  w    O .data.rel.ro	00000000000003a0              vtable for Item_singlerow_subselect
00000000005f198a  w    F .text	000000000000001b              List<String>::List()
000000000106f100  w    O .data.rel.ro	0000000000000040              vtable for Settable_routine_parameter
0000000001087840  w    O .data.rel.ro	0000000000000030              vtable for Create_func_interiorringn
0000000001375de0 g     O .bss	0000000000000060              my_locale_es_CR
00000000007f6012 g     F .text	00000000000000ae              Item_singlerow_subselect::val_str(String*)
000000000055cb49 g     F .text	0000000000000485              mysql_load_plugin_v
000000000055e8f9 g     F .text	0000000000000508              sql_parse_prepare(st_mysql_lex_string const*, st_mem_root*, bool)
00000000007734bb g     F .text	000000000000007c              ha_commit_or_rollback_by_xid(xid_t*, bool)
0000000000798414  w    F .text	0000000000000087              Item_outer_ref::Item_outer_ref(Name_resolution_context*, Item**, char const*, char const*, bool)
000000000073ab54  w    F .text	0000000000000038              Item_func_now_local::Item_func_now_local(Item*)
00000000008cd6b8  w    F .text	0000000000000047              TaoCrypt::SHA224::SHA224()
000000000077bd40  w    F .text	0000000000000017              handler::get_parent_foreign_key_list(THD*, List<st_foreign_key_info>*)
000000000061c1d8  w    F .text	0000000000000026              List_iterator<st_mysql_lex_string>::List_iterator(List<st_mysql_lex_string>&)
00000000005e3834 g     F .text	000000000000003b              Delayed_prelocking_strategy::handle_view(THD*, Query_tables_list*, TABLE_LIST*, bool*)
000000000079bce8  w    F .text	0000000000000046              Cached_item_int::~Cached_item_int()
00000000007c223a  w    F .text	000000000000002d              Create_func_substr_index::Create_func_substr_index()
000000000138c9e1 g     O .bss	0000000000000001              alarm_thread_running
0000000000818742 g     F .text	0000000000000107              find_ref_key(st_key*, unsigned int, unsigned char*, Field*, unsigned int*, unsigned int*)
00000000007b0d38  w    F .text	0000000000000046              cmp_item_int::~cmp_item_int()
00000000012cbac0 g     O .data	00000000000000b0              my_charset_utf32_persian_uca_ci
0000000000766c20  w    F .text	0000000000000037              Field_string::has_charset() const
00000000005b07ca  w    F .text	0000000000000041              MDL_deadlock_handler::~MDL_deadlock_handler()
000000000088b0a2  w    F .text	000000000000001d              List_iterator_fast<sp_pcontext>::operator++(int)
00000000005bf352  w    F .text	0000000000000012              Query_cache_query::length()
0000000000708870  w    F .text	000000000000001f              PolyLock_rwlock::unlock()
0000000001374e20 g     O .bss	0000000000000060              my_locale_sl_SI
000000000082d2ee  w    F .text	0000000000000046              Rand_log_event::~Rand_log_event()
000000000083c8b0 g     F .text	00000000000000c8              Xid_log_event::do_shall_skip(Relay_log_info*)
000000000065c34c  w    F .text	0000000000000026              List<Item>::prepand(List<Item>*)
00000000005cadd5 g     F .text	0000000000000041              xid_cache_free()
0000000000698298  w    F .text	0000000000000050              Stored_program_creation_ctx::Stored_program_creation_ctx(charset_info_st*, charset_info_st*, charset_info_st*)
00000000009478a7 g     F .text	00000000000001cf              _myisam_log_command
0000000000767fea  w    F .text	000000000000002b              Field_datetime::~Field_datetime()
00000000005c4f32 g     F .text	000000000000001f              sql_exchange::escaped_given()
00000000005673ea  w    F .text	0000000000000046              Item_int::~Item_int()
000000000090bfd0  w    F .text	0000000000000026              ACL_internal_table_access::~ACL_internal_table_access()
000000000073a846  w    F .text	000000000000002a              Item_str_timefunc::tmp_table_field(TABLE*)
0000000000809628  w    F .text	000000000000000f              Item_sum_min::sum_func() const
00000000006f0ad6  w    F .text	000000000000001d              List_iterator<Observer_info>::operator++(int)
00000000007beeaa  w    F .text	000000000000002d              Create_func_envelope::Create_func_envelope()
000000000065c87a  w    F .text	000000000000002c              List_iterator_fast<Item>::sublist(List<Item>&, unsigned int)
00000000006f5636  w    F .text	0000000000000038              MDL_scoped_lock::MDL_scoped_lock(MDL_key const*)
00000000006c1c30  w    F .text	000000000000002e              Time_zone::adjust_leap_second(st_mysql_time*)
00000000008c10c0  w    F .text	0000000000000011              Item_nodeset_func_union::func_name() const
00000000007b9a52  w    F .text	0000000000000038              Item_sum_udf_str::Item_sum_udf_str(st_udf_func*)
00000000005e9fe7 g     F .text	000000000000005e              lex_free()
0000000001209d80 g     O .data	0000000000000101              ctype_ascii_general_ci
00000000008c21f4  w    F .text	0000000000000046              Item_nodeset_func_descendantbyname::~Item_nodeset_func_descendantbyname()
00000000008891f6  w    F .text	0000000000000046              sp_instr_jump::~sp_instr_jump()
00000000006c75fe g     F .text	000000000000002e              Event_queue_element_for_exec::~Event_queue_element_for_exec()
000000000078eac0 g     F .text	0000000000000185              Item_field::print(String*, enum_query_type)
000000000136fc40 g     O .bss	0000000000000008              user_info
00000000006f52ac  w    F .text	0000000000000012              MDL_ticket::get_ctx() const
000000000105d7e0 g     O .data.rel.ro	0000000000000010              mysql_db_table_def
00000000007bd34e  w    F .text	0000000000000041              Create_func_arg3::~Create_func_arg3()
00000000007850f2 g     F .text	0000000000000097              Item_decimal::set_decimal_value(my_decimal*)
00000000005ad039 g     F .text	0000000000000436              setup_conds(THD*, TABLE_LIST*, TABLE_LIST*, Item**)
000000000088ce94  w    F .text	0000000000000062              sp_cursor::~sp_cursor()
00000000010882f0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_bit_count
00000000007d92a2 g     F .text	00000000000000a4              Item_func_sp::execute()
00000000007b15c8  w    F .text	0000000000000046              Item_func_eq::~Item_func_eq()
000000000079fdf2 g     F .text	00000000000000e5              Arg_comparator::compare_int_unsigned()
000000000073bbe8  w    F .text	0000000000000054              sp_lex_keeper::sp_lex_keeper(LEX*, bool)
00000000007dad10  w    F .text	0000000000000039              Item_func_units::fix_length_and_dec()
000000000136f0c0 g     O .bss	0000000000000070              LOCK_thread_count
000000000073bdf0  w    F .text	000000000000007d              sp_instr_set_trigger_field::sp_instr_set_trigger_field(unsigned int, sp_pcontext*, Item_trigger_field*, Item*, LEX*)
0000000000872074  w    F .text	000000000000000f              QUICK_ROR_INTERSECT_SELECT::unique_key_range()
000000000136c7c0 g     O .data	00000000000001a0              cclasses
0000000000b611c8 g     F .text	0000000000000082              ha_partition::analyze(THD*, st_ha_check_opt*)
0000000001074ad8  w    O .data.rel.ro	0000000000000388              vtable for Item_cache_str
00000000008986aa g     F .text	000000000000021c              field_decimal::avg(String*, unsigned long long)
000000000086ac00 g     F .text	0000000000000544              QUICK_SELECT_DESC::get_next()
0000000000843b90 g     F .text	00000000000000df              Rows_log_event::pack_info(Protocol*)
00000000010ca7c0 g     O .data.rel.ro	0000000000000028              _ft_vft_nlq
000000000055c0ea  w    F .text	000000000000001b              NAMED_ILIST::NAMED_ILIST()
00000000007e5ea6 g     F .text	00000000000004ec              Item_func_des_decrypt::val_str(String*)
00000000007f333a  w    F .text	0000000000000058              Item_func_make_set::~Item_func_make_set()
00000000007de890 g     F .text	000000000000022e              Item_func_envelope::val_str(String*)
00000000005f1dfe  w    F .text	000000000000001b              List<List<Item> >::List()
00000000005e9812  w    F .text	000000000000001a              I_List<delayed_row>::is_empty()
0000000000b74314 g     F .text	00000000000000eb              _lf_alloc_new
00000000008fe84c g     F .text	00000000000000f1              thr_multi_lock
0000000001088470  w    O .data.rel.ro	0000000000000030              vtable for Create_func_aes_decrypt
0000000000815b5e  w    F .text	0000000000000021              Item_func_hour::check_valid_arguments_processor(unsigned char*)
00000000006f510a  w    F .text	0000000000000010              I_P_List_counter::elements() const
000000000065c716  w    F .text	000000000000001a              List<Item>::pop()
000000000136fc48 g     O .bss	0000000000000001              mysqld_embedded
00000000007bd032  w    F .text	000000000000002d              Create_udf_func::Create_udf_func()
000000000082d262  w    F .text	000000000000002b              Intvar_log_event::~Intvar_log_event()
00000000007f2708  w    F .text	0000000000000011              Item_func_uncompressed_length::func_name() const
00000000005e960a  w    F .text	000000000000001b              List_iterator_fast<List<Item> >::rewind()
0000000000766812  w    F .text	000000000000000f              Field_datetime::binary() const
00000000007da01c  w    F .text	0000000000000027              udf_handler::result_type() const
00000000008729f8  w    F .text	000000000000002c              SEL_ARG::copy_min_to_min(SEL_ARG*)
000000000080e1b0 g     F .text	0000000000000074              Item_func_second::val_int()
000000000082a178 g     F .text	0000000000000038              sql_perror(char const*)
0000000000813d76 g     F .text	0000000000000081              Item_func_microsecond::val_int()
000000000136f340 g     O .bss	0000000000000070              LOCK_delayed_insert
00000000007990a8  w    F .text	0000000000000053              Item_trigger_field::get_settable_routine_parameter()
00000000006bacc8  w    F .text	0000000000000020              Field_blob::get_field_buffer_size()
000000000070d620  w    F .text	0000000000000026              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::global_save_default(THD*, set_var*)
0000000000564eae  w    F .text	000000000000005d              String::set(char*, unsigned int, charset_info_st*)
0000000000678b8a  w    F .text	0000000000000041              Trigger_error_handler::~Trigger_error_handler()
00000000005b75b0 g     F .text	00000000000000a5              Query_cache::free_cache()
0000000001212660 g     O .data	0000000000000100              sort_order_cp1250_croatian_ci
000000000136ccb8 g     O .bss	0000000000000008              concurrency
00000000007beb26  w    F .text	000000000000002d              Create_func_dimension::Create_func_dimension()
0000000000889184  w    F .text	0000000000000046              sp_instr_opt_meta::~sp_instr_opt_meta()
00000000005ce014  w    F .text	0000000000000048              Discrete_intervals_list::set_members(Discrete_interval*, Discrete_interval*, Discrete_interval*, unsigned int)
00000000007c1970  w    F .text	000000000000002d              Create_func_rpad::Create_func_rpad()
0000000000598dde  w    F .text	000000000000001b              List<LEX_COLUMN>::~List()
000000000078d00e g     F .text	000000000000006f              Item_int::save_in_field(Field*, bool)
000000000093f4fd g     F .text	00000000000000d3              _my_store_blob_length
000000000120e400 g     O .data	0000000000000100              sort_order_cp1257_lithuanian_ci
0000000000566fa8  w    F .text	000000000000000b              Item::bring_value()
00000000007f1960  w    F .text	0000000000000011              Item_func_aes_encrypt::func_name() const
0000000000773e2a g     F .text	0000000000000389              mysql_xa_recover(THD*)
00000000005e93d6  w    F .text	000000000000001c              Delayed_insert::lock()
00000000008e4acf g     F .text	000000000000022b              unpack_dirname
00000000010ef940 g     O .data	0000000000000058              table_setup_instruments::m_share
000000000070e446  w    F .text	0000000000000035              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::global_update(THD*, set_var*)
0000000000818849 g     F .text	00000000000001b1              key_copy(unsigned char*, unsigned char*, st_key*, unsigned int)
00000000005d073c  w    F .text	0000000000000025              List<Alter_drop>::push_front(Alter_drop*)
00000000007bacb8  w    F .text	0000000000000038              Item_func_udf_float::Item_func_udf_float(st_udf_func*)
00000000007f250a  w    F .text	0000000000000011              Item_func_quote::func_name() const
0000000000849c0a  w    F .text	000000000000002b              Write_rows_log_event::~Write_rows_log_event()
00000000006f5f2a  w    F .text	0000000000000096              I_P_List<MDL_object_lock, MDL_object_lock_cache_adapter, I_P_List_counter, I_P_List_no_push_back<MDL_object_lock> >::remove(MDL_object_lock*)
0000000000954e51 g     F .text	000000000000012c              save_pack_length
000000000095edb8 g     F .text	0000000000000118              _mi_read_static_record
00000000005cff3c  w    F .text	0000000000000035              Rows_log_event::add_row_data(unsigned char*, unsigned long)
00000000005b0ba4  w    F .text	000000000000001b              Hash_set<TABLE_LIST, &schema_set_get_key>::~Hash_set()
000000000065a3d6  w    F .text	000000000000004a              Item_cond_and::Item_cond_and(List<Item>&)
000000000136cdb0 g     O .bss	0000000000000008              delayed_rows_in_use
00000000007bedee  w    F .text	0000000000000026              Create_func_encrypt::~Create_func_encrypt()
00000000007395ba  w    F .text	00000000000000ad              Item_func_like::Item_func_like(Item*, Item*, Item*, bool)
000000000073911c  w    F .text	0000000000000011              Item_func_isnotfalse::func_name() const
00000000005654f2  w    F .text	0000000000000039              Item_result_field::Item_result_field()
0000000000606ede  w    F .text	0000000000000040              Item_func_ne::Item_func_ne(Item*, Item*)
00000000008c085e  w    F .text	0000000000000032              XPathFilter::append_element(my_xpath_flt_st*)
00000000006d747c g     F .text	0000000000000044              injector::transaction::~transaction()
0000000000000000       F *UND*	0000000000000000              open64@@GLIBC_2.2.5
00000000008160ba  w    F .text	0000000000000021              Item_func_time_to_sec::check_valid_arguments_processor(unsigned char*)
00000000006683d8 g     F .text	00000000000004e8              fill_schema_schemata(THD*, TABLE_LIST*, Item*)
0000000000601a64 g     F .text	000000000000001b              mysql_reset_thd_for_next_command(THD*)
000000000059b11c  w    F .text	0000000000000026              List<LEX_COLUMN>::List(List<LEX_COLUMN> const&)
00000000007673b8  w    F .text	00000000000000a0              Field_set::Field_set(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned int, st_typelib*, charset_info_st*)
00000000007682c2  w    F .text	0000000000000046              Field_float::~Field_float()
0000000001385df8 g     O .bss	0000000000000008              total_ha_2pc
0000000000583bec g     F .text	000000000000031e              GRANT_NAME::GRANT_NAME(TABLE*, bool)
000000000087d7d1 g     F .text	00000000000000dc              sp_add_used_routine(Query_tables_list*, Query_arena*, sp_name*, char)
000000000136f014 g     O .bss	0000000000000004              have_rtree_keys
00000000008c50a8 g     F .text	00000000000000d4              Event_scheduler::unlock_data(char const*, unsigned int)
0000000000000000       F *UND*	0000000000000000              mlockall@@GLIBC_2.2.5
00000000007f28e4  w    F .text	0000000000000046              Item_func_uuid::~Item_func_uuid()
00000000007a9026 g     F .text	000000000000007d              Item_cond::Item_cond(THD*, Item_cond*)
000000000078d7de g     F .text	0000000000000045              Item_hex_string::Item_hex_string()
00000000007c0936  w    F .text	0000000000000041              Create_func_lpad::~Create_func_lpad()
000000000056dee5 g     F .text	00000000000000ab              skip_load_data_infile(st_net*)
000000000080a468  w    F .text	0000000000000046              Item_sum_udf_float::~Item_sum_udf_float()
00000000010a3508  w    O .data.rel.ro	0000000000000398              vtable for Item_func_binary
0000000000787fd4 g     F .text	000000000000015f              Item_copy::create(Item*)
00000000005c54ba g     F .text	0000000000000060              select_export::~select_export()
000000000073931e  w    F .text	0000000000000038              Item_func_coalesce::Item_func_coalesce(List<Item>&)
000000000106e9d0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_istrue
000000000088ab20 g     F .text	00000000000000fd              sp_pcontext::find_cond(st_mysql_lex_string*, char)
00000000009122d2  w    F .text	0000000000000026              table_setup_timers::~table_setup_timers()
00000000007b171e  w    F .text	0000000000000056              cmp_item_sort_string_in_static::~cmp_item_sort_string_in_static()
00000000007b9dac  w    F .text	000000000000000f              Item_real_func::result_type() const
0000000001374400 g     O .bss	0000000000000060              my_locale_fo_FO
00000000007fd862 g     F .text	00000000000000ef              Item_sum::print(String*, enum_query_type)
00000000007da2ec  w    F .text	0000000000000025              Item_func::raise_float_overflow()
00000000007baf34  w    F .text	0000000000000052              Item_master_pos_wait::Item_master_pos_wait(Item*, Item*)
000000000120f560 g     O .data	0000000000000100              to_upper_cp866_general_ci
00000000007bbe00  w    F .text	000000000000002b              Item_func_like_range::~Item_func_like_range()
00000000006cdc3a g     F .text	0000000000000027              Events::start(int*)
000000000108f670  w    O .data.rel.ro	0000000000000398              vtable for Item_func_find_in_set
00000000005e8afc  w    F .text	0000000000000012              Name_resolution_context_state::get_first_name_resolution_table()
00000000010f1400 g     O .data	00000000000000d0              builtin_myisam_plugin
0000000000851bf0 g     F .text	0000000000000069              Delete_rows_log_event_old::Delete_rows_log_event_old(char const*, unsigned int, Format_description_log_event const*)
0000000000767f32  w    F .text	0000000000000046              Field_string::~Field_string()
0000000000817456  w    F .text	000000000000002b              Item_func_microsecond::~Item_func_microsecond()
00000000007996ee  w    F .text	0000000000000055              Item_cache_row::Item_cache_row()
00000000007a054a g     F .text	00000000000000f5              Item_func_truth::print(String*, enum_query_type)
00000000007aec44  w    F .text	0000000000000046              Item_func_coalesce::~Item_func_coalesce()
0000000000848398 g     F .text	0000000000000046              Incident_log_event::~Incident_log_event()
00000000006f25b0 g     F .text	000000000000023e              MDL_lock::reschedule_waiters()
00000000008eabc6 g     F .text	0000000000000068              bitmap_is_set_all
0000000000988371 g     F .text	0000000000000120              hp_rb_write_key
000000000075d670 g     F .text	00000000000000bb              Field_enum::val_str(String*, String*)
000000000089a65c  w    F .text	00000000000000b3              field_ulonglong::field_ulonglong(Item*, analyse*)
000000000079807e  w    F .text	0000000000000071              Item_ref::get_time(st_mysql_time*)
000000000090e23c  w    F .text	0000000000000026              table_events_waits_common::~table_events_waits_common()
00000000007af920  w    F .text	000000000000002f              cmp_item_sort_string_in_static::cmp(Item*)
0000000000b9c12a g     F .text	0000000000000117              my_strtod
00000000010ef1e0 g     O .data	0000000000000010              thread_instrument_prefix
00000000007bf838  w    F .text	0000000000000041              Create_func_get_lock::~Create_func_get_lock()
00000000006f256e g     F .text	0000000000000042              MDL_lock::Ticket_list::remove_ticket(MDL_ticket*)
000000000136cbfa g     O .bss	0000000000000001              abort_loop
000000000090d3f0 g     F .text	0000000000000066              table_events_waits_current::table_events_waits_current()
00000000005cfc56  w    F .text	000000000000000f              select_result::prepare2()
00000000007f2dc4  w    F .text	0000000000000058              Item_func_unhex::~Item_func_unhex()
0000000000799064  w    F .text	0000000000000012              Item_trigger_field::copy_or_same(THD*)
00000000006e939e g     F .text	00000000000000de              PROFILING::status_change(char const*, char const*, char const*, unsigned int)
00000000007af950  w    F .text	000000000000003d              cmp_item_sort_string_in_static::compare(cmp_item*)
00000000007c2df2  w    F .text	000000000000002d              Create_func_x::Create_func_x()
000000000065bf40  w    F .text	0000000000000026              I_List<COND_CMP>::push_back(COND_CMP*)
00000000007ae4d6  w    F .text	0000000000000058              Item_bool_func2::~Item_bool_func2()
00000000005b001a  w    F .text	0000000000000017              Query_arena::is_stmt_prepare_or_first_stmt_execute() const
0000000000b987e1 g     F .text	00000000000001c2              decimal_result_size
00000000008180e2  w    F .text	0000000000000046              Item_func_week::~Item_func_week()
00000000009075f8 g     F .text	0000000000000093              destroy_thread(PFS_thread*)
0000000000893980  w    F .text	0000000000000026              Gis_polygon::~Gis_polygon()
000000000093b6cd g     F .text	0000000000000055              _mi_update_dynamic_record
00000000006f5786  w    F .text	0000000000000011              MDL_object_lock::incompatible_granted_types_bitmap() const
0000000001071810  w    O .data.rel.ro	0000000000000298              vtable for Field_timestamp
000000000065a396  w    F .text	000000000000003f              Item_cond_and::Item_cond_and()
0000000000900036 g     F .text	00000000000000ba              rw_pr_wrlock
00000000007cb77e g     F .text	00000000000000e6              Item_func_floor::decimal_op(my_decimal*)
00000000007b0cc6  w    F .text	0000000000000046              cmp_item_real::~cmp_item_real()
0000000000800bfe g     F .text	0000000000000091              Aggregator_distinct::arg_val_real()
00000000007fbcc0 g     F .text	000000000000020b              subselect_indexsubquery_engine::print(String*, enum_query_type)
00000000007bdabe  w    F .text	000000000000002d              Create_func_bin::Create_func_bin()
0000000000690c50  w    F .text	0000000000000021              st_global_ddl_log::st_global_ddl_log()
000000000107e6b0  w    O .data.rel.ro	0000000000000398              vtable for Item_cond_xor
00000000007dda12  w    F .text	000000000000002b              Item_func_mod::~Item_func_mod()
0000000000829eec g     F .text	00000000000000c1              MYSQL_BIN_LOG::set_max_size(unsigned long)
00000000007bfb8e  w    F .text	000000000000002d              Create_func_inet_aton::Create_func_inet_aton()
00000000007c20a6  w    F .text	0000000000000041              Create_func_startpoint::~Create_func_startpoint()
00000000007be15e  w    F .text	0000000000000041              Create_func_contains::~Create_func_contains()
000000000065c26e  w    F .text	000000000000001b              List_iterator<Item_func_match>::remove()
00000000007eb894 g     F .text	0000000000000165              Item_func_format::get_locale(Item*)
00000000007c32ee  w    F .text	000000000000002b              Item_func_min::~Item_func_min()
000000000065ac92  w    F .text	0000000000000087              st_join_table::is_using_agg_loose_index_scan()
000000000090e462 g     F .text	0000000000000067              table_events_waits_summary_by_thread_by_event_name::table_events_waits_summary_by_thread_by_event_name()
0000000000b84d50 g     F .text	000000000000005b              my_mb_ctype_8bit
0000000000b6c0da g     F .text	00000000000009de              ha_partition::info(unsigned int)
000000000136cc30 g     O .bss	0000000000000001              read_only
00000000008c2072  w    F .text	000000000000002b              Item_nodeset_func_predicate::~Item_nodeset_func_predicate()
000000000090956a g     F .text	00000000000000a6              sanitize_cond_class(PFS_cond_class*)
00000000007672a2  w    F .text	000000000000000f              Field_enum::size_of() const
0000000001386510 g     O .bss	0000000000000008              Create_func_geometryn::s_singleton
00000000007e78c2 g     F .text	00000000000003e1              Item_func_insert::val_str(String*)
000000000090a8ec g     F .text	00000000000000ee              PFS_check_intact::report_error(unsigned int, char const*, ...)
0000000000906d46 g     F .text	0000000000000041              destroy_mutex(PFS_mutex*)
0000000000604947 g     F .text	0000000000000021              comp_le_creator(bool)
00000000006fb89e g     F .text	0000000000000454              trans_xa_commit(THD*)
0000000000777626 g     F .text	0000000000000033              handler::ha_delete_all_rows()
00000000005e8934  w    F .text	0000000000000037              table_case_name(st_ha_create_information*, char const*)
00000000007e1b04  w    F .text	0000000000000011              Item_func_x::func_name() const
0000000001372b20 g     O .bss	0000000000000010              end_of_list
0000000000749a6e g     F .text	0000000000000038              Field_num::make_field(Send_field*)
00000000007b10ce  w    F .text	000000000000002b              Item_func_if::~Item_func_if()
0000000000841d5a g     F .text	0000000000000172              Rows_log_event::get_data_size()
000000000069851e  w    F .text	0000000000000051              Trigger_creation_ctx::Trigger_creation_ctx(charset_info_st*, charset_info_st*, charset_info_st*)
0000000000784868 g     F .text	000000000000006d              Item_int::val_str(String*)
00000000009133e2 g     F .text	0000000000000071              table_threads::table_threads()
0000000001070888  w    O .data.rel.ro	0000000000000298              vtable for Field_string
000000000090c0ba  w    F .text	0000000000000041              PFS_truncatable_acl::~PFS_truncatable_acl()
00000000007dd1c8  w    F .text	0000000000000046              Item_func_shift_right::~Item_func_shift_right()
000000000059839e  w    F .text	000000000000004c              base_list_iterator::next()
00000000007be812  w    F .text	0000000000000026              Create_func_dayofweek::~Create_func_dayofweek()
00000000007996ee  w    F .text	0000000000000055              Item_cache_row::Item_cache_row()
0000000000b71636  w    F .text	0000000000000026              List_iterator_fast<partition_element>::List_iterator_fast(List<partition_element>&)
000000000065fb8a g     F .text	00000000000002ad              append_identifier(THD*, String*, char const*, unsigned int, charset_info_st*, charset_info_st*)
0000000000598cc0  w    F .text	000000000000002f              TABLE_LIST::get_table_name()
0000000000558b9e  w    F .text	000000000000002c              base_ilist::head()
00000000009929b2 g     F .text	0000000000000065              myrg_position
00000000007683a6  w    F .text	0000000000000046              Field_long::~Field_long()
000000000055956a  w    F .text	0000000000000035              Unknown_key_hook::~Unknown_key_hook()
00000000007e839c g     F .text	000000000000006e              Item_func_left::fix_length_and_dec()
00000000005b0004  w    F .text	0000000000000016              Query_arena::is_stmt_prepare() const
00000000007b259c g     F .text	0000000000000050              Create_func_acos::create(THD*, Item*)
0000000000893532  w    F .text	0000000000000016              Geometry::point_n(unsigned int, String*) const
00000000007b60ac g     F .text	0000000000000060              Create_func_rpad::create(THD*, Item*, Item*, Item*)
00000000007c0fea  w    F .text	0000000000000026              Create_func_numinteriorring::~Create_func_numinteriorring()
0000000000889268  w    F .text	000000000000004a              sp_instr_jump::backpatch(unsigned int, sp_pcontext*)
00000000007b5e2a g     F .text	0000000000000050              Create_func_reverse::create(THD*, Item*)
00000000007b9d00  w    F .text	0000000000000050              Item_real_func::Item_real_func(Item*, Item*)
00000000005af972  w    F .text	000000000000002f              DTCollation::DTCollation()
000000000136f008 g     O .bss	0000000000000004              have_dlopen
00000000005f0830  w    F .text	00000000000001f2              Create_field::Create_field(Create_field const&)
000000000091cb4c g     F .text	0000000000000292              ha_myisam::analyze(THD*, st_ha_check_opt*)
00000000005b0d6a  w    F .text	0000000000000025              Hash_set<TABLE_LIST, &schema_set_get_key>::Iterator::Iterator(Hash_set<TABLE_LIST, &schema_set_get_key>&)
00000000005f1c19  w    F .text	0000000000000091              void list_copy_and_replace_each_value<Alter_column>(List<Alter_column>&, st_mem_root*)
00000000006985ae  w    F .text	000000000000004d              Handle_old_incorrect_trigger_table_hook::Handle_old_incorrect_trigger_table_hook(char*, st_mysql_lex_string*)
00000000007bdb82  w    F .text	0000000000000041              Create_func_bit_count::~Create_func_bit_count()
00000000005cfc06  w    F .text	000000000000002b              select_result::~select_result()
0000000000558772  w    F .text	0000000000000027              base_list::base_list()
0000000000917c30 g     F .text	00000000000002d9              table_all_instr::rnd_pos(void const*)
00000000008da928 g     F .text	00000000000001ac              end_io_cache
0000000000809c78  w    F .text	000000000000000f              Item_sum_udf_int::result_type() const
00000000007968f8  w    F .text	0000000000000026              Item::float_length(unsigned int) const
000000000074942e g     F .text	0000000000000061              Field_num::add_zerofill_and_unsigned(String&) const
000000000136fa00 g     O .bss	0000000000000040              LOCK_system_variables_hash
00000000006d47be  w    F .text	000000000000001b              List_iterator<p_elem_val>::remove()
000000000077c384  w    F .text	000000000000005e              THD::st_transactions::cleanup()
00000000005a0a6a g     F .text	000000000000007a              MDL_deadlock_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)
000000000087e856  w    F .text	0000000000000035              Bad_db_error_handler::Bad_db_error_handler()
0000000000885da0 g     F .text	0000000000000081              sp_instr::exec_open_and_lock_tables(THD*, TABLE_LIST*)
0000000000908b9b g     F .text	0000000000000067              init_table_share_hash()
00000000007db8a6  w    F .text	0000000000000070              Item_func_match::val_int()
00000000006b3c68 g     F .text	0000000000000020              set_zone(int, int, int)
00000000007aed4c  w    F .text	0000000000000011              Item_func_nullif::func_name() const
000000000079a48e  w    F .text	0000000000000046              Item_insert_value::~Item_insert_value()
0000000000767a34  w    F .text	0000000000000050              MBR::MBR()
000000000084840a g     F .text	0000000000000055              Incident_log_event::description() const
00000000007bef40  w    F .text	000000000000002d              Create_func_equals::Create_func_equals()
00000000008b9f6c g     F .text	00000000000000c2              unique_write_to_file(unsigned char*, unsigned int, Unique*)
000000000079719a  w    F .text	0000000000000026              Item_param::used_tables() const
00000000007e2762  w    F .text	000000000000002b              Item_func_geometry_from_wkb::~Item_func_geometry_from_wkb()
0000000001394080 g     O .bss	0000000000000008              my_regex_enough_mem_in_stack
000000000088c704 g     F .text	0000000000000066              sp_cursor::close(THD*)
00000000005a3ab8 g     F .text	00000000000002bb              Open_table_context::recover_from_failed_open()
0000000000805e50 g     F .text	0000000000000025              Item_sum_udf_int::val_decimal(my_decimal*)
000000000079685c  w    F .text	000000000000002f              Name_resolution_context::process_error(THD*)
000000000090e18e  w    F .text	0000000000000025              pos_events_waits_history::pos_events_waits_history()
00000000006d47da g     F .text	0000000000000035              compare(unsigned long, unsigned long)
000000000079981a  w    F .text	0000000000000014              Item_cache_row::cols()
0000000000618e28 g     F .text	0000000000000092              Prepared_statement::set_db(char const*, unsigned int)
000000000069837b  w    F .text	000000000000001f              st_mysql_lex_string* alloc_type<st_mysql_lex_string>(st_mem_root*)
000000000080e9e4 g     F .text	000000000000007d              Item_func_unix_timestamp::get_monotonicity_info() const
00000000008182aa  w    F .text	0000000000000046              Item_func_quarter::~Item_func_quarter()
000000000080a6a2  w    F .text	0000000000000046              Item_sum_or::~Item_sum_or()
0000000000b6f698 g     F .text	0000000000000033              ha_partition::max_supported_key_parts() const
00000000010814f0  w    O .data.rel.ro	0000000000000048              vtable for in_string
0000000000568406 g     F .text	00000000000000bb              Rpl_filter::add_ignore_table(char const*)
00000000008d35ba g     F .text	0000000000000136              _my_hash_init
0000000000797442  w    F .text	000000000000000f              Item_float::field_type() const
00000000012cc420 g     O .data	00000000000000b0              my_charset_utf16_swedish_uca_ci
000000000136cc8c g     O .bss	0000000000000004              lower_case_table_names
0000000000889d0e  w    F .text	0000000000000053              SQL_I_List<Item_trigger_field>::push_back(SQL_I_List<Item_trigger_field>*)
000000000080ff5c g     F .text	0000000000000110              Item_func_sec_to_time::val_int()
00000000005f0cf2  w    F .text	000000000000003e              st_select_lex::init_order()
000000000075cc02 g     F .text	000000000000004b              Field_geom::store(long long, bool)
0000000000659560  w    F .text	0000000000000031              Item_null::print(String*, enum_query_type)
00000000007664fc  w    F .text	000000000000000f              Field_newdate::cmp_type() const
000000000079ac28  w    F .text	0000000000000046              Item_name_const::~Item_name_const()
000000000077bdda  w    F .text	000000000000001e              handler::add_index(TABLE*, st_key*, unsigned int, handler_add_index**)
00000000008d5593 g     F .text	000000000000017b              my_MD5Final
00000000006a782a g     F .text	00000000000018f6              mysql_make_view(THD*, File_parser*, TABLE_LIST*, unsigned int)
000000000138c444 g     O .bss	0000000000000004              mysys_usage_id
00000000008254c4 g     F .text	0000000000000078              MYSQL_BIN_LOG::register_create_index_entry(char const*)
000000000073afa4  w    F .text	0000000000000050              Item_func_timestamp_diff::Item_func_timestamp_diff(Item*, Item*, interval_type)
000000000058d34c g     F .text	00000000000000cd              get_mqh(char const*, char const*, user_conn*)
00000000008c2990 g     F .text	0000000000000030              table_mapping::~table_mapping()
00000000006b8298 g     F .text	0000000000000046              Natural_join_column::table_name()
0000000000902357 g     F .text	00000000000001bf              find_typeset
000000000138c998 g     O .bss	0000000000000008              PSI_hook
000000000074a4a2 g     F .text	0000000000000c71              Field_decimal::store(char const*, unsigned int, charset_info_st*)
0000000000566b7a  w    F .text	0000000000000012              Item::copy_or_same(THD*)
000000000078db38 g     F .text	00000000000001ab              Item_hex_string::save_in_field(Field*, bool)
00000000008088f4  w    F .text	000000000000000f              Aggregator_simple::Aggrtype()
0000000001386490 g     O .bss	0000000000000008              Create_func_endpoint::s_singleton
00000000007bb2ec  w    F .text	000000000000002b              Item_str_func::~Item_str_func()
0000000000678abe  w    F .text	0000000000000026              List_iterator<char>::List_iterator(List<char>&)
000000000069899c  w    F .text	0000000000000052              Trigger_creation_ctx::~Trigger_creation_ctx()
00000000006ed922  w    F .text	0000000000000056              Signal_common::~Signal_common()
00000000007f3ce8  w    F .text	0000000000000058              Item_func_reverse::~Item_func_reverse()
0000000000845c9a g     F .text	0000000000000c60              Rows_log_event::write_row(Relay_log_info const*, bool)
00000000007c0720  w    F .text	0000000000000026              Create_func_locate::~Create_func_locate()
0000000000889102  w    F .text	0000000000000056              sp_instr_set_trigger_field::~sp_instr_set_trigger_field()
000000000056a569 g     F .text	0000000000000163              sql_set_variables(THD*, List<set_var_base>*)
0000000000b696bc g     F .text	00000000000000a6              ha_partition::destroy_record_priority_queue()
0000000000799598  w    F .text	000000000000003f              Item_cache_decimal::Item_cache_decimal()
0000000000766a4a  w    F .text	000000000000000f              Field_string::match_collation_to_optimize_range() const
00000000008b09a7 g     F .text	0000000000000048              get_partition_id_linear_key_nosub(partition_info*, unsigned int*, long long*)
00000000007f576c g     F .text	0000000000000032              Item_singlerow_subselect::reset()
000000000079ead8 g     F .text	000000000000011a              Arg_comparator::set_datetime_cmp_func(Item_result_field*, Item**, Item**)
00000000005f1e6e  w    F .text	000000000000001b              List<Name_resolution_context>::List()
0000000000783f70 g     F .text	00000000000000a6              Item_field::get_date(st_mysql_time*, unsigned int)
00000000006980a8  w    F .text	0000000000000026              Default_object_creation_ctx::~Default_object_creation_ctx()
00000000010869a0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_uuid
0000000000737ff6  w    F .text	000000000000003f              Item_sum_and::Item_sum_and(Item*)
0000000000000000       F *UND*	0000000000000000              pthread_equal@@GLIBC_2.2.5
00000000007f0f6c g     F .text	000000000000030e              Item_func_uncompress::val_str(String*)
0000000000b6a4de g     F .text	000000000000011d              ha_partition::index_next_same(unsigned char*, unsigned char const*, unsigned int)
000000000081732c  w    F .text	0000000000000046              Item_func_get_format::~Item_func_get_format()
00000000008d543d g     F .text	0000000000000156              my_MD5Update
0000000001386638 g     O .bss	0000000000000008              Create_func_monthname::s_singleton
000000000073cb24  w    F .text	0000000000000025              List<sp_variable>::push_back(sp_variable*)
000000000073cc5c  w    F .text	0000000000000025              List<List<Item> >::push_back(List<Item>*)
0000000000948a6a g     F .text	0000000000002a95              mi_open
0000000000809f1a  w    F .text	000000000000000f              Item_func_group_concat::sum_func() const
00000000005cebac  w    F .text	000000000000001b              List<Create_field>::~List()
0000000000697d1c g     F .text	00000000000001d9              load_table_name_for_trigger(THD*, sp_name const*, st_mysql_lex_string const*, st_mysql_lex_string*)
000000000098d874 g     F .text	00000000000000b6              ha_myisammrg::index_read_idx_map(unsigned char*, unsigned int, unsigned char const*, unsigned long, ha_rkey_function)
0000000000558f1c  w    F .text	0000000000000027              my_decimal::my_decimal()
00000000008c1a46  w    F .text	000000000000005d              Item_func_xpath_sum::Item_func_xpath_sum(Item*, String*)
0000000000737d38  w    F .text	0000000000000050              Item_sum_avg::Item_sum_avg(Item*, bool)
00000000008f31ac g     F .text	000000000000003d              my_msync
0000000000992ef5 g     F .text	0000000000000060              _myrg_mi_read_record
00000000010885f0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_arg0
000000000073a584  w    F .text	0000000000000038              Item_func_year::Item_func_year(Item*)
00000000007ae772  w    F .text	000000000000000f              Item_func_equal::not_null_tables() const
00000000010e2d60 g     O .data	0000000000000010              INFORMATION_SCHEMA_NAME
00000000005af40c  w    F .text	0000000000000049              TABLE_LIST::prepare_where(THD*, Item**, bool)
000000000084901c  w    F .text	000000000000000f              Start_log_event_v3::get_type_code()
000000000089a64a  w    F .text	0000000000000011              field_longlong::collect_enum()
00000000005af688  w    F .text	0000000000000049              Field_iterator_natural_join::Field_iterator_natural_join()
00000000005b0e2a  w    F .text	0000000000000026              List_iterator<TABLE_LIST>::List_iterator(List<TABLE_LIST>&)
00000000012cd640 g     O .data	00000000000000b0              my_charset_utf32_bin
000000000065a534  w    F .text	0000000000000077              subselect_engine::subselect_engine(Item_subselect*, select_subselect*)
00000000005f1958  w    F .text	0000000000000020              Mem_root_array<st_order*, true>::empty() const
00000000007941c4 g     F .text	0000000000000129              Item_cache_str::val_real()
000000000082e8c7 g     F .text	0000000000000051              mysql_unlock_some_tables(THD*, TABLE**, unsigned int)
0000000000805ab8 g     F .text	0000000000000025              Item_sum_udf_float::val_str(String*)
000000000120f960 g     O .data	0000000000000101              ctype_keybcs2_general_ci
000000000090c1b8  w    F .text	000000000000002d              PFS_editable_acl::PFS_editable_acl()
00000000005934ee g     F .text	000000000000008e              ACL_internal_schema_registry::register_schema(st_mysql_lex_string const*, ACL_internal_schema_access const*)
00000000006eac16  w    F .text	00000000000000d1              Queue<PROF_MEASUREMENT>::push_back(PROF_MEASUREMENT*)
00000000005c79d8 g     F .text	000000000000003d              select_subselect::select_subselect(Item_subselect*)
000000000098e3ce g     F .text	0000000000000021              ha_myisammrg::reset()
0000000000954254 g     F .text	0000000000000216              _mi_pack_get_block_info
00000000007c051c  w    F .text	0000000000000041              Create_func_like_range_max::~Create_func_like_range_max()
0000000000678556  w    F .text	000000000000001b              I_List<thread_info>::~I_List()
00000000007bb54e  w    F .text	000000000000004a              Item_func_concat_ws::Item_func_concat_ws(List<Item>&)
00000000005657b8  w    F .text	000000000000001d              I_List_iterator<i_string>::operator++(int)
00000000007b9c7a  w    F .text	000000000000003d              Item_real_func::Item_real_func()
000000000060654c  w    F .text	00000000000000a8              String::operator=(String const&)
00000000008cab20  w    F .text	000000000000002d              Event_db_intact::Event_db_intact()
00000000007d8a48 g     F .text	00000000000000dd              Item_func_sp::Item_func_sp(Name_resolution_context*, sp_name*, List<Item>&)
000000000095dfeb g     F .text	0000000000000314              _mi_store_var_pack_key
00000000005b3336 g     F .text	00000000000003dc              Query_cache::end_of_result(THD*)
0000000000663c1c g     F .text	000000000000013b              add_status_vars(st_mysql_show_var*)
000000000077c268  w    F .text	0000000000000012              handler::enable_indexes(unsigned int)
00000000008cfb25 g     F .text	0000000000000013              free_charsets
00000000007bf2c4  w    F .text	000000000000002d              Create_func_floor::Create_func_floor()
000000000070ebfc  w    F .text	0000000000000041              Sys_var_lexstring::~Sys_var_lexstring()
00000000012b7c80 g     O .data	0000000000000600              page019data
00000000007bf7a2  w    F .text	0000000000000041              Create_func_geometryn::~Create_func_geometryn()
0000000000753ca2 g     F .text	000000000000026d              Field_time::store(long long, bool)
000000000079f410 g     F .text	00000000000000cf              Arg_comparator::compare_e_string()
0000000000838c9a g     F .text	0000000000000787              Load_log_event::print_query(bool, char const*, char*, char**, char**, char**)
0000000000792ccc g     F .text	0000000000000035              Item_cache::get_cache(Item const*)
0000000001080aa8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_bit_or
00000000007af0e6  w    F .text	0000000000000061              in_datetime::in_datetime(Item*, unsigned int)
000000000070b7b8  w    F .text	000000000000004a              Sys_var_plugin::global_update(THD*, set_var*)
0000000000809ca6  w    F .text	0000000000000040              Item_sum_udf_str::Item_sum_udf_str(THD*, Item_sum_udf_str*)
00000000007b9dbc  w    F .text	000000000000002d              Item_func_connection_id::Item_func_connection_id()
0000000000610112 g     F .text	0000000000000096              sys_var_pluginvar::check_update_type(Item_result)
00000000006cfe17 g     F .text	000000000000004b              partition_info_list_part_cmp
00000000007c1f26  w    F .text	0000000000000026              Create_func_space::~Create_func_space()
00000000007b657e g     F .text	0000000000000050              Create_func_srid::create(THD*, Item*)
0000000000783218 g     F .text	00000000000000d5              Item_field::Item_field(THD*, Item_field*)
000000000056e74c g     F .text	000000000000004b              is_network_error(unsigned int)
000000000070db6a  w    F .text	0000000000000045              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::make_symbolic(void (*)(void*, unsigned long, char const*))
0000000000767146  w    F .text	000000000000000f              Field_geom::match_collation_to_optimize_range() const
00000000010a0dc0  w    O .data.rel.ro	0000000000000398              vtable for Item_geometry_func
00000000005c8df0 g     F .text	00000000000000b7              Statement_map::Statement_map()
00000000007ad22a g     F .text	00000000000000de              Item_equal::update_const()
00000000007bd1f4  w    F .text	000000000000002d              Create_func_arg1::Create_func_arg1()
00000000010a4e30  w    O .data.rel.ro	0000000000000398              vtable for Item_func_conv_charset
0000000000767028  w    F .text	0000000000000058              Field_blob::~Field_blob()
00000000007d009e g     F .text	00000000000002b5              udf_handler::val_str(String*, String*)
0000000000816f0a  w    F .text	0000000000000011              Item_func_add_time::charset_for_protocol() const
000000000136f8c0 g     O .bss	0000000000000070              LOCK_des_key_file
00000000007bc6d0  w    F .text	000000000000004a              Item_func_numinteriorring::Item_func_numinteriorring(Item*)
000000000054e36e g     F .text	000000000000001b              thd_cleanup(THD*)
000000000079fbfe g     F .text	000000000000010d              Arg_comparator::compare_e_real_fixed()
00000000008c189a  w    F .text	000000000000007b              Item_func_xpath_position::val_int()
0000000000799494  w    F .text	000000000000002b              Item_cache::~Item_cache()
00000000006980ea  w    F .text	000000000000011c              Table_triggers_list::Table_triggers_list(TABLE*)
00000000007d1dc4 g     F .text	00000000000003b1              Item_func_benchmark::val_int()
000000000073b82e  w    F .text	0000000000000165              set_var::set_var(enum_var_type, sys_var*, st_mysql_lex_string const*, Item*)
000000000079dc26 g     F .text	0000000000000105              get_mysql_time_from_str(THD*, String*, enum_mysql_timestamp_type, char const*, st_mysql_time*)
00000000007bb504  w    F .text	000000000000004a              Item_func_concat::Item_func_concat(List<Item>&)
000000000077b6f6  w    F .text	0000000000000045              Ha_trx_info::ht() const
000000000077be4e  w    F .text	000000000000000f              handler::max_supported_keys() const
00000000006f44ce g     F .text	000000000000018b              MDL_context::release_lock(enum_mdl_duration, MDL_ticket*)
00000000007f989e g     F .text	00000000000000a1              Item_in_subselect::print(String*, enum_query_type)
0000000000737f5e  w    F .text	000000000000005a              Item_sum_bit::Item_sum_bit(Item*, unsigned long long)
00000000005c7594 g     F .text	0000000000000063              select_dump::prepare(List<Item>&, st_select_lex_unit*)
000000000088451a g     F .text	0000000000000040              sp_head::add_cont_backpatch(sp_instr_opt_meta*)
00000000007d0d46 g     F .text	0000000000000068              udf_handler::~udf_handler()
000000000073a3e4  w    F .text	0000000000000038              Item_func_dayofmonth::Item_func_dayofmonth(Item*)
000000000077c0a2  w    F .text	000000000000000b              handler::release_auto_increment()
00000000007c242a  w    F .text	0000000000000041              Create_func_time_format::~Create_func_time_format()
00000000008c2818  w    F .text	000000000000006a              Item_func_xml_update::~Item_func_xml_update()
00000000007b1140  w    F .text	000000000000002b              Item_func_ifnull::~Item_func_ifnull()
000000000106c418  w    O .data.rel.ro	0000000000000028              vtable for Check_table_statement
000000000077ae24 g     F .text	0000000000000100              handler::ha_delete_row(unsigned char const*)
000000000069800a  w    F .text	0000000000000035              Object_creation_ctx::~Object_creation_ctx()
000000000098c387 g     F .text	00000000000003e2              myisammrg_attach_children_callback
00000000007aef7a  w    F .text	000000000000004b              in_string::value_to_item(unsigned int, Item*)
000000000080985c  w    F .text	0000000000000040              Item_sum_and::Item_sum_and(THD*, Item_sum_and*)
0000000000817db2  w    F .text	0000000000000046              Item_func_curdate_local::~Item_func_curdate_local()
0000000000567324  w    F .text	000000000000000f              Item_int::basic_const_item() const
0000000000839422 g     F .text	00000000000000de              Load_log_event::pack_info(Protocol*)
000000000060420e g     F .text	00000000000000b1              push_new_name_resolution_context(THD*, TABLE_LIST*, TABLE_LIST*)
000000000108ef40  w    O .data.rel.ro	0000000000000398              vtable for Item_udf_func
0000000000810fca g     F .text	00000000000000db              Item_date_add_interval::val_str_ascii(String*)
00000000007c1db8  w    F .text	0000000000000041              Create_func_sleep::~Create_func_sleep()
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
00000000009130aa g     F .text	0000000000000147              table_cond_instances::read_row_values(TABLE*, unsigned char*, Field**, bool)
00000000006dfa60  w    F .text	0000000000000026              MYSQL_BIN_LOG::~MYSQL_BIN_LOG()
00000000007ae9be  w    F .text	000000000000000f              Item_func_lt::eq_cmp_result() const
000000000059b0c0  w    F .text	0000000000000026              List_iterator<st_lex_user>::after(st_lex_user*)
00000000008c1d5e  w    F .text	000000000000000f              Item_nodeset_to_const_comparator::type() const
00000000007be1c6  w    F .text	000000000000002d              Create_func_conv::Create_func_conv()
00000000012c1080 g     O .data	0000000000001200              page033data
0000000000665c34 g     F .text	000000000000022b              make_db_list(THD*, List<st_mysql_lex_string>*, st_lookup_field_values*, bool*, st_mem_root*)
0000000000678ccc  w    F .text	0000000000000046              Item_blob::~Item_blob()
00000000007b3280 g     F .text	0000000000000055              Create_func_dayofweek::create(THD*, Item*)
00000000008844ae g     F .text	000000000000006b              sp_head::new_cont_backpatch(sp_instr_opt_meta*)
00000000005bf6a0  w    F .text	0000000000000042              Query_cache_wait_state::~Query_cache_wait_state()
00000000005670f4  w    F .text	0000000000000046              Item_basic_constant::~Item_basic_constant()
00000000007dacb2  w    F .text	000000000000000f              Item_func_rand::const_item() const
000000000075444c g     F .text	0000000000000199              Field_time::get_time(st_mysql_time*)
000000000080d4be g     F .text	000000000000011c              Item_func_period_add::val_int()
0000000001386790 g     O .bss	0000000000000008              Create_func_to_seconds::s_singleton
00000000007e5786 g     F .text	000000000000009b              Item_func_concat::fix_length_and_dec()
0000000000909610 g     F .text	000000000000015b              register_thread_class(char const*, unsigned int, int)
0000000000552e65 g     F .text	00000000000000bf              handle_connection_in_main_thread(THD*)
00000000007bd3e4  w    F .text	0000000000000041              Create_sp_func::~Create_sp_func()
0000000000753f10 g     F .text	00000000000000e1              Field_time::val_real()
000000000081799e  w    F .text	0000000000000046              Item_func_from_unixtime::~Item_func_from_unixtime()
00000000006eabc8  w    F .text	000000000000001c              PROFILING::next_profile_id()
00000000005c07bd g     F .text	0000000000000015              thd_get_psi(THD*)
0000000000565480  w    F .text	0000000000000038              Protocol_text::Protocol_text(THD*)
000000000060d374 g     F .text	0000000000000708              mysql_uninstall_plugin(THD*, st_mysql_lex_string const*)
000000000105dae0 g     O .data.rel.ro	0000000000000040              warning_level_names
000000000061c260  w    F .text	0000000000000026              I_List<Item_change_record>::move_elements_to(I_List<Item_change_record>*)
00000000008b86c3 g     F .text	00000000000002a1              get_part_iter_for_interval_cols_via_map(partition_info*, bool, unsigned int*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, st_partition_iter*)
0000000000b5b81a g     F .text	00000000000000aa              ha_tina::get_status()
0000000000b5b00e g     F .text	00000000000007a2              ha_tina::find_current_row(unsigned char*)
0000000000898dc9 g     F .text	0000000000000194              collect_decimal(unsigned char*, unsigned int, st_tree_info*)
00000000008997fc  w    F .text	0000000000000043              Item_proc_int::Item_proc_int(char const*)
000000000089bfe6  w    F .text	0000000000000059              Server_side_cursor::Server_side_cursor(st_mem_root*, select_result*)
00000000008b84f5 g     F .text	00000000000001ce              get_partition_id_cols_range_for_endpoint(partition_info*, bool, bool, unsigned int)
000000000075246c g     F .text	0000000000000055              Field_double::send_binary(Protocol*)
0000000000796b28  w    F .text	0000000000000047              Item_sp_variable::save_in_field(Field*, bool)
0000000000848b64  w    F .text	0000000000000016              sql_ex_info::force_new_format()
00000000012c91e0 g     O .data	00000000000000b0              my_charset_utf8_latvian_uca_ci
00000000008ff2f9 g     F .text	000000000000024b              thr_print_locks
000000000077c6fe  w    F .text	0000000000000041              Ha_delete_table_error_handler::~Ha_delete_table_error_handler()
00000000008fc80f g     F .text	00000000000000e0              process_alarm
0000000000612b6a  w    F .text	0000000000000032              sys_var_pluginvar::session_value_ptr(THD*, st_mysql_lex_string*)
0000000000b6fc06 g     F .text	000000000000042b              ha_partition::get_auto_increment(unsigned long long, unsigned long long, unsigned long long, unsigned long long*, unsigned long long*)
000000000138cc98 g     O .bss	0000000000000008              table_array
000000000080a0fc  w    F .text	0000000000000025              Item_func_group_concat::val_decimal(my_decimal*)
00000000008ca6da g     F .text	000000000000031c              Event_db_repository::check_system_tables(THD*)
0000000000658812  w    F .text	000000000000000b              Bitmap<64u>::init()
000000000106a6f8  w    O .data.rel.ro	0000000000000020              vtable for COND_CMP
00000000005af528  w    F .text	000000000000002d              Field_iterator::Field_iterator()
00000000010ef620 g     O .data	0000000000000010              table_file_instances::m_field_def
0000000001069af8  w    O .data.rel.ro	0000000000000020              vtable for Item_change_record
00000000007dad96  w    F .text	000000000000001e              Item_func_coercibility::fix_length_and_dec()
0000000001386528 g     O .bss	0000000000000008              Create_func_greatest::s_singleton
0000000000b84d1f g     F .text	0000000000000031              my_strtoll10_8bit
000000000073918a  w    F .text	000000000000004e              Item_func_opt_neg::Item_func_opt_neg(List<Item>&)
000000000080d8c6 g     F .text	00000000000000ec              Item_func_to_seconds::val_int()
00000000007390aa  w    F .text	0000000000000046              Item_func_isnotfalse::~Item_func_isnotfalse()
0000000000910052 g     F .text	000000000000007c              table_file_summary_by_event_name::rnd_next()
00000000007bd7fe  w    F .text	0000000000000041              Create_func_as_wkb::~Create_func_as_wkb()
00000000007aec30  w    F .text	0000000000000014              Item_func_coalesce::field_type() const
00000000013708dc g     O .bss	0000000000000004              key_file_pid
00000000008c2486  w    F .text	000000000000002b              Item_nodeset_to_const_comparator::~Item_nodeset_to_const_comparator()
000000000065bb22  w    F .text	0000000000000265              setup_without_group(THD*, Item**, TABLE_LIST*, TABLE_LIST*, List<Item>&, List<Item>&, Item**, st_order*, st_order*, bool*)
00000000007ae9f0  w    F .text	000000000000000f              Item_func_ne::eq_cmp_result() const
00000000006587be  w    F .text	0000000000000054              base_list::operator==(base_list const&) const
000000000088b02a  w    F .text	000000000000001a              sp_pcontext::max_cursor_index()
00000000012c8580 g     O .data	00000000000000b0              my_charset_ucs2_estonian_uca_ci
0000000000796192  w    F .text	0000000000000080              Field_time::Field_time(bool, char const*, charset_info_st*)
0000000000873df0  w    F .text	0000000000000025              List_iterator<QUICK_RANGE>::replace(QUICK_RANGE*)
000000000080942c  w    F .text	000000000000000f              Item_sum_std::result_type() const
00000000007ae8dc  w    F .text	0000000000000040              Item_func_le::Item_func_le(Item*, Item*)
00000000006c7524 g     F .text	00000000000000da              Event_queue_element_for_exec::init(st_mysql_lex_string, st_mysql_lex_string)
0000000000817fd2  w    F .text	000000000000002b              Item_func_year::~Item_func_year()
00000000010a02f8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_as_wkt
00000000005d09dc  w    F .text	000000000000001b              List<Alter_column>::List()
00000000005c8706 g     F .text	000000000000002b              Query_arena::type() const
00000000007386dc  w    F .text	0000000000000040              Item_func_mod::Item_func_mod(Item*, Item*)
000000000087d93e g     F .text	00000000000000bb              sp_update_sp_used_routines(st_hash*, st_hash*)
00000000010bca78  w    O .data.rel.ro	0000000000000398              vtable for Item_func_time_to_sec
00000000008109a0 g     F .text	0000000000000030              Item_func_convert_tz::fix_length_and_dec()
000000000082cc24  w    F .text	000000000000005a              Log_to_file_event_handler::Log_to_file_event_handler()
0000000000816c9c  w    F .text	0000000000000050              Item_time_typecast::val_decimal(my_decimal*)
0000000000871eae  w    F .text	000000000000000f              QUICK_SELECT_I::unique_key_range()
000000000067a450 g     F .text	0000000000000171              String::replace(unsigned int, unsigned int, char const*, unsigned int)
0000000000604b4e g     F .text	00000000000003d8              multi_update_precheck(THD*, TABLE_LIST*)
000000000088004e g     F .text	000000000000025b              sp_head::set_stmt_end(THD*)
00000000006770ce g     F .text	000000000000010e              finalize_schema_table(st_plugin_int*)
00000000007396f4  w    F .text	0000000000000052              Item_cond::add_at_head(Item*)
000000000082520a g     F .text	00000000000000d0              MYSQL_BIN_LOG::sync_purge_index_file()
000000000073c818  w    F .text	0000000000000038              Optimize_table_statement::Optimize_table_statement(LEX*)
00000000007ac5c8 g     F .text	0000000000000019              Item_func_not::neg_transformer(THD*)
00000000007bcd62  w    F .text	000000000000006d              Item_char_typecast::Item_char_typecast(Item*, int, charset_info_st*)
0000000001087c30  w    O .data.rel.ro	0000000000000030              vtable for Create_func_export_set
00000000005f136c  w    F .text	0000000000000012              Lex_input_stream::get_cpp_tok_start()
00000000007e1ae6  w    F .text	000000000000001e              Item_func_dimension::fix_length_and_dec()
00000000006f27ee g     F .text	0000000000000175              MDL_lock::can_grant_lock(enum_mdl_type, MDL_context*, bool) const
0000000000766254  w    F .text	000000000000007b              Field_date::Field_date(unsigned char*, unsigned char*, unsigned char, Field::utype, char const*, charset_info_st*)
00000000008731e4  w    F .text	000000000000001b              List<QUICK_SELECT_I>::~List()
00000000007f292a  w    F .text	000000000000002b              Item_func_uuid::~Item_func_uuid()
00000000007bd92a  w    F .text	0000000000000041              Create_func_asin::~Create_func_asin()
0000000000624201 g     F .text	0000000000000259              stop_slave(THD*, Master_info*, bool)
000000000070998a  w    F .text	0000000000000043              Sys_var_external_user::Sys_var_external_user(char const*, char const*, charset_enum)
000000000070a6ca  w    F .text	0000000000000088              Sys_var_max_user_conn::Sys_var_max_user_conn(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned int, unsigned int, unsigned int, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*)
00000000007a10b2 g     F .text	000000000000008f              Item_in_optimizer::cleanup()
000000000079ae9e  w    F .text	0000000000000041              Hybrid_type_traits_integer::~Hybrid_type_traits_integer()
00000000006bb232  w    F .text	0000000000000026              List_iterator<String>::init(List<String>&)
00000000007e1c9c  w    F .text	0000000000000058              Item_func_srid::~Item_func_srid()
00000000005f1a9c  w    F .text	000000000000001b              List<Create_field>::List()
00000000007e259a  w    F .text	000000000000002b              Item_func_envelope::~Item_func_envelope()
000000000137086c g     O .bss	0000000000000004              key_COND_thread_count
000000000070b86e  w    F .text	00000000000000f0              Sys_var_plugin::global_save_default(THD*, set_var*)
000000000085250a  w    F .text	0000000000000046              Write_rows_log_event_old::~Write_rows_log_event_old()
00000000007bfeec  w    F .text	0000000000000026              Create_func_is_used_lock::~Create_func_is_used_lock()
000000000074e636 g     F .text	00000000000001ad              Field_short::val_str(String*, String*)
00000000007c2f1e  w    F .text	000000000000002d              Create_func_xml_update::Create_func_xml_update()
00000000007dcf1c  w    F .text	0000000000000046              Item_func_sign::~Item_func_sign()
00000000007b01f8  w    F .text	0000000000000040              Item_cond_or::Item_cond_or(THD*, Item_cond_or*)
00000000009132c2  w    F .text	0000000000000041              table_cond_instances::~table_cond_instances()
000000000087362c  w    F .text	0000000000000046              TRP_INDEX_MERGE::~TRP_INDEX_MERGE()
00000000007aec20  w    F .text	000000000000000f              Item_func_coalesce::not_null_tables() const
00000000007e32d6  w    F .text	000000000000002a              Item_row::val_decimal(my_decimal*)
00000000009204d0 g     F .text	0000000000000122              ha_myisam::register_query_cache_table(THD*, char*, unsigned int, char (**)(THD*, char*, unsigned int, unsigned long long*), unsigned long long*)
00000000005bd9e6 g     F .text	0000000000000f39              Query_cache::check_integrity(bool)
00000000007b08a2  w    F .text	0000000000000046              Item_func_isnotnull::~Item_func_isnotnull()
00000000007bdf9c  w    F .text	0000000000000041              Create_func_concat::~Create_func_concat()
00000000005b0b40  w    F .text	000000000000003e              I_P_List<MDL_request, I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>, I_P_List_counter, I_P_List_no_push_back<MDL_request> >::I_P_List()
00000000010c4708  w    O .data.rel.ro	0000000000000050              vtable for Server_side_cursor
000000000089aa86  w    F .text	0000000000000011              field_ulonglong::collect_enum()
0000000000919002 g     F .text	00000000000000a3              ft_parse_init
00000000008f7116 g     F .text	0000000000000074              get_ptr_compare
0000000000607f5e  w    F .text	000000000000005f              SQL_I_List<TABLE_LIST>::SQL_I_List(SQL_I_List<TABLE_LIST> const&)
00000000010ba9e8  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_now_local
00000000007bfd50  w    F .text	000000000000002d              Create_func_intersects::Create_func_intersects()
00000000005b3980 g     F .text	000000000000026d              Query_cache::resize(unsigned long)
00000000005cea2e  w    F .text	000000000000003a              st_select_lex_node::~st_select_lex_node()
000000000082c460 g     F .text	000000000000006e              MYSQL_BIN_LOG::close()
0000000000000000       F *UND*	0000000000000000              pthread_exit@@GLIBC_2.2.5
00000000008d174e g     F .text	00000000000007b3              my_load_defaults
000000000108c7b8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_set_user_var
00000000005e8cfe  w    F .text	00000000000000a5              delayed_row::delayed_row(st_mysql_lex_string, enum_duplicates, bool, bool)
0000000000566f86  w    F .text	0000000000000012              Item::addr(unsigned int)
0000000000785a5c g     F .text	0000000000000046              Item_null::val_int()
00000000006f20a6 g     F .text	000000000000003f              MDL_ticket::create(MDL_context*, enum_mdl_type, enum_mdl_duration)
00000000005520f2 g     F .text	00000000000009bb              mysqld_main(int, char**)
00000000010aeb48  w    O .data.rel.ro	00000000000003a0              vtable for Item_in_subselect
0000000000909417 g     F .text	0000000000000058              find_rwlock_class(unsigned int)
000000000090e052  w    F .text	000000000000000b              PFS_atomic::rdlock(void volatile*)
00000000007adc94  w    F .text	0000000000000015              Item_sum_hybrid::any_value()
00000000007d71c6 g     F .text	0000000000000507              Item_func_match::init_search(bool)
00000000006b80ca g     F .text	000000000000008c              Natural_join_column::Natural_join_column(Item_field*, TABLE_LIST*)
0000000000798414  w    F .text	0000000000000087              Item_outer_ref::Item_outer_ref(Name_resolution_context*, Item**, char const*, char const*, bool)
000000000090ac88 g     F .text	00000000000000c0              PFS_engine_table::find_engine_table_share(char const*)
000000000075007a g     F .text	00000000000001db              Field_long::val_str(String*, String*)
00000000006e6536 g     F .text	000000000000030a              get_or_create_user_conn(THD*, char const*, char const*, user_resources const*)
000000000106cfa8  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_typelib
00000000005644e8 g     F .text	000000000000017c              Protocol_binary::store_decimal(my_decimal const*)
00000000012c5280 g     O .data	0000000000000600              page0FCdata
00000000006072be  w    F .text	0000000000000061              Query_arena::memdup_w_gap(void const*, unsigned long, unsigned int)
000000000059b7e0  w    F .text	0000000000000041              DML_prelocking_strategy::~DML_prelocking_strategy()
0000000000618dca g     F .text	000000000000005d              Prepared_statement::set_name(st_mysql_lex_string*)
00000000005ca38a g     F .text	00000000000002be              THD::reset_sub_statement_state(Sub_statement_state*, unsigned int)
0000000000678690  w    F .text	000000000000001b              List<st_foreign_key_info>::~List()
00000000006173b9 g     F .text	000000000000035b              mysqld_stmt_execute(THD*, char*, unsigned int)
00000000007aeba0  w    F .text	000000000000002c              Item_func_strcmp::fix_length_and_dec()
0000000000000000       F *UND*	0000000000000000              strcat@@GLIBC_2.2.5
00000000012c78a0 g     O .data	0000000000000800              uca_weight
000000000065c836  w    F .text	0000000000000026              List_iterator<Cached_item>::List_iterator(List<Cached_item>&)
0000000000910c98 g     F .text	0000000000000021              table_performance_timers::reset_position()
000000000073c5b0  w    F .text	000000000000001f              sp_pcontext::pop_case_expr_id()
0000000000b8350e g     F .text	0000000000000216              my_strntoll_8bit
00000000007be44c  w    F .text	0000000000000041              Create_func_crc32::~Create_func_crc32()
0000000000752bae g     F .text	0000000000000200              Field_timestamp::store(long long, bool)
0000000001370838 g     O .bss	0000000000000004              key_delayed_insert_cond_client
00000000005f4bd7 g     F .text	000000000000008e              cleanup_items(Item*)
000000000081637e  w    F .text	000000000000002b              Item_func_curtime::~Item_func_curtime()
000000000090c1e6  w    F .text	0000000000000041              PFS_editable_acl::~PFS_editable_acl()
000000000081006c g     F .text	000000000000016c              Item_func_date_format::fix_length_and_dec()
0000000000848460 g     F .text	000000000000012d              Incident_log_event::pack_info(Protocol*)
0000000000856fcc g     F .text	00000000000002e4              QUICK_RANGE_SELECT::QUICK_RANGE_SELECT(THD*, TABLE*, unsigned int, bool, st_mem_root*)
0000000000000000       F *UND*	0000000000000000              setgid@@GLIBC_2.2.5
000000000107d338  w    O .data.rel.ro	0000000000000358              vtable for Item
00000000007e2528  w    F .text	000000000000002b              Item_func_centroid::~Item_func_centroid()
0000000000799cf4  w    F .text	000000000000001b              List_iterator<Item>::List_iterator()
00000000007abc32 g     F .text	000000000000026d              Item_func_like::turboBM_compute_suffixes(int*)
0000000000000000       F *UND*	0000000000000000              umask@@GLIBC_2.2.5
00000000005f39ea g     F .text	0000000000000776              init_update_queries()
00000000005af329  w    F .text	0000000000000012              TABLE_share::prev_ptr(TABLE*)
0000000000607855  w    F .text	0000000000000073              all_tables_not_ok(THD*, TABLE_LIST*)
000000000087e75c  w    F .text	0000000000000044              Stored_routine_creation_ctx::Stored_routine_creation_ctx(THD*)
0000000000b7311a g     F .text	0000000000000363              my_lock
000000000080a94e  w    F .text	0000000000000046              Aggregator_simple::~Aggregator_simple()
000000000090db54 g     F .text	0000000000000010              table_events_waits_history::delete_all_rows()
00000000005afdaa  w    F .text	000000000000001b              Query_tables_list::mark_as_requiring_prelocking(TABLE_LIST**)
00000000005bfce2  w    F .text	0000000000000015              Query_cache::get_min_append_result_data_size()
00000000012b1280 g     O .data	0000000000000600              page006data
000000000106aca0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_rollup_const
0000000000750b40 g     F .text	0000000000000120              Field_longlong::val_str(String*, String*)
0000000000000000       F *UND*	0000000000000000              setsockopt@@GLIBC_2.2.5
000000000080fa36 g     F .text	0000000000000054              Item_func_now::get_date(st_mysql_time*, unsigned int)
00000000006114d3 g     F .text	0000000000000016              get_one_plugin_option
00000000005b1342  w    F .text	0000000000000041              No_such_table_error_handler::~No_such_table_error_handler()
0000000000566e52  w    F .text	0000000000000013              Item::is_expensive_processor(unsigned char*)
00000000007fc028 g     F .text	0000000000000055              subselect_union_engine::no_tables()
00000000007b69ec g     F .text	0000000000000050              Create_func_ucase::create(THD*, Item*)
00000000007bc764  w    F .text	000000000000004a              Item_func_area::Item_func_area(Item*)
000000000073aa08  w    F .text	000000000000002d              Item_func_curtime_utc::Item_func_curtime_utc()
000000000084b658  w    F .text	000000000000001b              Slave_reporting_capability::Error::Error()
000000000055cfce g     F .text	00000000000000e9              mysql_load_plugin
00000000007be320  w    F .text	0000000000000041              Create_func_cos::~Create_func_cos()
0000000001087120  w    O .data.rel.ro	0000000000000030              vtable for Create_func_period_diff
000000000084b6dc g     F .text	0000000000000996              Old_rows_log_event::do_apply_event(Old_rows_log_event*, Relay_log_info const*)
0000000000566fd8  w    F .text	0000000000000012              Item::update_value_transformer(unsigned char*)
00000000009131f2  w    F .text	0000000000000041              table_mutex_instances::~table_mutex_instances()
00000000007667a0  w    F .text	000000000000000f              Field_datetime::type() const
00000000005cffee  w    F .text	000000000000002e              List<Key>::List(List<Key> const&, st_mem_root*)
00000000007503f6 g     F .text	000000000000008d              Field_long::sort_string(unsigned char*, unsigned int)
0000000000748392 g     F .text	00000000000000bd              Field::field_type_merge(enum_field_types, enum_field_types)
00000000005d40e1 g     F .text	00000000000002eb              mysql_alter_db(THD*, char const*, st_ha_create_information*)
000000000073c508  w    F .text	0000000000000012              sp_pcontext::parent_context()
0000000000605e32 g     F .text	0000000000000030              get_current_user(THD*, st_lex_user*)
00000000008afd59 g     F .text	00000000000001e1              get_partition_id_cols_list_for_endpoint(partition_info*, bool, bool, unsigned int)
00000000006987ac  w    F .text	000000000000001f              Sub_statement_state::~Sub_statement_state()
00000000007dc112  w    F .text	0000000000000058              Item_func_is_used_lock::~Item_func_is_used_lock()
0000000000847c44 g     F .text	0000000000000075              Update_rows_log_event::Update_rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, st_bitmap const*, bool)
00000000007bc260  w    F .text	0000000000000038              Item_func_geometry_from_text::Item_func_geometry_from_text(Item*)
00000000007ae818  w    F .text	000000000000000f              Item_func_ge::functype() const
000000000090a56b g     F .text	0000000000000065              reset_file_class_io()
00000000005ce176  w    F .text	0000000000000083              Discrete_intervals_list::swap(Discrete_intervals_list*)
00000000007cc3dc g     F .text	0000000000000065              Item_func_rand::seed_random(Item*)
00000000006ca6d8 g     F .text	00000000000006ea              Event_job_data::execute(THD*, bool)
0000000000793ed4 g     F .text	00000000000000a3              Item_cache_decimal::val_int()
00000000007fd3e8 g     F .text	000000000000018d              Item_sum::Item_sum(List<Item>&)
0000000000772371 g     F .text	00000000000001b8              trans_register_ha(THD*, bool, handlerton*)
00000000007b1f66 g     F .text	000000000000025b              Create_sp_func::create(THD*, st_mysql_lex_string, st_mysql_lex_string, bool, List<Item>*)
000000000077c4d2  w    F .text	000000000000002d              Ha_delete_table_error_handler::Ha_delete_table_error_handler()
00000000007a6dc4 g     F .text	0000000000000050              in_double::set(unsigned int, Item*)
000000000087f46e g     F .text	0000000000000115              sp_name::sp_name(MDL_key const*, char*)
0000000000808ae0  w    F .text	0000000000000046              Item_sum_num::~Item_sum_num()
00000000007f276c  w    F .text	0000000000000011              Item_func_compress::func_name() const
000000000075e9e8 g     F .text	000000000000009f              Field_num::is_equal(Create_field*)
00000000007910a4 g     F .text	000000000000028a              Item_default_value::fix_fields(THD*, Item**)
000000000056a364 g     F .text	000000000000004e              mysql_del_sys_var_chain(sys_var*)
00000000006e79e9 g     F .text	0000000000000091              setup_connection_thread_globals(THD*)
00000000007f25a8  w    F .text	0000000000000011              Item_func_set_collation::func_name() const
0000000000809638  w    F .text	0000000000000011              Item_sum_min::func_name() const
000000000065989e  w    F .text	000000000000005e              Item_direct_ref::Item_direct_ref(Name_resolution_context*, Item**, char const*, char const*, bool)
0000000000791cea g     F .text	00000000000000f6              Item_trigger_field::set_value(THD*, sp_rcontext*, Item**)
0000000000816328  w    F .text	000000000000000f              Item_func_curtime::result_as_longlong()
0000000001214820 g     O .data	0000000000000100              to_lower_macroman_bin
00000000008cdbd2 g     F .text	0000000000000036              init_dynamic_array
0000000000876d12  w    F .text	0000000000000046              Item_proc::~Item_proc()
0000000000602eca g     F .text	0000000000000093              add_proc_to_list(THD*, Item*)
0000000000b99913 g     F .text	0000000000000096              decimal_is_zero
00000000010cd9e0 g     O .data	0000000000000028              load_default_groups
00000000007dc7a8  w    F .text	0000000000000058              Item_func_get_lock::~Item_func_get_lock()
0000000000796cd4  w    F .text	0000000000000013              Item_name_const::cache_const_expr_analyzer(unsigned char**)
0000000000559666  w    F .text	000000000000001b              List<Buffered_log>::~List()
0000000000765624  w    F .text	0000000000000037              Field_short::pack(unsigned char*, unsigned char const*, unsigned int, bool)
0000000000000000       F *UND*	0000000000000000              pwrite64@@GLIBC_2.2.5
00000000007befb0  w    F .text	0000000000000026              Create_func_equals::~Create_func_equals()
00000000005f0d30  w    F .text	0000000000000017              st_select_lex::cut_subtree()
00000000007b012e  w    F .text	000000000000000f              Item_cond_and::functype() const
0000000000935757 g     F .text	000000000000088a              _mi_print_key
000000000054bec4 g     F .text	0000000000000025              Buffered_logs::init()
000000000073a0fc  w    F .text	0000000000000052              Item_func_repeat::Item_func_repeat(Item*, Item*)
0000000000606fdc  w    F .text	0000000000000052              Item_cond_and::Item_cond_and(Item*, Item*)
00000000007db718  w    F .text	000000000000000f              Item_func_get_system_var::const_item() const
00000000007c1e4e  w    F .text	0000000000000041              Create_func_soundex::~Create_func_soundex()
000000000056679c  w    F .text	000000000000000f              Item::result_type() const
000000000092947f g     F .text	00000000000000a3              lock_file
0000000000797538  w    F .text	000000000000000f              Item_float::basic_const_item() const
0000000000598e62  w    F .text	0000000000000029              Internal_error_handler::Internal_error_handler()
00000000008866d4 g     F .text	00000000000000a6              sp_instr_jump::execute(THD*, unsigned int*)
00000000010d2658 g     O .data	0000000000000002              internal_table_name
00000000010c24d0  w    O .data.rel.ro	00000000000000a0              vtable for QUICK_RANGE_SELECT
00000000009084fe  w    F .text	000000000000001a              PFS_scan::first() const
000000000138cfb0 g     O .bss	0000000000000008              pfs_truncatable_acl
000000000055c288  w    F .text	000000000000001d              I_List_iterator<NAMED_ILINK>::operator++(int)
00000000008158ac  w    F .text	0000000000000011              Item_func_dayofmonth::func_name() const
000000000078d2f8 g     F .text	0000000000000063              Item_uint::neg()
00000000007afa08  w    F .text	0000000000000011              Item_func_case::func_name() const
000000000079775c  w    F .text	000000000000006e              Item_hex_string::val_real()
00000000007dbc06  w    F .text	0000000000000022              Item_func_sp::change_context_processor(unsigned char*)
000000000065c618  w    F .text	0000000000000025              List<Item_equal>::push_back(Item_equal*)
0000000000616dfb g     F .text	0000000000000561              reinit_stmt_before_use(THD*, LEX*)
00000000007651e0  w    F .text	0000000000000089              Field_decimal::Field_decimal(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
00000000007e48ea g     F .text	00000000000001b4              Item_func_sha2::fix_length_and_dec()
0000000000920616  w    F .text	0000000000000046              ha_myisam::~ha_myisam()
00000000007ba392  w    F .text	0000000000000038              Item_func_int_val::Item_func_int_val(Item*)
0000000001087b40  w    O .data.rel.ro	0000000000000030              vtable for Create_func_format
00000000005eebec g     F .text	000000000000011a              st_select_lex::print_order(String*, st_order*, enum_query_type)
000000000136cbc0 g     O .bss	0000000000000010              opt_init_connect
00000000005d64d0 g     F .text	0000000000000083              mysql_opt_change_db(THD*, st_mysql_lex_string const*, st_mysql_lex_string*, bool, bool*)
0000000000ba5c81 g     F .text	0000000000000059              vio_delete
00000000007dd2ac  w    F .text	0000000000000046              Item_func_cot::~Item_func_cot()
0000000001376500 g     O .bss	0000000000000060              my_locale_it_IT
00000000005c0dfa g     F .text	000000000000002d              thd_ha_data
00000000005d0ca2  w    F .text	0000000000000025              List_iterator<Alter_column>::replace(List<Alter_column>&)
00000000005982aa  w    F .text	000000000000002f              base_list::head_ref()
0000000000764107  w    F .text	000000000000000f              Field::operator delete(void*, unsigned long)
000000000065a2da  w    F .text	000000000000001b              List<Item_equal>::~List()
00000000008e0c17 g     F .text	0000000000000632              key_cache_insert
000000000074b370 g     F .text	0000000000000233              Field_decimal::store(long long, bool)
00000000010c1d50  w    O .data.rel.ro	00000000000000b8              vtable for Delete_rows_log_event_old
000000000136e460 g     O .bss	0000000000000004              bootstrap_error
00000000007bc3c0  w    F .text	0000000000000038              Item_func_geometry_type::Item_func_geometry_type(Item*)
00000000005dc9cc  w    F .text	0000000000000a31              TABLE_LIST::operator=(TABLE_LIST const&)
000000000067a680 g     F .text	0000000000000063              String::qs_append(double)
0000000000886624 g     F .text	000000000000009d              sp_instr_set_trigger_field::print(String*)
000000000136fe78 g     O .bss	0000000000000008              opt_ssl_ca
00000000008e8e60 g     F .text	000000000000019e              my_aes_encrypt
000000000077c2c4  w    F .text	0000000000000023              handler::change_partitions(st_ha_create_information*, char const*, unsigned long long*, unsigned long long*, unsigned char const*, unsigned long)
000000000098e2ae g     F .text	0000000000000120              ha_myisammrg::extra(ha_extra_function)
00000000005ea510 g     F .text	000000000000002a              Lex_input_stream::body_utf8_append(char const*)
00000000010c3720  w    O .data.rel.ro	0000000000000078              vtable for sp_instr_hreturn
00000000006f53a6  w    F .text	000000000000002d              MDL_context::lock_deadlock_victim()
00000000005e5656 g     F .text	00000000000009ad              select_insert::prepare(List<Item>&, st_select_lex_unit*)
0000000000607630  w    F .text	0000000000000015              Log_event::set_direct_logging()
00000000010a51c8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_conv
00000000010f0fa8 g     O .data	0000000000000004              builtin_myisam_sizeof_struct_st_plugin
0000000000738920  w    F .text	0000000000000040              Item_func_bit_or::Item_func_bit_or(Item*, Item*)
00000000007e1504  w    F .text	000000000000000f              Item_geometry_func::field_type() const
00000000007bf388  w    F .text	0000000000000041              Create_func_format::~Create_func_format()
00000000007968e8  w    F .text	000000000000000f              Item::used_tables() const
000000000090f5ee g     F .text	0000000000000037              table_ews_global_by_event_name::table_ews_global_by_event_name()
000000000082d5f2  w    F .text	0000000000000035              Silence_log_table_errors::Silence_log_table_errors()
00000000005d1be2  w    F .text	0000000000000046              Item_change_record::~Item_change_record()
0000000000709b5c  w    F .text	0000000000000058              Sys_var_lexstring::global_update(THD*, set_var*)
0000000000000000       F *UND*	0000000000000000              getpagesize@@GLIBC_2.2.5
00000000005f1688  w    F .text	0000000000000012              Mem_root_array<st_order*, true>::begin()
000000000054f8e9 g     F .text	0000000000000070              check_enough_stack_size
0000000000899840  w    F .text	0000000000000045              Item_proc_string::Item_proc_string(char const*, unsigned int)
00000000007b9f78  w    F .text	0000000000000040              Item_dec_func::Item_dec_func(Item*, Item*)
0000000000812072 g     F .text	00000000000005db              Item_char_typecast::val_str(String*)
00000000005d0c5e  w    F .text	000000000000001d              List_iterator<Alter_column>::operator++(int)
00000000006d7fce  w    F .text	000000000000000b              injector::~injector()
000000000070ca8e  w    F .text	00000000000000d6              Sys_var_tz::Sys_var_tz(char const*, char const*, int, long, unsigned long, CMD_LINE, Time_zone**, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000005d1a1a  w    F .text	0000000000000046              select_max_min_finder_subselect::~select_max_min_finder_subselect()
0000000000802a72 g     F .text	0000000000000050              Item_sum_or::copy_or_same(THD*)
00000000007e02c4 g     F .text	000000000000011e              Item_func_numinteriorring::val_int()
0000000000c00bb0 g     F .text	0000000000000002              __libc_csu_fini
000000000073a00c  w    F .text	000000000000004a              Item_func_soundex::Item_func_soundex(Item*)
0000000000988d9d g     F .text	00000000000000b0              hp_rectest
0000000000849578  w    F .text	0000000000000038              Execute_load_query_log_event::is_valid() const
00000000008c7356 g     F .text	00000000000000d4              Event_queue::unlock_data(char const*, unsigned int)
0000000001090868  w    O .data.rel.ro	0000000000000398              vtable for Item_func_coercibility
0000000000659c84  w    F .text	0000000000000011              Item_func_rollup_const::func_name() const
0000000000886f6e g     F .text	0000000000000156              sp_instr_hpush_jump::print(String*)
00000000005c9cd2 g     F .text	0000000000000048              Security_context::set_host(char const*, unsigned long)
0000000000765e3a  w    F .text	0000000000000022              Field_null::store(long long, bool)
00000000007c0bf6  w    F .text	000000000000002d              Create_func_master_pos_wait::Create_func_master_pos_wait()
00000000006027b6 g     F .text	000000000000019a              mysql_test_parse_for_slave(THD*, char*, unsigned int)
0000000000905ad8  w    F .text	0000000000000012              ha_perfschema::scan_time()
00000000008fff21 g     F .text	000000000000007b              rw_pr_init
00000000005cfa88  w    F .text	0000000000000122              THD::reset_current_stmt_binlog_format_row()
00000000007cde00 g     F .text	000000000000010d              Item_func_locate::print(String*, enum_query_type)
00000000007be578  w    F .text	0000000000000041              Create_func_date_format::~Create_func_date_format()
00000000007baa32  w    F .text	000000000000004a              Item_func_ord::Item_func_ord(Item*)
00000000007dc5a2  w    F .text	000000000000002b              Item_func_set_user_var::~Item_func_set_user_var()
000000000061b392 g     F .text	0000000000000090              Protocol_local::prepare_for_resend()
000000000079a876  w    F .text	000000000000002b              Item_copy_float::~Item_copy_float()
00000000006cefba g     F .text	00000000000001f6              partition_info::has_unique_name(partition_element*)
00000000008661e8 g     F .text	00000000000001b6              SEL_ARG::insert(SEL_ARG*)
0000000000889acc  w    F .text	000000000000001b              List<LEX>::~List()
00000000005ad7e5 g     F .text	0000000000000198              fill_record(THD*, Field**, List<Item>&, bool)
0000000000599982  w    F .text	0000000000000116              ACL_PROXY_USER::init(st_mem_root*, char const*, char const*, char const*, char const*, bool)
000000000077c59d  w    F .text	00000000000000b8              prev_insert_id(unsigned long long, system_variables*)
00000000007dc884  w    F .text	000000000000002b              Item_master_pos_wait::~Item_master_pos_wait()
0000000000816c06  w    F .text	0000000000000011              Item_time_typecast::cast_type() const
00000000005d0554  w    F .text	000000000000001b              List_iterator<Key_part_spec>::List_iterator()
000000000070e47c  w    F .text	0000000000000014              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)4>::check_update_type(Item_result)
0000000001386350 g     O .bss	0000000000000008              Create_func_aes_decrypt::s_singleton
0000000000566620  w    F .text	000000000000002e              Protocol::store(unsigned int)
0000000000871d06  w    F .text	0000000000000075              QUICK_RANGE::make_min_endpoint(st_key_range*)
00000000007c1cce  w    F .text	0000000000000026              Create_func_sign::~Create_func_sign()
0000000000b94519 g     F .text	00000000000000fb              my_parse_charset_xml
00000000006bad2a  w    F .text	0000000000000052              Item_direct_ref::Item_direct_ref(TABLE_LIST*, Item**, char const*, bool)
00000000006e90bc g     F .text	000000000000007e              QUERY_PROFILE::set_query_source(char*, unsigned int)
0000000000767f32  w    F .text	0000000000000046              Field_string::~Field_string()
000000000106bf58  w    O .data.rel.ro	0000000000000038              vtable for Time_zone_utc
0000000000000000       F *UND*	0000000000000000              strtok_r@@GLIBC_2.2.5
000000000090836c  w    F .text	0000000000000055              pfs_lock::free_to_dirty()
000000000074f3bc g     F .text	0000000000000233              Field_medium::val_str(String*, String*)
0000000000b843c4 g     F .text	0000000000000043              my_well_formed_len_8bit
00000000010f1850 g     O .data	0000000000000004              builtin_heap_sizeof_struct_st_plugin
0000000001370784 g     O .bss	0000000000000004              key_LOCK_global_system_variables
000000000096b7e6 g     F .text	0000000000001fb6              rtree_combine_rect
0000000000627052 g     F .text	000000000000022a              handle_select(THD*, LEX*, select_result*, unsigned long)
00000000008265b0 g     F .text	00000000000001b7              MYSQL_BIN_LOG::append(Log_event*)
000000000070b3e0  w    F .text	0000000000000045              Sys_var_set::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000008d0d37 g     F .text	0000000000000018              my_getopt_is_args_separator
00000000007afc5a  w    F .text	0000000000000011              Item_func_isnull::func_name() const
00000000005ced06  w    F .text	000000000000009f              Query_tables_list::stmt_accessed_table_string(Query_tables_list::enum_stmt_accessed_table)
00000000010f0fc0 g     O .data	0000000000000030              myisam_recover_names
00000000010ea680 g     O .data	0000000000000378              my_locales
000000000094f9b3 g     F .text	00000000000001ff              mi_keyseg_read
00000000007e0994 g     F .text	0000000000000120              Item_func_glength::val_real()
00000000006f5508  w    F .text	00000000000000c0              MDL_lock::MDL_lock(MDL_key const*)
00000000007cb4fa g     F .text	00000000000000e6              Item_func_ceiling::decimal_op(my_decimal*)
00000000013724c0 g     O .bss	0000000000000058              xid_cache
00000000007da6dc  w    F .text	0000000000000046              Item_num_op::~Item_num_op()
00000000006e5a85 g     F .text	0000000000000106              mysql_audit_acquire_plugins(THD*, unsigned int)
00000000007e2470  w    F .text	0000000000000046              Item_func_spatial_decomp::~Item_func_spatial_decomp()
00000000007bf6de  w    F .text	000000000000002d              Create_func_geometry_type::Create_func_geometry_type()
000000000073aa92  w    F .text	000000000000002d              Item_func_curdate_utc::Item_func_curdate_utc()
00000000007f24ae  w    F .text	0000000000000011              Item_func_export_set::func_name() const
0000000000b5c74c g     F .text	0000000000000095              ha_tina::info(unsigned int)
0000000000b690ca g     F .text	0000000000000159              ha_partition::position(unsigned char const*)
000000000056794e  w    F .text	0000000000000014              Item_return_int::field_type() const
000000000137079c g     O .bss	0000000000000004              key_LOCK_system_variables_hash
00000000006b804c g     F .text	000000000000007d              Natural_join_column::Natural_join_column(Field_translator*, TABLE_LIST*)
00000000012138c0 g     O .data	0000000000000200              to_uni_cp1251_bin
00000000006bd0af g     F .text	000000000000005f              make_time(st_date_time_format const*, st_mysql_time const*, String*)
000000000059b35c  w    F .text	000000000000002e              List<st_lex_user>::List(List<st_lex_user> const&, st_mem_root*)
0000000000792863 g     F .text	0000000000000468              stored_field_cmp_to_item(THD*, Field*, Item*)
00000000005cfe14  w    F .text	0000000000000056              select_dumpvar::~select_dumpvar()
00000000007c213c  w    F .text	0000000000000041              Create_func_str_to_date::~Create_func_str_to_date()
0000000000774230 g     F .text	000000000000029b              ha_rollback_to_savepoint(THD*, st_savepoint*)
0000000001087180  w    O .data.rel.ro	0000000000000030              vtable for Create_func_overlaps
00000000008a0695 g     F .text	0000000000000175              send_header_2(Protocol*, bool)
00000000008aa114 g     F .text	0000000000000177              get_parts_for_update(unsigned char const*, unsigned char*, unsigned char const*, partition_info*, unsigned int*, unsigned int*, long long*)
00000000007583d2 g     F .text	000000000000026e              Field_string::val_int()
000000000082d066  w    F .text	0000000000000059              Format_description_log_event::~Format_description_log_event()
00000000008e7873 g     F .text	00000000000000b7              my_string_ptr_sort
00000000007c07b6  w    F .text	0000000000000026              Create_func_log::~Create_func_log()
0000000000918318  w    F .text	0000000000000031              pos_all_instr_class::pos_all_instr_class()
000000000055d0b7 g     F .text	00000000000001b8              mysql_client_find_plugin
00000000005d9754 g     F .text	0000000000000186              err_conv(char*, unsigned int, char const*, unsigned int, charset_info_st*)
000000000055fabc g     F .text	00000000000000a2              File_parser_dummy_hook::process_unknown_string(char*&, unsigned char*, st_mem_root*, char*)
00000000008c143e  w    F .text	0000000000000011              Item_nodeset_func_parentbyname::func_name() const
000000000106c558  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>
00000000007be524  w    F .text	0000000000000026              Create_func_crosses::~Create_func_crosses()
000000000075e92a g     F .text	00000000000000bd              Field_num::eq_def(Field*)
00000000007dd720  w    F .text	0000000000000046              Item_func_log10::~Item_func_log10()
000000000088e854 g     F .text	000000000000006c              Gis_line_string::num_points(unsigned int*) const
0000000000b5c148 g     F .text	0000000000000191              ha_tina::delete_row(unsigned char const*)
00000000010dfee0 g     O .data	00000000000001e0              plugin_fields_info
00000000010eee88 g     O .data	0000000000000008              max_write_lock_count
00000000005d0314  w    F .text	000000000000001b              List<Key_part_spec>::List()
000000000079a656  w    F .text	0000000000000046              Item_int_with_ref::~Item_int_with_ref()
0000000000b5d880 g     F .text	0000000000000054              ha_tina::store_lock(THD*, st_thr_lock_data**, thr_lock_type)
00000000007a9586 g     F .text	00000000000000d6              Item_cond::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
0000000000889476  w    F .text	0000000000000066              sp_instr_hpush_jump::~sp_instr_hpush_jump()
00000000012bd880 g     O .data	0000000000000a00              page02Adata
00000000007be8ce  w    F .text	000000000000002d              Create_func_decode::Create_func_decode()
00000000010cb9e8  w    O .data.rel.ro	0000000000000020              vtable for handler_add_index
00000000007d0e26 g     F .text	000000000000007c              item_user_lock_init()
00000000007b0b60  w    F .text	0000000000000046              Item_func_in::~Item_func_in()
000000000083be28 g     F .text	0000000000000118              Intvar_log_event::write(st_io_cache*)
00000000008862c8 g     F .text	00000000000000b8              sp_instr_set::execute(THD*, unsigned int*)
00000000008095bc  w    F .text	000000000000002b              Item_sum_hybrid::~Item_sum_hybrid()
00000000007c08a0  w    F .text	0000000000000041              Create_func_log2::~Create_func_log2()
000000000080989c  w    F .text	0000000000000011              Item_sum_and::func_name() const
00000000005b120a  w    F .text	0000000000000041              Lock_tables_prelocking_strategy::~Lock_tables_prelocking_strategy()
0000000001214200 g     O .data	0000000000000100              to_lower_cp1251_general_cs
000000000088c76a g     F .text	0000000000000047              sp_cursor::destroy()
00000000007b4f90 g     F .text	0000000000000149              Create_func_locate::create_native(THD*, st_mysql_lex_string, List<Item>*)
00000000007bf936  w    F .text	000000000000002d              Create_func_greatest::Create_func_greatest()
000000000079b3f0 g     F .text	0000000000000072              Cached_item_str::~Cached_item_str()
00000000005d866e g     F .text	00000000000000e5              MYSQL_ERROR::set(unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*)
0000000000889f56  w    F .text	000000000000001d              List_iterator_fast<sp_variable>::operator++(int)
0000000000858e40 g     F .text	00000000000002aa              SEL_ARG::clone(RANGE_OPT_PARAM*, SEL_ARG*, SEL_ARG**)
00000000007b36d6 g     F .text	0000000000000098              Create_func_elt::create_native(THD*, st_mysql_lex_string, List<Item>*)
0000000000752b10 g     F .text	000000000000009d              Field_timestamp::store(double)
00000000010efe80 g     O .data	0000000000001100              ft_precompiled_stopwords
0000000000770dcf g     F .text	000000000000007d              ha_default_handlerton(THD*)
000000000059a4a2  w    F .text	00000000000002c3              ACL_PROXY_USER::store_pk(TABLE*, st_mysql_lex_string const*, st_mysql_lex_string const*, st_mysql_lex_string const*, st_mysql_lex_string const*)
00000000005cfc9c  w    F .text	000000000000002d              select_result_interceptor::select_result_interceptor()
0000000000797baa  w    F .text	000000000000001e              Item_ref::set_result_field(Field*)
0000000000817f8c  w    F .text	0000000000000046              Item_func_year::~Item_func_year()
00000000006d7e42  w    F .text	00000000000000bc              injector::transaction::swap(injector::transaction&)
0000000000816c28  w    F .text	0000000000000011              Item_time_typecast::charset_for_protocol() const
00000000007c2214  w    F .text	0000000000000026              Create_func_strcmp::~Create_func_strcmp()
000000000074a37c g     F .text	0000000000000125              Field_decimal::overflow(bool)
0000000000559a20  w    F .text	000000000000001a              I_List<i_string_pair>::head()
000000000067d655 g     F .text	00000000000002de              build_table_filename(char*, unsigned long, char const*, char const*, char const*, unsigned int)
00000000007ae590  w    F .text	0000000000000046              Item_func_not::~Item_func_not()
0000000000988ef0 g     F .text	0000000000000270              hp_get_new_block
00000000005b05e2  w    F .text	0000000000000033              sp_head::name(unsigned int*) const
00000000005f0d48  w    F .text	000000000000012e              st_select_lex::st_select_lex()
00000000005d9ce0  w    F .text	000000000000002d              List<MYSQL_ERROR>::push_back(MYSQL_ERROR*, st_mem_root*)
0000000001376990 g     O .bss	0000000000000008              binlog_transmit_delegate
00000000007c529e g     F .text	000000000000000b              Item_func_numhybrid::fix_num_length_and_dec()
00000000008731c8  w    F .text	000000000000001b              List<QUICK_RANGE_SELECT>::~List()
0000000000000000       F *UND*	0000000000000000              pthread_mutexattr_settype@@GLIBC_2.2.5
000000000136cd70 g     O .bss	0000000000000001              global_query_id_lock
000000000080a2a0  w    F .text	0000000000000046              Item_variance_field::~Item_variance_field()
00000000007bf06c  w    F .text	000000000000002d              Create_func_export_set::Create_func_export_set()
000000000073a796  w    F .text	000000000000002d              Item_str_timefunc::Item_str_timefunc()
0000000001372ee0 g     O .bss	0000000000000008              max_stack_used
00000000006f4c84 g     F .text	0000000000000107              MDL_context::has_lock(MDL_savepoint const&, MDL_ticket*)
0000000000871bf2  w    F .text	00000000000000b0              QUICK_RANGE::QUICK_RANGE(unsigned char const*, unsigned int, unsigned long, unsigned char const*, unsigned int, unsigned long, unsigned int)
00000000007b0f20  w    F .text	0000000000000046              in_datetime::~in_datetime()
000000000098ef50  w    F .text	0000000000000052              ha_myisammrg::index_flags(unsigned int, unsigned int, bool) const
0000000001072a08  w    O .data.rel.ro	0000000000000290              vtable for Field_short
000000000061a4c6 g     F .text	00000000000006c5              Prepared_statement::execute(String*, bool)
000000000061c0be  w    F .text	0000000000000026              Protocol_local::~Protocol_local()
0000000000559629  w    F .text	0000000000000011              setup_fpu
000000000069882c  w    F .text	000000000000001b              List_iterator<st_mysql_lex_string>::remove()
000000000079303e g     F .text	000000000000004b              Item_cache_int::store(Item*, long long)
00000000008fd2d8 g     F .text	0000000000000025              thr_set_lock_wait_callback
000000000120b100 g     O .data	0000000000000100              to_lower_hebrew_general_ci
0000000000798abe  w    F .text	0000000000000038              Item_copy_string::Item_copy_string(Item*)
0000000001386378 g     O .bss	0000000000000008              Create_func_atan::s_singleton
000000000079688c  w    F .text	0000000000000035              Settable_routine_parameter::~Settable_routine_parameter()
000000000109f830  w    O .data.rel.ro	0000000000000398              vtable for Item_func_envelope
000000000076527a  w    F .text	0000000000000022              Field_decimal::key_type() const
000000000080540c g     F .text	000000000000014d              Item_variance_field::Item_variance_field(Item_sum_variance*)
0000000000930694 g     F .text	0000000000000a6c              recreate_table
0000000001395670 g     O .bss	0000000000000004              my_errorcheck_mutexattr
00000000007658a2  w    F .text	000000000000000f              Field_long::result_type() const
000000000074f8cc g     F .text	00000000000000a6              Field_medium::sql_type(String&) const
00000000008481bc g     F .text	00000000000001db              Incident_log_event::Incident_log_event(char const*, unsigned int, Format_description_log_event const*)
000000000090e332  w    F .text	0000000000000041              table_events_waits_history_long::~table_events_waits_history_long()
00000000007c29b2  w    F .text	0000000000000026              Create_func_unhex::~Create_func_unhex()
000000000079bbda  w    F .text	000000000000001a              List_iterator<Cached_item>::ref()
00000000007b0f20  w    F .text	0000000000000046              in_datetime::~in_datetime()
0000000000799a72  w    F .text	000000000000002b              Item_sp_variable::~Item_sp_variable()
0000000000763ab0 g     F .text	00000000000000a0              Field_blob::max_display_length()
00000000006f61e8  w    F .text	0000000000000041              Deadlock_detection_visitor::~Deadlock_detection_visitor()
0000000000908acd g     F .text	0000000000000035              cleanup_table_share()
0000000000692b1d g     F .text	0000000000000888              mysql_create_or_drop_trigger(THD*, TABLE_LIST*, bool)
00000000007dd390  w    F .text	0000000000000046              Item_func_sin::~Item_func_sin()
0000000000598a4a  w    F .text	000000000000001d              Table_check_intact::Table_check_intact()
00000000005642f6 g     F .text	0000000000000076              Protocol_binary::store_short(long long)
000000000079a278  w    F .text	0000000000000046              Item_cache_real::~Item_cache_real()
00000000007bedac  w    F .text	0000000000000041              Create_func_encrypt::~Create_func_encrypt()
0000000000899a26  w    F .text	0000000000000056              field_info::~field_info()
00000000007e1aae  w    F .text	0000000000000011              Item_func_isclosed::func_name() const
000000000073c818  w    F .text	0000000000000038              Optimize_table_statement::Optimize_table_statement(LEX*)
0000000000677f50  w    F .text	0000000000000011              Item_return_date_time::field_type() const
00000000005e8a28  w    F .text	000000000000000b              Name_resolution_context_state::Name_resolution_context_state()
000000000087382c  w    F .text	0000000000000016              TRP_GROUP_MIN_MAX::use_index_scan()
000000000070e68e  w    F .text	0000000000000026              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::~Sys_var_unsigned()
00000000007bb8d0  w    F .text	000000000000005e              Item_func_encrypt::Item_func_encrypt(Item*, Item*)
000000000070da7a  w    F .text	0000000000000035              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::global_update(THD*, set_var*)
000000000054bde8 g     F .text	0000000000000069              Buffered_log::Buffered_log(loglevel, char const*)
0000000001387ee0 g     O .bss	0000000000000008              Event_worker_thread::db_repository
00000000007c50fc g     F .text	0000000000000094              Item_real_func::val_decimal(my_decimal*)
0000000000751034 g     F .text	0000000000000090              Field_real::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000010f1000 g     O .data	0000000000000020              myisam_stats_method_names
00000000007c1bf6  w    F .text	0000000000000041              Create_func_sha2::~Create_func_sha2()
0000000000709252  w    F .text	0000000000000049              Sys_var_charptr::cleanup()
0000000000889508  w    F .text	0000000000000019              sp_instr_hpush_jump::opt_shortcut_jump(sp_head*, sp_instr*)
0000000000737f20  w    F .text	000000000000003d              Item_sum_max::Item_sum_max(Item*)
00000000007f2ab6  w    F .text	000000000000002b              Item_func_crc32::~Item_func_crc32()
000000000056a523 g     F .text	0000000000000046              intern_find_sys_var(char const*, unsigned int)
000000000136f028 g     O .bss	0000000000000004              THR_THD
0000000000764fe0  w    F .text	000000000000000f              Field_str::str_needs_quotes()
000000000120c860 g     O .data	0000000000000101              ctype_cp1251_ukrainian_ci
00000000007ba4f2  w    F .text	0000000000000077              Item_func_units::Item_func_units(char*, Item*, double, double)
00000000007ddcfc  w    F .text	0000000000000046              Item_func_unsigned::~Item_func_unsigned()
0000000000767fa4  w    F .text	0000000000000046              Field_datetime::~Field_datetime()
00000000005c96a8 g     F .text	0000000000000133              TMP_TABLE_PARAM::init()
000000000059e6e0 g     F .text	0000000000000354              close_thread_tables(THD*)
000000000136e340 g     O .bss	0000000000000020              global_time_format
0000000000b8153c g     F .text	00000000000003b1              my_like_range_mb
000000000079a8a2  w    F .text	0000000000000046              Item_copy_uint::~Item_copy_uint()
000000000074d24a g     F .text	00000000000000b7              Field_new_decimal::sql_type(String&) const
00000000007ea924 g     F .text	000000000000012a              Item_func_encode::seed()
0000000000871e7c  w    F .text	0000000000000026              QUICK_SELECT_I::~QUICK_SELECT_I()
000000000059c1c5 g     F .text	000000000000009a              table_def_free()
00000000006a077d g     F .text	00000000000002d4              mysql_prepare_update(THD*, TABLE_LIST*, Item**, unsigned int, st_order*)
0000000000805c80 g     F .text	0000000000000050              Item_sum_udf_decimal::copy_or_same(THD*)
00000000006f55c8  w    F .text	0000000000000047              MDL_lock::~MDL_lock()
000000000082d66a  w    F .text	0000000000000026              Silence_log_table_errors::~Silence_log_table_errors()
00000000007c25ec  w    F .text	0000000000000041              Create_func_to_days::~Create_func_to_days()
0000000000737bdc  w    F .text	0000000000000038              Item_sum_int::Item_sum_int(List<Item>&)
000000000056ae24 g     F .text	0000000000000090              set_var_collation_client::update(THD*)
000000000090bf9a  w    F .text	0000000000000035              ACL_internal_table_access::~ACL_internal_table_access()
00000000007b6734 g     F .text	0000000000000063              Create_func_subtime::create(THD*, Item*, Item*)
00000000007bfc52  w    F .text	0000000000000041              Create_func_instr::~Create_func_instr()
00000000008c1798  w    F .text	000000000000004b              Item_nodeset_context_cache::Item_nodeset_context_cache(String*, String*)
0000000000893b56  w    F .text	000000000000002d              Gis_multi_polygon::Gis_multi_polygon()
0000000000000000       F *UND*	0000000000000000              ntohs@@GLIBC_2.2.5
00000000005b0d52  w    F .text	0000000000000018              I_P_List<MDL_request, I_P_List_adapter<MDL_request, &MDL_request::next_in_list, &MDL_request::prev_in_list>, I_P_List_counter, I_P_List_no_push_back<MDL_request> >::is_empty() const
000000000074667b g     F .text	0000000000000185              init_errmessage()
00000000006bb03e  w    F .text	000000000000002e              List<String>::List(List<String> const&, st_mem_root*)
000000000070cb64  w    F .text	0000000000000168              Sys_var_tz::do_check(THD*, set_var*)
0000000001386730 g     O .bss	0000000000000008              Create_func_sqrt::s_singleton
00000000007c864a g     F .text	0000000000000145              Item_func_div::real_op()
0000000000784a28 g     F .text	0000000000000053              Item_uint::print(String*, enum_query_type)
00000000009a8066  w    F .text	000000000000002f              st_foreign_key_info::~st_foreign_key_info()
000000000097d73b g     F .text	0000000000000386              ft_boolean_find_relevance
000000000078ec46 g     F .text	00000000000000cb              Item_ref::Item_ref(Name_resolution_context*, Item**, char const*, char const*, bool)
00000000008717dc g     F .text	0000000000000104              QUICK_ROR_UNION_SELECT::dbug_dump(int, bool)
000000000137074c g     O .bss	0000000000000004              key_LOCK_pool
0000000000606cf4  w    F .text	0000000000000059              Item_int_func::Item_int_func(Item*)
00000000012cc720 g     O .data	00000000000000b0              my_charset_utf16_lithuanian_uca_ci
00000000006d7260  w    F .text	0000000000000011              table_def::size() const
000000000073766e  w    F .text	0000000000000037              Alter_drop::Alter_drop(Alter_drop::drop_type, char const*)
000000000091bdbc g     F .text	000000000000006f              ha_myisam::ha_myisam(handlerton*, TABLE_SHARE*)
0000000000564fda  w    F .text	000000000000007a              String::prep_append(unsigned int, unsigned int)
0000000000606d8c  w    F .text	0000000000000038              Item_bool_func::Item_bool_func(Item*)
000000000120e0e0 g     O .data	0000000000000101              ctype_cp1257_lithuanian_ci
00000000007cb35c g     F .text	0000000000000129              Item_func_ceiling::int_op()
000000000079a36e  w    F .text	0000000000000046              Item_cache_int::~Item_cache_int()
000000000056c0c2 g     F .text	00000000000000bb              init_thread_mask(int*, Master_info*, bool)
00000000007c05f4  w    F .text	0000000000000026              Create_func_ln::~Create_func_ln()
00000000005cea68  w    F .text	000000000000002b              st_select_lex_node::~st_select_lex_node()
000000000078b85c g     F .text	0000000000000040              Item::string_field_type() const
0000000000890cb6 g     F .text	000000000000006c              Gis_multi_line_string::num_geometries(unsigned int*) const
00000000005f116a  w    F .text	000000000000005a              Lex_input_stream::yySkip()
00000000007aff1c  w    F .text	0000000000000016              Item_func_isnotnull::top_level_item()
00000000008b697e g     F .text	0000000000001340              fast_alter_partition_table(THD*, TABLE*, Alter_info*, st_ha_create_information*, TABLE_LIST*, char*, char const*, TABLE*)
00000000005cfcde  w    F .text	0000000000000016              select_result_interceptor::send_result_set_metadata(List<Item>&, unsigned int)
000000000073a394  w    F .text	0000000000000050              Item_func_spatial_rel::Item_func_spatial_rel(Item*, Item*, Item_func::Functype)
000000000136cbfb g     O .bss	0000000000000001              shutdown_in_progress
0000000000766ec8  w    F .text	0000000000000014              Field_blob::pack_length_no_ptr() const
00000000007c0e7c  w    F .text	0000000000000041              Create_func_nullif::~Create_func_nullif()
0000000000b6a04e g     F .text	000000000000008b              ha_partition::common_first_last(unsigned char*)
00000000007af0ba  w    F .text	000000000000002b              in_longlong::~in_longlong()
00000000005f19cc  w    F .text	000000000000001b              List<st_mysql_lex_string>::List()
00000000010eee10 g     O .data	0000000000000004              my_umask
0000000000b79b63 g     F .text	000000000000013d              _db_end_
00000000007bb664  w    F .text	0000000000000038              Item_func_ucase::Item_func_ucase(Item*)
00000000007ea1da g     F .text	000000000000013a              Item_func_trim::print(String*, enum_query_type)
000000000088a4b6 g     F .text	00000000000000b4              sp_pcontext::pop_context()
000000000083f52e g     F .text	00000000000000ed              Append_block_log_event::write(st_io_cache*)
00000000005ca207 g     F .text	0000000000000059              thd_binlog_format
00000000008204b0 g     F .text	00000000000005e6              MYSQL_LOG::open(unsigned int, char const*, enum_log_type, char const*, cache_type)
00000000007e2308  w    F .text	0000000000000058              Item_func_spatial_collection::~Item_func_spatial_collection()
0000000000799eb4  w    F .text	000000000000002e              List<List<Item> >::List(List<List<Item> > const&, st_mem_root*)
0000000000888fe8  w    F .text	0000000000000015              sp_lex_keeper::sql_command() const
0000000000568ee6 g     F .text	00000000000000ea              Rpl_filter::get_rewrite_db(char const*, unsigned long*)
00000000007ddec0 g     F .text	0000000000000044              Item_geometry_func::fix_length_and_dec()
000000000067a2bc g     F .text	0000000000000143              String::strrstr(String const&, unsigned int)
000000000083bf40 g     F .text	000000000000009f              Intvar_log_event::do_apply_event(Relay_log_info const*)
0000000000796212  w    F .text	0000000000000080              Field_datetime::Field_datetime(bool, char const*, charset_info_st*)
0000000000b5c690 g     F .text	00000000000000bc              ha_tina::rnd_pos(unsigned char*, unsigned char*)
000000000082dcd8  w    F .text	000000000000002d              binlog_cache_mngr::~binlog_cache_mngr()
000000000078e8f6 g     F .text	000000000000005f              Item_field::update_null_value()
000000000070e6b4  w    F .text	0000000000000041              Sys_var_tz::~Sys_var_tz()
00000000008ee270 g     F .text	0000000000000016              my_getopt_register_get_addr
00000000008937ca  w    F .text	0000000000000058              Gis_point::get_y(double*) const
00000000005d0570  w    F .text	0000000000000026              List_iterator<Key_part_spec>::init(List<Key_part_spec>&)
00000000005d9b90  w    F .text	0000000000000014              MYSQL_ERROR::get_sqlstate() const
0000000000000000       F *UND*	0000000000000000              pthread_setspecific@@GLIBC_2.2.5
0000000000781660 g     F .text	000000000000006a              Item_case_expr::print(String*, enum_query_type)
00000000010736e0  w    O .data.rel.ro	0000000000000290              vtable for Field
0000000001087720  w    O .data.rel.ro	0000000000000030              vtable for Create_func_isnull
00000000007600ae g     F .text	0000000000000135              Field_bit::cmp_offset(unsigned int)
000000000106c3f0  w    O .data.rel.ro	0000000000000028              vtable for Optimize_table_statement
0000000000799bb2  w    F .text	0000000000000046              Item_hex_string::~Item_hex_string()
00000000007f3d40  w    F .text	000000000000002b              Item_func_reverse::~Item_func_reverse()
000000000080a150  w    F .text	000000000000001e              st_select_lex::set_agg_func_used(bool)
000000000083c571 g     F .text	00000000000000c6              slave_execute_deferred_events(THD*)
00000000008933fa  w    F .text	0000000000000026              Geometry::~Geometry()
00000000007ad308 g     F .text	000000000000015a              Item_equal::fix_fields(THD*, Item**)
00000000007d53b0 g     F .text	000000000000004e              Item_user_var_as_out_param::set_value(char const*, unsigned int, charset_info_st*)
000000000065b30e  w    F .text	0000000000000196              store_key::store_key(THD*, Field*, unsigned char*, unsigned char*, unsigned int)
00000000007c1d22  w    F .text	0000000000000041              Create_func_sin::~Create_func_sin()
0000000000766636  w    F .text	000000000000000f              Field_time::type() const
00000000013863e8 g     O .bss	0000000000000008              Create_func_conv::s_singleton
00000000007bdcae  w    F .text	0000000000000041              Create_func_ceiling::~Create_func_ceiling()
00000000008c42b0 g     F .text	0000000000000043              Event_scheduler::~Event_scheduler()
0000000000889f30  w    F .text	0000000000000026              List_iterator_fast<sp_variable>::List_iterator_fast(List<sp_variable>&)
0000000000873f58  w    F .text	0000000000000026              List_iterator<SEL_IMERGE>::List_iterator(List<SEL_IMERGE>&)
00000000006f99a2 g     F .text	000000000000015b              Check_table_statement::execute(THD*)
0000000000877014  w    F .text	000000000000000f              Item_proc_string::field_type() const
00000000007d46f2 g     F .text	000000000000007c              Item_func_get_user_var::val_real()
0000000000931259 g     F .text	00000000000002ae              update_state_info
00000000007fe14a g     F .text	000000000000006b              Item_sum::cleanup()
000000000078fe34 g     F .text	00000000000000aa              Item_ref::val_result()
0000000000b64338 g     F .text	0000000000000943              ha_partition::create_handler_file(char const*)
000000000059b63c  w    F .text	000000000000001b              Dynamic_array<GRANT_NAME*>::~Dynamic_array()
0000000001374100 g     O .bss	0000000000000060              my_locale_da_DK
000000000089d6ec g     F .text	0000000000000304              mysql_prepare_delete(THD*, TABLE_LIST*, Item**)
00000000010b13e0  w    O .data.rel.ro	0000000000000368              vtable for Item_variance_field
00000000007b4ad6 g     F .text	0000000000000050              Create_func_issimple::create(THD*, Item*)
000000000080969a  w    F .text	0000000000000011              Item_sum_max::func_name() const
00000000007ade9e  w    F .text	000000000000002b              Item_func_bit::~Item_func_bit()
000000000076650c  w    F .text	000000000000000f              Field_newdate::derivation() const
00000000006b48cd g     F .text	00000000000000c9              rename_file_ext(char const*, char const*, char const*)
0000000000990ecf g     F .text	0000000000000336              myrg_rkey
0000000000b83724 g     F .text	00000000000001d4              my_strntoull_8bit
0000000001089560  w    O .data.rel.ro	0000000000000398              vtable for Item_func_min
00000000006983d4  w    F .text	000000000000005c              Trigger_creation_ctx::clone(st_mem_root*)
000000000081f2fe g     F .text	000000000000013f              MYSQL_BIN_LOG::set_write_error(THD*, bool)
000000000138cde0 g     O .bss	0000000000000008              file_class_max
0000000000681ce9 g     F .text	000000000000017e              quick_rm_table(handlerton*, char const*, char const*, unsigned int)
000000000077c42c  w    F .text	0000000000000058              Update_rows_log_event::binlog_row_logging_function(THD*, TABLE*, bool, st_bitmap*, unsigned int, unsigned char const*, unsigned char const*)
00000000007b095a  w    F .text	000000000000002b              Item_is_not_null_test::~Item_is_not_null_test()
0000000000604386 g     F .text	0000000000000238              kill_one_thread(THD*, unsigned long, bool)
0000000001087f60  w    O .data.rel.ro	0000000000000030              vtable for Create_func_dayname
000000000054bde8 g     F .text	0000000000000069              Buffered_log::Buffered_log(loglevel, char const*)
00000000005afd04  w    F .text	000000000000004e              Item_bool_rowready_func2::Item_bool_rowready_func2(Item*, Item*)
0000000000766c10  w    F .text	000000000000000f              Field_string::real_type() const
0000000000904b0c g     F .text	0000000000000043              ha_perfschema::use_hidden_primary_key()
00000000007bf622  w    F .text	0000000000000026              Create_func_geometry_from_text::~Create_func_geometry_from_text()
0000000000764150  w    F .text	000000000000002b              Field::~Field()
00000000007c6f86 g     F .text	00000000000000a8              Item_decimal_typecast::val_real()
0000000000ba6ebb g     F .text	00000000000000a1              vio_poll_read
00000000006f5ac2  w    F .text	0000000000000087              I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_lock, &MDL_ticket::prev_in_lock>, I_P_List_null_counter, I_P_List_fast_push_back<MDL_ticket> >::push_back(MDL_ticket*)
000000000083e6aa g     F .text	000000000000015c              Create_file_log_event::Create_file_log_event(THD*, sql_exchange*, char const*, char const*, List<Item>&, bool, enum_duplicates, bool, unsigned char*, unsigned int, bool)
00000000007f395e  w    F .text	0000000000000058              Item_func_substr::~Item_func_substr()
0000000000566fea  w    F .text	000000000000000f              Item::is_splocal()
00000000005f128e  w    F .text	0000000000000020              Lex_input_stream::eof()
0000000000b7be56 g     F .text	0000000000000092              my_hash_sort_bin
000000000073aca8  w    F .text	0000000000000048              Item_extract::Item_extract(interval_type, Item*)
0000000000795f0f  w    F .text	0000000000000026              my_decimal2decimal(my_decimal const*, my_decimal*)
000000000098e622 g     F .text	000000000000027c              ha_myisammrg::update_create_info(st_ha_create_information*)
00000000010f11e0 g     O .data	0000000000000020              myisam_stats_method_typelib
00000000007c2cc6  w    F .text	000000000000002d              Create_func_weekofyear::Create_func_weekofyear()
00000000007ae38c  w    F .text	000000000000002c              Item_bool_func2::have_rev_func() const
000000000059ac58  w    F .text	0000000000000018              GRANT_NAME::ok()
000000000061ad22 g     F .text	0000000000000074              Ed_connection::Ed_connection(THD*)
00000000006f604a  w    F .text	000000000000001a              I_P_List_fast_push_back<MDL_ticket>::set_last(MDL_ticket**)
00000000008537e4 g     F .text	0000000000000075              dbug_decimal_as_string(char*, my_decimal const*)
00000000007fb8ee g     F .text	000000000000004f              subselect_union_engine::cols()
00000000007b4e16 g     F .text	0000000000000058              Create_func_like_range_max::create(THD*, Item*, Item*)
000000000090c024  w    F .text	0000000000000041              PFS_readonly_acl::~PFS_readonly_acl()
00000000008f4b21 g     F .text	0000000000000134              my_symlink
00000000007ae760  w    F .text	0000000000000011              Item_func_eq::func_name() const
00000000008d15e3 g     F .text	0000000000000132              get_defaults_options
000000000070cd92  w    F .text	000000000000004e              Sys_var_tz::session_value_ptr(THD*, st_mysql_lex_string*)
00000000006a583c g     F .text	0000000000000496              create_view_precheck(THD*, TABLE_LIST*, TABLE_LIST*, enum_view_create_mode)
000000000089bd46 g     F .text	0000000000000084              Materialized_cursor::~Materialized_cursor()
00000000007aecc8  w    F .text	0000000000000014              Item_func_if::result_type() const
0000000000886170 g     F .text	0000000000000120              sp_instr_stmt::print(String*)
00000000007b0a7c  w    F .text	0000000000000046              Item_func_bit_and::~Item_func_bit_and()
00000000007bf41e  w    F .text	0000000000000041              Create_func_found_rows::~Create_func_found_rows()
00000000008088ac  w    F .text	000000000000000f              Aggregator_distinct::Aggrtype()
0000000000811bfc g     F .text	000000000000010a              Item_extract::eq(Item const*, bool) const
0000000000893df8 g     F .text	0000000000000029              compare_ulonglong2(void*, unsigned long long const*, unsigned long long const*)
00000000010f1598 g     O .data	0000000000000008              myisam_concurrent_insert
000000000089aa98  w    F .text	000000000000008b              analyse::analyse(select_result*)
00000000007c16b0  w    F .text	0000000000000041              Create_func_rand::~Create_func_rand()
0000000000981c36 g     F .text	0000000000000058              ha_heap::delete_all_rows()
0000000000791ce1 g     F .text	0000000000000009              non-virtual thunk to Item_trigger_field::set_required_privilege(bool)
0000000001370810 g     O .bss	0000000000000004              key_PAGE_cond
00000000007646ac  w    F .text	000000000000003a              Field::key_cmp(unsigned char const*, unsigned int)
000000000065a07e  w    F .text	0000000000000011              Item_func_trig_cond::func_name() const
000000000080a520  w    F .text	000000000000002b              Item_std_field::~Item_std_field()
00000000005b1026  w    F .text	0000000000000026              List_iterator<Item_func_set_user_var>::List_iterator(List<Item_func_set_user_var>&)
0000000000b7c1bb g     F .text	0000000000000054              my_wildcmp_bin
000000000109bea8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_area
00000000005b8f5a g     F .text	00000000000004b5              Query_cache::insert_table(unsigned int, char*, Query_cache_block_table*, unsigned int, unsigned char, char (*)(THD*, char*, unsigned int, unsigned long long*), unsigned long long)
00000000012ca620 g     O .data	00000000000000b0              my_charset_utf8mb4_turkish_uca_ci
000000000074dcc6 g     F .text	0000000000000193              Field_tiny::val_str(String*, String*)
0000000001370b20 g     O .bss	0000000000000020              key_caches
000000000109df00  w    O .data.rel.ro	0000000000000398              vtable for Item_func_isempty
000000000107db28  w    O .data.rel.ro	0000000000000358              vtable for Item_bin_string
000000000090d48a g     F .text	000000000000013a              table_events_waits_current::rnd_next()
00000000007a69c4 g     F .text	000000000000002b              in_row::~in_row()
00000000008cb470  w    F .text	0000000000000046              Alter_table_truncate_partition_statement::~Alter_table_truncate_partition_statement()
000000000070ca7a  w    F .text	0000000000000013              Sys_var_struct::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000010ce770 g     O .data	0000000000000008              violet_log_file_name
0000000000808fbc  w    F .text	000000000000002a              Item_sum_avg::sum_func() const
00000000006d480f g     F .text	0000000000000024              uint_max(int)
00000000007966e8  w    F .text	000000000000001a              Hybrid_type_traits_integer::set_zero(Hybrid_type*) const
00000000005d7af2 g     F .text	00000000000001e3              mysql_derived_filling(THD*, LEX*, TABLE_LIST*)
0000000000928614 g     F .text	000000000000000b              lock_memory
00000000008c1814  w    F .text	000000000000005d              Item_func_xpath_position::Item_func_xpath_position(Item*, String*)
00000000010c3358  w    O .data.rel.ro	0000000000000028              vtable for Bad_db_error_handler
00000000007b03f8  w    F .text	000000000000003c              Item_cache_int::Item_cache_int()
000000000073783c  w    F .text	000000000000000f              Settable_routine_parameter::get_out_param_info() const
00000000008722f8  w    F .text	0000000000000074              SEL_ARG::SEL_ARG(SEL_ARG::Type)
00000000012cb040 g     O .data	00000000000000b0              my_charset_utf32_latvian_uca_ci
0000000000816440  w    F .text	0000000000000044              Item_func_curdate::val_int()
00000000007a47b2 g     F .text	00000000000000b3              Item_func_nullif::val_decimal(my_decimal*)
00000000008c1450  w    F .text	000000000000004e              Item_nodeset_func_attributebyname::Item_nodeset_func_attributebyname(Item*, char const*, unsigned int, String*)
00000000005d8054 g     F .text	0000000000000077              MYSQL_ERROR::init(st_mem_root*)
0000000000580740 g     F .text	0000000000000177              hostname_requires_resolving(char const*)
000000000080a16e  w    F .text	0000000000000016              Unique::elements_in_tree()
0000000000831984 g     F .text	000000000000002c              Log_event::get_type_str()
0000000000815d82  w    F .text	0000000000000026              Item_func_year::fix_length_and_dec()
0000000000796744  w    F .text	000000000000002d              Hybrid_type_traits_integer::div(Hybrid_type*, unsigned long long) const
00000000008a0bb5 g     F .text	0000000000000163              prepare_select_for_name(THD*, char const*, unsigned int, TABLE_LIST*, TABLE*, Field*, int*)
000000000077c1fe  w    F .text	0000000000000013              handler::reset_auto_increment(unsigned long long)
00000000006e947c g     F .text	000000000000014f              PROFILING::start_new_query(char const*)
000000000091972a g     F .text	0000000000000075              ft_init_search
00000000006982e8  w    F .text	0000000000000039              Stored_program_creation_ctx::change_env(THD*) const
000000000080998e  w    F .text	00000000000000f4              Item_udf_sum::fix_fields(THD*, Item**)
00000000007f40e4  w    F .text	0000000000000046              Item_func_sha::~Item_func_sha()
00000000007ba032  w    F .text	0000000000000038              Item_func_ln::Item_func_ln(Item*)
0000000001086a00  w    O .data.rel.ro	0000000000000030              vtable for Create_func_unhex
000000000069b098 g     F .text	000000000000000f              select_union::send_eof()
00000000005cf678  w    F .text	0000000000000053              Open_tables_state::set_open_tables_state(Open_tables_state*)
000000000070b31e  w    F .text	0000000000000026              Sys_var_set::global_save_default(THD*, set_var*)
0000000000810720 g     F .text	0000000000000055              Item_func_from_unixtime::fix_length_and_dec()
00000000007aeafa  w    F .text	000000000000000f              Item_func_between::functype() const
0000000000908422  w    F .text	000000000000004a              pfs_lock::dirty_to_free()
00000000007f8068 g     F .text	0000000000001336              Item_in_subselect::row_value_transformer(JOIN*)
00000000007dc9da  w    F .text	000000000000002b              Item_func_udf_int::~Item_func_udf_int()
00000000005ce1fa  w    F .text	000000000000001b              Discrete_intervals_list::~Discrete_intervals_list()
00000000005c5060 g     F .text	0000000000000180              select_send::send_data(List<Item>&)
000000000088539c g     F .text	0000000000000050              sp_head::add_mark_lead(unsigned int, List<sp_instr>*)
00000000007fc8d2  w    F .text	000000000000002b              Item_in_subselect::~Item_in_subselect()
0000000000b5df56  w    F .text	0000000000000011              ha_tina::estimate_rows_upper_bound()
00000000007c2a6e  w    F .text	000000000000002d              Create_func_uuid::Create_func_uuid()
0000000000980c44 g     F .text	0000000000000088              ha_heap::ha_heap(handlerton*, TABLE_SHARE*)
000000000056768a  w    F .text	000000000000000f              Item_string::basic_const_item() const
000000000121ad80 g     O .data	0000000000000200              to_uni_cp850_bin
00000000008173e4  w    F .text	000000000000002b              Item_func_timestamp_diff::~Item_func_timestamp_diff()
0000000000563ea0 g     F .text	00000000000001ff              Protocol_text::send_out_parameters(List<Item_param>*)
00000000007c3236  w    F .text	0000000000000046              Item_func_max::~Item_func_max()
00000000007bfb68  w    F .text	0000000000000026              Create_func_inet_ntoa::~Create_func_inet_ntoa()
000000000087d8ad g     F .text	0000000000000091              sp_remove_not_own_routines(Query_tables_list*)
000000000106d058  w    O .data.rel.ro	0000000000000028              vtable for Alter_table_common
00000000007bf460  w    F .text	0000000000000026              Create_func_found_rows::~Create_func_found_rows()
0000000000567544  w    F .text	00000000000000cf              Item_string::Item_string(char const*, char const*, unsigned int, charset_info_st*, Derivation, unsigned int)
00000000007f1e02  w    F .text	0000000000000046              Item_func_sysconst::~Item_func_sysconst()
00000000005c2404 g     F .text	00000000000001c0              THD::raise_note_printf(unsigned int, ...)
0000000000889ce8  w    F .text	0000000000000025              List<LEX>::push_front(LEX*)
00000000007e4cf8 g     F .text	000000000000002d              Item_func_aes_encrypt::fix_length_and_dec()
0000000000796fce  w    F .text	0000000000000035              Item_field::result_as_longlong()
00000000007c2d36  w    F .text	0000000000000026              Create_func_weekofyear::~Create_func_weekofyear()
00000000007be28a  w    F .text	0000000000000041              Create_func_convert_tz::~Create_func_convert_tz()
000000000065c16c  w    F .text	0000000000000074              List<Item_func_match>::delete_elements()
00000000005c3030 g     F .text	000000000000041a              THD::~THD()
0000000000788a26 g     F .text	00000000000000c0              Item_ref_null_helper::val_int()
00000000010c9ab8  w    O .data.rel.ro	0000000000000028              vtable for Alter_table_optimize_partition_statement
00000000007e0c4a  w    F .text	0000000000000094              String::q_append(unsigned int)
000000000059cf3e g     F .text	00000000000000d8              get_cached_table_share(char const*, char const*)
000000000079a08c  w    F .text	0000000000000046              Item_type_holder::~Item_type_holder()
00000000007e278e  w    F .text	0000000000000046              Item_func_geometry_from_text::~Item_func_geometry_from_text()
000000000059ab6a  w    F .text	000000000000007b              GRANT_COLUMN::GRANT_COLUMN(String&, unsigned long)
000000000077b46a  w    F .text	0000000000000067              xid_t::get_my_xid()
0000000001072778  w    O .data.rel.ro	0000000000000290              vtable for Field_medium
000000000079bc4a  w    F .text	000000000000002b              Cached_item_decimal::~Cached_item_decimal()
0000000000921cfa g     F .text	00000000000000f9              myisamchk_init
000000000080a786  w    F .text	0000000000000046              Item_sum_min::~Item_sum_min()
0000000000601d20 g     F .text	0000000000000092              mysql_init_select(LEX*)
0000000000765df8  w    F .text	0000000000000024              Field_null::store(char const*, unsigned int, charset_info_st*)
00000000007c27ae  w    F .text	0000000000000041              Create_func_ucase::~Create_func_ucase()
00000000009465ad g     F .text	0000000000000206              mi_update_status
0000000000913840  w    F .text	0000000000000041              table_threads::~table_threads()
000000000079c7e6 g     F .text	000000000000009c              Item_func_not::val_int()
000000000065a2a4  w    F .text	0000000000000015              Item_equal::get_const()
00000000005e395c g     F .text	0000000000000a0b              handle_delayed_insert
0000000000607b1e  w    F .text	0000000000000148              Security_context::operator=(Security_context const&)
000000000080912e  w    F .text	0000000000000025              Item_variance_field::val_decimal(my_decimal*)
0000000000561bd4 g     F .text	000000000000008e              Protocol::send_error(unsigned int, char const*, char const*)
00000000007dbd7c  w    F .text	00000000000000c7              User_level_lock::User_level_lock(unsigned char const*, unsigned int, unsigned long)
00000000007dc6f8  w    F .text	000000000000002b              Item_func_last_insert_id::~Item_func_last_insert_id()
0000000000565204  w    F .text	0000000000000047              Diagnostics_area::affected_rows() const
0000000000834cd6 g     F .text	00000000000017d6              Query_log_event::Query_log_event(char const*, unsigned int, Format_description_log_event const*, Log_event_type)
000000000077e262 g     F .text	000000000000002e              Hybrid_type_traits_integer::fix_length_and_dec(Item*, Item*) const
000000000082fcca g     F .text	0000000000000184              Global_read_lock::lock_global_read_lock(THD*)
000000000055963a  w    F .text	000000000000002b              Buffered_log::~Buffered_log()
0000000000000000       F *UND*	0000000000000000              dlsym@@GLIBC_2.2.5
0000000000b61ed4 g     F .text	00000000000000c3              ha_partition::check_and_repair(THD*)
00000000010868e0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_weekofyear
00000000005b0fbc  w    F .text	0000000000000026              List_iterator_fast<TABLE_LIST>::List_iterator_fast(List<TABLE_LIST>&)
00000000007e6e4c g     F .text	00000000000002fa              Item_func_reverse::val_str(String*)
00000000006d74c0 g     F .text	00000000000000c9              injector::transaction::commit()
000000000095b1a4 g     F .text	000000000000038a              _mi_dpointer
00000000005cf128  w    F .text	000000000000001b              List<Item_param>::~List()
00000000007fc218  w    F .text	000000000000000f              Item_subselect::substype()
000000000088cbd8 g     F .text	0000000000000028              sp_rcontext::get_case_expr(int)
00000000007c0a34  w    F .text	000000000000002d              Create_func_makedate::Create_func_makedate()
000000000059af3e  w    F .text	000000000000001b              List_iterator<LEX_COLUMN>::rewind()
00000000007fcc7a g     F .text	0000000000000482              Item_sum::check_sum_func(THD*, Item**)
0000000000ba0e78 g     F .text	000000000000002e              ullstr
00000000007dc5ce  w    F .text	0000000000000046              Item_func_sleep::~Item_func_sleep()
00000000008164f6  w    F .text	0000000000000011              Item_func_curdate_local::func_name() const
00000000007c2a06  w    F .text	0000000000000041              Create_func_unix_timestamp::~Create_func_unix_timestamp()
000000000070c4dc  w    F .text	00000000000001a7              Sys_var_have::Sys_var_have(char const*, char const*, int, long, unsigned long, CMD_LINE, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000008fe195 g     F .text	0000000000000170              thr_unlock
00000000005bf29c  w    F .text	0000000000000011              Query_cache_query::found_rows()
000000000077ba44  w    F .text	0000000000000013              handler::index_last(unsigned char*)
0000000000981de6 g     F .text	0000000000000069              ha_heap::store_lock(THD*, st_thr_lock_data**, thr_lock_type)
0000000000000000       F *UND*	0000000000000000              toupper@@GLIBC_2.2.5
00000000007bbd96  w    F .text	000000000000006a              Item_func_like_range::~Item_func_like_range()
0000000000837ddc g     F .text	00000000000005e0              Format_description_log_event::Format_description_log_event(unsigned char, char const*)
000000000079c6be g     F .text	0000000000000049              Gt_creator::create(Item*, Item*) const
00000000007c0bd0  w    F .text	0000000000000026              Create_func_make_set::~Create_func_make_set()
00000000007b0692  w    F .text	000000000000006a              Item_equal::~Item_equal()
0000000000559682  w    F .text	000000000000001f              Buffered_logs::Buffered_logs()
0000000001386450 g     O .bss	0000000000000008              Create_func_degrees::s_singleton
0000000000739cda  w    F .text	0000000000000064              Item_func_trim::Item_func_trim(Item*, Item*)
00000000010a6af0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_format
00000000005c0e27 g     F .text	000000000000002c              thd_storage_lock_wait
00000000008cda82 g     F .text	0000000000000150              init_dynamic_array2
000000000054f8af g     F .text	000000000000001f              my_str_malloc_mysqld
0000000000805ade g     F .text	0000000000000025              Item_sum_udf_float::val_decimal(my_decimal*)
00000000008c242e  w    F .text	0000000000000058              Item_nodeset_to_const_comparator::~Item_nodeset_to_const_comparator()
000000000065c2ca  w    F .text	000000000000001b              I_List<COND_CMP>::~I_List()
000000000120b400 g     O .data	0000000000000200              to_uni_hebrew_general_ci
000000000091adfd g     F .text	0000000000000af5              check_definition(st_mi_keydef*, st_columndef*, unsigned int, unsigned int, st_mi_keydef*, st_columndef*, unsigned int, unsigned int, bool, TABLE*)
0000000000737ad8  w    F .text	0000000000000043              Item_sum::set_distinct(bool)
000000000079ae2c  w    F .text	0000000000000046              Item_static_float_func::~Item_static_float_func()
000000000087e91a  w    F .text	000000000000004c              SQL_I_List<Sroutine_hash_entry>::link_in_list(Sroutine_hash_entry*, Sroutine_hash_entry**)
00000000010ef920 g     O .data	0000000000000010              table_setup_consumers::m_field_def
0000000001086ee0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_rtrim
0000000000765f72  w    F .text	000000000000000f              Field_timestamp::cmp_type() const
00000000007af7a6  w    F .text	0000000000000054              cmp_item_real::cmp(Item*)
000000000136f1c0 g     O .bss	0000000000000070              LOCK_status
00000000006f21b0 g     F .text	0000000000000037              MDL_wait::~MDL_wait()
00000000008c07d0  w    F .text	0000000000000011              Item_func_xml_extractvalue::func_name() const
00000000008c8e38 g     F .text	0000000000000553              Event_db_repository::create_event(THD*, Event_parse_data*, bool, bool*)
00000000009576e9 g     F .text	000000000000057e              mi_rnext
00000000006e8cd4 g     F .text	000000000000005a              PROF_MEASUREMENT::~PROF_MEASUREMENT()
00000000008b9c15 g     F .text	0000000000000286              create_subpartition_name(char*, char const*, char const*, char const*, unsigned int)
0000000000617dd9 g     F .text	0000000000000155              mysqld_stmt_close(THD*, char*)
00000000005c079f g     F .text	000000000000001e              thd_set_scheduler_data(THD*, void*)
0000000000738754  w    F .text	0000000000000053              Item_func_round::Item_func_round(Item*, Item*, bool)
00000000006ce081  w    F .text	0000000000000019              Event_worker_thread::init(Event_db_repository*)
0000000000805cd0 g     F .text	0000000000000050              Item_sum_udf_int::copy_or_same(THD*)
00000000007ae91c  w    F .text	000000000000000f              Item_func_le::functype() const
0000000000837a16 g     F .text	000000000000012d              Start_log_event_v3::Start_log_event_v3(char const*, unsigned int, Format_description_log_event const*)
00000000005c8cca g     F .text	0000000000000069              Statement::~Statement()
00000000005af272  w    F .text	0000000000000071              TABLE::TABLE()
0000000000784932 g     F .text	0000000000000046              Item_uint::Item_uint(char const*, unsigned int)
00000000005ce4b2  w    F .text	0000000000000034              xid_t::set(xid_t*)
00000000007ddd6e  w    F .text	0000000000000046              Item_func_connection_id::~Item_func_connection_id()
000000000079b5a6 g     F .text	00000000000000db              Cached_item_field::cmp()
0000000000851d64 g     F .text	0000000000000088              Delete_rows_log_event_old::do_exec_row(Relay_log_info const*)
000000000059be40 g     F .text	0000000000000133              create_table_def_key(THD*, char*, TABLE_LIST const*, bool)
00000000010c1f78  w    O .data.rel.ro	00000000000000a8              vtable for QUICK_GROUP_MIN_MAX_SELECT
00000000005590c2  w    F .text	0000000000000011              CSET_STRING::str() const
00000000013864d0 g     O .bss	0000000000000008              Create_func_floor::s_singleton
000000000081f9ef g     F .text	0000000000000165              check_binlog_magic(st_io_cache*, char const**)
000000000080a468  w    F .text	0000000000000046              Item_sum_udf_float::~Item_sum_udf_float()
000000000079ac9a  w    F .text	0000000000000046              Item_case_expr::~Item_case_expr()
00000000013867b8 g     O .bss	0000000000000008              Create_func_unhex::s_singleton
000000000056539e  w    F .text	0000000000000038              Protocol::Protocol(THD*)
0000000000565110  w    F .text	0000000000000014              Diagnostics_area::status() const
00000000007935f4 g     F .text	000000000000004b              Item_cache_datetime::store(Item*, long long)
00000000006e5eda g     F .text	000000000000001f              mysql_audit_finalize()
000000000076e94d g     F .text	0000000000000bd6              merge_buffers(st_sort_param*, st_io_cache*, st_io_cache*, unsigned char*, st_buffpek*, st_buffpek*, st_buffpek*, int)
000000000078ec46 g     F .text	00000000000000cb              Item_ref::Item_ref(Name_resolution_context*, Item**, char const*, char const*, bool)
00000000007f2956  w    F .text	0000000000000058              Item_func_uncompress::~Item_func_uncompress()
00000000008e8d3c g     F .text	0000000000000013              is_filename_allowed
000000000079a69c  w    F .text	000000000000002b              Item_int_with_ref::~Item_int_with_ref()
00000000007dbfbc  w    F .text	0000000000000046              Item_func_uuid_short::~Item_func_uuid_short()
000000000073a2b2  w    F .text	0000000000000038              Item_geometry_func::Item_geometry_func(List<Item>&)
00000000008160a6  w    F .text	0000000000000013              Item_func_time_to_sec::check_partition_func_processor(unsigned char*)
0000000000558a1c  w    F .text	0000000000000026              base_ilist::empty()
00000000007710af g     F .text	00000000000000e8              ha_checktype(THD*, legacy_db_type, bool, bool)
00000000007afbb2  w    F .text	0000000000000044              cmp_item_row::cmp_item_row()
00000000005d0130  w    F .text	0000000000000026              List<Key>::prepand(List<Key>*)
0000000000822874 g     F .text	00000000000000b8              MYSQL_BIN_LOG::init(bool, unsigned long)
0000000000838a54 g     F .text	000000000000004d              Format_description_log_event::do_update_pos(Relay_log_info*)
000000000090c27c  w    F .text	0000000000000041              PFS_unknown_acl::~PFS_unknown_acl()
0000000000798d6e  w    F .text	000000000000004a              Item_copy_decimal::Item_copy_decimal(Item*)
00000000007593f2 g     F .text	0000000000000129              Field_string::new_field(st_mem_root*, TABLE*, bool)
00000000006ba51d g     F .text	00000000000000de              max_row_length(TABLE*, unsigned char const*)
00000000010872d0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_name_const
000000000085529a g     F .text	00000000000000c2              my_init_time
0000000000000000       F *UND*	0000000000000000              shmdt@@GLIBC_2.2.5
0000000000808840  w    F .text	000000000000006c              Aggregator_distinct::Aggregator_distinct(Item_sum*)
00000000006f5f08  w    F .text	000000000000000f              I_P_List_no_push_back<MDL_object_lock>::I_P_List_no_push_back(MDL_object_lock**)
00000000009589f5 g     F .text	00000000000000a8              mi_scan
00000000008aff3a g     F .text	0000000000000081              get_list_array_idx_for_endpoint_charset(partition_info*, bool, bool)
000000000059b682  w    F .text	0000000000000011              Dynamic_array<GRANT_NAME*>::elements()
00000000007fc558  w    F .text	0000000000000029              Item_in_subselect::reset()
00000000006d2df6 g     F .text	00000000000000c7              partition_info::get_column_item(Item*, Field*)
00000000006b8e58 g     F .text	000000000000011a              Field_iterator_table_ref::get_db_name()
0000000000920804  w    F .text	000000000000001b              ha_myisam::auto_repair() const
00000000007bf3f0  w    F .text	000000000000002d              Create_func_found_rows::Create_func_found_rows()
00000000007ae628  w    F .text	0000000000000011              Item_func_not_all::func_name() const
0000000000809dc6  w    F .text	00000000000000d8              Item_sum_udf_str::val_int()
00000000006ac97d g     F .text	000000000000020f              init_tmp_table_share(THD*, TABLE_SHARE*, char const*, unsigned int, char const*, char const*)
00000000010e2a10 g     O .data	0000000000000008              primary_key_name
000000000107cfd8  w    O .data.rel.ro	0000000000000360              vtable for Item_num
0000000000793e3a g     F .text	0000000000000099              Item_cache_decimal::val_real()
0000000000698864  w    F .text	0000000000000041              Handle_old_incorrect_trigger_table_hook::~Handle_old_incorrect_trigger_table_hook()
00000000005c086b g     F .text	000000000000002a              thd_lock_thread_count(THD*)
00000000006f0510 g     F .text	0000000000000032              unregister_binlog_transmit_observer
000000000057aa40  w    F .text	0000000000000064              Rotate_log_event::~Rotate_log_event()
00000000005cfbc0  w    F .text	0000000000000046              select_result::~select_result()
000000000136cc18 g     O .bss	0000000000000008              heap_hton
00000000007a9c66 g     F .text	0000000000000149              Item_cond::print(String*, enum_query_type)
0000000000755446 g     F .text	00000000000000fa              Field_date::val_real()
000000000082d726  w    F .text	000000000000006c              binlog_cache_data::binlog_cache_data()
0000000001087660  w    O .data.rel.ro	0000000000000030              vtable for Create_func_lcase
000000000065b5ba  w    F .text	00000000000000ca              store_key_field::store_key_field(THD*, Field*, unsigned char*, unsigned char*, unsigned int, Field*, char const*)
00000000012076c0 g     O .data	0000000000000200              to_uni_dec8_swedish_ci
00000000005e8e36  w    F .text	000000000000001b              I_List<delayed_row>::~I_List()
000000000069af18 g     F .text	0000000000000023              select_union::prepare(List<Item>&, st_select_lex_unit*)
0000000000678986  w    F .text	000000000000002d              IS_internal_schema_access::IS_internal_schema_access()
0000000000b6b824 g     F .text	00000000000002b2              ha_partition::handle_ordered_index_scan_key_not_found()
000000000106cd50  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_external_user
0000000000893a00  w    F .text	0000000000000041              Gis_multi_point::~Gis_multi_point()
00000000006ef5a8 g     F .text	0000000000000083              Binlog_relay_IO_delegate::init_param(Binlog_relay_IO_param*, Master_info*)
000000000120e200 g     O .data	0000000000000100              to_lower_cp1257_lithuanian_ci
00000000007c1718  w    F .text	000000000000002d              Create_func_release_lock::Create_func_release_lock()
000000000073a8e8  w    F .text	000000000000002a              Item_str_timefunc::save_in_field(Field*, bool)
0000000000765ebc  w    F .text	000000000000002b              Field_null::val_str(String*, String*)
00000000005c5402 g     F .text	000000000000008b              select_to_file::~select_to_file()
000000000090d796 g     F .text	0000000000000033              table_events_waits_history::reset_position()
0000000001374820 g     O .bss	0000000000000060              my_locale_ja_JP
00000000006a4f4a  w    F .text	000000000000001b              List_iterator_fast<TABLE>::rewind()
00000000006eea80 g     F .text	0000000000000220              Binlog_transmit_delegate::transmit_stop(THD*, unsigned short)
00000000005d07b0  w    F .text	0000000000000026              List<Alter_drop>::concat(List<Alter_drop>*)
0000000000808a02  w    F .text	000000000000002b              Item_sum::~Item_sum()
00000000013741c0 g     O .bss	0000000000000060              my_locale_de_DE
0000000001370878 g     O .bss	0000000000000004              key_RELAYLOG_update_cond
00000000007866ce g     F .text	000000000000010e              Item_param::reset()
0000000000826c60 g     F .text	000000000000004c              MYSQL_BIN_LOG::stop_union_events(THD*)
00000000007adf54  w    F .text	0000000000000064              Arg_comparator::is_owner_equal_func()
000000000067ac8c g     F .text	0000000000000190              my_copy_with_hex_escaping(charset_info_st*, char*, unsigned long, char const*, unsigned long)
00000000007669de  w    F .text	000000000000006c              Field_string::type() const
00000000006ed9a4  w    F .text	0000000000000046              Signal_statement::~Signal_statement()
000000000082d1bc  w    F .text	000000000000005f              Intvar_log_event::Intvar_log_event(THD*, unsigned char, unsigned long long)
0000000000888f4c  w    F .text	000000000000002b              sp_instr::~sp_instr()
00000000005affde  w    F .text	0000000000000026              Query_arena::~Query_arena()
0000000000690658  w    F .text	00000000000000ba              Key::Key(Key::Keytype, char const*, unsigned long, st_key_create_information*, bool, List<Key_part_spec>&)
00000000012cc060 g     O .data	00000000000000b0              my_charset_utf16_romanian_uca_ci
00000000012188a0 g     O .data	0000000000000100              to_upper_hp8_bin
0000000000980c44 g     F .text	0000000000000088              ha_heap::ha_heap(handlerton*, TABLE_SHARE*)
0000000000872f34  w    F .text	0000000000000036              SEL_ARG::parent_ptr()
00000000006933a6 g     F .text	0000000000000b19              Table_triggers_list::create_trigger(THD*, TABLE_LIST*, String*)
00000000007e18b8  w    F .text	0000000000000011              Item_func_spatial_collection::func_name() const
000000000073a6b2  w    F .text	000000000000002a              Item_date_func::tmp_table_field(TABLE*)
00000000007c2528  w    F .text	000000000000002d              Create_func_timediff::Create_func_timediff()
00000000006b980a g     F .text	00000000000000e2              TABLE::mark_auto_increment_column()
000000000091f26e g     F .text	00000000000000a3              ha_myisam::index_next_same(unsigned char*, unsigned char const*, unsigned int)
000000000086885a g     F .text	000000000000009b              QUICK_ROR_UNION_SELECT::is_keys_used(st_bitmap const*)
0000000001394d1c g     O .bss	0000000000000004              key_COND_alarm
0000000000000000       F *UND*	0000000000000000              cos@@GLIBC_2.2.5
000000000087ea9e  w    F .text	0000000000000041              Proc_table_intact::~Proc_table_intact()
00000000008f8228 g     F .text	00000000000000dc              queue_insert
00000000007dccf2  w    F .text	000000000000002b              Item_func_field::~Item_func_field()
000000000090dc24 g     F .text	0000000000000135              table_events_waits_history_long::rnd_next()
000000000079a546  w    F .text	000000000000002b              Item_default_value::~Item_default_value()
000000000136ce58 g     O .bss	0000000000000008              flush_status_time
0000000001087e10  w    O .data.rel.ro	0000000000000030              vtable for Create_func_des_encrypt
000000000090f018 g     F .text	0000000000000054              table_events_waits_summary_by_instance::make_file_row(PFS_file*)
0000000000889b04  w    F .text	000000000000001b              List<sp_instr_opt_meta>::~List()
000000000137082c g     O .bss	0000000000000004              key_COND_rpl_status
00000000007c0cba  w    F .text	0000000000000041              Create_func_md5::~Create_func_md5()
0000000000809188  w    F .text	0000000000000025              Item_variance_field::field_type() const
0000000001207be0 g     O .data	0000000000000100              sort_order_cp850_general_ci
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
00000000007822d6 g     F .text	0000000000000309              DTCollation::aggregate(DTCollation&, unsigned int)
0000000000893c46  w    F .text	0000000000000041              Gis_geometry_collection::~Gis_geometry_collection()
00000000007d3b86 g     F .text	0000000000000082              Item_func_set_user_var::val_result()
000000000087a974 g     F .text	000000000000120e              sp_create_routine(THD*, int, sp_head*)
0000000000738c32  w    F .text	0000000000000040              Item_func_bit_xor::Item_func_bit_xor(Item*, Item*)
000000000065c7f6  w    F .text	000000000000001a              List<Item>::head_ref()
000000000070e8fe  w    F .text	0000000000000026              Sys_var_debug_sync::~Sys_var_debug_sync()
0000000000749b92 g     F .text	00000000000000b6              Field_str::val_decimal(my_decimal*)
00000000007bec2c  w    F .text	0000000000000026              Create_func_disjoint::~Create_func_disjoint()
00000000008f0c3a g     F .text	00000000000003c8              my_print_help
00000000007b1854 g     F .text	00000000000000f8              Create_qfunc::create_func(THD*, st_mysql_lex_string, List<Item>*)
00000000008caeb4 g     F .text	00000000000000a1              Alter_table_repair_partition_statement::execute(THD*)
00000000007f4156  w    F .text	0000000000000058              Item_func_md5::~Item_func_md5()
0000000000b6c024 g     F .text	00000000000000b6              ha_partition::compare_number_of_records(ha_partition*, unsigned int const*, unsigned int const*)
00000000006d1f46 g     F .text	00000000000001d0              partition_info::report_part_expr_error(bool)
0000000000659592  w    F .text	0000000000000046              Item_null::~Item_null()
00000000008cb4e2 g     F .text	000000000000059e              Alter_table_statement::execute(THD*)
00000000007f1c08  w    F .text	0000000000000011              Item_func_password::func_name() const
00000000007f1c80  w    F .text	0000000000000011              Item_func_des_encrypt::func_name() const
0000000001212760 g     O .data	0000000000000200              to_uni_cp1250_croatian_ci
0000000001071578  w    O .data.rel.ro	0000000000000298              vtable for Field_time
00000000013717c0 g     O .bss	0000000000000400              slave_skip_error_names
000000000089e848 g     F .text	0000000000000282              multi_delete::abort_result_set()
00000000010b21d0  w    O .data.rel.ro	00000000000003b8              vtable for Item_sum_xor
00000000007dceaa  w    F .text	0000000000000046              Item_func_units::~Item_func_units()
0000000000793982 g     F .text	0000000000000082              Item_cache_datetime::val_decimal(my_decimal*)
00000000007be0c8  w    F .text	0000000000000041              Create_func_connection_id::~Create_func_connection_id()
00000000006b4d19 g     F .text	00000000000000b8              check_db_name(st_mysql_lex_string*)
0000000000802928 g     F .text	00000000000000e4              Item_sum_max::add()
00000000007e2e72 g     F .text	0000000000000045              Item_row::check_cols(unsigned int)
00000000007f5d42 g     F .text	0000000000000065              Item_singlerow_subselect::check_cols(unsigned int)
0000000000604f26 g     F .text	00000000000001eb              multi_delete_precheck(THD*, TABLE_LIST*)
000000000055c0ce  w    F .text	000000000000001b              I_List<NAMED_ILINK>::~I_List()
00000000007c98ba g     F .text	00000000000000a9              Item_func_mod::result_precision()
0000000001219800 g     O .data	0000000000000100              to_upper_koi8u_bin
000000000136f140 g     O .bss	0000000000000070              LOCK_thd_remove
0000000000b60250 g     F .text	0000000000000472              ha_partition::drop_partitions(char const*)
000000000080e224 g     F .text	0000000000000023              week_mode(unsigned int)
0000000000848af4  w    F .text	0000000000000015              THD::need_binlog_invoker()
00000000005f1ad4  w    F .text	0000000000000025              List<Name_resolution_context>::push_front(Name_resolution_context*)
00000000007d0f58 g     F .text	000000000000019c              Item_master_pos_wait::val_int()
00000000008d92f3 g     F .text	00000000000004c3              _my_b_read_r
00000000008f0399 g     F .text	0000000000000253              getopt_ull_limit_value
000000000089a280  w    F .text	00000000000000b3              field_longlong::field_longlong(Item*, analyse*)
00000000005a295a g     F .text	0000000000000152              Locked_tables_list::unlink_all_closed_tables(THD*, st_mysql_lock*, unsigned long)
000000000084def8 g     F .text	0000000000000081              Delete_rows_log_event_old::do_exec_row(TABLE*)
00000000007db708  w    F .text	000000000000000f              Item_func_get_system_var::functype() const
0000000000853859  w    F .text	000000000000003e              my_decimal_string_length(my_decimal const*)
0000000000b7a64e g     F .text	00000000000000fc              _db_suicide_
000000000082d97e  w    F .text	0000000000000015              binlog_cache_data::get_prev_position()
00000000007c00d4  w    F .text	000000000000002d              Create_func_issimple::Create_func_issimple()
00000000006e6e3d g     F .text	000000000000002a              get_key_conn
0000000000606a00  w    F .text	000000000000000f              Item_result_field::is_result_field()
00000000007b47d6 g     F .text	0000000000000058              Create_func_instr::create(THD*, Item*, Item*)
00000000005caa80 g     F .text	000000000000005e              THD::set_mysys_var(st_my_thread_var*)
000000000054c88c g     F .text	00000000000000d5              kill_mysql()
00000000007dae46  w    F .text	0000000000000016              Item_func_bit_count::fix_length_and_dec()
000000000088a68e g     F .text	0000000000000104              sp_pcontext::find_variable(st_mysql_lex_string*, char)
000000000054be52 g     F .text	0000000000000072              Buffered_log::print()
0000000000924f1d g     F .text	0000000000001d5e              chk_data_link
000000000076753c  w    F .text	000000000000000f              Field_bit::result_type() const
00000000008f6cf0 g     F .text	0000000000000045              my_thread_var_dbug
00000000007f361c  w    F .text	0000000000000046              Item_func_decode::~Item_func_decode()
00000000005e9716  w    F .text	000000000000001a              I_List<Delayed_insert>::get()
00000000007b9fb8  w    F .text	0000000000000041              Item_dec_func::fix_length_and_dec()
00000000007c2fe2  w    F .text	0000000000000041              Create_func_y::~Create_func_y()
00000000007be388  w    F .text	000000000000002d              Create_func_cot::Create_func_cot()
000000000079a5e4  w    F .text	0000000000000046              Item_direct_view_ref::~Item_direct_view_ref()
000000000078d644 g     F .text	00000000000000d0              Item_float::print(String*, enum_query_type)
000000000056b00e  w    F .text	000000000000000b              sys_var::cleanup()
000000000082d8a8  w    F .text	0000000000000015              binlog_cache_data::changes_to_non_trans_temp_table()
0000000000000000       F *UND*	0000000000000000              sbrk@@GLIBC_2.2.5
000000000136fbe8 g     O .bss	0000000000000008              mysql_home_ptr
00000000012c8e80 g     O .data	00000000000000b0              my_charset_ucs2_hungarian_uca_ci
00000000010c33d0  w    O .data.rel.ro	0000000000000038              vtable for Stored_routine_creation_ctx
00000000010ef5c0 g     O .data	0000000000000058              table_ews_global_by_event_name::m_share
0000000000739b8c  w    F .text	0000000000000052              Item_func_left::Item_func_left(Item*, Item*)
000000000090d730 g     F .text	0000000000000066              table_events_waits_history::table_events_waits_history()
0000000000000000       F *UND*	0000000000000000              ferror@@GLIBC_2.2.5
00000000007b5a40 g     F .text	0000000000000058              Create_func_period_diff::create(THD*, Item*, Item*)
000000000056574e  w    F .text	0000000000000026              List_iterator_fast<Item>::List_iterator_fast(List<Item>&)
0000000000904b50 g     F .text	00000000000000f8              ha_perfschema::update_row(unsigned char const*, unsigned char*)
000000000078d824 g     F .text	000000000000004a              Item_hex_string::Item_hex_string(char const*, unsigned int)
00000000007bf09a  w    F .text	0000000000000041              Create_func_export_set::~Create_func_export_set()
0000000000812c24 g     F .text	00000000000000cf              Item_date_typecast::val_str(String*)
0000000001078c10  w    O .data.rel.ro	0000000000000360              vtable for Item_copy_float
00000000007a791e g     F .text	00000000000000a5              cmp_item_decimal::cmp(Item*)
00000000005ce7a0  w    F .text	0000000000000056              Key::~Key()
0000000000795d9c  w    F .text	0000000000000016              String::mark_as_const()
000000000090fe96  w    F .text	0000000000000041              table_file_instances::~table_file_instances()
00000000009523ec g     F .text	000000000000017a              _mi_pack_rec_unpack
000000000079adba  w    F .text	0000000000000046              Item_static_string_func::~Item_static_string_func()
0000000000b9c241 g     F .text	0000000000000064              my_atof
0000000000808e70  w    F .text	000000000000002b              Item_avg_field::func_name() const
00000000007e21b2  w    F .text	0000000000000046              Item_func_issimple::~Item_func_issimple()
0000000000798264  w    F .text	000000000000002b              Item_ref::~Item_ref()
00000000007bc468  w    F .text	0000000000000048              Item_func_spatial_decomp::Item_func_spatial_decomp(Item*, Item_func::Functype)
000000000091762b  w    F .text	000000000000003b              PFS_atomic::store_u32(unsigned int volatile*, unsigned int)
000000000082d690  w    F .text	0000000000000012              Silence_log_table_errors::message() const
00000000008eb21a g     F .text	0000000000000072              bitmap_invert
00000000007c165c  w    F .text	0000000000000026              Create_func_radians::~Create_func_radians()
000000000069899c  w    F .text	0000000000000052              Trigger_creation_ctx::~Trigger_creation_ctx()
0000000001370768 g     O .bss	0000000000000004              key_LOCK_connection_count
000000000077e756 g     F .text	0000000000000066              Item::val_decimal_from_int(my_decimal*)
000000000080a714  w    F .text	0000000000000046              Item_sum_max::~Item_sum_max()
00000000008bd567 g     F .text	00000000000000f6              my_xpath_function(char const*, char const*)
0000000001075c80  w    O .data.rel.ro	0000000000000388              vtable for Item_cache
00000000005cb27d g     F .text	0000000000000053              get_locked_tables_mode_name(enum_locked_tables_mode)
000000000090e082  w    F .text	0000000000000040              pfs_lock::begin_optimistic_lock(pfs_lock*)
000000000082403a g     F .text	0000000000000562              MYSQL_BIN_LOG::reset_logs(THD*)
00000000007455ef g     F .text	000000000000052e              mysql_options
00000000005cf52c  w    F .text	0000000000000031              Query_arena::strmake(char const*, unsigned long)
00000000007640bc  w    F .text	000000000000001e              get_enum_pack_length(int)
00000000008c938c g     F .text	00000000000004d2              Event_db_repository::update_event(THD*, Event_parse_data*, st_mysql_lex_string*, st_mysql_lex_string*)
00000000012c8dc0 g     O .data	00000000000000b0              my_charset_ucs2_esperanto_uca_ci
00000000007bada8  w    F .text	0000000000000038              Item_func_udf_decimal::Item_func_udf_decimal(st_udf_func*)
00000000007d9fa2  w    F .text	0000000000000050              Item_result_field::Item_result_field(THD*, Item_result_field*)
000000000070ed0e  w    F .text	0000000000000026              Sys_var_mybool::~Sys_var_mybool()
0000000000870932 g     F .text	0000000000000058              QUICK_GROUP_MIN_MAX_SELECT::update_min_result()
00000000006f9eda  w    F .text	0000000000000046              Analyze_table_statement::~Analyze_table_statement()
00000000005ce6b0  w    F .text	000000000000002d              Protocol_binary::Protocol_binary()
00000000010916c8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_units
00000000006d1dc9 g     F .text	000000000000017d              check_partition_dirs(partition_info*)
000000000059b41e  w    F .text	000000000000001a              List<st_lex_user>::head_ref()
000000000067f39f g     F .text	000000000000017d              deactivate_ddl_log_entry(unsigned int)
000000000081651a  w    F .text	0000000000000046              Item_date_func::~Item_date_func()
000000000061c286  w    F .text	000000000000002d              List<Ed_row>::push_back(Ed_row*, st_mem_root*)
000000000066211b g     F .text	000000000000009a              append_definer(THD*, String*, st_mysql_lex_string const*, st_mysql_lex_string const*)
00000000005ce594  w    F .text	000000000000001b              Ha_trx_info::Ha_trx_info()
000000000109a918  w    O .data.rel.ro	0000000000000398              vtable for Item_func_connection_id
000000000070c9ae  w    F .text	0000000000000025              Sys_var_struct::check_update_type(Item_result)
00000000007da762  w    F .text	0000000000000046              Item_func_additive_op::~Item_func_additive_op()
0000000001386418 g     O .bss	0000000000000008              Create_func_date_format::s_singleton
000000000081717a  w    F .text	0000000000000038              Item_func_get_format::fix_length_and_dec()
00000000007a44b4 g     F .text	00000000000000f4              Item_func_nullif::fix_length_and_dec()
00000000005d09f8  w    F .text	0000000000000026              List<Alter_column>::List(List<Alter_column> const&)
00000000005d81e6 g     F .text	00000000000001f9              MYSQL_ERROR::MYSQL_ERROR(st_mem_root*)
000000000059887c  w    F .text	0000000000000117              handler::ha_rnd_init(bool)
000000000082d5c6  w    F .text	000000000000002b              Stop_log_event::~Stop_log_event()
00000000009827a0  w    F .text	0000000000000046              ha_heap::~ha_heap()
00000000007f2f84  w    F .text	000000000000002b              Item_func_charset::~Item_func_charset()
00000000007ddbda  w    F .text	000000000000002b              Item_func_minus::~Item_func_minus()
00000000007567b4 g     F .text	000000000000004f              Field_newdate::sort_string(unsigned char*, unsigned int)
00000000007f4814 g     F .text	000000000000006a              Item_subselect::select_transformer(JOIN*)
000000000088affe  w    F .text	0000000000000011              sp_pcontext::get_num_case_exprs() const
0000000000557042 g     F .text	000000000000027a              is_secure_file_path(char*)
000000000073ab26  w    F .text	000000000000002d              Item_func_now_local::Item_func_now_local()
00000000010ca0d0  w    O .data.rel.ro	0000000000000028              vtable for PFS_readonly_acl
000000000088d26c g     F .text	0000000000000043              Geometry::create_by_typeid(Geometry_buffer*, int)
0000000001219700 g     O .data	0000000000000100              to_lower_koi8u_bin
00000000005e8ccc  w    F .text	000000000000000f              select_create::can_rollback_data()
000000000065c770  w    F .text	000000000000001b              List_iterator<TABLE_LIST>::rewind()
000000000056b564  w    F .text	0000000000000046              set_var_user::~set_var_user()
00000000009642c5 g     F .text	00000000000000ef              _mi_ck_write_tree
000000000077bd98  w    F .text	000000000000000f              handler::set_auto_partitions(partition_info*)
000000000080456e g     F .text	000000000000005d              Item_sum_hybrid::update_field()
0000000000847b6e g     F .text	000000000000004e              Delete_rows_log_event::do_after_row_operations(Slave_reporting_capability const*, int)
00000000007b4d6e g     F .text	0000000000000050              Create_func_length::create(THD*, Item*)
0000000000819841 g     F .text	00000000000000fc              key_cmp(st_key_part_info*, unsigned char const*, unsigned int)
000000000081dd30 g     F .text	00000000000000c3              LOGGER::general_log_print(THD*, enum_server_command, char const*, __va_list_tag*)
0000000000664d87 g     F .text	000000000000050d              get_lookup_value(THD*, Item_func*, TABLE_LIST*, st_lookup_field_values*)
00000000007b0692  w    F .text	000000000000006a              Item_equal::~Item_equal()
000000000061b7f8 g     F .text	000000000000005a              Protocol_local::store_longlong(long long, bool)
00000000007ae63a  w    F .text	0000000000000046              Item_func_not_all::~Item_func_not_all()
00000000007dc112  w    F .text	0000000000000058              Item_func_is_used_lock::~Item_func_is_used_lock()
000000000090f626 g     F .text	00000000000000c2              table_ews_global_by_event_name::make_instr_row(PFS_instr_class*)
0000000001386710 g     O .bss	0000000000000008              Create_func_sin::s_singleton
00000000007bc468  w    F .text	0000000000000048              Item_func_spatial_decomp::Item_func_spatial_decomp(Item*, Item_func::Functype)
00000000007ecd70 g     F .text	00000000000000f0              Item_func_make_set::transform(Item* (Item::*)(unsigned char*), unsigned char*)
00000000006ac07e g     F .text	000000000000004d              Default_object_creation_ctx::Default_object_creation_ctx(charset_info_st*, charset_info_st*)
000000000070c29e  w    F .text	00000000000000f9              Sys_var_session_special::Sys_var_session_special(char const*, char const*, int, CMD_LINE, unsigned long long, unsigned long long, unsigned long long, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(THD*, set_var*), unsigned long long (*)(THD*), char const*)
000000000090b03e g     F .text	0000000000000081              PFS_engine_table::set_field_varchar_utf8(Field*, char const*, unsigned int)
0000000001081418  w    O .data.rel.ro	0000000000000048              vtable for in_datetime
000000000095fe91 g     F .text	0000000000000c02              mi_update
00000000005c0b1d g     F .text	0000000000000034              thd_connection_has_data(THD*)
000000000069a917 g     F .text	000000000000053e              mysql_drop_function(THD*, st_mysql_lex_string const*)
00000000007e3328  w    F .text	000000000000000f              Item_row::result_type() const
0000000000644f25 g     F .text	00000000000006b8              create_virtual_tmp_table(THD*, List<Create_field>&)
00000000008bba22 g     F .text	00000000000000b3              Item_nodeset_func_selfbyname::val_nodeset(String*)
0000000000852378  w    F .text	000000000000000f              Write_rows_log_event_old::get_type_code()
0000000000881422 g     F .text	0000000000000d26              sp_head::execute(THD*, bool)
00000000005cfd86  w    F .text	0000000000000046              select_subselect::~select_subselect()
000000000077e59c g     F .text	000000000000006d              Item::val_string_from_int(String*)
00000000005595c6  w    F .text	000000000000002d              File_parser_dummy_hook::File_parser_dummy_hook()
00000000007c6120 g     F .text	00000000000002bb              Item_func_numhybrid::val_real()
00000000008c6a08 g     F .text	00000000000001b0              Event_queue::dbug_dump_queue(long)
000000000079aa49  w    F .text	0000000000000006              non-virtual thunk to Item_param::~Item_param()
000000000075c76e g     F .text	000000000000018d              Field_blob::unpack(unsigned char*, unsigned char const*, unsigned int, bool)
00000000007f29da  w    F .text	0000000000000058              Item_func_compress::~Item_func_compress()
00000000007599fa g     F .text	0000000000000231              Field_varstring::val_int()
00000000013747c0 g     O .bss	0000000000000060              my_locale_it_CH
0000000000659604  w    F .text	000000000000003e              Item_null_result::Item_null_result()
00000000007b62a4 g     F .text	0000000000000050              Create_func_sin::create(THD*, Item*)
000000000070c41e  w    F .text	0000000000000033              Sys_var_session_special::global_save_default(THD*, set_var*)
000000000056581a  w    F .text	0000000000000041              Protocol_binary::~Protocol_binary()
000000000065c7d8  w    F .text	000000000000001d              List_iterator_fast<Create_field>::operator++(int)
000000000090f322  w    F .text	0000000000000041              table_all_instr::~table_all_instr()
0000000000566e2a  w    F .text	0000000000000013              Item::change_context_processor(unsigned char*)
00000000006f5284  w    F .text	0000000000000028              MDL_wait_for_graph_visitor::MDL_wait_for_graph_visitor()
0000000000764990  w    F .text	000000000000002b              Field::get_geometry_type()
00000000007f5a8e g     F .text	000000000000009f              Item_singlerow_subselect::store(unsigned int, Item*)
0000000000917741 g     F .text	0000000000000022              pfs_free(void*)
00000000010eee20 g     O .data	0000000000000008              my_default_record_cache_size
00000000006c1b3a  w    F .text	0000000000000046              Time_zone::~Time_zone()
0000000001370778 g     O .bss	0000000000000004              key_LOCK_delayed_status
000000000065c730  w    F .text	0000000000000026              List<Item>::disjoin(List<Item>*)
0000000001088530  w    O .data.rel.ro	0000000000000030              vtable for Create_func_abs
0000000000559ffd g     F .text	00000000000001ca              net_realloc
00000000007b1016  w    F .text	0000000000000046              Item_func_nullif::~Item_func_nullif()
000000000092069a  w    F .text	0000000000000015              ha_myisam::table_flags() const
00000000006f2260 g     F .text	000000000000004e              MDL_wait::get_status()
00000000007f3118  w    F .text	000000000000006a              Item_func_lpad::~Item_func_lpad()
00000000009123b0 g     F .text	0000000000000071              table_mutex_instances::table_mutex_instances()
000000000120d8c0 g     O .data	0000000000000200              to_uni_cp1250_general_ci
00000000010f15b0 g     O .data	0000000000000008              myisam_mmap_size
00000000007c2d8a  w    F .text	0000000000000041              Create_func_within::~Create_func_within()
0000000000955093 g     F .text	0000000000000041              calc_pack_length
0000000000790c12 g     F .text	0000000000000069              Item_direct_ref::get_date(st_mysql_time*, unsigned int)
000000000077bd58  w    F .text	000000000000000f              handler::referenced_by_foreign_key()
00000000007db136  w    F .text	000000000000000f              Item_udf_func::not_null_tables() const
0000000000764e28  w    F .text	000000000000000f              Field_num::derivation() const
0000000000babb22 g     F .text	000000000000012f              my_regerror
00000000010873f0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_makedate
000000000065ad1a  w    F .text	000000000000011f              JOIN::JOIN(THD*, List<Item>&, unsigned long long, select_result*)
0000000000659642  w    F .text	0000000000000018              Item_null_result::is_result_field()
00000000005f1a48  w    F .text	000000000000001b              List<TABLE_LIST>::List()
000000000080f810 g     F .text	0000000000000053              Item_func_curtime_utc::store_now_in_TIME(st_mysql_time*)
0000000000b6010e g     F .text	0000000000000141              ha_partition::create(char const*, TABLE*, st_ha_create_information*)
000000000080f7a8 g     F .text	0000000000000068              Item_func_curtime_local::store_now_in_TIME(st_mysql_time*)
0000000001386690 g     O .bss	0000000000000008              Create_func_pi::s_singleton
000000000075d2ea g     F .text	0000000000000031              Field_enum::store(double)
000000000082cb92  w    F .text	0000000000000017              MYSQL_BIN_LOG::get_sync_period()
0000000000739f78  w    F .text	0000000000000053              Item_func_user::Item_func_user()
000000000055bb46 g     F .text	00000000000000c4              my_net_set_write_timeout
00000000007ddab0  w    F .text	0000000000000046              Item_func_div::~Item_func_div()
00000000008c2990 g     F .text	0000000000000030              table_mapping::~table_mapping()
00000000007c194a  w    F .text	0000000000000026              Create_func_row_count::~Create_func_row_count()
000000000078fede g     F .text	0000000000000067              Item_ref::is_null_result()
00000000007dc968  w    F .text	000000000000002b              Item_func_udf_decimal::~Item_func_udf_decimal()
00000000006aa7ab g     F .text	000000000000009d              check_word(st_typelib*, char const*, char const*, char const**)
0000000000569854 g     F .text	000000000000017d              sys_var::update(THD*, set_var*)
00000000007bf4b4  w    F .text	0000000000000041              Create_func_from_days::~Create_func_from_days()
0000000000000000       F *UND*	0000000000000000              adler32
00000000007bec52  w    F .text	000000000000002d              Create_func_elt::Create_func_elt()
0000000000763ec8  w    F .text	000000000000007d              my_decimal_length_to_precision(unsigned int, unsigned int, bool)
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000000000       F *UND*	0000000000000000              setuid@@GLIBC_2.2.5
000000000091c4a0 g     F .text	00000000000006ac              ha_myisam::check(THD*, st_ha_check_opt*)
000000000081573e  w    F .text	0000000000000011              Item_func_period_add::func_name() const
00000000008f5f80 g     F .text	0000000000000346              my_thread_global_reinit
0000000000885e6a g     F .text	0000000000000306              sp_instr_stmt::execute(THD*, unsigned int*)
000000000089ac6c  w    F .text	000000000000002b              field_ulonglong::~field_ulonglong()
0000000001355b00 g     O .data	00000000000000b0              my_charset_ujis_japanese_ci
00000000007aa492 g     F .text	0000000000000105              Item_is_not_null_test::update_used_tables()
00000000005c41f4 g     F .text	00000000000000dd              THD::add_changed_table(TABLE*)
00000000007b2aea g     F .text	0000000000000050              Create_func_bit_length::create(THD*, Item*)
00000000005c3b2a g     F .text	000000000000006c              THD::restore_globals()
0000000000b5c7e2 g     F .text	00000000000000cb              ha_tina::extra(ha_extra_function)
000000000081859c  w    F .text	000000000000002b              Item_func_to_days::~Item_func_to_days()
0000000000599bd8  w    F .text	000000000000004e              ACL_PROXY_USER::set_user(st_mem_root*, char const*)
00000000006ba66e g     F .text	0000000000000148              TABLE::update_const_key_parts(Item*)
00000000007bc310  w    F .text	0000000000000040              Item_func_geometry_from_wkb::Item_func_geometry_from_wkb(Item*, Item*)
00000000007528d2 g     F .text	000000000000023e              Field_timestamp::store(char const*, unsigned int, charset_info_st*)
000000000106cdc8  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_proxy_user
00000000008022a8 g     F .text	000000000000003e              Item_sum_hybrid::clear()
0000000000680a46 g     F .text	00000000000012a3              mysql_rm_table_no_locks(THD*, TABLE_LIST*, bool, bool, bool, bool)
00000000008e7fe6 g     F .text	00000000000000ae              my_tmpdir
0000000000000000       F *UND*	0000000000000000              alarm@@GLIBC_2.2.5
00000000012b6a80 g     O .data	0000000000000600              page016data
000000000073c2d2  w    F .text	000000000000004a              sp_instr_cpop::sp_instr_cpop(unsigned int, sp_pcontext*, unsigned int)
0000000000849360  w    F .text	0000000000000035              Create_file_log_event::is_valid() const
00000000007bdf9c  w    F .text	0000000000000041              Create_func_concat::~Create_func_concat()
0000000000817a94  w    F .text	0000000000000046              Item_func_sec_to_time::~Item_func_sec_to_time()
0000000000808a2e  w    F .text	0000000000000055              Item_sum_num::Item_sum_num(THD*, Item_sum_num*)
0000000000796bee  w    F .text	0000000000000014              Item_splocal::get_var_idx() const
000000000138cda0 g     O .bss	0000000000000008              mutex_class_max
00000000007a6ebe g     F .text	000000000000009a              in_decimal::set(unsigned int, Item*)
0000000000610af2 g     F .text	000000000000009d              sys_var_pluginvar::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000013708b8 g     O .bss	0000000000000004              key_file_frm
0000000000840874 g     F .text	000000000000000f              Execute_load_query_log_event::get_post_header_size_for_derived()
000000000073b374  w    F .text	000000000000003d              Sql_statement::Sql_statement(LEX*)
00000000005646ca g     F .text	0000000000000067              Protocol_binary::store(double, unsigned int, String*)
00000000007db1ae  w    F .text	000000000000002b              Item_udf_func::~Item_udf_func()
000000000080fa8a g     F .text	000000000000004f              Item_func_now::save_in_field(Field*, bool)
0000000000b80d49 g     F .text	0000000000000054              my_wildcmp_mb
0000000001387f20 g     O .bss	0000000000004000              all_charsets
0000000000605c8f g     F .text	00000000000000c7              get_default_definer(THD*, st_lex_user*)
00000000005b0872  w    F .text	000000000000002d              MDL_deadlock_discovery_repair_handler::MDL_deadlock_discovery_repair_handler()
000000000073c31c  w    F .text	000000000000004a              sp_instr_copen::sp_instr_copen(unsigned int, sp_pcontext*, unsigned int)
00000000010ddbc0 g     O .data	0000000000000118              collation_fields_info
000000000078e8b8 g     F .text	000000000000003d              Item_field::send(Protocol*, String*)
00000000007dad84  w    F .text	0000000000000011              Item_func_coercibility::func_name() const
000000000120f760 g     O .data	0000000000000200              to_uni_cp866_general_ci
000000000073c770  w    F .text	0000000000000038              Truncate_statement::Truncate_statement(LEX*)
000000000070e626  w    F .text	0000000000000026              Sys_var_unsigned<unsigned long long, 8ul, (enum_mysql_show_type)16>::~Sys_var_unsigned()
00000000008c4b94 g     F .text	0000000000000052              Event_scheduler::is_running()
00000000007bddac  w    F .text	000000000000002d              Create_func_char_length::Create_func_char_length()
0000000000809388  w    F .text	0000000000000040              Item_sum_std::Item_sum_std(THD*, Item_sum_std*)
000000000088b010  w    F .text	000000000000001a              sp_pcontext::max_handler_index()
000000000059318e g     F .text	000000000000035f              fill_effective_table_privileges(THD*, st_grant_info*, char const*, char const*)
0000000000b5b7c1 g     F .text	0000000000000026              tina_get_status
000000000085e362 g     F .text	00000000000000a0              ror_intersect_cpy(ROR_INTERSECT_INFO*, ROR_INTERSECT_INFO const*)
00000000007c1a34  w    F .text	0000000000000041              Create_func_rtrim::~Create_func_rtrim()
00000000007659c2  w    F .text	000000000000007a              Field_longlong::Field_longlong(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, bool, bool)
00000000008c0f1e  w    F .text	0000000000000058              Item_nodeset_func::fix_length_and_dec()
000000000079a73a  w    F .text	0000000000000046              Item_ref_null_helper::~Item_ref_null_helper()
000000000076515e  w    F .text	000000000000000f              Field_real::size_of() const
00000000006f2b5e g     F .text	0000000000000026              MDL_wait_for_subgraph::~MDL_wait_for_subgraph()
00000000010ad370  w    O .data.rel.ro	0000000000000398              vtable for Item_func_aes_encrypt
00000000012191e0 g     O .data	0000000000000100              to_lower_koi8r_bin
000000000081761e  w    F .text	000000000000002b              Item_func_makedate::~Item_func_makedate()
00000000006c1c5e  w    F .text	0000000000000056              Time_zone_offset::~Time_zone_offset()
000000000057a1f6  w    F .text	000000000000005e              THD::set_active_vio(st_vio*)
00000000008933a6  w    F .text	000000000000001d              Geometry::Geometry()
000000000077bf86  w    F .text	000000000000000b              handler::cond_pop()
00000000007bbe80  w    F .text	0000000000000042              Item_func_like_range_max::Item_func_like_range_max(Item*, Item*)
00000000007c2ca0  w    F .text	0000000000000026              Create_func_weekday::~Create_func_weekday()
00000000008ecb57 g     F .text	00000000000000a4              my_error_unregister
0000000000565732  w    F .text	000000000000001b              List<Item>::List()
000000000070eb94  w    F .text	0000000000000041              Sys_var_dbug::~Sys_var_dbug()
0000000000559236  w    F .text	0000000000000041              Ne_creator::~Ne_creator()
0000000001212b80 g     O .data	0000000000000100              to_upper_latin1_general_ci
0000000000708890  w    F .text	0000000000000024              CMD_LINE::CMD_LINE(get_opt_arg_type, int)
00000000008c0f88  w    F .text	000000000000007c              Item_nodeset_func::~Item_nodeset_func()
0000000000558dfc  w    F .text	0000000000000011              String::length() const
00000000007e15ba  w    F .text	0000000000000011              Item_func_geometry_from_text::func_name() const
00000000007bc388  w    F .text	0000000000000038              Item_func_as_wkb::Item_func_as_wkb(Item*)
00000000005d9cc4  w    F .text	000000000000001b              List<MYSQL_ERROR>::List()
000000000087e966  w    F .text	0000000000000041              Lock_db_routines_error_handler::~Lock_db_routines_error_handler()
000000000073c770  w    F .text	0000000000000038              Truncate_statement::Truncate_statement(LEX*)
0000000000558910  w    F .text	0000000000000035              ilink::ilink()
0000000000791b72 g     F .text	00000000000000a9              Item_trigger_field::setup_field(THD*, TABLE*, st_grant_info*)
000000000090f4c0  w    F .text	0000000000000026              table_events_waits_summary_by_thread_by_event_name::~table_events_waits_summary_by_thread_by_event_name()
000000000063bb4c g     F .text	00000000000002b2              JOIN::cleanup(bool)
000000000081df3c g     F .text	00000000000000bb              LOGGER::init_general_log(unsigned int)
0000000001372be0 g     O .bss	0000000000000038              COND_manager
000000000089355e  w    F .text	0000000000000016              Geometry::geometry_n(unsigned int, String*) const
0000000001087c90  w    O .data.rel.ro	0000000000000030              vtable for Create_func_equals
00000000008c63ba g     F .text	000000000000016f              Event_queue::drop_matching_events(THD*, st_mysql_lex_string, bool (*)(st_mysql_lex_string, Event_basic*))
0000000000560c36 g     F .text	0000000000000233              Protocol::net_store_data(unsigned char const*, unsigned long, charset_info_st*, charset_info_st*)
00000000012193e0 g     O .data	0000000000000200              to_uni_koi8r_bin
00000000007dc21a  w    F .text	0000000000000046              Item_func_bit_xor::~Item_func_bit_xor()
00000000007b1472  w    F .text	0000000000000046              Item_func_ge::~Item_func_ge()
0000000000797d70  w    F .text	000000000000003b              Item_ref::filed_for_view_update()
000000000056745c  w    F .text	00000000000000e8              Item_string::Item_string(char const*, unsigned int, charset_info_st*, Derivation, unsigned int)
00000000005bb158 g     F .text	000000000000025f              Query_cache::pack_cache()
00000000007c2718  w    F .text	0000000000000041              Create_func_touches::~Create_func_touches()
00000000006b9d96 g     F .text	0000000000000787              TABLE_LIST::process_index_hints(TABLE*)
000000000059ff88 g     F .text	000000000000019d              drop_temporary_table(THD*, TABLE_LIST*, bool*)
000000000073859c  w    F .text	0000000000000040              Item_func_plus::Item_func_plus(Item*, Item*)
00000000008a080a g     F .text	0000000000000054              string_ptr_cmp
0000000000910928  w    F .text	0000000000000026              table_file_summary_by_instance::~table_file_summary_by_instance()
00000000007e805c g     F .text	00000000000000d0              Item_func_ucase::fix_length_and_dec()
000000000090dfb6  w    F .text	000000000000002c              PFS_double_index::set_after(PFS_double_index const*)
0000000000765c90  w    F .text	000000000000000f              Field_float::pack_length() const
00000000007af1cc  w    F .text	0000000000000040              in_decimal::create_item()
0000000000604354 g     F .text	0000000000000032              add_join_natural(TABLE_LIST*, TABLE_LIST*, List<String>*, st_select_lex*)
000000000090d456 g     F .text	0000000000000033              table_events_waits_current::reset_position()
0000000000608016  w    F .text	000000000000004c              SQL_I_List<st_order>::link_in_list(st_order*, st_order**)
00000000007fa356 g     F .text	00000000000000b9              subselect_single_select_engine::fix_length_and_dec(Item_cache**)
00000000007bac16  w    F .text	000000000000004b              Item_udf_func::Item_udf_func(st_udf_func*)
000000000078482e g     F .text	000000000000003a              Item_int::val_decimal(my_decimal*)
00000000007fdc3e g     F .text	0000000000000223              Item_sum::create_tmp_field(bool, TABLE*, unsigned int)
0000000000832250 g     F .text	000000000000025f              Log_event::write_header(st_io_cache*, unsigned long)
00000000007b0350  w    F .text	000000000000000b              Item_cond_xor::top_level_item()
00000000007f1f4c  w    F .text	0000000000000011              Item_func_user::fully_qualified_func_name() const
00000000007a0706 g     F .text	00000000000003c1              Item_in_optimizer::fix_left(THD*, Item**)
00000000007bdcf0  w    F .text	0000000000000026              Create_func_ceiling::~Create_func_ceiling()
0000000000809728  w    F .text	000000000000003d              Item_sum_bit::fix_length_and_dec()
000000000078b8dc g     F .text	000000000000008e              Item::field_type() const
000000000120f340 g     O .data	0000000000000101              ctype_cp866_general_ci
000000000136cc50 g     O .bss	0000000000000001              opt_old_style_user_limits
0000000000b7167a  w    F .text	000000000000001b              List_iterator_fast<partition_element>::rewind()
000000000073b9d2  w    F .text	000000000000004d              set_var_password::set_var_password(st_lex_user*, char*)
0000000000888f8a  w    F .text	0000000000000027              sp_instr::opt_mark(sp_head*, List<sp_instr>*)
00000000013708a4 g     O .bss	0000000000000004              key_file_dbopt
000000000059b0a4  w    F .text	000000000000001b              List_iterator<st_lex_user>::remove()
0000000001087ae0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_from_days
000000000080a12e  w    F .text	0000000000000022              Item_func_group_concat::change_context_processor(unsigned char*)
0000000000848cd4  w    F .text	0000000000000020              Log_event::set_relay_log_event()
0000000000659444  w    F .text	000000000000002b              Copy_field::~Copy_field()
0000000000000000       F *UND*	0000000000000000              __cxa_pure_virtual@@CXXABI_1.3
00000000007995d8  w    F .text	000000000000000f              Item_cache_decimal::result_type() const
000000000091e712 g     F .text	0000000000000021              ha_myisam::indexes_are_disabled()
0000000000908535  w    F .text	00000000000000bf              randomized_index(void const*, unsigned int)
000000000080126e g     F .text	000000000000002a              Item_sum_avg::clear()
00000000008a0a8d g     F .text	0000000000000128              prepare_simple_select(THD*, Item*, TABLE*, int*)
0000000000000000       F *UND*	0000000000000000              mkstemp64@@GLIBC_2.2.5
00000000007be54a  w    F .text	000000000000002d              Create_func_date_format::Create_func_date_format()
000000000059b5de  w    F .text	0000000000000027              SQL_I_List<Sroutine_hash_entry>::SQL_I_List()
0000000000679f06 g     F .text	0000000000000105              String::append(st_io_cache*, unsigned int)
0000000000855fbd g     F .text	0000000000000095              TIME_to_ulonglong_datetime
00000000007dacfa  w    F .text	0000000000000015              Item_func_units::func_name() const
000000000090b334 g     F .text	0000000000000034              PFS_unknown_acl::check(unsigned long, unsigned long*) const
0000000000567962  w    F .text	000000000000001e              THD::set_row_count_func(long long)
00000000006f60b0  w    F .text	0000000000000041              MDL_ticket::~MDL_ticket()
000000000136cbf5 g     O .bss	0000000000000001              server_id_supplied
00000000009676ad g     F .text	0000000000000305              rtree_add_key
00000000007d2ff8 g     F .text	0000000000000160              user_var_entry::val_str(char*, String*, unsigned int)
00000000008d517d g     F .text	000000000000005e              list_delete
0000000000889ca4  w    F .text	0000000000000026              List_iterator<MYSQL_ERROR>::List_iterator(List<MYSQL_ERROR>&)
0000000000826cac g     F .text	000000000000003e              MYSQL_BIN_LOG::is_query_in_union(THD*, long long)
00000000007d8058 g     F .text	00000000000002ae              Item_func_match::val_real()
00000000007c2598  w    F .text	0000000000000026              Create_func_timediff::~Create_func_timediff()
000000000090c0ba  w    F .text	0000000000000041              PFS_truncatable_acl::~PFS_truncatable_acl()
00000000008da04c g     F .text	00000000000001cf              my_b_append
00000000008022e6 g     F .text	00000000000000df              Item_sum_hybrid::val_real()
00000000008cb4b6  w    F .text	000000000000002b              Alter_table_truncate_partition_statement::~Alter_table_truncate_partition_statement()
00000000007ae9e0  w    F .text	000000000000000f              Item_func_ne::functype() const
0000000000000000       F *UND*	0000000000000000              qsort@@GLIBC_2.2.5
00000000005aefaa  w    F .text	000000000000007b              MDL_context::mdl_savepoint()
0000000000815a52  w    F .text	0000000000000011              Item_func_monthname::func_name() const
0000000000b612cc g     F .text	0000000000000082              ha_partition::repair(THD*, st_ha_check_opt*)
00000000006bb134  w    F .text	0000000000000026              List<String>::concat(List<String>*)
000000000089c0ac  w    F .text	0000000000000046              Select_materialize::~Select_materialize()
00000000005f1fdb g     F .text	000000000000004b              free_list(I_List<i_string>*)
000000000079a572  w    F .text	0000000000000046              Item_outer_ref::~Item_outer_ref()
000000000086f5d6 g     F .text	00000000000001cd              QUICK_GROUP_MIN_MAX_SELECT::reset()
000000000136cd58 g     O .bss	0000000000000008              query_cache_size
00000000009550d4 g     F .text	0000000000000258              _mi_fetch_keypage
00000000007bdbea  w    F .text	000000000000002d              Create_func_bit_length::Create_func_bit_length()
000000000075398c g     F .text	0000000000000097              Field_time::store_time(st_mysql_time*, enum_mysql_timestamp_type)
0000000001095bb0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_sqrt
00000000005cf920  w    F .text	0000000000000066              THD::st_transactions::st_transactions()
000000000078bc16 g     F .text	00000000000002b5              Item::make_string_field(TABLE*)
00000000007e14d8  w    F .text	000000000000002b              Item_str_ascii_func::~Item_str_ascii_func()
0000000000766dfe  w    F .text	000000000000000f              Field_blob::type() const
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
00000000007991fe  w    F .text	0000000000000012              Item_cache::allocate(unsigned int)
0000000000766db6  w    F .text	000000000000000f              Field_varstring::real_type() const
00000000006f0a24  w    F .text	000000000000001b              Binlog_relay_IO_delegate::Binlog_relay_IO_delegate()
00000000006f47ee g     F .text	00000000000000ce              MDL_context::release_all_locks_for_name(MDL_ticket*)
00000000009133ba g     F .text	0000000000000028              table_threads::create()
0000000001370780 g     O .bss	0000000000000004              key_LOCK_gdl
00000000007a9026 g     F .text	000000000000007d              Item_cond::Item_cond(THD*, Item_cond*)
000000000082299e g     F .text	0000000000000257              MYSQL_BIN_LOG::open_index_file(char const*, char const*, bool)
000000000090eae2 g     F .text	0000000000000046              table_events_waits_summary_by_thread_by_event_name::make_cond_row(PFS_thread*, PFS_cond_class*)
00000000007dd876  w    F .text	0000000000000046              Item_func_ln::~Item_func_ln()
0000000000802b3a g     F .text	0000000000000050              Item_sum_xor::copy_or_same(THD*)
000000000091be2c g     F .text	000000000000005a              ha_myisam::clone(char const*, st_mem_root*)
00000000007dcb80  w    F .text	0000000000000058              Item_func_ord::~Item_func_ord()
00000000007c1ee4  w    F .text	0000000000000041              Create_func_space::~Create_func_space()
0000000000849818  w    F .text	000000000000000f              Update_rows_log_event::get_type_code()
0000000000590760 g     F .text	0000000000000440              sp_revoke_privileges(THD*, char const*, char const*, bool)
000000000097f541 g     F .text	000000000000016e              _mi_ft_parse
000000000090f38a  w    F .text	0000000000000036              pos_events_waits_summary_by_thread_by_event_name::pos_events_waits_summary_by_thread_by_event_name()
00000000010c0060  w    O .data.rel.ro	0000000000000398              vtable for Item_func_to_seconds
0000000000ba3f00 g     F .text	0000000000000043              strfill
0000000000765a4c  w    F .text	000000000000000f              Field_longlong::type() const
0000000000905810  w    F .text	00000000000000a1              handler::~handler()
000000000070ed76  w    F .text	0000000000000026              PolyLock_rwlock::~PolyLock_rwlock()
00000000008790cc g     F .text	000000000000014d              Proc_table_intact::report_error(unsigned int, char const*, ...)
0000000000ba54d9 g     F .text	000000000000001e              my_xml_set_leave_handler
00000000005f0c00  w    F .text	00000000000000a8              st_select_lex_unit::st_select_lex_unit()
0000000000910030 g     F .text	0000000000000021              table_file_summary_by_event_name::reset_position()
00000000010ee8f1 g     O .data	0000000000000001              wild_one
000000000070d6ca  w    F .text	0000000000000223              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::Sys_var_unsigned(char const*, char const*, int, long, unsigned long, CMD_LINE, unsigned long, unsigned long, unsigned long, unsigned int, PolyLock*, sys_var::binlog_status_enum, bool (*)(sys_var*, THD*, set_var*), bool (*)(sys_var*, THD*, enum_var_type), char const*, int)
00000000005ac67b g     F .text	00000000000009be              insert_fields(THD*, Name_resolution_context*, char const*, char const*, List_iterator<Item>*, bool)
00000000005af556  w    F .text	0000000000000046              Field_iterator::~Field_iterator()
0000000000812a14 g     F .text	0000000000000096              Item_time_typecast::val_int()
0000000000928335 g     F .text	00000000000002df              movepoint
00000000005671ea  w    F .text	000000000000002b              Item_num::~Item_num()
00000000007b138e  w    F .text	0000000000000046              Item_func_le::~Item_func_le()
00000000006ed48e g     F .text	0000000000000133              Signal_statement::execute(THD*)
0000000001370804 g     O .bss	0000000000000004              key_rwlock_LOCK_sys_init_slave
0000000000800eb6 g     F .text	000000000000007d              Item_sum_count::cleanup()
00000000010880e0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_conv
00000000007bd866  w    F .text	000000000000002d              Create_func_as_wkt::Create_func_as_wkt()
00000000007a9b4a g     F .text	000000000000011b              Item_cond::update_used_tables()
0000000000798360  w    F .text	00000000000000b3              Item_outer_ref::Item_outer_ref(Name_resolution_context*, Item_field*)
00000000007506a8 g     F .text	0000000000000201              Field_longlong::store(double)
0000000000598a9e  w    F .text	0000000000000026              Table_check_intact::~Table_check_intact()
0000000000796672  w    F .text	0000000000000038              Hybrid_type_traits_decimal::val_decimal(Hybrid_type*, my_decimal*) const
000000000057a8ce  w    F .text	0000000000000013              Log_event::write_data_body(st_io_cache*)
00000000007e1b4c  w    F .text	0000000000000023              Item_func_y::fix_length_and_dec()
00000000005e8878  w    F .text	0000000000000016              TABLEOP_HOOKS::do_postlock(TABLE**, unsigned int)
00000000008487be g     F .text	000000000000008d              Heartbeat_log_event::Heartbeat_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000005a4b5d g     F .text	0000000000000035              schema_set_get_key
000000000058a12b g     F .text	00000000000002f5              check_grant_column(THD*, st_grant_info*, char const*, char const*, char const*, unsigned int, Security_context*)
000000000065b73e  w    F .text	0000000000000088              store_key_item::store_key_item(THD*, Field*, unsigned char*, unsigned char*, unsigned int, Item*)
00000000007dcd1e  w    F .text	000000000000006a              Item_func_locate::~Item_func_locate()
00000000007bb664  w    F .text	0000000000000038              Item_func_ucase::Item_func_ucase(Item*)
0000000000607484  w    F .text	000000000000006e              THD::set_query(char*, unsigned int)
0000000000799076  w    F .text	0000000000000032              Item_trigger_field::get_tmp_table_item(THD*)
000000000082cbc8  w    F .text	0000000000000035              Log_event_handler::~Log_event_handler()
00000000013865c8 g     O .bss	0000000000000008              Create_func_like_range_max::s_singleton
0000000000806ad2 g     F .text	00000000000002f3              Item_func_group_concat::Item_func_group_concat(THD*, Item_func_group_concat*)
00000000012c9de0 g     O .data	00000000000000b0              my_charset_utf8_hungarian_uca_ci
00000000007bbac4  w    F .text	0000000000000057              Item_func_format::Item_func_format(Item*, Item*, Item*)
00000000007c2c0a  w    F .text	0000000000000026              Create_func_version::~Create_func_version()
00000000007bddda  w    F .text	0000000000000041              Create_func_char_length::~Create_func_char_length()
0000000000799bb2  w    F .text	0000000000000046              Item_hex_string::~Item_hex_string()
00000000005b10c6  w    F .text	0000000000000026              List_iterator<Item_func_match>::List_iterator(List<Item_func_match>&)
0000000000565882  w    F .text	0000000000000041              Protocol_text::~Protocol_text()
0000000000962ca0 g     F .text	000000000000053d              _mi_split_page
0000000001087600  w    O .data.rel.ro	0000000000000030              vtable for Create_func_length
0000000000917f0a g     F .text	0000000000000060              table_all_instr_class::table_all_instr_class(PFS_engine_table_share const*)
000000000090c354  w    F .text	0000000000000026              PFS_check_intact::~PFS_check_intact()
0000000001370788 g     O .bss	0000000000000004              key_LOCK_manager
00000000008f7adc g     F .text	0000000000000325              my_get_ptr
000000000098ee58  w    F .text	0000000000000015              ha_myisam::file_ptr()
000000000080ddfc g     F .text	0000000000000079              Item_func_month::val_int()
00000000007b6846 g     F .text	0000000000000050              Create_func_time_to_sec::create(THD*, Item*)
00000000005d02d4  w    F .text	0000000000000026              List_iterator<Key>::after(Key*)
00000000007bb54e  w    F .text	000000000000004a              Item_func_concat_ws::Item_func_concat_ws(List<Item>&)
0000000000873ef8  w    F .text	0000000000000026              List_iterator_fast<QUICK_SELECT_I>::List_iterator_fast(List<QUICK_SELECT_I>&)
00000000007e1d78  w    F .text	000000000000002b              Item_func_glength::~Item_func_glength()
00000000006f607a  w    F .text	0000000000000016              I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>::prev_ptr(MDL_ticket*)
00000000008c9aa4 g     F .text	00000000000002bd              Event_db_repository::find_named_event(st_mysql_lex_string, st_mysql_lex_string, TABLE*)
00000000010c3968  w    O .data.rel.ro	0000000000000078              vtable for sp_instr_jump
00000000005f1eb2  w    F .text	000000000000001b              List<Index_hint>::List()
000000000073a650  w    F .text	0000000000000040              Item_date_func::Item_date_func(Item*, Item*)
00000000007ba2b2  w    F .text	0000000000000038              Item_func_cos::Item_func_cos(Item*)
000000000083e528 g     F .text	00000000000000dc              Slave_log_event::Slave_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000006ef120 g     F .text	0000000000000267              Binlog_transmit_delegate::after_send_event(THD*, unsigned short, String*)
00000000006987cc  w    F .text	000000000000001b              List<unsigned long long>::List()
000000000065a0f6  w    F .text	0000000000000043              Item_func_isnotnull::Item_func_isnotnull(Item*)
00000000007be074  w    F .text	0000000000000026              Create_func_concat_ws::~Create_func_concat_ws()
00000000007f2a5e  w    F .text	0000000000000058              Item_func_crc32::~Item_func_crc32()
000000000073b64a  w    F .text	0000000000000060              my_var::my_var(st_mysql_lex_string&, bool, unsigned int, enum_field_types)
000000000073bf48  w    F .text	000000000000003d              sp_instr_jump::sp_instr_jump(unsigned int, sp_pcontext*)
000000000074bc96 g     F .text	000000000000011b              Field_new_decimal::Field_new_decimal(unsigned char*, unsigned int, unsigned char*, unsigned char, Field::utype, char const*, unsigned char, bool, bool)
000000000138e390 g     O .bss	0000000000000008              myrg_open_list
000000000073a7c4  w    F .text	0000000000000038              Item_str_timefunc::Item_str_timefunc(Item*)
0000000000b5bb3c g     F .text	00000000000000b9              ha_tina::close()
00000000005b0f10  w    F .text	000000000000001b              List<Natural_join_column>::List()
00000000007f548a g     F .text	00000000000000b1              Item_singlerow_subselect::invalidate_and_restore_select_lex()
00000000005591a0  w    F .text	0000000000000041              Eq_creator::~Eq_creator()
00000000007e2800 g     F .text	0000000000000134              Item_row::Item_row(List<Item>&)
000000000057ab88  w    F .text	000000000000002b              Execute_load_log_event::~Execute_load_log_event()
00000000007fcac6  w    F .text	0000000000000046              Item_maxmin_subselect::~Item_maxmin_subselect()
00000000007f3a66  w    F .text	0000000000000058              Item_func_left::~Item_func_left()
0000000000797328  w    F .text	000000000000000f              Item_decimal::field_type() const
00000000007678a6  w    F .text	0000000000000030              Field_bit::row_pack_length() const
00000000005f0f88  w    F .text	000000000000001b              st_parsing_options::st_parsing_options()
00000000005b0de6  w    F .text	0000000000000026              List_iterator_fast<Natural_join_column>::List_iterator_fast(List<Natural_join_column>&)
0000000000958ba5 g     F .text	00000000000007d6              _mi_search
00000000006bbf90 g     F .text	00000000000000be              convert_period_to_month(unsigned long)
00000000012c80a0 g     O .data	0000000000000058              my_collation_ucs2_uca_handler
00000000006f9f92  w    F .text	000000000000002b              Check_table_statement::~Check_table_statement()
00000000008cabb6 g     F .text	0000000000000118              parse_user
00000000005d198a  w    F .text	000000000000001d              List_iterator_fast<my_var>::operator++(int)
000000000136fa80 g     O .bss	0000000000000038              connection_attrib
000000000056684e  w    F .text	0000000000000028              Item::full_name() const
000000000120c040 g     O .data	0000000000000200              to_uni_latin2_hungarian_ci
000000000073a49c  w    F .text	0000000000000038              Item_func_minute::Item_func_minute(Item*)
000000000080c325 g     F .text	0000000000000ea9              make_date_time(st_date_time_format*, st_mysql_time*, enum_mysql_timestamp_type, String*)
00000000006985fc  w    F .text	000000000000003c              Deprecated_trigger_syntax_handler::Deprecated_trigger_syntax_handler()
0000000000767c70  w    F .text	000000000000001a              List_iterator<Create_field>::ref()
00000000007c0306  w    F .text	0000000000000026              Create_func_lcase::~Create_func_lcase()
00000000005a2ce8 g     F .text	000000000000018c              assign_new_table_id(TABLE_SHARE*)
0000000000b75b61 g     F .text	0000000000000039              my_timer_ticks
0000000000827810 g     F .text	00000000000002eb              MYSQL_BIN_LOG::flush_and_set_pending_rows_event(THD*, Rows_log_event*, bool)
00000000005c043a g     F .text	0000000000000066              Key_part_spec::operator==(Key_part_spec const&) const
0000000000995bab g     F .text	0000000000000059              innobase_convert_to_system_charset
00000000007c035a  w    F .text	0000000000000041              Create_func_least::~Create_func_least()
0000000000801b72 g     F .text	0000000000000050              Item_sum_variance::copy_or_same(THD*)
000000000136ce34 g     O .bss	0000000000000004              sync_masterinfo_period
0000000000738f68  w    F .text	000000000000002b              Item_func_isnottrue::~Item_func_isnottrue()
000000000107de80  w    O .data.rel.ro	0000000000000028              vtable for Cached_item_decimal
000000000070ae36  w    F .text	0000000000000045              Sys_var_flagset::make_symbolic(void (*)(void*, unsigned long, char const*))
00000000007bbcd2  w    F .text	000000000000007f              Item_func_like_range::Item_func_like_range(Item*, Item*, bool)
000000000079bd5a  w    F .text	0000000000000046              Cached_item_real::~Cached_item_real()
00000000007fc2f4  w    F .text	000000000000004b              Item_singlerow_subselect::Item_singlerow_subselect()
00000000008baf18 g     F .text	0000000000000185              Unique::walk(int (*)(void*, unsigned int, void*), void*)
00000000006796ae g     F .text	0000000000000170              String::copy(char const*, unsigned int, charset_info_st*, charset_info_st*, unsigned int*)
000000000079b832  w    F .text	0000000000000035              Cached_item::Cached_item()
0000000000754e2e g     F .text	0000000000000093              Field_year::sql_type(String&) const
00000000007bf3ca  w    F .text	0000000000000026              Create_func_format::~Create_func_format()
00000000005c8190 g     F .text	00000000000001ff              select_max_min_finder_subselect::cmp_decimal()
00000000010883e0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_as_wkt
0000000000766e0e  w    F .text	000000000000000f              Field_blob::match_collation_to_optimize_range() const
00000000008184e4  w    F .text	0000000000000046              Item_func_to_seconds::~Item_func_to_seconds()
00000000008c60c2 g     F .text	00000000000001e4              Event_queue::update_event(THD*, st_mysql_lex_string, st_mysql_lex_string, Event_queue_element*)
000000000077edbe g     F .text	000000000000016c              Item::Item()
0000000000766330  w    F .text	0000000000000011              Field_date::charset() const
0000000000817566  w    F .text	0000000000000046              Item_func_add_time::~Item_func_add_time()
000000000093b4ae g     F .text	000000000000016f              mi_mmap_pwrite
00000000006e83be g     F .text	0000000000000262              do_handle_one_connection(THD*)
00000000005669d0  w    F .text	000000000000000f              Item::eq_cmp_result() const
00000000007bfe14  w    F .text	0000000000000041              Create_func_is_free_lock::~Create_func_is_free_lock()
0000000000559460  w    F .text	000000000000002d              Le_creator::Le_creator()
00000000010eee40 g     O .data	0000000000000008              my_abort_hook
00000000010cbe78  w    O .data.rel.ro	0000000000000020              vtable for ha_partition_add_index
00000000005d0384  w    F .text	0000000000000025              List<Key_part_spec>::push_back(Key_part_spec*)
000000000083fd68 g     F .text	00000000000000e1              Delete_file_log_event::do_apply_event(Relay_log_info const*)
0000000000b63624 g     F .text	000000000000008e              ha_partition::update_create_info(st_ha_create_information*)
000000000070ebd6  w    F .text	0000000000000026              Sys_var_dbug::~Sys_var_dbug()
00000000007bae20  w    F .text	0000000000000038              Item_func_udf_str::Item_func_udf_str(st_udf_func*)
000000000077bba8  w    F .text	0000000000000033              handler::extra_opt(ha_extra_function, unsigned long)
00000000005e87fe  w    F .text	0000000000000034              TABLEOP_HOOKS::prelock(TABLE**, unsigned int)
000000000089af28 g     F .text	0000000000000139              SQL_CRYPT::init(unsigned long*)
00000000006dedf8 g     F .text	00000000000004c3              Relay_log_info::is_until_satisfied(THD*, Log_event*)
00000000008f16f3 g     F .text	0000000000000022              my_time_possible_from_micro
00000000007bf046  w    F .text	0000000000000026              Create_func_exp::~Create_func_exp()
00000000006417b1 g     F .text	0000000000000256              create_tmp_field_from_field(THD*, Field*, char const*, TABLE*, Item_field*, unsigned int)
00000000007dc5ce  w    F .text	0000000000000046              Item_func_sleep::~Item_func_sleep()
00000000007d9ea0  w    F .text	0000000000000077              Field_double::Field_double(unsigned int, bool, char const*, unsigned char)
0000000000559d80 g     F .text	00000000000001ff              my_net_init
00000000007cc442 g     F .text	000000000000012d              Item_func_rand::fix_fields(THD*, Item**)
00000000007adba4  w    F .text	0000000000000048              agg_item_charsets_for_string_result(DTCollation&, char const*, Item**, unsigned int, int)
0000000000b77566 g     F .text	0000000000000086              _db_set_init_
00000000010c45f0  w    O .data.rel.ro	0000000000000050              vtable for Procedure
00000000005a38ca g     F .text	00000000000000af              Open_table_context::Open_table_context(THD*, unsigned int)
00000000008c1916  w    F .text	000000000000005d              Item_func_xpath_count::Item_func_xpath_count(Item*, String*)
000000000073c9a0  w    F .text	0000000000000063              Signal_common::Signal_common(LEX*, sp_cond_type const*, Set_signal_information const&)
00000000007aed02  w    F .text	0000000000000014              Item_func_nullif::result_type() const
000000000057a7bc  w    F .text	000000000000002a              Log_event::get_db()
000000000057a698  w    F .text	0000000000000021              Relay_log_info::inc_event_relay_log_pos()
000000000090ed72 g     F .text	0000000000000028              table_events_waits_summary_by_instance::create()
000000000093afe9 g     F .text	00000000000001d1              mi_dynmap_file
0000000000659c96  w    F .text	000000000000000f              Item_func_rollup_const::const_item() const
00000000010b0120  w    O .data.rel.ro	00000000000003c0              vtable for Item_sum_udf_str
00000000007ae9ae  w    F .text	000000000000000f              Item_func_lt::rev_functype() const
000000000076579c  w    F .text	000000000000000f              Field_medium::max_display_length()
00000000008177a0  w    F .text	0000000000000058              Item_char_typecast::~Item_char_typecast()
00000000005c9066 g     F .text	00000000000000e6              Statement_map::erase(Statement*)
0000000000849226  w    F .text	000000000000000f              Rotate_log_event::get_type_code()
00000000007fc0f8  w    F .text	000000000000006d              Item_in_optimizer::Item_in_optimizer(Item*, Item_in_subselect*)
000000000065ab00  w    F .text	0000000000000051              FT_SELECT::~FT_SELECT()
0000000000804eac g     F .text	000000000000030a              Item_avg_field::val_decimal(my_decimal*)
00000000006ac437 g     F .text	0000000000000254              get_table_category(st_mysql_lex_string const*, st_mysql_lex_string const*)
00000000008490c6  w    F .text	000000000000000f              Intvar_log_event::is_valid() const
00000000008dce49 g     F .text	000000000000024b              resize_key_cache
00000000007c2c30  w    F .text	000000000000002d              Create_func_weekday::Create_func_weekday()
00000000010dc420 g     O .data	0000000000000028              xa_state_names
000000000098d476 g     F .text	00000000000000a4              ha_myisammrg::close()
00000000007c2654  w    F .text	000000000000002d              Create_func_to_seconds::Create_func_to_seconds()
0000000000598014  w    F .text	000000000000001b              list_node::~list_node()
000000000077938a g     F .text	0000000000000240              handler::read_multi_range_first(st_key_multi_range**, st_key_multi_range*, unsigned int, bool, st_handler_buffer*)
0000000000000000       F *UND*	0000000000000000              pthread_cond_destroy@@GLIBC_2.3.2
000000000061860c g     F .text	0000000000000035              Server_runnable::~Server_runnable()
000000000098284a  w    F .text	000000000000004e              ha_heap::index_type(unsigned int)
00000000007aef34  w    F .text	0000000000000046              in_string::create_item()
000000000073845c  w    F .text	0000000000000040              Item_num_op::Item_num_op(Item*, Item*)
000000000077f382 g     F .text	00000000000000e3              Item_ident::Item_ident(Name_resolution_context*, char const*, char const*, char const*)
00000000010884d0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_addtime
00000000005b0ad2  w    F .text	0000000000000043              I_P_List_iterator<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::operator++(int)
0000000001372b60 g     O .bss	0000000000000070              LOCK_manager
00000000007e82e4 g     F .text	00000000000000b8              Item_str_func::left_right_max_length()
0000000000815514  w    F .text	0000000000000135              Item_func::has_time_args()
00000000008fb345 g     F .text	00000000000000d4              mysql_sha1_result
000000000056b01a  w    F .text	000000000000000f              sys_var::cast_pluginvar()
000000000073849c  w    F .text	0000000000000066              Item_int_func::Item_int_func(Item*, Item*, Item*)
00000000005de66d g     F .text	00000000000000bd              prepare_triggers_for_insert_stmt(TABLE*)
00000000008c12a8  w    F .text	000000000000004e              Item_nodeset_func_childbyname::Item_nodeset_func_childbyname(Item*, char const*, unsigned int, String*)
000000000086b1ba g     F .text	0000000000000169              QUICK_RANGE_SELECT::cmp_next(QUICK_RANGE*)
00000000007daf18  w    F .text	000000000000001e              Item_func_benchmark::fix_length_and_dec()
000000000088c67a g     F .text	0000000000000089              sp_cursor::open(THD*)
000000000073861c  w    F .text	0000000000000040              Item_func_mul::Item_func_mul(Item*, Item*)
000000000138e300 g     O .bss	0000000000000001              pfs_initialized
0000000000809316  w    F .text	0000000000000046              Item_sum_variance::~Item_sum_variance()
0000000000758026 g     F .text	000000000000010d              Field_longstr::store_decimal(my_decimal const*)
00000000007c1584  w    F .text	0000000000000041              Create_func_quote::~Create_func_quote()
000000000074d210 g     F .text	0000000000000039              Field_new_decimal::sort_string(unsigned char*, unsigned int)
0000000000565178  w    F .text	0000000000000046              Diagnostics_area::sql_errno() const
0000000000911ce8  w    F .text	0000000000000025              pos_setup_instruments::pos_setup_instruments()
00000000006b6252 g     F .text	0000000000000132              TABLE_LIST::set_underlying_merge()
00000000005d721e  w    F .text	000000000000002d              Drop_table_error_handler::Drop_table_error_handler()
0000000000b5dea6  w    F .text	0000000000000014              ha_tina::index_type(unsigned int)
00000000006bab6a  w    F .text	0000000000000026              Field_iterator_table::set(TABLE_LIST*)
00000000007f2b66  w    F .text	0000000000000058              Item_func_quote::~Item_func_quote()
00000000007bc96a  w    F .text	0000000000000038              Item_func_dayofyear::Item_func_dayofyear(Item*)
00000000005d0cc8  w    F .text	000000000000001b              List_iterator<Alter_column>::rewind()
00000000007f2d98  w    F .text	000000000000002b              Item_func_binary::~Item_func_binary()
0000000001218680 g     O .data	0000000000000101              ctype_hp8_bin
00000000006f3440 g     F .text	0000000000000103              MDL_scoped_lock::notify_conflicting_locks(MDL_context*)
0000000000841338 g     F .text	0000000000000251              Rows_log_event::Rows_log_event(THD*, TABLE*, unsigned long, st_bitmap const*, bool)
0000000000787290 g     F .text	000000000000015c              Item_param::convert_str_value(THD*)
0000000000777754 g     F .text	000000000000003e              handler::ha_check_and_repair(THD*)
000000000073a76c  w    F .text	000000000000002a              Item_date_func::save_in_field(Field*, bool)
000000000106c390  w    O .data.rel.ro	0000000000000038              vtable for Deadlock_detection_visitor
00000000007dbcba  w    F .text	0000000000000015              THD::found_rows()
000000000074b7bc g     F .text	0000000000000110              Field_decimal::val_str(String*, String*)
00000000007e77b4 g     F .text	000000000000010d              Item_func_replace::fix_length_and_dec()
00000000008ecbfb g     F .text	0000000000000057              my_error_unregister_all
00000000007e2186  w    F .text	000000000000002b              Item_func_isclosed::~Item_func_isclosed()
000000000088cf4e  w    F .text	0000000000000046              Select_fetch_into_spvars::~Select_fetch_into_spvars()
000000000065be54  w    F .text	000000000000004d              COND_CMP::COND_CMP(Item*, Item_func*)
0000000000599c26  w    F .text	0000000000000059              ACL_PROXY_USER::set_host(st_mem_root*, char const*)
0000000000b70380 g     F .text	00000000000007cb              ha_partition::check_misplaced_rows(unsigned int, bool)
00000000005e9730  w    F .text	000000000000001a              I_List<Delayed_insert>::head()
00000000007bf58c  w    F .text	0000000000000026              Create_func_from_unixtime::~Create_func_from_unixtime()
00000000008d4d9e g     F .text	000000000000003a              my_hash_element
00000000007c16b0  w    F .text	0000000000000041              Create_func_rand::~Create_func_rand()
00000000007ba43a  w    F .text	0000000000000052              Item_func_rand::Item_func_rand(Item*)
0000000000598f0a  w    F .text	000000000000005e              THD::is_current_stmt_binlog_format_row() const
00000000008c5d14 g     F .text	0000000000000149              Event_queue::init_queue(THD*)
00000000007c2682  w    F .text	0000000000000041              Create_func_to_seconds::~Create_func_to_seconds()
00000000007c2f1e  w    F .text	000000000000002d              Create_func_xml_update::Create_func_xml_update()
000000000089aa98  w    F .text	000000000000008b              analyse::analyse(select_result*)
00000000007fca28  w    F .text	000000000000002b              subselect_single_select_engine::~subselect_single_select_engine()
00000000005f1b2c  w    F .text	000000000000002e              List<Create_field>::List(List<Create_field> const&, st_mem_root*)
0000000000617c32 g     F .text	00000000000001a7              mysqld_stmt_reset(THD*, char*)
0000000001386340 g     O .bss	0000000000000008              Create_func_addtime::s_singleton
000000000055fc3c  w    F .text	0000000000000026              List_iterator_fast<st_mysql_lex_string>::List_iterator_fast(List<st_mysql_lex_string>&)
00000000012165c0 g     O .data	0000000000000200              to_uni_ascii_bin
000000000088c982 g     F .text	00000000000000b0              sp_rcontext::create_case_expr_holder(THD*, Item const*)
0000000000816508  w    F .text	0000000000000011              Item_func_curdate_utc::func_name() const
00000000005b12b4  w    F .text	0000000000000026              MDL_deadlock_discovery_repair_handler::~MDL_deadlock_discovery_repair_handler()
000000000098563f g     F .text	000000000000007f              hp_if_null_in_key
00000000007d694a g     F .text	000000000000050c              Item_func_get_system_var::val_real()
00000000006bb092  w    F .text	000000000000002d              List<String>::push_back(String*, st_mem_root*)
00000000006ce076  w    F .text	000000000000000b              Event_db_repository::Event_db_repository()
00000000007b39fe g     F .text	0000000000000050              Create_func_exp::create(THD*, Item*)
000000000061bdc4  w    F .text	0000000000000027              st_lex_local::operator new(unsigned long, st_mem_root*)
000000000106c250  w    O .data.rel.ro	0000000000000048              vtable for MDL_scoped_lock
00000000006dddde g     F .text	0000000000000816              Relay_log_info::wait_for_pos(THD*, String*, long long, long long)
0000000000b78e64 g     F .text	0000000000000215              _db_return_
000000000085757e g     F .text	0000000000000026              QUICK_RANGE_SELECT::~QUICK_RANGE_SELECT()
000000000055948e  w    F .text	0000000000000041              Le_creator::~Le_creator()
000000000080a94e  w    F .text	0000000000000046              Aggregator_simple::~Aggregator_simple()
0000000001374940 g     O .bss	0000000000000060              my_locale_lv_LV
0000000000889cca  w    F .text	000000000000001d              List_iterator<MYSQL_ERROR>::operator++(int)
000000000079a45a  w    F .text	000000000000002b              Item_trigger_field::~Item_trigger_field()
0000000001372720 g     O .bss	0000000000000400              binlog_unsafe_map
00000000007bfcba  w    F .text	000000000000002d              Create_func_interiorringn::Create_func_interiorringn()
0000000000980f1c g     F .text	0000000000000045              ha_heap::close()
00000000008f33e4 g     F .text	000000000000004c              my_once_memdup
00000000007b3cbc g     F .text	0000000000000055              Create_func_exteriorring::create(THD*, Item*)
00000000008721fc  w    F .text	000000000000000f              QUICK_GROUP_MIN_MAX_SELECT::unique_key_range()
0000000000872a24  w    F .text	0000000000000043              SEL_ARG::copy_max_to_min(SEL_ARG*)
00000000006efcec g     F .text	0000000000000273              Binlog_relay_IO_delegate::after_read_event(THD*, Master_info*, char const*, unsigned long, char const**, unsigned long*)
00000000007f2142  w    F .text	000000000000008f              Item_func_make_set::walk(bool (Item::*)(unsigned char*), bool, unsigned char*)
00000000007dc538  w    F .text	000000000000006a              Item_func_set_user_var::~Item_func_set_user_var()
00000000006eaf86  w    F .text	00000000000000d1              Queue<QUERY_PROFILE>::push_back(QUERY_PROFILE*)
00000000010c3808  w    O .data.rel.ro	0000000000000078              vtable for sp_instr_hpush_jump
0000000000675e1c g     F .text	0000000000000154              make_character_sets_old_format(THD*, st_schema_table*)
000000000070dab0  w    F .text	0000000000000014              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::check_update_type(Item_result)
000000000077c0c2  w    F .text	0000000000000017              handler::check(THD*, st_ha_check_opt*)
00000000007d29a4 g     F .text	00000000000000e4              Item_func_set_user_var::fix_length_and_dec()
0000000000981ce2 g     F .text	000000000000002c              ha_heap::reset_auto_increment(unsigned long long)
000000000076491a  w    F .text	000000000000000f              Field::repertoire() const
0000000000873e16  w    F .text	0000000000000025              List_iterator<QUICK_RANGE>::replace(List<QUICK_RANGE>&)
0000000000738330  w    F .text	000000000000005e              Item_func_numhybrid::Item_func_numhybrid(Item*, Item*)
0000000001209260 g     O .data	0000000000000100              to_lower_latin2_general_ci
0000000000888dd0  w    F .text	000000000000003c              Item_trigger_field::set_value(THD*, Item**)
0000000000757aa0 g     F .text	00000000000001ee              Field_string::store(char const*, unsigned int, charset_info_st*)
000000000070b9d8  w    F .text	000000000000005f              Sys_var_plugin::global_value_ptr(THD*, st_mysql_lex_string*)
00000000010884a0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_aes_encrypt
00000000006c7d88 g     F .text	000000000000003c              Event_job_data::Event_job_data()
00000000007baa7c  w    F .text	0000000000000084              Item_func_find_in_set::Item_func_find_in_set(Item*, Item*)
0000000000911d44  w    F .text	0000000000000025              pos_setup_instruments::next_view()
0000000000817e96  w    F .text	0000000000000046              Item_func_time_to_sec::~Item_func_time_to_sec()
0000000001216ae0 g     O .data	0000000000000200              to_uni_cp1250_bin
00000000006f465a g     F .text	0000000000000053              MDL_context::release_lock(MDL_ticket*)
0000000000000000       F *UND*	0000000000000000              fwrite@@GLIBC_2.2.5
00000000007cbf18 g     F .text	0000000000000123              Item_func_round::real_op()
000000000076658a  w    F .text	000000000000000f              Field_newdate::pack_length() const
00000000005f0fa4  w    F .text	000000000000001b              Lex_input_stream::set_echo(bool)
000000000080e6d4 g     F .text	00000000000000a7              Item_func_year::get_monotonicity_info() const
000000000077b85a  w    F .text	0000000000000057              handler::is_fatal_error(int, unsigned int)
0000000000709520  w    F .text	0000000000000033              Sys_var_charptr::session_update(THD*, set_var*)
0000000000764706  w    F .text	000000000000000b              Field::free()
000000000070db06  w    F .text	0000000000000026              Sys_var_unsigned<unsigned long, 6ul, (enum_mysql_show_type)3>::global_save_default(THD*, set_var*)
000000000061bfb8  w    F .text	0000000000000053              Prepared_statement::close_cursor()
00000000005f1a64  w    F .text	000000000000001b              List<Item_outer_ref>::List()
00000000007bdbc4  w    F .text	0000000000000026              Create_func_bit_count::~Create_func_bit_count()
00000000007dbeaa  w    F .text	000000000000001a              Interruptible_wait::Interruptible_wait(THD*)
00000000005a8bac g     F .text	0000000000000107              find_field_in_table_sef(TABLE*, char const*)
00000000007ae7c4  w    F .text	0000000000000013              Item_func_equal::neg_transformer(THD*)
000000000059afb6  w    F .text	0000000000000026              List_iterator<st_lex_user>::List_iterator(List<st_lex_user>&)
000000000090c08c  w    F .text	000000000000002d              PFS_truncatable_acl::PFS_truncatable_acl()
000000000082d4e0  w    F .text	0000000000000046              User_var_log_event::~User_var_log_event()
000000000055a4a2 g     F .text	00000000000001d5              my_net_write
00000000005ed75c g     F .text	000000000000017f              Alter_info::Alter_info(Alter_info const&, st_mem_root*)
00000000007db696  w    F .text	0000000000000011              Item_func_get_user_var::func_name() const
0000000000765d52  w    F .text	000000000000000f              Field_double::type() const
0000000000621cb3 g     F .text	0000000000000071              purge_master_logs_before_date(THD*, long)
00000000007f9e1e g     F .text	0000000000000062              subselect_uniquesubquery_engine::cleanup()
00000000006aa1bc  w    F .text	0000000000000053              SQL_I_List<st_order>::push_back(SQL_I_List<st_order>*)
0000000000767812  w    F .text	0000000000000030              Field_bit::set_key_image(unsigned char const*, unsigned int)
000000000070eac4  w    F .text	0000000000000041              Sys_var_double::~Sys_var_double()
00000000005f1438  w    F .text	00000000000000a0              THD::copy_db_to(char**, unsigned long*)
00000000013866c8 g     O .bss	0000000000000008              Create_func_reverse::s_singleton
00000000007bf74e  w    F .text	0000000000000026              Create_func_geometry_type::~Create_func_geometry_type()
0000000000000000       F *UND*	0000000000000000              close@@GLIBC_2.2.5
00000000007bb0aa  w    F .text	000000000000002d              Item_func_row_count::Item_func_row_count()
0000000001373d50 g     O .bss	0000000000000004              key_event_scheduler_LOCK_scheduler_state
0000000000816e18  w    F .text	0000000000000050              Item_datetime_typecast::val_decimal(my_decimal*)
0000000000889e0c  w    F .text	000000000000001a              List<sp_instr_opt_meta>::pop()
0000000000738fe6  w    F .text	0000000000000046              Item_func_isfalse::~Item_func_isfalse()
00000000007f30ec  w    F .text	000000000000002b              Item_func_conv::~Item_func_conv()
0000000000756a42 g     F .text	000000000000016f              Field_datetime::store(long long, bool)
0000000000790888 g     F .text	00000000000000c9              Item_ref::get_tmp_table_item(THD*)
00000000007dd000  w    F .text	0000000000000046              Item_func_round::~Item_func_round()
0000000000562e9e g     F .text	0000000000000064              Protocol_text::store_null()
0000000000873156  w    F .text	000000000000004b              SEL_IMERGE::SEL_IMERGE()
000000000091325a  w    F .text	0000000000000041              table_rwlock_instances::~table_rwlock_instances()
0000000000889a24  w    F .text	0000000000000027              sp_instr_set_case_expr::set_destination(unsigned int, unsigned int)
0000000000599840  w    F .text	000000000000000b              ACL_ACCESS::ACL_ACCESS()
000000000120f140 g     O .data	0000000000000200              to_uni_armscii8_general_ci
0000000000b743ff g     F .text	0000000000000044              lf_alloc_pool_count
0000000000817f08  w    F .text	0000000000000058              Item_func_unix_timestamp::~Item_func_unix_timestamp()
0000000001394320 g     O .bss	0000000000000990              dflt_key_cache_var
00000000010877e0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_is_free_lock
000000000138dde0 g     O .bss	0000000000000100              table_mutex_instances::m_table_lock
0000000000ba6195 g     F .text	0000000000000194              vio_blocking
00000000005f21bc  w    F .text	0000000000000032              list_node::list_node()
00000000012108c0 g     O .data	0000000000000100              sort_order_macroman_general_ci
0000000000892956 g     F .text	00000000000001e5              Gis_geometry_collection::get_mbr(MBR*, char const**) const
0000000000802b8a g     F .text	0000000000000077              Item_sum_xor::add()
000000000065b95e  w    F .text	000000000000008f              store_key_const_item::store_key_const_item(THD*, Field*, unsigned char*, unsigned char*, unsigned int, Item*)
000000000109e9d0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_point
0000000001369c20 g     O .data	0000000000000800              my_unicase_turkish
00000000007ba910  w    F .text	0000000000000038              Item_func_coercibility::Item_func_coercibility(Item*)
00000000005d7370  w    F .text	0000000000000093              Table_ident::Table_ident(THD*, st_mysql_lex_string, st_mysql_lex_string, bool)
00000000007be2cc  w    F .text	0000000000000026              Create_func_convert_tz::~Create_func_convert_tz()
000000000087422c  w    F .text	0000000000000026              List_iterator<Item_sum>::List_iterator(List<Item_sum>&)
00000000007b97cc  w    F .text	0000000000000062              udf_handler::udf_handler(st_udf_func*)
000000000063c82b g     F .text	00000000000000ed              simple_remove_const(st_order*, Item*)
0000000000873f58  w    F .text	0000000000000026              List_iterator<SEL_IMERGE>::List_iterator(List<SEL_IMERGE>&)
000000000136e0e0 g     O .bss	0000000000000004              mysql_unpacked_real_data_home_len
00000000007bcfca  w    F .text	0000000000000041              Create_qfunc::~Create_qfunc()
00000000007e9baa g     F .text	0000000000000528              Item_func_trim::val_str(String*)
0000000000818556  w    F .text	0000000000000046              Item_func_to_days::~Item_func_to_days()
000000000059adc4  w    F .text	0000000000000041              Silence_routine_definer_errors::~Silence_routine_definer_errors()
000000000079b234 g     F .text	000000000000008e              Cached_item_str::Cached_item_str(THD*, Item*)
00000000005d18de  w    F .text	0000000000000026              I_List_iterator<Item_change_record>::I_List_iterator(I_List<Item_change_record>&)
0000000000802c02 g     F .text	0000000000000050              Item_sum_and::copy_or_same(THD*)
000000000081532e  w    F .text	0000000000000059              Item_func::get_arg0_date(st_mysql_time*, unsigned int)
000000000136fbb0 g     O .bss	0000000000000008              report_password
000000000109c970  w    O .data.rel.ro	0000000000000398              vtable for Item_func_numpoints
000000000069dbd4  w    F .text	0000000000000056              select_union::~select_union()
0000000001375300 g     O .bss	0000000000000060              my_locale_zh_TW
00000000005f4c65 g     F .text	0000000000000315              do_command(THD*)
0000000000598dc2  w    F .text	000000000000001b              List<st_lex_user>::~List()
0000000000737c98  w    F .text	0000000000000047              Item_sum_count::Item_sum_count(Item*)
0000000000912290  w    F .text	0000000000000041              table_setup_timers::~table_setup_timers()
00000000005b1000  w    F .text	0000000000000025              List_iterator<Item>::replace(Item*)
00000000007afd8e  w    F .text	000000000000000f              Item_func_isnull::not_null_tables() const
000000000082cadc  w    F .text	0000000000000013              TC_LOG_DUMMY::open(char const*)
000000000138e2f8 g     O .bss	0000000000000008              events_waits_history_long_array
000000000055fcc4  w    F .text	000000000000002d              List<unsigned long long>::push_back(unsigned long long*, st_mem_root*)
00000000005d1da8  w    F .text	000000000000002b              st_select_lex_unit::~st_select_lex_unit()
00000000006988cc  w    F .text	0000000000000041              Handle_old_incorrect_sql_modes_hook::~Handle_old_incorrect_sql_modes_hook()
00000000005b124c  w    F .text	0000000000000026              Lock_tables_prelocking_strategy::~Lock_tables_prelocking_strategy()
00000000010efe28 g     O .data	0000000000000008              PFS_bootstrap
000000000109b3e0  w    O .data.rel.ro	0000000000000398              vtable for Item_func
00000000007a12c2 g     F .text	0000000000000060              Item_func_ge::val_int()
00000000007fc704  w    F .text	0000000000000038              select_singlerow_subselect::select_singlerow_subselect(Item_subselect*)
000000000065c1e0  w    F .text	000000000000001b              List_iterator<Item_func_match>::List_iterator()
0000000000817a10  w    F .text	0000000000000058              Item_func_date_format::~Item_func_date_format()
00000000009068af g     F .text	0000000000000058              init_file_hash()
0000000000803fe0 g     F .text	000000000000058e              Item_sum_avg::update_field()
0000000000598364  w    F .text	000000000000003a              base_list_iterator::base_list_iterator()
0000000000817896  w    F .text	000000000000006a              Item_date_add_interval::~Item_date_add_interval()
000000000079a170  w    F .text	0000000000000058              Item_cache_str::~Item_cache_str()
00000000009083c2  w    F .text	000000000000005f              pfs_lock::dirty_to_allocated()
00000000012102a0 g     O .data	0000000000000100              sort_order_macce_general_ci
000000000084b5e0 g     F .text	0000000000000051              Slave_reporting_capability::~Slave_reporting_capability()
0000000000692944 g     F .text	00000000000001d9              Trigger_creation_ctx::create(THD*, char const*, char const*, st_mysql_lex_string const*, st_mysql_lex_string const*, st_mysql_lex_string const*)
0000000000887e90 g     F .text	000000000000005f              sp_instr_error::print(String*)
00000000007770b4 g     F .text	00000000000000e4              handler::get_dup_key(int)
00000000005ce822  w    F .text	000000000000004c              Key::clone(st_mem_root*) const
00000000007bb2a6  w    F .text	0000000000000046              Item_str_func::~Item_str_func()
00000000008765fa  w    F .text	0000000000000025              Item_sum::make_const()
000000000054e3db g     F .text	00000000000000e0              delete_thd(THD*)
00000000008e949f g     F .text	00000000000002f3              alloc_root
00000000007397a3  w    F .text	000000000000005d              is_cond_or(Item*)
00000000007aff42  w    F .text	000000000000000f              Item_func_like::eq_cmp_result() const
0000000000659a96  w    F .text	000000000000002b              Item_func::~Item_func()
0000000000805238 g     F .text	0000000000000071              Item_std_field::val_real()
0000000000817b06  w    F .text	0000000000000046              Item_func_sysdate_local::~Item_func_sysdate_local()
0000000000559d18  w    F .text	0000000000000041              File_parser_dummy_hook::~File_parser_dummy_hook()
000000000089367a  w    F .text	000000000000002d              Gis_point::Gis_point()
0000000000768250  w    F .text	0000000000000046              Field_double::~Field_double()
000000000109e298  w    O .data.rel.ro	00000000000003a0              vtable for Item_func_spatial_rel
00000000007dc0e6  w    F .text	000000000000002b              Item_func_row_count::~Item_func_row_count()
0000000000981ec2 g     F .text	0000000000000029              ha_heap::rename_table(char const*, char const*)
000000000098f1f0  w    F .text	000000000000001d              List_iterator_fast<Mrg_child_def>::operator++(int)
00000000007b08a2  w    F .text	0000000000000046              Item_func_isnotnull::~Item_func_isnotnull()
00000000007e45b6 g     F .text	0000000000000333              Item_func_sha2::val_str_ascii(String*)
00000000007f616e g     F .text	00000000000000a0              Item_singlerow_subselect::val_bool()
00000000006f9ec4  w    F .text	0000000000000016              Warning_info::is_empty() const
00000000007b9e6a  w    F .text	000000000000009e              Item_decimal_typecast::Item_decimal_typecast(Item*, int, int)
000000000079325a g     F .text	00000000000001b3              Item_cache_datetime::cache_value_int()
00000000007dd52c  w    F .text	000000000000002b              Item_func_asin::~Item_func_asin()
0000000000754ec2 g     F .text	00000000000001b2              Field_date::store(char const*, unsigned int, charset_info_st*)
00000000012cc7e0 g     O .data	00000000000000b0              my_charset_utf16_slovak_uca_ci
000000000106a718  w    O .data.rel.ro	0000000000000030              vtable for store_key_const_item
00000000009a8036  w    F .text	000000000000002f              st_foreign_key_info::st_foreign_key_info()
00000000008e8094 g     F .text	000000000000007a              free_tmpdir
00000000008c1d90  w    F .text	000000000000022a              Item_nodeset_to_const_comparator::val_int()
00000000005d7e84 g     F .text	00000000000001cf              MYSQL_ERROR::MYSQL_ERROR()
0000000001374f40 g     O .bss	0000000000000060              my_locale_sr_RS
0000000000737b60  w    F .text	0000000000000043              Item_sum_num::Item_sum_num(List<Item>&)
000000000077be6e  w    F .text	000000000000000f              handler::max_supported_key_length() const
000000000121a660 g     O .data	0000000000000100              to_lower_latin7_bin
000000000108cee8  w    O .data.rel.ro	0000000000000398              vtable for Item_func_benchmark
0000000000766c8a  w    F .text	000000000000000f              Field_varstring::zero_pack() const
00000000007f307a  w    F .text	000000000000002b              Item_func_conv_charset::~Item_func_conv_charset()
00000000007ba272  w    F .text	0000000000000040              Item_func_atan::Item_func_atan(Item*, Item*)
0000000000848e6e  w    F .text	000000000000000f              Slave_log_event::get_type_code()
00000000007e8bfe g     F .text	0000000000000504              Item_func_substr_index::val_str(String*)
0000000000763dda g     F .text	00000000000000ee              Field::set_datetime_warning(MYSQL_ERROR::enum_warning_level, unsigned int, double, enum_mysql_timestamp_type)
000000000106bb38  w    O .data.rel.ro	0000000000000028              vtable for Handle_old_incorrect_sql_modes_hook
000000000056773e  w    F .text	0000000000000046              Item_string::~Item_string()
0000000000678b8a  w    F .text	0000000000000041              Trigger_error_handler::~Trigger_error_handler()
00000000007ae93c  w    F .text	000000000000000f              Item_func_le::eq_cmp_result() const
00000000010b04e0  w    O .data.rel.ro	00000000000003c0              vtable for Item_sum_udf_int
0000000000809290  w    F .text	000000000000002a              Item_sum_variance::cleanup()
00000000007d0354 g     F .text	0000000000000131              udf_handler::val_decimal(char*, my_decimal*)
000000000065c004  w    F .text	0000000000000026              List<Item_func_match>::List(List<Item_func_match> const&)
00000000006bb7c3 g     F .text	0000000000000039              init_sql_alloc(st_mem_root*, unsigned int, unsigned int)
00000000007fc8fe  w    F .text	0000000000000046              subselect_indexsubquery_engine::~subselect_indexsubquery_engine()
0000000000764fae  w    F .text	000000000000001f              Field_str::binary() const
0000000001094d50  w    O .data.rel.ro	0000000000000398              vtable for Item_func_atan
00000000006d169a g     F .text	00000000000000d9              partition_info::set_part_expr(char*, Item*, char*, bool)
0000000000787ebc g     F .text	0000000000000118              Item_param::make_field(Send_field*)
0000000001069448  w    O .data.rel.ro	0000000000000028              vtable for Internal_error_handler
00000000006e8a01 g     F .text	000000000000022d              make_profile_table_for_show(THD*, st_schema_table*)
00000000008013d8 g     F .text	00000000000001d2              Item_sum_avg::val_decimal(my_decimal*)
0000000000677f62  w    F .text	000000000000004c              Item_blob::Item_blob(char const*, unsigned int)
00000000006f2114 g     F .text	000000000000003e              MDL_ticket::get_deadlock_weight() const
0000000000767e94  w    F .text	000000000000002b              Field_geom::~Field_geom()
00000000007dad4a  w    F .text	0000000000000011              Item_func_length::func_name() const
00000000008c0f0e  w    F .text	000000000000000f              Item_nodeset_func::result_type() const
000000000073b733  w    F .text	000000000000003a              add_order_to_list(THD*, Item*, bool)
000000000084902c  w    F .text	0000000000000017              Start_log_event_v3::is_valid() const
000000000070d072  w    F .text	0000000000000026              List<set_var_base>::disjoin(List<set_var_base>*)
000000000097f6af g     F .text	0000000000000162              _mi_ft_parserecord
00000000006bb6d6  w    F .text	000000000000002b              View_creation_ctx::~View_creation_ctx()
00000000007945d4 g     F .text	000000000000006d              Item_cache_row::allocate(unsigned int)
000000000136fba0 g     O .bss	0000000000000008              relay_log_info_file
0000000000b9b2d7 g     F .text	0000000000000038              decimal_mod
0000000000898c72 g     F .text	0000000000000157              collect_real(double*, unsigned int, st_tree_info*)
00000000007c0aca  w    F .text	000000000000002d              Create_func_maketime::Create_func_maketime()
00000000006bd050 g     F .text	000000000000005f              get_date_time_format_str(st_known_date_time_format*, enum_mysql_timestamp_type)
0000000000767458  w    F .text	0000000000000031              Field_set::store(double)
00000000006fa793 g     F .text	0000000000000130              trans_rollback(THD*)
000000000090ef6c g     F .text	0000000000000055              table_events_waits_summary_by_instance::make_rwlock_row(PFS_rwlock*)
00000000006eab87  w    F .text	0000000000000041              double2my_decimal(unsigned int, double, my_decimal*)
00000000010a1158  w    O .data.rel.ro	0000000000000358              vtable for Item_row
0000000000785772 g     F .text	0000000000000190              longlong_from_string_with_check(charset_info_st*, char const*, char*)
0000000000b65ad8 g     F .text	0000000000000140              ha_partition::get_from_handler_file(char const*, st_mem_root*, bool)
00000000007aea64  w    F .text	0000000000000013              Item_func_opt_neg::subst_argument_checker(unsigned char**)
0000000001097c88  w    O .data.rel.ro	0000000000000398              vtable for Item_func_int_div
00000000007ad9e8 g     F .text	000000000000017a              Item_equal::print(String*, enum_query_type)
00000000008eac2e g     F .text	0000000000000068              bitmap_is_clear_all
00000000007ae20e  w    F .text	0000000000000025              Ne_creator::symbol(bool) const
00000000007fc7c8  w    F .text	0000000000000052              and_items(Item*, Item*)
000000000065a48e  w    F .text	000000000000005f              and_conds(Item*, Item*)
0000000000853911 g     F .text	0000000000000060              calc_days_in_year
0000000000798e56  w    F .text	000000000000000f              Item_default_value::type() const
000000000079952a  w    F .text	000000000000000f              Item_cache_int::result_type() const
00000000006070f8  w    F .text	000000000000003e              Query_tables_list::add_to_query_tables(TABLE_LIST*)
000000000065c3d0  w    F .text	000000000000001b              List_iterator_fast<Item_field>::rewind()
00000000007c1844  w    F .text	000000000000002d              Create_func_round::Create_func_round()
00000000007bd47a  w    F .text	0000000000000041              Create_func_abs::~Create_func_abs()
000000000083e1f4 g     F .text	000000000000002b              Slave_log_event::~Slave_log_event()
000000000073c3b0  w    F .text	000000000000006a              sp_instr_cfetch::sp_instr_cfetch(unsigned int, sp_pcontext*, unsigned int)
000000000070d684  w    F .text	0000000000000045              Sys_var_unsigned<unsigned int, 4ul, (enum_mysql_show_type)2>::make_symbolic(void (*)(void*, unsigned long, char const*))
000000000079bbb4  w    F .text	0000000000000026              List_iterator<Cached_item>::after(Cached_item*)
000000000077f13a g     F .text	0000000000000091              Item::print_item_w_name(String*, enum_query_type)
0000000000741af3 g     F .text	000000000000010f              mpvio_info
00000000005bf308  w    F .text	000000000000001b              Query_cache_query::writer(Query_cache_tls*)
000000000065c0fa  w    F .text	0000000000000026              List<Item_func_match>::concat(List<Item_func_match>*)
00000000007ae704  w    F .text	000000000000002b              Item_bool_rowready_func2::~Item_bool_rowready_func2()
000000000090c08c  w    F .text	000000000000002d              PFS_truncatable_acl::PFS_truncatable_acl()
00000000007bb484  w    F .text	0000000000000040              Item_func_aes_encrypt::Item_func_aes_encrypt(Item*, Item*)
00000000007dcb54  w    F .text	000000000000002b              Item_func_find_in_set::~Item_func_find_in_set()
0000000000579fb6  w    F .text	0000000000000012              Warning_info::warn_list()
00000000006a4f06  w    F .text	0000000000000026              List_iterator_fast<TABLE>::List_iterator_fast(List<TABLE>&)
00000000005d0156  w    F .text	0000000000000074              List<Key>::delete_elements()
00000000006eaebe  w    F .text	00000000000000c8              Queue<QUERY_PROFILE>::pop()
000000000136cd28 g     O .bss	0000000000000008              thread_cache_size
00000000007b6624 g     F .text	0000000000000058              Create_func_str_to_date::create(THD*, Item*, Item*)
0000000000816900  w    F .text	0000000000000013              Item_extract::check_partition_func_processor(unsigned char*)
000000000079a451  w    F .text	0000000000000009              non-virtual thunk to Item_trigger_field::~Item_trigger_field()
00000000008935f6  w    F .text	000000000000002b              Geometry::no_data(char const*, unsigned long) const
000000000088ad0c g     F .text	0000000000000089              sp_pcontext::push_cursor(st_mysql_lex_string*)
00000000006d27b2 g     F .text	0000000000000181              partition_info::init_column_part()
000000000120cc80 g     O .data	0000000000000200              to_uni_cp1251_ukrainian_ci
000000000080e560 g     F .text	00000000000000f9              Item_func_dayname::val_str(String*)
00000000007dd6ae  w    F .text	0000000000000046              Item_func_exp::~Item_func_exp()
00000000007be992  w    F .text	0000000000000041              Create_func_degrees::~Create_func_degrees()
0000000000816d48  w    F .text	0000000000000011              Item_datetime_typecast::func_name() const
000000000136cc4c g     O .bss	0000000000000004              opt_debug_sync_timeout
0000000001084838  w    O .data.rel.ro	00000000000003a8              vtable for Item_func_equal
00000000013863a0 g     O .bss	0000000000000008              Create_func_ceiling::s_singleton
00000000007b254c g     F .text	0000000000000050              Create_func_abs::create(THD*, Item*)
000000000138c9b8 g     O .bss	0000000000000004              THR_thread_count
0000000000885e22 g     F .text	0000000000000014              sp_instr::get_cont_dest()
000000000080a8dc  w    F .text	0000000000000046              Item_sum_count::~Item_sum_count()
0000000000911bd0 g     F .text	0000000000000117              table_setup_instruments::update_row_values(TABLE*, unsigned char const*, unsigned char*, Field**)
000000000106caf8  w    O .data.rel.ro	0000000000000078              vtable for Sys_var_double
00000000009100ce g     F .text	000000000000005d              table_file_summary_by_event_name::rnd_pos(void const*)
00000000007dabfe  w    F .text	000000000000002b              Item_func_int_val::~Item_func_int_val()
0000000000817df8  w    F .text	000000000000002b              Item_func_curdate_local::~Item_func_curdate_local()
000000000075cbba g     F .text	0000000000000047              Field_geom::store(double)
00000000008bfcf1 g     F .text	000000000000013d              xml_enter
00000000007b4e6e g     F .text	0000000000000050              Create_func_ln::create(THD*, Item*)
0000000000000000       F *UND*	0000000000000000              gmtime_r@@GLIBC_2.2.5
000000000077cd74 g     F .text	00000000000000b4              inc_host_errors(char const*)
0000000000567068  w    F .text	0000000000000017              Item::has_subquery() const
000000000120b300 g     O .data	0000000000000100              sort_order_hebrew_general_ci
00000000006b4996 g     F .text	0000000000000170              get_field(st_mem_root*, Field*, String*)
000000000079944e  w    F .text	0000000000000046              Item_cache::~Item_cache()
000000000091784a g     F .text	0000000000000060              table_all_instr::table_all_instr(PFS_engine_table_share const*)
00000000007db66a  w    F .text	000000000000000f              Item_func_get_user_var::functype() const
000000000073b6aa  w    F .text	0000000000000059              select_dumpvar::select_dumpvar()
00000000007666a8  w    F .text	000000000000000f              Field_time::binary() const
0000000000b80524 g     F .text	00000000000000c2              my_casedn_mb_varlen
00000000007c246c  w    F .text	0000000000000026              Create_func_time_format::~Create_func_time_format()
00000000005c857e g     F .text	00000000000000d8              select_exists_subselect::send_data(List<Item>&)
00000000005c3d18 g     F .text	0000000000000094              make_lex_string_root(st_mem_root*, st_mysql_lex_string*, char const*, unsigned int, bool)
0000000001376980 g     O .bss	0000000000000008              transaction_delegate
00000000005e9770  w    F .text	0000000000000026              I_List_iterator<Delayed_insert>::I_List_iterator(I_List<Delayed_insert>&)
00000000005ceb90  w    F .text	000000000000001b              List<Key>::~List()
00000000007a329e g     F .text	0000000000000132              Item_func_between::print(String*, enum_query_type)
000000000090f528  w    F .text	0000000000000026              table_events_waits_summary_by_instance::~table_events_waits_summary_by_instance()
00000000007b6a8c g     F .text	0000000000000050              Create_func_uncompressed_length::create(THD*, Item*)
00000000007882c6 g     F .text	0000000000000032              Item_copy_string::save_in_field(Field*, bool)
00000000007965e8  w    F .text	000000000000001d              Hybrid_type_traits::Hybrid_type_traits()
0000000000739ec2  w    F .text	0000000000000038              Item_func_old_password::Item_func_old_password(Item*)
00000000007dbec4  w    F .text	000000000000000b              Interruptible_wait::~Interruptible_wait()
00000000007bee42  w    F .text	0000000000000041              Create_func_endpoint::~Create_func_endpoint()
00000000007c0f12  w    F .text	0000000000000041              Create_func_numgeometries::~Create_func_numgeometries()
000000000121c920 g     O .data	0000000000000200              to_uni_latin1_spanish_ci
000000000077c0da  w    F .text	000000000000005b              handler::repair(THD*, st_ha_check_opt*)
00000000006b80ca g     F .text	000000000000008c              Natural_join_column::Natural_join_column(Item_field*, TABLE_LIST*)
000000000087355e  w    F .text	000000000000002d              TRP_ROR_UNION::TRP_ROR_UNION()
00000000007ecf0a g     F .text	0000000000000297              Item_func_char::val_str(String*)
000000000138cda8 g     O .bss	0000000000000008              mutex_class_lost
0000000000871f0a  w    F .text	0000000000000012              QUICK_SELECT_I::make_reverse(unsigned int)
000000000070ed34  w    F .text	0000000000000041              PolyLock_rwlock::~PolyLock_rwlock()
00000000007b982e  w    F .text	000000000000007b              Item_sum::Item_sum()
0000000000893ac2  w    F .text	0000000000000041              Gis_multi_line_string::~Gis_multi_line_string()
00000000007c2a9c  w    F .text	0000000000000041              Create_func_uuid::~Create_func_uuid()
000000000079065a g     F .text	0000000000000067              Item_ref::val_decimal(my_decimal*)
00000000007f487e g     F .text	0000000000000423              Item_subselect::fix_fields(THD*, Item**)
0000000000b6faf6 g     F .text	000000000000010f              ha_partition::reset_auto_increment(unsigned long long)
00000000005d1c96  w    F .text	0000000000000026              Drop_table_error_handler::~Drop_table_error_handler()
00000000008092da  w    F .text	000000000000000f              Item_std_field::field_type() const
00000000006f3544 g     F .text	0000000000000565              MDL_context::acquire_lock(MDL_request*, unsigned long)
0000000000767ec0  w    F .text	0000000000000046              Field_varstring::~Field_varstring()
0000000001386598 g     O .bss	0000000000000008              Create_func_last_day::s_singleton
00000000005ccab8 g     F .text	0000000000000196              THD::binlog_delete_row(TABLE*, bool, st_bitmap const*, unsigned long, unsigned char const*)
00000000007b9ffa  w    F .text	0000000000000038              Item_func_exp::Item_func_exp(Item*)
00000000008a02c4 g     F .text	00000000000001b7              get_all_items_for_category(THD*, TABLE*, Field*, SQL_SELECT*, List<String>*)
00000000006d6002 g     F .text	0000000000000741              table_def::compatible_with(THD*, Relay_log_info*, TABLE*, TABLE**) const
00000000008494e6  w    F .text	000000000000000f              Begin_load_query_log_event::get_type_code()
00000000007ba35a  w    F .text	0000000000000038              Item_func_cot::Item_func_cot(Item*)
00000000007e21f8  w    F .text	000000000000002b              Item_func_issimple::~Item_func_issimple()
00000000007fc190  w    F .text	000000000000001e              Item_func_not_all::set_sum_test(Item_sum_hybrid*)
000000000061bf7e  w    F .text	000000000000003a              Ed_row::Ed_row(Ed_column*, unsigned long)
0000000000774679 g     F .text	0000000000000138              ha_release_savepoint(THD*, st_savepoint*)
0000000000866892 g     F .text	00000000000001f9              SEL_ARG::rb_insert(SEL_ARG*)
0000000000757e84 g     F .text	0000000000000040              Field::is_equal(Create_field*)
000000000080980a  w    F .text	0000000000000040              Item_sum_or::Item_sum_or(THD*, Item_sum_or*)
00000000007a6f58 g     F .text	0000000000000051              in_decimal::get_value(Item*)
0000000001087cc0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_envelope
000000000075ef0a g     F .text	0000000000000598              Field_bit::store(char const*, unsigned int, charset_info_st*)
000000000084e114 g     F .text	00000000000001fe              Update_rows_log_event_old::do_prepare_row(THD*, Relay_log_info const*, TABLE*, unsigned char const*, unsigned char const**)
000000000077f736 g     F .text	000000000000009d              Item_ident::remove_dependence_processor(unsigned char*)
0000000000796772  w    F .text	000000000000001a              Hybrid_type_traits_integer::val_int(Hybrid_type*, bool) const
000000000091162e g     F .text	000000000000005f              table_setup_instruments::table_setup_instruments()
00000000007a6faa g     F .text	000000000000012c              cmp_item::get_comparator(Item_result, charset_info_st*)
000000000138c8a8 g     O .bss	0000000000000008              my_file_opened
000000000077c740  w    F .text	0000000000000026              Ha_delete_table_error_handler::~Ha_delete_table_error_handler()
0000000000b8285b g     F .text	00000000000000f9              my_strnxfrm_simple
0000000001374a00 g     O .bss	0000000000000060              my_locale_mn_MN
00000000005b0e50  w    F .text	000000000000001d              List_iterator<TABLE_LIST>::operator++(int)
0000000000606978  w    F .text	000000000000005a              Item_int::Item_int(unsigned long long, unsigned int)
000000000078856e g     F .text	0000000000000076              Item_copy_float::val_str(String*)
0000000000607252  w    F .text	000000000000002d              Parser_state::~Parser_state()
00000000006bace8  w    F .text	0000000000000041              Field_blob::get_length(unsigned char const*)
000000000071039e g     F .text	000000000000012a              my_parse_error(char const*)
0000000000796bb6  w    F .text	000000000000000f              Item_splocal::is_splocal()
0000000000889870  w    F .text	000000000000001b              List<sp_variable>::~List()
000000000075a798 g     F .text	000000000000014d              Field_varstring::get_key_image(unsigned char*, unsigned int, Field::imagetype)
00000000006e931e g     F .text	0000000000000080              PROFILING::~PROFILING()
00000000008741ea  w    F .text	000000000000001b              List<Item_sum>::List()
000000000079aa50  w    F .text	0000000000000056              Item_decimal::~Item_decimal()
00000000010a14b0  w    O .data.rel.ro	0000000000000398              vtable for Item_func_uuid
00000000008c1fba  w    F .text	0000000000000046              Item_nodeset_func_elementbyindex::~Item_nodeset_func_elementbyindex()
000000000073a650  w    F .text	0000000000000040              Item_date_func::Item_date_func(Item*, Item*)
00000000005c4634 g     F .text	000000000000048f              THD::send_explain_fields(select_result*)
00000000005cc63a g     F .text	000000000000018d              THD::binlog_write_row(TABLE*, bool, st_bitmap const*, unsigned long, unsigned char const*)
00000000010cd8d2 g     O .data	0000000000000001              opt_character_set_client_handshake
00000000007daf06  w    F .text	0000000000000011              Item_func_benchmark::func_name() const
0000000000738dac  w    F .text	0000000000000046              Item_func_truth::~Item_func_truth()
00000000005695ce g     F .text	00000000000000a4              sys_var_end()
00000000005e3756 g     F .text	000000000000009d              Delayed_prelocking_strategy::handle_table(THD*, Query_tables_list*, TABLE_LIST*, bool*)
000000000059ad8e  w    F .text	0000000000000035              Silence_routine_definer_errors::Silence_routine_definer_errors()
000000000073a32a  w    F .text	000000000000006a              Item_func_spatial_collection::Item_func_spatial_collection(List<Item>&, Geometry::wkbType, Geometry::wkbType)
00000000008edc35 g     F .text	00000000000001fd              my_fwrite
00000000005e8bd0  w    F .text	0000000000000083              THD::fatal_error()
00000000008cd274 g     F .text	00000000000000b1              SHA512
0000000000b9979c g     F .text	0000000000000047              decimal_intg
000000000080d9b2 g     F .text	00000000000000ad              Item_func_to_days::get_monotonicity_info() const
0000000000899565 g     F .text	0000000000000101              check_ulonglong(char const*, unsigned int)
000000000136fe90 g     O .bss	0000000000000008              opt_ssl_cipher
00000000010812f8  w    O .data.rel.ro	0000000000000048              vtable for cmp_item_int
0000000000777848 g     F .text	0000000000000034              handler::ha_prepare_for_alter()
00000000005a2880 g     F .text	00000000000000d9              Locked_tables_list::unlink_from_list(THD*, TABLE_LIST*, bool)
00000000005c7a16 g     F .text	000000000000017d              select_singlerow_subselect::send_data(List<Item>&)
0000000000739876  w    F .text	0000000000000040              Item_str_func::Item_str_func(Item*)
00000000005c97db g     F .text	0000000000000045              thd_increment_bytes_sent
00000000010690b0  w    O .data.rel.ro	0000000000000020              vtable for i_string
00000000008722dc  w    F .text	000000000000001b              SEL_ARG::SEL_ARG()
00000000007d0ea2 g     F .text	0000000000000040              item_user_lock_free()
000000000094fbb2 g     F .text	00000000000000d5              mi_uniquedef_write
000000000073865c  w    F .text	0000000000000040              Item_func_div::Item_func_div(Item*, Item*)
0000000000558d32  w    F .text	0000000000000051              Bitmap<64u>::set_prefix(unsigned int)
0000000000839ddc g     F .text	0000000000000184              Load_log_event::Load_log_event(char const*, unsigned int, Format_description_log_event const*)
00000000005596c2  w    F .text	000000000000001b              I_List<THD>::I_List()
00000000007dad5c  w    F .text	0000000000000011              Item_func_char_length::func_name() const
000000000136fbd0 g     O .bss	0000000000000008              opt_logname
00000000007907a0 g     F .text	00000000000000e7              Item_ref::make_field(Send_field*)
00000000007c1f7a  w    F .text	0000000000000041              Create_func_sqrt::~Create_func_sqrt()
0000000000783dbe g     F .text	0000000000000097              Item_field::val_int()
00000000007c32a8  w    F .text	0000000000000046              Item_func_min::~Item_func_min()
0000000000855a43 g     F .text	000000000000006f              my_time_to_str
00000000006ec59a g     F .text	000000000000008a              Signal_common::assign_defaults(MYSQL_ERROR*, bool, MYSQL_ERROR::enum_warning_level, int)
0000000000b62026 g     F .text	00000000000000c8              ha_partition::is_crashed() const
00000000008023c6 g     F .text	00000000000000c8              Item_sum_hybrid::val_int()
0000000000765f32  w    F .text	000000000000000f              Field_null::max_display_length()
0000000000877094  w    F .text	0000000000000035              Item_proc_string::set(char const*, unsigned int, charset_info_st*)
000000000082d13e  w    F .text	0000000000000043              Format_description_log_event::version_is_valid() const
00000000010c1460  w    O .data.rel.ro	0000000000000080              vtable for Begin_load_query_log_event
000000000056154c g     F .text	0000000000000250              net_send_error_packet(THD*, unsigned int, char const*, char const*)
000000000080540c g     F .text	000000000000014d              Item_variance_field::Item_variance_field(Item_sum_variance*)
000000000121bae0 g     O .data	0000000000000100              to_lower_geostd8_general_ci
00000000007af148  w    F .text	000000000000003f              in_double::create_item()
0000000001212f80 g     O .data	0000000000000101              ctype_latin1_general_cs
00000000007b50da g     F .text	000000000000011e              Create_func_log::create_native(THD*, st_mysql_lex_string, List<Item>*)
00000000006a18c2 g     F .text	00000000000002c0              mysql_multi_update(THD*, TABLE_LIST*, List<Item>*, List<Item>*, Item*, unsigned long long, enum_duplicates, bool, st_select_lex_unit*, st_select_lex*, multi_update**)
00000000007dfe1a g     F .text	0000000000000122              Item_func_isempty::val_int()
00000000008f6c5d g     F .text	0000000000000093              my_thread_name
00000000007aebfa  w    F .text	0000000000000014              Item_func_coalesce::result_type() const
00000000007f3430  w    F .text	0000000000000058              Item_func_format::~Item_func_format()
000000000077bcaa  w    F .text	000000000000000f              handler::indexes_are_disabled()
00000000007ece60 g     F .text	00000000000000a9              Item_func_make_set::print(String*, enum_query_type)
0000000000849456  w    F .text	000000000000000f              Delete_file_log_event::get_type_code()
000000000077ebee g     F .text	000000000000009d              Item::save_time_in_field(Field*)
0000000000568aae g     F .text	000000000000003f              Rpl_filter::init_table_rule_array(st_dynamic_array*, bool*)
00000000005e95ec  w    F .text	000000000000001d              List_iterator_fast<List<Item> >::operator++(int)
00000000006eb36a g     F .text	0000000000000137              Event_parse_data::check_if_in_the_past(THD*, long)
00000000012cb400 g     O .data	00000000000000b0              my_charset_utf32_spanish_uca_ci
00000000010bd540  w    O .data.rel.ro	0000000000000398              vtable for Item_func_dayname
00000000006eda16  w    F .text	0000000000000046              Resignal_statement::~Resignal_statement()
00000000008c41c6 g     F .text	00000000000000e9              Event_scheduler::Event_scheduler(Event_queue*)
00000000008f8af0 g     F .text	00000000000001e2              my_safe_itoa
00000000007bfdc0  w    F .text	0000000000000026              Create_func_intersects::~Create_func_intersects()
0000000000766646  w    F .text	000000000000000f              Field_time::match_collation_to_optimize_range() const
00000000007b9cb8  w    F .text	0000000000000048              Item_real_func::Item_real_func(Item*)
0000000000562c7a g     F .text	0000000000000066              Protocol::store(char const*, charset_info_st*)
00000000007c1bf6  w    F .text	0000000000000041              Create_func_sha2::~Create_func_sha2()
0000000000ba3ee4 g     F .text	000000000000001c              strend
0000000000893b84  w    F .text	0000000000000041              Gis_multi_polygon::~Gis_multi_polygon()
00000000007e1a32  w    F .text	000000000000000f              Item_func_isempty::select_optimize() const
0000000000b5a700 g     F .text	00000000000000ec              find_eoln_buff(Transparent_file*, unsigned long long, unsigned long long, int*)
00000000008eb868 g     F .text	0000000000000112              my_compress
0000000000b8f9ed g     F .text	00000000000000c2              my_caseup_ujis
00000000007be41e  w    F .text	000000000000002d              Create_func_crc32::Create_func_crc32()
0000000000826eb2 g     F .text	0000000000000034              trans_has_updated_non_trans_table(THD const*)
0000000001375840 g     O .bss	0000000000000060              my_locale_de_BE
00000000008171c4  w    F .text	0000000000000014              Item_func_str_to_date::field_type() const
0000000000809c88  w    F .text	000000000000001e              Item_sum_udf_int::fix_length_and_dec()
00000000008c02fa g     F .text	0000000000000306              Item_func_xml_update::val_str(String*)
0000000000849af6  w    F .text	0000000000000040              Log_event::continue_group(Relay_log_info*)
0000000000b636b2 g     F .text	0000000000000125              ha_partition::change_table_ptr(TABLE*, TABLE_SHARE*)
00000000008498e8  w    F .text	0000000000000015              Relay_log_info::get_row_stmt_start_timestamp()
00000000007f3392  w    F .text	000000000000002b              Item_func_make_set::~Item_func_make_set()
0000000000809f3c  w    F .text	000000000000000f              Item_func_group_concat::result_type() const
00000000006f01dc g     F .text	000000000000023a              Binlog_relay_IO_delegate::after_reset_slave(THD*, Master_info*)
000000000095aa86 g     F .text	0000000000000349              _mi_dpos
0000000000658d4c  w    F .text	0000000000000023              Field::offset(unsigned char*)
00000000007ba6fe  w    F .text	000000000000003d              Item_func_max::Item_func_max(List<Item>&)
00000000007cdf0e g     F .text	00000000000005cd              Item_func_field::val_int()
00000000005d81e6 g     F .text	00000000000001f9              MYSQL_ERROR::MYSQL_ERROR(st_mem_root*)
000000000075d72c g     F .text	000000000000008d              Field_enum::cmp(unsigned char const*, unsigned char const*)
00000000007c132c  w    F .text	0000000000000041              Create_func_period_diff::~Create_func_period_diff()
00000000005ed75c g     F .text	000000000000017f              Alter_info::Alter_info(Alter_info const&, st_mem_root*)
000000000109b048  w    O .data.rel.ro	0000000000000398              vtable for Item_real_func
0000000000558d9a  w    F .text	0000000000000046              String::String()
000000000077ba58  w    F .text	0000000000000060              handler::index_read_last_map(unsigned char*, unsigned char const*, unsigned long)
00000000008c28ae  w    F .text	0000000000000046              Item_func_xml_extractvalue::~Item_func_xml_extractvalue()
0000000000766032  w    F .text	000000000000000f              Field_timestamp::zero_pack() const
00000000007bd840  w    F .text	0000000000000026              Create_func_as_wkb::~Create_func_as_wkb()
00000000008737ba  w    F .text	0000000000000046              TRP_GROUP_MIN_MAX::~TRP_GROUP_MIN_MAX()
0000000000795bec g     F .text	000000000000007a              Item_result_field::cleanup()
0000000000982704 g     F .text	000000000000004e              ha_heap::get_auto_increment(unsigned long long, unsigned long long, unsigned long long, unsigned long long*, unsigned long long*)
00000000006bb31c  w    F .text	0000000000000039              I_P_List<TABLE, TABLE_share, I_P_List_null_counter, I_P_List_no_push_back<TABLE> >::empty()
00000000013708cc g     O .bss	0000000000000004              key_file_log_event_info
00000000010885c0  w    O .data.rel.ro	0000000000000030              vtable for Create_func_arg1
00000000013866f0 g     O .bss	0000000000000008              Create_func_sec_to_time::s_singleton
000000000088a5fc g     F .text	0000000000000091              sp_pcontext::diff_cursors(sp_pcontext*, bool)
00000000010695e0  w    O .data.rel.ro	0000000000000050              vtable for Field_iterator
000000000082a2b4 g     F .text	000000000000006d              flush_error_log()
000000000136bec0 g     O .data	0000000000000025              _dig_vec_lower
000000000088e6c6 g     F .text	000000000000018d              Gis_line_string::is_closed(int*) const
00000000007b38fa g     F .text	0000000000000055              Create_func_endpoint::create(THD*, Item*)
000000000075d420 g     F .text	0000000000000023              Field_enum::val_real()
000000000056766a  w    F .text	000000000000000f              Item_string::result_type() const
0000000000809f2a  w    F .text	0000000000000011              Item_func_group_concat::func_name() const
0000000000843742 g     F .text	00000000000001d0              Rows_log_event::write_data_header(st_io_cache*)
000000000088455a g     F .text	000000000000008f              sp_head::do_cont_backpatch()
00000000010ddce0 g     O .data	0000000000000118              engines_fields_info
000000000059a946  w    F .text	00000000000001f6              Acl_table_intact::report_error(unsigned int, char const*, ...)
00000000007ddc06  w    F .text	0000000000000046              Item_func_plus::~Item_func_plus()
00000000007942ee g     F .text	000000000000011b              Item_cache_str::val_int()
00000000005b148e  w    F .text	0000000000000076              Field_iterator_table_ref::~Field_iterator_table_ref()
00000000006785f2  w    F .text	0000000000000044              Trigger_error_handler::handle_condition(THD*, unsigned int, char const*, MYSQL_ERROR::enum_warning_level, char const*, MYSQL_ERROR**)


